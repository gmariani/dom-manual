<asdoc>

<interfaceRec name='nsIDOMEventTarget' fullname='gecko.events:nsIDOMEventTarget' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\gecko\events\nsIDOMEventTarget.as' namespace='gecko.events' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<internal><![CDATA[http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMEventTarget.idl

	 ]]></internal>
</interfaceRec>
<classRec name='MouseEvent' fullname='gecko.events:MouseEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\gecko\events\MouseEvent.as' namespace='gecko.events' access='public' baseclass='dom.events:MouseEvent' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DOMMouseScroll event is sent when the mouse wheel is moved. The target of 

	 this event is the element that was under the mouse pointer when the mouse wheel 

	 was scrolled, similar to the click event.

	 

	 ]]></description>
<see><![CDATA[http://developer.mozilla.org/en/Gecko-Specific_DOM_Events

	 ]]></see>
</classRec>
<method name='axis' fullname='gecko.events:MouseEvent/axis/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Specifies the axis of the scroll gesture (horizontal or vertical). 

		 This attribute was added in Firefox 3.5

		 

		 ]]></description>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=378028 bug 378028

		 ]]></see>
</method>
<method name='detail' fullname='gecko.events:MouseEvent/detail/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[

		 Specifies the number of “ticks” that the mouse wheel moved. 

		 Positive values mean “down” / “right”, negative “up” / “left”.

		 ]]></description>
</method>
<field name='HORIZONTAL_AXIS' fullname='gecko.events:MouseEvent/HORIZONTAL_AXIS' type='Number' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[

		 Unknown value

		 ]]></description>
</field>
<field name='VERTICAL_AXIS' fullname='gecko.events:MouseEvent/VERTICAL_AXIS' type='Number' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[

		 Unknown value

		 ]]></description>
</field>
<classRec name='LSExceptionCode' fullname='dom.loadsave:LSExceptionCode' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSExceptionCode.as' namespace='dom.loadsave' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An integer indicating the type of error generated. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSException-LSExceptionCode W3C - LSExceptionCode

	 

	 ]]></see>
</classRec>
<field name='PARSE_ERR' fullname='dom.loadsave:LSExceptionCode/PARSE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='81' >
<description><![CDATA[

		 If an attempt was made to load a document, or an XML Fragment, using LSParser and the processing has been stopped. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#PARSE_ERR W3C - LSExceptionCode.PARSE_ERR

		 

		 ]]></see>
</field>
<field name='SERIALIZE_ERR' fullname='dom.loadsave:LSExceptionCode/SERIALIZE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='82' >
<description><![CDATA[

		 If an attempt was made to serialize a Node using LSSerializer and the processing has been stopped. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#SERIALIZE_ERR W3C - LSExceptionCode.SERIALIZE_ERR

		 

		 ]]></see>
</field>
<classRec name='DOMImplementationLSMode' fullname='dom.loadsave:DOMImplementationLSMode' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\DOMImplementationLSMode.as' namespace='dom.loadsave' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Integer parser mode constants.

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementation W3C - DOMImplementationLS

	 

	 ]]></see>
</classRec>
<field name='MODE_ASYNCHRONOUS' fullname='dom.loadsave:DOMImplementationLSMode/MODE_ASYNCHRONOUS' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 Create an asynchronous LSParser.

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-MODE_ASYNCH W3C - DOMImplementationLSMode.MODE_ASYNCHRONOUS

		 

		 ]]></see>
</field>
<field name='MODE_SYNCHRONOUS' fullname='dom.loadsave:DOMImplementationLSMode/MODE_SYNCHRONOUS' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 Create a synchronous LSParser.

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-MODE_SYNC W3C - DOMImplementationLSMode.MODE_SYNCHRONOUS

		 

		 ]]></see>
</field>
<interfaceRec name='LSInput' fullname='dom.loadsave:LSInput' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSInput.as' namespace='dom.loadsave' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput

	 

	 ]]></see>
</interfaceRec>
<method name='baseURI' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:baseURI/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-baseURI

		 

		 ]]></see>
</method>
<method name='byteStream' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:byteStream/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave.types:LSInputStream'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-byteStream

		 

		 ]]></see>
</method>
<method name='certifiedText' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:certifiedText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-certifiedText

		 

		 ]]></see>
</method>
<method name='characterStream' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:characterStream/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave.types:LSReader'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-characterStream

		 

		 ]]></see>
</method>
<method name='encoding' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:encoding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-encoding

		 

		 ]]></see>
</method>
<method name='publicId' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:publicId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-publicId

		 

		 ]]></see>
</method>
<method name='stringData' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:stringData/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-stringData

		 

		 ]]></see>
</method>
<method name='systemId' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:systemId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-systemId

		 

		 ]]></see>
</method>
<method name='baseURI' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:baseURI/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='byteStream' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:byteStream/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.loadsave.types:LSInputStream' param_defaults='undefined' result_type='void'>
</method>
<method name='certifiedText' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:certifiedText/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='characterStream' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:characterStream/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.loadsave.types:LSReader' param_defaults='undefined' result_type='void'>
</method>
<method name='encoding' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:encoding/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='publicId' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:publicId/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='stringData' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:stringData/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='systemId' fullname='dom.loadsave:LSInput/dom.loadsave:LSInput:systemId/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='LSProgressEvent' fullname='dom.loadsave:LSProgressEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSProgressEvent.as' namespace='dom.loadsave' access='public' baseclass='dom.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface represents a progress event object that notifies the application about progress as a document is parsed.

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent

	 

	 ]]></see>
</classRec>
<method name='input' fullname='dom.loadsave:LSProgressEvent/input/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSInput'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-input

		 

		 ]]></see>
</method>
<method name='position' fullname='dom.loadsave:LSProgressEvent/position/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-position

		 

		 ]]></see>
</method>
<method name='totalSize' fullname='dom.loadsave:LSProgressEvent/totalSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-totalSize

		 

		 ]]></see>
</method>
<interfaceRec name='LSResourceResolver' fullname='dom.loadsave:LSResourceResolver' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSResourceResolver.as' namespace='dom.loadsave' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSResourceResolver

	 

	 ]]></see>
</interfaceRec>
<method name='resolveResource' fullname='dom.loadsave:LSResourceResolver/dom.loadsave:LSResourceResolver:resolveResource' isStatic='false' isFinal='false' isOverride='false'  param_names='type;namespaceURI;publicId;systemId;baseURI' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='dom.loadsave:LSInput'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[type

		 ]]></param>
<param><![CDATA[namespaceURI

		 ]]></param>
<param><![CDATA[publicId

		 ]]></param>
<param><![CDATA[systemId

		 ]]></param>
<param><![CDATA[baseURI

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSResourceResolver-resolveResource

		 

		 ]]></see>
</method>
<interfaceRec name='LSOutput' fullname='dom.loadsave:LSOutput' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSOutput.as' namespace='dom.loadsave' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput

	 

	 ]]></see>
</interfaceRec>
<method name='byteStream' fullname='dom.loadsave:LSOutput/dom.loadsave:LSOutput:byteStream/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave.types:LSInputStream'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-byteStream

		 

		 ]]></see>
</method>
<method name='characterStream' fullname='dom.loadsave:LSOutput/dom.loadsave:LSOutput:characterStream/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave.types:LSReader'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-characterStream

		 

		 ]]></see>
</method>
<method name='encoding' fullname='dom.loadsave:LSOutput/dom.loadsave:LSOutput:encoding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-encoding

		 

		 ]]></see>
</method>
<method name='systemId' fullname='dom.loadsave:LSOutput/dom.loadsave:LSOutput:systemId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-systemId

		 

		 ]]></see>
</method>
<method name='byteStream' fullname='dom.loadsave:LSOutput/dom.loadsave:LSOutput:byteStream/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.loadsave.types:LSInputStream' param_defaults='undefined' result_type='void'>
</method>
<method name='characterStream' fullname='dom.loadsave:LSOutput/dom.loadsave:LSOutput:characterStream/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.loadsave.types:LSReader' param_defaults='undefined' result_type='void'>
</method>
<method name='encoding' fullname='dom.loadsave:LSOutput/dom.loadsave:LSOutput:encoding/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='systemId' fullname='dom.loadsave:LSOutput/dom.loadsave:LSOutput:systemId/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='DocumentLS' fullname='dom.loadsave:DocumentLS' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\DocumentLS.as' namespace='dom.loadsave' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DocumentLS interface provides a mechanism by which the content of a document can be replaced with the 

	 DOM tree produced when loading a URI, or parsing a string. The expectation is that an instance of the 

	 DocumentLS interface can be obtained by using binding-specific casting methods on an instance of the 

	 Document interface.

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

	 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-Interfaces-DocumentLS W3C - DocumentLS

	 

	 ]]></see>
</interfaceRec>
<method name='abort' fullname='dom.loadsave:DocumentLS/dom.loadsave:DocumentLS:abort' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 If the document is currently being loaded as a result of the method load being invoked the loading and parsing is immediately 

		 aborted. The possibly partial result of parsing the document is discarded and the document is cleared. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-abort W3C - DocumentLS.abort()

		 

		 ]]></see>
</method>
<method name='load' fullname='dom.loadsave:DocumentLS/dom.loadsave:DocumentLS:load' isStatic='false' isFinal='false' isOverride='false'  param_names='uri' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Replaces the content of the document with the result of parsing the given URI. Invoking this method 

		 will either block the caller or return to the caller immediately depending on the value of the async 

		 attribute. Once the document is fully loaded the document will fire a "load" event that the caller can 

		 register as a listener for. If an error occurs the document will fire an "error" event so that the caller 

		 knows that the load failed (see ParseErrorEvent). If this method is called on a document that is currently 

		 loading, the current load is interrupted and the new URI load is initiated. 

		 

		 <p><strong>Note (Mozilla):</strong> As of at least Gecko 1.9, this no longer supports cross-site loading 

		 of documents (Use XMLHttpRequest instead).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var xmlDoc = document.implementation.createDocument("", "test", null);

		 function documentLoaded (e) {

		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string

		 }

		 xmlDoc.addEventListener("load", documentLoaded, false);

		 xmlDoc.load('querydata.xml');</listing>

		 

		 ]]></example>
<param><![CDATA[uri The URI reference for the XML file to be loaded. If this is a relative URI, the base URI used by the implementation is implementation dependent.

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<return><![CDATA[If async is set to true load returns true if the document load was successfully initiated. If an 

		 error occurred when initiating the document load load returns false. If async is set to false load returns 

		 true if the document was successfully loaded and parsed. If an error occurred when either loading or parsing 

		 the URI load returns false.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.load MDC - Document.load()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-load W3C - DocumentLS.load()

		 

		 ]]></see>
</method>
<method name='loadXML' fullname='dom.loadsave:DocumentLS/dom.loadsave:DocumentLS:loadXML' isStatic='false' isFinal='false' isOverride='false'  param_names='source' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Replace the content of the document with the result of parsing the input string, this method is always synchronous. 

		 This method always parses from a DOMString, which means the data is always UTF16. All other encoding information is ignored. 

		 

		 ]]></description>
<param><![CDATA[source A string containing an XML document.

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<return><![CDATA[true if parsing the input string succeeded without errors, otherwise false.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-loadXML W3C - DocumentLS.loadXML()

		 

		 ]]></see>
</method>
<method name='saveXML' fullname='dom.loadsave:DocumentLS/dom.loadsave:DocumentLS:saveXML' isStatic='false' isFinal='false' isOverride='false'  param_names='snode' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Save the document or the given node to a string (i.e. serialize the document or node). 

		 

		 ]]></description>
<param><![CDATA[snode Specifies what to serialize, if this parameter is null the whole document is serialized, if it's non-null the given node is serialized.

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<return><![CDATA[The serialized document or null.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-saveXML W3C - DocumentLS.saveXML()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if the node passed in as the node parameter is from an other document.

		 

		 ]]></throws>
</method>
<method name='async' fullname='dom.loadsave:DocumentLS/dom.loadsave:DocumentLS:async/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Indicates whether the method load should be synchronous or asynchronous. When the async attribute is set 

		 to true the load method returns control to the caller before the document has completed loading.

		 

		 ]]></description>
<default><![CDATA[false

		 

		 ]]></default>
<example><![CDATA[
		 <listing>

		 function loadXMLData(e) {

		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string

		 }

		 

		 var xmlDoc = document.implementation.createDocument("", "test", null);

		 xmlDoc.async = false;

		 xmlDoc.onload = loadXMLData;

		 xmlDoc.load('querydata.xml');</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.async MDC - Document.async

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-async W3C - DocumentLS.async

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the implementation doesn't support the mode the attribute is being set to.

		 

		 ]]></throws>
</method>
<method name='async' fullname='dom.loadsave:DocumentLS/dom.loadsave:DocumentLS:async/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='LSSerializer' fullname='dom.loadsave:LSSerializer' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSSerializer.as' namespace='dom.loadsave' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer

	 

	 ]]></see>
</interfaceRec>
<method name='write' fullname='dom.loadsave:LSSerializer/dom.loadsave:LSSerializer:write' isStatic='false' isFinal='false' isOverride='false'  param_names='nodeArg;destination' param_types='dom.core:Node;dom.loadsave:LSOutput' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[nodeArg

		 ]]></param>
<param><![CDATA[destination

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-write

		 

		 ]]></see>
</method>
<method name='writeToString' fullname='dom.loadsave:LSSerializer/dom.loadsave:LSSerializer:writeToString' isStatic='false' isFinal='false' isOverride='false'  param_names='nodeArg' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[nodeArg

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-writeToString

		 

		 ]]></see>
</method>
<method name='writeToURI' fullname='dom.loadsave:LSSerializer/dom.loadsave:LSSerializer:writeToURI' isStatic='false' isFinal='false' isOverride='false'  param_names='nodeArg;uri' param_types='dom.core:Node;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[nodeArg

		 ]]></param>
<param><![CDATA[uri

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-writeToURI

		 

		 ]]></see>
</method>
<method name='domConfig' fullname='dom.loadsave:LSSerializer/dom.loadsave:LSSerializer:domConfig/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMConfiguration'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-config

		 

		 ]]></see>
</method>
<method name='filter' fullname='dom.loadsave:LSSerializer/dom.loadsave:LSSerializer:filter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSSerializerFilter'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-LSSerializerFilter

		 

		 ]]></see>
</method>
<method name='newLine' fullname='dom.loadsave:LSSerializer/dom.loadsave:LSSerializer:newLine/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-newLine

		 

		 ]]></see>
</method>
<method name='filter' fullname='dom.loadsave:LSSerializer/dom.loadsave:LSSerializer:filter/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.loadsave:LSSerializerFilter' param_defaults='undefined' result_type='void'>
</method>
<method name='newLine' fullname='dom.loadsave:LSSerializer/dom.loadsave:LSSerializer:newLine/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='LSSerializerFilter' fullname='dom.loadsave:LSSerializerFilter' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSSerializerFilter.as' namespace='dom.loadsave' access='public' baseclass='dom.tr.traversal:NodeFilter' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializerFilter

	 

	 ]]></see>
</classRec>
<method name='whatToShow' fullname='dom.loadsave:LSSerializerFilter/whatToShow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializerFilter-whatToShow

		 

		 ]]></see>
</method>
<interfaceRec name='DOMImplementationLS' fullname='dom.loadsave:DOMImplementationLS' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\DOMImplementationLS.as' namespace='dom.loadsave' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 DOMImplementationLS contains the factory methods for creating Load and Save objects. 

	 

	 The expectation is that an instance of the DOMImplementationLS interface can be obtained by using 

	 binding-specific casting methods on an instance of the DOMImplementation interface or, if the Document 

	 supports the feature "Core"  version "3.0" defined in DOM Level 3 Core, by using the method 

	 DOMImplementation.getFeature with parameter values "LS" (or "LS-Async") and "3.0" (respectively). 

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementation W3C - DOMImplementationLS

	 

	 ]]></see>
</interfaceRec>
<method name='createLSInput' fullname='dom.loadsave:DOMImplementationLS/dom.loadsave:DOMImplementationLS:createLSInput' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSInput'>
<description><![CDATA[

		 Create a new empty input source object where LSInput.characterStream, LSInput.byteStream, LSInput.stringData  

		 LSInput.systemId, LSInput.publicId, LSInput.baseURI, and LSInput.encoding are null, and LSInput.certifiedText is false. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[The newly created input object. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSInput W3C - DOMImplementationLS.createLSInput()

		 

		 ]]></see>
</method>
<method name='createLSOutput' fullname='dom.loadsave:DOMImplementationLS/dom.loadsave:DOMImplementationLS:createLSOutput' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSOutput'>
<description><![CDATA[

		 Create a new empty output destination object where LSOutput.characterStream, LSOutput.byteStream, LSOutput.systemId, 

		 LSOutput.encoding are null. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[The newly created output object. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSOutput W3C - DOMImplementationLS.createLSOutput()

		 

		 ]]></see>
</method>
<method name='createLSParser' fullname='dom.loadsave:DOMImplementationLS/dom.loadsave:DOMImplementationLS:createLSParser' isStatic='false' isFinal='false' isOverride='false'  param_names='mode;schemaType' param_types='Number;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.loadsave:LSParser'>
<description><![CDATA[

		 Create a new LSParser. The newly constructed parser may then be configured by means of its 

		 DOMConfiguration object, and used to parse documents by means of its parse method. 

		 

		 ]]></description>
<param><![CDATA[mode The mode argument is either MODE_SYNCHRONOUS or MODE_ASYNCHRONOUS, if mode is 

		 MODE_SYNCHRONOUS then the LSParser that is created will operate in synchronous mode, if it's 

		 MODE_ASYNCHRONOUS then the LSParser that is created will operate in asynchronous mode. 

		 ]]></param>
<param><![CDATA[schemaType An absolute URI representing the type of the schema language used during 

		 the load of a Document using the newly created LSParser. Note that no lexical checking is done 

		 on the absolute URI. In order to create a LSParser for any kind of schema types (i.e. the LSParser 

		 will be free to use any schema found), use the value null. 

		 

		 <p><strong>Note:</strong> For W3C XML Schema [XML Schema Part 1], applications must use the value 

		 "http://www.w3.org/2001/XMLSchema". For XML DTD [XML 1.0], applications must use the value 

		 "http://www.w3.org/TR/REC-xml". Other Schema languages are outside the scope of the W3C and therefore 

		 should recommend an absolute URI in order to use this method. </p>

		 

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[The newly created LSParser object. This LSParser is either synchronous or asynchronous depending on the value of the mode argument. 

		 

		 <p><strong>Note:</strong> By default, the newly created LSParser does not contain a DOMErrorHandler, 

		 i.e. the value of the "error-handler" configuration parameter is null. However, implementations may provide 

		 a default error handler at creation time. In that case, the initial value of the "error-handler" configuration 

		 parameter on the new LSParser object contains a reference to the default error handler. </p>

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSParser W3C - DOMImplementationLS.createLSParser()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the requested mode or schema type is not supported. 

		 

		 ]]></throws>
</method>
<method name='createLSSerializer' fullname='dom.loadsave:DOMImplementationLS/dom.loadsave:DOMImplementationLS:createLSSerializer' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSSerializer'>
<description><![CDATA[

		 Create a new LSSerializer object. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[The newly created LSSerializer object.

		 

		 <p><strong>Note:</strong> By default, the newly created LSSerializer  has no DOMErrorHandler, i.e. the value of the 

		 "error-handler" configuration parameter is null. However, implementations may provide a default error handler at creation time. 

		 In that case, the initial value of the "error-handler"  configuration parameter on the new LSSerializer object contains a 

		 reference to the default error handler. </p>

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSSerializer W3C - DOMImplementationLS.createLSSerializer()

		 

		 ]]></see>
</method>
<classRec name='LSParserFilter' fullname='dom.loadsave:LSParserFilter' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSParserFilter.as' namespace='dom.loadsave' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter

	 

	 ]]></see>
</classRec>
<method name='acceptNode' fullname='dom.loadsave:LSParserFilter/acceptNode' isStatic='false' isFinal='false' isOverride='false'  param_names='nodeArg' param_types='dom.core:Node' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[nodeArg

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-acceptNode

		 

		 ]]></see>
</method>
<method name='startElement' fullname='dom.loadsave:LSParserFilter/startElement' isStatic='false' isFinal='false' isOverride='false'  param_names='elementArg' param_types='dom.core:Element' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[elementArg

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-startElement

		 

		 ]]></see>
</method>
<method name='whatToShow' fullname='dom.loadsave:LSParserFilter/whatToShow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-whatToShow

		 

		 ]]></see>
</method>
<field name='FILTER_ACCEPT' fullname='dom.loadsave:LSParserFilter/FILTER_ACCEPT' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 Accept the node.

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_ACCEPT

		 

		 ]]></see>
</field>
<field name='FILTER_INTERRUPT' fullname='dom.loadsave:LSParserFilter/FILTER_INTERRUPT' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 Interrupt the normal processing of the document. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_INTERRUPT

		 

		 ]]></see>
</field>
<field name='FILTER_REJECT' fullname='dom.loadsave:LSParserFilter/FILTER_REJECT' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 Reject the node and its children.

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_REJECT

		 

		 ]]></see>
</field>
<field name='FILTER_SKIP' fullname='dom.loadsave:LSParserFilter/FILTER_SKIP' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 Skip this single node. The children of this node will still be considered. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_SKIP

		 

		 ]]></see>
</field>
<classRec name='LSParser' fullname='dom.loadsave:LSParser' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSParser.as' namespace='dom.loadsave' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An interface to an object that is able to build, or augment, a DOM tree from various input sources. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser W3C - LSParser

	 

	 ]]></see>
</classRec>
<method name='abort' fullname='dom.loadsave:LSParser/abort' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-abort

		 

		 ]]></see>
</method>
<method name='parse' fullname='dom.loadsave:LSParser/parse' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Document'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-parse

		 

		 ]]></see>
</method>
<method name='parseURI' fullname='dom.loadsave:LSParser/parseURI' isStatic='false' isFinal='false' isOverride='false'  param_names='uri' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Document'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[uri

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-parseURI

		 

		 ]]></see>
</method>
<method name='parseWithContext' fullname='dom.loadsave:LSParser/parseWithContext' isStatic='false' isFinal='false' isOverride='false'  param_names='input;contextArg;action' param_types='dom.loadsave.types:LSInputStream;dom.core:Node;Number' param_defaults='undefined;undefined;undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[input

		 ]]></param>
<param><![CDATA[contextArg

		 ]]></param>
<param><![CDATA[action

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-parseWithContext

		 

		 ]]></see>
</method>
<method name='async' fullname='dom.loadsave:LSParser/async/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-async

		 

		 ]]></see>
</method>
<method name='busy' fullname='dom.loadsave:LSParser/busy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-busy

		 

		 ]]></see>
</method>
<method name='domConfig' fullname='dom.loadsave:LSParser/domConfig/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMConfiguration'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-config

		 

		 ]]></see>
</method>
<method name='filter' fullname='dom.loadsave:LSParser/filter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSParserFilter'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-filter

		 

		 ]]></see>
</method>
<field name='ACTION_APPEND_AS_CHILDREN' fullname='dom.loadsave:LSParser/ACTION_APPEND_AS_CHILDREN' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 Append the result of the parse operation as children of the context node. For this action to work, 

		 the context node must be an Element or a DocumentFragment. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_APPEND_AS_CHILDREN

		 

		 ]]></see>
</field>
<field name='ACTION_INSERT_AFTER' fullname='dom.loadsave:LSParser/ACTION_INSERT_AFTER' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 Insert the result of the parse operation as the immediately following sibling of the context node. 

		 For this action to work the context node's parent must be an Element or a DocumentFragment. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_AFTER

		 

		 ]]></see>
</field>
<field name='ACTION_INSERT_BEFORE' fullname='dom.loadsave:LSParser/ACTION_INSERT_BEFORE' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 Insert the result of the parse operation as the immediately preceding sibling of the context node. 

		 For this action to work the context node's parent must be an Element or a DocumentFragment.  

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_BEFORE

		 

		 ]]></see>
</field>
<field name='ACTION_REPLACE' fullname='dom.loadsave:LSParser/ACTION_REPLACE' type='Number' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 Replace the context node with the result of the parse operation. For this action to work, the 

		 context node must have a parent, and the parent must be an Element or a DocumentFragment.

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE

		 

		 ]]></see>
</field>
<field name='ACTION_REPLACE_CHILDREN' fullname='dom.loadsave:LSParser/ACTION_REPLACE_CHILDREN' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 Replace all the children of the context node with the result of the parse operation. For this 

		 action to work, the context node must be an Element, a Document, or a DocumentFragment. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE_CHILDREN

		 

		 ]]></see>
</field>
<classRec name='LSLoadEvent' fullname='dom.loadsave:LSLoadEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\LSLoadEvent.as' namespace='dom.loadsave' access='public' baseclass='dom.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent

	 

	 ]]></see>
</classRec>
<method name='input' fullname='dom.loadsave:LSLoadEvent/input/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSInput'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-input

		 

		 ]]></see>
</method>
<method name='newDocument' fullname='dom.loadsave:LSLoadEvent/newDocument/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Document'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-document

		 

		 ]]></see>
</method>
<classRec name='ValidationType' fullname='dom.validation:ValidationType' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\validation\ValidationType.as' namespace='dom.validation' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Validation type constants stored in NodeEditVAL.

	 

	 <p><strong>Note:</strong> Moved to ValidationType specifically for this documentation. Constants are not allowed in an interface.</p>

	 

	 ]]></description>
<see><![CDATA[dom.validation.NodeEditVAL

	 ]]></see>
</classRec>
<field name='VAL_INCOMPLETE' fullname='dom.validation:ValidationType/VAL_INCOMPLETE' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 Check if the node's immediate children are those expected by the content model. This node's trailing required 

		 children could be missing. It includes VAL_NS_WF. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_INCOMPLETE W3C - NodeEditVAL.VAL_INCOMPLETE

		 

		 ]]></see>
</field>
<field name='VAL_NS_WF' fullname='dom.validation:ValidationType/VAL_NS_WF' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 Check if the node is namespace well-formed. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_NS_WF W3C - NodeEditVAL.VAL_NS_WF

		 

		 ]]></see>
</field>
<field name='VAL_SCHEMA' fullname='dom.validation:ValidationType/VAL_SCHEMA' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 Check if the node's entire subtree are those expected by the content model. It includes VAL_NS_WF. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_SCHEMA W3C - NodeEditVAL.VAL_SCHEMA

		 

		 ]]></see>
</field>
<field name='VAL_WF' fullname='dom.validation:ValidationType/VAL_WF' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 Check if the node is  well-formed.

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_WF W3C - NodeEditVAL.VAL_WF

		 

		 ]]></see>
</field>
<classRec name='ExceptionVALCode' fullname='dom.validation:ExceptionVALCode' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\validation\ExceptionVALCode.as' namespace='dom.validation' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An integer indicating the type of error generated. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMVAL 3

	 ]]></playerversion>
<since><![CDATA[DOMVAL 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL-codes W3C - ExceptionVALCode

	 

	 ]]></see>
</classRec>
<field name='NO_SCHEMA_AVAILABLE_ERR' fullname='dom.validation:ExceptionVALCode/NO_SCHEMA_AVAILABLE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='71' >
<description><![CDATA[

		 This error occurs when the operation cannot complete due to an unavailable schema. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL-NO_SCHEMA_AVAILABLE_ERR W3C - ExceptionVALCode.NO_SCHEMA_AVAILABLE_ERR

		 

		 ]]></see>
</field>
<interfaceRec name='ExceptionVAL' fullname='dom.validation:ExceptionVAL' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\validation\ExceptionVAL.as' namespace='dom.validation' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Some Validation operations may throw an ExceptionVAL as described in their descriptions. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMVAL 3

	 ]]></playerversion>
<since><![CDATA[DOMVAL 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL W3C - ExceptionVAL

	 

	 ]]></see>
</interfaceRec>
<method name='code' fullname='dom.validation:ExceptionVAL/dom.validation:ExceptionVAL:code/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The specific exception code.

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL W3C - ExceptionVAL

		 

		 ]]></see>
</method>
<classRec name='ContentTypeVAL' fullname='dom.validation:ContentTypeVAL' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\validation\ContentTypeVAL.as' namespace='dom.validation' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Content type constants stored in ElementEditVAL.

	 

	 <p><strong>Note:</strong> Moved to ContentTypeVAL specifically for this documentation. Constants are not allowed in an interface.</p>

	 

	 ]]></description>
<see><![CDATA[dom.validation.ElementEditVAL

	 ]]></see>
</classRec>
<field name='VAL_ANY_CONTENTTYPE' fullname='dom.validation:ContentTypeVAL/VAL_ANY_CONTENTTYPE' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The content model contains unordered child information item(s), i.e., element, processing instruction, unexpanded entity reference, character, and 

		 comment information items as defined in the XML Information Set. If the schema is a DTD, this corresponds to the ANY content model. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_ANY_CONTENTTYPE W3C - ElementEditVAL.VAL_ANY_CONTENTTYPE

		 

		 ]]></see>
</field>
<field name='VAL_ELEMENTS_CONTENTTYPE' fullname='dom.validation:ContentTypeVAL/VAL_ELEMENTS_CONTENTTYPE' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 The content model contains a sequence of element information items  optionally separated by whitespace. If the schema is a DTD, this is the element 

		 content content model; and if the schema is a W3C XML schema, this is the element-only content type. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_ELEMENTS_CONTENTTYPE W3C - ElementEditVAL.VAL_ELEMENTS_CONTENTTYPE

		 

		 ]]></see>
</field>
<field name='VAL_EMPTY_CONTENTTYPE' fullname='dom.validation:ContentTypeVAL/VAL_EMPTY_CONTENTTYPE' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The content model does not allow any content. If the schema is a W3C XML schema, this 

		 corresponds to the empty content type; and if the schema is a DTD, this corresponds to the EMPTY content model. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_EMPTY_CONTENTTYPE W3C - ElementEditVAL.VAL_EMPTY_CONTENTTYPE

		 

		 ]]></see>
</field>
<field name='VAL_MIXED_CONTENTTYPE' fullname='dom.validation:ContentTypeVAL/VAL_MIXED_CONTENTTYPE' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The content model contains a sequence of ordered element information items  optionally interspersed with character data. If the schema is a W3C XML 

		 schema, this corresponds to the mixed  content type. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_MIXED_CONTENTTYPE W3C - ElementEditVAL.VAL_MIXED_CONTENTTYPE

		 

		 ]]></see>
</field>
<field name='VAL_SIMPLE_CONTENTTYPE' fullname='dom.validation:ContentTypeVAL/VAL_SIMPLE_CONTENTTYPE' type='Number' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 The content model contains  character information items. If the schema is a W3C XML schema, then the element has a content type of VAL_SIMPLE_CONTENTTYPE  

		 if the type of the element is a simple type definition, or the type of the element is a complexType whose {content type} is a simple type definition. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_SIMPLE_CONTENTTYPE W3C - ElementEditVAL.VAL_SIMPLE_CONTENTTYPE

		 

		 ]]></see>
</field>
<classRec name='ValidationState' fullname='dom.validation:ValidationState' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\validation\ValidationState.as' namespace='dom.validation' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Validation state constants stored in NodeEditVAL.

	 

	 <p><strong>Note:</strong> Moved to ValidationState specifically for this documentation. Constants are not allowed in an interface.</p>

	 

	 ]]></description>
<see><![CDATA[dom.validation.NodeEditVAL

	 ]]></see>
</classRec>
<field name='VAL_FALSE' fullname='dom.validation:ValidationState/VAL_FALSE' type='Number' isStatic='true' isConst='true' defaultValue='6' >
<description><![CDATA[

		 False if the node is invalid with regards to the operation, or if the operation cannot be done. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_FALSE W3C - NodeEditVAL.VAL_FALSE

		 

		 ]]></see>
</field>
<field name='VAL_TRUE' fullname='dom.validation:ValidationState/VAL_TRUE' type='Number' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 True if the node is valid with regards to the operation, or if the operation can be done. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_TRUE W3C - NodeEditVAL.VAL_TRUE

		 

		 ]]></see>
</field>
<field name='VAL_UNKNOWN' fullname='dom.validation:ValidationState/VAL_UNKNOWN' type='Number' isStatic='true' isConst='true' defaultValue='7' >
<description><![CDATA[

		 The validity of the node is unknown. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_UNKNOWN W3C - NodeEditVAL.VAL_UNKNOWN

		 

		 ]]></see>
</field>
<interfaceRec name='NodeEditVAL' fullname='dom.validation:NodeEditVAL' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\validation\NodeEditVAL.as' namespace='dom.validation' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface is similar to the DOM Level 3 Core Node interface, with methods for guided document editing. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMVAL 3

	 ]]></playerversion>
<since><![CDATA[DOMVAL 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL W3C - NodeEditVAL

	 

	 ]]></see>
</interfaceRec>
<method name='canAppendChild' fullname='dom.validation:NodeEditVAL/dom.validation:NodeEditVAL:canAppendChild' isStatic='false' isFinal='false' isOverride='false'  param_names='newChild' param_types='dom.core:Node' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Determines whether the Node.appendChild operation would make this document not compliant with the VAL_INCOMPLETE validity type. 

		 

		 ]]></description>
<param><![CDATA[newChild Node to be appended.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-canAppendChild W3C - NodeEditVAL.canAppendChild()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canInsertBefore' fullname='dom.validation:NodeEditVAL/dom.validation:NodeEditVAL:canInsertBefore' isStatic='false' isFinal='false' isOverride='false'  param_names='newChild;refChild' param_types='dom.core:Node;dom.core:Node' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Determines whether the Node.insertBefore operation would make this document not compliant with the VAL_INCOMPLETE  validity type. 

		 

		 ]]></description>
<param><![CDATA[newChild Node to be inserted.

		 ]]></param>
<param><![CDATA[refChild Reference Node.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-canInsertBefore W3C - NodeEditVAL.canInsertBefore()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canRemoveChild' fullname='dom.validation:NodeEditVAL/dom.validation:NodeEditVAL:canRemoveChild' isStatic='false' isFinal='false' isOverride='false'  param_names='oldChild' param_types='dom.core:Node' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Determines whether the Node.removeChild operation would make this document not compliant with the VAL_INCOMPLETE  validity type. 

		 

		 ]]></description>
<param><![CDATA[oldChild Node to be removed.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-canRemoveChild W3C - NodeEditVAL.canRemoveChild()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canReplaceChild' fullname='dom.validation:NodeEditVAL/dom.validation:NodeEditVAL:canReplaceChild' isStatic='false' isFinal='false' isOverride='false'  param_names='newChild;oldChild' param_types='dom.core:Node;dom.core:Node' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Determines whether the Node.replaceChild operation would make this document not compliant with the VAL_INCOMPLETE validity type.  

		 

		 ]]></description>
<param><![CDATA[newChild New Node.

		 ]]></param>
<param><![CDATA[oldChild Node to be replaced.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-canReplaceChild W3C - NodeEditVAL.canReplaceChild()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='nodeValidity' fullname='dom.validation:NodeEditVAL/dom.validation:NodeEditVAL:nodeValidity' isStatic='false' isFinal='false' isOverride='false'  param_names='valType' param_types='Number' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Determines if the node is valid relative to the validation type  specified in valType. This operation doesn't normalize 

		 before checking if it is valid. To do so, one would need to explicitly call a normalize method. The difference between 

		 this method and the DocumentEditVAL.validateDocument method is that the latter method only checks to determine whether 

		 the entire document is valid. 

		 

		 ]]></description>
<param><![CDATA[valType Flag to indicate the validation type  checking to be done. 

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#NodeEditVAL-nodeValidity W3C - NodeEditVAL.nodeValidity()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='defaultValue' fullname='dom.validation:NodeEditVAL/dom.validation:NodeEditVAL:defaultValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The default value specified in an attribute or an element declaration or null if unspecified. If the schema is a 

		 W3C XML schema, this is the canonical lexical representation of the default value. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#NodeEditVAL-defaultValue W3C - NodeEditVAL.defaultValue

		 

		 ]]></see>
</method>
<method name='enumeratedValues' fullname='dom.validation:NodeEditVAL/dom.validation:NodeEditVAL:enumeratedValues/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMStringList'>
<description><![CDATA[

		 A DOMStringList, as described in DOM Level 3 Core, of distinct values for an attribute or an element declaration or 

		 null  if unspecified. If the schema is a W3C XML schema, this is a list of strings which are lexical representations 

		 corresponding to the values in the [value] property of the enumeration component for the type of the attribute or element. 

		 It is recommended that the canonical lexical representations of the values be used. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#NodeEditVAL-enumeratedValues W3C - NodeEditVAL.enumeratedValues

		 

		 ]]></see>
</method>
<interfaceRec name='DocumentEditVAL' fullname='dom.validation:DocumentEditVAL' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\validation\DocumentEditVAL.as' namespace='dom.validation' access='public' baseClasses='dom.validation:NodeEditVAL' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An object implementing this interface must also implement the Document interface. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMVAL 3

	 ]]></playerversion>
<since><![CDATA[DOMVAL 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-DocumentEditVAL W3C - DocumentEditVAL

	 

	 ]]></see>
</interfaceRec>
<method name='getDefinedElements' fullname='dom.validation:DocumentEditVAL/dom.validation:DocumentEditVAL:getDefinedElements' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NameList'>
<description><![CDATA[

		 Returns list of all element information item names of global declaration, belonging to the specified namespace. 

		 

		 ]]></description>
<param><![CDATA[namespaceURI namespaceURI of namespace. For DTDs, this is null.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[List of all element information item names belonging to the specified namespace or null if no schema is available. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-getDefinedElements W3C - DocumentEditVAL.getDefinedElements()

		 

		 ]]></see>
</method>
<method name='validateDocument' fullname='dom.validation:DocumentEditVAL/dom.validation:DocumentEditVAL:validateDocument' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Validates the document against the schema, e.g., a DTD or an W3C XML schema or another. Any attempt to modify any part 

		 of the document while validating results in implementation-dependent behavior. In addition, the validation operation itself 

		 cannot modify the document, e.g., for default attributes. This method makes use of the error handler, as described in the 

		 DOM Level 3 Core DOMConfiguration interface, with all errors being SEVERITY_ERROR as defined in the DOMError interface. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-validateDocument W3C - DocumentEditVAL.validateDocument()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='continuousValidityChecking' fullname='dom.validation:DocumentEditVAL/dom.validation:DocumentEditVAL:continuousValidityChecking/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 An attribute specifying whether the validity of the document is continuously enforced. When the attribute 

		 is set to true, the implementation may raise certain exceptions, depending on the situation (see the following).

		 

		 ]]></description>
<default><![CDATA[false

		 

		 ]]></default>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-continuousValidityChecking W3C - DocumentEditVAL.continuousValidityChecking

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the implementation does not support setting this attribute to true.

		 

		 ]]></throws>
<throws><![CDATA[dom.validation.ExceptionVAL NO_SCHEMA_AVAILABLE_ERR: Raised if this attribute is set to true  and a schema is unavailable. 

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException VALIDATION_ERR: Raised if an operation makes this document not compliant with the VAL_INCOMPLETE 

		 validity type or the document is invalid, and this attribute is set to true. 

		 

		 ]]></throws>
</method>
<method name='domConfig' fullname='dom.validation:DocumentEditVAL/dom.validation:DocumentEditVAL:domConfig/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMConfiguration'>
<description><![CDATA[

		 This allows the setting of the error handler, as described in the [DOM Level 3 Core] DOMConfiguration interface. An object implementing 

		 this DocumentEditVAL interface and the DOM Level 3 Core Document interface, which also has a domConfig attribute, needs to only implement 

		 this attribute once. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-domConfig W3C - DocumentEditVAL.domConfig

		 

		 ]]></see>
</method>
<method name='continuousValidityChecking' fullname='dom.validation:DocumentEditVAL/dom.validation:DocumentEditVAL:continuousValidityChecking/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='CharacterDataEditVAL' fullname='dom.validation:CharacterDataEditVAL' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\validation\CharacterDataEditVAL.as' namespace='dom.validation' access='public' baseClasses='dom.validation:NodeEditVAL' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 When validating CharacterData nodes, the NodeEditVAL.nodeValidity  operation must find the nearest parent node 

	 in order to do this; if no parent node is found, VAL_UNKNOWN  is returned. In addition, when VAL_INCOMPLETE  

	 is passed in as an argument to the NodeEditVAL.nodeValidity operation to operate on such nodes, the operation 

	 considers all the text and not just some of it. 

	 

	 <p>An object implementing this interface must also implement CharacterData interface.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMVAL 3

	 ]]></playerversion>
<since><![CDATA[DOMVAL 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL W3C - CharacterDataEditVAL

	 

	 ]]></see>
</interfaceRec>
<method name='canAppendData' fullname='dom.validation:CharacterDataEditVAL/dom.validation:CharacterDataEditVAL:canAppendData' isStatic='false' isFinal='false' isOverride='false'  param_names='arg' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Determines if character data can be appended.

		  

		 ]]></description>
<param><![CDATA[arg Data to be appended.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canAppendData W3C - CharacterDataEditVAL.canAppendData()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canDeleteData' fullname='dom.validation:CharacterDataEditVAL/dom.validation:CharacterDataEditVAL:canDeleteData' isStatic='false' isFinal='false' isOverride='false'  param_names='offset;count' param_types='Number;Number' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Determines if character data can be deleted.

		 

		 ]]></description>
<param><![CDATA[offset Offset.

		 ]]></param>
<param><![CDATA[count Number of 16-bit units to delete.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canDeleteData W3C - CharacterDataEditVAL.canDeleteData()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified offset is negative or greater than the number of 16-bit units in data, or if the specified count is negative. 

		 

		 ]]></throws>
</method>
<method name='canInsertData' fullname='dom.validation:CharacterDataEditVAL/dom.validation:CharacterDataEditVAL:canInsertData' isStatic='false' isFinal='false' isOverride='false'  param_names='offset;arg' param_types='Number;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Determines if character data can be inserted.

		 

		 ]]></description>
<param><![CDATA[offset Offset.

		 ]]></param>
<param><![CDATA[arg Argument to be set.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canInsertData W3C - CharacterDataEditVAL.canInsertData()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified offset is negative or greater than the number of 16-bit units in data. 

		 

		 ]]></throws>
</method>
<method name='canReplaceData' fullname='dom.validation:CharacterDataEditVAL/dom.validation:CharacterDataEditVAL:canReplaceData' isStatic='false' isFinal='false' isOverride='false'  param_names='offset;count;arg' param_types='Number;Number;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Determines if character data can be replaced.

		 

		 ]]></description>
<param><![CDATA[offset Offset.

		 ]]></param>
<param><![CDATA[count Replacement.

		 ]]></param>
<param><![CDATA[arg Argument to be set.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canReplaceData W3C - CharacterDataEditVAL.canReplaceData()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified offset is negative or greater than the number of 16-bit units in data, or if the specified count is negative. 

		 

		 ]]></throws>
</method>
<method name='canSetData' fullname='dom.validation:CharacterDataEditVAL/dom.validation:CharacterDataEditVAL:canSetData' isStatic='false' isFinal='false' isOverride='false'  param_names='arg' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Determines if character data can be set.

		 

		 ]]></description>
<param><![CDATA[arg Argument to be set.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canSetData W3C - CharacterDataEditVAL.canSetData()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='isWhitespaceOnly' fullname='dom.validation:CharacterDataEditVAL/dom.validation:CharacterDataEditVAL:isWhitespaceOnly' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Determines if character data is only whitespace. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-isWhitespaceOnly W3C - CharacterDataEditVAL.isWhitespaceOnly()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<interfaceRec name='ElementEditVAL' fullname='dom.validation:ElementEditVAL' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\validation\ElementEditVAL.as' namespace='dom.validation' access='public' baseClasses='dom.validation:NodeEditVAL' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface also has attributes that are a NameList of elements or attributes which can appear in the specified context. 

	 Some schema languages, i.e., W3C XML schema, define wildcards which provide for validation of attribute and element information 

	 items dependent on their namespace names but independent of their local names. 

	 

	 <p>To expose wildcards, the NameList returns the values that represent the  namespace constraint: 

	 <ul>

	 <li><code>{namespaceURI, name}</code> is <code>{null, ##any}</code> if any;</li>

	 <li><code>{namespaceURI, name}</code> is <code>{namespace_a, ##other}</code> if not and a namespace name (namespace_a);</li>

	 <li><code>{namespaceURI, name}</code> is <code>{null, ##other}</code> if not and absent;</li>

	 <li>Pairs of <code>{namespaceURI, name}</code> with values <code>{a_namespaceURI | null, null}</code> if a set whose members are either namespace names or absent.</li>

	 </ul>

	 </p>

	 

	 <p>An object implementing this interface must also implement the Element interface. </p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMVAL 3

	 ]]></playerversion>
<since><![CDATA[DOMVAL 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL W3C - ElementEditVAL

	 

	 ]]></see>
</interfaceRec>
<method name='canRemoveAttribute' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:canRemoveAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='attrname' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Verifies if an attribute by the given name can be removed.

		 

		 ]]></description>
<param><![CDATA[attrname Name of attribute.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canRemoveAttribute W3C - ElementEditVAL.canRemoveAttribute()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canRemoveAttributeNS' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:canRemoveAttributeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;localName' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Verifies if an attribute by the given local name and namespace can be removed.

		 

		 ]]></description>
<param><![CDATA[namespaceURI The namespace URI of the attribute to remove.

		 ]]></param>
<param><![CDATA[localName Local name of the attribute to be removed.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canRemoveAttributeNS W3C - ElementEditVAL.canRemoveAttributeNS()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canRemoveAttributeNode' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:canRemoveAttributeNode' isStatic='false' isFinal='false' isOverride='false'  param_names='attrNode' param_types='dom.core:Node' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Determines if an attribute node can be removed.

		 

		 ]]></description>
<param><![CDATA[attrNode The Attr node to remove from the attribute list.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canRemoveAttributeNode W3C - ElementEditVAL.canRemoveAttributeNode()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canSetAttribute' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:canSetAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='attrname;attrval' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Determines if the value for specified attribute can be set.

		 

		 ]]></description>
<param><![CDATA[attrname Name of attribute.

		 ]]></param>
<param><![CDATA[attrval Value to be assigned to the attribute.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-ElementEditVAL-canSetAttribute W3C - ElementEditVAL.canSetAttribute()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canSetAttributeNS' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:canSetAttributeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;qualifiedName;value' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Determines if the attribute with given namespace and qualified name can be created if not already present in the attribute list 

		 of the element. If the attribute with the same qualified name and namespaceURI is already present in the element's attribute list, 

		 it tests whether the value of the attribute and its prefix can be set to the new value. 

		 

		 ]]></description>
<param><![CDATA[namespaceURI namespaceURI of namespace.

		 ]]></param>
<param><![CDATA[qualifiedName Qualified name of attribute.

		 ]]></param>
<param><![CDATA[value Value to be assigned to the attribute.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canSetAttributeNS W3C - ElementEditVAL.canSetAttributeNS()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canSetAttributeNode' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:canSetAttributeNode' isStatic='false' isFinal='false' isOverride='false'  param_names='attrNode' param_types='dom.core:Attr' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Determines if an attribute node can be added. 

		 

		 ]]></description>
<param><![CDATA[attrNode Node in which the attribute can possibly be set.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canSetAttributeNode W3C - ElementEditVAL.canSetAttributeNode()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='canSetTextContent' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:canSetTextContent' isStatic='false' isFinal='false' isOverride='false'  param_names='possibleTextContent' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Determines if the text content of this node and its descendants can be set to the string passed in. 

		 

		 ]]></description>
<param><![CDATA[possibleTextContent Possible text content string.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canSetTextContent W3C - ElementEditVAL.canSetTextContent()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='isElementDefined' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:isElementDefined' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Determines if name is defined in the schema. This only applies to global declarations. This method is for non-namespace aware schemas. 

		 

		 ]]></description>
<param><![CDATA[name Name of element.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-isElementDefined W3C - ElementEditVAL.isElementDefined()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='isElementDefinedNS' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:isElementDefinedNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;name' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Determines if name in this namespace is defined in the current context. Thus not only does this apply to global declarations, 

		 but depending on the content, this may also apply to local definitions. This method is for namespace aware schemas. 

		 

		 ]]></description>
<param><![CDATA[namespaceURI namespaceURI of namespace.

		 ]]></param>
<param><![CDATA[name Name of element.

		 ]]></param>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<return><![CDATA[A validation state constant. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-isElementDefinedNS W3C - ElementEditVAL.isElementDefinedNS()

		 ]]></see>
<see><![CDATA[dom.validation.ValidationState

		 

		 ]]></see>
</method>
<method name='allowedAttributes' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:allowedAttributes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NameList'>
<description><![CDATA[

		 A NameList, as described in [DOM Level 3 Core], of all possible attribute information items or wildcards  that can appear as attributes 

		 of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedAttributes W3C - ElementEditVAL.allowedAttributes

		 

		 ]]></see>
</method>
<method name='allowedChildren' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:allowedChildren/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NameList'>
<description><![CDATA[

		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as children 

		 of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedChildren W3C - ElementEditVAL.allowedChildren

		 

		 ]]></see>
</method>
<method name='allowedFirstChildren' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:allowedFirstChildren/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NameList'>
<description><![CDATA[

		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as a first 

		 child of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedFirstChildren W3C - ElementEditVAL.allowedFirstChildren

		 

		 ]]></see>
</method>
<method name='allowedNextSiblings' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:allowedNextSiblings/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NameList'>
<description><![CDATA[

		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a next 

		 sibling of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedNextSiblings W3C - ElementEditVAL.allowedNextSiblings

		 

		 ]]></see>
</method>
<method name='allowedParents' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:allowedParents/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NameList'>
<description><![CDATA[

		 A NameList, as described in [DOM Level 3 Core], of all possible element information items that can appear as a parent this 

		 element, or null  if this element has no context or schema. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedParents W3C - ElementEditVAL.allowedParents

		 

		 ]]></see>
</method>
<method name='allowedPreviousSiblings' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:allowedPreviousSiblings/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NameList'>
<description><![CDATA[

		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a previous 

		 sibling of this element, or null  if this element has no context or schema. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedNextSiblings W3C - ElementEditVAL.allowedNextSiblings

		 

		 ]]></see>
</method>
<method name='contentType' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:contentType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The content type of an element as defined above.

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-ElementEditVAL-contentType W3C - ElementEditVAL.contentType

		 

		 ]]></see>
</method>
<method name='requiredAttributes' fullname='dom.validation:ElementEditVAL/dom.validation:ElementEditVAL:requiredAttributes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NameList'>
<description><![CDATA[

		 A NameList, as described in [DOM Level 3 Core], of required attribute information items that must appear on this element, or null  

		 if this element has no context or schema. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMVAL 3

		 ]]></playerversion>
<since><![CDATA[DOMVAL 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-requiredAttributes W3C - ElementEditVAL.requiredAttributes

		 

		 ]]></see>
</method>
<classRec name='EventExceptionCode' fullname='dom.events:EventExceptionCode' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\EventExceptionCode.as' namespace='dom.events' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An integer indicating the type of error generated.

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 2

	 ]]></playerversion>
<since><![CDATA[DOMEvents 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventException-EventExceptionCode W3C - DOM 3 Events: EventExceptionCode

	 

	 ]]></see>
<modified><![CDATA[DOMEvents 3

	 ]]></modified>
</classRec>
<field name='DISPATCH_REQUEST_ERR' fullname='dom.events:EventExceptionCode/DISPATCH_REQUEST_ERR' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 If the Event object is already dispatched in the tree.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#DISPATCH_REQUEST_ERR W3C - DOM 3 Events: EventExceptionCode.DISPATCH_REQUEST_ERR

		 

		 ]]></see>
</field>
<field name='UNSPECIFIED_EVENT_TYPE_ERR' fullname='dom.events:EventExceptionCode/UNSPECIFIED_EVENT_TYPE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[

		 If the Event.type was not specified by initializing the event 

		 before the method was called. Specification of the Event.type 

		 as null or an empty string will also trigger this exception.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#UNSPECIFIED_EVENT_TYPE_ERR W3C - DOM 3 Events: EventExceptionCode.UNSPECIFIED_EVENT_TYPE_ERR

		 

		 ]]></see>
</field>
<interfaceRec name='EventException' fullname='dom.events:EventException' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\EventException.as' namespace='dom.events' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Event operations may throw an EventException as specified in their method descriptions.

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 2

	 ]]></playerversion>
<since><![CDATA[DOMEvents 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventException W3C - DOM 3 Events: EventException

	 

	 ]]></see>
</interfaceRec>
<method name='code' fullname='dom.events:EventException/dom.events:EventException:code/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 An integer indicating the type of error generated.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventException W3C - DOM 3 Events: EventException.code

		 ]]></see>
<see><![CDATA[dom.events.EventExceptionCode

		 

		 ]]></see>
</method>
<interfaceRec name='EventTarget' fullname='dom.events:EventTarget' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\EventTarget.as' namespace='dom.events' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The EventTarget interface is implemented by all the objects which could be 

	 event targets in an implementation which supports an event flow. The 

	 interface allows registration and removal of event listeners, and dispatch 

	 of events to an event target.

	 

	 <p>When used with the DOM event flow, this interface is implemented by all 

	 target nodes and target ancestors, i.e. all DOM Nodes of the tree support 

	 this interface when the implementation conforms to DOM Level 3 Events and, 

	 therefore, this interface can be obtained by using binding-specific casting 

	 methods on an instance of the Node interface.</p>

	 

	 <p>Invoking addEventListener or addEventListenerNS repeatedly on the same 

	 EventTarget with the same values for the parameters namespaceURI, type, 

	 listener, and useCapture has no effect. Doing so does not cause the 

	 EventListener to be called more than once and does not cause a change in the 

	 triggering order.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 2

	 ]]></playerversion>
<since><![CDATA[DOMEvents 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget W3C - DOM 3 Events: EventTarget

	 

	 ]]></see>
</interfaceRec>
<method name='addEventListener' fullname='dom.events:EventTarget/dom.events:EventTarget:addEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Associates a function with a particular event and binds the event to the current node.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 function statusreport() {

		 		alert("document has loaded");

		 }

		 

		 if (window.addEventListener) {

		 		window.addEventListener("load", statusreport, false); //invoke function

		 }

		 window.onload = statusreport(); //function invoked again, since no event handler conflicts</listing>

		 

		 ]]></example>
<param><![CDATA[type A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.

		 ]]></param>
<param><![CDATA[listener The function or method to associate with the event.

		 ]]></param>
<param><![CDATA[useCapture Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 

		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-addEventListener W3C - DOM 3 Events: EventTarget.addEventListener()

		 

		 ]]></see>
</method>
<method name='addEventListenerNS' fullname='dom.events:EventTarget/dom.events:EventTarget:addEventListenerNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;type;listener;useCapture' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Registers an event listener, depending on the useCapture parameter, on the 

		 capture phase of the DOM event flow or its target and bubbling phases.

		 

		 ]]></description>
<param><![CDATA[namespaceURI Specifies the Event.namespaceURI associated with the event for which the user is registering.

		 ]]></param>
<param><![CDATA[type A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.

		 ]]></param>
<param><![CDATA[listener The function or method to associate with the event.

		 ]]></param>
<param><![CDATA[useCapture Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 

		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-addEventListener W3C - DOM 3 Events: EventTarget.addEventListener()

		 

		 ]]></see>
</method>
<method name='dispatchEvent' fullname='dom.events:EventTarget/dom.events:EventTarget:dispatchEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='dom.events:Event' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Dispatches an event to fire on a node artificially.

		 

		 <p><strong>Note (IE):</strong> IE's equivalent of dispatchEvent() is fireEvent().</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="test" onclick="alert('hi')">Sample DIV.&lt;/div>

		 &lt;script type="text/javascript">

		 //Generate an artificial click event on "test". Fires alert("hi")

		 var clickevent = document.createEvent("MouseEvents");

		 clickevent.initEvent("click", true, true);

		 document.getElementById("test").dispatchEvent(myevent);

		 &lt;/script></listing>

		 

		 ]]></example>
<param><![CDATA[event The event to be dispatched.

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<return><![CDATA[Indicates whether any of the listeners which handled the 

		 event called Event.preventDefault(). If Event.preventDefault() was 

		 called the returned value is false, else it is true.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-dispatchEvent W3C - DOM 3 Events: EventTarget.dispatchEvent()

		 

		 ]]></see>
<throws><![CDATA[dom.events.EventException UNSPECIFIED_EVENT_TYPE_ERR: 

		 Raised if the Event.type was not specified by initializing the event 

		 before dispatchEvent was called. Specification of the Event.type as 

		 null or an empty string will also trigger this exception.

		 

		 ]]></throws>
<throws><![CDATA[dom.events.EventException DISPATCH_REQUEST_ERR: Raised 

		 if the Event object is already being dispatched.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the Event 

		 object has not been created using DocumentEvent.createEvent().

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if 

		 Event.type is not an NCName as defined in [XML Namespaces 1.1].

		 

		 ]]></throws>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</method>
<method name='removeEventListener' fullname='dom.events:EventTarget/dom.events:EventTarget:removeEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Removes an event listener.

		 

		 <p>Calling removeEventListener with arguments 

		 which do not identify any currently registered EventListener on the 

		 EventTarget has no effect. The Event.namespaceURI for which the user 

		 registered the event listener is implied and is null.</p>

		 

		 ]]></description>
<param><![CDATA[type Specifies the Event.type for which the user registered 

		 the event listener.

		 ]]></param>
<param><![CDATA[listener The EventListener to be removed.

		 ]]></param>
<param><![CDATA[useCapture Specifies whether the EventListener being removed 

		 was registered for the capture phase or not. If a listener was 

		 registered twice, once for the capture phase and once for the target 

		 and bubbling phases, each must be removed separately. Removal of an 

		 event listener registered for the capture phase does not affect the 

		 same event listener registered for the target and bubbling phases, 

		 and vice versa.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-removeEventListener W3C - DOM 3 Events: EventTarget.removeEventListener()

		 

		 ]]></see>
</method>
<method name='removeEventListenerNS' fullname='dom.events:EventTarget/dom.events:EventTarget:removeEventListenerNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;type;listener;useCapture' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Removes an event listener. Calling removeEventListenerNS with arguments 

		 which do not identify any currently registered EventListener on the 

		 EventTarget has no effect. 

		  

		 ]]></description>
<param><![CDATA[namespaceURI Specifies the Event.namespaceURI associated with the event for which the user registered the event listener.

		 ]]></param>
<param><![CDATA[type Specifies the Event.type for which the user registered 

		 the event listener.

		 ]]></param>
<param><![CDATA[listener The EventListener to be removed.

		 ]]></param>
<param><![CDATA[useCapture Specifies whether the EventListener being removed 

		 was registered for the capture phase or not. If a listener was 

		 registered twice, once for the capture phase and once for the target 

		 and bubbling phases, each must be removed separately. Removal of an 

		 event listener registered for the capture phase does not affect the 

		 same event listener registered for the target and bubbling phases, 

		 and vice versa.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTargetGroup-removeEventListenerNS W3C - DOM 3 Events: EventTarget.removeEventListenerNS()

		 

		 ]]></see>
</method>
<classRec name='Event' fullname='dom.events:Event' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\Event.as' namespace='dom.events' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Event interface is used to provide contextual information about an 

	 event to the listener processing the event. An object which implements 

	 the Event interface is passed as the parameter to an EventListener. The 

	 object passed to the event listener may also implement derived interfaces 

	 that provide access to information directly relating to the type of event 

	 they represent.

	 

	 <p>To create an instance of the Event interface, use the 

	 DocumentEvent.createEvent("Event") method call.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 2

	 ]]></playerversion>
<since><![CDATA[DOMEvents 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event W3C - DOM 3 Events: Event

	 

	 ]]></see>
<modified><![CDATA[DOMEvents 3

	 ]]></modified>
</classRec>
<method name='initEvent' fullname='dom.events:Event/initEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg' param_types='dom.core.types:DOMString;Boolean;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of an Event created through the 

		 DocumentEvent.createEvent method. This method may only be called 

		 before the Event has been dispatched via the 

		 EventTarget.dispatchEvent() method. If the method is called several 

		 times before invoking EventTarget.dispatchEvent, only the final 

		 invocation takes precedence. This method has no effect if called after 

		 the event has been dispatched. If called from a subclass of the Event 

		 interface only the values specified in this method are modified, all 

		 other attributes are left unchanged.

		 

		 <p>This method sets the Event.type attribute to typeArg, and 

		 Event.namespaceURI to null. To initialize an event with a namespace 

		 URI, use the Event.initEventNS() method.</p>

		 

		 ]]></description>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initEvent W3C - DOM 3 Events: Event.initEvent()

		 

		 ]]></see>
</method>
<method name='initEventNS' fullname='dom.events:Event/initEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of an Event object. This method has the same 

		 behavior as Event.initEvent(). 

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initEventNS W3C - DOM 3 Events: Event.initEventNS()

		 

		 ]]></see>
</method>
<method name='preventBubble' fullname='dom.events:Event/preventBubble' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Prevents the event from bubbling. This method is deprecated in favor of standard stopPropagation and is removed in Gecko 1.9. 

		 

		 ]]></description>
<playerversion><![CDATA[Obsolete Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.preventBubble MDC - event.preventBubble()

		 

		 ]]></see>
</method>
<method name='preventCapture' fullname='dom.events:Event/preventCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 This method is deprecated in favor of standard stopPropagation and is removed in Gecko 1.9. 

		 

		 ]]></description>
<playerversion><![CDATA[Obsolete Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.preventCapture MDC - event.preventCapture()

		 

		 ]]></see>
</method>
<method name='preventDefault' fullname='dom.events:Event/preventDefault' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Cancels the event if it is cancelable, without stopping further propagation of the event. 

		 

		 Signifies that the event is to be canceled, meaning any default action 

		 normally taken by the implementation as a result of the event will not 

		 occur (see also Default actions and cancelable events). Calling this 

		 method for a non-cancelable event has no effect.

		 

		 <p><strong>Note:</strong> This method does not stop the event propagation; use 

		 Event.stopPropagation() or Event.stopImmediatePropagation() for that effect.</p>

		 

		 <p><strong>Note:</strong> Calling preventDefault during any stage of event flow cancels 

		 the event, meaning that any default action normally taken by the implementation as a 

		 result of the event will not occur. </p>

		 

		 ]]></description>
<example><![CDATA[
		 Toggling a checkbox is the default action of clicking on a checkbox. This example demonstrates how to prevent that happening: 

		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;preventDefault example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function stopDefAction(evt) {

		 	evt.preventDefault();

		 }

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body&gt;

		 

		 &lt;p&gt;Please click on the checkbox control.&lt;/p&gt;

		 

		 &lt;form&gt;

		 &lt;input type="checkbox" onclick="stopDefAction(event);"/&gt;

		 &lt;label for="checkbox"&gt;Checkbox&lt;/label&gt;

		 

		 &lt;/form&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.preventDefault MDC - event.preventDefault()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-preventDefault W3C - DOM 3 Events: Event.preventDefault()

		 

		 ]]></see>
</method>
<method name='stopImmediatePropogation' fullname='dom.events:Event/stopImmediatePropogation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Prevents other event listeners from being triggered and, unlike 

		 Event.stopPropagation() its effect is immediate . Once it has been called, 

		 further calls to this method have no additional effect.

		 

		 <p><strong>Note:</strong> This method does not prevent the default action from being invoked; 

		 use Event.preventDefault() for that effect.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example demonstrates how events fire and are handled in the DOM in a very simple way. 

		 When the BODY of this HTML document loads, an event listener is registered with the top row 

		 of the TABLE. The event listener handles the event by executing the function stopEvent, 

		 which changes the value in the bottom cell of the table.

		 

		 <p>However, stopEvent also calls an event object method, event.stopPropagation, which keeps 

		 the event from bubbling any further up into the DOM. Note that the table itself has an onclick 

		 event handler that ought to display a message when the table is clicked. But the stopEvent 

		 method has stopped propagation, and so after the data in the table is updated, the event phase 

		 is effectively ended, and an alert box is displayed to confirm this.</p>

		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;Event Propagation&lt;/title&gt;

		 

		 &lt;style type="text/css"&gt;

		 	#t-daddy { border: 1px solid red }

		 	#c1 { background-color: pink; }

		 &lt;/style&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function stopEvent(ev) {

		 	c2 = document.getElementById("c2");

		 	c2.innerHTML = "hello";

		 

		 	// this ought to keep t-daddy from getting the click.

		 	ev.stopPropagation();

		 	alert("event propagation halted.");

		 }

		 

		 function load() {

		 	elem = document.getElementById("tbl1");

		 	elem.addEventListener("click", stopEvent, false);

		 }

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onload="load();"&gt;

		 

		 &lt;table id="t-daddy" onclick="alert('hi');"&gt;

		 	&lt;tr id="tbl1"&gt;

		 		&lt;td id="c1"&gt;one&lt;/td&gt;

		 	&lt;/tr&gt;

		 	&lt;tr&gt;

		 		&lt;td id="c2"&gt;two&lt;/td&gt;

		 	&lt;/tr&gt;

		 &lt;/table&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-stopImmediatePropagation W3C - DOM 3 Events: Event.stopImmediatePropogation()

		 

		 ]]></see>
</method>
<method name='stopPropogation' fullname='dom.events:Event/stopPropogation' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Prevents other event listeners from being triggered but its effect is 

		 deferred until all event listeners attached on the Event.currentTarget 

		 have been triggered . Once it has been called, further calls to this 

		 method have no additional effect.

		 

		 <p><strong>Note:</strong> This method does not prevent the default action from being 

		 invoked; use Event.preventDefault() for that effect.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.stopPropogation MDC - event.stopPropogation()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-stopPropagation W3C - DOM 3 Events: Event.stopPropogation()

		 

		 ]]></see>
</method>
<method name='bubbles' fullname='dom.events:Event/bubbles/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Used to indicate whether or not an event is a bubbling event. If the 

		 event can bubble the value is true, otherwise the value is false.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 function goInput(e) {

		 	// checks bubbles and

		 	if not e.bubbles {

		 		// passes event along if it's not

		 		passItOn(e); 

		 	}

		 	// already bubbling

		 	doOutput(e)

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.altKey  MDC - event.bubbles

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-canBubble W3C - DOM 3 Events: Event.bubbles

		 

		 ]]></see>
</method>
<method name='cancelable' fullname='dom.events:Event/cancelable/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Indicates whether the event is cancelable or not.

		 

		 <p><strong>Note:</strong> Whether an event can be canceled or not 

		 is something that's determined when that event is initialized. </p>

		 

		 <p><strong>Note:</strong> To cancel an event, call the preventDefault method on the event. This keeps 

		 the implementation from executing the default action that is associated with the event. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.cancelable  MDC - event.cancelable

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-canCancel W3C - DOM 3 Events: Event.cancelable

		 

		 ]]></see>
</method>
<method name='currentTarget' fullname='dom.events:Event/currentTarget/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.events:EventTarget'>
<description><![CDATA[

		 Identifies the current target for the event, as the event traverses the DOM.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.currentTarget  MDC - event.currentTarget

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-currentTarget W3C - DOM 3 Events: Event.currentTarget

		 

		 ]]></see>
</method>
<method name='defaulPrevented' fullname='dom.events:Event/defaulPrevented/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Used to indicate whether Event.preventDefault() has been called for 

		 this event.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-defaultPrevented W3C - DOM 3 Events: Event.defaulPrevented

		 

		 ]]></see>
</method>
<method name='eventPhase' fullname='dom.events:Event/eventPhase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Used to indicate which phase of event flow is currently being accomplished.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.eventPhase  MDC - event.eventPhase

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-eventPhase W3C - DOM 3 Events: Event.eventPhase

		 ]]></see>
<see><![CDATA[#CAPTURING_PHASE

		 ]]></see>
<see><![CDATA[#AT_TARGET

		 ]]></see>
<see><![CDATA[#BUBBLING_PHASE

		 

		 ]]></see>
</method>
<method name='explicitOriginalTarget' fullname='dom.events:Event/explicitOriginalTarget/get' isStatic='false' isFinal='false' isOverride='false'  result_type='gecko.events:nsIDOMEventTarget'>
<description><![CDATA[

		 The explicit original target of the event.

		 

		 <p>If the event was retargeted for some reason other than an anonymous boundary crossing, this 

		 will be set to the target before the retargeting occurs. For example, mouse events are retargeted 

		 to their parent node when they happen over text nodes (see bug 185889), and in that case 

		 currentTarget will show the parent and explicitOriginalTarget will show the text node. </p>

		 

		 <p>explicitOriginalTarget differs from originalTarget in that it will never contain anonymous content. </p>

		 

		 ]]></description>
<example><![CDATA[
		 This property can be used with &lt;command&gt; to get the event details of the original object calling the command.

		 <listing>

		 function myCommand(ev) {

		 	alert(ev.explicitOriginalTarget.nodeName); // returns 'menuitem'

		 }

		 

		 

		 &lt;command id="my-cmd-anAction" oncommand="myCommand(event);"/&gt;

		 

		 &lt;menulist&gt;&lt;menupopup&gt;

		 	&lt;menuitem label="Get my element name!" command="my-cmd-anAction"/&gt;

		 &lt;/menupopup&gt;&lt;/menulist&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMNSEvent.idl Mozilla Central - nsIDOMNSEvent.idl

		 

		 ]]></see>
</method>
<method name='isTrusted' fullname='dom.events:Event/isTrusted/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Determines if the event was from the user or script generated. Returns

		 true if the user caused the event to be dispatched.

		 

		 <p><strong>Note:</strong> Can't find any more information on this property</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://osdir.com/ml/w3c.webapi/2006-06/msg00080.html W3C WebAPI Forum - [DOM3EV] introduce Event.trusted?

		 

		 ]]></see>
</method>
<method name='namespaceURI' fullname='dom.events:Event/namespaceURI/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The namespace URI associated with this event at initialization time, or 

		 null if it is unspecified.

		 DOM Level 2 Events initialization methods, such as Event.initEvent(), set 

		 the value to null.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-namespaceURI W3C - DOM 3 Events: Event.namespaceURI

		 

		 ]]></see>
</method>
<method name='originalTarget' fullname='dom.events:Event/originalTarget/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 The original target of the event before any retargetings.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMNSEvent.idl Mozilla Central - nsIDOMNSEvent.idl

		 

		 ]]></see>
</method>
<method name='target' fullname='dom.events:Event/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.events:EventTarget'>
<description><![CDATA[

		 Used to indicate the event target. This attribute contains the target node 

		 when used with the Event dispatch and DOM event flow.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>&lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;target example&lt;/title&gt;

		 &lt;script type="text/javascript"&gt;

		 

		 function highlightTarget(evt) {

		 	evt.target.style.backgroundColor = 'blue';

		 }

		 

		 function resetTarget(evt) {

  		 	evt.target.style.backgroundColor = 'silver';

		 }

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onmousedown="highlightTarget(event)" onmouseup="resetTarget(event)"&gt;

		 

		 &lt;p&gt;This example demonstrates how, by using event propagation, two event

		 handler functions in the body element can use the &lt;i&gt;target&lt;/i&gt; property

		 to distinguish between, and process, all other bubbleable events occuring

		 lower down the DOM. Note: not all events can bubble up the DOM.&lt;/p&gt;

		 

		 &lt;p&gt;As an event lower down the DOM bubbles up and reaches the body

		 object, the &lt;i&gt;target&lt;/i&gt; property contains the object reference of the

		 original event target. In this case which element in the document

		 received an onmousedown or onmouseup event.&lt;/p&gt;

		 

		 &lt;p&gt;This allows the event handlers of the body object to process bubbleable

		 events occuring lower down the DOM structure, which means there is no need

		 to attach the event handlers to every button &amp; para element of the page.&lt;/p&gt;

		 

		 &lt;button&gt;button 1&lt;/button&gt;&lt;br /&gt;

		 &lt;button&gt;button 2&lt;/button&gt;&lt;br /&gt;

		 

		 &lt;button&gt;button 3&lt;/button&gt;&lt;br /&gt;

		 &lt;button&gt;button 4&lt;/button&gt;&lt;br /&gt;

		 &lt;button&gt;button 5&lt;/button&gt;&lt;br /&gt;

		 &lt;button&gt;button 6&lt;/button&gt;&lt;br /&gt;

		 

		 &lt;button&gt;button 7&lt;/button&gt;&lt;br /&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.target MDC - event.target

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-target W3C - DOM 3 Events: Event.target

		 

		 ]]></see>
</method>
<method name='timeStamp' fullname='dom.events:Event/timeStamp/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMTimeStamp'>
<description><![CDATA[

		 Used to specify the time at which the event was created in milliseconds 

		 relative to 1970-01-01T00:00:00Z. Due to the fact that some systems may not 

		 provide this information the value of timeStamp may be not available for all 

		 events. When not available, the value is 0.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 

		 &lt;title&gt;timeStamp example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 function getTime(event) {

		 	document.getElementById("time").firstChild.nodeValue = event.timeStamp;

		 }

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onkeypress="getTime(event)"&gt;

		 

		 &lt;p&gt;Press any key to get the current timestamp

		 for the onkeypress event.&lt;/p&gt;

		 &lt;p&gt;timeStamp: &lt;span id="time"&gt;-&lt;/span&gt;&lt;/p&gt;

		 

		 &lt;/body&gt;

		 

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.timeStamp MDC - event.timeStamp

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-timeStamp W3C - DOM 3 Events: Event.timeStamp

		 

		 ]]></see>
</method>
<method name='type' fullname='dom.events:Event/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The local name of the event type. The name must be an NCName as defined in 

		 [XML Namespaces 1.1] and is case-sensitive.

		 

		 <p><strong>Note:</strong> The type must be an XML name.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 

		 &lt;title&gt;type example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 var currEvent = null;

		 

		 function getEvtType(evt) {

		 	currEvent = evt.type;

		 	document.getElementById("Etype").firstChild.nodeValue = currEvent;

		 }

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body

		   onkeydown="getEvtType(event)"

		   onkeyup="getEvtType(event)"

		   onmousedown="getEvtType(event)"

		   onmouseup="getEvtType(event)"&gt;

		 

		 &lt;p&gt;Press any key or click the mouse to get the event type.&lt;/p&gt;

		 &lt;p&gt;Event type: &lt;span id="Etype"&gt;-&lt;/span&gt;&lt;/p&gt;

		 

		 &lt;/body&gt;

		 

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.type MDC - event.type

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-type W3C - DOM 3 Events: Event.type

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/2006/REC-xml-names11-20060816/ W3C - XML Namespaces 1.1

		 

		 ]]></see>
</method>
<field name='AT_TARGET' fullname='dom.events:Event/AT_TARGET' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The current event is in the target phase, i.e. it is being evaluated at the event target.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#AT_TARGET W3C - DOM 3 Events: Event.AT_TARGET

		 

		 ]]></see>
</field>
<field name='BUBBLING_PHASE' fullname='dom.events:Event/BUBBLING_PHASE' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The current event phase is the bubbling phase.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#BUBBLING_PHASE W3C - DOM 3 Events: Event.BUBBLING_PHASE

		 

		 ]]></see>
</field>
<field name='CAPTURING_PHASE' fullname='dom.events:Event/CAPTURING_PHASE' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The current event phase is the capture phase.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#CAPTURING_PHASE W3C - DOM 3 Events: Event.CAPTURING_PHASE

		 

		 ]]></see>
</field>
<field name='abort' fullname='dom.events:Event/abort' type='String' isStatic='true' isConst='true' defaultValue='abort' >
<description><![CDATA[

		 Loading of a resource has been aborted.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-abort W3C - DOM 3 Events: UIEvent.abort / Event.abort

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='change' fullname='dom.events:Event/change' type='String' isStatic='true' isConst='true' defaultValue='change' >
<description><![CDATA[

		 A control loses the input focus and its value has been modified since gaining focus. This event type is dispatched before the event type blur.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-change W3C - DOM 3 Events: UIEvent.change / Event.change

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='error' fullname='dom.events:Event/error' type='String' isStatic='true' isConst='true' defaultValue='error' >
<description><![CDATA[

		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 

		 such as an invalid image, a script execution error, or non-well-formed XML.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-error W3C - DOM 3 Events: UIEvent.error / Event.error

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='load' fullname='dom.events:Event/load' type='String' isStatic='true' isConst='true' defaultValue='load' >
<description><![CDATA[

		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 

		 (such as images, style sheets, or scripts). Dependent resources that fail to load will not prevent this 

		 event from firing if the resource that loaded them is still accessible via the DOM. If this event type 

		 is dispatched, implementations are required to dispatch this event at least on the Document node.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Document, Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-load W3C - DOM 3 Events: UIEvent.load / Event.load

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='reset' fullname='dom.events:Event/reset' type='String' isStatic='true' isConst='true' defaultValue='reset' >
<description><![CDATA[

		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-reset W3C - DOM 3 Events: UIEvent.reset / Event.reset

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='select' fullname='dom.events:Event/select' type='String' isStatic='true' isConst='true' defaultValue='select' >
<description><![CDATA[

		 A user selects some text. DOM Level 3 Events does not provide contextual information to access 

		 the selected text. The selection occured before the dispatch of this event type.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-select W3C - DOM 3 Events: UIEvent.select / Event.select

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='submit' fullname='dom.events:Event/submit' type='String' isStatic='true' isConst='true' defaultValue='submit' >
<description><![CDATA[

		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-submit W3C - DOM 3 Events: UIEvent.submit / Event.submit

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='unload' fullname='dom.events:Event/unload' type='String' isStatic='true' isConst='true' defaultValue='unload' >
<description><![CDATA[

		 The DOM implementation removes from the environment the resource (such as the document) or any dependent

		 resources (such as images, style sheets, scripts). The document is unloaded after the dispatch of this event 

		 type. If this event type is dispatched, implementations are required to dispatch this event at least on the 

		 Document node.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Document, Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-unload W3C - DOM 3 Events: UIEvent.unload / Event.unload

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<interfaceRec name='EventListener' fullname='dom.events:EventListener' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\EventListener.as' namespace='dom.events' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The EventListener interface is the primary way for handling events. Users 

	 implement the EventListener interface and register their event listener on 

	 an EventTarget. The users should also remove their EventListener from its 

	 EventTarget after they have completed using the listener.

	 

	 <p>Copying a Node, with methods such as Node.cloneNode or Range.cloneContents, 

	 does not copy the event listeners attached to it. Event listeners must be 

	 attached to the newly created Node afterwards if so desired.</p>

	 

	 <p>Moving a Node, with methods Document.adoptNode, Node.appendChild, or 

	 Range.extractContents, does not affect the event listeners attached to it.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 2

	 ]]></playerversion>
<since><![CDATA[DOMEvents 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventListener W3C - DOM 3 Events: EventListener

	 ]]></see>
<see><![CDATA[dom.events.EventTarget

	 

	 ]]></see>
</interfaceRec>
<method name='handleEvent' fullname='dom.events:EventListener/dom.events:EventListener:handleEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='dom.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 This method is called whenever an event occurs of the event type for 

		 which the EventListener interface was registered. 

		 ]]></description>
<param><![CDATA[evt The Event contains contextual information about the event.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventListener W3C - DOM 3 Events: EventListener.handleEvent()

		 

		 ]]></see>
</method>
<classRec name='CustomEvent' fullname='dom.events:CustomEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\CustomEvent.as' namespace='dom.events' access='public' baseclass='dom.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CustomEvent interface is the recommended interface for 

	 application-specific event types. Unlike the Event interface, it allows 

	 applications to provide contextual information about the event type. 

	 Application-specific event types should have an associated namespace to 

	 avoid clashes with future general-purpose event types.

	 

	 <p>To create an instance of the CustomEvent interface, use the 

	 DocumentEvent.createEvent("CustomEvent") method call.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-CustomEvent W3C - DOM 3 Events: CustomEvent

	 

	 ]]></see>
</classRec>
<method name='initCustomEventNS' fullname='dom.events:CustomEvent/initCustomEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg;detailArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;dom.core.types:DOMObject' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a CustomEvent object. This method has 

		 the same behavior as Event.initEventNS(). 

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[detailArg Specifies CustomEvent.detail. This value may be null.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initCustomEventNS W3C - DOM 3 Events: CustomEvent.initCustomEventNS()

		 

		 ]]></see>
</method>
<method name='detail' fullname='dom.events:CustomEvent/detail/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMObject'>
<description><![CDATA[

		 Specifies some detail information about the Event.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-CustomEvent-detail W3C - DOM 3 Events: CustomEvent.detail

		 

		 ]]></see>
</method>
<interfaceRec name='DocumentEvent' fullname='dom.events:DocumentEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\DocumentEvent.as' namespace='dom.events' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DocumentEvent interface provides a mechanism by which the user can 

	 create an Event object of a type supported by the implementation. If 

	 the feature "Events" is supported by the Document object, the 

	 DocumentEvent interface must be implemented on the same object. If the 

	 feature "+Events" is supported by the Document object, an object that 

	 supports the DocumentEvent interface must be returned by invoking the 

	 method Node.getFeature("+Events", "3.0") on the Document object.

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 2

	 ]]></playerversion>
<since><![CDATA[DOMEvents 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent W3C - DOM 3 Events: DocumentEvent

	 

	 ]]></see>
<modified><![CDATA[DOMEvents 3

	 ]]></modified>
</interfaceRec>
<method name='canDispatch' fullname='dom.events:DocumentEvent/dom.events:DocumentEvent:canDispatch' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;type' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Tests if the implementation can generate events of a specified type. 

		 

		 ]]></description>
<param><![CDATA[namespaceURI Specifies the Event.namespaceURI of the event.

		 ]]></param>
<param><![CDATA[type Specifies the Event.type of the event.

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<return><![CDATA[If the implementation can generate and dispatch this event type

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent-canDispatch W3C - DOM 3 Events: DocumentEvent.canDispatch()

		 

		 ]]></see>
</method>
<method name='createEvent' fullname='dom.events:DocumentEvent/dom.events:DocumentEvent:createEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='eventType' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.events:Event'>
<description><![CDATA[

		 Creates an event object of the type specified. 

		 

		 ]]></description>
<param><![CDATA[eventType The eventType parameter specifies the name of the 

		 DOM Events interface to be supported by the created event object, 

		 e.g. "Event", "MouseEvent", "MutationEvent" and so on. If the Event 

		 is to be dispatched via the EventTarget.dispatchEvent() method the 

		 appropriate event initialization method must be called after creation 

		 in order to initialize the Event's values.

		 

		 As an example, a user wishing to synthesize some kind of UIEvent would 

		 invoke DocumentEvent.createEvent("UIEvent"). The UIEvent.initUIEventNS() 

		 ethod could then be called on the newly created UIEvent object to 

		 set the specific type of user interface event to be dispatched, DOMActivate 

		 for example, and set its context information, e.g. UIEvent.detail in 

		 this example.

		 

		 For backward compatibility reason, "UIEvents", "MouseEvents", "MutationEvents", 

		 and "HTMLEvents" feature names are valid values for the parameter eventType 

		 and represent respectively the interfaces "UIEvent", "MouseEvent", 

		 "MutationEvent", and "Event", and the characters 'a'..'z' are considered 

		 equivalent to the characters 'A'..'Z'.

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<return><![CDATA[The newly created event object.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent-createEvent W3C - DOM 3 Events: DocumentEvent.createEvent()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the 

		 implementation does not support the Event interface requested.

		 

		 ]]></throws>
</method>
<classRec name='UIEvent' fullname='dom.events:UIEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\UIEvent.as' namespace='dom.events' access='public' baseclass='dom.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The UIEvent interface provides specific contextual information 

	 associated with User Interface events.

	 

	 <p>To create an instance of the UIEvent interface, use the 

	 DocumentEvent.createEvent("UIEvent") method call.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 2

	 ]]></playerversion>
<since><![CDATA[DOMEvents 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event MDC - event

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent W3C - DOM 3 Events: UIEvent

	 

	 ]]></see>
<modified><![CDATA[DOMEvents 3

	 ]]></modified>
</classRec>
<method name='initUIEvent' fullname='dom.events:UIEvent/initUIEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg;viewArg;detailArg' param_types='dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;Number' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of an UIEvent object. This method has the 

		 same behavior as Event.initEvent(). 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 e = document.createEvent("UIEvents");

		 // creates a click event that bubbles, can be cancelled,

		 // and with its view and detail property initialized to window and 1,

		 // respectively

		 e.initUIEvent("click", true, true, window, 1);</listing>

		 

		 ]]></example>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[detailArg Specifies UIEvent.detail.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.initUIEvent MDC - event.initUIEvent()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initUIEvent W3C - UIEvent.initUIEvent()

		 

		 ]]></see>
</method>
<method name='initUIEventNS' fullname='dom.events:UIEvent/initUIEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg;viewArg;detailArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of an UIEvent object. This method has the same behavior as Event.initEventNS(). 

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[detailArg Specifies UIEvent.detail.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initUIEventNS W3C - UIEvent.initUIEventNS()

		 

		 ]]></see>
</method>
<method name='detail' fullname='dom.events:UIEvent/detail/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Specifies some detail information about the Event, depending 

		 on the type of event.

		 

		 <p><strong>Note:</strong> For mouse events, such as click, dblclick, mousedown, or mouseup, the detail 

		 property indicates how many times the mouse has been clicked in the same location for this event.</p>

		 

		 <p><strong>Note:</strong> For a dblclick event the value of detail is always 2.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 	&lt;title&gt;event.detail example&lt;/title&gt;

		 	&lt;script type="text/javascript"&gt;

		 	function giveDetails(e) {

		 		var text = document.getElementById("t");

		 		text.value = e.detail;

		 	}

		 	function init() {

		 		var b1 = document.getElementById("b");

		 		b1.onclick = giveDetails;   

		 	}

		 	&lt;/script&gt;

		 

		 &lt;/head&gt;

		 &lt;body onload="init();"&gt;

		 &lt;form&gt;

		 	&lt;input id="b" type="button" value="details"&gt;

		 	&lt;input id="t" type="text" value=""&gt;&lt;br&gt;

		 	&lt;input type="reset"&gt;

		 &lt;/form&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.detail MDC - event.detail

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-detail W3C - UIEvent.detail

		 

		 ]]></see>
</method>
<method name='isChar' fullname='dom.events:UIEvent/isChar/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a boolean indicating whether the event produced a key character or not. 

		 

		 <p><strong>Note:</strong> Some key combos may raise events but not produce any character (example: ctrl + alt ?). 

		 When this is the case, isChar returns false. isChar is used when event handlers need to do something like echo 

		 the input on the screen. </p>

		 

		 <p><strong>Note:</strong> There is currently a known bug affecting the return result, which is always false and 

		 never true. Please see the discussion link in the sidebar for more details. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if e.isChar {

		 	echoInput(e.type);

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.isChar MDC - event.isChar

		 

		 ]]></see>
</method>
<method name='layerX' fullname='dom.events:UIEvent/layerX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the horizontal coordinate of the event relative to the current layer. 

		 

		 <p><strong>Note:</strong> layerX takes scrolling of the page into account, and returns a value relative to the 

		 whole of the document, unless the event occurs inside a positioned element, where the returned value is 

		 relative to the top left of the positioned element. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		&lt;head&gt;

		&lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;



		&lt;script type="text/javascript"&gt;



		function showCoords(evt){

		  var form = document.forms.form_coords;

		  var parent_id = evt.target.parentNode.id;

		  form.parentId.value = parent_id;

		  form.pageXCoords.value = evt.pageX;

		  form.pageYCoords.value = evt.pageY;

		  form.layerXCoords.value = evt.layerX;

		  form.layerYCoords.value = evt.layerY;

		}

		&lt;/script&gt;



		&lt;style type="text/css"&gt;



		 #d1 {

		  border: solid blue 1px;

		  padding: 20px;

		 }



		 #d2 {

		  position: absolute;

		  top: 180px;

		  left: 80%;

		  right:auto;

		  width: 40%;

		  border: solid blue 1px;

		  padding: 20px;

		 }



		 #d3 {

		  position: absolute;

		  top: 240px;

		  left: 20%;

		  width: 50%;

		  border: solid blue 1px;

		  padding: 10px;

		 }



		&lt;/style&gt;

		&lt;/head&gt;



		&lt;body onmousedown="showCoords(event)"&gt;



		&lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;



		&lt;div id="d1"&gt;

		&lt;span&gt;This is an un-positioned div so clicking it will return

		layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;

		&lt;/div&gt;



		&lt;div id="d2"&gt;



		&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY

		values that are relative to the top-left corner of this positioned

		element. Note the pageX\pageY properties still return the

		absolute position in the document, including page scrolling.&lt;/span&gt;



		&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it

		will return layerX/layerY values that are relative to the top-left

		corner of this positioned element. Note the pageX\pageY properties still

		return the absolute position in the document, including page

		scrolling.&lt;/span&gt;



		&lt;/div&gt;



		&lt;div id="d3"&gt;

		&lt;form name="form_coords" id="form1"&gt;

		 Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;



		 pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  

		 pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;

		 layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  

		 layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;



		&lt;/form&gt;

		&lt;/div&gt;



		&lt;/body&gt;

		&lt;/html&gt;</listing>

		 
		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.layerX MDC - event.layerX

		 

		 ]]></see>
</method>
<method name='layerY' fullname='dom.events:UIEvent/layerY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the vertical coordinate of the event relative to the current layer. 

		 

		 <p><strong>Note:</strong> layerY takes scrolling of the page into account, and returns a value relative to the 

		 whole of the document, unless the event occurs inside a positioned element, where the returned value is relative 

		 to the top left of the positioned element. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		&lt;head&gt;

		&lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;



		&lt;script type="text/javascript"&gt;



		function showCoords(evt){

		  var form = document.forms.form_coords;

		  var parent_id = evt.target.parentNode.id;

		  form.parentId.value = parent_id;

		  form.pageXCoords.value = evt.pageX;

		  form.pageYCoords.value = evt.pageY;

		  form.layerXCoords.value = evt.layerX;

		  form.layerYCoords.value = evt.layerY;

		}

		&lt;/script&gt;



		&lt;style type="text/css"&gt;



		 #d1 {

		  border: solid blue 1px;

		  padding: 20px;

		 }



		 #d2 {

		  position: absolute;

		  top: 180px;

		  left: 80%;

		  right:auto;

		  width: 40%;

		  border: solid blue 1px;

		  padding: 20px;

		 }



		 #d3 {

		  position: absolute;

		  top: 240px;

		  left: 20%;

		  width: 50%;

		  border: solid blue 1px;

		  padding: 10px;

		 }



		&lt;/style&gt;

		&lt;/head&gt;



		&lt;body onmousedown="showCoords(event)"&gt;



		&lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;



		&lt;div id="d1"&gt;

		&lt;span&gt;This is an un-positioned div so clicking it will return

		layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;

		&lt;/div&gt;



		&lt;div id="d2"&gt;



		&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY

		values that are relative to the top-left corner of this positioned

		element. Note the pageX\pageY properties still return the

		absolute position in the document, including page scrolling.&lt;/span&gt;



		&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it

		will return layerX/layerY values that are relative to the top-left

		corner of this positioned element. Note the pageX\pageY properties still

		return the absolute position in the document, including page

		scrolling.&lt;/span&gt;



		&lt;/div&gt;



		&lt;div id="d3"&gt;

		&lt;form name="form_coords" id="form1"&gt;

		 Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;



		 pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  

		 pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;

		 layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  

		 layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;



		&lt;/form&gt;

		&lt;/div&gt;



		&lt;/body&gt;

		&lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.layerY MDC - event.layerY

		 

		 ]]></see>
</method>
<method name='pageX' fullname='dom.events:UIEvent/pageX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the horizontal coordinate of the event relative to whole document. 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.pageX MDC - event.pageX

		 ]]></see>
<see><![CDATA[dom.events.MouseEvent#pageX

		 

		 ]]></see>
</method>
<method name='pageY' fullname='dom.events:UIEvent/pageY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the vertical coordinate of the event relative to the whole document. 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.pageY MDC - event.pageY

		 ]]></see>
<see><![CDATA[dom.events.MouseEvent#pageY

		 

		 ]]></see>
</method>
<method name='view' fullname='dom.events:UIEvent/view/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.views:AbstractView'>
<description><![CDATA[

		 Returns the AbstractView object from which the event was generated. In browsers, this is the window object the event happened in. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.view MDC - event.view

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-view W3C - UIEvent.view

		 

		 ]]></see>
</method>
<method name='which' fullname='dom.events:UIEvent/which/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the numeric keyCode of the key pressed, or the character code (charCode) for 

		 an alphanumeric key pressed. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;charCode/keyCode/which example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function showKeyPress(evt) {

		 	alert("onkeypress handler: \n"

		 		+ "keyCode property: " + evt.keyCode + "\n"

		 		+ "which property: " + evt.which + "\n"

		 		+ "charCode property: " + evt.charCode + "\n"

		 		+ "Character Key Pressed: "

		 		+ String.fromCharCode(evt.charCode) + "\n"

		 	);

		 }

		 

		 

		 function keyDown(evt) {

		 	alert("onkeydown handler: \n"

		 		+ "keyCode property: " + evt.keyCode + "\n"

		 		+ "which property: " + evt.which + "\n"

		 	);

		 }

		 

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body

		   onkeypress="showKeyPress(event);"

		   onkeydown="keyDown(event);"

		 &gt;

		 

		 &lt;p&gt;Please press any key.&lt;/p&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.which MDC - event.which

		 ]]></see>
<see><![CDATA[#keyCode

		 ]]></see>
<see><![CDATA[#charCode

		 

		 ]]></see>
</method>
<field name='DOMActivate' fullname='dom.events:UIEvent/DOMActivate' type='String' isStatic='true' isConst='true' defaultValue='DOMActivate' >
<description><![CDATA[

		 Refer to Activation requests and behavior.

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>UIEvent.view is in use.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-flow-activation W3C - Activation requests and behavior

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMActivate W3C - UIEvent.DOMActivate

		 

		 ]]></see>
</field>
<field name='DOMFocusIn' fullname='dom.events:UIEvent/DOMFocusIn' type='String' isStatic='true' isConst='true' defaultValue='DOMFocusIn' >
<description><![CDATA[

		 An event target receives focus. The focus is given to the element before the dispatch of this event type. This event type is dispatched after the event type focus.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMFocusIn W3C - UIEvent.DOMFocusIn

		 

		 ]]></see>
</field>
<field name='DOMFocusOut' fullname='dom.events:UIEvent/DOMFocusOut' type='String' isStatic='true' isConst='true' defaultValue='DOMFocusOut' >
<description><![CDATA[

		 An event target loses focus. The focus is taken from the element before the dispatch of this event type. This event type is dispatched after the event type blur.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMFocusOut W3C - UIEvent.DOMFocusOut

		 

		 ]]></see>
</field>
<field name='abort' fullname='dom.events:UIEvent/abort' type='String' isStatic='true' isConst='true' defaultValue='abort' >
<description><![CDATA[

		 Loading of a resource has been aborted.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-abort W3C - DOM 3 Events: UIEvent.abort / Event.abort

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='blur' fullname='dom.events:UIEvent/blur' type='String' isStatic='true' isConst='true' defaultValue='blur' >
<description><![CDATA[

		 An event target loses focus. The focus is taken from the element before the dispatch of this event type.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-blur W3C - UIEvent.blur

		 

		 ]]></see>
</field>
<field name='change' fullname='dom.events:UIEvent/change' type='String' isStatic='true' isConst='true' defaultValue='change' >
<description><![CDATA[

		 A control loses the input focus and its value has been modified since gaining focus. This event type is dispatched before the event type blur.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-change W3C - DOM 3 Events: UIEvent.change / Event.change

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='error' fullname='dom.events:UIEvent/error' type='String' isStatic='true' isConst='true' defaultValue='error' >
<description><![CDATA[

		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 

		 such as an invalid image, a script execution error, or non-well-formed XML.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-error W3C - DOM 3 Events: UIEvent.error / Event.error

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='focus' fullname='dom.events:UIEvent/focus' type='String' isStatic='true' isConst='true' defaultValue='focus' >
<description><![CDATA[

		 An event target receives focus. The focus is given to the element before the dispatch of this event type.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-focus W3C - UIEvent.focus

		 

		 ]]></see>
</field>
<field name='load' fullname='dom.events:UIEvent/load' type='String' isStatic='true' isConst='true' defaultValue='load' >
<description><![CDATA[

		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 

		 (such as images, style sheets, or scripts). Dependent resources that fail to load will not prevent this 

		 event from firing if the resource that loaded them is still accessible via the DOM. If this event type 

		 is dispatched, implementations are required to dispatch this event at least on the Document node.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Document, Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-load W3C - DOM 3 Events: UIEvent.load / Event.load

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='reset' fullname='dom.events:UIEvent/reset' type='String' isStatic='true' isConst='true' defaultValue='reset' >
<description><![CDATA[

		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-reset W3C - DOM 3 Events: UIEvent.reset / Event.reset

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='resize' fullname='dom.events:UIEvent/resize' type='String' isStatic='true' isConst='true' defaultValue='resize' >
<description><![CDATA[

		 A document view or an element has been resized. The resize occured before the dispatch of this event type.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Document, Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent W3C - DOM 3 Events: UIEvent.resize

		 

		 ]]></see>
</field>
<field name='scroll' fullname='dom.events:UIEvent/scroll' type='String' isStatic='true' isConst='true' defaultValue='scroll' >
<description><![CDATA[

		 A document view or an element has been scrolled. The scroll occured before the dispatch of this event type.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Document, Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-scroll W3C - DOM 3 Events: UIEvent.scroll

		 

		 ]]></see>
</field>
<field name='select' fullname='dom.events:UIEvent/select' type='String' isStatic='true' isConst='true' defaultValue='select' >
<description><![CDATA[

		 A user selects some text. DOM Level 3 Events does not provide contextual information to access 

		 the selected text. The selection occured before the dispatch of this event type.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-select W3C - DOM 3 Events: UIEvent.select / Event.select

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='submit' fullname='dom.events:UIEvent/submit' type='String' isStatic='true' isConst='true' defaultValue='submit' >
<description><![CDATA[

		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-submit W3C - DOM 3 Events: UIEvent.submit / Event.submit

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<field name='unload' fullname='dom.events:UIEvent/unload' type='String' isStatic='true' isConst='true' defaultValue='unload' >
<description><![CDATA[

		 The DOM implementation removes from the environment the resource (such as the document) or any dependent

		 resources (such as images, style sheets, scripts). The document is unloaded after the dispatch of this event 

		 type. If this event type is dispatched, implementations are required to dispatch this event at least on the 

		 Document node.

		 

		 <p><strong>Note:</strong> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Document, Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view is in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.0

		 ]]></playerversion>
<since><![CDATA[HTML 4.0

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-unload W3C - DOM 3 Events: UIEvent.unload / Event.unload

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</field>
<classRec name='TextEvent' fullname='dom.events:TextEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\TextEvent.as' namespace='dom.events' access='public' baseclass='dom.events:UIEvent' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The TextEvent interface provides specific contextual information 

	 associated with Text Events.

	 

	 <p>To create an instance of the TextEvent interface, use the 

	 DocumentEvent.createEvent("TextEvent") method call.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-TextEvent W3C - DOM 3 Events: TextEvent

	 

	 ]]></see>
</classRec>
<method name='initTextEvent' fullname='dom.events:TextEvent/initTextEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg;viewArg;dataArg' param_types='dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a TextEvent object. This method has the 

		 same behavior as UIEvent.initUIEvent(). The value of UIEvent.detail remains undefined. 

		 

		 ]]></description>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[dataArg Specifies TextEvent.data.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initTextEvent W3C - TextEvent.initTextEvent()

		 ]]></see>
<see><![CDATA[dom.events.UIEvent#initUIEvent()

		 

		 ]]></see>
</method>
<method name='initTextEventNS' fullname='dom.events:TextEvent/initTextEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg;viewArg;dataArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a TextEvent object. This method has the same 

		 behavior as UIEvent.initUIEventNS(). The value of UIEvent.detail remains undefined. 

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[dataArg Specifies TextEvent.data.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initTextEventNS W3C - TextEvent.initTextEventNS()

		 ]]></see>
<see><![CDATA[dom.events.UIEvent#initUIEventNS()

		 

		 ]]></see>
</method>
<method name='data' fullname='dom.events:TextEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Holds the value of the characters generated by the character device. 

		 This may be a single Unicode character or a non-empty sequence of 

		 Unicode characters [Unicode]. Characters should be normalized as 

		 defined by the Unicode normalization form NFC, defined in [UAX #15]. 

		 This attribute cannot be null or contain the empty string.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-data W3C - TextEvent.data

		 ]]></see>
<see><![CDATA[http://www.unicode.org/versions/Unicode5.0.0/ Unicode

		 ]]></see>
<see><![CDATA[http://www.unicode.org/reports/tr15/ UAX #15

		 

		 ]]></see>
</method>
<field name='textInput' fullname='dom.events:TextEvent/textInput' type='String' isStatic='true' isConst='true' defaultValue='textInput' >
<description><![CDATA[

		 One or more characters have been entered. 

		 

		 <p>The characters can originate from a variety of sources. For example, it could be characters resulting 

		 from a key being pressed or released on a keyboard device, characters resulting from the processing of an 

		 input method editor, or resulting from a voice command. Where a "paste" operation generates a simple 

		 sequence of characters, i.e. a text without any structure or style information, this event type should 

		 be generated as well.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>UIEvent.view and TextEvent.data are in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-textInput W3C - TextEvent.textInput

		 

		 ]]></see>
</field>
<classRec name='MouseEvent' fullname='dom.events:MouseEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\MouseEvent.as' namespace='dom.events' access='public' baseclass='dom.events:UIEvent' interfaces='cssom.view:MouseEventView' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The MouseEvent interface provides specific contextual information 

	 associated with Mouse events.

	 

	 <p>In the case of nested elements mouse events are always targeted at the 

	 most deeply nested element. Ancestors of the targeted element may use 

	 bubbling to obtain notification of mouse events which occur within their 

	 descendent elements.</p>

	 

	 <p>To create an instance of the MouseEvent interface, use the 

	 DocumentEvent.createEvent("MouseEvent") method call.</p>

	 

	 <p><strong>Note:</strong> When initializing MouseEvent objects using initMouseEvent or 

	 initMouseEventNS, implementations should use the client coordinates clientX 

	 and clientY for calculation of other coordinates (such as target coordinates 

	 exposed by DOM Level 0 implementations).</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 2

	 ]]></playerversion>
<since><![CDATA[HTML 4.01

	 ]]></since>
<modified><![CDATA[DOMEvents 3

	 ]]></modified>
</classRec>
<method name='getModifierState' fullname='dom.events:MouseEvent/getModifierState' isStatic='false' isFinal='false' isOverride='false'  param_names='keyIdentifierArg' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Queries the state of a modifier using a key identifier.

		 

		 ]]></description>
<param><![CDATA[keyIdentifierArg Refer to the KeyboardEvent.getModifierState() 

		 method for a description of this parameter.

		 

		 Note: If an application wishes to distinguish between right and left 

		 modifiers, this information could be deduced using keyboard events 

		 and KeyboardEvent.keyLocation.

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<return><![CDATA[If it is a modifier key and the modifier is activated

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-getModifierState W3C - MouseEvent.getModifierState()

		 

		 ]]></see>
</method>
<method name='initMouseEvent' fullname='dom.events:MouseEvent/initMouseEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg;viewArg;detailArg;screenXArg;screenYArg;clientXArg;clientYArg;ctrlKeyArg;altKeyArg;shiftKeyArg;metaKeyArg;buttonArg;relatedTargetArg' param_types='dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;Number;Number;Number;Number;Number;Boolean;Boolean;Boolean;Boolean;Number;dom.events:EventTarget' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a MouseEvent object. This method has the 

		 same behavior as UIEvent.initUIEvent(). 

		 

		 ]]></description>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[detailArg Specifies UIEvent.detail.

		 ]]></param>
<param><![CDATA[screenXArg Specifies MouseEvent.screenX.

		 ]]></param>
<param><![CDATA[screenYArg Specifies MouseEvent.screenY.

		 ]]></param>
<param><![CDATA[clientXArg Specifies MouseEvent.clientX.

		 ]]></param>
<param><![CDATA[clientYArg Specifies MouseEvent.clientY.

		 ]]></param>
<param><![CDATA[ctrlKeyArg Specifies MouseEvent.ctrlKey.

		 ]]></param>
<param><![CDATA[altKeyArg Specifies MouseEvent.altKey.

		 ]]></param>
<param><![CDATA[shiftKeyArg Specifies MouseEvent.shiftKey.

		 ]]></param>
<param><![CDATA[metaKeyArg Specifies MouseEvent.metaKey.

		 ]]></param>
<param><![CDATA[buttonArg Specifies MouseEvent.button

		 ]]></param>
<param><![CDATA[relatedTargetArg Specifies MouseEvent.relatedTarget. This value may be null.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMouseEvent W3C - MouseEvent.initMouseEvent()

		 

		 ]]></see>
</method>
<method name='initMouseEventNS' fullname='dom.events:MouseEvent/initMouseEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg;viewArg;detailArg;screenXArg;screenYArg;clientXArg;clientYArg;ctrlKeyArg;altKeyArg;shiftKeyArg;metaKeyArg;buttonArg;relatedTargetArg;modifiersListArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;Number;Number;Number;Number;Number;Boolean;Boolean;Boolean;Boolean;Number;dom.events:EventTarget;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a MouseEvent object. This method has the

		 same behavior as UIEvent.initUIEventNS(). 

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[detailArg Specifies UIEvent.detail.

		 ]]></param>
<param><![CDATA[screenXArg Specifies MouseEvent.screenX.

		 ]]></param>
<param><![CDATA[screenYArg Specifies MouseEvent.screenY.

		 ]]></param>
<param><![CDATA[clientXArg Specifies MouseEvent.clientX.

		 ]]></param>
<param><![CDATA[clientYArg Specifies MouseEvent.clientY.

		 ]]></param>
<param><![CDATA[ctrlKeyArg Specifies MouseEvent.ctrlKey.

		 ]]></param>
<param><![CDATA[altKeyArg Specifies MouseEvent.altKey.

		 ]]></param>
<param><![CDATA[shiftKeyArg Specifies MouseEvent.shiftKey.

		 ]]></param>
<param><![CDATA[metaKeyArg Specifies MouseEvent.metaKey.

		 ]]></param>
<param><![CDATA[buttonArg Specifies MouseEvent.button

		 ]]></param>
<param><![CDATA[relatedTargetArg Specifies MouseEvent.relatedTarget. This value may be null.

		 ]]></param>
<param><![CDATA[modifiersListArg Refer to the KeyboardEvent.initKeyboardEventNS() method for a description of this parameter.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMouseEventNS W3C - MouseEvent.initMouseEventNS()

		 

		 ]]></see>
</method>
<method name='altKey' fullname='dom.events:MouseEvent/altKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Refer to the KeyboardEvent.altKey attribute.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-altKey W3C - MouseEvent.altKey

		 

		 ]]></see>
</method>
<method name='button' fullname='dom.events:MouseEvent/button/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns an integer value indicating the button that changed state. 

		 Some mice may provide or simulate more buttons, and values higher than 2 

		 can be used to represent such buttons.

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td><code>0</code></td><td>Standard 'click', usually left button </td>

		 	</tr>

		 	<tr>

		 		<td><code>1</code></td><td>Middle button, usually wheel-click </td>

		 	</tr>

		 	<tr>

		 		<td><code>2</code></td><td>Right button, usually right-click </td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, 

		 MouseEvent.button, and UIEvent.view are in use. The UIEvent.detail attribute indicates the current click count incremented by one.</td>

		 	</tr>

		 </table>

		 

		 <p><strong>Note:</strong> Because mouse clicks are frequently intercepted by the user 

		 interface, it may be difficult to detect buttons other than those for a standard mouse 

		 click (usually the left button) in some circumstances. </p>

		 

		 <p><strong>Note:</strong> Users may change the configuration of buttons on their pointing 

		 device so that if an event's button property is zero, it may not have been caused by 

		 the button that is physically left–most on the pointing device; however, it should 

		 behave as if the left button was clicked in the standard button layout. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script type="text/javascript"&gt;

		 

		 function whichButton(e) {

		 	// Handle different event models

		 	var e = e || window.event;

		 	var btnCode;

		 

		 	if ('object' == typeof e) {

		 		btnCode = e.button;

		 

		 		switch (btnCode) {

		 			case 0 : alert('Left button clicked');

		 			break;

		 			case 1 : alert('Middle button clicked');

		 			break;

		 			case 2 : alert('Right button clicked');

		 			break;

		 			default: alert('Unexpected code: ' + btnCode);

		 		}

		 	}

		 }

		 

		 &lt;/script&gt;

		 

		 &lt;p onmouseup="whichButton(event);" oncontextmenu="event.preventDefault();"&gt;Click with mouse...&lt;/p&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.button  MDC - event.button

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-button W3C - MouseEvent.button

		 

		 ]]></see>
</method>
<method name='clientX' fullname='dom.events:MouseEvent/clientX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the horizontal coordinate within the application's client area at which the event occurred 

		 (as opposed to the coordinates within the page). 

		 

		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 

		 event with a clientX value of 0, regardless of whether the page is scrolled horizontally.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 	&lt;title&gt;clientX\clientY example&lt;/title&gt;

		 

		 	&lt;script type="text/javascript"&gt;

		 		function showCoords(evt) {

		 			alert(

		 			"clientX value: " + evt.clientX + "\n"

		 			+ "clientY value: " + evt.clientY + "\n"

		 		);

		 		}

		 	&lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onmousedown="showCoords(event)"&gt;

		 	&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533567(VS.85).aspx MSDN: clientX Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.clientX  MDC - Event: clientX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: clientX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#clientY

		 ]]></see>
<see><![CDATA[#screenX

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='clientY' fullname='dom.events:MouseEvent/clientY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the vertical coordinate within the application's client area at which the event occurred 

		 (as opposed to the coordinates within the page).

		 

		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 

		 event with a clientY value of 0, regardless of whether the page is scrolled vertically.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;clientX\clientY example&lt;/title&gt;

		 

		 		&lt;script type="text/javascript"&gt;

		 			function showCoords(evt){

		 				alert(

		 				"clientX value: " + evt.clientX + "\n"

		 				+ "clientY value: " + evt.clientY + "\n"

		 			);

		 			}

		 		&lt;/script&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body onmousedown="showCoords(event)"&gt;

		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533568(VS.85).aspx MSDN: clientY Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.clientY  MDC - Event: clientY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: clientY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#clientX

		 ]]></see>
<see><![CDATA[#screenX

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='ctrlKey' fullname='dom.events:MouseEvent/ctrlKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Refer to the KeyboardEvent.ctrlKey attribute.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-ctrlKey W3C - MouseEvent.ctrlKey

		 

		 ]]></see>
</method>
<method name='metaKey' fullname='dom.events:MouseEvent/metaKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Refer to the KeyboardEvent.metaKey attribute.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 function goInput(e) {

		 	// checks metaKey and

		 	if (e.metaKey) {

		 		// passes event along

		 		superSizeOutput(e);

		 	} else {

		 		doOutput(e);

		 	}

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.metaKey MDC - event.metaKey

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-metaKey W3C - MouseEvent.metaKey

		 

		 ]]></see>
</method>
<method name='offsetX' fullname='dom.events:MouseEvent/offsetX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the horizontal coordinate, as number of CSS pixels, of the 

		 position where the event occurred relative to the origin of the padding box of the target node.

		 

		 <p>In IE the coordinates are calculated relative to the target element when that element is 

		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 

		 relative to the target's offsetParent.</p>

		 

		 <p><strong>Note (Safari/Chrome):</strong> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the

		 border box.</p>

		 

		 <p><strong>Note (Opera):</strong> Opera calculates the position from the content box instead of the padding box.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;head&gt;

		 	&lt;script&gt;

		 		function offsetCoords() {

		 			var offsetInfo = ""

		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"

		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"

		 			alert(offsetInfo);

		 		}

		 	&lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 

		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;

		 	...

		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;

		 	...

		 	&lt;/div&gt;

		 &lt;/body&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_incorrect

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_incorrect

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534305(VS.85).aspx MSDN: offsetX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: offsetX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#offsetY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='offsetY' fullname='dom.events:MouseEvent/offsetY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the vertical coordinate, as number of CSS pixels, of the 

		 position where the event occurred relative to the origin of the padding box of the target node.

		 

		 <p>In IE the coordinates are calculated relative to the target element when that element is 

		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 

		 relative to the target's offsetParent.</p>

		 

		 <p><strong>Note (Safari/Chrome):</strong> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the

		 border box.</p>

		 

		 <p><strong>Note (Opera):</strong> Opera calculates the position from the content box instead of the padding box.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;head&gt;

		 	&lt;script&gt;

		 		function offsetCoords() {

		 			var offsetInfo = ""

		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"

		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"

		 			alert(offsetInfo);

		 		}

		 	&lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 

		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;

		 	...

		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;

		 	...

		 	&lt;/div&gt;

		 &lt;/body&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_incorrect

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_incorrect

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534306(VS.85).aspx MSDN: offsetY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: offsetY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#offsetX

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='pageX' fullname='dom.events:MouseEvent/pageX/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[

		 Returns the horizontal coordinate of the event relative to whole document. 

		 

		 <p><strong>Note (IE):</strong> In order to get it in IE, too, add the scrolling offset of the 

		 document to clientX/Y.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 	function showCoords(evt){

		 		var form = document.forms.form_coords;

		 		var parent_id = evt.target.parentNode.id;

		 		form.parentId.value = parent_id;

		 		form.pageXCoords.value = evt.pageX;

		 		form.pageYCoords.value = evt.pageY;

		 		form.layerXCoords.value = evt.layerX;

		 		form.layerYCoords.value = evt.layerY;

		 	}

		 &lt;/script&gt;

		 

		 &lt;style type="text/css"&gt;

		 

		 #d1 {

		 	border: solid blue 1px;

		 	padding: 20px;

		 }

		 

		 #d2 {

		 	position: absolute;

		 	top: 180px;

		 	left: 80%;

		 	right:auto;

		 	width: 40%;

		 	border: solid blue 1px;

		 	padding: 20px;

		 }

		 

		 #d3 {

		 	position: absolute;

		 	top: 240px;

		 	left: 20%;

		 	width: 50%;

		 	border: solid blue 1px;

		 	padding: 10px;

		 }

		 

		 &lt;/style&gt;

		 &lt;/head&gt;

		 

		 &lt;body onmousedown="showCoords(event)"&gt;

		 

		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;

		 

		 &lt;div id="d1"&gt;

		 	&lt;span&gt;This is an un-positioned div so clicking it will return

		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;div id="d2"&gt;

		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY

		 	values that are relative to the top-left corner of this positioned

		 	element. Note the pageX\pageY properties still return the

		 	absolute position in the document, including page scrolling.&lt;/span&gt;

		 

		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it

		 	will return layerX/layerY values that are relative to the top-left

		 	corner of this positioned element. Note the pageX\pageY properties still

		 	return the absolute position in the document, including page

		 	scrolling.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;div id="d3"&gt;

		 	&lt;form name="form_coords"&gt;

		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;

		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  

		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;

		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  

		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;

		 	&lt;/form&gt;

		 &lt;/div&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.pageX MDC - Event: pageX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: pageX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#pageY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='pageY' fullname='dom.events:MouseEvent/pageY/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Number'>
<description><![CDATA[

		 Returns the vertical coordinate of the event relative to the whole document.

		 

		 <p><strong>Note (IE):</strong> In order to get it in IE, too, add the scrolling offset of the 

		 document to clientX/Y.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 	function showCoords(evt){

		 		var form = document.forms.form_coords;

		 		var parent_id = evt.target.parentNode.id;

		 		form.parentId.value = parent_id;

		 		form.pageXCoords.value = evt.pageX;

		 		form.pageYCoords.value = evt.pageY;

		 		form.layerXCoords.value = evt.layerX;

		 		form.layerYCoords.value = evt.layerY;

		 	}

		 &lt;/script&gt;

		 

		 &lt;style type="text/css"&gt;

		 

		 #d1 {

		 	border: solid blue 1px;

		 	padding: 20px;

		 }

		 

		 #d2 {

		 	position: absolute;

		 	top: 180px;

		 	left: 80%;

		 	right:auto;

		 	width: 40%;

		 	border: solid blue 1px;

		 	padding: 20px;

		 }

		 

		 #d3 {

		 	position: absolute;

		 	top: 240px;

		 	left: 20%;

		 	width: 50%;

		 	border: solid blue 1px;

		 	padding: 10px;

		 }

		 

		 &lt;/style&gt;

		 &lt;/head&gt;

		 

		 &lt;body onmousedown="showCoords(event)"&gt;

		 

		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;

		 

		 &lt;div id="d1"&gt;

		 	&lt;span&gt;This is an un-positioned div so clicking it will return

		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;div id="d2"&gt;

		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY

		 	values that are relative to the top-left corner of this positioned

		 	element. Note the pageX\pageY properties still return the

		 	absolute position in the document, including page scrolling.&lt;/span&gt;

		 

		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it

		 	will return layerX/layerY values that are relative to the top-left

		 	corner of this positioned element. Note the pageX\pageY properties still

		 	return the absolute position in the document, including page

		 	scrolling.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;div id="d3"&gt;

		 	&lt;form name="form_coords"&gt;

		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;

		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  

		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;

		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  

		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;

		 	&lt;/form&gt;

		 &lt;/div&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.pageY MDC - Event: pageY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: pageY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#pageX

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='relatedTarget' fullname='dom.events:MouseEvent/relatedTarget/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.events:EventTarget'>
<description><![CDATA[

		 Used to identify a secondary EventTarget related to a UI event, depending 

		 on the type of event.

		 

		 <p><strong>Note:</strong> The relatedTarget property is used to find the other element, if any, involved 

		 in an event. Events like mouseover are oriented around a certain target, but also involve a secondary target, 

		 such as the target that is exited as the mouseover event fires for the primary target. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var rel = event.relatedTarget;

		 // dump("LEAVING " + (rel ? rel.localName : "null") + "\n");

		 // relatedTarget is null when the titletip is first shown:

		 // a mouseout event fires because the mouse is exiting 

		 // the main window and entering the titletip "window".

		 // relatedTarget is also null when the mouse exits the main 

		 // window completely, so count how many times relatedTarget 

		 // was null after titletip is first shown and hide popup

		 // the 2nd time

		 if (!rel) {

		 	if (++this._mouseOutCount &gt; 1)

		 	this.hidePopup();

		 	return;

		 }

		 // find out if the node we are entering is one of our 

		 // anonymous children

		 while (rel) {

		 	if (rel == this) {

		 		break;

		 	}

		 	rel = rel.parentNode;

		 }

		 // if the entered node is not a descendant of ours, hide 

		 // the tooltip

		 if (rel != this &amp;&amp; this._isMouseOver) {

		 	this.hidePopup();

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.relatedTarget MDC - event.relatedTarget

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-relatedTarget W3C - MouseEvent.relatedTarget

		 

		 ]]></see>
</method>
<method name='screenX' fullname='dom.events:MouseEvent/screenX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the horizontal coordinate of the event within the screen as a whole. 

		 

		 <p><strong>Note:</strong> When you trap events on the window, document, or other roomy elements, you can get the 

		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;

		 

		 		&lt;script type="text/javascript"&gt;

		 			function showCoords(evt){

		 				alert(

		 				"screenX value: " + evt.screenX + "\n"

		 				+ "screenY value: " + evt.screenY + "\n"

		 			);

		 		}

		 

		 		&lt;/script&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body onmousedown="showCoords(event)"&gt;

		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 <listing>

		 function checkClickMap(e) {

		 	if (e.screenX &lt; 50) doRedButton();

		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();

		 	if (e.screenX &gt;= 100) doRedButton();

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534391(VS.85).aspx MSDN: screenX Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.screenX  MDC - Event: screenX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: screenX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#clientX

		 ]]></see>
<see><![CDATA[#clientY

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='screenY' fullname='dom.events:MouseEvent/screenY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the vertical coordinate of the event within the screen as a whole.

		 

		 <p><strong>Note:</strong> When you trap events on the window, document, or other roomy elements, you can get the 

		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;

		 

		 		&lt;script type="text/javascript"&gt;

		 			function showCoords(evt){

		 				alert(

		 				"screenX value: " + evt.screenX + "\n"

		 				+ "screenY value: " + evt.screenY + "\n"

		 			);

		 		}

		 

		 		&lt;/script&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body onmousedown="showCoords(event)"&gt;

		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 <listing>

		 function checkClickMap(e) {

		 	if (e.screenX &lt; 50) doRedButton();

		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();

		 	if (e.screenX &gt;= 100) doRedButton();

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534392(VS.85).aspx MSDN: screenY Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.screenY  MDC - Event: screenY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: screenY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#clientX

		 ]]></see>
<see><![CDATA[#clientY

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='shiftKey' fullname='dom.events:MouseEvent/shiftKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Refer to the KeyboardEvent.shiftKey attribute.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;shiftKey example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function showChar(e){

		 	alert(

		 		"Key Pressed: " + String.fromCharCode(e.charCode) + "\n"

		 		+ "charCode: " + e.charCode + "\n"

		 		+ "SHIFT key pressed: " + e.shiftKey + "\n"

		 		+ "ALT key pressed: " + e.altKey + "\n"

		 	);

		 }

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onkeypress="showChar(event);"&gt;

		 &lt;p&gt;Press any character key, with or without holding down

		 the SHIFT key.&lt;br /&gt;

		 You can also use the SHIFT key together with the ALT key.&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.shiftKey MDC - event.shiftKey

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-shiftKey W3C - MouseEvent.shiftKey

		 

		 ]]></see>
</method>
<method name='x' fullname='dom.events:MouseEvent/x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the value of pageX. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_alternative

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535154(VS.85).aspx MSDN: x Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: x Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#y

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='y' fullname='dom.events:MouseEvent/y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the value of pageY. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_alternative

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535164(VS.85).aspx MSDN: y Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: y Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#x

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<field name='click' fullname='dom.events:MouseEvent/click' type='String' isStatic='true' isConst='true' defaultValue='click' >
<description><![CDATA[

		 A pointing device button is clicked over an element. 

		 

		 <p>The definition of a click depends on the environment configuration; i.e. it may depend on the screen location or 

		 the delay between the press and release of the pointing device button. In any case, the event target must be the 

		 same between the mousedown, mouseup, and click. The sequence of these events is: mousedown, mouseup, and click. It 

		 depends on the environment configuration whether the event type click can occur if one or more of the event types 

		 mouseover, mousemove, and mouseout occur between the press and release of the pointing device button. In addition, 

		 the event type is dispatched as described in Activation requests and behavior.</p>

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 

		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, MouseEvent.button, and UIEvent.view 

		 are in use. The UIEvent.detail attribute indicates the current click count. The attribute value is 1 when the user 

		 begins this action and increments by 1 for each click.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.01

		 ]]></playerversion>
<since><![CDATA[HTML 4.01

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-click W3C - MouseEvent.click

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 ]]></modified>
</field>
<field name='dblclick' fullname='dom.events:MouseEvent/dblclick' type='String' isStatic='true' isConst='true' defaultValue='dblclick' >
<description><![CDATA[

		 A pointing device button is clicked twice over an element. 

		 

		 <p>The definition of a double click depends on the environment configuration, except that the event target 

		 must be the same between mousedown, mouseup, and dblclick. This event type is dispatched after the event 

		 type click if a click and double click occur simultaneously, and after the event type mouseup otherwise.</p>

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, MouseEvent.altKey, 

		 MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, MouseEvent.button, and UIEvent.view are in use. The UIEvent.detail 

		 attribute indicates the current click count.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.01

		 ]]></playerversion>
<since><![CDATA[HTML 4.01

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-dblclick W3C - MouseEvent.dblclick

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 ]]></modified>
</field>
<field name='mousedown' fullname='dom.events:MouseEvent/mousedown' type='String' isStatic='true' isConst='true' defaultValue='mousedown' >
<description><![CDATA[

		 A pointing device button is pressed over an element.

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 

		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, MouseEvent.button, and UIEvent.view 

		 are in use. The UIEvent.detail attribute indicates the current click count incremented by one. For example, if no 

		 click happened before the mousedown, UIEvent.detail will contain the value 1.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.01

		 ]]></playerversion>
<since><![CDATA[HTML 4.01

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousedown W3C - MouseEvent.mousedown

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 ]]></modified>
</field>
<field name='mousemove' fullname='dom.events:MouseEvent/mousemove' type='String' isStatic='true' isConst='true' defaultValue='mousemove' >
<description><![CDATA[

		 A pointing device is moved while it is over an element.

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 

		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.01

		 ]]></playerversion>
<since><![CDATA[HTML 4.01

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousemove W3C - MouseEvent.mousemove

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 ]]></modified>
</field>
<field name='mouseout' fullname='dom.events:MouseEvent/mouseout' type='String' isStatic='true' isConst='true' defaultValue='mouseout' >
<description><![CDATA[

		 A pointing device is moved away from an element.

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 

		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use. 

		 MouseEvent.relatedTarget indicates the event target a pointing device is entering, if any.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.01

		 ]]></playerversion>
<since><![CDATA[HTML 4.01

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mouseout W3C - MouseEvent.mouseout

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 ]]></modified>
</field>
<field name='mouseover' fullname='dom.events:MouseEvent/mouseover' type='String' isStatic='true' isConst='true' defaultValue='mouseover' >
<description><![CDATA[

		 A pointing device is moved onto an element.

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 

		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use. 

		 MouseEvent.relatedTarget indicates the event target a pointing device is exiting, if any.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.01

		 ]]></playerversion>
<since><![CDATA[HTML 4.01

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mouseover W3C - MouseEvent.mouseover

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 ]]></modified>
</field>
<field name='mouseup' fullname='dom.events:MouseEvent/mouseup' type='String' isStatic='true' isConst='true' defaultValue='mouseup' >
<description><![CDATA[

		 A pointing device button is released over an element.

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, 

		 MouseEvent.button, and UIEvent.view are in use. The UIEvent.detail attribute indicates the current click count incremented by one.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 4.01

		 ]]></playerversion>
<since><![CDATA[HTML 4.01

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mouseup W3C - MouseEvent.mouseup

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 ]]></modified>
</field>
<classRec name='KeyboardEvent' fullname='dom.events:KeyboardEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\KeyboardEvent.as' namespace='dom.events' access='public' baseclass='dom.events:UIEvent' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The KeyboardEvent interface provides specific contextual information 

	 associated with keyboard devices. Each keyboard event references a key 

	 using an identifier. Keyboard events are commonly directed at the 

	 element that has the focus.

	 

	 <p>The KeyboardEvent interface provides convenient attributes for some common 

	 modifiers keys: KeyboardEvent.ctrlKey, KeyboardEvent.shiftKey, 

	 KeyboardEvent.altKey, KeyboardEvent.metaKey. These attributes are equivalent 

	 to using the method KeyboardEvent.getModifierState(keyIdentifierArg) with 

	 "Control", "Shift", "Alt", or "Meta" respectively.</p>

	 

	 <p>To create an instance of the KeyboardEvent interface, use the 

	 DocumentEvent.createEvent("KeyboardEvent") method call.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent W3C - DOM 3 Events: KeyboardEvent

	 

	 ]]></see>
</classRec>
<method name='getModifierState' fullname='dom.events:KeyboardEvent/getModifierState' isStatic='false' isFinal='false' isOverride='false'  param_names='keyIdentifierArg' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Queries the state of a modifier using a key identifier.

		 

		 ]]></description>
<param><![CDATA[keyIdentifierArg A modifier key identifier. Common modifier 

		 keys are "Alt", "AltGraph", "CapsLock", "Control", "Meta", "NumLock", 

		 "Scroll", or "Shift".

		 

		 <p><strong>Note:</strong> If an application wishes to distinguish between right and left 

		 modifiers, this information could be deduced using keyboard events 

		 and KeyboardEvent.keyLocation.</p>

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<return><![CDATA[If it is a modifier key and the modifier is activated

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-getModifierState W3C - DOM 3 Events: KeyboardEvent.getModifierState()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/keyset.html#Modifiers Modifier Keys

		 

		 ]]></see>
</method>
<method name='initKeyboardEvent' fullname='dom.events:KeyboardEvent/initKeyboardEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg;viewArg;keyIdentifierArg;keyLocationArg;modifiersListArg' param_types='dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;dom.core.types:DOMString;Number;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a KeyboardEvent object. This method has the 

		 same behavior as UIEvent.initUIEvent(). The value of UIEvent.detail 

		 remains undefined.

		 

		 ]]></description>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[keyIdentifierArg Specifies KeyboardEvent.keyIdentifier.

		 ]]></param>
<param><![CDATA[keyLocationArg Specifies KeyboardEvent.keyLocation.

		 ]]></param>
<param><![CDATA[modifiersListArg A white space separated list of modifier key 

		 identifiers to be activated on this object. As an example, "Control Alt" 

		 will mark the control and alt modifiers as activated.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-initKeyboardEvent W3C - DOM 3 Events: KeyboardEvent.initKeyboardEvent()

		 

		 ]]></see>
</method>
<method name='initKeyboardEventNS' fullname='dom.events:KeyboardEvent/initKeyboardEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;typeArg;canBubbleArg;cancelableArg;viewArg;keyIdentifierArg;keyLocationArg;modifiersListArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;dom.core.types:DOMString;Number;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a KeyboardEvent object. This method has the 

		 same behavior as UIEvent.initUIEventNS(). The value of UIEvent.detail 

		 remains undefined. 

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[keyIdentifierArg Specifies KeyboardEvent.keyIdentifier.

		 ]]></param>
<param><![CDATA[keyLocationArg Specifies KeyboardEvent.keyLocation.

		 ]]></param>
<param><![CDATA[modifiersListArg A white space separated list of modifier key 

		 identifiers to be activated on this object. As an example, "Control Alt" 

		 will mark the control and alt modifiers as activated.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-initKeyboardEventNS W3C - DOM 3 Events: KeyboardEvent.initKeyboardEventNS()

		 

		 ]]></see>
</method>
<method name='altKey' fullname='dom.events:KeyboardEvent/altKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 If the alternative (Alt) key modifier is activated.

		 

		 <p><strong>Note:</strong> The Option key modifier on Macintosh systems must be represented 

		 using this key modifier.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;altKey example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function showChar(e){

		 	alert(

		 		"Key Pressed: " + String.fromCharCode(e.charCode) + "\n"

		 		+ "charCode: " + e.charCode + "\n"

		 		+ "ALT key pressed: " + e.altKey + "\n"

		 	);

		 }

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onkeypress="showChar(event);"&gt;

		 &lt;p&gt;

		 Press any character key,

		 with or without holding down the ALT key.&lt;br /&gt;

		 You can also use the SHIFT key together with the ALT key.

		 &lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.altKey  MDC - event.altKey

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-altKey W3C - DOM 3 Events: KeyboardEvent.altKey

		 

		 ]]></see>
</method>
<method name='charCode' fullname='dom.events:KeyboardEvent/charCode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns the Unicode value of a character key pressed during a keypress event.

		 

		 <p>For constants equivalent to these numeric codes, see KeyEvent.</p>

		 

		 <p><strong>Note:</strong> In a keypress event, the Unicode value of the key pressed is stored in either the 

		 keyCode or charCode property, never both. If the key pressed generates a character (e.g. 'a'), charCode is 

		 set to the code of that character, respecting the letter case. (i.e. charCode takes into account whether the 

		 shift key is held down). Otherwise, the code of the pressed key is stored in keyCode.</p>

		 

		 <p><strong>Note:</strong> charCode is never set in the keydown and keyup events. In these cases, keyCode is 

		 set instead.</p>

		 

		 <p><strong>Note:</strong> To get the code of the key regardless of whether it was stored in keyCode or 

		 charCode, query the which property.</p>

		 

		 <p><strong>Note:</strong> Characters entered through an IME do not register through keyCode or charCode. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;charCode example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function showChar(e) {

		 	alert("Key Pressed: " + String.fromCharCode(e.charCode) + "\n"

		 	+ "charCode: " + e.charCode);

		 }

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onkeypress="showChar(event);"&gt;

		 &lt;p&gt;Press any 'character' type key.&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.charCode MDC - event.charCode

		 

		 ]]></see>
</method>
<method name='ctrlKey' fullname='dom.events:KeyboardEvent/ctrlKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 If the control (Ctrl) key modifier is activated.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;ctrlKey example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function showChar(e) {

		 	alert(

		 		"Key Pressed: " + String.fromCharCode(e.charCode) + "\n"

		 		+ "charCode: " + e.charCode + "\n"

		 		+ "CTRL key pressed: " + e.ctrlKey + "\n"

		 	);

		 }

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onkeypress="showChar(event);"&gt;

		 &lt;p&gt;Press any character key, with or without holding down the CTRL key.&lt;br /&gt;

		 You can also use the SHIFT key together with the CTRL key.&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.ctrlKey  MDC - event.ctrlKey

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-ctrlKey W3C - DOM 3 Events: KeyboardEvent.ctrlKey

		 

		 ]]></see>
</method>
<method name='keyCode' fullname='dom.events:KeyboardEvent/keyCode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the Unicode value of a non-character key in a keypress event or any key in any other type of keyboard event.

		 

		 <p>For constants equivalent to these numeric codes, see KeyEvent.</p>

		 

		 <p><strong>Note:</strong> In a keypress event, the Unicode value of the key pressed is stored in either the keyCode or 

		 charCode property, never both. If the key pressed generates a character (e.g. 'a'), charCode is set to the code of that 

		 character, respecting the letter case. (i.e. charCode takes into account whether the shift key is held down). Otherwise, 

		 the code of the pressed key is stored in keyCode.</p>

		 

		 <p><strong>Note:</strong> keyCode is always set in the keydown and keyup events. In these cases, charCode is never set.</p>

		 

		 <p><strong>Note:</strong> To get the code of the key regardless of whether it was stored in keyCode or charCode, query the which property.</p>

		 

		 <p><strong>Note:</strong> Characters entered through an IME do not register through keyCode or charCode. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;keyCode example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function showKeyCode(e) {

		 	alert("keyCode for the key pressed: " + e.keyCode + "\n");

		 }

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onkeydown="showKeyCode(event);"&gt;

		 &lt;p&gt;Press any key.&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.keyCode MDC - event.keyCode

		 ]]></see>
<see><![CDATA[dom.events.KeyEvent

		 

		 ]]></see>
</method>
<method name='keyIdentifier' fullname='dom.events:KeyboardEvent/keyIdentifier/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Holds the identifier of the key. The key identifiers are defined in 

		 Appendix A.2 "Key identifiers set". Implementations that are unable 

		 to identify a key must use the key identifier "Unidentified".

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-keyIdentifier W3C - DOM 3 Events: KeyboardEvent.keyIdentifier

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/keyset.html#KeySet-Set Key identifiers set

		 

		 ]]></see>
</method>
<method name='keyLocation' fullname='dom.events:KeyboardEvent/keyLocation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The keyLocation attribute contains an indication of the location of 

		 they key on the device, as described in Keyboard event types.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-keylocation W3C - DOM 3 Events: KeyboardEvent.keyLocation

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#ID-KeyboardEvent-KeyLocationCode Keyboard event types

		 

		 ]]></see>
</method>
<method name='metaKey' fullname='dom.events:KeyboardEvent/metaKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 If the meta (Meta) key modifier is activated.

		 

		 <p><strong>Note:</strong> The Command key modifier on Macintosh systems must be represented 

		 using this key modifier.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-metaKey W3C - DOM 3 Events: KeyboardEvent.metaKey

		 

		 ]]></see>
</method>
<method name='shiftKey' fullname='dom.events:KeyboardEvent/shiftKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 If the shift (Shift) key modifier is activated.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-shiftKey W3C - DOM 3 Events: KeyboardEvent.shiftKey

		 

		 ]]></see>
</method>
<field name='DOM_KEY_LOCATION_LEFT' fullname='dom.events:KeyboardEvent/DOM_KEY_LOCATION_LEFT' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The key activated is in the left key location (there is more than one 

		 possible location for this key). Example: the left Shift key on a PC 

		 101 Key US keyboard.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_LEFT W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_LEFT

		 

		 ]]></see>
</field>
<field name='DOM_KEY_LOCATION_NUMPAD' fullname='dom.events:KeyboardEvent/DOM_KEY_LOCATION_NUMPAD' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The key activation originated on the numeric keypad or with a virtual key 

		 corresponding to the numeric keypad. Example: the '1' key on a PC 101 Key 

		 US keyboard located on the numeric pad.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_NUMPAD W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_NUMPAD

		 

		 ]]></see>
</field>
<field name='DOM_KEY_LOCATION_RIGHT' fullname='dom.events:KeyboardEvent/DOM_KEY_LOCATION_RIGHT' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The key activation is in the right key location (there is more than one 

		 possible location for this key). Example: the right Shift key on a PC 

		 101 Key US keyboard.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_RIGHT W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_RIGHT

		 

		 ]]></see>
</field>
<field name='DOM_KEY_LOCATION_STANDARD' fullname='dom.events:KeyboardEvent/DOM_KEY_LOCATION_STANDARD' type='Number' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[

		 The key activation is not distinguished as the left or right version 

		 of the key, and did not originate from the numeric keypad (or did 

		 not originate with a virtual key corresponding to the numeric keypad). 

		 Example: the 'Q' key on a PC 101 Key US keyboard.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_STANDARD W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_STANDARD

		 

		 ]]></see>
</field>
<field name='keydown' fullname='dom.events:KeyboardEvent/keydown' type='String' isStatic='true' isConst='true' defaultValue='keydown' >
<description><![CDATA[

		 A key is pressed down. 

		 

		 <p>This event type is device dependent and relies on the capabilities of the input devices 

		 and how they are mapped in the operating system. This event type is generated after the keyboard mapping but 

		 before the processing of an input method editor. This event should logically happen before the event keyup is 

		 produced. Whether a keydown contributes or not to the generation of a text event is implementation dependent.</p>

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>UIEvent.view, KeyboardEvent.keyIdentifier, KeyboardEvent.keyLocation, 

		 KeyboardEvent.altKey, KeyboardEvent.shiftKey, KeyboardEvent.ctrlKey, and KeyboardEvent.metaKey are in use.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-keydown W3C - DOM 3 Events: KeyboardEvent.keydown

		 

		 ]]></see>
</field>
<field name='keyup' fullname='dom.events:KeyboardEvent/keyup' type='String' isStatic='true' isConst='true' defaultValue='keyup' >
<description><![CDATA[

		 A key is released. 

		 

		 <p>This event type is device dependent and relies on the capabilities of the input devices and 

		 how they are mapped in the operating system. This event type is generated after the keyboard mapping but before 

		 the processing of an input method editor. This event should logically happen after the event keydown is produced.

		 Whether a keyup contributes or not to the generation of a text event is implementation dependent.</p>

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>UIEvent.view, KeyboardEvent.keyIdentifier, and KeyboardEvent.keyLocation are in use. 

		 KeyboardEvent.altKey, KeyboardEvent.shiftKey, KeyboardEvent.ctrlKey, and KeyboardEvent.metaKey are in use unless the 

		 KeyboardEvent.keyIdentifier corresponds to the key modifier itself.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-keyup W3C - DOM 3 Events: KeyboardEvent.keyup

		 

		 ]]></see>
</field>
<classRec name='KeyEvent' fullname='dom.events:KeyEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\KeyEvent.as' namespace='dom.events' access='public' baseclass='dom.events:UIEvent' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The KeyEvent interface provides specific contextual information associated with Key Events.

	 

	 The detail attribute inherited from UIEvent is used to indicated the number of keypresses 

	 which have occurred during key repetition. If this information is not available this value 

	 should be 0.

	 

	 <p><strong>Note:</strong> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Event/UIEvent/KeyEvent MDC - KeyEvent

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent W3C - DOM 3 Events: KeyEvent

	 

	 ]]></see>
</classRec>
<method name='checkModifier' fullname='dom.events:KeyEvent/checkModifier' isStatic='false' isFinal='false' isOverride='false'  param_names='modifer' param_types='Number' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 The CheckModifier method is used to check the status of a single modifier key associated with a KeyEvent. 

		 The identifier of the modifier in question is passed into the CheckModifier function. If the modifier is 

		 triggered it will return true. If not, it will return false.

		 

		 <p>The list of keys below represents the allowable modifier paramaters for this method. </p>

		 <ul>

		 <li>DOM_VK_LEFT_ALT</li>

		 <li>DOM_VK_RIGHT_ALT</li>

		 <li>DOM_VK_LEFT_CONTROL</li>

		 <li>DOM_VK_RIGHT_CONTROL</li>

		 <li>DOM_VK_LEFT_SHIFT</li>

		 <li>DOM_VK_RIGHT_SHIFT</li>

		 <li>DOM_VK_META</li>

		 </ul>

		 

		 ]]></description>
<param><![CDATA[modifer The modifier which the user wishes to query.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<return><![CDATA[The status of the modifier represented as a boolean.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-checkModifier W3C - DOM 3 Events: KeyEvent.checkModifier()

		 

		 ]]></see>
</method>
<method name='initKeyEvent' fullname='dom.events:KeyEvent/initKeyEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg;viewArg;detailArg;outputStringArg;keyValArg;virtKeyValArg;inputGeneratedArg;numPadArg' param_types='dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;Number;dom.core.types:DOMString;Number;Number;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 The initKeyEvent method is used to initialize the value of a MouseEvent created through 

		 the DocumentEvent interface. This method may only be called before the KeyEvent has been 

		 dispatched via the dispatchEvent method, though it may be called multiple times during that 

		 phase if necessary. If called multiple times, the final invocation takes precedence. This 

		 method has no effect if called after the event has been dispatched. 

		 

		 ]]></description>
<param><![CDATA[typeArg Specifies the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies whether or not the event can bubble.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies whether or not the event's default action can be prevent.

		 ]]></param>
<param><![CDATA[viewArg Specifies the KeyEvent's AbstractView.

		 ]]></param>
<param><![CDATA[detailArg Specifies the number of repeated keypresses, if available.

		 ]]></param>
<param><![CDATA[outputStringArg Specifies the KeyEvent's outputString attribute

		 ]]></param>
<param><![CDATA[keyValArg Specifies the KeyEvent's keyValattribute

		 ]]></param>
<param><![CDATA[virtKeyValArg Specifies the KeyEvent's virtKeyValattribute

		 ]]></param>
<param><![CDATA[inputGeneratedArg Specifies the KeyEvent's inputGeneratedattribute

		 ]]></param>
<param><![CDATA[numPadArg Specifies the KeyEvent's numPadattribute

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-Event-initKeyEvent W3C - DOM 3 Events: KeyEvent.initKeyEvent()

		 

		 ]]></see>
</method>
<method name='initModifier' fullname='dom.events:KeyEvent/initModifier' isStatic='false' isFinal='false' isOverride='false'  param_names='modifier;value' param_types='Number;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 The initModifier method is used to initialize the values of any modifiers associated with a KeyEvent 

		 created through the DocumentEvent interface. This method may only be called before the KeyEvent has 

		 been dispatched via the dispatchEvent method, though it may be called multiple times during that phase 

		 if necessary. If called multiple times with the same modifier property the final invocation takes 

		 precedence. Unless explicitly give a value of true, all modifiers have a value of false. This method 

		 has no effect if called after the event has been dispatched.

		 

		 <p>The list of keys below represents the allowable modifier paramaters for this method. </p>

		 

		 ]]></description>
<param><![CDATA[modifier The modifier which the user wishes to initialize

		 ]]></param>
<param><![CDATA[value The new value of the modifier.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-initModifier W3C - DOM 3 Events: KeyEvent.initModifier()

		 

		 ]]></see>
</method>
<method name='inputGenerated' fullname='dom.events:KeyEvent/inputGenerated/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The inputGenerated attribute indicates whether the key event will normally cause visible output. If 

		 the key event does not generate any visible output, such as the use of a function key or the 

		 combination of certain modifier keys used in conjunction with another key, then the value will be 

		 false. If visible output is normally generated by the key event then the value will be true.

		 

		 <p>The value of inputGenerated does not guarantee the creation of a character. If a key event causing 

		 visible output is cancelable it may be prevented from causing output. This attribute is intended 

		 primarily to differentiate between keys events which may or may not produce visible output depending 

		 on the system state.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-inputGenerated W3C - DOM 3 Events: KeyEvent.inputGenerated

		 

		 ]]></see>
</method>
<method name='keyVal' fullname='dom.events:KeyEvent/keyVal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The value of keyVal holds the value of the Unicode character associated with the depressed key. 

		 If the key has no Unicode representation or no Unicode character is available the value is 0.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-UIEvent-keyVal W3C - DOM 3 Events: KeyEvent.keyVal

		 

		 ]]></see>
</method>
<method name='numPad' fullname='dom.events:KeyEvent/numPad/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The numPad attribute indicates whether or not the key event was generated on the number pad section 

		 of the keyboard. If the number pad was used to generate the key event the value is true, otherwise the value is false.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-numPad W3C - DOM 3 Events: KeyEvent.numPad

		 

		 ]]></see>
</method>
<method name='outputString' fullname='dom.events:KeyEvent/outputString/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 outputString holds the value of the output generated by the key event. This may be a single Unicode 

		 character or it may be a string. It may also be null in the case where no output was generated by the key event.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-UIEvent-outputString W3C - DOM 3 Events: KeyEvent.outputString

		 

		 ]]></see>
</method>
<method name='virtKeyVal' fullname='dom.events:KeyEvent/virtKeyVal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 When the key associated with a key event is not representable via a Unicode character virtKeyVale holds 

		 the virtual key code associated with the depressed key. If the key has a Unicode representation or no 

		 virtual code is available the value is DOM_VK_UNDEFINED.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-virtKeyVal W3C - DOM 3 Events: KeyEvent.virtKeyVal

		 

		 ]]></see>
</method>
<method name='inputGenerated' fullname='dom.events:KeyEvent/inputGenerated/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='keyVal' fullname='dom.events:KeyEvent/keyVal/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='numPad' fullname='dom.events:KeyEvent/numPad/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='outputString' fullname='dom.events:KeyEvent/outputString/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='virtKeyVal' fullname='dom.events:KeyEvent/virtKeyVal/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<field name='DOM_VK_CAPS_LOCK' fullname='dom.events:KeyEvent/DOM_VK_CAPS_LOCK' type='Number' isStatic='true' isConst='true' defaultValue='9' >
</field>
<field name='DOM_VK_DELETE' fullname='dom.events:KeyEvent/DOM_VK_DELETE' type='Number' isStatic='true' isConst='true' defaultValue='10' >
</field>
<field name='DOM_VK_DOWN' fullname='dom.events:KeyEvent/DOM_VK_DOWN' type='Number' isStatic='true' isConst='true' defaultValue='23' >
</field>
<field name='DOM_VK_END' fullname='dom.events:KeyEvent/DOM_VK_END' type='Number' isStatic='true' isConst='true' defaultValue='11' >
</field>
<field name='DOM_VK_ENTER' fullname='dom.events:KeyEvent/DOM_VK_ENTER' type='Number' isStatic='true' isConst='true' defaultValue='12' >
</field>
<field name='DOM_VK_ESCAPE' fullname='dom.events:KeyEvent/DOM_VK_ESCAPE' type='Number' isStatic='true' isConst='true' defaultValue='13' >
</field>
<field name='DOM_VK_F1' fullname='dom.events:KeyEvent/DOM_VK_F1' type='Number' isStatic='true' isConst='true' defaultValue='26' >
<description><![CDATA[

		 Constant for the F1 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F10' fullname='dom.events:KeyEvent/DOM_VK_F10' type='Number' isStatic='true' isConst='true' defaultValue='35' >
<description><![CDATA[

		 Constant for the F10 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F11' fullname='dom.events:KeyEvent/DOM_VK_F11' type='Number' isStatic='true' isConst='true' defaultValue='36' >
<description><![CDATA[

		 Constant for the F11 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F12' fullname='dom.events:KeyEvent/DOM_VK_F12' type='Number' isStatic='true' isConst='true' defaultValue='37' >
<description><![CDATA[

		 Constant for the F12 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F13' fullname='dom.events:KeyEvent/DOM_VK_F13' type='Number' isStatic='true' isConst='true' defaultValue='38' >
<description><![CDATA[

		 Constant for the F13 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F14' fullname='dom.events:KeyEvent/DOM_VK_F14' type='Number' isStatic='true' isConst='true' defaultValue='39' >
<description><![CDATA[

		 Constant for the F14 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F15' fullname='dom.events:KeyEvent/DOM_VK_F15' type='Number' isStatic='true' isConst='true' defaultValue='40' >
<description><![CDATA[

		 Constant for the F15 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F16' fullname='dom.events:KeyEvent/DOM_VK_F16' type='Number' isStatic='true' isConst='true' defaultValue='41' >
<description><![CDATA[

		 Constant for the F16 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F17' fullname='dom.events:KeyEvent/DOM_VK_F17' type='Number' isStatic='true' isConst='true' defaultValue='42' >
<description><![CDATA[

		 Constant for the F17 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F18' fullname='dom.events:KeyEvent/DOM_VK_F18' type='Number' isStatic='true' isConst='true' defaultValue='43' >
<description><![CDATA[

		 Constant for the F18 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F19' fullname='dom.events:KeyEvent/DOM_VK_F19' type='Number' isStatic='true' isConst='true' defaultValue='44' >
<description><![CDATA[

		 Constant for the F19 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F2' fullname='dom.events:KeyEvent/DOM_VK_F2' type='Number' isStatic='true' isConst='true' defaultValue='27' >
<description><![CDATA[

		 Constant for the F2 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F20' fullname='dom.events:KeyEvent/DOM_VK_F20' type='Number' isStatic='true' isConst='true' defaultValue='45' >
<description><![CDATA[

		 Constant for the F20 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F21' fullname='dom.events:KeyEvent/DOM_VK_F21' type='Number' isStatic='true' isConst='true' defaultValue='46' >
<description><![CDATA[

		 Constant for the F21 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F22' fullname='dom.events:KeyEvent/DOM_VK_F22' type='Number' isStatic='true' isConst='true' defaultValue='47' >
<description><![CDATA[

		 Constant for the F22 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F23' fullname='dom.events:KeyEvent/DOM_VK_F23' type='Number' isStatic='true' isConst='true' defaultValue='48' >
<description><![CDATA[

		 Constant for the F23 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F24' fullname='dom.events:KeyEvent/DOM_VK_F24' type='Number' isStatic='true' isConst='true' defaultValue='49' >
<description><![CDATA[

		 Constant for the F24 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F3' fullname='dom.events:KeyEvent/DOM_VK_F3' type='Number' isStatic='true' isConst='true' defaultValue='28' >
<description><![CDATA[

		 Constant for the F3 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F4' fullname='dom.events:KeyEvent/DOM_VK_F4' type='Number' isStatic='true' isConst='true' defaultValue='29' >
<description><![CDATA[

		 Constant for the F4 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F5' fullname='dom.events:KeyEvent/DOM_VK_F5' type='Number' isStatic='true' isConst='true' defaultValue='30' >
<description><![CDATA[

		 Constant for the F5 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F6' fullname='dom.events:KeyEvent/DOM_VK_F6' type='Number' isStatic='true' isConst='true' defaultValue='31' >
<description><![CDATA[

		 Constant for the F6 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F7' fullname='dom.events:KeyEvent/DOM_VK_F7' type='Number' isStatic='true' isConst='true' defaultValue='32' >
<description><![CDATA[

		 Constant for the F7 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F8' fullname='dom.events:KeyEvent/DOM_VK_F8' type='Number' isStatic='true' isConst='true' defaultValue='33' >
<description><![CDATA[

		 Constant for the F8 function key.

		 ]]></description>
</field>
<field name='DOM_VK_F9' fullname='dom.events:KeyEvent/DOM_VK_F9' type='Number' isStatic='true' isConst='true' defaultValue='34' >
<description><![CDATA[

		 Constant for the F9 function key.

		 ]]></description>
</field>
<field name='DOM_VK_HOME' fullname='dom.events:KeyEvent/DOM_VK_HOME' type='Number' isStatic='true' isConst='true' defaultValue='14' >
</field>
<field name='DOM_VK_INSERT' fullname='dom.events:KeyEvent/DOM_VK_INSERT' type='Number' isStatic='true' isConst='true' defaultValue='15' >
</field>
<field name='DOM_VK_LEFT' fullname='dom.events:KeyEvent/DOM_VK_LEFT' type='Number' isStatic='true' isConst='true' defaultValue='20' >
</field>
<field name='DOM_VK_LEFT_ALT' fullname='dom.events:KeyEvent/DOM_VK_LEFT_ALT' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 This key is a modifier key

		 ]]></description>
</field>
<field name='DOM_VK_LEFT_CONTROL' fullname='dom.events:KeyEvent/DOM_VK_LEFT_CONTROL' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 This key is a modifier key

		 ]]></description>
</field>
<field name='DOM_VK_LEFT_META' fullname='dom.events:KeyEvent/DOM_VK_LEFT_META' type='Number' isStatic='true' isConst='true' defaultValue='7' >
<description><![CDATA[

		 This key is a modifier key

		 ]]></description>
</field>
<field name='DOM_VK_LEFT_SHIFT' fullname='dom.events:KeyEvent/DOM_VK_LEFT_SHIFT' type='Number' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 This key is a modifier key

		 ]]></description>
</field>
<field name='DOM_VK_NUM_LOCK' fullname='dom.events:KeyEvent/DOM_VK_NUM_LOCK' type='Number' isStatic='true' isConst='true' defaultValue='16' >
</field>
<field name='DOM_VK_PAGE_DOWN' fullname='dom.events:KeyEvent/DOM_VK_PAGE_DOWN' type='Number' isStatic='true' isConst='true' defaultValue='24' >
</field>
<field name='DOM_VK_PAGE_UP' fullname='dom.events:KeyEvent/DOM_VK_PAGE_UP' type='Number' isStatic='true' isConst='true' defaultValue='25' >
</field>
<field name='DOM_VK_PAUSE' fullname='dom.events:KeyEvent/DOM_VK_PAUSE' type='Number' isStatic='true' isConst='true' defaultValue='17' >
</field>
<field name='DOM_VK_PRINTSCREEN' fullname='dom.events:KeyEvent/DOM_VK_PRINTSCREEN' type='Number' isStatic='true' isConst='true' defaultValue='18' >
</field>
<field name='DOM_VK_RIGHT' fullname='dom.events:KeyEvent/DOM_VK_RIGHT' type='Number' isStatic='true' isConst='true' defaultValue='21' >
</field>
<field name='DOM_VK_RIGHT_ALT' fullname='dom.events:KeyEvent/DOM_VK_RIGHT_ALT' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 This key is a modifier key

		 ]]></description>
</field>
<field name='DOM_VK_RIGHT_CONTROL' fullname='dom.events:KeyEvent/DOM_VK_RIGHT_CONTROL' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 This key is a modifier key

		 ]]></description>
</field>
<field name='DOM_VK_RIGHT_META' fullname='dom.events:KeyEvent/DOM_VK_RIGHT_META' type='Number' isStatic='true' isConst='true' defaultValue='8' >
<description><![CDATA[

		 This key is a modifier key

		 ]]></description>
</field>
<field name='DOM_VK_RIGHT_SHIFT' fullname='dom.events:KeyEvent/DOM_VK_RIGHT_SHIFT' type='Number' isStatic='true' isConst='true' defaultValue='6' >
<description><![CDATA[

		 This key is a modifier key

		 ]]></description>
</field>
<field name='DOM_VK_SCROLL_LOCK' fullname='dom.events:KeyEvent/DOM_VK_SCROLL_LOCK' type='Number' isStatic='true' isConst='true' defaultValue='19' >
</field>
<field name='DOM_VK_UNDEFINED' fullname='dom.events:KeyEvent/DOM_VK_UNDEFINED' type='Number' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[

		 Used for key events which do not have a virtual key code available.

		 ]]></description>
</field>
<field name='DOM_VK_UP' fullname='dom.events:KeyEvent/DOM_VK_UP' type='Number' isStatic='true' isConst='true' defaultValue='22' >
</field>
<classRec name='MouseMultiWheelEvent' fullname='dom.events:MouseMultiWheelEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\MouseMultiWheelEvent.as' namespace='dom.events' access='public' baseclass='dom.events:MouseEvent' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The MouseMultiWheelEvent interface provides specific contextual 

	 information associated with mouse multi wheel events.

	 

	 <p>To create an instance of the MouseMultiWheelEvent interface, use the 

	 DocumentEvent.createEvent("MouseMultiWheelEvent") method call.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent W3C - DOM 3 Events: MouseMultiWheelEvent

	 

	 ]]></see>
</classRec>
<method name='initMouseMultiWheelEventNS' fullname='dom.events:MouseMultiWheelEvent/initMouseMultiWheelEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg;viewArg;detailArg;screenXArg;screenYArg;clientXArg;clientYArg;buttonArg;relatedTargetArg;modifiersListArg;wheelDeltaXArg;wheelDeltaYArg;wheelDeltaZArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;Number;Number;Number;Number;Number;Number;dom.events:EventTarget;dom.core.types:DOMString;Number;Number;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a MouseMultiWheelEvent object. This method 

		 has the same behavior as MouseEvent.initMouseEventNS().

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[detailArg Specifies UIEvent.detail.

		 ]]></param>
<param><![CDATA[screenXArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[screenYArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[clientXArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[clientYArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[buttonArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[relatedTargetArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[modifiersListArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[wheelDeltaXArg Specifies MouseMultiWheelEvent.wheelDeltaX.

		 ]]></param>
<param><![CDATA[wheelDeltaYArg Specifies MouseMultiWheelEvent.wheelDeltaY.

		 ]]></param>
<param><![CDATA[wheelDeltaZArg Specifies MouseMultiWheelEvent.wheelDeltaZ.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMouseMultiWheelEventNS W3C - MouseWheelEvent.initMouseMultiWheelEventNS()

		 

		 ]]></see>
</method>
<method name='wheelDeltaX' fullname='dom.events:MouseMultiWheelEvent/wheelDeltaX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The distance the wheel has rotated around the x-axis.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent-wheelDeltaX W3C - MouseWheelEvent.wheelDeltaX

		 

		 ]]></see>
</method>
<method name='wheelDeltaY' fullname='dom.events:MouseMultiWheelEvent/wheelDeltaY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The distance the wheel has rotated around the y-axis.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent-wheelDeltaY W3C - MouseWheelEvent.wheelDeltaY

		 

		 ]]></see>
</method>
<method name='wheelDeltaZ' fullname='dom.events:MouseMultiWheelEvent/wheelDeltaZ/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The distance the wheel has rotated around the z-axis.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent-wheelDeltaZ W3C - MouseWheelEvent.wheelDeltaZ

		 

		 ]]></see>
</method>
<field name='mousemultiwheel' fullname='dom.events:MouseMultiWheelEvent/mousemultiwheel' type='String' isStatic='true' isConst='true' defaultValue='mousemultiwheel' >
<description><![CDATA[

		 A mouse wheel has been rotated. A default action of user agent generated event objects of this type causes 

		 implementations to dispatch a mousewheel event iff it supports that event type and MouseMultiWheelEvent.wheelDeltaY is non-zero.

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Document, Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseMultiWheelEvent.wheelDeltaX, MouseMultiWheelEvent.wheelDeltaY, MouseMultiWheelEvent.wheelDeltaZ, 

		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use. MouseEvent.screenX, 

		 MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, and MouseEvent.button are in use if the wheel is associated to a 

		 pointing device. MouseEvent.relatedTarget indicates the event target the pointing device is pointing at, if any. UIEvent.detail 

		 is not in use.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousewheel W3C - MouseWheelEvent.mousewheel

		 

		 ]]></see>
</field>
<classRec name='MouseWheelEvent' fullname='dom.events:MouseWheelEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\MouseWheelEvent.as' namespace='dom.events' access='public' baseclass='dom.events:MouseEvent' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The MouseWheelEvent interface provides specific contextual information 

	 associated with mouse wheel events.

	 

	 <p>To create an instance of the MouseWheelEvent interface, use the 

	 DocumentEvent.createEvent("MouseWheelEvent") method call.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseWheelEvent W3C - DOM 3 Events: MouseWheelEvent

	 

	 ]]></see>
</classRec>
<method name='initMouseWheelEventNS' fullname='dom.events:MouseWheelEvent/initMouseWheelEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg;viewArg;detailArg;screenXArg;screenYArg;clientXArg;clientYArg;buttonArg;relatedTargetArg;modifiersListArg;wheelDeltaArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;dom.views:AbstractView;Number;Number;Number;Number;Number;Number;dom.events:EventTarget;dom.core.types:DOMString;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a MouseWheelEvent object. This method 

		 has the same behavior as MouseEvent.initMouseEventNS(). 

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[viewArg Specifies UIEvent.view. This value may be null.

		 ]]></param>
<param><![CDATA[detailArg Specifies UIEvent.detail.

		 ]]></param>
<param><![CDATA[screenXArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[screenYArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[clientXArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[clientYArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[buttonArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[relatedTargetArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[modifiersListArg Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[wheelDeltaArg Specifies MouseWheelEvent.wheelDelta.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMouseWheelEventNS W3C - MouseWheelEvent.initMouseWheelEventNS

		 

		 ]]></see>
</method>
<method name='wheelDelta' fullname='dom.events:MouseWheelEvent/wheelDelta/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The distance the wheel has rotated around the y-axis.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseWheelEvent-wheelDelta W3C - MouseWheelEvent.wheelDelta

		 

		 ]]></see>
</method>
<field name='mousewheel' fullname='dom.events:MouseWheelEvent/mousewheel' type='String' isStatic='true' isConst='true' defaultValue='mousewheel' >
<description><![CDATA[

		 Refer to Activation requests and behavior.

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>Namespace</td><td><code>None</code></td>

		 	</tr>

		 	<tr>

		 		<td>Cancelable</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Bubbles</td><td>Yes</td>

		 	</tr>

		 	<tr>

		 		<td>Target</td><td><code>Document, Element</code></td>

		 	</tr>

		 	<tr>

		 		<td>Context info</td><td>MouseWheelEvent.wheelDelta, MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, 

		 MouseEvent.metaKey, and UIEvent.view are in use. MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, 

		 MouseEvent.clientY, and MouseEvent.button are in use if the wheel is associated to a pointing device. MouseEvent.relatedTarget 

		 indicates the event target the pointing device is pointing at, if any. UIEvent.detail is not in use.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousewheel W3C - MouseWheelEvent.mousewheel

		 

		 ]]></see>
</field>
<interfaceRec name='EventGroup' fullname='dom.events:EventGroup' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\EventGroup.as' namespace='dom.events' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The EventGroup interface functions primarily as a placeholder for separating the event flows when there 

	 are multiple groups of listeners for a DOM tree.

	 

	 <p>EventListeners can be registered without an EventGroup using the existing EventTarget interface, or with 

	 an associated EventGroup using the new EventTargetGroup interface. When an event is dispatched, it is 

	 dispatched independently to each EventGroup. In particular, the stopPropagation method of the Event interface 

	 only stops propagation within an EventListener's associated EventGroup.</p>

	 

	 <p><strong>Note:</strong> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-EventGroup W3C - DOM 3 Events: EventGroup

	 

	 ]]></see>
</interfaceRec>
<method name='isSameEventGroup' fullname='dom.events:EventGroup/dom.events:EventGroup:isSameEventGroup' isStatic='false' isFinal='false' isOverride='false'  param_names='eventGroup' param_types='dom.events:EventGroup' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 This method checks if the supplied EventGroup is the same as the EventGroup upon which the method is called. 

		 

		 ]]></description>
<param><![CDATA[eventGroup The EventGroup with which to check equality.

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<return><![CDATA[Returns true if the EventGroups are equal, else returns false.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-EventGroup-isSameEventGroup W3C - DOM 3 Events: EventGroup.isSameEventGroup()

		 

		 ]]></see>
</method>
<interfaceRec name='EventTargetGroup' fullname='dom.events:EventTargetGroup' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\EventTargetGroup.as' namespace='dom.events' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The EventTargetGroup interface is implemented by the same set of objects that implement the EventTarget 

	 interface, namely all EventTargets in in implementation which supports the Event model and the EventGroup extension.

	 

	 <p><strong>Note:</strong> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-EventTargetGroup W3C - DOM 3 Events: EventTargetGroup

	 

	 ]]></see>
</interfaceRec>
<method name='addEventListener' fullname='dom.events:EventTargetGroup/dom.events:EventTargetGroup:addEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture;eventGroup' param_types='dom.core.types:DOMString;dom.events:EventListener;Boolean;dom.events:EventGroup' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 This method is equivalent to the addEventListener method of the EventTarget interface, with the exception of 

		 the added eventGroup parameter. The listener is registered with this EventGroup associated. 

		 

		 ]]></description>
<param><![CDATA[type

		 ]]></param>
<param><![CDATA[listener

		 ]]></param>
<param><![CDATA[useCapture

		 ]]></param>
<param><![CDATA[eventGroup The EventGroup to associate with the listener.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-EventTargetGroup-addEventListener W3C - DOM 3 Events: EventTargetGroup.addEventListener()

		 

		 ]]></see>
</method>
<method name='removeEventListener' fullname='dom.events:EventTargetGroup/dom.events:EventTargetGroup:removeEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture;eventGroup' param_types='dom.core.types:DOMString;dom.events:EventListener;Boolean;dom.events:EventGroup' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 This method is equivalent to the removeEventListener method of the EventTarget interface, with the exception 

		 of the added eventGroup parameter. The listener registered with this EventGroup associated is removed. 

		 

		 ]]></description>
<param><![CDATA[type

		 ]]></param>
<param><![CDATA[listener

		 ]]></param>
<param><![CDATA[useCapture

		 ]]></param>
<param><![CDATA[eventGroup The EventGroup to associate with the listener.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-EventTargetGroup-removeEventListener W3C - DOM 3 Events: EventTargetGroup.removeEventListener()

		 

		 ]]></see>
</method>
<interfaceRec name='DocumentEventGroup' fullname='dom.events:DocumentEventGroup' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\DocumentEventGroup.as' namespace='dom.events' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DocumentEventGroup interface provides a mechanism by which the user can create an EventGroup of a type supported by 

	 the implementation. It is expected that the DocumentEvent interface will be implemented on the same object which implements 

	 the Documentinterface in an implementation which supports the EventGroupextension.

	 

	 <p><strong>Note:</strong> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-DocumentEventGroup W3C - DOM 3 Events: DocumentEventGroup

	 

	 ]]></see>
</interfaceRec>
<method name='createEventGroup' fullname='dom.events:DocumentEventGroup/dom.events:DocumentEventGroup:createEventGroup' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.events:EventGroup'>
<description><![CDATA[

		 This method creates a new EventGroup for use in the addEventListener and removeEventListener methods of the EventTargetGroup interface. 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<return><![CDATA[The newly created EventGroup.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.htmlevents-Events-DocumentEventGroup-createEventGroup W3C - DOM 3 Events: DocumentEventGroup.createEventGroup()

		 

		 ]]></see>
</method>
<classRec name='MessageEvent' fullname='dom.events:MessageEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\MessageEvent.as' namespace='dom.events' access='public' baseclass='dom.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Messages in server-sent events, Web sockets, cross-document messaging, and channel messaging use the message event.

	 

	 ]]></description>
<playerversion><![CDATA[HTML 5

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#messageevent HTML 5: MessageEvent

	 

	 ]]></see>
</classRec>
<method name='initMessageEvent' fullname='dom.events:MessageEvent/initMessageEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg;dataArg;originArg;lastEventIdArg;sourceArg;portsArg' param_types='dom.core.types:DOMString;Boolean;Boolean;dom.core.types:DOMString;dom.core.types:DOMString;dom:WindowProxy;dom.objects:MessagePortArray' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 The initMessageEvent() must initialize the event in a manner analogous to the similarly-named methods in the DOM3 Events interfaces.

		 

		 ]]></description>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[dataArg The message being sent.

		 ]]></param>
<param><![CDATA[originArg The origin of the document that sent the message (typically the scheme, hostname, and port of the document, but not its path or fragment identifier).

		 ]]></param>
<param><![CDATA[lastEventIdArg The last event ID string of the event source.

		 ]]></param>
<param><![CDATA[sourceArg The WindowProxy of the browsing context of the Window object from which the message came.

		 ]]></param>
<param><![CDATA[portsArg The MessagePortArray  being sent, if any.

		 

		 ]]></param>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.initMessageEvent MDC - event.initMessageEvent()

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-initmessageevent HTML 5: MessageEvent.initMessageEvent()

		 

		 ]]></see>
</method>
<method name='initMessageEventNS' fullname='dom.events:MessageEvent/initMessageEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg;dataArg;originArg;lastEventIdArg;sourceArg;portsArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;dom.core.types:DOMString;dom.core.types:DOMString;dom:WindowProxy;dom.objects:MessagePortArray' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 The initMessageEventNS() must initialize the event in a manner analogous to the similarly-named methods in the DOM3 Events interfaces.

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[dataArg The message being sent.

		 ]]></param>
<param><![CDATA[originArg The origin of the document that sent the message (typically the scheme, hostname, and port of the document, but not its path or fragment identifier).

		 ]]></param>
<param><![CDATA[lastEventIdArg The last event ID string of the event source.

		 ]]></param>
<param><![CDATA[sourceArg The WindowProxy of the browsing context of the Window object from which the message came.

		 ]]></param>
<param><![CDATA[portsArg The MessagePortArray  being sent, if any.

		 

		 ]]></param>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-initmessageeventns HTML 5: MessageEvent.initMessageEventNS()

		 

		 ]]></see>
</method>
<method name='data' fullname='dom.events:MessageEvent/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 A string holding the message passed from the other window. 

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-data HTML 5: MessageEvent.data

		 

		 ]]></see>
</method>
<method name='lastEventId' fullname='dom.events:MessageEvent/lastEventId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the last event ID, for server-sent events.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-lasteventid HTML 5: MessageEvent.lastEventId

		 

		 ]]></see>
</method>
<method name='origin' fullname='dom.events:MessageEvent/origin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the origin of the message, for server-sent events and cross-document messaging.

		 

		 <p>The origin of the window that sent the message at the time postMessage was called. This string is 

		 the concatenation of the protocol and "://", the host name if one exists, and ":" followed by a port 

		 number if a port is present and differs from the default port for the given protocol. Examples of 

		 typical origins are http://example.org (implying port 443), http://example.net (implying port 80), 

		 and http://example.com:8080. Note that this origin is not guaranteed to be the current or future origin 

		 of that window, which might have been navigated to a different location since postMessage was called. </p>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-origin HTML 5: MessageEvent.origin

		 

		 ]]></see>
</method>
<method name='ports' fullname='dom.events:MessageEvent/ports/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:MessagePortArray'>
<description><![CDATA[

		 Returns the MessagePortArray sent with the message, for cross-document messaging and channel messaging.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-ports HTML 5: MessageEvent.ports

		 

		 ]]></see>
</method>
<method name='source' fullname='dom.events:MessageEvent/source/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom:WindowProxy'>
<description><![CDATA[

		 Returns the WindowProxy of the source window, for cross-document messaging.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-source HTML 5: MessageEvent.source

		 

		 ]]></see>
</method>
<classRec name='MutationEvent' fullname='dom.events:MutationEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\MutationEvent.as' namespace='dom.events' access='public' baseclass='dom.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The MutationEvent interface provides specific contextual information 

	 associated with Mutation events.

	 

	 <p>To create an instance of the MutationEvent interface, use the 

	 DocumentEvent.createEvent("MutationEvent") method call.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 2

	 ]]></playerversion>
<since><![CDATA[DOMEvents 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent W3C - MutationEvent

	 

	 ]]></see>
<modified><![CDATA[DOMEvents 3

	 ]]></modified>
</classRec>
<method name='initMutationEvent' fullname='dom.events:MutationEvent/initMutationEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg;relatedNodeArg;prevValueArg;newValueArg;attrNameArg;attrChangeArg' param_types='dom.core.types:DOMString;Boolean;Boolean;flash.xml:XMLNode;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a MutationEvent object. This method has the 

		 same behavior as Event.initEvent(). 

		 

		 ]]></description>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[relatedNodeArg Specifies MutationEvent.relatedNode.

		 ]]></param>
<param><![CDATA[prevValueArg Specifies MutationEvent.prevValue. This value may be null.

		 ]]></param>
<param><![CDATA[newValueArg Specifies MutationEvent.newValue. This value may be null.

		 ]]></param>
<param><![CDATA[attrNameArg Specifies MutationEvent.attrName. This value may be null.

		 ]]></param>
<param><![CDATA[attrChangeArg Specifies MutationEvent.attrChange. This value may be null.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMutationEvent W3C - MutationEvent.initMutationEvent()

		 

		 ]]></see>
</method>
<method name='initMutationEventNS' fullname='dom.events:MutationEvent/initMutationEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg;relatedNodeArg;prevValueArg;newValueArg;attrNameArg;attrChangeArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;flash.xml:XMLNode;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;Number' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a MutationEvent object. This method has 

		 the same behavior as Event.initEventNS().

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[relatedNodeArg Specifies MutationEvent.relatedNode.

		 ]]></param>
<param><![CDATA[prevValueArg Specifies MutationEvent.prevValue. This value may be null.

		 ]]></param>
<param><![CDATA[newValueArg Specifies MutationEvent.newValue. This value may be null.

		 ]]></param>
<param><![CDATA[attrNameArg Specifies MutationEvent.attrName. This value may be null.

		 ]]></param>
<param><![CDATA[attrChangeArg Specifies MutationEvent.attrChange. This value may be null.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMutationEventNS W3C - MutationEvent.initMutationEventNS()

		 

		 ]]></see>
</method>
<method name='attrChange' fullname='dom.events:MutationEvent/attrChange/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Indicates the type of change which triggered the DOMAttrModified event. 

		 The values can be MODIFICATION, ADDITION, or REMOVAL.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-attrChange W3C - MutationEvent.attrChange

		 

		 ]]></see>
</method>
<method name='attrName' fullname='dom.events:MutationEvent/attrName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Indicates the name of the changed Attr node in a DOMAttrModified event.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-attrName W3C - MutationEvent.attrName

		 

		 ]]></see>
</method>
<method name='newValue' fullname='dom.events:MutationEvent/newValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Indicates the new value of the Attr node in DOMAttrModified events, and 

		 of the CharacterData node in DOMCharacterDataModified events.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-newValue W3C - MutationEvent.newValue

		 

		 ]]></see>
</method>
<method name='prevValue' fullname='dom.events:MutationEvent/prevValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Indicates the previous value of the Attr node in DOMAttrModified events, 

		 and of the CharacterData node in DOMCharacterDataModified events.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-prevValue W3C - MutationEvent.prevValue

		 

		 ]]></see>
</method>
<method name='relatedNode' fullname='dom.events:MutationEvent/relatedNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 is used to identify a secondary node related to a mutation event. For 

		 example, if a mutation event is dispatched to a node indicating that 

		 its parent has changed, the relatedNode is the changed parent. If an 

		 event is instead dispatched to a subtree indicating a node was changed 

		 within it, the relatedNode is the changed node. In the case of the 

		 DOMAttrModified event it indicates the Attr node which was modified, 

		 added, or removed.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-relatedNode W3C - MutationEvent.relatedNode

		 

		 ]]></see>
</method>
<field name='ADDITION' fullname='dom.events:MutationEvent/ADDITION' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The Attr was just added.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#ADDITION W3C - MutationEvent.ADDITION

		 

		 ]]></see>
</field>
<field name='DOMAttrModified' fullname='dom.events:MutationEvent/DOMAttrModified' type='String' isStatic='true' isConst='true' defaultValue='DOMAttrModified' >
<description><![CDATA[

		 Occurs after Attr.value has been modified and after an Attr node has been added to or removed from an Element. 

		 The target node of this event is the Element node where the change occured. It is implementation dependent whether 

		 this event type occurs when the children of the Attr node are changed in ways that do not affect the value of Attr.value.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>MutationEvent.attrName and MutationEvent.attrChange are in use. The value of MutationEvent.relatedNode indicates the Attr 

		 node that has been modified, added, or removed. If the Attr node has been added, MutationEvent.newValue is in use. If the Attr 

		 node has been removed, MutationEvent.prevValue is in use. If the Attr node has been modified, MutationEvent.newValue and 

		 MutationEvent.prevValue are in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMAttrModified W3C - MutationEvent.DOMAttrModified

		 

		 ]]></see>
</field>
<field name='DOMCharacterDataModified' fullname='dom.events:MutationEvent/DOMCharacterDataModified' type='String' isStatic='true' isConst='true' defaultValue='DOMCharacterDataModified' >
<description><![CDATA[

		 Occurs after CharacterData.data or ProcessingInstruction.data have been modified but the node itself has not been 

		 inserted or deleted. The target node of this event is the CharacterData node or the ProcessingInstruction node.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Text, Comment, CDATASection, ProcessingInstruction</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>MutationEvent.prevValue, and MutationEvent.newValue are in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMCharacterDataModified W3C - MutationEvent.DOMCharacterDataModified

		 

		 ]]></see>
</field>
<field name='DOMNodeInserted' fullname='dom.events:MutationEvent/DOMNodeInserted' type='String' isStatic='true' isConst='true' defaultValue='DOMNodeInserted' >
<description><![CDATA[

		 A node has been added as a child of another node or, in case of Attr nodes, has been added to an Element. 

		 This event is dispatched after the insertion has taken place. The target node of this event is the node being inserted.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>MutationEvent.relatedNode holds the parent node of the node that has been inserted or, in case of Attr nodes, the ownerElement of the Attr node.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeInserted W3C - MutationEvent.DOMNodeInserted

		 

		 ]]></see>
</field>
<field name='DOMNodeInsertedIntoDocument' fullname='dom.events:MutationEvent/DOMNodeInsertedIntoDocument' type='String' isStatic='true' isConst='true' defaultValue='DOMNodeInsertedIntoDocument' >
<description><![CDATA[

		 A node has been inserted into a document, either through direct insertion of the node or insertion of a subtree in which 

		 it is contained; Attr nodes are considered part of an Element's subtree. This event is dispatched after the insertion has 

		 taken place. The target node of this event is the node being inserted. If the node is being directly inserted, the event 

		 type DOMNodeInserted occurs before this event type.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>None</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeInsertedIntoDocument W3C - MutationEvent.DOMNodeInsertedIntoDocument

		 

		 ]]></see>
</field>
<field name='DOMNodeRemoved' fullname='dom.events:MutationEvent/DOMNodeRemoved' type='String' isStatic='true' isConst='true' defaultValue='DOMNodeRemoved' >
<description><![CDATA[

		 A node is being removed from its parent node or, in case of Attr nodes, removed from its ownerElement. 

		 This event is dispatched before the removal takes place. The target node of this event is the node being removed.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>MutationEvent.relatedNode holds the parent node of the node being removed or, in case of Attr nodes, the ownerElement of the Attr node.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeRemoved W3C - MutationEvent.DOMNodeRemoved

		 

		 ]]></see>
</field>
<field name='DOMNodeRemovedFromDocument' fullname='dom.events:MutationEvent/DOMNodeRemovedFromDocument' type='String' isStatic='true' isConst='true' defaultValue='DOMNodeRemovedFromDocument' >
<description><![CDATA[

		 A node is being removed from a document, either through direct removal of the node or removal of a subtree in which 

		 it is contained; Attr nodes are considered part of an Element's subtree. This event is dispatched before the removal 

		 takes place. The target node of this event type is the node being removed. If the node is being directly removed, 

		 the event type DOMNodeRemoved occurs before this event type.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>None</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeRemovedFromDocument W3C - MutationEvent.DOMNodeRemovedFromDocument

		 

		 ]]></see>
</field>
<field name='DOMSubtreeModified' fullname='dom.events:MutationEvent/DOMSubtreeModified' type='String' isStatic='true' isConst='true' defaultValue='DOMSubtreeModified' >
<description><![CDATA[

		 This is a general event for notification of all changes to the document. 

		 

		 <p>It can be used instead 

		 of the more specific mutation and mutation name events listed below. It may be dispatched after 

		 a single modification to the document or, at the implementation's discretion, after multiple 

		 changes have occurred. The latter use should generally be used to accommodate multiple changes 

		 which occur either simultaneously or in rapid succession. The target of this event is the lowest 

		 common parent of the changes which have taken place. This event is dispatched after any other 

		 events caused by the mutation(s) have occurred.</p>

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Document, DocumentFragment, Element, Attr</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>None</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMSubtreeModified W3C - MutationEvent.DOMSubtreeModified

		 

		 ]]></see>
</field>
<field name='MODIFICATION' fullname='dom.events:MutationEvent/MODIFICATION' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The Attr was modified in place.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#MODIFICATION W3C - MutationEvent.MODIFICATION

		 

		 ]]></see>
</field>
<field name='REMOVAL' fullname='dom.events:MutationEvent/REMOVAL' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The Attr was just removed.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#REMOVAL W3C - MutationEvent.REMOVAL

		 

		 ]]></see>
</field>
<classRec name='MutationNameEvent' fullname='dom.events:MutationNameEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\events\MutationNameEvent.as' namespace='dom.events' access='public' baseclass='dom.events:MutationEvent' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The MutationNameEvent interface provides specific contextual information 

	 associated with Mutation name event types.

	 

	 To create an instance of the MutationNameEvent interface, use the 

	 Document.createEvent("MutationNameEvent") method call.

	 

	 ]]></description>
<playerversion><![CDATA[DOMEvents 3

	 ]]></playerversion>
<since><![CDATA[DOMEvents 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationNameEvent W3C - DOM 3 Events: MutationNameEvent

	 

	 ]]></see>
</classRec>
<method name='initMutationNameEvent' fullname='dom.events:MutationNameEvent/initMutationNameEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg;relatedNodeArg;prevNamespaceURIArg;prevNodeNameArg' param_types='dom.core.types:DOMString;Boolean;Boolean;flash.xml:XMLNode;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a MutationNameEvent object. This method has 

		 the same behavior as MutationEvent.initMutationEvent(). 

		 

		 ]]></description>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[relatedNodeArg Specifies MutationEvent.relatedNode.

		 ]]></param>
<param><![CDATA[prevNamespaceURIArg Specifies MutationNameEvent.prevNamespaceURI. This value may be null.

		 ]]></param>
<param><![CDATA[prevNodeNameArg Specifies MutationNameEvent.prevNodeName.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMutationNameEvent W3C - MutationNameEvent.initMutationNameEvent()

		 ]]></see>
<see><![CDATA[dom.events.UIEvent#initUIEvent()

		 

		 ]]></see>
</method>
<method name='initMutationNameEventNS' fullname='dom.events:MutationNameEvent/initMutationNameEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURIArg;typeArg;canBubbleArg;cancelableArg;relatedNodeArg;prevNamespaceURIArg;prevNodeNameArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;flash.xml:XMLNode;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a MutationNameEvent object. This method has 

		 the same behavior as MutationEvent.initMutationEventNS(). 

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.

		 ]]></param>
<param><![CDATA[typeArg Specifies Event.type, the local name of the event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[relatedNodeArg Specifies MutationEvent.relatedNode.

		 ]]></param>
<param><![CDATA[prevNamespaceURIArg Specifies MutationNameEvent.prevNamespaceURI. This value may be null.

		 ]]></param>
<param><![CDATA[prevNodeNameArg Specifies MutationNameEvent.prevNodeName.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMutationNameEventNS W3C - MutationNameEvent.initMutationNameEventNS()

		 ]]></see>
<see><![CDATA[dom.events.UIEvent#initUIEventNS()

		 

		 ]]></see>
</method>
<method name='prevNamespaceURI' fullname='dom.events:MutationNameEvent/prevNamespaceURI/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The previous value of the relatedNode's namespaceURI.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationNameEvent-prevNamespaceURI W3C - MutationNameEvent.prevNamespaceURI

		 

		 ]]></see>
</method>
<method name='prevNodeName' fullname='dom.events:MutationNameEvent/prevNodeName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The previous value of the relatedNode's nodeName.

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationNameEvent-prevNodeName W3C - MutationNameEvent.prevNodeName

		 

		 ]]></see>
</method>
<field name='DOMAttributeNameChanged' fullname='dom.events:MutationNameEvent/DOMAttributeNameChanged' type='String' isStatic='true' isConst='true' defaultValue='DOMAttributeNameChanged' >
<description><![CDATA[

		 Occurs after the namespaceURI and/or the nodeName of a Attr node have been modified (e.g., the attribute was 

		 renamed using Document.renameNode()). The target node of this event is the Element node whose Attr has been renamed.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>MutationNameEvent.prevNamespaceURI, and MutationNameEvent.prevNodeName are in use. The value of MutationEvent.relatedNode contains the renamed Attr node.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMAttributeNameChanged W3C - MutationNameEvent.DOMAttributeNameChanged

		 

		 ]]></see>
</field>
<field name='DOMElementNameChanged' fullname='dom.events:MutationNameEvent/DOMElementNameChanged' type='String' isStatic='true' isConst='true' defaultValue='DOMElementNameChanged' >
<description><![CDATA[

		 Occurs after the namespaceURI and/or the nodeName of an Element node have been modified (e.g., the element was 

		 renamed using Document.renameNode()). The target node of this event is the renamed Element node.

		 

		 <table class="innertable">

		 <tr><th>Title</th><th>Value</th></tr>

		 <tr>

		 <td>Cancelable</td>

		 <td>No</td>

		 </tr>

		 <tr>

		 <td>Bubbles</td>

		 <td>Yes</td>

		 </tr>

		 <tr>

		 <td>Target</td>

		 <td><code>Element</code></td>

		 </tr>

		 <tr>

		 <td>Context info</td>

		 <td>MutationNameEvent.prevNamespaceURI, and MutationNameEvent.prevNodeName are in use.</td>

		 </tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMElementNameChanged W3C - MutationNameEvent.DOMElementNameChanged

		 

		 ]]></see>
</field>
<classRec name='LSReader' fullname='dom.loadsave.types:LSReader' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\types\LSReader.as' namespace='dom.loadsave.types' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A LSReader represents a character stream for the XML input. 

	 

	 <p><strong>Note:</strong> For Java, LSInputStream is bound to the java.io.InputStream 

	 type. For ECMAScript, LSInputStream is bound to Object.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LSReader W3C - LSReader

	 

	 ]]></see>
</classRec>
<classRec name='LSOutputStream' fullname='dom.loadsave.types:LSOutputStream' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\types\LSOutputStream.as' namespace='dom.loadsave.types' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A LSOutputStream represents a byte stream destination for the XML output. 

	 

	 <p><strong>Note:</strong> For Java, LSInputStream is bound to the java.io.InputStream 

	 type. For ECMAScript, LSInputStream is bound to Object.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LSOutputStream W3C - LSOutputStream

	 

	 ]]></see>
</classRec>
<classRec name='LSWriter' fullname='dom.loadsave.types:LSWriter' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\types\LSWriter.as' namespace='dom.loadsave.types' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A LSWriter represents a character stream for the XML output. 

	 

	 <p><strong>Note:</strong> For Java, LSInputStream is bound to the java.io.InputStream 

	 type. For ECMAScript, LSInputStream is bound to Object.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LSWriter W3C - LSWriter

	 

	 ]]></see>
</classRec>
<classRec name='LSInputStream' fullname='dom.loadsave.types:LSInputStream' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\loadsave\types\LSInputStream.as' namespace='dom.loadsave.types' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A LSInputStream represents a reference to a byte stream source of an XML input. 

	 

	 <p><strong>Note:</strong> For Java, LSInputStream is bound to the java.io.InputStream 

	 type. For ECMAScript, LSInputStream is bound to Object.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMLS 3

	 ]]></playerversion>
<since><![CDATA[DOMLS 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LSInputStream W3C - LSInputStream

	 

	 ]]></see>
</classRec>
<classRec name='nsIPrincipal' fullname='gecko:nsIPrincipal' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\gecko\nsIPrincipal.as' namespace='gecko' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 http://developer.mozilla.org/en/nsIPrincipal

	 ]]></description>
</classRec>
<interfaceRec name='nsIBoxObject' fullname='gecko:nsIBoxObject' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\gecko\nsIBoxObject.as' namespace='gecko' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Where possible, element.getClientRects and element.getBoundingClientRect should 

	 be used instead.  nsIBoxObject is subject to change.

	 

	 INCOMPLETE

	 

	 ]]></description>
<see><![CDATA[http://developer.mozilla.org/en/nsIBoxObject MDC - nsIBoxObject

	 ]]></see>
</interfaceRec>
<classRec name='nsIURI' fullname='gecko:nsIURI' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\gecko\nsIURI.as' namespace='gecko' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 nsIURI is an interface for an uniform resource identifier with 

	 internationalization support, offering attributes that allow setting 

	 and querying the basic components of a URI, and methods for 

	 performing basic operations on URIs.

	 ]]></description>
</classRec>
<method name='clone' fullname='gecko:nsIURI/clone' isStatic='false' isFinal='false' isOverride='false'  result_type='gecko:nsIURI'>
<description><![CDATA[

		 Clones the URI, returning a new nsIURI object.

		 

		 ]]></description>
<return><![CDATA[An nsIURI object that represents the same URI as the current 

		 nsIURI.

		 ]]></return>
</method>
<method name='equals' fullname='gecko:nsIURI/equals' isStatic='false' isFinal='false' isOverride='false'  param_names='other' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Compares the current URI with another URI, returning true if the two 

		 represent the same location.

		 

		 Note: This is more than a string comparison, as two different URI 

		 strings can represent the same location.  For example, comparing 

		 "http://foo.com:80/" and "http://foo.com/" will return true.

		 

		 ]]></description>
<param><![CDATA[other Another nsIURI to compare to. 

		 ]]></param>
<return><![CDATA[If the two URIs represent the same location

		 ]]></return>
</method>
<method name='resolve' fullname='gecko:nsIURI/resolve' isStatic='false' isFinal='false' isOverride='false'  param_names='relativePath' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Resolves a relative URI string, using this URI as the base.

		 

		 ]]></description>
<param><![CDATA[relativePath The relative path to resolve. 

		 ]]></param>
<return><![CDATA[The resolved absolute URI string.

		 ]]></return>
</method>
<method name='schemeIs' fullname='gecko:nsIURI/schemeIs' isStatic='false' isFinal='false' isOverride='false'  param_names='scheme' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Quickly reports whether the nsIURI represents a URI with the specified 

		 scheme.  This comparison is case-insensitive.

		 

		 Note: This is an optimization, allowing you to check the scheme of the 

		 URI without having to get the scheme and do the comparison yourself; 

		 this saves memory allocations.

		 

		 ]]></description>
<param><![CDATA[scheme A string representing the scheme to compare to. 

		 ]]></param>
<return><![CDATA[If the URI is for the specified scheme

		 ]]></return>
</method>
<method name='asciiHost' fullname='gecko:nsIURI/asciiHost/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The URI host with an ASCII compatible encoding. Follows the IDNA 

		 draft spec for converting internationalized domain names (UTF-8) 

		 to ASCII for compatibility with existing Internet infrasture.

		 ]]></description>
</method>
<method name='asciiSpec' fullname='gecko:nsIURI/asciiSpec/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The URI spec with an ASCII compatible encoding. The host portion 

		 follows the IDNA draft spec. Other parts are URL-escaped per the 

		 rules of RFC2396. The result is strictly ASCII.

		 ]]></description>
</method>
<method name='host' fullname='gecko:nsIURI/host/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The host is the Internet domain name to which this URI refers. It 

		 could be an IPv4 (or IPv6) address literal. If supported, it could 

		 be a non-ASCII internationalized domain name.

		 

		 Note: Characters are not escaped.

		 ]]></description>
</method>
<method name='hostPort' fullname='gecko:nsIURI/hostPort/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The "host : port" part of the URI (or simply the host, if port is -1).

		 

		 Note: Characters are not escaped.

		 ]]></description>
</method>
<method name='originCharset' fullname='gecko:nsIURI/originCharset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The charset of the document from which this URI originated. An 

		 empty value implies UTF-8.

		 

		 If this value is something other than UTF-8 then the URI components 

		 (e.g., spec, prePath, username, etc.) are all fully URL-escaped. 

		 Otherwise, the URI components may contain unescaped multibyte 

		 UTF-8 characters.

		 ]]></description>
</method>
<method name='password' fullname='gecko:nsIURI/password/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The optional password, assuming the preHost consists of 

		 "username:password".

		 

		 Note: Some characters may be escaped.

		 ]]></description>
</method>
<method name='path' fullname='gecko:nsIURI/path/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The path, typically including at least a leading '/' (but may also 

		 be empty, depending on the protocol).

		 

		 Note: Some characters may be escaped.

		 ]]></description>
</method>
<method name='port' fullname='gecko:nsIURI/port/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The URI's port. A port value of -1 corresponds to the protocol's 

		 default port (eg. -1 implies port 80 for HTTP URIs).

		 ]]></description>
</method>
<method name='prePath' fullname='gecko:nsIURI/prePath/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The prePath returns the string before the path (such as 

		 "scheme://user:password]]></description>
<host><![CDATA[: port"). This is useful for authentication 

		 or managing sessions.

		 

		 Note: Some characters may be escaped.

		 ]]></host>
</method>
<method name='scheme' fullname='gecko:nsIURI/scheme/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The scheme is the protocol to which this URI refers. The scheme is 

		 restricted to the US-ASCII charset per RFC2396.

		 ]]></description>
</method>
<method name='spec' fullname='gecko:nsIURI/spec/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns a string representation of the URI. Setting the spec causes 

		 the new spec to be parsed using the rules for the scheme the URI 

		 currently has. If the string cannot be parsed as a URI, 

		 NS_ERROR_MALFORMED_URI thrown.

		 

		 If the URI stores information from the nsIIOService  interface's 

		 newURI()  call that created it, other than just the parsed string, 

		 the behavior of this information when setting the spec attribute 

		 is undefined.

		 ]]></description>
</method>
<method name='userPass' fullname='gecko:nsIURI/userPass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The "username:password" (or username only if the value doesn't 

		 contain a ':').

		 

		 Note: Some characters may be escaped.

		 ]]></description>
</method>
<method name='username' fullname='gecko:nsIURI/username/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The optional username, assuming the preHost consists of 

		 "username:password".

		 

		 Note: Some characters may be escaped.

		 ]]></description>
</method>
<method name='host' fullname='gecko:nsIURI/host/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='hostPort' fullname='gecko:nsIURI/hostPort/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='password' fullname='gecko:nsIURI/password/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='path' fullname='gecko:nsIURI/path/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='port' fullname='gecko:nsIURI/port/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scheme' fullname='gecko:nsIURI/scheme/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='spec' fullname='gecko:nsIURI/spec/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='userPass' fullname='gecko:nsIURI/userPass/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='username' fullname='gecko:nsIURI/username/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='nsIDOMOfflineResourceList' fullname='gecko:nsIDOMOfflineResourceList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\gecko\nsIDOMOfflineResourceList.as' namespace='gecko' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<internal><![CDATA[http://developer.mozilla.org/en/nsIDOMOfflineResourceList

	 ]]></internal>
</interfaceRec>
<interfaceRec name='nsIXPCComponents' fullname='gecko:nsIXPCComponents' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\gecko\nsIXPCComponents.as' namespace='gecko' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<internal><![CDATA[

	 

	 http://mxr.mozilla.org/mozilla-central/source/js/src/xpconnect/idl/xpccomponents.idl

	 

	 http://developer.mozilla.org/en/Components_object

	 ]]></internal>
</interfaceRec>
<interfaceRec name='MouseEventView' fullname='cssom.view:MouseEventView' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\cssom\view\MouseEventView.as' namespace='cssom.view' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Used to calculate the mouse position relative to the page or screen.

	 

	 <p>All browser compatibility information was obtained via Quirksmode.</p>

	 

	 ]]></description>
<playerversion><![CDATA[CSSOMView 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface W3C CSSOM Views Specification: MouseEventView

	 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html  Quirksmode: W3C DOM Compatibility - CSS Object Model View

	 

	 ]]></see>
<modified><![CDATA[DOMEvents 2

	 ]]></modified>
</interfaceRec>
<method name='clientX' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:clientX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the horizontal coordinate within the application's client area at which the event occurred 

		 (as opposed to the coordinates within the page). 

		 

		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 

		 event with a clientX value of 0, regardless of whether the page is scrolled horizontally.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 	&lt;title&gt;clientX\clientY example&lt;/title&gt;

		 

		 	&lt;script type="text/javascript"&gt;

		 		function showCoords(evt) {

		 			alert(

		 			"clientX value: " + evt.clientX + "\n"

		 			+ "clientY value: " + evt.clientY + "\n"

		 		);

		 		}

		 	&lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onmousedown="showCoords(event)"&gt;

		 	&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533567(VS.85).aspx MSDN: clientX Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.clientX  MDC - Event: clientX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: clientX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#clientY

		 ]]></see>
<see><![CDATA[#screenX

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='clientY' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:clientY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the vertical coordinate within the application's client area at which the event occurred 

		 (as opposed to the coordinates within the page).

		 

		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 

		 event with a clientY value of 0, regardless of whether the page is scrolled vertically.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;clientX\clientY example&lt;/title&gt;

		 

		 		&lt;script type="text/javascript"&gt;

		 			function showCoords(evt){

		 				alert(

		 				"clientX value: " + evt.clientX + "\n"

		 				+ "clientY value: " + evt.clientY + "\n"

		 			);

		 			}

		 		&lt;/script&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body onmousedown="showCoords(event)"&gt;

		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533568(VS.85).aspx MSDN: clientY Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.clientY  MDC - Event: clientY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: clientY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#clientX

		 ]]></see>
<see><![CDATA[#screenX

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='offsetX' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:offsetX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the horizontal coordinate, as number of CSS pixels, of the 

		 position where the event occurred relative to the origin of the padding box of the target node.

		 

		 <p>In IE the coordinates are calculated relative to the target element when that element is 

		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 

		 relative to the target's offsetParent.</p>

		 

		 <p><strong>Note (Safari/Chrome):</strong> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the

		 border box.</p>

		 

		 <p><strong>Note (Opera):</strong> Opera calculates the position from the content box instead of the padding box.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;head&gt;

		 	&lt;script&gt;

		 		function offsetCoords() {

		 			var offsetInfo = ""

		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"

		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"

		 			alert(offsetInfo);

		 		}

		 	&lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 

		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;

		 	...

		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;

		 	...

		 	&lt;/div&gt;

		 &lt;/body&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_incorrect

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_incorrect

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534305(VS.85).aspx MSDN: offsetX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: offsetX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#offsetY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='offsetY' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:offsetY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the vertical coordinate, as number of CSS pixels, of the 

		 position where the event occurred relative to the origin of the padding box of the target node.

		 

		 <p>In IE the coordinates are calculated relative to the target element when that element is 

		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 

		 relative to the target's offsetParent.</p>

		 

		 <p><strong>Note (Safari/Chrome):</strong> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the

		 border box.</p>

		 

		 <p><strong>Note (Opera):</strong> Opera calculates the position from the content box instead of the padding box.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;head&gt;

		 	&lt;script&gt;

		 		function offsetCoords() {

		 			var offsetInfo = ""

		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"

		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"

		 			alert(offsetInfo);

		 		}

		 	&lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 

		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;

		 	...

		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;

		 	...

		 	&lt;/div&gt;

		 &lt;/body&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_incorrect

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_incorrect

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534306(VS.85).aspx MSDN: offsetY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: offsetY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#offsetX

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='pageX' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:pageX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the horizontal coordinate of the event relative to whole document. 

		 

		 <p><strong>Note (IE):</strong> In order to get it in IE, too, add the scrolling offset of the 

		 document to clientX/Y.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 	function showCoords(evt){

		 		var form = document.forms.form_coords;

		 		var parent_id = evt.target.parentNode.id;

		 		form.parentId.value = parent_id;

		 		form.pageXCoords.value = evt.pageX;

		 		form.pageYCoords.value = evt.pageY;

		 		form.layerXCoords.value = evt.layerX;

		 		form.layerYCoords.value = evt.layerY;

		 	}

		 &lt;/script&gt;

		 

		 &lt;style type="text/css"&gt;

		 

		 #d1 {

		 	border: solid blue 1px;

		 	padding: 20px;

		 }

		 

		 #d2 {

		 	position: absolute;

		 	top: 180px;

		 	left: 80%;

		 	right:auto;

		 	width: 40%;

		 	border: solid blue 1px;

		 	padding: 20px;

		 }

		 

		 #d3 {

		 	position: absolute;

		 	top: 240px;

		 	left: 20%;

		 	width: 50%;

		 	border: solid blue 1px;

		 	padding: 10px;

		 }

		 

		 &lt;/style&gt;

		 &lt;/head&gt;

		 

		 &lt;body onmousedown="showCoords(event)"&gt;

		 

		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;

		 

		 &lt;div id="d1"&gt;

		 	&lt;span&gt;This is an un-positioned div so clicking it will return

		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;div id="d2"&gt;

		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY

		 	values that are relative to the top-left corner of this positioned

		 	element. Note the pageX\pageY properties still return the

		 	absolute position in the document, including page scrolling.&lt;/span&gt;

		 

		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it

		 	will return layerX/layerY values that are relative to the top-left

		 	corner of this positioned element. Note the pageX\pageY properties still

		 	return the absolute position in the document, including page

		 	scrolling.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;div id="d3"&gt;

		 	&lt;form name="form_coords"&gt;

		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;

		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  

		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;

		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  

		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;

		 	&lt;/form&gt;

		 &lt;/div&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.pageX MDC - Event: pageX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: pageX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#pageY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='pageY' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:pageY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the vertical coordinate of the event relative to the whole document.

		 

		 <p><strong>Note (IE):</strong> In order to get it in IE, too, add the scrolling offset of the 

		 document to clientX/Y.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 	function showCoords(evt){

		 		var form = document.forms.form_coords;

		 		var parent_id = evt.target.parentNode.id;

		 		form.parentId.value = parent_id;

		 		form.pageXCoords.value = evt.pageX;

		 		form.pageYCoords.value = evt.pageY;

		 		form.layerXCoords.value = evt.layerX;

		 		form.layerYCoords.value = evt.layerY;

		 	}

		 &lt;/script&gt;

		 

		 &lt;style type="text/css"&gt;

		 

		 #d1 {

		 	border: solid blue 1px;

		 	padding: 20px;

		 }

		 

		 #d2 {

		 	position: absolute;

		 	top: 180px;

		 	left: 80%;

		 	right:auto;

		 	width: 40%;

		 	border: solid blue 1px;

		 	padding: 20px;

		 }

		 

		 #d3 {

		 	position: absolute;

		 	top: 240px;

		 	left: 20%;

		 	width: 50%;

		 	border: solid blue 1px;

		 	padding: 10px;

		 }

		 

		 &lt;/style&gt;

		 &lt;/head&gt;

		 

		 &lt;body onmousedown="showCoords(event)"&gt;

		 

		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;

		 

		 &lt;div id="d1"&gt;

		 	&lt;span&gt;This is an un-positioned div so clicking it will return

		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;div id="d2"&gt;

		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY

		 	values that are relative to the top-left corner of this positioned

		 	element. Note the pageX\pageY properties still return the

		 	absolute position in the document, including page scrolling.&lt;/span&gt;

		 

		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it

		 	will return layerX/layerY values that are relative to the top-left

		 	corner of this positioned element. Note the pageX\pageY properties still

		 	return the absolute position in the document, including page

		 	scrolling.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;div id="d3"&gt;

		 	&lt;form name="form_coords"&gt;

		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;

		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  

		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;

		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  

		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;

		 	&lt;/form&gt;

		 &lt;/div&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.pageY MDC - Event: pageY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: pageY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#pageX

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='screenX' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:screenX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the horizontal coordinate of the event within the screen as a whole. 

		 

		 <p><strong>Note:</strong> When you trap events on the window, document, or other roomy elements, you can get the 

		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;

		 

		 		&lt;script type="text/javascript"&gt;

		 			function showCoords(evt){

		 				alert(

		 				"screenX value: " + evt.screenX + "\n"

		 				+ "screenY value: " + evt.screenY + "\n"

		 			);

		 		}

		 

		 		&lt;/script&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body onmousedown="showCoords(event)"&gt;

		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 <listing>

		 function checkClickMap(e) {

		 	if (e.screenX &lt; 50) doRedButton();

		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();

		 	if (e.screenX &gt;= 100) doRedButton();

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534391(VS.85).aspx MSDN: screenX Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.screenX  MDC - Event: screenX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: screenX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#clientX

		 ]]></see>
<see><![CDATA[#clientY

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='screenY' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:screenY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the vertical coordinate of the event within the screen as a whole.

		 

		 <p><strong>Note:</strong> When you trap events on the window, document, or other roomy elements, you can get the 

		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;

		 

		 		&lt;script type="text/javascript"&gt;

		 			function showCoords(evt){

		 				alert(

		 				"screenX value: " + evt.screenX + "\n"

		 				+ "screenY value: " + evt.screenY + "\n"

		 			);

		 		}

		 

		 		&lt;/script&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body onmousedown="showCoords(event)"&gt;

		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 <listing>

		 function checkClickMap(e) {

		 	if (e.screenX &lt; 50) doRedButton();

		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();

		 	if (e.screenX &gt;= 100) doRedButton();

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534392(VS.85).aspx MSDN: screenY Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/event.screenY  MDC - Event: screenY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: screenY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#clientX

		 ]]></see>
<see><![CDATA[#clientY

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='x' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:x/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the value of pageX. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_alternative

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535154(VS.85).aspx MSDN: x Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: x Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#y

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<method name='y' fullname='cssom.view:MouseEventView/cssom.view:MouseEventView:y/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the value of pageY. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_alternative

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_alternative

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535164(VS.85).aspx MSDN: y Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface  W3C - CSSOM View: y Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#mousepos  Quirksmode: Mouse position

		 ]]></see>
<see><![CDATA[#x

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 2

		 

		 ]]></modified>
</method>
<interfaceRec name='Screen' fullname='cssom.view:Screen' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\cssom\view\Screen.as' namespace='cssom.view' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Has properties that hold information about the screen.

	 

	 <p>All browser compatibility information was obtained via Quirksmode.</p>

	 

	 ]]></description>
<playerversion><![CDATA[CSSOMView 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-screen-interface W3C CSSOM Views Specification: Screen

	 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html  Quirksmode: W3C DOM Compatibility - CSS Object Model View

	 

	 ]]></see>
</interfaceRec>
<method name='availHeight' fullname='cssom.view:Screen/cssom.view:Screen:availHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the amount of vertical space available to the window on the screen. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (window.screen.availHeight != window.screen.height) {

		 	// something's in the way!

		 	// use available to size window

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533487(VS.85).aspx  MSDN: availHeight Propety

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screen.availHeight  MDC - Window: availHeight Propety

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-screen-interface  W3C - CSSOM View: availHeight Propety

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#screenview  Quirksmode: ScreenView properties

		 

		 ]]></see>
</method>
<method name='availWidth' fullname='cssom.view:Screen/cssom.view:Screen:availWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the amount of horizontal space in pixels available to the window. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (window.screen.availHeight != window.screen.height) {

		 	// something's in the way!

		 	// use available to size window

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533488(VS.85).aspx  MSDN: availWidth Propety

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screen.availWidth  MDC - Window: availWidth Propety

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-screen-interface  W3C - CSSOM View: availWidth Propety

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#screenview  Quirksmode: ScreenView properties

		 

		 ]]></see>
</method>
<method name='colorDepth' fullname='cssom.view:Screen/cssom.view:Screen:colorDepth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the lowest number of bits from the color components of the output device.

		 

		 ]]></description>
<example><![CDATA[
		 Check the color depth of the screen

		 <listing>

		 if ( window.screen.colorDepth &lt; 8) {

		 	// use low-color version of page

		 } else { 

		 	// use regular, colorful page

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533578(VS.85).aspx  MSDN: colorDepth Propety

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screen.colorDepth  MDC - Window: colorDepth Propety

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-screen-interface  W3C - CSSOM View: colorDepth Propety

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#screenview  Quirksmode: ScreenView properties

		 

		 ]]></see>
</method>
<method name='height' fullname='cssom.view:Screen/cssom.view:Screen:height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the height of the screen in pixels. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (window.screen.availHeight != window.screen.height) {

		 	// something is occupying some screen real estate!

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533779(VS.85).aspx  MSDN: height Propety

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screen.height  MDC - Window: height Propety

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-screen-interface  W3C - CSSOM View: height Propety

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#screenview  Quirksmode: ScreenView properties

		 

		 ]]></see>
</method>
<method name='pixelDepth' fullname='cssom.view:Screen/cssom.view:Screen:pixelDepth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the lowest number of bits from the color components of the output device.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // if there is not adequate bit depth choose a simpler color

		 if ( window.screen.pixelDepth > 8 ) {

		 	document.style.color = "#FAEBD7";

		 } else {

		 	document.style.color = "#FFFFFF";

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screen.pixelDepth  MDC - Window: pixelDepth Propety

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-screen-interface  W3C - CSSOM View: pixelDepth Propety

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#screenview  Quirksmode: ScreenView properties

		 

		 ]]></see>
</method>
<method name='width' fullname='cssom.view:Screen/cssom.view:Screen:width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the width of the screen. 

		 

		 ]]></description>
<example><![CDATA[
		 Crude way to check that the screen is at 1024x768

		 <listing>

		 if (window.screen.width &gt; 1000) {

		 	// resolution is below 10 x 7

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535144(VS.85).aspx  MSDN: width Propety

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screen.width  MDC - Window: width Propety

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-screen-interface  W3C - CSSOM View: width Propety

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#screenview  Quirksmode: ScreenView properties

		 

		 ]]></see>
</method>
<interfaceRec name='Media' fullname='cssom.view:Media' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\cssom\view\Media.as' namespace='cssom.view' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Should be an object returned by the Window.media property, although I haven't found any

	 browsers that support this.

	 

	 ]]></description>
<example><![CDATA[
	 <listing>var m = window.media;</listing>

	 

	 ]]></example>
<playerversion><![CDATA[CSSOMView 0

	 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-media-interface W3C CSSOM Views Specification: Media

	 

	 ]]></see>
</interfaceRec>
<method name='query' fullname='cssom.view:Media/cssom.view:Media:query' isStatic='false' isFinal='false' isOverride='false'  param_names='mediaquery' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 ]]></description>
<param><![CDATA[mediaquery

		 ]]></param>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<return><![CDATA[If the mediaquery matches the state of the current view.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#media-query W3C CSSOM Views Specification: Media.query()

		 

		 ]]></see>
</method>
<method name='type' fullname='cssom.view:Media/cssom.view:Media:type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the string that represents the canvas' current rendering mode in canonical form.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#media-type W3C CSSOM Views Specification: Media.type

		 

		 ]]></see>
</method>
<interfaceRec name='RangeView' fullname='cssom.view:RangeView' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\cssom\view\RangeView.as' namespace='cssom.view' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Has properties and methods that give information about the dimensions of a Range.

	 

	 ]]></description>
<playerversion><![CDATA[CSSOMView 0

	 ]]></playerversion>
<since><![CDATA[DOMTR 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-rangeview-interface  W3C CSSOM Views Specification: RangeView

	 

	 ]]></see>
</interfaceRec>
<method name='getBoundingClientRect' fullname='cssom.view:RangeView/cssom.view:RangeView:getBoundingClientRect' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:TextRectangle'>
<description><![CDATA[

		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMTR 2

		 

		 ]]></since>
<return><![CDATA[The returned value is a TextRectangle object which is the union 

		 of the rectangles returned by getClientRects() for the element, i.e., 

		 the CSS border-boxes associated with the element.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#rangeview-getboundingclientrect  W3C - CSSOM View: RangeView.getBoundingClientRect()

		 ]]></see>
<see><![CDATA[cssom.view.ElementView#getBoundingClientRect() ElementView.getBoundingClientRect()

		 

		 ]]></see>
</method>
<method name='getClientRects' fullname='cssom.view:RangeView/cssom.view:RangeView:getClientRects' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:TextRectangleList'>
<description><![CDATA[

		 Retrieves a collection of rectangles that describes the layout of the 

		 contents of an object or range within the client. Each rectangle 

		 describes a single line.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMTR 2

		 

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#rangeview-getclientrects  W3C - CSSOM View: RangeView.getClientRects()

		 ]]></see>
<see><![CDATA[cssom.view.ElementView#getClientRects() ElementView.getClientRects()

		 

		 ]]></see>
</method>
<interfaceRec name='TextRectangle' fullname='cssom.view:TextRectangle' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\cssom\view\TextRectangle.as' namespace='cssom.view' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Objects implementing the TextRectangle interface represent a rectangular box.

	 

	 ]]></description>
<example><![CDATA[
	 In the following excerpt from the Gettysburg Address, four TextRectangle objects are contained in the b element (bold text).

	 

	 <listing>

	 &lt;p&gt;Four score and seven years ago &lt;b&gt;our fathers&lt;br&gt;

	 brought forth . . . a new nation, conceived in liberty&lt;br&gt;

	 and dedicated to the proposition that all men are&lt;br&gt;

	 created equal.&lt;/b&gt; Now we are engaged in a great civil war . . . 

	 &lt;/p&gt;

	 </listing>

	 

	 <p>

	 The four TextRectangle objects are: 

	 <ol>

	 <li>"our fathers"</li>

	 <li>"brought forth . . . a new nation, conceived in liberty"</li>

	 <li>"and dedicated to the proposition that all men are"</li>

	 <li>"created equal"</li>

	 </ol>

	 </p>

	 

	 <p>If you resize the window containing this text, the TextRectangle objects do not update. Because the objects are a 

	 snapshot of the layout, the objects should update after an onresize event occurs.</p>

	 

	 <p>The width of the TextRectangle may not be identical to the width of the TextRange it contains. A TextRange is only 

	 as wide as the text, but a TextRectangle is as wide as the element containing that text.</p>

	 

	 ]]></example>
<playerversion><![CDATA[CSSOMView 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535906(VS.85).aspx MSDN: TextRectangle Object

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-textrectangle-interface W3C CSSOM Views Specification: TextRectangle

	 

	 ]]></see>
</interfaceRec>
<method name='bottom' fullname='cssom.view:TextRectangle/cssom.view:TextRectangle:bottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the distance between the top of the viewport and the bottom 

		 of the rectangle box as number of CSS pixels. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script&gt;

		 function getCoords(oObject) {

		 	oBndRct = oObject.getBoundingClientRect();

		 	alert("Bounding rectangle = \nUpper left coordinates: "

		 	+ oBndRct.left + " " + oBndRct.top +

		 	"\nLower right coordinates: "

		 	+ oBndRct.right + " " + oBndRct.bottom);

		 }

		 &lt;/script&gt;

		 &lt;/head&gt;	

		 &lt;body&gt;

		 &lt;p id=oPara onclick="getCoords(this)"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533535(VS.85).aspx  MSDN: bottom Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-textrectangle-interface W3C - CSSOM View: bottom Property

		 

		 ]]></see>
</method>
<method name='height' fullname='cssom.view:TextRectangle/cssom.view:TextRectangle:height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.getClientRects MDC - Element: getClientRects Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.getBoundingClientRect MDC - Element: getBoundingClientRect Method

		 

		 ]]></see>
</method>
<method name='left' fullname='cssom.view:TextRectangle/cssom.view:TextRectangle:left/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the distance between the left of the viewport and the left 

		 of the rectangle box as number of CSS pixels.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script&gt;

		 function getCoords(oObject) {

		 	oBndRct = oObject.getBoundingClientRect();

		 	alert("Bounding rectangle = \nUpper left coordinates: "

		 	+ oBndRct.left + " " + oBndRct.top +

		 	"\nLower right coordinates: "

		 	+ oBndRct.right + " " + oBndRct.bottom);

		 }

		 &lt;/script&gt;

		 &lt;/head&gt;	

		 &lt;body&gt;

		 &lt;p id=oPara onclick="getCoords(this)"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534099(VS.85).aspx MSDN: left Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-textrectangle-interface W3C - CSSOM View: left Property

		 

		 ]]></see>
</method>
<method name='right' fullname='cssom.view:TextRectangle/cssom.view:TextRectangle:right/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the distance between the left of the viewport and the right 

		 of the rectangle box as number of CSS pixels. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script&gt;

		 function getCoords(oObject) {

		 	oBndRct = oObject.getBoundingClientRect();

		 	alert("Bounding rectangle = \nUpper left coordinates: "

		 	+ oBndRct.left + " " + oBndRct.top +

		 	"\nLower right coordinates: "

		 	+ oBndRct.right + " " + oBndRct.bottom);

		 }

		 &lt;/script&gt;

		 &lt;/head&gt;	

		 &lt;body&gt;

		 &lt;p id=oPara onclick="getCoords(this)"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534374(VS.85).aspx MSDN: right Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-textrectangle-interface W3C - CSSOM View: right Property

		 

		 ]]></see>
</method>
<method name='top' fullname='cssom.view:TextRectangle/cssom.view:TextRectangle:top/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the distance between the top of the viewport and the top of 

		 the rectangle box as number of CSS pixels. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script&gt;

		 function getCoords(oObject) {

		 	oBndRct = oObject.getBoundingClientRect();

		 	alert("Bounding rectangle = \nUpper left coordinates: "

		 	+ oBndRct.left + " " + oBndRct.top +

		 	"\nLower right coordinates: "

		 	+ oBndRct.right + " " + oBndRct.bottom);

		 }

		 &lt;/script&gt;

		 &lt;/head&gt;	

		 &lt;body&gt;

		 &lt;p id=oPara onclick="getCoords(this)"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534688(VS.85).aspx MSDN: top Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-textrectangle-interface W3C - CSSOM View: top Property

		 

		 ]]></see>
</method>
<method name='width' fullname='cssom.view:TextRectangle/cssom.view:TextRectangle:width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.getClientRects MDC - Element: getClientRects Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.getBoundingClientRect MDC - Element: getBoundingClientRect Method

		 

		 ]]></see>
</method>
<interfaceRec name='TextRectangleList' fullname='cssom.view:TextRectangleList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\cssom\view\TextRectangleList.as' namespace='cssom.view' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A collection of TextRectangle objects returned by the getClientRects method.

	 

	 ]]></description>
<example><![CDATA[
	 This example shows how to use the getClientRects method and the TextRectangle collection to iterate through the lines of text in an object.

	 

	 <listing>

	 &lt;script&gt;

	 function newHighlite(obj) {            

	 	oRcts = obj.getClientRects();

	 	iLength = oRcts.length;

	 	for (i = 0;i &lt; iLength; i++) {	

	 		alert("Line number " + (i + 1) + " is " + (oRcts(i).right - oRcts(i).left) + " pixels wide.");

	 	}

	 }

	 &lt;/script&gt;</listing>

	 

	 ]]></example>
<playerversion><![CDATA[CSSOMView 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537494(VS.85).aspx  MSDN: TextRectangle Collection

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#textrectanglelist W3C CSSOM Views Specification: TextRectangleList

	 

	 ]]></see>
</interfaceRec>
<method name='item' fullname='cssom.view:TextRectangleList/cssom.view:TextRectangleList:item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='cssom.view:TextRectangle'>
<description><![CDATA[

		 Retrieves an object from a TextRectangle collection.

		 

		 ]]></description>
<param><![CDATA[index

		 ]]></param>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<return><![CDATA[The TextRectangle object at that index

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/dd347037(VS.85).aspx  MSDN: item Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#textrectanglelist W3C - CSSOM View: item Method

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: May be raised if the index 

		 is negative or greater than the number of TextRectangle objects 

		 associated with the object.

		 

		 ]]></throws>
</method>
<method name='namedItem' fullname='cssom.view:TextRectangleList/cssom.view:TextRectangleList:namedItem' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='cssom.view:TextRectangle'>
<description><![CDATA[

		 Retrieves an object or a collection from a specified collection.

		 

		 <p><strong>Note (IE8):</strong> In IE8 mode, the namedItem method does not return collections if more than one named item is found; instead, it returns the first case-insensitive matched element.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="oDIV1"&gt;This text will not change.&lt;/div&gt;

		 &lt;div id="oDIV2"&gt;This text will change.&lt;/div&gt;

		 &lt;button onclick="document.all.namedItem('oDIV2').innerHTML='Changed!';"&gt;

		 Change Option

		 &lt;/button&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[name The name or id property of the object to retrieve. A collection is returned if more than one match is made.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<return><![CDATA[Returns an object or a collection of objects if successful, or null otherwise.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536634(VS.85).aspx  MSDN: namedItem Method

		 

		 ]]></see>
</method>
<method name='length' fullname='cssom.view:TextRectangleList/cssom.view:TextRectangleList:length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the total number of TextRectangle objects associated with the object.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534101(VS.85).aspx MSDN: length Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#textrectanglelist W3C - CSSOM View: length Property

		 

		 ]]></see>
</method>
<interfaceRec name='WindowView' fullname='cssom.view:WindowView' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\cssom\view\WindowView.as' namespace='cssom.view' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Has properties that hold the dimensions of the entire browser window.

	 

	 <p>Some browser compatibility information was obtained via Quirksmode.</p>

	 

	 <p>Some browser compatibility information was obtained via Aptana.</p>

	 

	 ]]></description>
<playerversion><![CDATA[CSSOMView 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface W3C CSSOM Views Specification: WindowView

	 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html  Quirksmode: W3C DOM Compatibility - CSS Object Model View

	 

	 ]]></see>
<modified><![CDATA[HTML 5

	 ]]></modified>
</interfaceRec>
<method name='innerHeight' fullname='cssom.view:WindowView/cssom.view:WindowView:innerHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.

		 

		 <p><strong>Note:</strong> The innerHeight property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>

		 

		 ]]></description>
<example><![CDATA[
		 Assuming a frameset

		 <listing>

		 var intFrameHeight = window.innerHeight; // or

		 var intFrameHeight = self.innerHeight; // will return the height of the frame viewport within the frameset

		 var intFramesetHeight = parent.innerHeight; // will return the height of the viewport of the closest frameset

		 var intOuterFramesetHeight = top.innerHeight; // will return the height of the viewport of the outermost frameset</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.innerHeight  MDC - Window: innerHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: innerHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#outerWidth

		 ]]></see>
<see><![CDATA[#innerWidth

		 ]]></see>
<see><![CDATA[#outerHeight

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<method name='innerWidth' fullname='cssom.view:WindowView/cssom.view:WindowView:innerWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Width of the browser window viewport including, if rendered, the vertical scrollbar.

		 

		 <p><strong>Note:</strong> The innerWidth property does not include the sidebar. So when the sidebar is expanded, the innerWidth property value diminishes.</p>

		 

		 <p><strong>Note:</strong> The innerWidth property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>

		 

		 ]]></description>
<example><![CDATA[
		 Assuming a frameset

		 <listing>

		 var intFrameWidth = window.innerWidth; // or

		 var intFrameWidth = self.innerWidth; // will return the width of the frame viewport within the frameset

		 var intFramesetWidth = parent.innerWidth; // will return the width of the viewport of the closest frameset

		 var intOuterFramesetWidth = top.innerWidth; // will return the width of the viewport of the outermost frameset</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.innerWidth  MDC - Window: innerWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: innerWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#outerWidth

		 ]]></see>
<see><![CDATA[#innerHeight

		 ]]></see>
<see><![CDATA[#outerHeight

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<method name='media' fullname='cssom.view:WindowView/cssom.view:WindowView:media/get' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:Media'>
<description><![CDATA[

		 Returns an Media object.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: media Property

		 

		 ]]></see>
</method>
<method name='outerHeight' fullname='cssom.view:WindowView/cssom.view:WindowView:outerHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets the height of the outside of the browser window. window.outerHeight represents the height of 

		 the whole browser window including toolbars and window chrome.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.outerHeight  MDC - Window: outerHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: outerHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#innerWidth

		 ]]></see>
<see><![CDATA[#innerHeight

		 ]]></see>
<see><![CDATA[#outerWidth

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<method name='outerWidth' fullname='cssom.view:WindowView/cssom.view:WindowView:outerWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets the width of the outside of the browser window. window.outerWidth represents the width of 

		 the whole browser window including sidebar (if expanded), window chrome and window [re-]sizing borders/handles.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.outerWidth  MDC - Window: outerWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: outerWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#innerWidth

		 ]]></see>
<see><![CDATA[#innerHeight

		 ]]></see>
<see><![CDATA[#outerHeight

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<method name='pageXOffset' fullname='cssom.view:WindowView/cssom.view:WindowView:pageXOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the number of pixels that the document has already been scrolled horizontally. 

		 

		 <p><strong>Note:</strong> <code>window.pageXOffset == window.scrollX; // always true</code></p>

		 

		  ]]></description>
<example><![CDATA[
		 <listing>

		 // make sure and go over to the second horizontal page

		 if (window.scrollX) {

		 	scroll(0,0);

		 }

		 scrollBy(400, 0);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.pageXOffset  MDC - Window: pageXOffset Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: pageXOffset Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#pageYOffset

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<method name='pageYOffset' fullname='cssom.view:WindowView/cssom.view:WindowView:pageYOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport. 

		 

		 <p><strong>Note:</strong> <code>window.pageYOffset == window.scrollY; // always true</code></p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // make sure and go over to the second horizontal page

		 if (window.scrollY) {

		 	scroll(0,0);

		 }

		 scrollByPages(1);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.pageYOffset  MDC - Window: pageYOffset Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: pageYOffset Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[pageXOffset

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<method name='screen' fullname='cssom.view:WindowView/cssom.view:WindowView:screen/get' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:Screen'>
<description><![CDATA[

		 Returns a reference to the screen object associated with the window. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (screen.pixelDepth &lt; 8) {

		 	// use low-color version of page

		 } else { 

		 	// use regular, colorful page

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screen MDC - Window: screen Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface W3C - CSSOM View: screen Property

		 ]]></see>
<see><![CDATA[http://www.aptana.com/reference/html/api/Window.html#Window.screen  Aptana: Window.screen Property

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<method name='screenX' fullname='cssom.view:WindowView/cssom.view:WindowView:screenX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen. 

		 

		 <p><strong>Note (Opera):</strong> Opera calculates the coordinates of the specific tab window relative to 

		 the encompassing browser window. This is understandable given its way of working with 

		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 

		 browser window relative to the screen.</p>

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screenX  MDC - Window: screenX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: screenX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<method name='screenY' fullname='cssom.view:WindowView/cssom.view:WindowView:screenY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen. 

		 

		 <p><strong>Note (Opera):</strong> Opera calculates the coordinates of the specific tab window relative to 

		 the encompassing browser window. This is understandable given its way of working with 

		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 

		 browser window relative to the screen.</p>

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screenY  MDC - Window: screenY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: screenY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#screenX

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<interfaceRec name='DocumentView' fullname='cssom.view:DocumentView' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\cssom\view\DocumentView.as' namespace='cssom.view' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Has a method that gives position information about an Element node relative to the Document.

	 

	 <p>DocumentView contains many properties and a few methods that were previously not part of any specification. They originated as part of 

	 MSIE's DHTML object model. They are now all part of the CSSOM Views specification which should be implemented on any browser supporting

	 DOM 3 Core.</p>

	 

	 <p>All browser compatibility information was obtained via Quirksmode.</p>

	 

	 <p><strong>Note:</strong> This conflicts with an interface in DOM 2 Views. Maybe this specification

	 combined with HTML 5 (for AbstractView) can obsolete that one as it is completely useless in practice.</p> 

	 

	 ]]></description>
<playerversion><![CDATA[CSSOMView 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-documentview-interface W3C CSSOM Views Specification: DocumentView

	 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html  Quirksmode: W3C DOM Compatibility - CSS Object Model View

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</interfaceRec>
<method name='elementFromPoint' fullname='cssom.view:DocumentView/cssom.view:DocumentView:elementFromPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='Number;Number' param_defaults='undefined;undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 Returns the element from the document whose elementFromPoint method is being called which is the 

		 topmost element which lies under the given point. 

		 

		 <p>The point is specified via coordinates, in CSS pixels, relative to the upper-left-most point 

		 in the window or frame containing the document.</p>

		 

		 <p><strong>Note:</strong> If the element at the specified point belongs to another document (for example, 

		 an iframe's subdocument), the element in the DOM of the document the method is called on (in the iframe 

		 case, the iframe itself) is returned. If the element at the given point is anonymous or XBL generated 

		 content, such as a textbox's scroll bars, then the first non-anonymous ancestor element (for example, 

		 the textbox) is returned.</p>

		 

		 <p><strong>Note:</strong> If the specified point is outside the visible bounds of the document or either 

		 coordinate is negative, the result is null.</p>

		 

		 <p><strong>Note:</strong> The browsers do not entirely agree which mouse coordinates this method needs. 

		 IE and Firefox 3 need clientX/Y (relative to the viewport), while Opera and Safari need pageX/Y (relative 

		 to the document).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;elementFromPoint example&lt;/title&gt;

		 		&lt;script type="text/javascript"&gt;

		 			function changeColor(newColor) {

		 				elem = document.elementFromPoint(2, 2);

		 				elem.style.color = newColor;

		 			}

		 		&lt;/script&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body&gt;

		 		&lt;p id="para1"&gt;Some text here&lt;/p&gt;

		 		&lt;button onclick="changeColor('blue');"&gt;blue&lt;/button&gt;

		 		&lt;button onclick="changeColor('red');"&gt;red&lt;/button&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;

		 </listing>

		 

		 ]]></example>
<param><![CDATA[x The X coordinate to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.

		 ]]></param>
<param><![CDATA[y The Y coordinate to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.

		 ]]></param>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_alternative

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The element at x,y in the viewport

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536417(VS.85).aspx  MSDN: elementFromPoint Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.elementFromPoint  MDC - Document: elementFromPoint Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-documentview-interface  W3C - CSSOM View: elementFromPoint Method

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#documentview  Quirksmode: DocumentView and ElementView methods

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<interfaceRec name='ElementView' fullname='cssom.view:ElementView' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\cssom\view\ElementView.as' namespace='cssom.view' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Has properties and methods that give information about the dimensions of an Element node (HTML tag).

	 

	 <p>ElementView contains many properties and a few methods that were previously not part of any specification. They originated as part of 

	 MSIE's DHTML object model. They are now all part of the CSSOM Views specification which should be implemented on any browser supporting

	 DOM 3 Core.</p>

	 

	 <p>All browser compatibility information was obtained via Quirksmode.</p>

	 

	 ]]></description>
<playerversion><![CDATA[CSSOMView 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-elementview  W3C CSSOM Views Specification: ElementView

	 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html  Quirksmode: W3C DOM Compatibility - CSS Object Model View

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</interfaceRec>
<method name='getBoundingClientRect' fullname='cssom.view:ElementView/cssom.view:ElementView:getBoundingClientRect' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:TextRectangle'>
<description><![CDATA[

		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.

		 

		 <p><strong>Note (IE8):</strong> In IE8 mode, the bounding rectangle is the same as the client rectangle.</p>

		 

		 <p><strong>Note (IE5):</strong> In Microsoft Internet Explorer 5, the window's upper-left is at 

		 2,2 (pixels) with respect to the true client.</p>

		 

		 <p><strong>Note (Firefox 3.5):</strong> Firefox 3.5 adds width and height properties to the TextRectangle object.</p>

		 

		 <p><strong>Note (Firefox):</strong> Firefox doesn't round the top/bottom coordinates.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>var rect = obj.getBoundingClientRect();</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_almost

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_almost

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The returned value is a TextRectangle object which is the union 

		 of the rectangles returned by getClientRects() for the element, i.e., 

		 the CSS border-boxes associated with the element.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536433(VS.85).aspx MSDN: getBoundingClientRect Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.getBoundingClientRect  MDC - Element: getBoundingClientRect Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-getclientrects  W3C - CSSOM View: getBoundingClientRect Method

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#documentview  Quirksmode: DocumentView and ElementView methods

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='getClientRects' fullname='cssom.view:ElementView/cssom.view:ElementView:getClientRects' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:TextRectangleList'>
<description><![CDATA[

		 Retrieves a collection of rectangles that describes the layout of the 

		 contents of an object or range within the client. Each rectangle 

		 describes a single line.

		 

		 <p><strong>Note (IE8):</strong> In IE8 mode, getClientRects always returns 

		 a collection of one rectangle—the same rectangle as getBoundingClientRect.</p>

		 

		 <p><strong>Note (IE):</strong> In IE5-7, split up a block-level element such as a &lt;p&gt; into one rectangle per line.

		 This is incorrect: a block-level element should be reported as one rectangle.</p>

		 

		 <p><strong>Note (IE):</strong> In IE5-7, the rectangles are off by about two pixels. According to John Resig this is caused by the 

		 (invisible, but nonetheless present) borders of the &lt;html&gt; element.</p>

		 

		 <p><strong>Note (Firefox 3.5):</strong> Firefox 3.5 adds width and height properties to the TextRectangle object.</p>

		 

		 <p><strong>Note (Firefox):</strong> Firefox doesn't round the top/bottom coordinates.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var rects = obj.getClientRects();

		 var numLines = rects.length;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_almost

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_almost

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536435(VS.85).aspx  MSDN: getClientRects Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.getClientRects  MDC - Element: getClientRects Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-getclientrects  W3C - CSSOM View: getClientRects Method

		 ]]></see>
<see><![CDATA[http://ejohn.org/blog/getboundingclientrect-is-awesome/  John Resig

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#documentview  Quirksmode: DocumentView and ElementView methods

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='clientHeight' fullname='cssom.view:ElementView/cssom.view:ElementView:clientHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.

		 

		 <p>clientHeight can be calculated as CSS height + CSS padding - height of horizontal scrollbar (if present).</p>

		 

		 <p><strong>Note:</strong> offsetLeft returns the position the upper left edge of the element; not necessarily 

		 the 'real' left edge of the element. This is important for span elements in flowed text that wraps from one 

		 line to the next. The span may start in the middle of the page and wrap around to the beginning of the next 

		 line. The offsetLeft will refer to the left edge of the start of the span, not the left edge of text at the 

		 start of the second line. Therefore, a box with the left, top, width and height of offsetLeft, offsetTop, 

		 offsetWidth and offsetHeight will not be a bounding box for a span with wrapped text.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example shows how the clientHeight property and the offsetHeight property measure document height differently. 

		 The height of the div is set to 100, and this is the value retrieved by the offsetHeight property, not the clientHeight property. 

		 

		 <listing>

		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;

		 &lt;button onclick="alert(oDiv.clientHeight)">client height&lt;/button&gt;

		 &lt;button onclick="alert(oDiv.offsetHeight)">offset heightY&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533563(VS.85).aspx  MSDN: clientHeight Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.clientHeight  MDC - Element: clientHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#client-attributes  W3C - CSSOM View: clientHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='clientLeft' fullname='cssom.view:ElementView/cssom.view:ElementView:clientLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The width of the left border of an element in pixels. 

		 

		 <p>It includes the width of the vertical scrollbar if the text direction of the element is right–to–left and 

		 if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left 

		 margin or the left padding.</p>

		 

		 <p><strong>Note:</strong> The difference between the offsetLeft and clientLeft properties is the border of the object.</p>

		 

		 <p><strong>Note:</strong> When layout.scrollbar.side property is set to 1 or to 3 and when the text-direction is set to RTL, 

		 then the vertical scrollbar is positioned on the left and this impacts the way clientLeft is computed.</p>

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533564(VS.85).aspx  MSDN: clientLeft Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.clientLeft  MDC - Element: clientLeft Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#client-attributes  W3C - CSSOM View: clientLeft Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='clientTop' fullname='cssom.view:ElementView/cssom.view:ElementView:clientTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The width of the top border of an element in pixels. It does not include the top margin or padding.

		 

		 <p><strong>Note:</strong> The difference between the offsetTop and the clientTop properties is the border area of the object.</p>

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533565(VS.85).aspx  MSDN: clientTop Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.clientTop  MDC - Element: clientTop Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#client-attributes  W3C - CSSOM View: clientTop Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='clientWidth' fullname='cssom.view:ElementView/cssom.view:ElementView:clientWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the inner width of an element in pixels. It includes padding but not the vertical scrollbar (if present, if rendered), border or margin.

		 

		 ]]></description>
<example><![CDATA[
		 This example shows how the clientWidth property and the offsetWidth property measure document width differently. The width of the div 

		 is set to 200, and this is the value retrieved by the offsetWidth property, not the clientWidth property. 

		 

		 <listing>

		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;

		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;

		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset widthY&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533566(VS.85).aspx  MSDN: clientWidth Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.clientWidth  MDC - Element: clientWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#client-attributes  W3C - CSSOM View: clientWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='offsetHeight' fullname='cssom.view:ElementView/cssom.view:ElementView:offsetHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Height of an element relative to the element's offsetParent.

		 

		 <p>Typically, an element's offsetHeight is a measurement which includes 

		 the element borders, the element vertical padding, the element 

		 horizontal scrollbar (if present, if rendered) and the element CSS height.</p>

		 

		 <p>For the document body object, the measurement includes total linear 

		 content height instead of the element CSS height. Floated elements 

		 extending below other linear content are ignored.</p>

		 

		 <p><strong>Note (IE6):</strong> To comply with the <a class="external" rel="external nofollow" href="http://www.w3.org/TR/REC-CSS1/">Cascading Style Sheets, Level 1 (CSS1)</a> World Wide 

		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 

		 height of objects differently when you use the !DOCTYPE declaration in your 

		 document to switch on standards-compliant mode. This difference may affect 

		 the value of the offsetWidth propety. When standards-compliant mode is 

		 switched on, the width property specifies the distance between the left and 

		 right edges of the bounding box that surrounds the object's content. When 

		 standards-compliant mode is not switched on, and with earlier versions of 

		 Windows Internet Explorer, the width property also includes the border and 

		 padding belts that surround the object's bounding box.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example adjusts the size of a clock's readout to fit the current width and height of the document body.

		 

		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;A Simple Clock&lt;/title&gt;

		 &lt;script type="text/javascript"&gt;

		 	function startClock() {

		 		window.setInterval("Clock_Tick()", 1000);

		 		Clock_Tick();

		 	}

		 

		 	var iRatio = 4;

		 	function Clock_Tick() {

		 		var dToday = Date();

		 		var sTime = dToday.substring(11,19);

		 		var iDocHeight = document.body.offsetHeight;

		 		var iDocWidth = document.body.offsetWidth;

		 

		 		if ((iDocHeightRatio)&gt;iDocWidth)

		 		iDocHeight = iDocWidth / iRatio;

		 		document.all.MyTime.innerText = sTime;

		 		document.all.MyTime.style.fontSize = iDocHeight;

		 	}

		 &lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body onload="startClock()"&gt;

		 &lt;p id="MyTime"&gt;&amp;nbsp;&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx  MSDN: Measuring Element Dimension and Location

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534199(VS.85).aspx  MSDN: offsetHeight Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetHeight  MDC - Element: offsetHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='offsetLeft' fullname='cssom.view:ElementView/cssom.view:ElementView:offsetLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the number of pixels that the upper left corner of the current 

		 element is offset to the left within the offsetParent node.

		 

		 <p><strong>Note:</strong> offsetLeft returns the position the upper left edge of the element; 

		 not necessarily the 'real' left edge of the element. This is important 

		 for inline elements (such as span) in flowed text that wraps from one 

		 line to the next. The span may start in the middle of the line and wrap 

		 around to the beginning of the next line. The offsetLeft will refer to 

		 the left edge of the start of the span, not the left edge of text at the 

		 start of the second line. Therefore, a box with the left, top, width and 

		 height of offsetLeft, offsetTop, offsetWidth and offsetHeight will not be 

		 a bounding box for a span with wrapped text.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var colorTable = document.getElementById("t1");

		 var tOLeft = colorTable.offsetLeft;

		 

		 if (tOLeft > 5) {

		 	// large left offset: do something here

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx  MSDN: Measuring Element Dimension and Location

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534200(VS.85).aspx  MSDN: offsetLeft Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetLeft  MDC - Element: offsetLeft Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetLeft Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='offsetParent' fullname='cssom.view:ElementView/cssom.view:ElementView:offsetParent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 The element from which all offset calculations are currently computed.

		 

		 <p>offsetParent returns a reference to the object which is the closest 

		 (nearest in the containment hierarchy) positioned containing element. 

		 If the element is non-positioned, the root element (html in standards 

		 compliant mode; body in quirks rendering mode) is the offsetParent. 

		 offsetParent returns null when the element has style.display set 

		 to "none".</p>

		 

		 <p><strong>Note (IE5):</strong> In Microsoft Internet Explorer 5, the offsetParent property returns 

		 the table object for the td object.</p>

		 

		 <p><strong>Note (IE4):</strong> In Internet Explorer 4.0 it returns 

		 the tr object. You can use the parentElement property to retrieve the 

		 immediate container of the table cell.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example shows how to determine the position of a td object. Although the td 

		 object appears to the far right in the document, its position is close to the x-axis and y-axis, 

		 because its offset parent is a table object rather than the document body. For Internet Explorer 4.0,

		 this same example returns a position of 0,0 because the offset parent is the table row.

		 

		 <listing>

		 &lt;table border='1' align='right'&gt;

		 	&lt;tr&gt;

		 		&lt;td id='oCell'&gt;This is a small table.&lt;/td&gt;

		 	&lt;/tr&gt;

		 &lt;/table&gt;</listing>

		 

		 <listing>

		 var oElement = document.getElementById("oCell");

		 

		 alert("The TD element is at (" + oElement.offsetLeft + 

		 "," + oElement.offsetTop + ")\n" + "The offset parent is " 

		 + oElement.offsetParent.tagName );</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534302(VS.85).aspx  MSDN: offsetParent Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetParent  MDC - Element: offsetParent Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetParent Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='offsetTop' fullname='cssom.view:ElementView/cssom.view:ElementView:offsetTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the distance of the current element relative to the 

		 top of the offsetParent node.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 d = document.getElementById("div1");

		 

		 topPos = d.offsetTop;

		 

		 if (topPos > 10) {

		 	// object is offset more

		 	// than 10 pixels from its parent

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx  MSDN: Measuring Element Dimension and Location

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534303(VS.85).aspx  MSDN: offsetTop Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetTop  MDC - Element: offsetTop Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetTop Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='offsetWidth' fullname='cssom.view:ElementView/cssom.view:ElementView:offsetWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The width of an element, relative to the layout.

		 

		 <p>Typically, an element's offsetWidth is a measurement which includes 

		 the element borders, the element horizontal padding, the element 

		 vertical scrollbar (if present, if rendered) and the element CSS width.</p>

		 

		 <p><strong>Note (IE6):</strong> To comply with the <a class="external" rel="external nofollow" href="http://www.w3.org/TR/REC-CSS1/">Cascading Style Sheets, Level 1 (CSS1)</a> World Wide 

		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 

		 height of objects differently when you use the !DOCTYPE declaration in your 

		 document to switch on standards-compliant mode. This difference may affect 

		 the value of the offsetWidth propety. When standards-compliant mode is 

		 switched on, the width property specifies the distance between the left and 

		 right edges of the bounding box that surrounds the object's content. When 

		 standards-compliant mode is not switched on, and with earlier versions of 

		 Windows Internet Explorer, the width property also includes the border and 

		 padding belts that surround the object's bounding box.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example adjusts the size of a clock's readout to fit the current width and height of the document.

		 

		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;A Simple Clock&lt;/title&gt;

		 &lt;script type="text/javascript"&gt;

		 	function startClock() {

		 		window.setInterval("Clock_Tick()", 1000);

		 		Clock_Tick();

		 	}

		 

		 	var iRatio = 4;

		 	function Clock_Tick() {

		 		var dToday = Date();

		 		var sTime = dToday.substring(11,19);

		 		var iDocHeight = document.body.offsetHeight;

		 		var iDocWidth = document.body.offsetWidth;

		 

		 		if ((iDocHeightRatio)&gt;iDocWidth)

		 		iDocHeight = iDocWidth / iRatio;

		 		document.all.MyTime.innerText = sTime;

		 		document.all.MyTime.style.fontSize = iDocHeight;

		 	}

		 &lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body onload="startClock()"&gt;

		 &lt;p id="MyTime"&gt;&amp;nbsp;&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<example><![CDATA[
		 This example uses the offsetWidth property and the clientWidth property to show the different ways of measuring the object size.

		 

		 <listing>

		 &lt;div id=oDiv STYLE="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;

		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;

		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset width&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx  MSDN: Measuring Element Dimension and Location

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534304(VS.85).aspx  MSDN: offsetWidth Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetWidth  MDC - Element: offsetWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='scrollHeight' fullname='cssom.view:ElementView/cssom.view:ElementView:scrollHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Height of the scroll view of an element; it includes the element padding but not its margin.

		 

		 <p>An element's scrollHeight is a measurement of the height of an element's content including 

		 content not visible on the screen due to overflow.</p>

		 

		 <p>If the element's content generated a vertical scrollbar, the scrollHeight value is equal to 

		 the minimum clientHeight the element would require in order to fit all the content in the viewpoint 

		 without using a vertical scrollbar. When an element's content does not generate a vertical scrollbar, 

		 then its scrollHeight property is equal to its clientHeight property.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example uses the scrollHeight property to retrieve the height of the viewable content.

		 

		 <listing>

		 &lt;script type="text/javascript"&gt;

		 	function fnCheckScroll(){

		 		var iNewHeight = oDiv.scrollHeight;

		 		alert("The value of the scrollHeight property is: " 

		 		+ iNewHeight + "px"); 

		 	}

		 &lt;/script&gt;

		 ...

		 &lt;div id="oDiv" style="overflow: scroll; height= 100px; width= 250px; text-align: left"&gt;

		 	... 

		 &lt;/div&gt;

		 &lt;button onclick="fnCheckScroll()"&gt;Check scrollHeight&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534615(VS.85).aspx  MSDN: scrollHeight Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.scrollHeight  MDC - Element: scrollHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#scroll-attributes  W3C - CSSOM View: scrollHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='scrollLeft' fullname='cssom.view:ElementView/cssom.view:ElementView:scrollLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets or sets the number of pixels that an element's content is scrolled to the left.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Set the number of pixels scrolled

		 element.scrollLeft = 10;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534617(VS.85).aspx  MSDN: scrollLeft Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.scrollLeft  MDC - Element: scrollLeft Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#scroll-attributes  W3C - CSSOM View: scrollLeft Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='scrollTop' fullname='cssom.view:ElementView/cssom.view:ElementView:scrollTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets or sets the number of pixels that the content of an element is scrolled upward.

		 

		 <p>An element's scrollTop is a measurement of the distance of an element's top to its topmost visible content.</p>

		 

		 <p>When an element content does not generate a vertical scrollbar, then its scrollTop value defaults to 0.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Get the number of pixels scrolled

		 var  intElemScrollTop = element.scrollTop;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/workshop/author/dhtml/reference/properties/scrolltop.asp?frame=true  MSDN: scrollTop Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.scrollTop  MDC - Element: scrollTop Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#scroll-attributes  W3C - CSSOM View: scrollTop Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='scrollWidth' fullname='cssom.view:ElementView/cssom.view:ElementView:scrollWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater. 

		 

		 <p>If the element is wider than its content area (for example, if there are scroll bars for scrolling through the content), the scrollWidth is larger than the clientWidth.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="aDiv" style="width: 100px; height: 200px; overflow: auto;"&gt;

		 	-FooBar-FooBar-FooBar

		 &lt;/div&gt;

		 &lt;br/&gt;

		 &lt;input type="button" value="Show scrollWidth"

		 onclick="alert(document.getElementById('aDiv').scrollWidth);"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534619(VS.85).aspx  MSDN: scrollWidth Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.scrollWidth  MDC - Element: scrollWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#scroll-attributes  W3C - CSSOM View: scrollWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='scrollLeft' fullname='cssom.view:ElementView/cssom.view:ElementView:scrollLeft/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scrollTop' fullname='cssom.view:ElementView/cssom.view:ElementView:scrollTop/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<classRec name='DOMUserData' fullname='dom.core.types:DOMUserData' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\types\DOMUserData.as' namespace='dom.core.types' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A DOMUserData represents a reference to application data.

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMUserData W3C - DOM 3 Core: DOMUserData

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</classRec>
<classRec name='DOMObject' fullname='dom.core.types:DOMObject' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\types\DOMObject.as' namespace='dom.core.types' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A DOMObject represents an object reference. 

	 

	 <p><strong>Note:</strong> For Java and ECMAScript, DOMObject is bound to the Object type.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMObject W3C - DOM 3 Core: DOMObject

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</classRec>
<classRec name='DOMString' fullname='dom.core.types:DOMString' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\types\DOMString.as' namespace='dom.core.types' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A DOMString is a sequence of 16-bit units.

	 

	 The UTF-16 encoding was chosen because of its widespread industry practice. 

	 Note that for both HTML and XML, the document character set (and therefore 

	 the notation of numeric character references) is based on UCS [ISO/IEC 

	 10646]. A single numeric character reference in a source document may therefore 

	 in some cases correspond to two 16-bit units in a DOMString (a high surrogate 

	 and a low surrogate). For issues related to string comparisons, refer to String 

	 Comparisons in the DOM.

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMString W3C - DOM 3 Core: DOMString

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</classRec>
<classRec name='DOMTimeStamp' fullname='dom.core.types:DOMTimeStamp' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\types\DOMTimeStamp.as' namespace='dom.core.types' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A DOMTimeStamp represents a number of milliseconds. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMTimeStamp W3C - DOM 3 Core: DOMTimeStamp

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</classRec>
<classRec name='ExceptionCode' fullname='dom.core:ExceptionCode' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\ExceptionCode.as' namespace='dom.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An integer indicating the type of error generated.

	 

	 <p><strong>Note:</strong> Other numeric codes are reserved for W3C for possible future use.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-258A00AF W3C - DOM 3 Core: ExceptionCode

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</classRec>
<field name='DOMSTRING_SIZE_ERR' fullname='dom.core:ExceptionCode/DOMSTRING_SIZE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 If the specified range of text does not fit into a DOMString.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<field name='HIERARCHY_REQUEST_ERR' fullname='dom.core:ExceptionCode/HIERARCHY_REQUEST_ERR' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 If any Node is inserted somewhere it doesn't belong.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<field name='INDEX_SIZE_ERR' fullname='dom.core:ExceptionCode/INDEX_SIZE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 If index or size is negative, or greater than the allowed value.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<field name='INUSE_ATTRIBUTE_ERR' fullname='dom.core:ExceptionCode/INUSE_ATTRIBUTE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='10' >
<description><![CDATA[

		 If an attempt is made to add an attribute that is already in use elsewhere.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<field name='INVALID_ACCESS_ERR' fullname='dom.core:ExceptionCode/INVALID_ACCESS_ERR' type='Number' isStatic='true' isConst='true' defaultValue='15' >
<description><![CDATA[

		 If a parameter or an operation is not supported by the underlying object.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='INVALID_CHARACTER_ERR' fullname='dom.core:ExceptionCode/INVALID_CHARACTER_ERR' type='Number' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 If an invalid or illegal character is specified, such as in an XML name.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<field name='INVALID_MODIFICATION_ERR' fullname='dom.core:ExceptionCode/INVALID_MODIFICATION_ERR' type='Number' isStatic='true' isConst='true' defaultValue='13' >
<description><![CDATA[

		 If an attempt is made to modify the type of the underlying object.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='INVALID_STATE_ERR' fullname='dom.core:ExceptionCode/INVALID_STATE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='11' >
<description><![CDATA[

		 If an attempt is made to use an object that is not, or is no longer, usable.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='NAMESPACE_ERR' fullname='dom.core:ExceptionCode/NAMESPACE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='14' >
<description><![CDATA[

		 If an attempt is made to create or change an object in a way which is 

		 incorrect with regard to namespaces.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='NOT_FOUND_ERR' fullname='dom.core:ExceptionCode/NOT_FOUND_ERR' type='Number' isStatic='true' isConst='true' defaultValue='8' >
<description><![CDATA[

		 If an attempt is made to reference a Node in a context where it does not exist.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<field name='NOT_SUPPORTED_ERR' fullname='dom.core:ExceptionCode/NOT_SUPPORTED_ERR' type='Number' isStatic='true' isConst='true' defaultValue='9' >
<description><![CDATA[

		 If the implementation does not support the requested type of object or operation.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<field name='NO_DATA_ALLOWED_ERR' fullname='dom.core:ExceptionCode/NO_DATA_ALLOWED_ERR' type='Number' isStatic='true' isConst='true' defaultValue='6' >
<description><![CDATA[

		 If data is specified for a Node which does not support data.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<field name='NO_MODIFICATION_ALLOWED_ERR' fullname='dom.core:ExceptionCode/NO_MODIFICATION_ALLOWED_ERR' type='Number' isStatic='true' isConst='true' defaultValue='7' >
<description><![CDATA[

		 If an attempt is made to modify an object where modifications are not allowed.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<field name='SYNTAX_ERR' fullname='dom.core:ExceptionCode/SYNTAX_ERR' type='Number' isStatic='true' isConst='true' defaultValue='12' >
<description><![CDATA[

		 If an invalid or illegal string is specified.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='TYPE_MISMATCH_ERR' fullname='dom.core:ExceptionCode/TYPE_MISMATCH_ERR' type='Number' isStatic='true' isConst='true' defaultValue='17' >
<description><![CDATA[

		 If the type of an object is incompatible with the expected type of the 

		 parameter associated to the object.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<field name='VALIDATION_ERR' fullname='dom.core:ExceptionCode/VALIDATION_ERR' type='Number' isStatic='true' isConst='true' defaultValue='16' >
<description><![CDATA[

		 If a call to a method such as insertBefore or removeChild would make the 

		 Node invalid with respect to "partial validity", this exception would be 

		 raised and the operation would not be done. This code is used in [DOM 

		 Level 3 Validation]. Refer to this specification for further information.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<field name='WRONG_DOCUMENT_ERR' fullname='dom.core:ExceptionCode/WRONG_DOCUMENT_ERR' type='Number' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 If a Node is used in a different document than the one that created it (that doesn't support it).

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
</field>
<classRec name='TypeInfo' fullname='dom.core:TypeInfo' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\TypeInfo.as' namespace='dom.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The TypeInfo interface represents a type referenced from Element or Attr 

	 nodes, specified in the schemas associated with the document. The type 

	 is a pair of a namespace URI and name properties, and depends on the 

	 document's schema. 

	 

	 <p><strong>Note:</strong> This is not implemented in Mozilla.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/TypeInfo MDC - TypeInfo

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo W3C - TypeInfo

	 

	 ]]></see>
</classRec>
<method name='isDerivedFrom' fullname='dom.core:TypeInfo/isDerivedFrom' isStatic='false' isFinal='false' isOverride='false'  param_names='typeNamespaceArg;typeNameArg;derivationMethod' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Number' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 This method returns if there is a derivation between the reference 

		 type definition, i.e. the TypeInfo on which the method is being called, 

		 and the other type definition, i.e. the one passed as parameters. 

		 

		 ]]></description>
<param><![CDATA[typeNamespaceArg The namespace of the other type definition. 

		 ]]></param>
<param><![CDATA[typeNameArg The name of the other type definition. 

		 ]]></param>
<param><![CDATA[derivationMethod The type of derivation and conditions applied 

		 between two types, as described in the list of constants provided in this interface. 

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[If the document's schema is a DTD or no schema is associated 

		 with the document, this method will always return false.

		 

		 <p>

		 If the document's schema is an XML Schema, the method will true if the reference 

		 type definition is derived from the other type definition according to the 

		 derivation parameter. If the value of the parameter is 0 (no bit is set to 1 for 

		 the derivationMethod parameter), the method will return true if the other 

		 type definition can be reached by recursing any combination of {base type 

		 definition}, {item type definition}, or {member type definitions} from the 

		 reference type definition. </p>

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/TypeInfo.isDerivedFrom MDC - TypeInfo.isDerivedFrom()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-isDerivedFrom W3C - TypeInfo.isDerivedFrom()

		 

		 ]]></see>
</method>
<method name='typeName' fullname='dom.core:TypeInfo/typeName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The name of a type declared for the associated element or attribute, 

		 or null if unknown. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/TypeInfo.typeName MDC - TypeInfo.typeName

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-typeName W3C - TypeInfo.typeName

		 

		 ]]></see>
</method>
<method name='typeNamespace' fullname='dom.core:TypeInfo/typeNamespace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The namespace of the type declared for the associated element 

		 or attribute or null if the element does not have declaration or 

		 if no namespace information is available. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/TypeInfo.typeNamespace MDC - TypeInfo.typeNamespace

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-typeNamespace W3C - TypeInfo.typeNamespace

		 

		 ]]></see>
</method>
<field name='DERIVATION_EXTENSION' fullname='dom.core:TypeInfo/DERIVATION_EXTENSION' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 If the document's schema is an XML Schema, this constant represents the list.

		 

		 <p>

		 The reference type definition is derived by extension from the other 

		 type definition if the other type definition can be reached recursively

		 following the {base type definition} property from the reference type

		 definition, and at least one of the derivation methods involved is 

		 an extension.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<field name='DERIVATION_LIST' fullname='dom.core:TypeInfo/DERIVATION_LIST' type='Number' isStatic='true' isConst='true' defaultValue='8' >
<description><![CDATA[

		 If the document's schema is an XML Schema [XML Schema Part 1], this 

		 constant represents the union if simple types are involved.

		 

		 <p>

		 The reference type definition is derived by list from the other type 

		 definition if there exists two type definitions T1 and T2 such as 

		 the reference type definition is derived from T1 by DERIVATION_RESTRICTION 

		 or DERIVATION_EXTENSION, T2 is derived from the other type definition 

		 by DERIVATION_RESTRICTION, T1 has {variety} list, and T2 is the {item 

		 type definition}. Note that T1 could be the same as the reference type 

		 definition, and T2 could be the same as the other type definition. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<field name='DERIVATION_RESTRICTION' fullname='dom.core:TypeInfo/DERIVATION_RESTRICTION' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 If the document's schema is an XML Schema, this constant represents the derivation by extension.

		 

		 <p>

		 The reference type definition is derived by restriction from the other type 

		 definition if the other type definition is the same as the reference type definition, 

		 or if the other type definition can be reached recursively following the {base type 

		 definition} property from the reference type definition, and all the derivation 

		 methods involved are restriction. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<field name='DERIVATION_UNION' fullname='dom.core:TypeInfo/DERIVATION_UNION' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 If the document's schema is an XML Schema, this constant represents the derivation by 

		 restriction  if complex types are involved, or a restriction  if simple types are involved.

		 

		 <p>

		 The reference type definition is derived by union from the other 

		 type definition if there exists two type definitions T1 and T2 such 

		 as the reference type definition is derived from T1 by DERIVATION_RESTRICTION 

		 or DERIVATION_EXTENSION, T2 is derived from the other type definition 

		 by DERIVATION_RESTRICTION, T1 has {variety} union, and one of the {member 

		 type definitions} is T2. Note that T1 could be the same as the reference 

		 type definition, and T2 could be the same as the other type definition. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<interfaceRec name='DOMException' fullname='dom.core:DOMException' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMException.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 DOM operations only raise exceptions in "exceptional" circumstances. For example,

	 when an operation is impossible to perform (either for logical reasons, 

	 because data is lost, or because the implementation has become unstable). 

	 In general, DOM methods return specific error values in ordinary processing 

	 situations, such as out-of-bound errors when using NodeList.

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMException MDC - DOMException

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-17189187 W3C - DOMException

	 

	 ]]></see>
</interfaceRec>
<method name='code' fullname='dom.core:DOMException/dom.core:DOMException:code/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 An integer indicating the type of error generated.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[dom.core.ExceptionCode

		 

		 ]]></see>
</method>
<method name='code' fullname='dom.core:DOMException/dom.core:DOMException:code/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='NameList' fullname='dom.core:NameList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\NameList.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The NameList interface provides the abstraction of an ordered collection 

	 of parallel pairs of name and namespace values (which could be null 

	 values), without defining or constraining how this collection is 

	 implemented. The items in the NameList are accessible via an integral 

	 index, starting from 0.

	 

	 <p><strong>Note (Mozilla):</strong> Although there is an XPCOM interface for it, this does not seem to be implemented in Mozilla</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NameList MDC - NameList

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList W3C - NameList

	 

	 ]]></see>
</interfaceRec>
<method name='contains' fullname='dom.core:NameList/dom.core:NameList:contains' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Test if a name is part of this NameList. 

		 

		 ]]></description>
<param><![CDATA[str The name to look for. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[If the name has been found.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NameList.contains MDC - NameList.contains()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-contains W3C - NameList.contains()

		 

		 ]]></see>
</method>
<method name='containsNS' fullname='dom.core:NameList/dom.core:NameList:containsNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;name' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Test if the pair namespaceURI/name is part of this NameList. 

		 

		 ]]></description>
<param><![CDATA[namespaceURI The namespace URI to look for. 

		 ]]></param>
<param><![CDATA[name The name to look for. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[If the pair namespaceURI/name has been found.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NameList.containsNS MDC - NameList.containsNS()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-containsNS W3C - NameList.containsNS()

		 

		 ]]></see>
</method>
<method name='getName' fullname='dom.core:NameList/dom.core:NameList:getName' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the indexth name item in the collection. 

		 

		 ]]></description>
<param><![CDATA[index Index into the collection.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The name at the indexth position in the NameList, or null if 

		 there is no name for the specified index or if the index is out of range. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NameList.getName MDC - NameList.getName()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-getName W3C - NameList.getName()

		 

		 ]]></see>
</method>
<method name='getNamespaceURI' fullname='dom.core:NameList/dom.core:NameList:getNamespaceURI' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the indexth namespaceURI item in the collection. 

		 

		 ]]></description>
<param><![CDATA[index Index into the collection.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The namespace URI at the indexth position in the NameList, or null 

		 if there is no name for the specified index or if the index is out of range. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NameList.getNamespaceURI MDC - NameList.getNamespaceURI()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-getNamespaceURI W3C - NameList.getNamespaceURI()

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.core:NameList/dom.core:NameList:length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of pairs (name and namespaceURI) in the list. The range 

		 of valid child node indices is 0 to length-1  inclusive. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NameList.length MDC - NameList.length

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-length W3C - NameList.length

		 

		 ]]></see>
</method>
<interfaceRec name='DOMStringList' fullname='dom.core:DOMStringList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMStringList.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DOMStringList interface provides the abstraction of an ordered 

	 collection of DOMString values, without defining or constraining how 

	 this collection is implemented. The items in the DOMStringList are 

	 accessible via an integral index, starting from 0. 

	 

	 <p><strong>Note (Mozilla):</strong> This type is presently not available to Mozilla as DOMConfiguration is not implemented.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMStringList MDC - DOMStringList

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList DOMStringList

	 

	 ]]></see>
</interfaceRec>
<method name='contains' fullname='dom.core:DOMStringList/dom.core:DOMStringList:contains' isStatic='false' isFinal='false' isOverride='false'  param_names='str' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 The column number this locator is pointing to, or -1 if there is no 

		 column number available.

		 

		 ]]></description>
<param><![CDATA[str The string to look for. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[If the string has been found.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMStringList.contains MDC - DOMStringList.contains()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-contains W3C - DOMStringList.contains()

		 

		 ]]></see>
</method>
<method name='item' fullname='dom.core:DOMStringList/dom.core:DOMStringList:item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the index of the item in the collection. If index is greater than 

		 or equal to the number of DOMStrings in the list, this returns null. 

		 

		 ]]></description>
<param><![CDATA[index Index into the collection.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The DOMString at the index position in the DOMStringList, or null 

		 if that is not a valid index.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMStringList.item MDC - DOMStringList.item()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-item W3C - DOMStringList.item()

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.core:DOMStringList/dom.core:DOMStringList:length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of DOMStrings in the list. The range of valid child 

		 node indices is 0 to length-1  inclusive.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMStringList.length MDC - DOMStringList.length

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-length W3C - DOMStringList.length

		 

		 ]]></see>
</method>
<interfaceRec name='DOMConfiguration' fullname='dom.core:DOMConfiguration' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMConfiguration.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Used by Document.normalizeDocument(), and DOM Level 3 DOMParser() and DOMSerializer.

	 

	 <p>Using the configuration, it is possible to change Document.normalizeDocument() 

	 behavior, such as replacing the CDATASection nodes with Text nodes 

	 or specifying the type of the schema that must be used when the 

	 validation of the Document is requested. DOMConfiguration objects are 

	 also used in [DOM Level 3 Load and Save] in the DOMParser and 

	 DOMSerializer interfaces.</p>

	 

	 <p><strong>Note (Mozilla):</strong> This is not implemented in Mozilla.</p>

	 

	 <p>The following list of parameters defined in the DOM: 

	 <table class="innertable">

	 	<tr><th>Parameter</th><th width='100'>Value</th><th>Description</th></tr>

	 	<tr>

	 		<td>"canonical-form"</td><td><code>true</code> [optional]</td><td>Canonicalize the document according to the rules 

	 specified in [Canonical XML], such as removing the DocumentType node (if any) from the tree, or removing 

	 superfluous namespace declarations from each element. Note that this is limited to what can be represented 

	 in the DOM; in particular, there is no way to specify the order of the attributes in the DOM. In addition, 

	 Setting this parameter to true will also set the state of the parameters listed below. Later changes to the 

	 state of one of those parameters will revert "canonical-form" back to false. Parameters set to false: 

	 "entities", "normalize-characters", "cdata-sections". Parameters set to true: "namespaces", 

	 "namespace-declarations", "well-formed", "element-content-whitespace". Other parameters are not changed unless 

	 explicitly specified in the description of the parameters.</td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required] (default)</td><td>Do not canonicalize the document.</td>

	 	</tr>

	 	<tr>

	 		<td>"cdata-sections"</td><td><code>true</code> [required] (default)</td><td>Keep CDATASection nodes in the document.</td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required]</td><td>Transform CDATASection nodes in the document into Text nodes. The new Text  node is then combined with any adjacent Text  node.</td>

	 	</tr>

	 	<tr>

	 		<td>"check-character-normalization"</td><td><code>true</code> [optional]</td><td>Check if the characters in the document are fully normalized, as defined in appendix B of XML 1.1. When a sequence of characters is encountered that fails normalization checking, an error with the DOMError.type equals to "check-character-normalization-failure" is issued. </td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required] (default)</td><td>Do not check if characters are normalized.</td>

	 	</tr>

	 	<tr>

	 		<td>"comments"</td><td><code>true</code> [required] (default)</td><td>Keep Comment nodes in the document.</td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required]</td><td>Discard Comment nodes in the document.</td>

	 	</tr>

	 	<tr>

	 		<td>"datatype-normalization"</td><td><code>true</code> [optional]</td><td>Expose schema normalized values in the tree, such as XML Schema normalized values in the case of XML Schema. Since this parameter requires to have schema information, the "validate" parameter will also be set to true. Having this parameter activated when "validate" is false has no effect and no schema-normalization will happen. </td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required] (default)</td><td>Do not perform schema normalization on the tree. </td>

	 	</tr>

	 	<tr>

	 		<td>"element-content-whitespace"</td><td><code>true</code> [required] (default)</td><td>Keep all whitespaces in the document.</td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [optional]</td><td>Discard all Text nodes that contain whitespaces in element content, as described in [element content whitespace]. The implementation is expected to use the attribute Text.isElementContentWhitespace to determine if a Text node should be discarded or not.</td>

	 	</tr>

	 	<tr>

	 		<td>"entities"</td><td><code>true</code> [required] (default)</td><td>Keep EntityReference nodes in the document.</td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required]</td><td>Remove all EntityReference nodes from the document, putting the entity expansions directly in their place. Text nodes are normalized, as defined in Node.normalize. Only unexpanded entity references are kept in the document.<p><strong>Note:</strong> This parameter does not affect Entity nodes.</p></td>

	 	</tr>

	 	<tr>

	 		<td>"error-handler"</td><td>[required]</td><td>Contains a DOMErrorHandler object. If an error is encountered in the document, the implementation will call back the DOMErrorHandler registered using this parameter. The implementation may provide a default DOMErrorHandler object. When called, DOMError.relatedData will contain the closest node to where the error occurred. If the implementation is unable to determine the node where the error occurs, DOMError.relatedData will contain the Document node. Mutations to the document from within an error handler will result in implementation dependent behavior. </td>

	 	</tr>

	 	<tr>

	 		<td>"infoset"</td><td><code>true</code> [required]</td><td>Keep in the document the information defined in the XML Information Set. This forces the following parameters to false: "validate-if-schema", "entities", "datatype-normalization", "cdata-sections". This forces the following parameters to true: "namespace-declarations", "well-formed", "element-content-whitespace", "comments", "namespaces". Other parameters are not changed unless explicitly specified in the description of the parameters. Note that querying this parameter with getParameter returns true only if the individual parameters specified above are appropriately set.</td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code></td><td>Setting infoset to false  has no effect.</td>

	 	</tr>

	 	<tr>

	 		<td>"namespaces"</td><td><code>true</code> [required] (default)</td><td>Perform the namespace processing as defined in Namespace Normalization. </td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [optional]</td><td>Do not perform the namespace processing. </td>

	 	</tr>

	 	<tr>

	 		<td>"namespace-declarations"</td><td></td><td>This parameter has no effect if the parameter "namespaces" is set to false. </td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>true</code> [required] (default)</td><td>Include namespace declaration attributes, specified or defaulted from the schema, in the document.</td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required]</td><td>Discard all namespace declaration attributes. The namespace prefixes (Node.prefix) are retained even if this parameter is set to false.</td>

	 	</tr>

	 	<tr>

	 		<td>"normalize-characters"</td><td><code>true</code> [optional]</td><td>Fully normalized the characters in the document as defined in appendix B of [XML 1.1].</td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required] (default)</td><td>Do not perform character normalization.</td>

	 	</tr>

	 	<tr>

	 		<td>"schema-location"</td><td>[optional]</td><td>Represent a DOMString object containing a list of URIs, separated by whitespaces (characters matching the nonterminal production S defined in section 2.3 [XML 1.0]), that represents the schemas against which validation should occur, i.e. the current schema. The types of schemas referenced in this list must match the type specified with schema-type, otherwise the behavior of an implementation is undefined. The schemas specified using this property take precedence to the schema information specified in the document itself. For namespace aware schema, if a schema specified using this property and a schema specified in the document instance (i.e. using the schemaLocation attribute) in a schema document (i.e. using schema import mechanisms) share the same targetNamespace, the schema specified by the user using this property will be used. If two schemas specified using this property share the same targetNamespace or have no namespace, the behavior is implementation dependent. If no location has been provided, this parameter is null.<p><strong>Note:</strong> The "schema-location" parameter is ignored unless the "schema-type" parameter value is set. It is strongly recommended that Document.documentURI will be set so that an implementation can successfully resolve any external entities referenced.</p></td>

	 	</tr>

	 	<tr>

	 		<td>"schema-type"</td><td>[optional]</td><td>Represent a DOMString object containing an absolute URI and representing the type of the schema language used to validate a document against. Note that no lexical checking is done on the absolute URI. If this parameter is not set, a default value may be provided by the implementation, based on the schema languages supported and on the schema language used at load time. If no value is provided, this parameter is null.<p><strong>Note:</strong> For XML Schema, applications must use the value "http://www.w3.org/2001/XMLSchema". For XML DTD, applications must use the value "http://www.w3.org/TR/REC-xml". Other schema languages are outside the scope of the W3C and therefore should recommend an absolute URI in order to use this method.</p></td>

	 	</tr>

	 	<tr>

	 		<td>"split-cdata-sections"</td><td><code>true</code> [required] (default)</td><td>Split CDATA sections containing the CDATA section termination marker ']]&gt;'. When a CDATA section is split a warning is issued with a DOMError.type equals to "cdata-sections-splitted" and DOMError.relatedData equals to the first CDATASection node in document order resulting from the split.</td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required]</td><td>Signal an error if a CDATASection contains an unrepresentable character.</td>

	 	</tr>

	 	<tr>

	 		<td>"validate"</td><td><code>true</code> [optional]</td><td>Require the validation against a schema (i.e. XML schema, DTD, any other type or representation of schema) of the document as it is being normalized as defined by [XML 1.0]. If validation errors are found, or no schema was found, the error handler is notified. Schema-normalized values will not be exposed according to the schema in used unless the parameter "datatype-normalization" is true. This parameter will reevaluate:<ul><li>Attribute nodes with Attr.specified equals to false, as specified in the description of the Attr interface;</li><li>The value of the attribute Text.isElementContentWhitespace for all Text nodes;</li><li>The value of the attribute Attr.isId for all Attr nodes;</li><li>The attributes Element.schemaTypeInfo and Attr.schemaTypeInfo.</li></ul><p><strong>Note:</strong> "validate-if-schema" and "validate" are mutually exclusive, setting one of them to true will set the other one to false. Applications should also consider setting the parameter "well-formed" to true, which is the default for that option, when validating the document.</p></td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required] (default)</td><td>Do not accomplish schema processing, including the internal subset processing. Default attribute values information are kept. Note that validation might still happen if "validate-if-schema" is true. </td>

	 	</tr>

	 	<tr>

	 		<td>"validate-if-schema"</td><td><code>true</code> [optional]</td><td>Enable validation only if a declaration for the document element can be found in a schema (independently of where it is found, i.e. XML schema, DTD, or any other type or representation of schema). If validation is enabled, this parameter has the same behavior as the parameter "validate" set to true.<p><strong>Note:</strong> "validate-if-schema" and "validate" are mutually exclusive, setting one of them to true will set the other one to false.</p></td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [required] (default)</td><td>No schema processing should be performed if the document has a schema, including internal subset processing. Default attribute values information are kept. Note that validation must still happen if "validate" is true. </td>

	 	</tr>

	 	<tr>

	 		<td>"well-formed"</td><td><code>true</code> [required] (default)</td><td>Check if all nodes are XML well formed according to the XML version in use in Document.xmlVersion: <ul><li>check if the attribute Node.nodeName contains invalid characters according to its node type and generate a DOMError of type "wf-invalid-character-in-node-name", with a DOMError.SEVERITY_ERROR severity, if necessary;</li><li>check if the text content inside Attr, Element, Comment, Text, CDATASection nodes for invalid characters and generate a DOMError of type "wf-invalid-character", with a DOMError.SEVERITY_ERROR severity, if necessary;</li><li>check if the data inside ProcessingInstruction nodes for invalid characters and generate a DOMError of type "wf-invalid-character", with a DOMError.SEVERITY_ERROR severity, if necessary;</li></ul></td>

	 	</tr>

	 	<tr>

	 		<td></td><td><code>false</code> [optional]</td><td>Do not check for XML well-formedness. </td>

	 	</tr>

	 </table>

	 </p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMConfiguration MDC - DOMConfiguration

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration W3C - DOMConfiguration

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/ W3C - DOM 3 Load and Save Specification

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/2004/REC-xml-infoset-20040204#infoitem.character W3C - [element content whitespace]

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/xml11/ W3C - [XML 1.1]

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/REC-xml/ W3C - [XML 1.0]

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/xml-c14n W3C - [Canonical XML]

	 

	 ]]></see>
</interfaceRec>
<method name='canSetParameter' fullname='dom.core:DOMConfiguration/dom.core:DOMConfiguration:canSetParameter' isStatic='false' isFinal='false' isOverride='false'  param_names='name;value' param_types='dom.core.types:DOMString;dom.core.types:DOMUserData' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Check if setting a parameter to a specific value is supported.

		 

		 ]]></description>
<param><![CDATA[name The name of the parameter to check.

		 ]]></param>
<param><![CDATA[value An object. if null, the returned value is true. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[If the parameter could be successfully set to the specified value

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMConfiguration.canSetParameter MDC - DOMConfiguration.canSetParameter()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration-canSetParameter W3C - DOMConfiguration.canSetParameter()

		 

		 ]]></see>
</method>
<method name='getParameter' fullname='dom.core:DOMConfiguration/dom.core:DOMConfiguration:getParameter' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMUserData'>
<description><![CDATA[

		 Return the value of a parameter if known. 

		 

		 ]]></description>
<param><![CDATA[name The name of the parameter. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The current object associated with the specified parameter or n

		 ull if no object has been associated or if the parameter is not supported. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMConfiguration.getParameter MDC - DOMConfiguration.getParameter()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration-getParameter W3C - DOMConfiguration.getParameter()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised when the parameter 

		 name is not recognized. 

		 

		 ]]></throws>
</method>
<method name='setParameter' fullname='dom.core:DOMConfiguration/dom.core:DOMConfiguration:setParameter' isStatic='false' isFinal='false' isOverride='false'  param_names='name;value' param_types='dom.core.types:DOMString;dom.core.types:DOMUserData' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Set the value of a parameter.

		 

		 ]]></description>
<param><![CDATA[name The name of the parameter to set.

		 ]]></param>
<param><![CDATA[value The new value or null if the user wishes to unset the 

		 parameter. While the type of the value parameter is defined as 

		 DOMUserData, the object type must match the type defined by the definition 

		 of the parameter. For example, if the parameter is "error-handler", the 

		 value must be of type DOMErrorHandler. 

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMConfiguration.setParameter MDC - DOMConfiguration.setParameter()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration-property W3C - DOMConfiguration.setParameter()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised when the parameter 

		 name is not recognized. 

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised when the 

		 parameter name is recognized but the requested value cannot be set. 

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException TYPE_MISMATCH_ERR: Raised if the value 

		 type for this parameter name is incompatible with the expected 

		 value type. 

		 

		 ]]></throws>
</method>
<method name='parameterNames' fullname='dom.core:DOMConfiguration/dom.core:DOMConfiguration:parameterNames/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMStringList'>
<description><![CDATA[

		 The list of the parameters supported by this DOMConfiguration object 

		 and for which at least one value can be set by the application. Note 

		 that this list can also contain parameter names defined outside 

		 this specification. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMConfiguration.parameterNames MDC - DOMConfiguration.parameterNames

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration-parameterNames W3C - DOMConfiguration.parameterNames

		 

		 ]]></see>
</method>
<classRec name='DOMError' fullname='dom.core:DOMError' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMError.as' namespace='dom.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 DOMError is an interface that describes an error.

	 

	 <p><strong>Note (Mozilla):</strong> This is not implemented in Mozilla.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMError MDC - DOMError

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-Interfaces-DOMError W3C - DOMError

	 

	 ]]></see>
</classRec>
<method name='location' fullname='dom.core:DOMError/location/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMLocator'>
<description><![CDATA[

		 The location of the error.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMError.location MDC - DOMError.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-location W3C - DOMError.location

		 

		 ]]></see>
</method>
<method name='message' fullname='dom.core:DOMError/message/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 An implementation specific string describing the error that occurred.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMError.message MDC - DOMError.message

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-message W3C - DOMError.message

		 

		 ]]></see>
</method>
<method name='relatedData' fullname='dom.core:DOMError/relatedData/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMObject'>
<description><![CDATA[

		 The related DOMError.type dependent data if any. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMError.relatedData MDC - DOMError.relatedData

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-relatedData W3C - DOMError.relatedData

		 

		 ]]></see>
</method>
<method name='relatedException' fullname='dom.core:DOMError/relatedException/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMObject'>
<description><![CDATA[

		 The related platform dependent exception if any.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMError.relatedException MDC - DOMError.relatedException

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-relatedException W3C - DOMError.relatedException

		 

		 ]]></see>
</method>
<method name='severity' fullname='dom.core:DOMError/severity/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The severity of the error, either SEVERITY_WARNING, SEVERITY_ERROR, 

		 or SEVERITY_FATAL_ERROR.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMError.severity MDC - DOMError.severity

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity W3C - DOMError.severity

		 ]]></see>
<see><![CDATA[#SEVERITY_WARNING

		 ]]></see>
<see><![CDATA[#SEVERITY_ERROR

		 ]]></see>
<see><![CDATA[#SEVERITY_FATAL_ERROR

		 

		 ]]></see>
</method>
<method name='type' fullname='dom.core:DOMError/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A DOMString indicating which related data is expected in relatedData. 

		 Users should refer to the specification of the error in order to find 

		 its DOMString type and relatedData  definitions if any.

		 

		 <p><strong>Note:</strong> As an example, Document.normalizeDocument() does generate warnings 

		 when the "split-cdata-sections" parameter is in use. Therefore, the method 

		 generates a SEVERITY_WARNING with type "cdata-sections-splitted" and the 

		 first CDATASection node in document order resulting from the split is 

		 returned by the relatedData attribute.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMError.type MDC - DOMError.type

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-type W3C - DOMError.type

		 

		 ]]></see>
</method>
<field name='SEVERITY_ERROR' fullname='dom.core:DOMError/SEVERITY_ERROR' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The severity of the error described by the DOMError is error.

		 

		 <p>A SEVERITY_ERROR  may not cause the processing to stop if the error 

		 can be recovered, unless DOMErrorHandler.handleError()  returns false.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-error W3C - DOMError.SEVERITY_ERROR

		 

		 ]]></see>
</field>
<field name='SEVERITY_FATAL_ERROR' fullname='dom.core:DOMError/SEVERITY_FATAL_ERROR' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The severity of the error described by the DOMError is fatal error.

		 

		 <p>A SEVERITY_FATAL_ERROR will cause the normal processing to stop. 

		 The return value of DOMErrorHandler.handleError() is ignored unless 

		 the implementation chooses to continue, in which case the behavior 

		 becomes undefined.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-fatal-error W3C - DOMError.SEVERITY_FATAL_ERROR

		 

		 ]]></see>
</field>
<field name='SEVERITY_WARNING' fullname='dom.core:DOMError/SEVERITY_WARNING' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The severity of the error described by the DOMError is warning.

		 

		 <p>A SEVERITY_WARNING will not cause the processing to stop, unless 

		 DOMErrorHandler.handleError() returns false.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-warning W3C - DOMError.SEVERITY_WARNING

		 

		 ]]></see>
</field>
<interfaceRec name='DOMErrorHandler' fullname='dom.core:DOMErrorHandler' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMErrorHandler.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 DOMErrorHandler is a callback interface that the DOM implementation can

	 call when reporting errors that happens while processing XML data, or 

	 when doing some other processing (e.g. validating a document). A 

	 DOMErrorHandler  object can be attached to a Document using the 

	 "error-handler" on the DOMConfiguration interface. If more than one error 

	 needs to be reported during an operation, the sequence and numbers of 

	 the errors passed to the error handler are implementation dependent. 

	 

	 <p><strong>Note:</strong> This is not implemented in Mozilla.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMErrorHandler MDC - DOMErrorHandler

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-Interfaces-DOMErrorHandler W3C - DOMErrorHandler

	 

	 ]]></see>
</interfaceRec>
<method name='handleError' fullname='dom.core:DOMErrorHandler/dom.core:DOMErrorHandler:handleError' isStatic='false' isFinal='false' isOverride='false'  param_names='error' param_types='dom.core:DOMError' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 This method is called on the error handler when an error occurs.

		 If an exception is thrown from this method, it is considered to be 

		 equivalent of returning true. 

		 

		 ]]></description>
<param><![CDATA[error The error object that describes the error. This object may be reused 

		 by the DOM implementation across multiple calls to the handleError method. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[If the handleError method returns false, the DOM implementation should stop

		 the current processing when possible. If the method returns true, the 

		 processing may continue depending on DOMError.severity. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMErrorHandler.handleError MDC - DOMErrorHandler.handleError()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ERRORS-DOMErrorHandler-handleError W3C - DOMErrorHandler.handleError()

		 

		 ]]></see>
</method>
<interfaceRec name='DOMLocator' fullname='dom.core:DOMLocator' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMLocator.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Indicates a location such as where an error occurred. Returned by DOMError.location.

	 

	 <p><strong>Note (Mozilla):</strong> This is not implemented in Mozilla</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMLocator MDC - DOMLocator

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Interfaces-DOMLocator W3C - DOMLocator

	 ]]></see>
<see><![CDATA[dom.core.DOMError#location

	 

	 ]]></see>
</interfaceRec>
<method name='byteOffset' fullname='dom.core:DOMLocator/dom.core:DOMLocator:byteOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The byte offset into the input source this locator is pointing to or -1 

		 if there is no byte offset available.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMLocator.byteOffset MDC - DOMLocator.byteOffset

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-byteOffset W3C - DOMLocator.byteOffset

		 

		 ]]></see>
</method>
<method name='columnNumber' fullname='dom.core:DOMLocator/dom.core:DOMLocator:columnNumber/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The column number this locator is pointing to, or -1 if there is no 

		 column number available.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMLocator.columnNumber MDC - DOMLocator.columnNumber

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-column-number W3C - DOMLocator.columnNumber

		 

		 ]]></see>
</method>
<method name='lineNumber' fullname='dom.core:DOMLocator/dom.core:DOMLocator:lineNumber/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The line number this locator is pointing to, or -1 if there is no 

		 column number available.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMLocator.lineNumber MDC - DOMLocator.lineNumber

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-line-number W3C - DOMLocator.lineNumber

		 

		 ]]></see>
</method>
<method name='relatedNode' fullname='dom.core:DOMLocator/dom.core:DOMLocator:relatedNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 The node this locator is pointing to, or null if no node is available.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMLocator.relatedNode MDC - DOMLocator.relatedNode

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-node W3C - DOMLocator.relatedNode

		 

		 ]]></see>
</method>
<method name='uri' fullname='dom.core:DOMLocator/dom.core:DOMLocator:uri/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The URI this locator is pointing to, or null if no URI is available.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMLocator.uri MDC - DOMLocator.uri

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-uri W3C - DOMLocator.uri

		 

		 ]]></see>
</method>
<method name='utf16Offset' fullname='dom.core:DOMLocator/dom.core:DOMLocator:utf16Offset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646], 

		 offset into the input source this locator is pointing to or -1 if there 

		 is no UTF-16 offset available.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMLocator.utf16Offset MDC - DOMLocator.utf16Offset

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-utf16Offset W3C - DOMLocator.utf16Offset

		 

		 ]]></see>
</method>
<interfaceRec name='DOMImplementationRegistry' fullname='dom.core:DOMImplementationRegistry' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMImplementationRegistry.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This is a global variable used to get a single DOMImplementation or DOMImplementationList 

	 depending on the registered objects with the specified features.

	 

	 <p><strong>Note (Mozilla):</strong> This is not implemented in Mozilla</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementationRegistry MDC - DOMImplementationRegistry

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Bootstrap W3C - Bootstrapping

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/ecma-script-binding.html#Level-3-ECMAScript-Binding-Extension-h2 W3C - ECMAScript Binding Extension

	 

	 ]]></see>
</interfaceRec>
<method name='getDOMImplementation' fullname='dom.core:DOMImplementationRegistry/dom.core:DOMImplementationRegistry:getDOMImplementation' isStatic='false' isFinal='false' isOverride='false'  param_names='feature' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:DOMImplementation'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[dom.core.DOMImplementationSource#getDOMImplementation()

		 

		 ]]></copy>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementationRegistry.getDOMImplementation MDC - DOMImplementationRegistry.getDOMImplementation()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Bootstrap W3C - Bootstrapping

		 

		 ]]></see>
</method>
<method name='getDOMImplementationList' fullname='dom.core:DOMImplementationRegistry/dom.core:DOMImplementationRegistry:getDOMImplementationList' isStatic='false' isFinal='false' isOverride='false'  param_names='feature' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:DOMImplementationList'>
<description><![CDATA[

		 ]]></description>
<copy><![CDATA[dom.core.DOMImplementationSource#getDOMImplementationList()

		 

		 ]]></copy>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementationRegistry.getDOMImplementationList MDC - DOMImplementationRegistry.getDOMImplementationList()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Bootstrap W3C - Bootstrapping

		 

		 ]]></see>
</method>
<interfaceRec name='DOMImplementationList' fullname='dom.core:DOMImplementationList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMImplementationList.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Returned by DOMImplementationSource.getDOMImplementationList() and 

	 DOMImplementationRegistry.getDOMImplementationList(). Can be iterated with 0-based index.

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementationList MDC - DOMImplementationList

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList W3C - DOMImplementationList

	 ]]></see>
<see><![CDATA[dom.core.DOMImplementationSource#getDOMImplementationList()

	 

	 ]]></see>
</interfaceRec>
<method name='item' fullname='dom.core:DOMImplementationList/dom.core:DOMImplementationList:item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core:DOMImplementation'>
<description><![CDATA[

		 Returns the indexth item in the collection.

		 

		 <p>If index is greater than 

		 or equal to the number of DOMImplementations in the list, this 

		 returns null. </p>

		 

		 ]]></description>
<param><![CDATA[index Index into the collection.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The DOMImplementation at the indexth position in the 

		 DOMImplementationList, or null if that is not a valid index. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementationList.item MDC - DOMImplementationList.item()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList-item W3C - DOMImplementationList.item()

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.core:DOMImplementationList/dom.core:DOMImplementationList:length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of DOMImplementations in the list. 

		 

		 <p>The range of valid child node indices is 0 to length-1  inclusive.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementationList.length MDC - DOMImplementationList.length

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList-length W3C - DOMImplementationList.length

		 

		 ]]></see>
</method>
<interfaceRec name='DOMImplementationSource' fullname='dom.core:DOMImplementationSource' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMImplementationSource.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface permits a DOM implementer to supply one or more 

	 implementations, based upon requested features and versions, as specified 

	 in DOM Features. Each implemented DOMImplementationSource object is listed 

	 in the binding-specific list of available sources so that its 

	 DOMImplementation objects are made available.

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementationSource MDC - DOMImplementationSource

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationSource W3C - DOMImplementationSource

	 

	 ]]></see>
</interfaceRec>
<method name='getDOMImplementation' fullname='dom.core:DOMImplementationSource/dom.core:DOMImplementationSource:getDOMImplementation' isStatic='false' isFinal='false' isOverride='false'  param_names='features' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:DOMImplementation'>
<description><![CDATA[

		 A method to request the first DOM implementation that supports the 

		 specified features. 

		 

		 ]]></description>
<param><![CDATA[features A string that specifies which features and versions are 

		 required. This is a space separated list in which each feature is specified 

		 by its name optionally followed by a space and a version number.

		 This method returns the first item of the list returned by getDOMImplementationList.

		 As an example, the string "XML 3.0 Traversal +Events 2.0" will request a DOM 

		 implementation that supports the module "XML" for its 3.0 version, a module 

		 that support of the "Traversal" module for any version, and the module 

		 "Events" for its 2.0 version. The module "Events" must be accessible using the 

		 method Node.getFeature() and DOMImplementation.getFeature(). 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The first DOM implementation that support the desired features, or 

		 null if this source has none.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementationSource.getDOMImplementation MDC - DOMImplementationSource.getDOMImplementation()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getDOMImpl W3C - DOMImplementationSource.getDOMImplementation()

		 

		 ]]></see>
</method>
<method name='getDOMImplementationList' fullname='dom.core:DOMImplementationSource/dom.core:DOMImplementationSource:getDOMImplementationList' isStatic='false' isFinal='false' isOverride='false'  param_names='features' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:DOMImplementationList'>
<description><![CDATA[

		 A method to request a list of DOM implementations that support the 

		 specified features and versions, as specified in DOM Features.

		 

		 ]]></description>
<param><![CDATA[features A string that specifies which features and versions are required. 

		 This is a space separated list in which each feature is specified by its name 

		 optionally followed by a space and a version number. This is something like: 

		 "XML 3.0 Traversal +Events 2.0"

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[A list of DOM implementations that support the desired features.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementationSource.getDOMImplementationList MDC - DOMImplementationSource.getDOMImplementationList()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getDOMImpls W3C - DOMImplementationSource.getDOMImplementationList()

		 

		 ]]></see>
</method>
<interfaceRec name='NodeList' fullname='dom.core:NodeList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\NodeList.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The NodeList interface provides the abstraction of an ordered collection

	 of nodes, without defining or constraining how this collection is 

	 implemented. NodeList objects in the DOM are live.

	 

	 <p>The items in the NodeList are accessible via an integral index, 

	 starting from 0. </p>

	 

	 <p><strong>Note:</strong> NodeList objects in the DOM are live.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757073%28VS.85%29.aspx MSDN - IXMLDOMNodeList

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeList MDC - NodeList

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-536297177 W3C - NodeList

	 

	 ]]></see>
</interfaceRec>
<method name='item' fullname='dom.core:NodeList/dom.core:NodeList:item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the index item in the collection. If index is greater than

		 or equal to the number of nodes in the list, this returns null.

		 

		 ]]></description>
<param><![CDATA[index Index into the collection.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[The node at the indexth position in the NodeList, or null 

		 if that is not a valid index.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757028%28VS.85%29.aspx MSDN - item Method (IXMLDOMNodeList)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeList.item MDC - NodeList.item()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-844377136 W3C - NodeList.item()

		 

		 ]]></see>
</method>
<method name='nextNode' fullname='dom.core:NodeList/dom.core:NodeList:nextNode' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the next node in the collection.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[An IXMLDOMNode refers to the next node in the collection. Returns Null if there is no next node.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757831%28VS.85%29.aspx MSDN - nextNode Method (IXMLDOMNodeList)

		 

		 ]]></see>
</method>
<method name='reset' fullname='dom.core:NodeList/dom.core:NodeList:reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Resets the iterator.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms766592%28VS.85%29.aspx MSDN - reset Method (IXMLDOMNodeList)

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.core:NodeList/dom.core:NodeList:length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of nodes in the list. The range of valid child node 

		 indices is 0 to length-1 inclusive.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757044%28VS.85%29.aspx MSDN - length Property (IXMLDOMNodeList)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeList.length MDC - NodeList.length

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-203510337 W3C - NodeList.length

		 

		 ]]></see>
</method>
<classRec name='UserDataHandler' fullname='dom.core:UserDataHandler' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\UserDataHandler.as' namespace='dom.core' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 When associating user data with a key on a node, Node.setUserData()

	 can also accept, in its third argument, a handler which will be 

	 called when the object is cloned, imported, deleted, renamed, or 

	 adopted. Per the specification, exceptions should not be thrown in 

	 a UserDataHandler. In both document.importNode() and Node.cloneNode(), 

	 although user data is not copied over, the handler will be called. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 3

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/UserDataHandler MDC - UserDataHandler

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#UserDataHandler W3C - UserDataHandler

	 

	 ]]></see>
</classRec>
<method name='handle' fullname='dom.core:UserDataHandler/handle' isStatic='false' isFinal='false' isOverride='false'  param_names='operation;key;data;src;dst' param_types='Number;dom.core.types:DOMString;Object;dom.core:Node;dom.core:Node' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 This method is called whenever the node for which this handler is 

		 registered is imported or cloned.

		 

		 ]]></description>
<param><![CDATA[operation Specifies the type of operation that is being performed on the node.

		 ]]></param>
<param><![CDATA[key Specifies the key for which this handler is being called. 

		 ]]></param>
<param><![CDATA[data Specifies the data for which this handler is being called. 

		 ]]></param>
<param><![CDATA[src Specifies the node being cloned, adopted, imported, or renamed. This is null when the node is being deleted.

		 ]]></param>
<param><![CDATA[dst Specifies the node newly created if any, or null.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/UserDataHandler.handle MDC - UserDataHandler.handle()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-handleUserDataEvent W3C - UserDataHandler.handle()

		 

		 ]]></see>
</method>
<field name='NODE_ADOPTED' fullname='dom.core:UserDataHandler/NODE_ADOPTED' type='Number' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 The node is adopted, using Document.adoptNode().

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<field name='NODE_CLONED' fullname='dom.core:UserDataHandler/NODE_CLONED' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The node is cloned, using Node.cloneNode().

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<field name='NODE_DELETED' fullname='dom.core:UserDataHandler/NODE_DELETED' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The node is deleted.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<field name='NODE_IMPORTED' fullname='dom.core:UserDataHandler/NODE_IMPORTED' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The node is imported, using Document.importNode().

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<field name='NODE_RENAMED' fullname='dom.core:UserDataHandler/NODE_RENAMED' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 The node is renamed, using Document.renameNode().

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
</field>
<interfaceRec name='NamedNodeMap' fullname='dom.core:NamedNodeMap' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\NamedNodeMap.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Objects implementing the NamedNodeMap interface are used to represent 

	 collections of nodes that can be accessed by name. Note that NamedNodeMap 

	 does not inherit from NodeList; NamedNodeMaps are not maintained in 

	 any particular order. Objects contained in an object implementing 

	 NamedNodeMap may also be accessed by an ordinal index, but this is simply 

	 to allow convenient enumeration of the contents of a NamedNodeMap, and 

	 does not imply that the DOM specifies an order to these Nodes. 

	 

	 <p><strong>Note:</strong> NamedNodeMap objects in the DOM are live.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms763824%28VS.85%29.aspx MSDN - IXMLDOMNamedNodeMap

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NamedNodeMap MDC - NamedNodeMap

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1780488922 W3C - NamedNodeMap

	 

	 ]]></see>
<modified><![CDATA[DOMCore 2

	 ]]></modified>
</interfaceRec>
<method name='getNamedItem' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:getNamedItem' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Gets a node by name.

		 

		 ]]></description>
<param><![CDATA[name The nodeName of a node to retrieve.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[A Node (of any type) with the specified nodeName, or null 

		 if it does not identify any node in this map.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms767592%28VS.85%29.aspx MSDN - getNamedItem Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NamedNodeMap MDC - NamedNodeMap

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1074577549 W3C - NamedNodeMap.getNamedItem()

		 

		 ]]></see>
</method>
<method name='getNamedItemNS' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:getNamedItemNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpaceURI;localName' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Gets a node by namespace and localName.

		 

		 ]]></description>
<param><![CDATA[nameSpaceURI The namespace URI of the node to retrieve.

		 ]]></param>
<param><![CDATA[localName The local name of the node to retrieve.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A Node (of any type) with the specified local name and namespace 

		 URI, or null if they do not identify any node in this map.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NamedNodeMap MDC - NamedNodeMap

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getNamedItemNS W3C - NamedNodeMap.getNamedItemNS()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the 

		 implementation does not support the feature "XML" and the language 

		 exposed through the Document does not support XML Namespaces. 

		 

		 ]]></throws>
</method>
<method name='getQualifiedItem' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:getQualifiedItem' isStatic='false' isFinal='false' isOverride='false'  param_names='baseName;nameSpaceURI' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the attribute with the specified namespace and attribute name.

		 

		 ]]></description>
<param><![CDATA[baseName The string specifying the base name of the attribute, without namespace qualification.

		 ]]></param>
<param><![CDATA[nameSpaceURI The string specifying the namespace prefix that qualifies the attribute name.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[An object. Returns the attribute node specified by the baseName and namespaceURI parameters. 

		 Returns Null if the attribute is not in the collection or if the item is not an attribute.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757075%28VS.85%29.aspx MSDN - getQualifiedItem Method

		 

		 ]]></see>
</method>
<method name='item' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the item at the given index (or null if the index is higher or equal to the number of nodes).

		 

		 ]]></description>
<param><![CDATA[index Index into this map.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[The node at the index position in the map, or null if that 

		 is not a valid index.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms759220%28VS.85%29.aspx MSDN - item Method (IXMLDOMNamedNodeMap)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NamedNodeMap MDC - NamedNodeMap

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-349467F9 W3C - NamedNodeMap.item()

		 

		 ]]></see>
</method>
<method name='nextNode' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:nextNode' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the next node in the collection.

		 

		 <p><strong>Note:</strong> The iterator initially points before the first node in the list so that the first call 

		 to the nextNode method returns the first node in the list.</p>

		 

		 <p><strong>Note:</strong> This method returns Null when the current node is the last node or there are no items 

		 in the list. When the current node is removed from the list, subsequent calls to nextNode return Null. The 

		 iterator must be reset by calling the reset method.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[An IXMLDOMNode, which refers to the next node in the collection. Returns Null if there is no next node.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757847%28VS.85%29.aspx MSDN - nextNode Method (IXMLDOMNamedNodeMap)

		 

		 ]]></see>
</method>
<method name='removeNamedItem' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:removeNamedItem' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Removes a node (or if an attribute, may reveal a default if present).

		 

		 ]]></description>
<param><![CDATA[name The nodeName of the node to remove.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[The node removed from this map if a node with such a name exists.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms762291%28VS.85%29.aspx MSDN - removeNamedItem Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NamedNodeMap MDC - NamedNodeMap

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D58B193 W3C - NamedNodeMap.removeNamedItem()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if there is no node 

		 named name  in this map.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this map is readonly.

		 

		 ]]></throws>
</method>
<method name='removeNamedItemNS' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:removeNamedItemNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpaceURI;localName' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Removes a node (or if an attribute, may reveal a default if present).

		 

		 ]]></description>
<param><![CDATA[nameSpaceURI The namespace URI of the node to remove.

		 ]]></param>
<param><![CDATA[localName The local name of the node to remove.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The node removed from this map if a node with such a local 

		 name and namespace URI exists.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NamedNodeMap MDC - NamedNodeMap

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-removeNamedItemNS W3C - NamedNodeMap.removeNamedItemNS()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if there is no 

		 node with the specified namespaceURI and localName in this map.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised 

		 if this map is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if 

		 the implementation does not support the feature "XML" and the 

		 language exposed through the Document does not support XML Namespaces. 

		 

		 ]]></throws>
</method>
<method name='reset' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Resets the iterator.

		 

		 <p><strong>Note:</strong> Implemented in: MSXML 3.0 and later.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms762655%28VS.85%29.aspx MSDN - reset Method (IXMLDOMNamedNodeMap)

		 

		 ]]></see>
</method>
<method name='setNamedItem' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:setNamedItem' isStatic='false' isFinal='false' isOverride='false'  param_names='arg' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Adds (or replaces) a node by its nodeName.

		 

		 ]]></description>
<param><![CDATA[arg A node to store in this map. The node will later be 

		 accessible using the value of its nodeName attribute.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[If the new Node replaces an existing node the replaced 

		 Node is returned, otherwise null is returned.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms764702%28VS.85%29.aspx MSDN - setNamedItem Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NamedNodeMap MDC - NamedNodeMap

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1025163788 W3C - NamedNodeMap.setNamedItem()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if arg was 

		 created from a different document than the one that created this map.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if

		 this map is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INUSE_ATTRIBUTE_ERR: Raised if arg is 

		 an Attr that is already an attribute of another Element object. The 

		 DOM user must explicitly clone Attr nodes to re-use them in 

		 other elements.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if an 

		 attempt is made to add a node doesn't belong in this NamedNodeMap. 

		 Examples would include trying to insert something other than an Attr 

		 node into an Element's map of attributes, or a non-Entity node into 

		 the DocumentType's map of Entities.

		 

		 ]]></throws>
</method>
<method name='setNamedItemNS' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:setNamedItemNS' isStatic='false' isFinal='false' isOverride='false'  param_names='arg' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Adds (or replaces) a node by its localName and namespaceURI.

		 

		 ]]></description>
<param><![CDATA[arg A node to store in this map. The node will later be 

		 accessible using the value of its namespaceURI and localName attributes.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[If the new Node replaces an existing node the replaced Node 

		 is returned, otherwise null is returned.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NamedNodeMap MDC - NamedNodeMap

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-setNamedItemNS W3C - NamedNodeMap.setNamedItemNS()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if arg was 

		 created from a different document than the one that created this map.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this map is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INUSE_ATTRIBUTE_ERR: Raised if arg is an 

		 Attr that is already an attribute of another Element object. The DOM 

		 user must explicitly clone Attr nodes to re-use them in other elements.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if an 

		 attempt is made to add a node doesn't belong in this NamedNodeMap. 

		 Examples would include trying to insert something other than an Attr 

		 node into an Element's map of attributes, or a non-Entity node into 

		 the DocumentType's map of Entities.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the 

		 implementation does not support the feature "XML" and the language 

		 exposed through the Document does not support XML Namespaces. 

		 

		 ]]></throws>
</method>
<method name='length' fullname='dom.core:NamedNodeMap/dom.core:NamedNodeMap:length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of nodes in this map. The range of valid child node 

		 indices is 0 to length-1 inclusive.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms753799%28VS.85%29.aspx MSDN - length Property (IXMLDOMNamedNodeMap)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NamedNodeMap.length MDC - NamedNodeMap.length

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6D0FB19E W3C - NamedNodeMap.length

		 

		 ]]></see>
</method>
<interfaceRec name='DOMImplementation' fullname='dom.core:DOMImplementation' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DOMImplementation.as' namespace='dom.core' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DOMImplementation interface provides a number of methods for 

	 performing operations that are independent of any particular 

	 instance of the document object model. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/dd347056(VS.85).aspx MSDN - DOMImplementation Prototype

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementation MDC - DOMImplementation

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490 W3C - DOMImplementation

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</interfaceRec>
<method name='createDocument' fullname='dom.core:DOMImplementation/dom.core:DOMImplementation:createDocument' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;qualifiedName;doctype' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core:DocumentType' param_defaults='undefined;undefined;undefined' result_type='dom.core:Document'>
<description><![CDATA[

		 This method creates a DOM document.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var doc = document.implementation.createDocument ('http://www.w3.org/1999/xhtml', 'html', null);

		 var body = document.createElementNS('http://www.w3.org/1999/xhtml', 'body');

		 body.setAttribute('id', 'abc');

		 doc.documentElement.appendChild(body);

		 alert(doc.getElementById('abc')); // [object HTMLBodyElement]</listing>

		 

		 ]]></example>
<param><![CDATA[namespaceURI The namespace URI of the document element to 

		 create or null.

		 ]]></param>
<param><![CDATA[qualifiedName The qualified name of the document element to 

		 be created or null.

		 ]]></param>
<param><![CDATA[doctype The type of document to be created or null.

		 When doctype is not null, its Node.ownerDocument attribute is set to 

		 the document being created.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A new Document object with its document element. If the NamespaceURI, 

		 qualifiedName, and doctype are null, the returned Document is empty with 

		 no document element.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementation.createDocument MDC - DOMImplementation.createDocument()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-DOM-createDocument W3C - DOMImplementation.createDocument()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified qualified name is not an XML name according to [XML 1.0].

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NAMESPACE_ERR: Raised if the 

		 qualifiedName is malformed, if the qualifiedName has a prefix and the 

		 namespaceURI is null, or if the qualifiedName is null and the 

		 namespaceURI is different from null, or if the qualifiedName has a 

		 prefix that is "xml" and the namespaceURI is different from 

		 "http://www.w3.org/XML/1998/namespace" [XML Namespaces], or if the DOM 

		 implementation does not support the "XML" feature but a non-null 

		 namespace URI was provided, since namespaces were defined by XML.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if doctype has 

		 already been used with a different document or was created from a 

		 different implementation.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the 

		 implementation does not support the feature "XML" and the language 

		 exposed through the Document does not support XML Namespaces. 

		 

		 ]]></throws>
</method>
<method name='createDocumentType' fullname='dom.core:DOMImplementation/dom.core:DOMImplementation:createDocumentType' isStatic='false' isFinal='false' isOverride='false'  param_names='qualifiedName;publicId;systemId' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='dom.core:DocumentType'>
<description><![CDATA[

		 Creates an empty DocumentType node.

		 

		 <p>Entity declarations and notations 

		 are not made available. Entity reference expansions and default 

		 attribute additions do not occur.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var dt = document.implementation.createDocumentType('svg:svg', '-//W3C//DTD SVG 1.1//EN', 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd');

		 var d = document.implementation.createDocument('http://www.w3.org/2000/svg', 'svg:svg', dt);

		 alert(d.doctype.publicId); // -//W3C//DTD SVG 1.1//EN</listing>

		 

		 ]]></example>
<param><![CDATA[qualifiedName The qualified name  of the document type to be created.

		 ]]></param>
<param><![CDATA[publicId The external subset public identifier.

		 ]]></param>
<param><![CDATA[systemId The external subset system identifier.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A new DocumentType node with Node.ownerDocument set to null.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementation.createDocumentType MDC - DOMImplementation.createDocumentType()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-DOM-createDocType W3C - DOMImplementation.createDocumentType()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified qualified name is not an XML name according to [XML 1.0].

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NAMESPACE_ERR: Raised if the 

		 qualifiedName is malformed.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if 

		 the implementation does not support the feature "XML" and the 

		 language exposed through the Document does not support XML Namespaces. 

		 

		 ]]></throws>
</method>
<method name='getFeature' fullname='dom.core:DOMImplementation/dom.core:DOMImplementation:getFeature' isStatic='false' isFinal='false' isOverride='false'  param_names='feature;version' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core.types:DOMObject'>
<description><![CDATA[

		 This method returns a specialized object which implements the 

		 specialized APIs of the specified feature and version, as specified 

		 in DOM Features. 

		 

		 <p>The specialized object may also be obtained by using 

		 binding-specific casting methods but is not necessarily expected to, 

		 as discussed in Mixed DOM Implementations. This method also allow 

		 the implementation to provide specialized objects which do not support 

		 the DOMImplementation interface. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (myNode.isSupported("+Events", "3.0")) {

		 	// (the plus sign "+" is irrelevant for the getFeature method itself and is ignored by this method anyway)

		 	EventTarget evt = (EventTarget) myNode.getFeature("Events", "3.0");

		 	// ...

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[feature The name of the feature requested. Note that any plus 

		 sign "+" prepended to the name of the feature will be ignored since it 

		 is not significant in the context of this method. 

		 ]]></param>
<param><![CDATA[version This is the version number of the feature to test. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[Returns an object which implements the specialized APIs of the 

		 specified feature and version, if any, or null if there is no object 

		 which implements interfaces associated with that feature. If the DOMObject 

		 returned by this method implements the DOMImplementation  interface, it 

		 must delegate to the primary core DOMImplementation and not return results 

		 inconsistent with the primary core DOMImplementation such as hasFeature, 

		 getFeature, etc. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementation.getFeature MDC - DOMImplementation.getFeature()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementation3-getFeature W3C - DOMImplementation.getFeature()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMFeatures W3C - DOM Features

		 

		 ]]></see>
</method>
<method name='hasFeature' fullname='dom.core:DOMImplementation/dom.core:DOMImplementation:hasFeature' isStatic='false' isFinal='false' isOverride='false'  param_names='feature;version' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Test if the DOM implementation implements a specific feature and version, 

		 as specified in DOM Features.

		 

		 ]]></description>
<example><![CDATA[
		 The following example uses the hasFeature method to test whether the object implements the DOM HTML standard.

		 <listing>var bSupported = document.implementation.hasFeature("HTML","1.0");</listing>

		 

		 ]]></example>
<param><![CDATA[feature The name of the feature to test. 

		 ]]></param>
<param><![CDATA[version This is the version number of the feature to test. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[If the feature is implemented in the specified version.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536446(VS.85).aspx MSDN - hasFeature Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DOMImplementation.hasFeature MDC - DOMImplementation.hasFeature()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5CED94D7 W3C - DOMImplementation.hasFeature()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMFeatures W3C - DOM Features

		 

		 ]]></see>
</method>
<classRec name='Node' fullname='dom.core:Node' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\Node.as' namespace='dom.core' access='public' baseclass='Object' interfaces='dom.events:EventTarget' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A Node is an interface from which a number of DOM types inherit, and 

	 allows these various types to be treated (or tested) similarly. The 

	 following all inherit this interface and its methods and properties 

	 (though they may return null in particular cases where not relevant 

	 (or throw an exception when adding children to a node type for which 

	 no children can exist)): Document, Element, Attr, CharacterData (which 

	 Text, Comment, and CDATASection inherit), ProcessingInstruction, 

	 DocumentFragment, DocumentType, Notation, Entity, EntityReference

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node MDC - Node

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1950641247 W3C - Node

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</classRec>
<method name='addEventListener' fullname='dom.core:Node/addEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 Associates a function with a particular event and binds the event to the current node.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 function statusreport() {

		 		alert("document has loaded");

		 }

		 

		 if (window.addEventListener) {

		 		window.addEventListener("load", statusreport, false); //invoke function

		 }

		 window.onload = statusreport(); //function invoked again, since no event handler conflicts</listing>

		 

		 ]]></example>
<param><![CDATA[type A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.

		 ]]></param>
<param><![CDATA[listener The function or method to associate with the event.

		 ]]></param>
<param><![CDATA[useCapture Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 

		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-addEventListener W3C - DOM 3 Events: EventTarget.addEventListener()

		 

		 ]]></see>
</method>
<method name='addEventListenerNS' fullname='dom.core:Node/addEventListenerNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;type;listener;useCapture' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 Registers an event listener, depending on the useCapture parameter, on the 

		 capture phase of the DOM event flow or its target and bubbling phases.

		 

		 ]]></description>
<param><![CDATA[namespaceURI Specifies the Event.namespaceURI associated with the event for which the user is registering.

		 ]]></param>
<param><![CDATA[type A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.

		 ]]></param>
<param><![CDATA[listener The function or method to associate with the event.

		 ]]></param>
<param><![CDATA[useCapture Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 

		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-addEventListener W3C - DOM 3 Events: EventTarget.addEventListener()

		 

		 ]]></see>
</method>
<method name='appendChild' fullname='dom.core:Node/appendChild' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Adds a node to the end of the list of children of a specified parent node. 

		 If the node already exists it is removed from current parent node, then added to new parent node.

		 

		 <p><strong>Note:</strong> If child is a reference to an existing node in the document, 

		 appendChild moves it from its current position to the new position (i.e. there is no 

		 requirement to remove the node from its parent node before appending it to some other node).</p>

		 

		 <p><strong>Note:</strong> This also means that a node can't be in two points of the document 

		 simultaneously. So if the node already has a parent, it is first removed, then appended at 

		 the new position.</p>

		 

		 <p><strong>Note:</strong> You can use cloneNode to make a copy of the node before appending

		 it under the new parent. (Note that the copies made with cloneNode will not be automatically 

		 kept in sync.)</p>

		 

		 <p><strong>Note:</strong> This method is not allowed to move nodes between different documents. 

		 If you want to append node from a different document (for example to display results from AJAX 

		 request) you must first use importNode.</p>

		 

		 <p><strong>Note (IE6):</strong> In Microsoft Internet Explorer 6, This method now applies to 

		 the attribute object. </p>

		 

		 <p><strong>Note:</strong> When inserting a node tree under another node that has a different 

		 owner document, the  ownerDocument property for each inserted node is changed to match the owner 

		 document of its new parent.</p>

		 

		 <p><strong>Note:</strong> When moving a node tree to another document, the content of all entity 

		 reference nodes contained therein is updated to conform to the new document. If the new document 

		 does not declare an entity that was moved into it, the entity reference will have no children, and 

		 the old content is removed. Existing references to nodes under the entity reference are still valid, 

		 but the node whose parent previously was the entity reference now has a null parent. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Create a new paragraph element, and append it to the end of the document body

		 var p = document.createElement("p");

		 document.body.appendChild(p);</listing>

		 

		 ]]></example>
<param><![CDATA[element Object that specifies the element to append.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[Returns a reference to the element that is appended to the object.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa925543.aspx MSDN - appendChild Method 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.appendChild MDC - Node.appendChild()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-184E7107 W3C - Node.appendChild()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if this 

		 node is of a type that does not allow children of the type of the 

		 newChild node, or if the node to append is one of this node's 

		 ancestors or this node itself, or if this node is of type Document 

		 and the DOM application attempts to append a second DocumentType or 

		 Element node.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if newChild 

		 was created from a different document than the one that created 

		 this node.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly or if the previous parent of the node being 

		 inserted is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: if the newChild node 

		 is a child of the Document node, this exception might be raised if 

		 the DOM implementation doesn't support the removal of the 

		 DocumentType child or Element child.

		 

		 ]]></throws>
<modified><![CDATA[DOMCore 3

		 ]]></modified>
</method>
<method name='cloneNode' fullname='dom.core:Node/cloneNode' isStatic='false' isFinal='false' isOverride='false'  param_names='cloneChildren' param_types='Boolean' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Returns a duplicate of the current node. 

		 

		 <p><strong>Note:</strong> Cloning a node copies all of its attributes and their values. </p>

		 

		 <p><strong>Note:</strong> The duplicate node returned by cloneNode is not part of the 

		 document until it is added to another node that is part of the document using appendChild 

		 or a similar method. It also has no parent until it is appended to another node. </p>

		 

		 <p><strong>Note:</strong> If cloneChildren is set to false, none of the child nodes 

		 are cloned. Any text that the node contains is not cloned either, as it is contained in 

		 one or more child Text nodes. </p>

		 

		 <p><strong>Note:</strong> When you refer to the ID of a cloned element, a collection is returned.</p>

		 

		 <p><strong>Note:</strong> To clone a node for appending to a different document, use importNode instead. </p>

		 

		 <p><strong>Note (IE):</strong> If the node is the DOMDocument node, it is safer to clone the document 

		 using the save method, as follows. doc.save(doc2); </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 p = document.getElementById("para1"); 

		 p_prime = p.cloneNode(true);</listing>

		 

		 ]]></example>
<param><![CDATA[cloneChildren FALSE, cloned objects do not include childNodes. TRUE, cloned objects include childNodes.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[Returns a reference to the newly created node.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa923265.aspx MSDN - cloneNode Method 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.cloneNode MDC - Node.cloneNode()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-3A0ED0A4 W3C - Node.cloneNode()

		 

		 ]]></see>
</method>
<method name='compareDocumentPosition' fullname='dom.core:Node/compareDocumentPosition' isStatic='false' isFinal='false' isOverride='false'  param_names='other' param_types='dom.core:Node' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Compares the position of the current node against another node in any other document.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var head = document.getElementsByTagName('head').item(0);

		 var result = head.compareDocumentPosition(document.body);

		 // result = Node.DOCUMENT_POSITION_FOLLOWING</listing>

		 

		 ]]></example>
<param><![CDATA[other The node that's being compared against.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The return value is computed as the relationship that otherNode has

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.compareDocumentPosition MDC - Node.compareDocumentPosition()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-compareDocumentPosition W3C - Node.compareDocumentPosition()

		 ]]></see>
<see><![CDATA[#DOCUMENT_POSITION_DISCONNECTED

		 ]]></see>
<see><![CDATA[#DOCUMENT_POSITION_PRECEDING

		 ]]></see>
<see><![CDATA[#DOCUMENT_POSITION_FOLLOWING

		 ]]></see>
<see><![CDATA[#DOCUMENT_POSITION_CONTAINS

		 ]]></see>
<see><![CDATA[#DOCUMENT_POSITION_CONTAINED_BY

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: when the compared 

		 nodes are from different DOM implementations that do not coordinate 

		 to return consistent implementation-specific results.

		 

		 ]]></throws>
</method>
<method name='dispatchEvent' fullname='dom.core:Node/dispatchEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='evt' param_types='dom.events:Event' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 Dispatches an event to fire on a node artificially.

		 

		 <p><strong>Note (IE):</strong> IE's equivalent of dispatchEvent() is fireEvent().</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="test" onclick="alert('hi')">Sample DIV.&lt;/div>

		 &lt;script type="text/javascript">

		 //Generate an artificial click event on "test". Fires alert("hi")

		 var clickevent = document.createEvent("MouseEvents");

		 clickevent.initEvent("click", true, true);

		 document.getElementById("test").dispatchEvent(myevent);

		 &lt;/script></listing>

		 

		 ]]></example>
<param><![CDATA[event The event to be dispatched.

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<return><![CDATA[Indicates whether any of the listeners which handled the 

		 event called Event.preventDefault(). If Event.preventDefault() was 

		 called the returned value is false, else it is true.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-dispatchEvent W3C - DOM 3 Events: EventTarget.dispatchEvent()

		 

		 ]]></see>
<modified><![CDATA[DOMEvents 3

		 ]]></modified>
</method>
<method name='getFeature' fullname='dom.core:Node/getFeature' isStatic='false' isFinal='false' isOverride='false'  param_names='feature;version' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core.types:DOMObject'>
<description><![CDATA[

		 This method returns a specialized object which implements the 

		 specialized APIs of the specified feature and version, as specified 

		 in DOM Features. The specialized object may also be obtained by using 

		 binding-specific casting methods but is not necessarily expected to, 

		 as discussed in Mixed DOM Implementations. This method also allow 

		 the implementation to provide specialized objects which do not support 

		 the Node interface. 

		 

		 ]]></description>
<param><![CDATA[feature The name of the feature requested. Note that any plus 

		 sign "+" prepended to the name of the feature will be ignored since it 

		 is not significant in the context of this method. 

		 ]]></param>
<param><![CDATA[version This is the version number of the feature to test. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[Returns an object which implements the specialized APIs of the 

		 specified feature and version, if any, or null if there is no object 

		 which implements interfaces associated with that feature. If the 

		 DOMObject returned by this method implements the Node interface, it must 

		 delegate to the primary core Node and not return results inconsistent 

		 with the primary core Node  such as attributes, childNodes, etc. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.getFeature MDC - Node.getFeature()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-getFeature W3C - Node.getFeature()

		 

		 ]]></see>
</method>
<method name='getUserData' fullname='dom.core:Node/getUserData' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMUserData'>
<description><![CDATA[

		 Retrieves the object associated to a key on a this node. The object must 

		 first have been set to this node by calling setUserData with the same key.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var d = document.setUserData('key', 15, null);

		 alert(document.getUserData('key')); // 15</listing>

		 

		 ]]></example>
<param><![CDATA[key The key the object is associated to.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[Returns the DOMUserData associated to the given key on this node, 

		 or null if there was none.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.getUserData MDC - Node.getUserData()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-getUserData W3C - Node.getUserData()

		 

		 ]]></see>
</method>
<method name='hasAttributes' fullname='dom.core:Node/hasAttributes' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a boolean value of true or false, indicating if the current element 

		 has any attributes or not. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 t1 = document.getElementById("table-data"); 

		 if (t1.hasAttributes()) { 

		 	// do something with t1.attributes

		 }</listing>

		 

		 <listing> var result=document.getElementsByTagName("div")[0].hasAttributes();</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[If the current element has any attributes or not. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.hasAttributes MDC - Node.hasAttributes()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeHasAttrs W3C - Node.hasAttributes()

		 

		 ]]></see>
</method>
<method name='hasChildNodes' fullname='dom.core:Node/hasChildNodes' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a value that indicates whether the object has children. 

		 

		 <p><strong>Note:</strong> If the object contains HTML Elements or TextNodes, they can be 

		 accessed from the childNodes collection.</p>

		 

		 <p><strong>Note:</strong> element.hasChildNodes, without the parenthesises, will return the 

		 hasChildNodes Function, and not a Boolean.</p>

		 

		 <p><strong>Note (IE6):</strong> In Microsoft Internet Explorer 6, This method now applies to the 

		 attribute object. </p>

		 

		 ]]></description>
<example><![CDATA[
		 Remove the first child node inside the element with the id "foo" if foo has child nodes.

		 <listing>

		 var foo = document.getElementById("foo");

		 if (foo.hasChildNodes()) { 

		 	foo.removeChild(foo.childNodes[0]);

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924162.aspx MSDN - hasChildNodes Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.hasChildNodes MDC - Node.hasChildNodes()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-810594187 W3C - Node.hasChildNodes()

		 

		 ]]></see>
</method>
<method name='insertBefore' fullname='dom.core:Node/insertBefore' isStatic='false' isFinal='false' isOverride='false'  param_names='newNode;childNode' param_types='dom.core:Node;dom.core:Node' param_defaults='undefined;undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Inserts the specified node before a reference element as a child of 

		 the current node. 

		 

		 <p><strong>Note:</strong> Do not specify the childNode  parameter when inserting the 

		 first child node. If children already exist and you do not specify 

		 the childNode  parameter, the oNewNode  becomes the last child of 

		 the parent object.</p>

		 

		 <p><strong>Note (IE6):</strong> In Microsoft Internet Explorer 6, This method now applies to the 

		 attribute object.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		  &lt;html&gt;

		 

		 &lt;head&gt;

		 	&lt;title&gt;Gecko DOM insertBefore test&lt;/title&gt;

		 &lt;/head&gt;

		 

		 &lt;body&gt;

		 

		 &lt;div&gt;

		 	&lt;span id="childSpan"&gt;foo bar&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 	// create an empty element node

		 	// without an ID, any attributes, or any content

		 	var sp1 = document.createElement("span");

		 

		 	// give it an id attribute called 'newSpan'

		 	sp1.setAttribute("id", "newSpan");

		 

		 	// create some content for the newly created element.

		 	var sp1_content = document.createTextNode("This is a new span element. ");

		 

		 	// apply that content to the new element

		 	sp1.appendChild(sp1_content);

		 

		 	var sp2 = document.getElementById("childSpan");

		 	var parentDiv = sp2.parentNode;

		 

		 	// insert the new element into the DOM before sp2

		 	parentDiv.insertBefore(sp1, sp2);

		 &lt;/script&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 <p>There is no insertAfter method, however it can be emulated using a combination of insertBefore and nextSibling. </p>

		 

		 <p>From the above example, sp1 could be inserted after sp2 using: </p>

		 

		 <listing>parentDiv.insertBefore(sp1, sp2.nextSibling);</listing>

		 

		 <p>If sp2 does not have a next sibling it must be the last child—sp2.nextSibling will return 

		 null so sp1 will be inserted at the end of the child nodes list (i.e. immediately after sp2). </p>

		 

		 ]]></example>
<param><![CDATA[newNode The node to insert. 

		 ]]></param>
<param><![CDATA[childNode The node before which newNode is inserted. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[Returns a reference to the element that is inserted into the document.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa922819.aspx MSDN - insertBefore Method 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.insertBefore MDC - Node.insertBefore()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-952280727 W3C - Node.insertBefore()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if this 

		 node is of a type that does not allow children of the type of the 

		 newChild node, or if the node to insert is one of this node's 

		 ancestors or this node itself, or if this node is of type Document 

		 and the DOM application attempts to insert a second DocumentType 

		 or Element node.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if newChild 

		 was created from a different document than the one that created 

		 this node.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly or if the parent of the node being inserted 

		 is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if refChild is 

		 not a child of this node.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: if this node is of 

		 type Document, this exception might be raised if the DOM 

		 implementation doesn't support the insertion of a DocumentType or 

		 Element node.

		 

		 ]]></throws>
<modified><![CDATA[DOMCore 3

		 ]]></modified>
</method>
<method name='isDefaultNamespace' fullname='dom.core:Node/isDefaultNamespace' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Returns true if the namespace is the default namespace on the given 

		 node or false if not.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var XULNS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";

		 var el = document.getElementsByTagNameNS(XULNS, 'textbox')[0];

		 alert(el.isDefaultNamespace(XULNS)); // true</listing>

		 

		 ]]></example>
<param><![CDATA[namespaceURI The namespace against which the element will be checked.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[If the namespace is the default namespace on the given 

		 node or false if not.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.isDefaultNamespace MDC - Node.isDefaultNamespace()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isDefaultNamespace W3C - Node.isDefaultNamespace()

		 

		 ]]></see>
</method>
<method name='isEqualNode' fullname='dom.core:Node/isEqualNode' isStatic='false' isFinal='false' isOverride='false'  param_names='arg' param_types='dom.core:Node' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Tests whether two nodes are equal.

		 

		 <p>This method tests for equality of nodes, not sameness (i.e., whether

		 the two nodes are references to the same object) which can be tested 

		 with Node.isSameNode(). All nodes that are the same will also be 

		 equal, though the reverse may not be true. Two nodes are equal if and 

		 only if the following conditions are satisfied:

		 <ul>

		 <li>The two nodes are of the same type.</li>

		 <li>The following string attributes are equal: nodeName, localName, 

		 namespaceURI, prefix, nodeValue. This is: they are both null, or they 

		 have the same length and are character for character identical.</li>

		 <li>The attributes NamedNodeMaps are equal. This is: they are both null, 

		 or they have the same length and for each node that exists in one map 

		 there is a node that exists in the other map and is equal, although not 

		 necessarily at the same index.</li>

		 <li>The childNodes NodeLists are equal. This is: they are both null, or 

		 they have the same length and contain equal nodes at the same index. 

		 Note that normalization can affect equality; to avoid this, nodes should 

		 be normalized before being compared.</li>

		 </ul>

		 </p>

		 

		 <p>For two DocumentType nodes to be equal, the following conditions must 

		 also be satisfied:

		 <ul>

		 <li>The following string attributes are equal: publicId, systemId, internalSubset.</li>

		 <li>The entities NamedNodeMaps are equal.</li>

		 <li>The notations NamedNodeMaps are equal.</li>

		 </ul>

		 </p>

		 

		 <p>On the other hand, the following do not affect equality: the ownerDocument, 

		 baseURI, and parentNode attributes, the specified attribute for Attr nodes, 

		 the schemaTypeInfo attribute for Attr and Element nodes, the 

		 Text.isElementContentWhitespace attribute for Text nodes, as well as any 

		 user data or event listeners registered on the nodes.</p>

		 

		 <p>Note: As a general rule, anything not mentioned in the description above 

		 is not significant in consideration of equality checking. Note that future 

		 versions of this specification may take into account more attributes and 

		 implementations conform to this specification are expected to be 

		 updated accordingly. </p>

		 

		 ]]></description>
<param><![CDATA[arg The node to compare equality with.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[Returns true if the nodes are equal, false  otherwise.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.isEqualNode MDC - Node.isEqualNode()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isEqualNode W3C - Node.isEqualNode()

		 

		 ]]></see>
</method>
<method name='isSameNode' fullname='dom.core:Node/isSameNode' isStatic='false' isFinal='false' isOverride='false'  param_names='other' param_types='dom.core:Node' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Returns whether this node is the same node as the given one.

		 This method provides a way to determine whether two Node references 

		 returned by the implementation reference the same object. When two 

		 Node references are references to the same object, even if through a 

		 proxy, the references may be used completely interchangeably, such 

		 that all attributes have the same values and calling the same DOM method 

		 on either reference always has exactly the same effect.

		 

		 ]]></description>
<param><![CDATA[other The node to test against.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[Returns true if the nodes are the same, false otherwise.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.isSameNode MDC - Node.isSameNode()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isSameNode W3C - Node.isSameNode()

		 

		 ]]></see>
</method>
<method name='isSupported' fullname='dom.core:Node/isSupported' isStatic='false' isFinal='false' isOverride='false'  param_names='feature;version' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Tests whether the DOM implementation implements a specific feature 

		 and that feature is supported by this node. 

		 

		 <p><strong>Note:</strong> To check if any version of the DOM specification is supported, 

		 you can pass in null as the version instead of a string. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Get an element and check to see if its supports the DOM2 HTML Module

		 &lt;div id="doc"&gt;

		 &lt;/div&gt;

		 var main = document.getElementById('doc');

		 var output = main.isSupported('HTML', '2.0');</listing>

		 

		 ]]></example>
<param><![CDATA[The name of the feature to test. This is the same name 

		 which can be passed to the method hasFeature on DOMImplementation. 

		 Possible values defined within the core DOM specification are listed 

		 on the DOM Level 2 Conformance Section.  The name of the feature to 

		 test. This is the same name which can be passed to the method 

		 hasFeature on DOMImplementation. Possible values defined within 

		 the core DOM specification are listed on the DOM Level 2 Conformance Section. 

		 ]]></param>
<param><![CDATA[version This is the version number of the feature to test. In DOM 

		 Level 2, version 1, this is the string 2.0. If the version is not specified, 

		 supporting any version of the feature will cause the method to return true. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.isSupported MDC - Node.isSupported()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-Node-supports W3C - Node.isSupported()

		 

		 ]]></see>
</method>
<method name='lookupNamespaceURI' fullname='dom.core:Node/lookupNamespaceURI' isStatic='false' isFinal='false' isOverride='false'  param_names='prefix' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Takes a prefix and returns the namespaceURI associated with it on the 

		 given node if found (and null if not). Supplying null for the prefix 

		 will return the default namespace.

		 

		 <p><strong>Note (Mozilla):</strong> Due to bug 312019, this method does not work with 

		 dynamically assigned namespaces (i.e., those set with Node.prefix).</p>

		 

		 ]]></description>
<param><![CDATA[prefix The prefix to look for. If this parameter is null, 

		 the method will return the default namespace URI if any.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[Returns the associated namespace URI or null if none is found.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.lookupNamespaceURI MDC - Node.lookupNamespaceURI()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespaceURI W3C - Node.lookupNamespaceURI()

		 ]]></see>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=312019 bug 312019

		 

		 ]]></see>
</method>
<method name='lookupPrefix' fullname='dom.core:Node/lookupPrefix' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the prefix for a given namespaceURI if present, and null if not. 

		 When multiple prefixes are possible, the result is implementation-dependent.

		 

		 <p><strong>Note (Mozilla):</strong> Due to bug 312019, this method does not work with 

		 dynamically assigned namespaces (i.e., those set with Node.prefix).</p>

		 

		 ]]></description>
<param><![CDATA[namespaceURI The namespace URI to look for.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[Returns an associated namespace prefix if found or null  if none is 

		 found. If more than one prefix are associated to the namespace prefix, the 

		 returned namespace prefix is implementation dependent.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.lookupPrefix MDC - Node.lookupPrefix()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix W3C - Node.lookupPrefix()

		 ]]></see>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=312019 bug 312019

		 

		 ]]></see>
</method>
<method name='normalize' fullname='dom.core:Node/normalize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Puts the specified node and all of its subtree into a "normalized" 

		 form. In a normalized subtree, no text nodes in the subtree are 

		 empty and there are no adjacent text nodes. 

		 

		 <p><strong>Note (IE):</strong> By calling object.normalize before the subelements of an 

		 object are manipulated, you ensure that the document object model 

		 has a consistent structure. The normal form is useful for operations 

		 that require a consistent document tree structure, and it ensures 

		 that the document object model view is identical when saved and reloaded.</p>

		 

		 <p><strong>Note (IE):</strong> Adjacent CDATA sections will not be merged by the normalize 

		 method, allowing for an inconsistent object model when CDATA 

		 sections are present.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.normalize MDC - Node.normalize()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-normalize W3C - Node.normalize()

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 ]]></modified>
</method>
<method name='removeChild' fullname='dom.core:Node/removeChild' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Removes a child node from the object.

		 

		 <p>The node to be removed must be an immediate child of the parent object.</p>

		 

		 <p>If child is actually not a child of the element node, the method throws an exception. </p>

		 

		 <p><strong>Note:</strong> The removed child node still exists in memory, but is no longer part of the DOM. 

		 You may reuse the removed node later in your code, via the oldChild object reference.</p>

		 

		 <p><strong>Note (IE6):</strong> In Microsoft Internet Explorer 6, This method now applies to the attribute object. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // &lt;div id="top" align="center"&gt;

		 //   &lt;div id="nested"&gt;&lt;/div&gt; 

		 // &lt;/div&gt;

		 

		 var d = document.getElementById("top"); 

		 var d_nested = document.getElementById("nested"); 

		 var throwawayNode = d.removeChild(d_nested);</listing>

		 

		 <listing>

		 // remove all children from element

		 var element = document.getElementById("top");

		 while (element.firstChild) {

		 	element.removeChild(element.firstChild);

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[node Specifies the element to be removed from the document.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[Returns a reference to the object that is removed.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa923301.aspx MSDN - removeChild Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.removeChild MDC - Node.removeChild()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1734834066 W3C - Node.removeChild()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if oldChild is not 

		 a child of this node.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: if this node is of 

		 type Document, this exception might be raised if the DOM implementation 

		 doesn't support the removal of the DocumentType child or the Element child.

		 

		 ]]></throws>
<modified><![CDATA[DOMCore 3

		 ]]></modified>
</method>
<method name='removeEventListener' fullname='dom.core:Node/removeEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 Removes an event listener.

		 

		 <p>Calling removeEventListener with arguments 

		 which do not identify any currently registered EventListener on the 

		 EventTarget has no effect. The Event.namespaceURI for which the user 

		 registered the event listener is implied and is null.</p>

		 

		 ]]></description>
<param><![CDATA[type Specifies the Event.type for which the user registered 

		 the event listener.

		 ]]></param>
<param><![CDATA[listener The EventListener to be removed.

		 ]]></param>
<param><![CDATA[useCapture Specifies whether the EventListener being removed 

		 was registered for the capture phase or not. If a listener was 

		 registered twice, once for the capture phase and once for the target 

		 and bubbling phases, each must be removed separately. Removal of an 

		 event listener registered for the capture phase does not affect the 

		 same event listener registered for the target and bubbling phases, 

		 and vice versa.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-removeEventListener W3C - DOM 3 Events: EventTarget.removeEventListener()

		 

		 ]]></see>
</method>
<method name='removeEventListenerNS' fullname='dom.core:Node/removeEventListenerNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;type;listener;useCapture' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 Removes an event listener. Calling removeEventListenerNS with arguments 

		 which do not identify any currently registered EventListener on the 

		 EventTarget has no effect. 

		  

		 ]]></description>
<param><![CDATA[namespaceURI Specifies the Event.namespaceURI associated with the event for which the user registered the event listener.

		 ]]></param>
<param><![CDATA[type Specifies the Event.type for which the user registered 

		 the event listener.

		 ]]></param>
<param><![CDATA[listener The EventListener to be removed.

		 ]]></param>
<param><![CDATA[useCapture Specifies whether the EventListener being removed 

		 was registered for the capture phase or not. If a listener was 

		 registered twice, once for the capture phase and once for the target 

		 and bubbling phases, each must be removed separately. Removal of an 

		 event listener registered for the capture phase does not affect the 

		 same event listener registered for the target and bubbling phases, 

		 and vice versa.

		 

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTargetGroup-removeEventListenerNS W3C - DOM 3 Events: EventTarget.removeEventListenerNS()

		 

		 ]]></see>
</method>
<method name='replaceChild' fullname='dom.core:Node/replaceChild' isStatic='false' isFinal='false' isOverride='false'  param_names='newNode;childNode' param_types='dom.core:Node;dom.core:Node' param_defaults='undefined;undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Replaces an existing child element with a new child element.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // &lt;div&gt;

		 //  &lt;span id="childSpan"&gt;foo bar&lt;/span&gt;

		 // &lt;/div&gt;

		 

		 // create an empty element node

		 // without an ID, any attributes, or any content

		 var sp1 = document.createElement("span");

		 

		 // give it an id attribute called 'newSpan'

		 sp1.setAttribute("id", "newSpan");

		 

		 // create some content for the new element.

		 var sp1_content = document.createTextNode("new replacement span element.");

		 

		 // apply that content to the new element

		 sp1.appendChild(sp1_content);

		 

		 // build a reference to the existing node to be replaced

		 var sp2 = document.getElementById("childSpan");

		 var parentDiv = sp2.parentNode;

		 

		 // replace existing node sp2 with the new span element sp1

		 parentDiv.replaceChild(sp1, sp2);</listing>

		 

		 ]]></example>
<param><![CDATA[newNode The new node to replace oldChild. If it already exists in the DOM, it is first removed. 

		 ]]></param>
<param><![CDATA[childNode Specifies the existing element to be replaced.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[Returns a reference to the object that is replaced.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa925527.aspx MSDN - replaceChild Method 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.replaceChild MDC - Node.replaceChild()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-785887307 W3C - Node.replaceChild()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if this 

		 node is of a type that does not allow children of the type of the 

		 newChild node, or if the node to put in is one of this node's 

		 ancestors or this node itself, or if this node is of type Document 

		 and the result of the replacement operation would add a second 

		 DocumentType or Element on the Document node.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if newChild 

		 was created from a different document than the one that created 

		 this node.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node or the parent of the new node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if oldChild is 

		 not a child of this node.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: if this node is of 

		 type Document, this exception might be raised if the DOM implementation 

		 doesn't support the replacement of the DocumentType child or Element child.

		 

		 ]]></throws>
<modified><![CDATA[DOMCore 3

		 ]]></modified>
</method>
<method name='selectNodes' fullname='dom.core:Node/selectNodes' isStatic='false' isFinal='false' isOverride='false'  param_names='queryString' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 Applies the specified pattern-matching operation to this node's context and returns the list of matching nodes as IXMLDOMNodeList.

		 

		 <p><strong>Note (IE):</strong> This method is only valid if the XML Query Language (XQL) feature has been included in the operating 

		 system (OS). If a call to this method is made and XQL is not supported, an error message will be returned. </p>

		 

		 <p><strong>Note (IE):</strong> The  selectSingleNode method is similar to the selectNodes method, but returns only the first matching 

		 node rather than the list of all matching nodes.</p>

		 

		 ]]></description>
<param><![CDATA[queryString A XSLPattern or XPath query that is to be applied to the context defined by this node. The value of the 

		 SelectionLanguage internal property (flag) determines whether an XSLPattern or XPath query is used. By default, the queryString is 

		 an XSLPattern query. The SelectionLanguage internal property (flag) can be set with the setProperty Method.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a collection of nodes selected by an XSL Pattern or XPath query. If no nodes are selected, an empty collection is returned.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926403.aspx MSDN - selectNodes Method 

		 ]]></see>
<see><![CDATA[#selectSingleNode()

		 

		 ]]></see>
</method>
<method name='selectSingleNode' fullname='dom.core:Node/selectSingleNode' isStatic='false' isFinal='false' isOverride='false'  param_names='queryString' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Applies the specified pattern-matching operation to this node's context and returns the first matching node.

		 

		 <p><strong>Note (IE):</strong> This method is only valid if the XML Query Language (XQL) feature has been included in 

		 the OS. If a call to this method is made and XQL is not supported, an error message will be returned. </p>

		 

		 <p><strong>Note (IE):</strong> The selectSingleNode method is similar to the  selectNodes Method, but returns only 

		 the first matching node rather than the list of all matching nodes.</p>

		 

		 ]]></description>
<param><![CDATA[queryString A Extensible Stylesheet Language (XSL) or XPath query that is to be applied to the context defined by 

		 this node. The value of the SelectionLanguage internal property (flag) determines whether an XSL or XPath query is used. 

		 By default, the expression is an XSL pattern query. The SelectionLanguage internal property (flag) can be set with the 

		 setProperty method.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns the first node that matches the XSL or XPath query. If no nodes match the query, it returns Null.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924233.aspx MSDN - selectSingleNode Method 

		 ]]></see>
<see><![CDATA[#selectNodes()

		 

		 ]]></see>
</method>
<method name='setUserData' fullname='dom.core:Node/setUserData' isStatic='false' isFinal='false' isOverride='false'  param_names='key;data;handler' param_types='dom.core.types:DOMString;dom.core.types:DOMUserData;dom.core:UserDataHandler' param_defaults='undefined;undefined;undefined' result_type='dom.core.types:DOMUserData'>
<description><![CDATA[

		 Associate an object to a key on this node. The object can later be 

		 retrieved from this node by calling getUserData with the same key.

		 

		 <p>Allows a user to attach data to an element, without needing to modify the DOM. Note 

		 that such data will not be preserved when imported via importNode, as with cloneNode() 

		 and renameNode() operations (though adoptNode does preserve the information), and equality 

		 tests in isEqualNode() do not consider user data in making the assessment.</p>

		 

		 <p>This method offers the convenience of associating data with specific nodes without needing 

		 to alter the structure of a document and in a standard fashion, but it also means that extra 

		 steps may need to be taken if one wishes to serialize the information or include the 

		 information upon clone, import, or rename operations.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var d = document.implementation.createDocument('', 'test', null); 

		 d.documentElement.setUserData('key', 15, {handle:function (o, k, d, s, ds) {alert(o+'::'+k+'::'+d+'::'+s+'::'+ds)}}); // 2::key::15::[object Element]::[object Element]

		 alert(d.documentElement.getUserData('key')); // 15

		 var e = document.importNode(d.documentElement, true); // causes handler to be called

		 alert(e.getUserData('key')); // null since user data is not copied</listing>

		 

		 ]]></example>
<param><![CDATA[key The key to associate the object to.

		 ]]></param>
<param><![CDATA[data The object to associate to the given key, or null to remove any existing association to that key.

		 ]]></param>
<param><![CDATA[handler The handler to associate to that key, or null.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[Returns the DOMUserData previously associated to the given key on this node, or null if there was none.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.setUserData MDC - Node.setUserData()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-setUserData W3C - Node.setUserData()

		 

		 ]]></see>
</method>
<method name='transformNode' fullname='dom.core:Node/transformNode' isStatic='false' isFinal='false' isOverride='false'  param_names='styleSheet' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Processes this node and its children using the supplied Extensible Stylesheet Language Transformations

		 (XSLT) style sheet and returns the resulting transformation.

		 

		 <p><strong>Note (IE):</strong> This method is only valid if the XSLT feature has been included in the operating system 

		 (OS). If a call to this method is made and XSLT is not supported, an error message will be returned. </p>

		 

		 <p><strong>Note (IE):</strong> The stylesheet parameter must be either a  DOMDocument node, in which case the document 

		 is assumed to be an Extensible Stylesheet Language (XSL) style sheet, or a Document Object Model (DOM) node in the 

		 XSL style sheet, in which case this node is treated as a stand-alone style sheet fragment.</p>

		 

		 <p><strong>Note (IE):</strong> The source node defines a context in which the style sheet operates, but navigation outside 

		 this scope is allowed. For example, a style sheet can use the id function to access other parts of the document. </p>

		 

		 <p><strong>Note (IE):</strong> This method supports both stand-alone and embedded style sheets and also provides the 

		 ability to run a localized style sheet fragment against a particular source node.</p>

		 

		 ]]></description>
<param><![CDATA[styleSheet Valid XML document or DOM node that consists of XSLT elements that direct the transformation of this node.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a string that contains the product of the transformation of this XML document based on the XSLT style sheet.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924913.aspx MSDN - transformNode Method 

		 

		 ]]></see>
</method>
<method name='transformNodeToObject' fullname='dom.core:Node/transformNodeToObject' isStatic='false' isFinal='false' isOverride='false'  param_names='styleSheet;outputObject' param_types='dom.core:Node' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Processes this node and its children using the supplied Extensible Stylesheet Language Transformations (XSLT) style sheet 

		 and returns the resulting transformation.

		 

		 <p><strong>Note (IE):</strong> This method is only valid if the XSLT feature has been included in the operating system (OS). If 

		 a call to this method is made and XSLT is not supported, an error message will be returned. </p>

		 

		 <p><strong>Note (IE):</strong> The stylesheet parameter must be either a  DOMDocument node, in which case the document is assumed 

		 to be an XSLT style sheet, or a Document Object Model (DOM) node in the XSLT style sheet, in which case this node is treated 

		 as a stand-alone style sheet fragment.</p>

		 

		 <p><strong>Note (IE):</strong> The source node defines a context in which the style sheet operates, but navigation outside this 

		 scope is allowed. For example, a style sheet can use the id function to access other parts of the document. </p>

		 

		 <p><strong>Note (IE):</strong> This method supports both stand-alone and embedded style sheets and also provides the ability to 

		 run a localized style sheet fragment against a particular source node.</p>

		 

		 <p><strong>Note (IE):</strong> The transformNodeToObject method always generates a Unicode byte-order mark, which means it cannot 

		 be used in conjunction with other Active Server Pages (ASP) Response.Write or Response.BinaryWrite calls.</p>

		 

		 ]]></description>
<param><![CDATA[styleSheet Valid XML document or DOM node that consists of XSLT elements that direct the transformation of this node.

		 ]]></param>
<param><![CDATA[outputObject On return, contains the product of the transformation of this XML document based on the XSLT style sheet. 

		 If the variant represents the  DOMDocument object, the document is built according to its properties and its child nodes are 

		 replaced during this transformation process. The XML transformation can also be sent to a stream.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924282.aspx MSDN - transformNodeToObject Method

		 

		 ]]></see>
</method>
<method name='attributes' fullname='dom.core:Node/attributes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NamedNodeMap'>
<description><![CDATA[

		 Returns an unordered collection of Attr nodes. 

		 If the element has no specified attributes, then the returned object 

		 has a length of 0 (zero).

		 

		 <p><strong>Note:</strong> Trying to modify an Attribute Node that originated 

		 from an inline event assignment (e.g. onclick=) is something developers should 

		 avoid. If you want to use it, be aware that assigning values through the 

		 element.attributeName syntax will assign the JavaScript value for the element. 

		 When read through the same syntax, it will return the latest JavaScript value 

		 for the element attribute, or if it hasn't been assigned yet, the function 

		 generated by parsing the element's inline event assignment.</p>

		 

		 <p><strong>Note:</strong> Style isn't a "true" HTML attribute node, but a 

		 CCSStyleDeclaration. You can however use the above .attributes syntaxes and 

		 DOM functions to control its value, as well as the element.style.cssText 

		 syntax that returns all CSS attributes, or element.style.CSSattributeName (eg 

		 element.style.position) to control a single CSS attribute. In FireFox, all 

		 the above correctly update the CCSStyleDeclaration object, the element's 

		 attribute nodes and the .attributes collection. Consider quirksmode for 

		 compatibility issues in other browsers (see link below)</p>

		 

		 ]]></description>
<example><![CDATA[
		 Numerical indexing is useful for going through all of an element's attributes. The following 

		 example runs through the attribute nodes for the element in the document with id "p1", and 

		 prints each attribute's value.

		 <listing>

		 &lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"

		 "http://www.w3.org/TR/html4/strict.dtd"&gt;

		 

		 &lt;html&gt;

		 

		 	&lt;head&gt;

		 		&lt;title&gt;Attributes example&lt;/title&gt;

		 		&lt;script type="text/javascript"&gt;

		 

		 			function showFirstAttr() {

		 				var firstPara = document.getElementById("p1");

		 				var outputText = document.getElementById("result");

		 

		 				// First, let's verify that the paragraph has some attributes    

		 				if (firstPara.hasAttributes()) {

		 					var attrs = firstPara.attributes;

		 					var text = ""; 

		 					for(var i=attrs.length-1; i&gt;=0; i--) {

		 						text += attrs[i].name + "-&gt;" + attrs[i].value;

		 					}

		 					outputText.value = text;

		 				} else {

		 					outputText.value = "No attributes to show"

		 				};

		 			}

		 		&lt;/script&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body&gt;

		 		&lt;p id="p1" style="color: green;"&gt;Sample Paragraph&lt;/p&gt;

		 

		 		&lt;form action=""&gt;

		 			&lt;p&gt;&lt;input type="button" value="Show first attribute name and value"

		 				onclick="showFirstAttr();"&gt;

		 			&lt;input id="result" type="text" value=""&gt;&lt;/p&gt;

		 		&lt;/form&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa922712.aspx MSDN - attributes Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.attributes MDC - Node.attributes

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-84CF096 W3C - Node.attributes

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_core.html#attributes Quirksmode - Attributes

		 

		 ]]></see>
</method>
<method name='baseName' fullname='dom.core:Node/baseName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the base name for the name qualified with the namespace.

		 

		 <p>It returns the right-hand side of a namespace qualified name. 

		 For example, it returns yyy for the element &lt;xxx:yyy&gt;. It always 

		 returns a non-empty string.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924236.aspx MSDN - baseName Property 

		 ]]></see>
<see><![CDATA[#localName

		 

		 ]]></see>
</method>
<method name='baseURI' fullname='dom.core:Node/baseURI/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The absolute base URI of this node or null if the implementation 

		 wasn't able to obtain an absolute URI. This value is computed as 

		 described in Base URIs. However, when the Document supports the 

		 feature "HTML" [DOM Level 2 HTML], the base URI is computed using 

		 first the value of the href attribute of the HTML BASE element if 

		 any, and the value of the documentURI  attribute from the Document 

		 interface otherwise.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.baseURI MDC - Node.baseURI

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-baseURI W3C - Node.baseURI

		 

		 ]]></see>
</method>
<method name='childNodes' fullname='dom.core:Node/childNodes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NodeList'>
<description><![CDATA[

		 Returns an ordered collection of node objects that are children of 

		 the current element. If the element has no children, then the returned 

		 NodeList contains no node. 

		 

		 <p><strong>Note:</strong> The items in the collection of nodes are objects 

		 and not strings. To get data from those node objects, you must use their 

		 properties (e.g. elementNodeReference.childNodes[1].nodeName to get the name, etc.). </p>

		 

		 <p><strong>Note:</strong> The document object itself has 2 children: the 

		 Doctype declaration and the root element, typically referred to as documentElement. 

		 (In (X)HTML documents this is the HTML element.) </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // parg is an object reference to a &lt;p&gt; element

		 if (parg.hasChildNodes()) {

		 	// So, first we check if the object is not empty, if the object has child nodes

		 	var children = parg.childNodes;

		 	for (var i = 0; i &lt; children.length; i++) {

		 		// do something with each child as children[i]

		 		// NOTE: List is live, Adding or removing children will change the list

		 	};

		 };</listing>

		 

		 <listing>

		 // This is one way to remove all children from a node

		 // box is an object refrence to an element with children

		 while (box.firstChild) {

		 	//The list is LIVE so it will re-index each call

		 	box.removeChild(box.firstChild);

		 };</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa923287.aspx MSDN - childNodes Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.childNodes MDC - Node.childNodes

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1451460987 W3C - Node.childNodes

		 

		 ]]></see>
</method>
<method name='dataType' fullname='dom.core:Node/dataType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Specifies the data type for this node.

		 

		 <table class="innertable">

		 	<tr><th>Value</th><th>Description</th></tr>

		 	<tr>

		 		<td>NODE_ATTRIBUTE</td>

		 		<td>Contains the string representation of the data type specifier included in the schema, or Null if no data type is specified.</td>

		 	</tr>

		 	<tr>

		 		<td>NODE_CDATA_SECTION, NODE_COMMENT, NODE_DOCUMENT, NODE_DOCUMENT_FRAGMENT, NODE_DOCUMENT_TYPE, NODE_ENTITY, NODE_NOTATION, NODE_PROCESSING_INSTRUCTION, NODE_TEXT</td>

		 		<td>Contains the constant string value "string." These node types do not have data types, so the dataType property cannot be set for these node types. Attempts to set this property are ignored. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_ELEMENT</td>

		 		<td>Contains the string representation of the data type specifier included on the instance of the element or in the schema, or Null if no data type is specified.</td>

		 	</tr>

		 	<tr>

		 		<td>NODE_ENTITY_REFERENCE</td>

		 		<td>Contains the string representation of the data type specifier for the referenced entity. This is limited to entities with a single data type on the root level element of the subtree corresponding to the entity. Contains Null if no data type is specified. It is not possible to set the data type of an entity reference. The data type must be set directly on the referenced element. Attempts to set the value of the dataType property are ignored. </td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924038.aspx MSDN - dataType Property 

		 

		 ]]></see>
</method>
<method name='definition' fullname='dom.core:Node/definition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the definition of the node in the document type definition (DTD) or schema.

		 

		 <table class="innertable">

		 	<tr><th>Value</th><th>Description</th></tr>

		 	<tr>

		 		<td>NODE_ENTITY_REFERENCE</td>

		 		<td>Returns the node for the entity referenced; that is, the ENTITY element that was defined for a given ENTITYREF. Given the ENTITYREF &amp;x;, for example, the definition property returns the node in the DOCTYPE node's entity collection that defines the corresponding ENTITY: &lt;!ENTITY x "y"&gt;. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_ENTITY</td>

		 		<td>For unparsed entities, returns the NOTATION definition from the DOCTYPE node's notation collection. For example, given the ENTITY &lt;!ENTITY networth SYSTEM "networth.xls" NDATA XLS&gt;, the definition property returns the node corresponding to the notation &lt;!NOTATION XLS PUBLIC "http://example.microsoft.com/office/excel"&gt;. For parsed entities, returns Null. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_ATTRIBUTE</td>

		 		<td>Returns the XML-Data Schema AttributeType for a given ATTRIBUTE node. For example, the definition property for the attribute myAttribute="123" returns the node corresponding to the element &lt;AttributeType name= "myAttribute"&gt; in the schema. Returns Null when a DTD is used or when no schema is present. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_ELEMENT</td>

		 		<td>Returns the XML-Data Schema ElementType for a given ELEMENT node. For example, given the element &lt;myelement&gt;, the definition property returns the node &lt;ElementType name="myelement"&gt; in the specified external schema. Returns Null when a DTD is used or when no schema is present. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_CDATA_SECTION, NODE_COMMENT, NODE_DOCUMENT, NODE_DOCUMENT_FRAGMENT, NODE_DOCUMENT_TYPE, NODE_NOTATION, NODE_PROCESSING_INSTRUCTION, NODE_TEXT</td>

		 		<td>Returns Null.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa925478.aspx MSDN - definition Property 

		 

		 ]]></see>
</method>
<method name='firstChild' fullname='dom.core:Node/firstChild/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the node's first child in the tree, or null if the node is 

		 childless. If the node is a Document, it returns the first node in 

		 the list of its direct children.

		 

		 <p><strong>Note:</strong> When applied to a document node, the returned node is not 

		 necessarily the root element of the document; it can also be a 

		 processing instruction, for example. If you need the root element, 

		 use document.documentElement.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example demonstrates the use of firstChild and how whitespace nodes might interfere with using this property.

		 <listing>

		 &lt;p id="para-01"&gt;

		 	&lt;span&gt;First span&lt;/span&gt;

		 &lt;/p&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 	var p01 = document.getElementById('para-01');

		 	alert(p01.firstChild.nodeName);

		 &lt;/script&gt;</listing>

		 

		 <p>In the above, the alert will show '#text' because a text node is inserted to maintain 

		 the whitespace between the end of the opening &lt;p&gt; and &lt;span&gt; tags. Any whitespace will 

		 cause the #text node to be inserted, from a single space to any number of spaces, returns, 

		 tabs, and so on.</p>

		 

		 <p>Another #text node is inserted between the closing &lt;/span&gt; and &lt;/p&gt; tags.</p>

		 

		 <p>If this whitespace is removed from the source, the #text nodes are not inserted and 

		 the span element becomes the paragraph's first child.</p>

		 

		 <listing>

		 &lt;p id="para-01"&gt;&lt;span&gt;First span&lt;/span&gt;&lt;/p&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 	var p01 = document.getElementById('para-01');

		 	alert(p01.firstChild.nodeName)

		 &lt;/script&gt;</listing>

		 

		 <p>Now the alert will show 'SPAN'.</p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926506.aspx MSDN - firstChild Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.firstChild MDC - Node.firstChild

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-169727388 W3C - Node.firstChild

		 

		 ]]></see>
</method>
<method name='lastChild' fullname='dom.core:Node/lastChild/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the last child of a node. Returns null if there are no child elements. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var tr = document.getElementById("row1");

		 corner_td = tr.lastChild;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa923308.aspx MSDN - lastChild Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.lastChild MDC - Node.lastChild

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-61AD09FB W3C - Node.lastChild

		 

		 ]]></see>
</method>
<method name='localName' fullname='dom.core:Node/localName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the local part of the qualified name of this node. 

		 

		 <p><strong>Note:</strong> The local name of a node is that part of the node's 

		 qualified name that comes after the colon. Qualified names are typically used 

		 in XML as part of the namespace(s) of the particular XML documents. For 

		 example, in the qualified name ecomm:partners, partners is the local name 

		 and ecomm is the prefix: 

		 

		 <listing>

		 &lt;ecomm:business id="soda_shop" type="brick_n_mortar"&gt;

		 &lt;ecomm:partners&gt;

		 &lt;ecomm:partner id="1001"&gt;Tony's Syrup Warehouse&lt;/ecomm:partner&gt;

		 &lt;/ecomm:partners&gt;

		 &lt;/ecomm:business&gt;</listing></p>

		 

		 <p>For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes 

		 created with a DOM Level 1 method, such as document.createElement, localName 

		 is always null.</p>

		 

		 ]]></description>
<example><![CDATA[
		 (Must be served with XML content type, such as text/xml or application/xhtml+xml.) 

		 <listing>

		 &lt;html xmlns="http://www.w3.org/1999/xhtml"

		 	xmlns:svg="http://www.w3.org/2000/svg"&gt;

		 &lt;head&gt;

		 	&lt;script type="application/javascript"&gt;&lt;![CDATA[

		 	function test() {

		 		var text = document.getElementById('text');

		 		var circle = document.getElementById('circle');

		 

		 		text.value = "&lt;svg:circle&gt; has:\n" +

		 			"localName = '" + circle.localName + "'\n" +

		 			"namespaceURI = '" + circle.namespaceURI + "'";

		 		}

		 	]]&gt;&lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body onload="test()"&gt;

		 

		 	&lt;svg:svg version="1.1"

		 		width="100px" height="100px"

		 		viewBox="0 0 100 100"&gt;

		 		&lt;svg:circle cx="50" cy="50" r="30" style="fill:#aaa" id="circle"/&gt;

		 	&lt;/svg:svg&gt;

		 	&lt;textarea id="text" rows="4" cols="55"/&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.localName MDC - Node.localName

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSLocalN W3C - Node.localName

		 

		 ]]></see>
</method>
<method name='namespaceURI' fullname='dom.core:Node/namespaceURI/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The namespace URI of the node, or null if it is unspecified (read-only). 

		 When the node is a document, it returns the XML namespace for the 

		 current document.

		 

		 <p><strong>Note:</strong> This is not a computed value that is the result of a namespace lookup 

		 based on an examination of the namespace declarations in scope. It is 

		 merely the namespace URI given at creation time.</p>

		 

		 <p><strong>Note:</strong> For nodes of any nodeType other than ELEMENT_NODE and ATTRIBUTE_NODE, 

		 and nodes created with a DOM Level 1 method, such as document.createElement, 

		 the value of namespaceURI is always null.</p>

		 

		 <p><strong>Note:</strong> You can create an element with the specified namespaceURI using the DOM 

		 Level 2 method document.createElementNS.</p>

		 

		 <p><strong>Note:</strong> Per the Namespaces in XML specification, an attribute does not inherit 

		 its namespace from the element it is attached to. If an attribute is not 

		 explicitly given a namespace, it has no namespace.</p>

		 

		 <p><strong>Note:</strong> The DOM does not handle or enforce namespace validation per se. It is up 

		 to the DOM application to do any validation necessary. Note too that the 

		 namespace prefix, once it is associated with a particular node, cannot 

		 be changed.</p>

		 

		 ]]></description>
<example><![CDATA[
		 In this snippet, a node is being examined for its localName and its namespaceURI. If the namespaceURI 

		 returns the XUL namespace and the localName returns "browser", then the node is understood to be a 

		 XUL <code>&lt;browser/&gt;</code>.

		 <listing>

		 if (node.localName == "browser" &amp;&amp; 

		 	node.namespaceURI == "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul") {

		 	// this is a XUL browser 

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa923270.aspx MSDN - namespaceURI Property (IXMLDOMNode) 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.namespaceURI MDC - Node.namespaceURI

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSname W3C - Node.namespaceURI

		 

		 ]]></see>
</method>
<method name='nextSibling' fullname='dom.core:Node/nextSibling/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the node immediately following the specified one in its 

		 parent's childNodes list, or null if the specified node is the 

		 last node in that list. 

		 

		 <p><strong>Note (Mozilla):</strong> Gecko-based browsers insert text nodes into a document to represent 

		 whitespace in the source markup. Therefore a node obtained for example via 

		 firstChild or previousSibling may refer to a whitespace text node, rather 

		 than the actual element the author intended to get. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;

		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 	var el = document.getElementById('div-01').nextSibling;

		 	document.write('&lt;p&gt;Siblings of div-01&lt;/p&gt;&lt;ol&gt;');

		 	while (el) {

		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');

		 		el = el.nextSibling;

		 	}

		 	document.write('&lt;/ol&gt;');

		 &lt;/script&gt;

		 </listing>

		 

		 <listing>

		 /~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

		 	The following is written to the page as it loads:

		 

		 		Siblings of div-01

		 

		 		1. #text

		 		2. DIV

		 		3. #text

		 		4. SCRIPT

		 		5. P

		 		6. OL

		 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/

		 </listing>

		 

		 In the above example, it can be seen that #text nodes are inserted in the DOM where whitespace 

		 occurs in the markup between tags (i.e. after the closing tag of an element and before the 

		 opening tag of the next). No whitespace is created between the elements inserted by the 

		 document.write statement.

		 

		 <p>The possible inclusion of text nodes in the DOM must be allowed for when traversing the DOM 

		 using nextSibling. See the resources in the Notes section.</p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa922802.aspx MSDN - nextSibling Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.nextSibling MDC - Node.nextSibling

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6AC54C2F W3C - Node.nextSibling

		 

		 ]]></see>
</method>
<method name='nodeName' fullname='dom.core:Node/nodeName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the name of the current node as a string. 

		 

		 <p><strong>Note:</strong> Here are the returned values for different types of nodes:

		 <table class="innertable">

		 	<tr><th>Interface</th><th>nodeName</th></tr>

		 	<tr>

		 		<td>Attr</td><td>same as Attr.name</td>

		 	</tr>

		 	<tr>

		 		<td>CDATASection</td><td>"#cdata-section"</td>

		 	</tr>

		 	<tr>

		 		<td>Comment</td><td>"#comment"</td>

		 	</tr>

		 	<tr>

		 		<td>Document</td><td>"#document"</td>

		 	</tr>

		 	<tr>

		 		<td>DocumentFragment</td><td>"#document-fragment"</td>

		 	</tr>

		 <tr>

		 		<td>DocumentType</td><td>same as DocumentType.name</td>

		 	</tr>

		 <tr>

		 		<td>Element</td><td>same as Element.tagName</td>

		 	</tr>

		 <tr>

		 		<td>Entity</td><td>entity name</td>

		 	</tr>

		 <tr>

		 		<td>EntityReference</td><td>name of entity reference</td>

		 	</tr>

		 <tr>

		 		<td>Notation</td><td>notation name</td>

		 	</tr>

		 <tr>

		 		<td>ProcessingInstruction</td><td>same as ProcessingInstruction.target</td>

		 	</tr>

		 <tr>

		 		<td>text</td><td>"#text"</td>

		 	</tr>

		 </table>

		 </p>

		 

		 ]]></description>
<example><![CDATA[
		 Given the following markup: 

		 <listing>

		 &lt;div id="d1"&gt;hello world&lt;/div&gt;

		 &lt;input type="text" id="t"/&gt;</listing>

		 

		 <p>and the following script: </p>

		 

		 <listing>

		 var div1 = document.getElementById("d1");

		 var text_field = document.getElementById("t"); 

		 text_field.value = div1.nodeName;</listing>

		 

		 <p>In XHTML (or any other XML format), text_field's value would read "div". However, in HTML, 

		 text_field's value would read "DIV". </p>

		 

		 <p>Note that tagName property could have been used instead, since nodeName has the same value 

		 as tagName for an element. Bear in mind, however, that nodeName will return #text for text 

		 nodes while tagName will return undefined. </p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924892.aspx MSDN - nodeName Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.nodeName MDC - Node.nodeName

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-F68D095 W3C - Node.nodeName

		 

		 ]]></see>
</method>
<method name='nodePrincipal' fullname='dom.core:Node/nodePrincipal/get' isStatic='false' isFinal='false' isOverride='false'  result_type='gecko:nsIPrincipal'>
<description><![CDATA[

		 Returns the nsIPrincipal  object representing current security 

		 context of the node.

		 

		 <p><strong>Note:</strong> This property exists on all nodes (HTML, XUL, SVG, MathML, 

		 etc.), but only if the script trying to use it has UniversalXPConnect privileges.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.nodePrincipal MDC - Node.nodePrincipal

		 

		 ]]></see>
</method>
<method name='nodeType' fullname='dom.core:Node/nodeType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns an integer code representing the type of the node. 

		 

		 ]]></description>
<example><![CDATA[
		 This example checks if the first node inside the document element is a comment node, 

		 and if it is not, displays a message.

		 <listing>

		 var node = document.documentElement.firstChild;

		 if(node.nodeType != Node.COMMENT_NODE)

		 alert("You should comment your code well!");</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.nodeType MDC - Node.nodeType

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-111237558 W3C - Node.nodeType

		 

		 ]]></see>
</method>
<method name='nodeTypeString' fullname='dom.core:Node/nodeTypeString/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the node type in string form.

		 

		 ]]></description>
<example><![CDATA[
		 This value depends on the value of the nodeType property.

		 <listing>NODE_ATTRIBUTE == "attribute"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924285.aspx MSDN - nodeTypeString Property 

		 

		 ]]></see>
</method>
<method name='nodeTypedValue' fullname='dom.core:Node/nodeTypedValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 Contains the node value expressed in its defined data type.

		 

		 <p><strong>Note:</strong> This value depends on the value of the  nodeType property of the IXMLDOMNode.</p>

		 

		 <p><strong>Note:</strong> The data type for this node is defined in its  dataType Property. 

		 This property also depends on the value of the node type, in the  nodeType property. </p>

		 

		 <p><strong>Note:</strong> Although you can explicitly set the nodeTypedValue property with a 

		 particular data type in the VARIANT, the set operation does not change the data type. The value 

		 in the VARIANT is coerced to the data type specified in the dataType property, and the set 

		 operation returns an error if the type coercion is not possible. </p>

		 

		 <table class="innertable">

		 	<tr><th>Value</th><th>Description</th></tr>

		 	<tr>

		 		<td>NODE_ATTRIBUTE</td>

		 		<td>Returns the value in the data representation of the type specified in the schema for the attribute. (Data types are specified using the dt:dt attribute, and because attributes cannot be applied to attributes, the attribute's data type can be specified only in the schema.) If no type was specified, returns a string identical to the  nodeValue property. If the new value is not of the type specified in the schema or cannot be coerced to the type specified in the schema, then an error occurs. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_CDATA_SECTION, NODE_COMMENT, NODE_DOCUMENT, NODE_DOCUMENT_FRAGMENT, NODE_DOCUMENT_TYPE, NODE_ENTITY, NODE_NOTATION, NODE_PROCESSING_INSTRUCTION</td>

		 		<td>Returns a string that is equal to the nodeValue property. These node types do not have data types. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_ELEMENT</td>

		 		<td>eturns the value in the data representation of the type specified on the element instance (using the dt:dt attribute) or specified in the schema. If no type was specified on the instance or in the schema, returns a string identical to the  nodeValue property. If the element has an attribute data type, returns null.</td>

		 	</tr>

		 	<tr>

		 		<td>NODE_ENTITY_REFERENCE</td>

		 		<td>Returns the value in the data representation of the type specified for the referenced entity. This is limited to entities with a single data type on the root level element of the subtree corresponding to the entity. If no data type was specified, returns a string identical to the  nodeValue property. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_TEXT</td>

		 		<td>Returns the value in the data representation of the type of the containing element. If the containing element was not typed, returns a string identical to the  nodeValue property. </td>

		 	</tr>

		 </table>

		 

		 <p><strong>Data Type Mapping</strong></p>

		 

		 <table class="innertable">

		 	<tr><th>VARIANT returned</th><th>Corresponding element data type</th></tr>

		 	<tr>

		 		<td>VT_BSTR</td>

		 		<td>string</td>

		 	</tr>

		 <tr>

		 		<td>VT_BSTR</td>

		 		<td>number</td>

		 	</tr>

		 <tr>

		 		<td>VT_I4</td>

		 		<td>Int</td>

		 	</tr>

		 <tr>

		 		<td>VT_CY</td>

		 		<td>Fixed.14.4</td>

		 	</tr>

		 <tr>

		 		<td>VT_BOOL</td>

		 		<td>Boolean</td>

		 	</tr>

		 <tr>

		 		<td>VT_DATE</td>

		 		<td>dateTime</td>

		 	</tr>

		 <tr>

		 		<td>VT_DATE</td>

		 		<td>dateTime.tz</td>

		 	</tr>

		 <tr>

		 		<td>VT_DATE</td>

		 		<td>Date</td>

		 	</tr>

		 <tr>

		 		<td>VT_DATE</td>

		 		<td>Time</td>

		 	</tr>

		 <tr>

		 		<td>VT_DATE</td>

		 		<td>Time.tz</td>

		 	</tr>

		 <tr>

		 		<td>VT_I1</td>

		 		<td>i1 byte</td>

		 	</tr>

		 <tr>

		 		<td>VT_I2</td>

		 		<td>i2</td>

		 	</tr>

		 <tr>

		 		<td>VT_I4</td>

		 		<td>i4, int</td>

		 	</tr>

		 <tr>

		 		<td>VT_UI1</td>

		 		<td>ui1</td>

		 	</tr>

		 <tr>

		 		<td>VT_UI2</td>

		 		<td>ui2</td>

		 	</tr>

		 <tr>

		 		<td>VT_UI4</td>

		 		<td>ui4</td>

		 	</tr>

		 <tr>

		 		<td>VT_FLOAT</td>

		 		<td>r4</td>

		 	</tr>

		 <tr>

		 		<td>VT_DOUBLE</td>

		 		<td>r8, float</td>

		 	</tr>

		 <tr>

		 		<td>VT_BSTR</td>

		 		<td>uuid</td>

		 	</tr>

		 <tr>

		 		<td>VT_ARRAY</td>

		 		<td>bin.hex</td>

		 	</tr>

		 <tr>

		 		<td>VT_ARRAY</td>

		 		<td>bin.base64</td>

		 	</tr>

		 	

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa923262.aspx MSDN - nodeTypedValue Property 

		 

		 ]]></see>
</method>
<method name='nodeValue' fullname='dom.core:Node/nodeValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns or sets the value of the current node.

		 

		 <p><strong>Note:</strong> For the document itself, nodeValue returns null. For text, comment, 

		 and CDATA nodes, nodeValue returns the content of the node. For 

		 attribute nodes, the value of the attribute is returned.</p>

		 

		 <p><strong>Note:</strong> The following table shows the return values for different elements:

		 <table class="innertable">

		 	<tr><th>Interface</th><th>nodeValue</th></tr>

		 	<tr>

		 		<td>Attr</td><td>value of attribute</td>

		 	</tr>

		 	<tr>

		 		<td>CDATASection</td><td>content of the CDATA Section</td>

		 	</tr>

		 	<tr>

		 		<td>Comment</td><td>content of the comment</td>

		 	</tr>

		 	<tr>

		 		<td>Document</td><td>null</td>

		 	</tr>

		 	<tr>

		 		<td>DocumentFragment</td><td>null</td>

		 	</tr>

		 <tr>

		 		<td>DocumentType</td><td>null</td>

		 	</tr>

		 <tr>

		 		<td>Element</td><td>null</td>

		 	</tr>

		 <tr>

		 		<td>Entity</td><td>null</td>

		 	</tr>

		 <tr>

		 		<td>EntityReference</td><td>null</td>

		 	</tr>

		 <tr>

		 		<td>Notation</td><td>null</td>

		 	</tr>

		 <tr>

		 		<td>ProcessingInstruction</td><td>entire content excluding the target</td>

		 	</tr>

		 <tr>

		 		<td>text</td><td>content of the text node</td>

		 	</tr>

		 </table>

		 </p>

		 

		 <p><strong>Note:</strong> When nodeValue is defined to be null, setting it has no effect.</p> 

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924151.aspx MSDN - nodeValue Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.nodeValue MDC - Node.nodeValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-F68D080 W3C - Node.nodeValue

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised 

		 when the node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException DOMSTRING_SIZE_ERR: Raised when it 

		 would return more characters than fit in a DOMString variable 

		 on the implementation platform.

		 

		 ]]></throws>
</method>
<method name='ownerDocument' fullname='dom.core:Node/ownerDocument/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Document'>
<description><![CDATA[

		 The Document object associated with this node. This is also the 

		 Document object used to create new nodes. 

		 

		 <p><strong>Note:</strong> When this node is a 

		 Document or a DocumentType which is not used with any Document 

		 yet, this is null.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // given a node "p", get the top-level HTML child 

		 // of the document object

		 d = p.ownerDocument; 

		 html = d.documentElement;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa922810.aspx MSDN - ownerDocument Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.ownerDocument MDC - Node.ownerDocument

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#node-ownerDoc W3C - Node.ownerDocument

		 

		 ]]></see>
<modified><![CDATA[DOMCore 2

		 ]]></modified>
</method>
<method name='parentNode' fullname='dom.core:Node/parentNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the parent of the specified node in the DOM tree. 

		 

		 <p><strong>Note:</strong> parentNode returns null for the following node types: Attr, Document, DocumentFragment, Entity, and Notation. </p>

		 

		 <p><strong>Note:</strong> It also returns null if the node has just been created and is not yet attached to the tree. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (node.parentNode) {

		 	// remove a node from the tree, unless it's not in the tree already

		 	node.parentNode.removeChild(node);

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa923284.aspx MSDN - parentNode Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.parentNode MDC - Node.parentNode

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1060184317 W3C - Node.parentNode

		 

		 ]]></see>
</method>
<method name='parsed' fullname='dom.core:Node/parsed/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Indicates the parsed status of the node and child nodes.

		 

		 <p><strong>Note:</strong> During asynchronous access, not all of the document tree may be available. 

		 Before performing some operations, such as Extensible Stylesheet Language Transformations (XSLT) or 

		 pattern-matching operations, it is useful to know whether the entire tree below this node is available 

		 for processing. </p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926456.aspx MSDN - parsed Property 

		 

		 ]]></see>
</method>
<method name='prefix' fullname='dom.core:Node/prefix/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the namespace prefix of the specified node, or null if no 

		 prefix is specified. 

		 

		 <p><strong>Note:</strong> This will only work when a namespace-aware parser 

		 is used, i.e. when a document is served with an XML mime-type. This will not 

		 work for HTML documents. </p>

		 

		 ]]></description>
<example><![CDATA[
		 The following alerts "x". 

		 <listing>&lt;x:div onclick="alert(this.prefix)"/&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa922812.aspx MSDN - prefix Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.prefix MDC - Node.prefix

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSPrefix W3C - Node.prefix

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified prefix contains an illegal character according to the XML 

		 version in use specified in the Document.xmlVersion attribute.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NAMESPACE_ERR: Raised if the specified 

		 prefix is malformed per the Namespaces in XML specification, if the 

		 namespaceURI of this node is null, if the specified prefix is "xml" 

		 and the namespaceURI of this node is different from 

		 "http://www.w3.org/XML/1998/namespace", if this node is an attribute 

		 and the specified prefix is "xmlns" and the namespaceURI of this node 

		 is different from "http://www.w3.org/2000/xmlns/", or if this node is 

		 an attribute and the qualifiedName of this node is "xmlns" 

		 [XML Namespaces].

		 

		 ]]></throws>
</method>
<method name='previousSibling' fullname='dom.core:Node/previousSibling/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the node immediately preceding the specified one in its 

		 parent's childNodes list, null if the specified node is the first 

		 in that list. 

		 

		 <p><strong>Note (Mozilla):</strong> Gecko-based browsers insert text nodes into a document to represent 

		 whitespace in the source markup. Therefore a node obtained for 

		 example via firstChild or previousSibling may refer to a whitespace 

		 text node, rather than the actual element the author intended to get.</p>

		 

		 <p><strong>Note:</strong> To navigate the opposite way through the child nodes list use element.nextSibling. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // &lt;a&gt;&lt;b1 id="b1"/&gt;&lt;b2 id="b2"/&gt;&lt;/a&gt;

		 alert(document.getElementById("b1").previousSibling); // null

		 alert(document.getElementById("b2").previousSibling.id); // "b1"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa923340.aspx MSDN - previousSibling Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node.previousSibling MDC - Node.previousSibling

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-640FB3C8 W3C - Node.previousSibling

		 

		 ]]></see>
</method>
<method name='specified' fullname='dom.core:Node/specified/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Indicates whether the node (usually an attribute) is explicitly specified or derived 

		 from a default value in the document type definition (DTD) or schema.

		 

		 <p>Only returns true for attribute nodes if the attribute was specified directly on the element. 

		 Returns false for default attributes and all other node types.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924210.aspx MSDN - specified Property 

		 

		 ]]></see>
</method>
<method name='text' fullname='dom.core:Node/text/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Represents the text content of the node or the concatenated text representing the node and its descendants.

		 

		 <table class="innertable">

		 	<tr><th>Value</th><th>Description</th></tr>

		 	<tr>

		 		<td>NODE_ATTRIBUTE, NODE_DOCUMENT, NODE_ENTITY</td>

		 		<td>Returns a string representing the value of the node. This is the concatenated text of all subnodes with entities expanded. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_CDATA_SECTION, NODE_COMMENT, NODE_PROCESSING_INSTRUCTION, NODE_TEXT</td>

		 		<td>Returns the text contained in the node, which is the same as the  nodeValue property.</td>

		 	</tr>

		 	<tr>

		 		<td>NODE_DOCUMENT_TYPE, NODE_NOTATION</td>

		 		<td>Returns the empty string (""). These node types do not have associated text. </td>

		 	</tr>

		 	<tr>

		 		<td>NODE_DOCUMENT_FRAGMENT</td>

		 		<td>Returns the text comprised of the concatenation of all descendant nodes.</td>

		 	</tr>

		 	<tr>

		 		<td>NODE_ELEMENT</td>

		 		<td>Contains a string that represents the element content. Note that this will also include the text content from all child elements, concatenated in document order. For example, consider the following XML: 

		 			<listing>&lt;count&gt;

  &lt;item&gt;one&lt;/item&gt;

  &lt;item&gt;two&lt;/item&gt;

  &lt;item&gt;three&lt;/item&gt;



  &lt;item&gt;four&lt;/item&gt;

&lt;/count&gt;

		 			</listing>

		 			The text property for the &lt;count&gt; element contains the value "one two three four".

		 		</td>

		 	</tr>

		 	<tr>

		 		<td>NODE_ENTITY_REFERENCE</td>

		 		<td>Returns the string representation of the entity reference.</td>

		 	</tr>

		 </table>

		 

		 <p><strong>Note:</strong> When concatenated, the text represents the contents of text or CDATA nodes. All 

		 concatenated text nodes are normalized according to xml:space attributes and the value of the preserveWhiteSpace 

		 switch. Concatenated CDATA text is not normalized. (Child nodes that contain NODE_COMMENT and 

		 NODE_PROCESSING_INSTRUCTION nodes are not concatenated.) </p>

		 

		 <p><strong>Note:</strong> Retrieves and sets the string representing the text contents of this node or the 

		 concatenated text representing this node and its descendants.</p>

		 

		 <p><strong>Note:</strong> For more precise control over text manipulation in an XML document, use the lower-level 

		 nodeValue property, which returns the raw text associated with a NODE_TEXT node.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;root att="   123   a   &lt;   "&gt;

		 	&lt;a&gt;   a   a   &lt;/a&gt;

		 	&lt;!--   comment   b   --&gt;

		 	&lt;?pi   pi   c   ?&gt;

		 

		 	&lt;![CDATA[   cdata   d   ]]&gt;

		 	e   f

		 &lt;/root&gt;</listing>

		 

		 <p>The text property for the root element returns the following concatenated text.</p>

		 

		 <listing>"a a   cdata   d    e f"</listing>

		 

		 <p>Note that the white space within the CDATA node is preserved.</p>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa924259.aspx MSDN - text Property 

		 ]]></see>
<see><![CDATA[#textContent

		 

		 ]]></see>
</method>
<method name='textContent' fullname='dom.core:Node/textContent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets or sets the text content of a node and its descendants.

		 

		 <p><strong>Note:</strong> textContent returns null if the element is a document, a document 

		 type, or a notation. To grab all of the text and CDATA data for the 

		 whole document, one could usedocument.documentElement.textContent.</p>

		 

		 <p><strong>Note:</strong> If the node is a CDATA section, a comment, a processing instruction, 

		 or a text node, textContent returns the text inside this node (the nodeValue).</p>

		 

		 <p><strong>Note:</strong> For other node types, textContent returns the concatenation of the 

		 textContent attribute value of every child node, excluding comments 

		 and processing instruction nodes. This is an empty string if the node 

		 has no children.</p>

		 

		 <p><strong>Note:</strong> Setting this property on a node removes all of its children and replaces 

		 them with a single text node with the given value.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Given the following HTML fragment:

		 //   &lt;div id="divA"&gt;This is &lt;span&gt;some&lt;/span&gt; text&lt;/div&gt;

		 

		 // Get the text content:

		 var text = document.getElementById("divA").textContent;

		 // |text| is set to "This is some text".

		 

		 // Set the text content:

		 document.getElementById("divA").textContent = "This is some text";

		 // The HTML for divA is now:

		 //   &lt;div id="divA"&gt;This is some text&lt;/div&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent W3C - Node.textContent

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised 

		 when the node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException DOMSTRING_SIZE_ERR: Raised when it 

		 would return more characters than fit in a DOMString variable on 

		 the implementation platform.

		 

		 ]]></throws>
</method>
<method name='xml' fullname='dom.core:Node/xml/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Contains the XML representation of the node and all its descendants.

		 

		 <p><strong>Note:</strong> The xml property always returns a Unicode string. That is, the xml property 

		 for DOMDocument converts the document from its original encoding to Unicode. As a result, the original 

		 encoding attribute is removed. For example, &lt;?xml version="1.0" encoding="UTF-8"?&gt; appears in the xml 

		 property as follows.</p>

		 

		 <listing>&lt;?xml version="1.0"?&gt;</listing>

		 

		 <p>If the original encoding was not removed by the xml property, the following line returns an error indicating the parser cannot switch from Unicode to UTF-8 encoding.</p>

		 

		 <listing>xmlDoc.loadxml(xmlDoc.xml);</listing>

		 

		 <p>If you use the save Method, the original encoding is preserved. For example, if you load a document in Microsoft® Windows® 1252 encoding, it will be saved in that format. </p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa923294.aspx MSDN - xml Property 

		 ]]></see>
<see><![CDATA[dom.core.Document#save()

		 

		 ]]></see>
</method>
<method name='dataType' fullname='dom.core:Node/dataType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='' param_defaults='undefined' result_type='void'>
</method>
<method name='nodeTypedValue' fullname='dom.core:Node/nodeTypedValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='' param_defaults='undefined' result_type='void'>
</method>
<method name='nodeValue' fullname='dom.core:Node/nodeValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='prefix' fullname='dom.core:Node/prefix/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='text' fullname='dom.core:Node/text/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='textContent' fullname='dom.core:Node/textContent/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<field name='ATTRIBUTE_NODE' fullname='dom.core:Node/ATTRIBUTE_NODE' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The node is an Attr.

		 

		 <p>The node represents an attribute of an element. An attribute node can have the following child node 

		 types: Text and EntityReference. An attribute does not appear as the child node of any other node type; 

		 note that it is not considered a child node of an element. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ATTRIBUTE_NODE W3C - Node.ATTRIBUTE_NODE

		 

		 ]]></see>
</field>
<field name='CDATA_SECTION_NODE' fullname='dom.core:Node/CDATA_SECTION_NODE' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 The node is a CDATASection.

		 

		 <p>The node represents a CDATA section in the XML source. CDATA sections are used to escape blocks of text that 

		 would otherwise be recognized as markup. A CDATA section node cannot have any child nodes. A CDATA section node 

		 can appear as the child of the DocumentFragment, EntityReference, and Element nodes.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-CDATA_SECTION_NODE W3C - Node.CDATA_SECTION_NODE

		 

		 ]]></see>
</field>
<field name='COMMENT_NODE' fullname='dom.core:Node/COMMENT_NODE' type='Number' isStatic='true' isConst='true' defaultValue='8' >
<description><![CDATA[

		 The node is a Comment.

		 

		 <p>The node represents a comment in the XML document. A comment node cannot have any child nodes. A comment node can 

		 appear as the child of Document, DocumentFragment, Element, and EntityReference nodes. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-COMMENT_NODE W3C - Node.COMMENT_NODE

		 

		 ]]></see>
</field>
<field name='DOCUMENT_FRAGMENT_NODE' fullname='dom.core:Node/DOCUMENT_FRAGMENT_NODE' type='Number' isStatic='true' isConst='true' defaultValue='11' >
<description><![CDATA[

		 The node is a DocumentFragment.

		 

		 <p>The node represents a document fragment. A document fragment node associates a node or subtree with a document 

		 without actually being contained within the document. A document fragment node can have the following child node 

		 types: Element, ProcessingInstruction, Comment, Text, CDATASection, and EntityReference. A DocumentFragment node 

		 cannot appear as the child of any node types. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_FRAGMENT_NODE W3C - Node.DOCUMENT_FRAGMENT_NODE

		 

		 ]]></see>
</field>
<field name='DOCUMENT_NODE' fullname='dom.core:Node/DOCUMENT_NODE' type='Number' isStatic='true' isConst='true' defaultValue='9' >
<description><![CDATA[

		 The node is a Document.

		 

		 <p>The node represents a document object, which, as the root of the document tree, 

		 provides access to the entire XML document. It is created using the progID 

		 "Msxml2.DOMDocument", or through a data island using &lt;XML&gt; or &lt;SCRIPT LANGUAGE=XML&gt;. A document node can 

		 have the following child node types: Element (maximum of one), ProcessingInstruction, 

		 Comment, and DocumentType. A document node cannot appear as the child of any node types.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_NODE W3C - Node.DOCUMENT_NODE

		 

		 ]]></see>
</field>
<field name='DOCUMENT_POSITION_CONTAINED_BY' fullname='dom.core:Node/DOCUMENT_POSITION_CONTAINED_BY' type='Number' isStatic='true' isConst='true' defaultValue='16' >
<description><![CDATA[

		 The node is contained by the reference node. A node which is contained is always following, too.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_CONTAINED_BY W3C - Node.DOCUMENT_POSITION_CONTAINED_BY

		 

		 ]]></see>
</field>
<field name='DOCUMENT_POSITION_CONTAINS' fullname='dom.core:Node/DOCUMENT_POSITION_CONTAINS' type='Number' isStatic='true' isConst='true' defaultValue='8' >
<description><![CDATA[

		 The node contains the reference node. A node which contains is always preceding, too.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_CONTAINS W3C - Node.DOCUMENT_POSITION_CONTAINS

		 

		 ]]></see>
</field>
<field name='DOCUMENT_POSITION_DISCONNECTED' fullname='dom.core:Node/DOCUMENT_POSITION_DISCONNECTED' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The two nodes are disconnected. Order between disconnected nodes is always implementation-specific.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_DISCONNECTED W3C - Node.DOCUMENT_POSITION_DISCONNECTED

		 

		 ]]></see>
</field>
<field name='DOCUMENT_POSITION_FOLLOWING' fullname='dom.core:Node/DOCUMENT_POSITION_FOLLOWING' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 The node follows the reference node.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_FOLLOWING W3C - Node.DOCUMENT_POSITION_FOLLOWING

		 

		 ]]></see>
</field>
<field name='DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC' fullname='dom.core:Node/DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC' type='Number' isStatic='true' isConst='true' defaultValue='32' >
<description><![CDATA[

		 The determination of preceding versus following is implementation-specific.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC W3C - Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC

		 

		 ]]></see>
</field>
<field name='DOCUMENT_POSITION_PRECEDING' fullname='dom.core:Node/DOCUMENT_POSITION_PRECEDING' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The second node precedes the reference node.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_PRECEDING W3C - Node.DOCUMENT_POSITION_PRECEDING

		 

		 ]]></see>
</field>
<field name='DOCUMENT_TYPE_NODE' fullname='dom.core:Node/DOCUMENT_TYPE_NODE' type='Number' isStatic='true' isConst='true' defaultValue='10' >
<description><![CDATA[

		 The node is a DocumentType.

		 

		 <p>The node represents the document type declaration, indicated by the &lt;!DOCTYPE &gt; tag. A document type 

		 node can have the following child node types: Notation and Entity. A document type node can appear as the child 

		 of the Document node. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_TYPE_NODE W3C - Node.DOCUMENT_TYPE_NODE

		 

		 ]]></see>
</field>
<field name='ELEMENT_NODE' fullname='dom.core:Node/ELEMENT_NODE' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The node is an Element.

		 

		 <p>The node represents an element. An element node can have the following child node types: Element, 

		 Text, Comment, ProcessingInstruction, CDATASection, and EntityReference. An element node can be the 

		 child of the Document, DocumentFragment, EntityReference, and Element nodes. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ELEMENT_NODE W3C - Node.ELEMENT_NODE

		 

		 ]]></see>
</field>
<field name='ENTITY_NODE' fullname='dom.core:Node/ENTITY_NODE' type='Number' isStatic='true' isConst='true' defaultValue='6' >
<description><![CDATA[

		 The node is an Entity.

		 

		 <p>The node represents an expanded entity. An entity node can have child nodes that represent the expanded entity

		 (for example, Text and EntityReference nodes). An entity node can appear as the child of the DocumentType node. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ENTITY_NODE W3C - Node.ENTITY_NODE

		 

		 ]]></see>
</field>
<field name='ENTITY_REFERENCE_NODE' fullname='dom.core:Node/ENTITY_REFERENCE_NODE' type='Number' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 The node is an EntityReference.

		 

		 <p>The node represents a reference to an entity in the XML document. This applies to all entities, including 

		 character entity references. An entity reference node can have the following child node types: Element, 

		 ProcessingInstruction, Comment, Text, CDATASection, and EntityReference. An entity reference node can appear 

		 as the child of the Attribute, DocumentFragment, Element, and EntityReference nodes.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ENTITY_REFERENCE_NODE W3C - Node.ENTITY_REFERENCE_NODE

		 

		 ]]></see>
</field>
<field name='NOTATION_NODE' fullname='dom.core:Node/NOTATION_NODE' type='Number' isStatic='true' isConst='true' defaultValue='12' >
<description><![CDATA[

		 The node is a Notation.

		 

		 <p>A node represents a notation in the document type declaration. A notation node cannot have any child nodes. A notation 

		 node can appear as the child of the DocumentType node. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-NOTATION_NODE W3C - Node.NOTATION_NODE

		 

		 ]]></see>
</field>
<field name='PROCESSING_INSTRUCTION_NODE' fullname='dom.core:Node/PROCESSING_INSTRUCTION_NODE' type='Number' isStatic='true' isConst='true' defaultValue='7' >
<description><![CDATA[

		 The node is a ProcessingInstruction.

		 

		 <p>The node represents a processing instruction from the XML document. A processing instruction node cannot have any

		 child nodes. A processing instruction node can appear as the child of the Document, DocumentFragment, Element, and EntityReference nodes. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-PROCESSING_INSTRUCTION_NODE W3C - Node.PROCESSING_INSTRUCTION_NODE

		 

		 ]]></see>
</field>
<field name='TEXT_NODE' fullname='dom.core:Node/TEXT_NODE' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The node is a Text node.

		 

		 <p>The node represents the text content of a tag. A text node cannot have any child nodes. A text node can appear as 

		 the child node of the Attribute, DocumentFragment, Element, and EntityReference nodes. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa926537.aspx MSDN - nodeType Property 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Node#Constants MDC - Node Constants

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-TEXT_NODE W3C - Node.TEXT_NODE

		 

		 ]]></see>
</field>
<classRec name='ProcessingInstruction' fullname='dom.core:ProcessingInstruction' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\ProcessingInstruction.as' namespace='dom.core' access='public' baseclass='dom.core:Node' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A processing instruction provides an opportunity for application-specific 

	 instructions to be embedded within XML and which can be ignored by XML 

	 processors which do not support processing their instructions (outside of 

	 their having a place in the DOM).

	 

	 <p>A Processing instruction is distinct from a XML Declaration which is used 

	 for other information about the document such as encoding and which appear 

	 (if it does) as the first item in the document.</p>

	 

	 <p>User-defined processing instructions cannot begin with 'xml', as these are 

	 reserved (e.g., as used in &lt;?xml-stylesheet ?&gt;).</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms765480%28VS.85%29.aspx MSDN - IXMLDOMProcessingInstruction

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/ProcessingInstruction MDC - ProcessingInstruction

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1004215813 W3C - ProcessingInstruction

	 

	 ]]></see>
<metadata>
	<Event owner='dom.core:ProcessingInstruction' name='DOMCharacterDataModified' type='dom.events.MutationEvent' >
<description><![CDATA[

	 Occurs after CharacterData.data or ProcessingInstruction.data have been

	 modified but the node itself has not been inserted or deleted. The target 

	 node of this event is the CharacterData node or the 

	 ProcessingInstruction node.

	 
	 ]]></description>
<eventType><![CDATA[DOMCharacterDataModified

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:ProcessingInstruction' name='DOMNodeInsertedIntoDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been inserted into a document, either through direct insertion 

	 of the node or insertion of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 after the insertion has taken place. The target node of this event is the 

	 node being inserted. If the node is being directly inserted, the event type 

	 DOMNodeInserted occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInsertedIntoDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:ProcessingInstruction' name='DOMNodeRemovedFromDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from a document, either through direct removal 

	 of the node or removal of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 before the removal takes place. The target node of this event type is 

	 the node being removed. If the node is being directly removed, the event 

	 type DOMNodeRemoved occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemovedFromDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:ProcessingInstruction' name='DOMNodeRemoved' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from its parent node or, in case of Attr nodes, 

	 removed from its ownerElement. This event is dispatched before the 

	 removal takes place. The target node of this event is the node 

	 being removed.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemoved

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:ProcessingInstruction' name='DOMNodeInserted' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been added as a child of another node or, in case of Attr 

	 nodes, has been added to an Element. This event is dispatched after 

	 the insertion has taken place. The target node of this event is the 

	 node being inserted.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInserted

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='data' fullname='dom.core:ProcessingInstruction/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 First non-whitespace character after target and before ?>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757835%28VS.85%29.aspx MSDN - data Property (IXMLDOMProcessingInstruction)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/ProcessingInstruction MDC - ProcessingInstruction

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-837822393 W3C - ProcessingInstruction.data

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.

		 

		 ]]></throws>
</method>
<method name='target' fullname='dom.core:ProcessingInstruction/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 After the &lt;? and before whitespace delimiting it from data

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757903%28VS.85%29.aspx MSDN - target Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/ProcessingInstruction MDC - ProcessingInstruction

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1478689192 W3C - ProcessingInstruction.target

		 

		 ]]></see>
</method>
<classRec name='Entity' fullname='dom.core:Entity' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\Entity.as' namespace='dom.core' access='public' baseclass='dom.core:Node' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface represents a known entity, either parsed or unparsed, in 

	 an XML document. Note that this models the entity itself not the entity 

	 declaration.

	 

	 <p>The nodeName attribute that is inherited from Node contains the name of 

	 the entity.</p>

	 

	 <p><strong>Note:</strong> An Entity node does not have any parent.</p>

	 

	 <p><strong>Note:</strong> If the entity contains an unbound namespace prefix, the namespaceURI of 

	 the corresponding node in the Entity node subtree is null. The same is true 

	 for EntityReference nodes that refer to this entity, when they are created 

	 using the createEntityReference method of the Document interface.</p>

	 

	 <p><strong>Note (Mozilla):</strong> This is not implemented in Mozilla</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms766394%28VS.85%29.aspx MSDN - IXMLDOMEntity

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Entity MDC - Entity

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-527DCFF2 W3C - Entity

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</classRec>
<method name='inputEncoding' fullname='dom.core:Entity/inputEncoding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 An attribute specifying the encoding used for this entity at the time of 

		 parsing, when it is an external parsed entity. This is null if it an 

		 entity from the internal subset or if it is not known.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Entity.inputEncoding MDC - Entity.inputEncoding

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Entity3-inputEncoding W3C - Entity.inputEncoding

		 

		 ]]></see>
</method>
<method name='notationName' fullname='dom.core:Entity/notationName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 For unparsed entities, the name of the notation for the entity. For parsed 

		 entities, this is null.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757830%28VS.85%29.aspx MSDN - notationName Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Entity.notationName MDC - Entity.notationName

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6ABAEB38 W3C - Entity.notationName

		 

		 ]]></see>
</method>
<method name='publicId' fullname='dom.core:Entity/publicId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The public identifier associated with the entity if specified, and null otherwise.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms760313%28VS.85%29.aspx MSDN - publicId Property (IXMLDOMEntity)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Entity.publicId MDC - Entity.publicId

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D7303025 W3C - Entity.publicId

		 

		 ]]></see>
</method>
<method name='systemId' fullname='dom.core:Entity/systemId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The system identifier associated with the entity if specified, and null 

		 otherwise. This may be an absolute URI or not.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms764731%28VS.85%29.aspx MSDN - systemId Property (IXMLDOMEntity)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Entity.systemId MDC - Entity.systemId

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D7C29F3E W3C - Entity.systemId

		 

		 ]]></see>
</method>
<method name='xmlEncoding' fullname='dom.core:Entity/xmlEncoding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 An attribute specifying, as part of the text declaration, the encoding of 

		 this entity, when it is an external parsed entity. This is null otherwise.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Entity.xmlEncoding MDC - Entity.xmlEncoding

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Entity3-encoding W3C - Entity.xmlEncoding

		 

		 ]]></see>
</method>
<method name='xmlVersion' fullname='dom.core:Entity/xmlVersion/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 An attribute specifying, as part of the text declaration, the version number 

		 of this entity, when it is an external parsed entity. This is null otherwise.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Entity.xmlVersion MDC - Entity.xmlVersion

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Entity3-version W3C - Entity.xmlVersion

		 

		 ]]></see>
</method>
<classRec name='Notation' fullname='dom.core:Notation' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\Notation.as' namespace='dom.core' access='public' baseclass='dom.core:Node' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface represents a notation declared in the DTD. A notation 

	 either declares, by name, the format of an unparsed entity, or is used for formal 

	 declaration of processing instruction targets. The nodeName attribute inherited from 

	 Node is set to the declared name of the notation.

	 

	 <p><strong>Note:</strong> A Notation node does not have any parent.</p>

	 

	 <p><strong>Note (Mozilla):</strong> This is not implemented in Mozilla.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms759198%28VS.85%29.aspx MSDN - IXMLDOMNotation

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Notation MDC - Notation

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5431D1B9 W3C - Notation

	 

	 ]]></see>
</classRec>
<method name='publicId' fullname='dom.core:Notation/publicId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The public identifier of this notation. If the public identifier was not 

		 specified, this is null.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms765397%28VS.85%29.aspx MSDN - publicId Property (IXMLDOMNotation)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Notation.publicId MDC - Notation.publicId

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-54F2B4D0 W3C - Notation.publicId

		 

		 ]]></see>
</method>
<method name='systemId' fullname='dom.core:Notation/systemId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The system identifier of this notation. If the system identifier was not 

		 specified, this is null. This may be an absolute URI or not.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms754668%28VS.85%29.aspx MSDN - systemId Property (IXMLDOMNotation)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Notation.systemId MDC - Notation.systemId

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-E8AAB1D0 W3C - Notation.systemId

		 

		 ]]></see>
</method>
<classRec name='EntityReference' fullname='dom.core:EntityReference' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\EntityReference.as' namespace='dom.core' access='public' baseclass='dom.core:Node' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Read-only reference to an entity reference in the DOM tree.

	 

	 <p><strong>Note:</strong> Character references and references to predefined entities 

	 are considered to be expanded by the HTML or XML processor so that 

	 characters are represented by their Unicode equivalent rather than by an 

	 entity reference. Moreover, the XML processor may completely expand 

	 references to entities while building the Document, instead of providing 

	 EntityReference  nodes. If it does provide such nodes, then for an 

	 EntityReference node that represents a reference to a known entity an Entity 

	 exists, and the subtree of the EntityReference node is a copy of the Entity 

	 node subtree. However, the latter may not be true when an entity contains 

	 an unbound namespace prefix. In such a case, because the namespace prefix 

	 resolution depends on where the entity reference is, the descendants of the 

	 EntityReference node may be bound to different namespace URIs. When an 

	 EntityReference node represents a reference to an unknown entity, the node has 

	 no children and its replacement value, when used by Attr.value for example, 

	 is empty.</p>

	 

	 <p><strong>Note:</strong> As for Entity nodes, EntityReference nodes and all their descendants are readonly.</p>

	 

	 <p><strong>Note:</strong> EntityReference nodes may cause element content and attribute value normalization 

	 problems when, such as in XML 1.0 and XML Schema, the normalization is performed 

	 after entity reference are expanded.</p>

	 

	 <p><strong>Note (Mozilla):</strong> This is not implemented in Mozilla.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms755427%28VS.85%29.aspx MSDN - IXMLDOMEntityReference

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/EntityReference MDC - EntityReference

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-11C98490 W3C - EntityReference

	 

	 ]]></see>
<metadata>
	<Event owner='dom.core:EntityReference' name='DOMNodeInsertedIntoDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been inserted into a document, either through direct insertion 

	 of the node or insertion of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 after the insertion has taken place. The target node of this event is the 

	 node being inserted. If the node is being directly inserted, the event type 

	 DOMNodeInserted occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInsertedIntoDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:EntityReference' name='DOMNodeRemovedFromDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from a document, either through direct removal 

	 of the node or removal of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 before the removal takes place. The target node of this event type is 

	 the node being removed. If the node is being directly removed, the event 

	 type DOMNodeRemoved occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemovedFromDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:EntityReference' name='DOMNodeRemoved' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from its parent node or, in case of Attr nodes, 

	 removed from its ownerElement. This event is dispatched before the 

	 removal takes place. The target node of this event is the node 

	 being removed.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemoved

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:EntityReference' name='DOMNodeInserted' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been added as a child of another node or, in case of Attr 

	 nodes, has been added to an Element. This event is dispatched after 

	 the insertion has taken place. The target node of this event is the 

	 node being inserted.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInserted

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<classRec name='CharacterData' fullname='dom.core:CharacterData' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\CharacterData.as' namespace='dom.core' access='public' baseclass='dom.core:Node' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Provides text manipulation methods that are used by several objects.

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms767515%28VS.85%29.aspx MSDN - IXMLDOMCharacterData

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/CharacterData MDC - CharacterData

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-FF21A306 W3C - CharacterData

	 

	 ]]></see>
<metadata>
	<Event owner='dom.core:CharacterData' name='DOMCharacterDataModified' type='dom.events.MutationEvent' >
<description><![CDATA[

	 Occurs after CharacterData.data or ProcessingInstruction.data have been

	 modified but the node itself has not been inserted or deleted. The target 

	 node of this event is the CharacterData node or the 

	 ProcessingInstruction node.

	 
	 ]]></description>
<eventType><![CDATA[DOMCharacterDataModified

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:CharacterData' name='DOMNodeInsertedIntoDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been inserted into a document, either through direct insertion 

	 of the node or insertion of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 after the insertion has taken place. The target node of this event is the 

	 node being inserted. If the node is being directly inserted, the event type 

	 DOMNodeInserted occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInsertedIntoDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:CharacterData' name='DOMNodeRemovedFromDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from a document, either through direct removal 

	 of the node or removal of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 before the removal takes place. The target node of this event type is 

	 the node being removed. If the node is being directly removed, the event 

	 type DOMNodeRemoved occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemovedFromDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:CharacterData' name='DOMNodeRemoved' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from its parent node or, in case of Attr nodes, 

	 removed from its ownerElement. This event is dispatched before the 

	 removal takes place. The target node of this event is the node 

	 being removed.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemoved

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:CharacterData' name='DOMNodeInserted' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been added as a child of another node or, in case of Attr 

	 nodes, has been added to an Element. This event is dispatched after 

	 the insertion has taken place. The target node of this event is the 

	 node being inserted.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInserted

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='appendData' fullname='dom.core:CharacterData/appendData' isStatic='false' isFinal='false' isOverride='false'  param_names='arg' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Append the string to the end of the character data of the node. 

		 Upon success, data provides access to the concatenation of data and 

		 the DOMString specified.

		 

		 ]]></description>
<param><![CDATA[arg The DOMString to append.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms756985%28VS.85%29.aspx MSDN - appendData Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/CharacterData.appendData MDC - CharacterData.appendData()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-32791A2F W3C - CharacterData.appendData()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
</method>
<method name='deleteData' fullname='dom.core:CharacterData/deleteData' isStatic='false' isFinal='false' isOverride='false'  param_names='offset;count' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Remove a range of 16-bit units  from the node. Upon success, data and 

		 length reflect the change.

		 

		 ]]></description>
<param><![CDATA[offset The offset from which to start removing.

		 ]]></param>
<param><![CDATA[count The number of 16-bit units to delete. If the sum of offset 

		 and count exceeds length then all 16-bit units from offset  to the end of 

		 the data are deleted.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms754600%28VS.85%29.aspx MSDN - deleteData Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/CharacterData.deleteData MDC - CharacterData.deleteData()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-7C603781 W3C - CharacterData.deleteData()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified 

		 offset is negative or greater than the number of 16-bit units in data,

		 or if the specified count is negative.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
</method>
<method name='insertData' fullname='dom.core:CharacterData/insertData' isStatic='false' isFinal='false' isOverride='false'  param_names='offset;arg' param_types='Number;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Insert a string at the specified 16-bit unit offset.

		 

		 ]]></description>
<param><![CDATA[offset The character offset at which to insert.

		 ]]></param>
<param><![CDATA[arg The DOMString to insert.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms762794%28VS.85%29.aspx MSDN - insertData Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/CharacterData.insertData MDC - CharacterData.insertData()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-3EDB695F W3C - CharacterData.insertData()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified 

		 offset is negative or greater than the number of 16-bit units in data.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
</method>
<method name='replaceData' fullname='dom.core:CharacterData/replaceData' isStatic='false' isFinal='false' isOverride='false'  param_names='offset;count;arg' param_types='Number;Number;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Replace the characters starting at the specified 16-bit unit offset 

		 with the specified string.

		 

		 ]]></description>
<param><![CDATA[offset The offset from which to start replacing.

		 ]]></param>
<param><![CDATA[count The number of 16-bit units to replace. If the sum of 

		 offset and count exceeds length, then all 16-bit units to the end of 

		 the data are replaced; (i.e., the effect is the same as a remove 

		 method call with the same range, followed by an append method invocation).

		 ]]></param>
<param><![CDATA[arg The DOMString with which the range must be replaced.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms766416%28VS.85%29.aspx MSDN - replaceData Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/CharacterData.replaceData MDC - CharacterData.replaceData()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-E5CBA7FB W3C - CharacterData.replaceData()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified 

		 offset is negative or greater than the number of 16-bit units in data, 

		 or if the specified count is negative.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
</method>
<method name='substringData' fullname='dom.core:CharacterData/substringData' isStatic='false' isFinal='false' isOverride='false'  param_names='offset;count' param_types='Number;Number' param_defaults='undefined;undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Extracts a range of data from the node.

		 

		 ]]></description>
<param><![CDATA[offset Start offset of substring to extract.

		 ]]></param>
<param><![CDATA[count The number of 16-bit units to extract.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[The specified substring. If the sum of offset and count exceeds 

		 the length, then all 16-bit units to the end of the data are returned.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms755744%28VS.85%29.aspx MSDN - substringData Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/CharacterData.substringData MDC - CharacterData.substringData()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6531BCCF W3C - CharacterData.substringData()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified 

		 offset is negative or greater than the number of 16-bit units in data, 

		 or if the specified count is negative.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException DOMSTRING_SIZE_ERR: Raised if the specified 

		 range of text does not fit into a DOMString.

		 

		 ]]></throws>
</method>
<method name='data' fullname='dom.core:CharacterData/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The character data of the node that implements this interface.

		 

		 <p>The DOM implementation may not put arbitrary limits on the amount of data 

		 that may be stored in a CharacterData node. However, implementation 

		 limits may mean that the entirety of a node's data may not fit into 

		 a single DOMString. In such cases, the user may call substringData 

		 to retrieve the data in appropriately sized pieces.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms765506%28VS.85%29.aspx MSDN - data Property (IXMLDOMCharacterData)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/CharacterData.data MDC - CharacterData.data

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-72AB8359 W3C - CharacterData.data

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised when 

		 the node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException DOMSTRING_SIZE_ERR: Raised when it would 

		 return more characters than fit in a DOMString variable on the 

		 implementation platform.

		 

		 ]]></throws>
</method>
<method name='length' fullname='dom.core:CharacterData/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of 16-bit units that are available through data and the 

		 substringData method below. This may have the value zero, i.e., 

		 CharacterData nodes may be empty.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms760351%28VS.85%29.aspx MSDN - length Property (IXMLDOMCharacterData)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/CharacterData.length MDC - CharacterData.length

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-7D61178C W3C - CharacterData.length

		 

		 ]]></see>
</method>
<method name='data' fullname='dom.core:CharacterData/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='Attr' fullname='dom.core:Attr' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\Attr.as' namespace='dom.core' access='public' baseclass='dom.core:Node' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This type represents a DOM element's attribute as an object. In most DOM methods, you 

	 will probably directly retrieve the attribute as a string (e.g., getAttribute), but 

	 certain functions (e.g., getAttributeNode()) or means of iterating give Attr types.

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/dd347043%28VS.85%29.aspx MSDN - Attr Prototype

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Attr MDC - Attr

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-637646024 W3C - Attr

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
<metadata>
	<Event owner='dom.core:Attr' name='DOMNodeInsertedIntoDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been inserted into a document, either through direct insertion 

	 of the node or insertion of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 after the insertion has taken place. The target node of this event is the 

	 node being inserted. If the node is being directly inserted, the event type 

	 DOMNodeInserted occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInsertedIntoDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Attr' name='DOMNodeRemovedFromDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from a document, either through direct removal 

	 of the node or removal of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 before the removal takes place. The target node of this event type is 

	 the node being removed. If the node is being directly removed, the event 

	 type DOMNodeRemoved occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemovedFromDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Attr' name='DOMNodeRemoved' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from its parent node or, in case of Attr nodes, 

	 removed from its ownerElement. This event is dispatched before the 

	 removal takes place. The target node of this event is the node 

	 being removed.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemoved

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Attr' name='DOMNodeInserted' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been added as a child of another node or, in case of Attr 

	 nodes, has been added to an Element. This event is dispatched after 

	 the insertion has taken place. The target node of this event is the 

	 node being inserted.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInserted

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Attr' name='DOMSubtreeModified' type='dom.events.MutationEvent' >
<description><![CDATA[

	 This is a general event for notification of all changes to the 

	 document. It can be used instead of the more specific mutation and 

	 mutation name events listed below. It may be dispatched after a 

	 single modification to the document or, at the implementation's 

	 discretion, after multiple changes have occurred. The latter use 

	 should generally be used to accommodate multiple changes which occur 

	 either simultaneously or in rapid succession. The target of this 

	 event is the lowest common parent of the changes which have taken 

	 place. This event is dispatched after any other events caused by the 

	 mutation(s) have occurred.

	 
	 ]]></description>
<eventType><![CDATA[DOMSubtreeModified

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='expando' fullname='dom.core:Attr/expando/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.

		 

		 <p><strong>Note:</strong> You can extend the properties on an object by creating arbitrary properties 

		 with values. You should be careful, however, because you can unintentionally set a property value when 

		 scripting in a case-sensitive language such as Microsoft JScript. For example, if the property value 

		 is borderColor and you type the value "bordercolor = 'blue'", you have, in fact, created another property 

		 on the style object called bordercolor with the value 'blue'. If you query the value of the property, 

		 the value "blue" is returned. However, the borders for the element do not turn blue.</p>

		 

		 <p><strong>Note:</strong> Setting the  expando property of the  document object to false precludes the 

		 functionality of all expandos within the document.</p>

		 

		 ]]></description>
<default><![CDATA[true

		 

		 ]]></default>
<example><![CDATA[
		 The following example demonstrates that, by setting the expando property of the document object to false, 

		 the document ignores the  UNSELECTABLE expando on the  span and allows you to select the text.

		 <listing>

		 &lt;html&gt;

		 

		 &lt;head&gt;

		 &lt;script type="text/javascript"&gt;

		 	//Set the expando property to false.

		 	document.expando = false;

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body&gt;

		 

		 &lt;div&gt;

		 &lt;span id="oSpan" unselectable="on"&gt;This text should be selectable.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;/body&gt;

		 

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533747%28VS.85%29.aspx MSDN - expando Property

		 

		 ]]></see>
</method>
<method name='isId' fullname='dom.core:Attr/isId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns whether this attribute is known to be of type ID (i.e. to 

		 contain an identifier for its owner element) or not. 

		 

		 <p>When it is and its value is unique, the ownerElement of this 

		 attribute can be retrieved using the method Document.getElementById.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Attr.isId MDC - Attr.isId

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-isId W3C - Attr.isId

		 

		 ]]></see>
</method>
<method name='name' fullname='dom.core:Attr/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the name of this attribute. If Node.localName is different 

		 from null, this attribute is a qualified name.

		 

		 <p><strong>Note (IE8):</strong>  Internet Explorer 8 and later. In IE8 mode, dynamically setting the name attribute on an input type=radio button correctly applies that button to the same named group.</p>

		 

		 <p><strong>Note (IE):</strong> When submitting a form, use the name property to bind the value of the control. The name is not the value displayed for the input type=button, input type=reset, and input type=submit input types. The internally stored value is submitted with the form, not the displayed value.</p>

		 

		 <p><strong>Note (IE):</strong> Microsoft JScript allows the name to be changed at run time. This does not cause the name in the programming model to change in the collection of elements, but it does change the name used for submitting elements.</p>

		 

		 <p><strong>Note (IE8):</strong>  Internet Explorer 8 and later can set the NAME attribute at run time on elements dynamically created with the createElement method. To create an element with a NAME attribute in earlier versions of Internet Explorer, include the attribute and its value when using the createElement method.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var inp = document.createElement('input');

		 inp.setAttribute('type',  'radio');

		 inp.setAttribute('name',  'Q'+count);

		 inp.setAttribute('value', answers[i]);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534184%28VS.85%29.aspx MSDN - NAME Attribute | name Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Attr.name MDC - Attr.name

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1112119403 W3C - Attr.name

		 

		 ]]></see>
</method>
<method name='ownerElement' fullname='dom.core:Attr/ownerElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 The Element node this attribute is attached to or null if this 

		 attribute is not in use.

		 

		 <p><strong>Note (IE8):</strong> This property is new as of Internet Explorer 8. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/dd347028%28VS.85%29.aspx MSDN - ownerElement Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Attr.ownerElement MDC - Attr.ownerElement

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-ownerElement W3C - Attr.ownerElement

		 

		 ]]></see>
</method>
<method name='schemeTypeInfo' fullname='dom.core:Attr/schemeTypeInfo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:TypeInfo'>
<description><![CDATA[

		 The type information associated with this attribute.

		 

		 <p>While the type 

		 information contained in this attribute is guarantee to be correct 

		 after loading the document or invoking Document.normalizeDocument(), 

		 schemaTypeInfo may not be reliable if the node was moved. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Attr.schemaTypeInfo MDC - Attr.schemeTypeInfo

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-schemaTypeInfo W3C - Attr.schemeTypeInfo

		 

		 ]]></see>
</method>
<method name='specified' fullname='dom.core:Attr/specified/get' isStatic='false' isFinal='false' isOverride='true'  result_type='Boolean'>
<description><![CDATA[

		 True if this attribute was explicitly given a value in the instance 

		 document, false otherwise. 

		 

		 <p>If the application changed the value of 

		 this attribute node (even if it ends up having the same value as the 

		 default value) then it is set to true. The implementation may handle 

		 attributes with default values from other schemas similarly but 

		 applications should use Document.normalizeDocument() to guarantee 

		 this information is up-to-date.</p>

		 

		 ]]></description>
<example><![CDATA[
		 his example uses the specified property to determine the attributes set for an object. 

		 The function checks each attribute, and lists all of the attributes of the object and the 

		 value of each attribute. In addition, each attribute that is set is displayed.

		 <listing>

		 &lt;script&gt;

		 function fnFindSpecified(){

		 	var oAttributes=oList.attributes;

		 	alert(oAttributes(0).nodeName);

		 	for(var i=0;i&lt;oAttributes.length;i++){

		 		var oNode=document.createElement("LI");

		 		var oNodeValue=document.createTextNode(i + " "

		 			+ oAttributes(i).nodeName + " = "

		 			+ oAttributes(i).nodeValue);

		 		oList.appendChild(oNode);

		 		oNode.appendChild(oNodeValue);

		 		if(oAttributes(i).nodeValue!=null){

         			alert(oAttributes(i).nodeName

         			+ " specified: " + oAttributes(i).specified);

		 		}

		 	}

		 }

		 &lt;/script&gt;

		 

		 &lt;ul id=oList onclick="fnFindSpecified()"&gt;

		 &lt;li&gt;Click to Find Specified Attributes&lt;/li&gt;

		 &lt;/ul&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534637%28VS.85%29.aspx MSDN - specified Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Attr.specified MDC - Attr.specified

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-862529273 W3C - Attr.specified

		 

		 ]]></see>
</method>
<method name='value' fullname='dom.core:Attr/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 On retrieval, the value of the attribute is returned as a string. 

		 Character and general entity references are replaced with their 

		 values.

		 

		 <p>On setting, this creates a Text node with the unparsed contents of 

		 the string, i.e. any characters that an XML processor would 

		 recognize as markup are instead treated as literal text.</p>

		 

		 <p><strong>Note (IE8):</strong>  Internet Explorer 8 or later. In IE8 mode, the value property 

		 is correctly reported as a canonical attribute name. For example, &lt;input type="text" readonly&gt; 

		 and &lt;input type="text" readonly="readonly"&gt; would both set the input text field to read-only. 

		 In IE8 mode, the value is evaluated as a cannonical value, "readonly". In earlier document 

		 compatibility modes, it is evaluated as a Boolean value, true.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535129%28VS.85%29.aspx MSDN - value Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Attr.value MDC - Attr.value

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-221662474 W3C - Attr.value

		 ]]></see>
<see><![CDATA[dom.core.Element#getAttribute

		 ]]></see>
<see><![CDATA[dom.core.Element#setAttribute

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised when 

		 the node is readonly.

		 

		 ]]></throws>
</method>
<method name='expando' fullname='dom.core:Attr/expando/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='value' fullname='dom.core:Attr/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='DocumentType' fullname='dom.core:DocumentType' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DocumentType.as' namespace='dom.core' access='public' baseclass='dom.core:Node' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Each Document has a doctype attribute whose value is either null or a 

	 DocumentType  object. The DocumentType interface in the DOM Core provides 

	 an interface to the list of entities that are defined for the document, 

	 and little else because the effect of namespaces and the various XML schema 

	 efforts on DTD representation are not clearly understood as of this writing.

	 

	 <p><strong>Note:</strong> DOM Level 3 doesn't support editing DocumentType nodes. DocumentType nodes 

	 are read-only.</p>

	 

	 <p><strong>Note (Mozilla):</strong> This interface is not fully supported in Mozilla at present, 

	 including for indicating internalSubset information which Gecko generally does otherwise support.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms762752%28VS.85%29.aspx MSDN - IXMLDOMDocumentType

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DocumentType MDC - DocumentType

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-412266927 W3C - DocumentType

	 

	 ]]></see>
<modified><![CDATA[DOMCore 2

	 ]]></modified>
<metadata>
	<Event owner='dom.core:DocumentType' name='DOMNodeInsertedIntoDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been inserted into a document, either through direct insertion 

	 of the node or insertion of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 after the insertion has taken place. The target node of this event is the 

	 node being inserted. If the node is being directly inserted, the event type 

	 DOMNodeInserted occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInsertedIntoDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:DocumentType' name='DOMNodeRemovedFromDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from a document, either through direct removal 

	 of the node or removal of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 before the removal takes place. The target node of this event type is 

	 the node being removed. If the node is being directly removed, the event 

	 type DOMNodeRemoved occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemovedFromDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:DocumentType' name='DOMNodeRemoved' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from its parent node or, in case of Attr nodes, 

	 removed from its ownerElement. This event is dispatched before the 

	 removal takes place. The target node of this event is the node 

	 being removed.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemoved

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:DocumentType' name='DOMNodeInserted' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been added as a child of another node or, in case of Attr 

	 nodes, has been added to an Element. This event is dispatched after 

	 the insertion has taken place. The target node of this event is the 

	 node being inserted.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInserted

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='entities' fullname='dom.core:DocumentType/entities/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NamedNodeMap'>
<description><![CDATA[

		 A NamedNodeMap containing the general entities, both external and internal, 

		 declared in the DTD. Parameter entities are not contained. Duplicates 

		 are discarded.

		 

		 <p>Internal (Parsed) Entities define entity references in order to replace certain strings by a replacement text. The content of the entity is given in the declaration.</p>

		 

		 <p>External (Parsed) Entities refer to external storage objects.</p>

		 

		 <p><strong>Note:</strong> The DOM Level 2 does not support editing entities, therefore entities 

		 cannot be altered in any way.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;!DOCTYPE ex SYSTEM "ex.dtd" [

		 	&lt;!ENTITY bat "bat"&gt;       

		 	&lt;!ENTITY bar "bar"&gt;       

		 ]&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757817%28VS.85%29.aspx MSDN - entities Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DocumentType.entities MDC - DocumentType.entities

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1788794630 W3C - DocumentType.entities

		 

		 ]]></see>
</method>
<method name='internalSubset' fullname='dom.core:DocumentType/internalSubset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The internal subset as a string, or null if there is none. This is does 

		 not contain the delimiting square brackets.

		 

		 <p><strong>Note:</strong> The actual content returned depends on how much information is 

		 available to the implementation. This may vary depending on various 

		 parameters, including the XML processor used to build the document.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"

		 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"

		 	[

		 	&lt;!ATTLIST input validate CDATA #IMPLIED&gt;

		 	&lt;!ATTLIST input range CDATA #IMPLIED&gt;

		 ]&gt;

		 // internalSubset : &lt;!ATTLIST input validate CDATA #IMPLIED&gt;&lt;!ATTLIST input range CDATA #IMPLIED&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DocumentType.internalSubset MDC - DocumentType.internalSubset

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-internalSubset W3C - DocumentType.internalSubset

		 

		 ]]></see>
</method>
<method name='name' fullname='dom.core:DocumentType/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The name of DTD; i.e., the name immediately following the DOCTYPE keyword.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;

		 // name : html</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms754603%28VS.85%29.aspx MSDN - name Property (IXMLDOMDocumentType)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DocumentType.name MDC - DocumentType.name

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1844763134 W3C - DocumentType.name

		 

		 ]]></see>
</method>
<method name='notations' fullname='dom.core:DocumentType/notations/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NamedNodeMap'>
<description><![CDATA[

		 A NamedNodeMap containing the notations declared in the DTD. Duplicates 

		 are discarded. Every node in this map also implements the Notation interface.

		 

		 <p><strong>Note:</strong> The DOM Level 2 does not support editing notations, therefore notations 

		 cannot be altered in any way.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;!DOCTYPE ex SYSTEM "ex.dtd" [

		 	&lt;!NOTATION GIF system "image/gif"&gt;    

		 ]&gt;

		 </listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms762714%28VS.85%29.aspx MSDN - notations Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DocumentType.notations MDC - DocumentType.notations

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D46829EF W3C - DocumentType.notations

		 

		 ]]></see>
</method>
<method name='publicId' fullname='dom.core:DocumentType/publicId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The public identifier of the external subset.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;

		 // publicId : -//W3C//DTD XHTML 1.0 Transitional//EN</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms760313%28VS.85%29.aspx MSDN - publicId Property (IXMLDOMEntity)

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms765397%28VS.85%29.aspx MSDN - publicId Property (IXMLDOMNotation)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DocumentType.publicId MDC - DocumentType.publicId

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-publicId W3C - DocumentType.publicId

		 

		 ]]></see>
</method>
<method name='systemId' fullname='dom.core:DocumentType/systemId/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The system identifier of the external subset. This may be an absolute URI or not.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;

		 // systemId : http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms764731%28VS.85%29.aspx MSDN - systemId Property (IXMLDOMEntity)

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms754668%28VS.85%29.aspx MSDN - systemId Property (IXMLDOMNotation)

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DocumentType.systemId MDC - DocumentType.systemId

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-systemId W3C - DocumentType.systemId

		 

		 ]]></see>
</method>
<classRec name='DocumentFragment' fullname='dom.core:DocumentFragment' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\DocumentFragment.as' namespace='dom.core' access='public' baseclass='dom.core:Node' interfaces='selectors:NodeSelector' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A DocumentFragment is a minimal document object that has no parent. 

	 

	 <p>It is used as a light-weight version of document to store well-formed 

	 or potentially non-well-formed fragments of XML.</p>

	 

	 <p>Various other methods can take a document fragment as an argument (e.g., 

	 any Node interface methods such as appendChild and insertBefore), in 

	 which case the children of the fragment are appended or inserted, not 

	 the fragment itself.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms759155%28VS.85%29.aspx MSDN - IXMLDOMDocumentFragment

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/DocumentFragment MDC - DocumentFragment

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-B63ED1A3 W3C - DocumentFragment

	 

	 ]]></see>
<metadata>
	<Event owner='dom.core:DocumentFragment' name='DOMSubtreeModified' type='dom.events.MutationEvent' >
<description><![CDATA[

	 This is a general event for notification of all changes to the 

	 document. It can be used instead of the more specific mutation and 

	 mutation name events listed below. It may be dispatched after a 

	 single modification to the document or, at the implementation's 

	 discretion, after multiple changes have occurred. The latter use 

	 should generally be used to accommodate multiple changes which occur 

	 either simultaneously or in rapid succession. The target of this 

	 event is the lowest common parent of the changes which have taken 

	 place. This event is dispatched after any other events caused by the 

	 mutation(s) have occurred.

	 
	 ]]></description>
<eventType><![CDATA[DOMSubtreeModified

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='querySelector' fullname='dom.core:DocumentFragment/querySelector' isStatic='false' isFinal='false' isOverride='false'  param_names='selectors' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 

		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;Selectors API Example&lt;/title&gt;

		 	&lt;/head&gt;

		 	&lt;body&gt;

		 

		 		&lt;div id="foo"&gt;

		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;

		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;

		 		&lt;/div&gt;

		 		&lt;div id="bar"&gt;

		 			&lt;p&gt;...&lt;/p&gt;

		 		&lt;/div&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 x would contain the first element in the document with an ID of either foo or bar (or both). In the sample document above, it would select the div element with the ID of foo because it is first in document order.

		 <listing>var x = document.querySelector("#foo, #bar");</listing>

		 

		 ]]></example>
<param><![CDATA[selectors One or more selectors

		 ]]></param>
<playerversion><![CDATA[Selectors 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The first matching Element node within the node’s subtree. If there is no such node, returns null. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/selectors-api/#nodeselector W3C Selectors API

		 

		 ]]></see>
</method>
<method name='querySelectorAll' fullname='dom.core:DocumentFragment/querySelectorAll' isStatic='false' isFinal='false' isOverride='false'  param_names='selectors' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 

		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;Selectors API Example&lt;/title&gt;

		 	&lt;/head&gt;

		 	&lt;body&gt;

		 

		 		&lt;div id="foo"&gt;

		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;

		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;

		 		&lt;/div&gt;

		 		&lt;div id="bar"&gt;

		 			&lt;p&gt;...&lt;/p&gt;

		 		&lt;/div&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 The following example would select all p elements in the document that have a class of either "error" or "warning".

		 <listing>var alerts = document.querySelectorAll("p.warning, p.error");</listing>

		 

		 ]]></example>
<param><![CDATA[selectors One or more selectors

		 ]]></param>
<playerversion><![CDATA[Selectors 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<since><![CDATA[DOMCore 3

		 

		 ]]></since>
<return><![CDATA[A NodeList containing all of the matching Element nodes within the node’s subtree, in document order. If there are no such nodes, returns an empty NodeList.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/selectors-api/#nodeselector W3C Selectors API

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_core.html#gettingelements  Quirksmode: Getting elements

		 

		 ]]></see>
</method>
<classRec name='Element' fullname='dom.core:Element' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\Element.as' namespace='dom.core' access='public' baseclass='dom.core:Node' interfaces='cssom.view:ElementView;elementtraversal:ElementTraversal;selectors:NodeSelector' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Element interface represents an element in an HTML or XML document. 

	 

	 <p>Elements may have attributes associated with them; since the Element 

	 interface inherits from Node, the generic Node interface attribute 

	 attributes may be used to retrieve the set of all attributes for an 

	 element. There are methods on the Element interface to retrieve either 

	 an Attr object by name or an attribute value by name. In XML, where an 

	 attribute value may contain entity references, an Attr object should be 

	 retrieved to examine the possibly fairly complex sub-tree representing 

	 the attribute value. On the other hand, in HTML, where all attributes 

	 have simple string values, methods to directly access an attribute value 

	 can safely be used as a convenience.</p>

	 

	 <p>Note: In DOM Level 2, the method normalize is inherited from the Node 

	 interface where it was moved.</p>

	 

	 <p>Includes the <a href="http://www.w3.org/TR/2008/REC-ElementTraversal-20081222/">ElementTraversal Specification</a></p>

	 

	 ]]></description>
<internal><![CDATA[

	 Sources:

	 http://msdn.microsoft.com/en-us/library/dd347058(VS.85).aspx#

	 http://developer.mozilla.org/en/DOM/element

	 http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-745549614

	 

	 ASDoc Help:

	 http://livedocs.adobe.com/flex/3/html/help.html?content=asdoc_6.html

	 http://livedocs.adobe.com/flex/3/html/help.html?content=asdoc_3.html

	 

	 http://www.aptana.com/reference/html/api/Element.html

	 ]]></internal>
<metadata>
	<Event owner='dom.core:Element' name='keyup' type='dom.events.KeyboardEvent' >
<description><![CDATA[

	 A key is released. This event type is device dependent and relies on the 

	 capabilities of the input devices and how they are mapped in the operating 

	 system. This event type is generated after the keyboard mapping but before 

	 the processing of an input method editor. This event should logically 

	 happen after the event keydown is produced. Whether a keyup contributes 

	 or not to the generation of a text event is implementation dependent.

	 
	 ]]></description>
<eventType><![CDATA[keyup

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='keydown' type='dom.events.KeyboardEvent' >
<description><![CDATA[

	 A key is pressed down. This event type is device dependent and relies 

	 on the capabilities of the input devices and how they are mapped in the 

	 operating system. This event type is generated after the keyboard 

	 mapping but before the processing of an input method editor. This event 

	 should logically happen before the event keyup is produced. Whether a 

	 keydown contributes or not to the generation of a text event is 

	 implementation dependent.

	 
	 ]]></description>
<eventType><![CDATA[keydown

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='textInput' type='dom.events.TextEvent' >
<description><![CDATA[

	 One or more characters have been entered. The characters can originate 

	 from a variety of sources. For example, it could be characters 

	 resulting from a key being pressed or released on a keyboard device, 

	 characters resulting from the processing of an input method editor, or 

	 resulting from a voice command. Where a "paste" operation generates a 

	 simple sequence of characters, i.e. a text without any structure or 

	 style information, this event type should be generated as well.

	 
	 ]]></description>
<eventType><![CDATA[textInput

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='blur' type='dom.events.UIEvent' >
<description><![CDATA[

	 An event target loses focus. The focus is taken from the element before 

	 the dispatch of this event type.

	 
	 ]]></description>
<eventType><![CDATA[blur

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='focus' type='dom.events.UIEvent' >
<description><![CDATA[

	 An event target receives focus. The focus is given to the element 

	 before the dispatch of this event type.

	 
	 ]]></description>
<eventType><![CDATA[focus

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='windowZLevel' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[windowZLevel

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMMenuItemActive' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[DOMMenuItemActive

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='ValueChange' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[ValueChange

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='PluginNotFound' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[PluginNotFound

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMTitleChanged' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[DOMTitleChanged

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='PopupWindow' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[PopupWindow

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='fullscreen' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[fullscreen

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMModalDialogClosed' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[DOMModalDialogClosed

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMWillOpenModalDialog' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[DOMWillOpenModalDialog

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMLinkRemoved' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[DOMLinkRemoved

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMLinkAdded' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Undocumented

	 

	 ]]></description>
<eventType><![CDATA[DOMLinkAdded

	 ]]></eventType>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=286013 bug 286013

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='MozMousePixelScroll' type='gecko.events.MouseEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific | Firefox 3.5+</strong> 

	 

	 Regular mouse wheels can only scroll with a per-line resolution. However, there are also 

	 devices that support scrolling with pixel precision, notably Apple MacBook trackpads.

	 

	 When we started supporting pixel scrolling in bug 350471, we added the MozMousePixelScroll 

	 event. It basically works exactly like DOMMouseScroll, with the difference that the detail

	 attribute is in pixels (instead of lines).

	 

	 For backwards compatibility DOMMouseScroll events are sent even if pixel scrolling is used. 

	 Every DOMMouseScroll event can have several associated MozMousePixelScroll events. If 

	 preventDefault() is called on the DOMMouseScroll event, the following associated 

	 MozMousePixelScroll events won't cause any scrolling.

	 

	 When you listen for MozMousePixelScroll events, you shouldn't handle DOMMouseScroll events - 

	 otherwise you'd end up processing the same scroll gesture twice. In order to make it possible 

	 to only listen for MozMousePixelScroll events, Gecko will send MozMousePixelScroll events 

	 even when scrolling with regular mouse wheels. These events will carry a meaningful pixel delta.

	 
	 ]]></description>
<eventType><![CDATA[MozMousePixelScroll

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMMouseScroll' type='gecko.events.MouseEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 The DOMMouseScroll event is sent when the mouse wheel is moved. The target of this 

	 event is the element that was under the mouse pointer when the mouse wheel was 

	 scrolled, similar to the click event.

	 
	 ]]></description>
<eventType><![CDATA[DOMMouseScroll

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='MozAfterPaint' type='gecko.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific | Firefox 3.5+</strong> 

	 

	 The MozAfterPaint event is fired whenever content is repainted.  It is sent to the 

	 document and bubbles up to the window level.

	 

	 ]]></description>
<eventType><![CDATA[MozAfterPaint

	 ]]></eventType>
<see><![CDATA[http://developer.mozilla.org/en/Gecko-Specific_DOM_Events

	 
	 ]]></see>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMWindowClose' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Fired when the window is about to be closed by window.close().

	 
	 ]]></description>
<eventType><![CDATA[DOMWindowClose

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMFrameContentLoaded' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Same as DOMContentLoaded, but also fired for enclosed frames.

	 
	 ]]></description>
<eventType><![CDATA[DOMFrameContentLoaded

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMContentLoaded' type='dom.events.UIEvent' >
<description><![CDATA[

	 <strong>Gecko-Specific</strong> 

	 

	 Fired on a Window object when a document's DOM content is finished loading, 

	 but unlike "load", does not wait until all images are loaded. Used for 

	 example by GreaseMonkey to sneak in to alter pages before they are displayed.

	 

	 This event, as many others on this page, is dispatched to "trusted" targets only; 

	 for example, it is not dispatched to the content of the main browser object in 

	 Firefox, even if it comes from a chrome:/ URI.

	 
	 ]]></description>
<eventType><![CDATA[DOMContentLoaded

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMFocusOut' type='dom.events.UIEvent' >
<description><![CDATA[

	 An event target loses focus. The focus is taken from the element before 

	 the dispatch of this event type. This event type is dispatched after 

	 the event type blur.

	 
	 ]]></description>
<eventType><![CDATA[DOMFocusOut

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMFocusIn' type='dom.events.UIEvent' >
<description><![CDATA[

	 An event target receives focus. The focus is given to the element 

	 before the dispatch of this event type. This event type is 

	 dispatched after the event type focus.

	 
	 ]]></description>
<eventType><![CDATA[DOMFocusIn

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMActivate' type='dom.events.UIEvent' >
<description><![CDATA[

	 Refer to Activation requests and behavior.

	 
	 ]]></description>
<eventType><![CDATA[DOMActivate

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='scroll' type='dom.events.Event' >
<description><![CDATA[

	 A document view or an element has been scrolled. The scroll occured before 

	 the dispatch of this event type.

	 
	 ]]></description>
<eventType><![CDATA[scroll

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='resize' type='dom.events.Event' >
<description><![CDATA[

	 A document view or an element has been resized. The resize occured before 

	 the dispatch of this event type.

	 
	 ]]></description>
<eventType><![CDATA[resize

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='reset' type='dom.events.Event' >
<description><![CDATA[

	 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.

	 
	 ]]></description>
<eventType><![CDATA[reset

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='submit' type='dom.events.Event' >
<description><![CDATA[

	 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.

	 
	 ]]></description>
<eventType><![CDATA[submit

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='change' type='dom.events.Event' >
<description><![CDATA[

	 A control loses the input focus and its value has been modified since 

	 gaining focus. This event type is dispatched before the event type blur.

	 
	 ]]></description>
<eventType><![CDATA[change

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='select' type='dom.events.Event' >
<description><![CDATA[

	 A user selects some text. DOM Level 3 Events does not provide contextual 

	 information to access the selected text. The selection occured before 

	 the dispatch of this event type.

	 
	 ]]></description>
<eventType><![CDATA[select

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='error' type='dom.events.Event' >
<description><![CDATA[

	 A resource failed to load, or has been loaded but cannot be interpreted 

	 according to its semantics such as an invalid image, a script execution 

	 error, or non-well-formed XML.

	 
	 ]]></description>
<eventType><![CDATA[error

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='abort' type='dom.events.Event' >
<description><![CDATA[

	 Loading of a resource has been aborted.

	 
	 ]]></description>
<eventType><![CDATA[abort

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='unload' type='dom.events.Event' >
<description><![CDATA[

	 The DOM implementation removes from the environment the resource 

	 (such as the document) or any dependent resources (such as images, 

	 style sheets, scripts). The document is unloaded after the dispatch 

	 of this event type. If this event type is dispatched, implementations 

	 are required to dispatch this event at least on the Document node.

	 
	 ]]></description>
<eventType><![CDATA[unload

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='load' type='dom.events.Event' >
<description><![CDATA[

	 The DOM Implementation finishes loading the resource (such as the 

	 document) and any dependent resources (such as images, style sheets, 

	 or scripts). Dependent resources that fail to load will not prevent 

	 this event from firing if the resource that loaded them is still 

	 accessible via the DOM. If this event type is dispatched, 

	 implementations are required to dispatch this event at least on the 

	 Document node.

	 
	 ]]></description>
<eventType><![CDATA[load

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMAttributeNameChanged' type='dom.events.MutationNameEvent' >
<description><![CDATA[

	 Occurs after the namespaceURI and/or the nodeName of a Attr node have 

	 been modified (e.g., the attribute was renamed using 

	 Document.renameNode()). The target node of this event is the Element 

	 node whose Attr has been renamed.

	 
	 ]]></description>
<eventType><![CDATA[DOMAttributeNameChanged

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMElementNameChanged' type='dom.events.MutationNameEvent' >
<description><![CDATA[

	 Occurs after the namespaceURI and/or the nodeName of an Element node 

	 have been modified (e.g., the element was renamed using 

	 Document.renameNode()). The target node of this event is the renamed 

	 Element node.

	 
	 ]]></description>
<eventType><![CDATA[DOMElementNameChanged

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMAttrModified' type='dom.events.MutationEvent' >
<description><![CDATA[

	 Occurs after Attr.value has been modified and after an Attr node has been 

	 added to or removed from an Element. The target node of this event is 

	 the Element node where the change occured. It is implementation dependent 

	 whether this event type occurs when the children of the Attr node are 

	 changed in ways that do not affect the value of Attr.value.

	 
	 ]]></description>
<eventType><![CDATA[DOMAttrModified

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMNodeInsertedIntoDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been inserted into a document, either through direct insertion 

	 of the node or insertion of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 after the insertion has taken place. The target node of this event is the 

	 node being inserted. If the node is being directly inserted, the event type 

	 DOMNodeInserted occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInsertedIntoDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMNodeRemovedFromDocument' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from a document, either through direct removal 

	 of the node or removal of a subtree in which it is contained; Attr nodes 

	 are considered part of an Element's subtree. This event is dispatched 

	 before the removal takes place. The target node of this event type is 

	 the node being removed. If the node is being directly removed, the event 

	 type DOMNodeRemoved occurs before this event type.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemovedFromDocument

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMNodeRemoved' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node is being removed from its parent node or, in case of Attr nodes, 

	 removed from its ownerElement. This event is dispatched before the 

	 removal takes place. The target node of this event is the node 

	 being removed.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeRemoved

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMNodeInserted' type='dom.events.MutationEvent' >
<description><![CDATA[

	 A node has been added as a child of another node or, in case of Attr 

	 nodes, has been added to an Element. This event is dispatched after 

	 the insertion has taken place. The target node of this event is the 

	 node being inserted.

	 
	 ]]></description>
<eventType><![CDATA[DOMNodeInserted

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='DOMSubtreeModified' type='dom.events.MutationEvent' >
<description><![CDATA[

	 This is a general event for notification of all changes to the 

	 document. It can be used instead of the more specific mutation and 

	 mutation name events listed below. It may be dispatched after a 

	 single modification to the document or, at the implementation's 

	 discretion, after multiple changes have occurred. The latter use 

	 should generally be used to accommodate multiple changes which occur 

	 either simultaneously or in rapid succession. The target of this 

	 event is the lowest common parent of the changes which have taken 

	 place. This event is dispatched after any other events caused by the 

	 mutation(s) have occurred.

	 
	 ]]></description>
<eventType><![CDATA[DOMSubtreeModified

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='mousewheel' type='dom.events.MouseWheelEvent' >
<description><![CDATA[

	 A mouse wheel has been rotated around the y-axis.

	 
	 ]]></description>
<eventType><![CDATA[mousewheel

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='mousemultiwheel' type='dom.events.MouseMultiWheelEvent' >
<description><![CDATA[

	 A mouse wheel has been rotated. A default action of user agent 

	 generated event objects of this type causes implementations to 

	 dispatch a mousewheel event iff it supports that event type and 

	 MouseMultiWheelEvent.wheelDeltaY is non-zero.

	 
	 ]]></description>
<eventType><![CDATA[mousemultiwheel

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='mouseout' type='dom.events.MouseEvent' >
<description><![CDATA[

	 A pointing device is moved away from an element.

	 

	 ]]></description>
<eventType><![CDATA[mouseout

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='mousemove' type='dom.events.MouseEvent' >
<description><![CDATA[

	 A pointing device is moved while it is over an element.

	 

	 ]]></description>
<eventType><![CDATA[mousemove

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='mouseover' type='dom.events.MouseEvent' >
<description><![CDATA[

	 A pointing device is moved onto an element.

	 

	 ]]></description>
<eventType><![CDATA[mouseover

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='mouseup' type='dom.events.MouseEvent' >
<description><![CDATA[

	 A pointing device button is released over an element.

	 

	 ]]></description>
<eventType><![CDATA[mouseup

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='mousedown' type='dom.events.MouseEvent' >
<description><![CDATA[

	 A pointing device button is pressed over an element.

	 

	 ]]></description>
<eventType><![CDATA[mousedown

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='dblclick' type='dom.events.MouseEvent' >
<description><![CDATA[

	 A pointing device button is clicked twice over an element. The definition 

	 of a double click depends on the environment configuration, except that 

	 the event target must be the same between mousedown, mouseup, and dblclick. 

	 This event type is dispatched after the event type click if a click and 

	 double click occur simultaneously, and after the event type mouseup otherwise.

	 

	 ]]></description>
<eventType><![CDATA[dblclick

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Element' name='click' type='dom.events.MouseEvent' >
<description><![CDATA[

	 A pointing device button is clicked over an element. The definition of a 

	 click depends on the environment configuration; i.e. it may depend on the 

	 screen location or the delay between the press and release of the pointing 

	 device button. In any case, the event target must be the same between the 

	 mousedown, mouseup, and click. The sequence of these events is: mousedown, 

	 mouseup, and click. It depends on the environment configuration whether 

	 the event type click can occur if one or more of the event types mouseover, 

	 mousemove, and mouseout occur between the press and release of the pointing 

	 device button. In addition, the event type is dispatched as described in 

	 Activation requests and behavior.

	 
	 ]]></description>
<eventType><![CDATA[click

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='addBehavior' fullname='dom.core:Element/addBehavior' isStatic='false' isFinal='false' isOverride='false'  param_names='url' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Attaches a behavior to the element.

		 

		 <p>This method, and the following remarks, apply only to attached 

		 behaviors, which are the original Dynamic HTML (DHTML) behaviors 

		 introduced in Microsoft Internet Explorer 5. Element behaviors are 

		 a feature in Internet Explorer 5.5 and cannot be added to or 

		 removed from an element.</p>

		 

		 <p>This method enables you to attach a behavior without using Cascading 

		 Style Sheets (CSS).</p>

		 

		 <p>Unless the specified behavior in the addBehavior call is one of the 

		 default behaviors built into Internet Explorer, the addBehavior call 

		 causes Internet Explorer to download the behavior asynchronously, 

		 before the behavior is attached to the element.</p>

		 

		 <p>Due to the asynchronous nature of the addBehavior method, its return 

		 value cannot be relied on to determine whether the behavior was 

		 successfully applied to the element. Waiting for the onreadystatechange 

		 event to fire and verifying that the readyState property of the element 

		 is set to complete ensure that the behavior is completely attached to 

		 the element, and that all the behavior's members are available for scripting. 

		 Otherwise, attempting to use any behavior-defined member before the 

		 behavior is attached to the element results in a scripting error indicating 

		 that the object does not support that particular member.</p>

		 

		 <p>Note : A behavior attached to an element using the addBehavior method, or by 

		 applying the proposed CSS behavior attribute inline, is not automatically 

		 detached from the element when the element is removed from the document hierarchy. 

		 However, a behavior attached using a style rule defined in the document is 

		 detached automatically as the element is removed from the document tree.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;SCRIPT LANGUAGE="JScript">

		 var collBehaviorID = new Array();

		 var collLI = new Array ();

		 var countLI = 0;

		 

		 function attachBehavior() {

		 	collLI = document.all.tags("LI");

		 	countLI = collLI.length;

		 	for (i=0; i &lt; countLI; i++) {

		 		var iID = collLI[i].addBehavior("hilite.htc");

		 

		 		if (iID) collBehaviorID[i] = iID;

		 	}

		 }

		 &lt;/SCRIPT>

		 

		 //Click &lt;A HREF="javascript:attachBehavior()">here&lt;/A>

		 //to add a highlighting effect as you hover over each item below.

		 </listing>

		 

		 ]]></example>
<param><![CDATA[url Location of the behavior, in URL format.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE +5.5

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[Returns an identifier that can be used later to detach the behavior from the element.

		 

		 ]]></return>
</method>
<method name='applyElement' fullname='dom.core:Element/applyElement' isStatic='false' isFinal='false' isOverride='false'  param_names='element;where' param_types='Object;dom.core.types:DOMString' param_defaults='undefined;outside' result_type='Object'>
<description><![CDATA[

		 Makes the element either a child or parent of another element.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;SCRIPT>

		 function fnApply() {

		 	var oNewNode = document.createElement("I");

		 	oList.applyElement(oNewNode);

		 }

		 &lt;/SCRIPT>

		 

		 &lt;UL ID = oList>

		 &lt;LI>List item 1

		 &lt;LI>List item 2

		 &lt;LI>List item 3

		 &lt;LI>List item 4

		 &lt;/UL>

		 &lt;INPUT TYPE="button" VALUE="Apply Element" onclick="fnApply()">

		 </listing>

		 

		 ]]></example>
<param><![CDATA[element An object that becomes the child or parent of the current element.

		 ]]></param>
<param><![CDATA[where Specifies one of the following values. 

		 outside : Specified element becomes a parent of the current element.

		 inside : Specified element becomes a child of the current element, but contains all the child elements of the current element.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 1.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[Returns a reference to the applied element.

		 ]]></return>
</method>
<method name='attachEvent' fullname='dom.core:Element/attachEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener' param_types='dom.core.types:DOMString;Function' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Binds the specified function to an event, so that the function gets called whenever 

		 the event fires on the object.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>if (window.attachEvent) window.attachEvent("onload", statusreport); //invoke function</listing>

		 

		 ]]></example>
<param><![CDATA[type The event string should include the "on" prefix (ie: "onload", "onclick" etc).

		 ]]></param>
<param><![CDATA[listener The function or method to associate with the event.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<return><![CDATA[true (successful) or false (failed).

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536343%28VS.85%29.aspx MSDN - attachEvent Method

		 

		 ]]></see>
</method>
<method name='clearAttributes' fullname='dom.core:Element/clearAttributes' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Removes all attributes and values from the object.

		 

		 <p>The clearAttributes method clears only persistent HTML attributes. 

		 The ID attribute, styles, and script-only properties are not affected.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
</method>
<method name='componentFromPoint' fullname='dom.core:Element/componentFromPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='Number;Number' param_defaults='undefined;undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the component located at the specified coordinates via certain events.

		 

		 <p>IE Note: The componentFromPoint method, available as of Microsoft Internet Explorer 5, 

		 is applicable to any object that can be given scroll bars through Cascading Style Sheets (CSS).</p>

		 

		 <p>The componentFromPoint method might not return the same object consistently when it 

		 is used with the onmouseover event. Because a user's mouse speed and entry point 

		 can vary, different components of an element can fire the onmouseover event. For 

		 example, when a user moves the cursor over a textArea object with scroll bars, the 

		 event might fire when the mouse enters the component border, the scroll bars, or 

		 the client region. After the event fires, the expected element might not be returned, 

		 unless the scroll bars were the point of entry for the mouse. In this case, the 

		 onmousemove event can be used to provide more consistent results.</p>

		 

		 <p>For the object's sizing handles to appear, designMode must be On, and the object 

		 must be selected.</p>

		 

		 ]]></description>
<param><![CDATA[x The client window coordinate of x

		 ]]></param>
<param><![CDATA[y The client window coordinate of y

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[Returns one of the following possible values.

		 <ul>

		 <li>empty string : Component is inside the client area of the object.</li>

		 <li>outside : Component is outside the bounds of the object.</li>

		 <li>scrollbarDown : Down scroll arrow is at the specified location.</li>

		 <li>scrollbarHThumb : Horizontal scroll thumb or box is at the specified location.</li>

		 <li>scrollbarLeft : Left scroll arrow is at the specified location.</li>

		 <li>scrollbarPageDown : Page-down scroll bar shaft is at the specified location.</li>

		 <li>scrollbarPageLeft : Page-left scroll bar shaft is at the specified location.</li>

		 <li>scrollbarPageRight : Page-right scroll bar shaft is at the specified location.</li>

		 <li>scrollbarPageUp : Page-up scroll bar shaft is at the specified location.</li>

		 <li>scrollbarRight : Right scroll arrow is at the specified location.</li>

		 <li>scrollbarUp : Up scroll arrow is at the specified location.</li>

		 <li>scrollbarVThumb : Vertical scroll thumb or box is at the specified location.</li>

		 <li>handleBottom : Bottom sizing handle is at the specified location.</li>

		 <li>handleBottomLeft : Lower-left sizing handle is at the specified location.</li>

		 <li>handleBottomRight : Lower-right sizing handle is at the specified location.</li>

		 <li>handleLeft : Left sizing handle is at the specified location.</li>

		 <li>handleRight : Right sizing handle is at the specified location.</li>

		 <li>handleTop : Top sizing handle is at the specified location.</li>

		 <li>handleTopLeft : Upper-left sizing handle is at the specified location.</li>

		 <li>handleTopRight : Upper-right sizing handle is at the specified location.</li>

		 </ul>

		 

		 ]]></return>
</method>
<method name='contains' fullname='dom.core:Element/contains' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='Object' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Checks whether the given element is contained within the object. 

		 ]]></description>
<param><![CDATA[element Element object that specifies the element to check.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 1.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
</method>
<method name='createControlRange' fullname='dom.core:Element/createControlRange' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NodeList'>
<description><![CDATA[

		 Creates a controlRange collection of nontext elements.

		 

		 <p>IE Note: Creates a selection range object for control-based selection 

		 rather than text-based selection.</p>

		 

		 <p>If a controlRange already exists, createControlRange overwrites 

		 the existing element; otherwise, it returns a pointer to the element created.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 1.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
</method>
<method name='detachEvent' fullname='dom.core:Element/detachEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener' param_types='dom.core.types:DOMString;Function' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Unbinds the specified function from the event, so that the function stops receiving notifications when the event fires.

		 

		 <p><strong>Note (IE):</strong> Behaviors that attach to events using the attachEvent method must explicitly call 

		 the detachEvent method to stop receiving notifications from the page when the  ondetach event fires. 

		 Behaviors that attach to events using the  PUBLIC:ATTACH element automatically stop receiving notifications 

		 when the behavior detaches from the element, and thus do not need to call the detachEvent method.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example calls the detachEvent method from an HTML Component (HTC) when the highlighting effect is 

		 removed from the page, causing the ondetach event to fire.

		 <listing>

		 &lt;PUBLIC:ATTACH EVENT="ondetach" ONEVENT="cleanup()" /&gt;

		 

		 &lt;script language="JScript"&gt;

		 attachEvent ('onmouseover', Hilite);

		 attachEvent ('onmouseout', Restore);

		 

		 function cleanup() {

		 	detachEvent ('onmouseover', Hilite);

		 	detachEvent ('onmouseout', Restore);

		 }

		 

		 function Hilite() {

		 	if (event.srcElement == element) { 

		 		normalColor = style.color;  

		 		runtimeStyle.color  = "red";

		 		runtimeStyle.cursor = "hand";

		 	}

		 }

		 

		 function Restore() {

		 	if (event.srcElement == element) {

		 		runtimeStyle.color  = normalColor;

		 		runtimeStyle.cursor = "";

		 	}

		 }

		 &lt;/script&gt;</listing>

		 

		 

		 ]]></example>
<param><![CDATA[type Specifies any of the standard  DHTML Events.

		 ]]></param>
<param><![CDATA[listener Specifies the function previously set using the attachEvent method.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536411%28VS.85%29.aspx MSDN - detachEvent Method

		 

		 ]]></see>
</method>
<method name='doScroll' fullname='dom.core:Element/doScroll' isStatic='false' isFinal='false' isOverride='false'  param_names='scrollAction' param_types='dom.core.types:DOMString' param_defaults='scrollbarDown' result_type='void'>
<description><![CDATA[

		 Simulates a click on a scroll-bar component.

		 

		 <p>Cascading Style Sheets (CSS) allow you to scroll on all objects through 

		 the overflow property.</p>

		 

		 <p>When the content of an element changes and causes scroll bars to display, 

		 the doScroll method might not work correctly immediately following the 

		 content update. When this happens, you can use the setTimeout method to 

		 enable the browser to recognize the dynamic changes that affect scrolling.</p>

		 

		 ]]></description>
<param><![CDATA[scrollAction Specifies how the object scrolls, using one of the following values.

		 <ul>

		 <li>scrollbarDown : Default. Down scroll arrow is at the specified location.</li>

		 <li>scrollbarHThumb : Horizontal scroll thumb or box is at the specified location.</li>

		 <li>scrollbarLeft : Left scroll arrow is at the specified location.</li>

		 <li>scrollbarPageDown : Page-down scroll bar shaft is at the specified location.</li>

		 <li>scrollbarPageLeft : Page-left scroll bar shaft is at the specified location.</li>

		 <li>scrollbarPageRight : Page-right scroll bar shaft is at the specified location.</li>

		 <li>scrollbarPageUp : Page-up scroll bar shaft is at the specified location.</li>

		 <li>scrollbarRight : Right scroll arrow is at the specified location.</li>

		 <li>scrollbarUp : Up scroll arrow is at the specified location.</li>

		 <li>scrollbarVThumb : Vertical scroll thumb or box is at the specified location.</li>

		 <li>down : Composite reference to scrollbarDown.</li>

		 <li>left : Composite reference to scrollbarLeft.</li>

		 <li>pageDown : Composite reference to scrollbarPageDown.</li>

		 <li>pageLeft : Composite reference to scrollbarPageLeft.</li>

		 <li>pageRight : Composite reference to scrollbarPageRight.</li>

		 <li>pageUp : Composite reference to scrollbarPageUp.</li>

		 <li>right : Composite reference to scrollbarRight.</li>

		 <li>up : Composite reference to scrollbarUp.</li>

		 </ul>

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
</method>
<method name='dragDrop' fullname='dom.core:Element/dragDrop' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Initiates a drag event.

		 

		 <p>You can use this method to fire the ondragstart event. If the event is 

		 not cancelled, a drag operation is started. The method returns true when 

		 the mouse is released. If the ondragstart event is cancelled, the method 

		 returns false immediately</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 1.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[Drag operation success

		 

		 ]]></return>
</method>
<method name='fireEvent' fullname='dom.core:Element/fireEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;event' param_types='dom.core.types:DOMString;Object' param_defaults='undefined;null' result_type='Boolean'>
<description><![CDATA[

		 Fires a specified event on the object.

		 

		 <p>If the event being fired cannot be cancelled, fireEvent always returns true.</p>

		 

		 <p>Regardless of their values specified in the event object, the values of the 

		 four event properties—cancelBubble, returnValue, srcElement, and type—are 

		 automatically initialized to the values shown in the following table.</p> 

		 

		 <ul>

		 <li>cancelBubble : false</li>

		 <li>returnValue : true</li>

		 <li>srcElement : element on which the event is fired</li>

		 <li>type : name of the event that is fired</li>

		 </ul>

		 

		 ]]></description>
<param><![CDATA[type String that specifies the name of the event to fire.

		 ]]></param>
<param><![CDATA[event Object that specifies the event object from which to obtain event object properties.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<return><![CDATA[Event fired successfully

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536423%28VS.85%29.aspx MSDN - fireEvent Method

		 

		 ]]></see>
</method>
<method name='getAdjacentText' fullname='dom.core:Element/getAdjacentText' isStatic='false' isFinal='false' isOverride='false'  param_names='where' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the adjacent text string. 

		 

		 ]]></description>
<param><![CDATA[where Specifies where the text is located by using one of the following values.

		 <ul>

		 <li>beforeBegin : Text is returned immediately before the element.</li>

		 <li>afterBegin : Text is returned after the start of the element but before all other content in the element.</li>

		 <li>beforeEnd : Text is returned immediately before the end of the element but after all other content in the element.</li>

		 <li>afterEnd : Text is returned immediately after the end of the element.</li>

		 </ul>

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 1.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[Returns the first adjacent text string. 

		 

		 ]]></return>
</method>
<method name='getAttribute' fullname='dom.core:Element/getAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Object'>
<description><![CDATA[

		 Returns the value of the named attribute on the specified element.

		 

		 <p>If the named attribute does not exist, the value returned will 

		 either be null or "" (the empty string).</p>

		 

		 <p><strong>Note:</strong> Essentially all web browsers (Firefox, Internet Explorer, recent 

		 versions of Opera, Safari, Konqueror, and iCab, as a non-exhaustive list) 

		 return null when the specified attribute does not exist on the specified 

		 element. The DOM specification says that the correct return value in 

		 this case is actually the empty string, and some DOM implementations 

		 implement this behavior. The implementation of getAttribute in XUL (Gecko) 

		 actually follows the specification and returns an empty string. 

		 Consequently, you should use hasAttribute to check for an attribute's 

		 existence prior to calling getAttribute() if it is possible that the 

		 requested attribute does not exist on the specified element.</p>

		 

		 <p>The attributeName parameter is usually case sensitive, but it is case-insensitive 

		 when used upon HTML elements.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var div1 = document.getElementById("div1");

		 var align = div1.getAttribute("align");

		 alert(align); // shows the value of align for the element with id="div1"</listing>

		 

		 ]]></example>
<param><![CDATA[name

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 7.0+

		 ]]></productversion>
<productversion><![CDATA[Safari 1.0+

		 ]]></productversion>
<since><![CDATA[DOM 1 Core

		 ]]></since>
<return><![CDATA[The value or null/""

		 

		 ]]></return>
</method>
<method name='getAttributeNS' fullname='dom.core:Element/getAttributeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace;name' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the string value of the attribute with the specified namespace and name. 

		 

		 <p>If the named attribute does not exist, the value returned will either be null 

		 or "" (the empty string).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var div1 = document.getElementById("div1");

		 var a = div1.getAttributeNS("www.mozilla.org/ns/specialspace/", "special-align");

		 alert(a); // shows the value of align for that div</listing>

		 

		 ]]></example>
<param><![CDATA[nameSpace The namespace of the specified attribute. 

		 ]]></param>
<param><![CDATA[name The name of the specified attribute. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The value or null/""

		 

		 ]]></return>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the implementation 

		 does not support the feature "XML" and the language exposed through the Document 

		 does not support XML Namespaces (such as [HTML 4.01]). 

		 

		 ]]></throws>
</method>
<method name='getAttributeNode' fullname='dom.core:Element/getAttributeNode' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Attr'>
<description><![CDATA[

		 Returns the Attr node for the attribute with the given name. 

		 

		 <p><strong>Note:</strong> (IE8+) In IE8 mode, getAttributeNode correctly 

		 populates the value property of the returned attribute object regardless of 

		 whether the specified property is set to true or false. For more information 

		 on IE8 mode, see Defining Document Compatibility.</p>

		 

		 <p><strong>Note:</strong> (IE8+) In IE8 mode, the value 

		 property is correctly reported as a canonical attribute name. For example, 

		 &lt;input type="text" readonly&gt; and &lt;input type="text" readonly="readonly"&gt; would 

		 both set the input text field to read-only. In IE8 mode, the value is evaluated 

		 as a cannonical value, "readonly". In IE7 and earlier modes, it is evaluated 

		 as a Boolean value, true.</p>

		 

		 ]]></description>
<param><![CDATA[name Specifies the name property of the requested attribute object.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[IE 6.0+

		 ]]></productversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 7.0+

		 ]]></productversion>
<productversion><![CDATA[Safari 1.0+

		 ]]></productversion>
<since><![CDATA[DOM 1 Core

		 ]]></since>
<return><![CDATA[Returns a reference to an attribute object.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#method-getAttributeNode DOM Level 1:getAttributeNode

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-217A91B8 DOM Level 2:getAttributeNode

		 

		 ]]></see>
</method>
<method name='getAttributeNodeNS' fullname='dom.core:Element/getAttributeNodeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace;name' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core:Attr'>
<description><![CDATA[

		 Returns the Attr node for the attribute with the given namespace and name. 

		 

		 ]]></description>
<param><![CDATA[nameSpace Specifying the namespace of the attribute. 

		 ]]></param>
<param><![CDATA[name Specifying the name of the attribute. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The node for specified attribute

		 

		 ]]></return>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the 

		 implementation does not support the feature "XML" and the language 

		 exposed through the Document does not support XML Namespaces. 

		 

		 ]]></throws>
</method>
<method name='getBoundingClientRect' fullname='dom.core:Element/getBoundingClientRect' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:TextRectangle'>
<description><![CDATA[

		 

		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.

		 

		 <p><strong>Note (IE8):</strong> In IE8 mode, the bounding rectangle is the same as the client rectangle.</p>

		 

		 <p><strong>Note (IE5):</strong> In Microsoft Internet Explorer 5, the window's upper-left is at 

		 2,2 (pixels) with respect to the true client.</p>

		 

		 <p><strong>Note (Firefox 3.5):</strong> Firefox 3.5 adds width and height properties to the TextRectangle object.</p>

		 

		 <p><strong>Note (Firefox):</strong> Firefox doesn't round the top/bottom coordinates.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var rects = obj.getClientRects();

		 var numLines = rects.length;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_buggy

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_almost

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_almost

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<return><![CDATA[The returned value is a TextRectangle object which is the union 

		 of the rectangles returned by getClientRects() for the element, i.e., 

		 the CSS border-boxes associated with the element.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536435(VS.85).aspx  MSDN: getClientRects Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.getClientRects  MDC - Element: getClientRects Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-getclientrects W3C - CSSOM View: getClientRects Method

		 ]]></see>
<see><![CDATA[http://ejohn.org/blog/getboundingclientrect-is-awesome/  John Resig

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#documentview  Quirksmode: DocumentView and ElementView methods

		 

		 ]]></see>
</method>
<method name='getClientRects' fullname='dom.core:Element/getClientRects' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:TextRectangleList'>
<description><![CDATA[

		 

		 Retrieves a collection of rectangles that describes the layout of the 

		 contents of an object or range within the client. Each rectangle 

		 describes a single line.

		 

		 <p><strong>Note (IE8):</strong> In IE8 mode, getClientRects always returns 

		 a collection of one rectangle—the same rectangle as getBoundingClientRect.</p>

		 

		 <p><strong>Note (IE):</strong> In IE5-7, split up a block-level element such as a &lt;p&gt; into one rectangle per line.

		 This is incorrect: a block-level element should be reported as one rectangle.</p>

		 

		 <p><strong>Note (IE):</strong> In IE5-7, the rectangles are off by about two pixels. According to John Resig this is caused by the 

		 (invisible, but nonetheless present) borders of the &lt;html&gt; element.</p>

		 

		 <p><strong>Note (Firefox 3.5):</strong> Firefox 3.5 adds width and height properties to the TextRectangle object.</p>

		 

		 <p><strong>Note (Firefox):</strong> Firefox doesn't round the top/bottom coordinates.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>var rect = obj.getBoundingClientRect();</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_almost

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_almost

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536433(VS.85).aspx MSDN: getBoundingClientRect Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.getBoundingClientRect  MDC - Element: getBoundingClientRect Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-getclientrects W3C - CSSOM View: getBoundingClientRect Method

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#documentview  Quirksmode: DocumentView and ElementView methods

		 

		 ]]></see>
</method>
<method name='getElementsByClassName' fullname='dom.core:Element/getElementsByClassName' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 Returns a set of elements with the given class name. 

		 

		 <p>When called on 

		 the document object, the complete document is searched, including 

		 the root node. You may also call getElementsByClassName on any element; 

		 it will return only elements under the specified root element with the 

		 given class name. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 //Get all elements that have a class of 'test' 

		 document.getElementsByClassName('test');

		 //Get all elements that have a class of 'red' and 'test' 

		 document.getElementsByClassName('red test');</listing>

		 

		 ]]></example>
<param><![CDATA[name Specifies the name of a class.

		 ]]></param>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[Firefox 3.0+

		 ]]></productversion>
<since><![CDATA[HTML 5

		 ]]></since>
<return><![CDATA[Returns a set of elements with the given class name.

		 

		 ]]></return>
</method>
<method name='getElementsByTagName' fullname='dom.core:Element/getElementsByTagName' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 Retrieves a collection of objects based on the specified element name.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // check the alignment on a number of cells in a table. 

		 var table = document.getElementById("forecast-table"); 

		 var cells = table.getElementsByTagName("td"); 

		 for (var i = 0; i &lt; cells.length; i++) { 

		 		status = cells[i].getAttribute("status"); 

		 		if ( status == "open") { 

		 			// grab the data 

		 		}

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[name Specifies the name of an element.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 7.0+

		 ]]></productversion>
<productversion><![CDATA[Safari 1.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[Returns a collection of objects with the specified element name.

		 ]]></return>
</method>
<method name='getElementsByTagNameNS' fullname='dom.core:Element/getElementsByTagNameNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace;localName' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 Returns a list of elements with the given tag name belonging to the given namespace. 

		 

		 ]]></description>
<param><![CDATA[nameSpace The namespace URI of elements to look for (see element.namespaceURI). For example, if you need to look for XHTML elements, use the XHTML namespace URI, http://www.w3.org/1999/xhtml. 

		 ]]></param>
<param><![CDATA[localName Either the local name of elements to look for or the special value ", which matches all elements

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[
		 

		 ]]></return>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the 

		 implementation does not support the feature "XML" and the language 

		 exposed through the Document does not support XML Namespaces. 

		 

		 ]]></throws>
</method>
<method name='getExpression' fullname='dom.core:Element/getExpression' isStatic='false' isFinal='false' isOverride='false'  param_names='propertyName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='*'>
<description><![CDATA[

		 Retrieves the expression for the given property. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;body>

		 &lt;span id="trueBlueSpan" style="background-color:lightblue; width:100px">

		 The width of this blue span is set inline at 100 pixels.

		 &lt;/span>

		 &lt;span id="oldYellowSpan" style="background-color:lightyellow; width:200px">

		 The width of this yelllow span is set inline at 200 pixels.

		 &lt;/span>

		 &lt;br>

		 &lt;span id="AlGreenSpan" style="background-color:lightgreen; width:expression(trueBlueSpan.style.pixelWidth + oldYellowSpan.style.pixelWidth)">

		 Click the button below to see the expression used to set the width of this span.

		 &lt;/span>

		 &lt;br>

		 &lt;button onclick=alert(AlGreenSpan.style.getExpression("width"));>See Expression&lt;/button>

		 &lt;/body></listing>

		 

		 ]]></example>
<param><![CDATA[propertyName Specifies the name of the property from which to retrieve the expression.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[Returns a variant value representing the expression of the property.

		 ]]></return>
</method>
<method name='hasAttribute' fullname='dom.core:Element/hasAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 <strong>DOM Level 2 | NS\FireFox</strong> 

		 

		 Determines whether an attribute with the specified name exists.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // check that the attribute exists before setting a value

		 var d = document.getElementById("div1"); 

		 if d.hasAttribute("align") { 

		 		d.setAttribute("align", "center"); 

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[name Name of the attribute. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[If the attribute exists.

		 ]]></return>
</method>
<method name='hasAttributeNS' fullname='dom.core:Element/hasAttributeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace;name' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Returns a boolean value indicating whether the current element has the specified attribute. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // check that the attribute exists 

		 // before you set a value 

		 var d = document.getElementById("div1"); 

		 if (d.hasAttributeNS("http://www.mozilla.org/ns/specialspace/", "special-align")) {

		 	d.setAttribute("align", "center");

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[nameSpace Specifying the namespace of the attribute. 

		 ]]></param>
<param><![CDATA[name Name of the attribute. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<productversion><![CDATA[Safari 1.3+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[
		 ]]></return>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the 

		 implementation does not support the feature "XML" and the language 

		 exposed through the Document does not support XML Namespaces (such 

		 as [HTML 4.01]). 

		 

		 ]]></throws>
</method>
<method name='insertAdjacentElement' fullname='dom.core:Element/insertAdjacentElement' isStatic='false' isFinal='false' isOverride='false'  param_names='where;element' param_types='dom.core.types:DOMString;dom.core:Element' param_defaults='undefined;undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 Inserts an element at the specified location.

		 

		 <p>You cannot insert text while the document is loading. Wait 

		 for the onload event before attempting to call this method.</p>

		 

		 <p>If you try to insert an object that already exists on the page, 

		 the existing object is moved to the point that you specified in 

		 the insertAdjacentElement method; no new object is created.</p>

		 

		 ]]></description>
<param><![CDATA[where Specifies where to insert the HTML element, using one of the following values.

		 <ul>

		 <li>beforeBegin : Inserts element immediately before the object.</li>

		 <li>afterBegin : Inserts element after the start of the object, but before all other content in the object.</li>

		 <li>beforeEnd : Inserts element immediately before the end of the object, but after all other content in the object.</li>

		 <li>afterEnd : Inserts element immediately after the end of the object.</li>

		 </ul>

		 ]]></param>
<param><![CDATA[element Object that specifies the element to be inserted adjacent to the object that invoked the insertAdjacentElement method.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 1.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[Returns an element object.

		 

		 ]]></return>
</method>
<method name='insertAdjacentHTML' fullname='dom.core:Element/insertAdjacentHTML' isStatic='false' isFinal='false' isOverride='false'  param_names='where;text' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Inserts the given HTML text into the element at the location.

		 

		 <p>If the text contains HTML tags, the method parses and formats 

		 the text as it is inserted.</p>

		 

		 <p>You cannot insert text while the document is loading. Wait for 

		 the onload event to fire before attempting to call this method.</p>

		 

		 <p>When using the insertAdjacentHTML method to insert script, you 

		 must include the DEFER attribute in the script element. </p>

		 

		 ]]></description>
<param><![CDATA[where Specifies where to insert the HTML element, using one of the following values.

		 <ul>

		 <li>beforeBegin : Inserts text immediately before the object.</li>

		 <li>afterBegin : Inserts text after the start of the object, but before all other content in the object.</li>

		 <li>beforeEnd : Inserts text immediately before the end of the object, but after all other content in the object.</li>

		 <li>afterEnd : Inserts text immediately after the end of the object.</li>

		 </ul>

		 ]]></param>
<param><![CDATA[text Specifies the HTML text to insert. The string can 

		 be a combination of text and HTML tags. This must be well-formed, 

		 valid HTML or this method will fail.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 4.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
</method>
<method name='insertAdjacentText' fullname='dom.core:Element/insertAdjacentText' isStatic='false' isFinal='false' isOverride='false'  param_names='where;text' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Inserts the given text into the element at the specified location.

		 

		 <p>The text inserted into the element is plain text. You cannot insert text 

		 while the document loads. Wait for the onload event to fire before 

		 attempting to call this method.</p>

		 

		 ]]></description>
<param><![CDATA[where Specifies where to insert the text, using one of the following values.

		 <ul>

		 <li>beforeBegin : Inserts text immediately before the object.</li>

		 <li>afterBegin : Inserts text after the start of the object, but before all other content in the object.</li>

		 <li>beforeEnd : Inserts text immediately before the end of the object, but after all other content in the object.</li>

		 <li>afterEnd : Inserts text immediately after the end of the object.</li>

		 </ul>

		 ]]></param>
<param><![CDATA[text Specifies the text to insert.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 1.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
</method>
<method name='mergeAttributes' fullname='dom.core:Element/mergeAttributes' isStatic='false' isFinal='false' isOverride='false'  param_names='source;preserve' param_types='dom.core:Element;Boolean' param_defaults='undefined;true' result_type='void'>
<description><![CDATA[

		 Copies all read/write attributes to the specified element.

		 

		 <p>The mergeAttributes method copies persistent HTML attributes, 

		 events, and styles.</p>

		 

		 <p>IE Note: In Internet Explorer 5 and earlier, attributes that are read-only, 

		 such as ID, are not merged.</p>

		 

		 <p>IE Note: As of Internet Explorer 5.5, by choosing not to preserve the identity 

		 of the destination object, you can merge all attributes of an object, 

		 including ID and NAME.</p>

		 

		 ]]></description>
<param><![CDATA[source Pointer to an Object that specifies the attributes copied

		 to the object that invokes mergeAttributes.

		 ]]></param>
<param><![CDATA[preserve Available as of Microsoft Internet Explorer 5.5. Specifies 

		 whether to preserve the identity of the object to which attributes are 

		 being merged or not.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
</method>
<method name='querySelector' fullname='dom.core:Element/querySelector' isStatic='false' isFinal='false' isOverride='false'  param_names='selectors' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 

		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;Selectors API Example&lt;/title&gt;

		 	&lt;/head&gt;

		 	&lt;body&gt;

		 

		 		&lt;div id="foo"&gt;

		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;

		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;

		 		&lt;/div&gt;

		 		&lt;div id="bar"&gt;

		 			&lt;p&gt;...&lt;/p&gt;

		 		&lt;/div&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 x would contain the first element in the document with an ID of either foo or bar (or both). In the sample document above, it would select the div element with the ID of foo because it is first in document order.

		 <listing>var x = document.querySelector("#foo, #bar");</listing>

		 

		 ]]></example>
<param><![CDATA[selectors One or more selectors

		 ]]></param>
<playerversion><![CDATA[Selectors 0

		 ]]></playerversion>
<since><![CDATA[DOM 3 Core

		 ]]></since>
<return><![CDATA[The first matching Element node within the node’s subtree. If there is no such node, returns null. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/selectors-api/#nodeselector W3C Selectors API

		 

		 ]]></see>
</method>
<method name='querySelectorAll' fullname='dom.core:Element/querySelectorAll' isStatic='false' isFinal='false' isOverride='false'  param_names='selectors' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 

		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;Selectors API Example&lt;/title&gt;

		 	&lt;/head&gt;

		 	&lt;body&gt;

		 

		 		&lt;div id="foo"&gt;

		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;

		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;

		 		&lt;/div&gt;

		 		&lt;div id="bar"&gt;

		 			&lt;p&gt;...&lt;/p&gt;

		 		&lt;/div&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 The following example would select all p elements in the document that have a class of either "error" or "warning".

		 <listing>var alerts = document.querySelectorAll("p.warning, p.error");</listing>

		 

		 ]]></example>
<param><![CDATA[selectors One or more selectors

		 ]]></param>
<playerversion><![CDATA[Selectors 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<since><![CDATA[DOM 3 Core

		 

		 ]]></since>
<return><![CDATA[A NodeList containing all of the matching Element nodes within the node’s subtree, in document order. If there are no such nodes, returns an empty NodeList.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/selectors-api/#nodeselector W3C Selectors API

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_core.html#gettingelements  Quirksmode: Getting elements

		 

		 ]]></see>
</method>
<method name='releaseCapture' fullname='dom.core:Element/releaseCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Removes mouse capture from the object in the current document.

		 

		 <p>For releaseCapture to have an effect, you must set mouse capture through 

		 the setCapture method.</p>

		 

		 <p>You can invoke the releaseCapture method on the document object. The 

		 releaseCapture method makes it unnecessary to determine which element 

		 has capture to programmatically release it. Other actions that release 

		 document capture include displaying a modal dialog box and switching 

		 focus to another application or browser window.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;BODY onload="oOwnCapture.setCapture();" onclick="document.releaseCapture();">

		 &lt;DIV ID=oOwnCapture onmousemove="oWriteLocation.value = event.clientX + event.clientY"; onlosecapture="alert(event.srcElement.id + ' has lost mouse capture.')">

		 &lt;TEXTAREA ID=oWriteLocation COLS=2>&lt;/TEXTAREA>

		 &lt;/DIV>

		 &lt;HR>

		 &lt;DIV ID=oNoCapture>

		 &lt;P>Click the document to invoke the releaseCapture method.&lt;/P>

		 &lt;/DIV>

		 &lt;/BODY></listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536689%28VS.85%29.aspx MSDN - releaseCapture Method

		 

		 ]]></see>
</method>
<method name='removeAttribute' fullname='dom.core:Element/removeAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Removes an attribute from the specified element. 

		 

		 <p>Note : You should use removeAttribute instead of setting 

		 the attribute value to null using setAttribute. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // &lt;div id="div1" align="left" width="200px">

		 document.getElementById("div1").removeAttribute("align"); 

		 // now: &lt;div id="div1" width="200px"></listing>

		 

		 ]]></example>
<param><![CDATA[name The name of the attribute to be removed from element. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<productversion><![CDATA[IE 4.0+

		 ]]></productversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<productversion><![CDATA[Safari 1.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.

		 

		 ]]></throws>
</method>
<method name='removeAttributeNS' fullname='dom.core:Element/removeAttributeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace;name' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Removes the specified attribute from an element.

		 

		 <p>FF Note : In Firefox 3 and later, this method resets DOM values to their defaults. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // &lt;div id="div1" xmlns:special="http://www.mozilla.org/ns/specialspace" special:specialAlign="utterleft" width="200px" /> 

		 d = document.getElementById("div1"); 

		 d.removeAttributeNS("http://www.mozilla.org/ns/specialspace", "specialAlign"); 

		 // now: &lt;div id="div1" width="200px" /></listing>

		 

		 ]]></example>
<param><![CDATA[nameSpace Contains the namespace of the attribute. 

		 ]]></param>
<param><![CDATA[name The attribute to be removed from the current node.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the 

		 implementation does not support the feature "XML" and the language 

		 exposed through the Document does not support XML Namespaces (such 

		 as [HTML 4.01]). 

		 

		 ]]></throws>
</method>
<method name='removeAttributeNode' fullname='dom.core:Element/removeAttributeNode' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core:Attr' param_defaults='undefined' result_type='dom.core:Attr'>
<description><![CDATA[

		 Removes an attribute object from the object.

		 

		 ]]></description>
<param><![CDATA[name The Attr node that needs to be removed.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<productversion><![CDATA[IE 6.0+

		 ]]></productversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<productversion><![CDATA[Safari 1.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[Returns a reference to the removed attribute object.

		 

		 ]]></return>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if oldAttr is not 

		 an attribute of the element.

		 

		 ]]></throws>
</method>
<method name='removeBehavior' fullname='dom.core:Element/removeBehavior' isStatic='false' isFinal='false' isOverride='false'  param_names='id' param_types='Number' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Detaches a behavior from the element. 

		 

		 <p>This method applies only to attached behaviors, which are the original 

		 Dynamic HTML (DHTML) behaviors introduced in Microsoft Internet Explorer 5. 

		 Element behaviors are a feature in Internet Explorer 5.5 and cannot be 

		 added or removed from an element.</p>

		 

		 ]]></description>
<param><![CDATA[id Specifies the identifier that is returned from a previous addBehavior call.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[If it was successfully removed.

		 

		 ]]></return>
</method>
<method name='removeExpression' fullname='dom.core:Element/removeExpression' isStatic='false' isFinal='false' isOverride='false'  param_names='propertyName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Removes the expression from the specified property. 

		 

		 <p>After the expression is removed from the specified property, the value 

		 of the property equals the last computed value of the expression. To 

		 remove expressions set by the setExpression method, use removeExpression. </p>

		 

		 ]]></description>
<param><![CDATA[propertyName Specifies the name of the property from which to remove an expression.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[If the expression was successfully removed.

		 

		 ]]></return>
</method>
<method name='removeNode' fullname='dom.core:Element/removeNode' isStatic='false' isFinal='false' isOverride='false'  param_names='removeChildren' param_types='Boolean' param_defaults='false' result_type='dom.core:Node'>
<description><![CDATA[

		 Removes the object from the document hierarchy.

		 

		 <p>This property is accessible at run time. If elements are removed at 

		 run time, before the closing tag is parsed, areas of the document 

		 might not render.</p>

		 

		 ]]></description>
<param><![CDATA[removeChildren If the childNodes collection of the object is removed

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a reference to the object that is removed.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536708%28VS.85%29.aspx MSDN - removeNode Method

		 

		 ]]></see>
</method>
<method name='replaceAdjacentText' fullname='dom.core:Element/replaceAdjacentText' isStatic='false' isFinal='false' isOverride='false'  param_names='where;replaceText' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Replaces the text adjacent to the element.

		 

		 ]]></description>
<param><![CDATA[where Specifies where to locate the replacement text, using one of the following values. 

		 <ul>

		 <li>beforeBegin : Inserts text immediately before the object.</li>

		 <li>afterBegin : Inserts text after the start of the object, but before all other content in the object.</li>

		 <li>beforeEnd : Inserts text immediately before the end of the object, but after all other content in the object.</li>

		 <li>afterEnd : Inserts text immediately after the end of the object.</li>

		 </ul>

		 ]]></param>
<param><![CDATA[replaceText Specifies the replacement text.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 1.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
<return><![CDATA[A pointer to a String returning the old text.

		 

		 ]]></return>
</method>
<method name='replaceNode' fullname='dom.core:Element/replaceNode' isStatic='false' isFinal='false' isOverride='false'  param_names='newNode' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Replaces the object with another element.

		 

		 <p>When a node is replaced, all values that are associated with the 

		 replaced object are removed. For example, if a b object is replaced 

		 with an i object, any attributes and text between the opening and 

		 closing tags are also replaced. To preserve these values, copy them 

		 to the new element before the original object is replaced.</p>

		 

		 <p>This method is accessible at run time. If elements are removed at run 

		 time before the closing tag is parsed, areas of the document might 

		 not render.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;SCRIPT>

		 function fnReplace() {

		 var sPreserve = oList.innerHTML;

		 var oNewNode = document.createElement("OL");

		 oList.replaceNode(oNewNode);

		 oNewNode.innerHTML = sPreserve;

		 }

		 &lt;/SCRIPT>

		 

		 &lt;UL ID = oList>

		 &lt;LI>List Item 1

		 &lt;LI>List Item 2

		 &lt;LI>List Item 3

		 &lt;LI>List Item 4

		 &lt;/UL>

		 &lt;INPUT TYPE = button VALUE = "Replace List" onclick = "fnReplace()"></listing>

		 

		 ]]></example>
<param><![CDATA[newNode Specifies the new element to replace the object.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a reference to the object that is replaced.

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536719%28VS.85%29.aspx MSDN - replaceNode Method

		 

		 ]]></see>
</method>
<method name='scrollIntoView' fullname='dom.core:Element/scrollIntoView' isStatic='false' isFinal='false' isOverride='false'  param_names='alignToTop' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[

		 Causes the object to scroll into view, aligning it either at the top 

		 or bottom of the window. 

		 

		 <p>The scrollIntoView method is useful for immediately showing the user

		 the result of some action without requiring the user to manually 

		 scroll through the document to find the result.</p>

		 

		 <p>Depending on the size of the given object and the current window, this 

		 method might not be able to put the item at the very top or very bottom, 

		 but will position the object as close to the requested position as possible.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html>

		 &lt;head>

		 &lt;title>ScrollIntoView() example&lt;/title>

		 

		 &lt;script type="text/javascript">

		 function showIt(elID) {

		 var el = document.getElementById(elID);

		 el.scrollIntoView(true);

		 }

		 &lt;/script>

		 

		 &lt;/head>

		 &lt;body>

		 	&lt;div style="height: 5em; width: 30em; overflow: scroll; border: 1px solid blue;">

		 		&lt;div style="height: 100px">&lt;/div>

		 		&lt;p id="pToShow">The para to show&lt;/p>

		 		&lt;div style="height: 100px">&lt;/div>

		 	&lt;/div>

		 	&lt;input type="button" value="Show para" onclick="showIt('pToShow');">

		 &lt;/body></listing>

		 

		 ]]></example>
<param><![CDATA[alignToTop Whether to scroll the object so that top of the object is visible at the top of the window.

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
</method>
<method name='setActive' fullname='dom.core:Element/setActive' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Sets the object as active without setting focus to the object.

		 

		 <p>The setActive method does not cause the document to scroll to the 

		 active object in the current page or in another frame or window. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script>

		 function fnBottomActive() {

		 		//Set the object with ID=btnLarger active in frame with ID=oFrame1.

		 		window.parent.oFrame1.secondButton.setActive();

		 }

		 &lt;/script></listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
</method>
<method name='setAttribute' fullname='dom.core:Element/setAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name;value;caseSensitive' param_types='dom.core.types:DOMString;Number' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Sets the value of the specified attribute.

		 

		 <p>IE Note: Internet Explorer 8 and later. IE8 mode enables several enhancements 

		 to the setAttribute, getAttribute, and removeAttribute methods that 

		 are not available when pages are displayed in earlier document modes.</p>

		 

		 <p>The name parameter requires the name of the desired content 

		 attribute and not the Document Object Model (DOM) attribute. For example,

		 in IE8 mode, this method no longer requires name to be "className" 

		 when setting, getting, or removing a CLASS attribute. Earlier versions of 

		 Internet Explorer and Internet Explorer 8 in compatibility mode still 

		 require name to specify the corresponding DOM property name.</p>

		 

		 <p>The name parameter is not case sensitive. As a result, the 

		 caseSensitive parameter is no longer supported and should not be used.</p>

		 

		 <p>The methods support event handlers. For example, the following code example 

		 defines an event handler to call a function called SomeFunction when the 

		 body of the page is loaded.</p>

		 

		 <p>document.body.setAttribute('onload', 'SomeFunction()');</p>

		 

		 <p>If the specified attribute is not already present, the setAttribute method 

		 adds the attribute to the object and sets the value.</p>

		 

		 <p>If your pages are displayed in IE5 mode or IE7 mode, be careful when spelling 

		 attribute names. If you set iCaseSensitive to 1 and the name parameter does 

		 not have the same uppercase and lowercase letters as the attribute, a new 

		 attribute is created for the object. If two or more attributes have the 

		 same name, differing only in case, and iCaseSensitive is set to 0, this method 

		 assigns values only to the first attribute created with this name. All other 

		 attributes of the same name are ignored.</p>

		 

		 <p>New for Internet Explorer 8 Internet Explorer 8 and later. When pages are 

		 displayed in IE8 mode, the vValue parameter only supports string values. Non-string

		 values are not automatically converted to string values. For best results, 

		 formally convert values to strings before using them as parameter values. For 

		 example, do not attempt to pass an object directly to the vValue parameter; call 

		 the object's toString method instead.</p>

		 

		 ]]></description>
<param><![CDATA[name Specifies the name of the attribute.

		 ]]></param>
<param><![CDATA[value Specifies the string, number, or Boolean to assign to the attribute. 

		 ]]></param>
<param><![CDATA[caseSensitive (IE Only) Specifies whether to use a case-sensitive 

		 search to locate the attribute. Can be one of the following values: <br/>

		 1 : The case of name  is respected. <br/>

		 0 : Match name regardless of case.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<productversion><![CDATA[Safari 1.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified name is not an XML name according to the XML version in 

		 use specified in the Document.xmlVersion attribute.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
</method>
<method name='setAttributeNS' fullname='dom.core:Element/setAttributeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpace;name;value' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Adds a new attribute or changes the value of an attribute with the 

		 given namespace and name. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var d = document.getElementById("d1");

		 d.setAttributeNS("http://www.mozilla.org/ns/specialspace", "align", "center");</listing>

		 

		 ]]></example>
<param><![CDATA[nameSpace Specifying the namespace of the attribute. 

		 ]]></param>
<param><![CDATA[name The attribute to be set. 

		 ]]></param>
<param><![CDATA[value The desired string value of the new attribute. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified qualified name is not an XML name according to the XML 

		 version in use specified in the Document.xmlVersion attribute.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NAMESPACE_ERR: Raised if the qualifiedName 

		 is malformed per the Namespaces in XML specification, if the 

		 qualifiedName has a prefix and the namespaceURI is null, if the 

		 qualifiedName has a prefix that is "xml" and the namespaceURI is different 

		 from "http://www.w3.org/XML/1998/namespace", if the qualifiedName or 

		 its prefix is "xmlns" and the namespaceURI is different from 

		 "http://www.w3.org/2000/xmlns/", or if the namespaceURI is 

		 "http://www.w3.org/2000/xmlns/" and neither the qualifiedName nor its prefix 

		 is "xmlns".

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the 

		 implementation does not support the feature "XML" and the language 

		 exposed through the Document does not support XML Namespaces (such 

		 as [HTML 4.01]). 

		 

		 ]]></throws>
</method>
<method name='setAttributeNode' fullname='dom.core:Element/setAttributeNode' isStatic='false' isFinal='false' isOverride='false'  param_names='attrNode' param_types='dom.core:Attr' param_defaults='undefined' result_type='dom.core:Attr'>
<description><![CDATA[

		 Sets an attribute object node as part of the object.

		 

		 <p>If the attribute named already exists on the element, that attribute

		 is replaced with the new one and the replaced one is returned.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // &lt;div id="one" align="left">one&lt;/div> 

		 // &lt;div id="two">two&lt;/div> 

		 var d1 = document.getElementById("one"); 

		 var d2 = document.getElementById("two"); 

		 var a = d1.getAttributeNode("align"); 

		 d2.setAttributeNode(a.cloneNode(true)); 

		 alert(d2.attributes[1].value) 

		 // returns: `left'</listing>

		 

		 ]]></example>
<param><![CDATA[attrNode Attribute object to be assigned.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<productversion><![CDATA[IE 4.0+

		 ]]></productversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<productversion><![CDATA[Safari 1.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[Returns a reference to the removed attribute object.

		 ]]></return>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if newAttr 

		 was created from a different document than the one that created 

		 the element.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INUSE_ATTRIBUTE_ERR: Raised if newAttr 

		 is already an attribute of another Element object. The DOM user must 

		 explicitly clone Attr nodes to re-use them in other elements.

		 

		 ]]></throws>
</method>
<method name='setAttributeNodeNS' fullname='dom.core:Element/setAttributeNodeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='attrNode' param_types='dom.core:Attr' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Adds a new attribute node with the specified namespace and name.

		 

		 <p>If the specified attribute already exists on the element, then that

		 attribute is replaced with the new one and the replaced one is returned.</p>

		 

		 <p>Note: If you try to set without cloning the node, Mozilla gives an 

		 NS_ERROR_DOM_INUSE_ATTRIBUTE_ERR "Attribute already in use" error, as the 

		 DOM requires cloning for Attr to be reused (unlike other Nodes which can 

		 be moved).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // &lt;div id="one" xmlns:myNS="http://www.mozilla.org/ns/specialspace" myNS:special-align="utterleft">one&lt;/div> 

		 // &lt;div id="two">two&lt;/div> 

		 

		 var myns = "http://www.mozilla.org/ns/specialspace"; 

		 var d1 = document.getElementById("one"); 

		 var d2 = document.getElementById("two"); 

		 var a = d1.getAttributeNodeNS(myns, "special-align"); 

		 d2.setAttributeNodeNS(a.cloneNode(true));

		 alert(d2.attributes[1].value) // returns: `utterleft'</listing>

		 

		 ]]></example>
<param><![CDATA[attrNode Attribute object to be assigned.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if newAttr 

		 was created from a different document than the one that created 

		 the element.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INUSE_ATTRIBUTE_ERR: Raised if newAttr 

		 is already an attribute of another Element object. The DOM user must 

		 explicitly clone Attr nodes to re-use them in other elements.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: May be raised if the 

		 implementation does not support the feature "XML" and the language 

		 exposed through the Document does not support XML Namespaces (such 

		 as [HTML 4.01]). 

		 

		 ]]></throws>
</method>
<method name='setCapture' fullname='dom.core:Element/setCapture' isStatic='false' isFinal='false' isOverride='false'  param_names='containerCapture' param_types='Boolean' param_defaults='true' result_type='void'>
<description><![CDATA[

		 Sets the mouse capture to the object that belongs to the current document.

		 

		 <p>After mouse capture is set to an object, all mouse events for the document 

		 are routed to that object. Supported mouse events include onmousedown, 

		 onmouseup, onmousemove, onclick, ondblclick, onmouseover, and onmouseout. 

		 The srcElement property of the window event object always returns the object 

		 that is positioned under the mouse, instead of the object that has mouse capture.</p>

		 

		 <p>Mouse clicks automatically trigger the onlosecapture event. To retain mouse 

		 capture, call setCapture inside the onclick event handler. Mouse capture is 

		 also lost if the browser window loses focus for any reason (including alerts or 

		 pop-up windows).</p>

		 

		 <p>When the containerCapture parameter is set to true, a container object, such as 

		 a div, captures mouse events for all objects in it. By passing the value false, 

		 objects in that container can fire events, and cancel event bubbling.</p>

		 

		 <p>Drag-and-drop operations, such as the ondragstart event, and text selection 

		 through the user interface are disabled when mouse capture is set 

		 programmatically. The following key events are unaffected by mouse capture and 

		 fire as usual: onkeydown, onkeyup, and onkeypress. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;BODY onload="oOwnCapture.setCapture()" onclick="document.releaseCapture()">

		 &lt;DIV ID=oOwnCapture STYLE="background-color:#ccc;padding:6pt"

		 onmousemove="oWriteLocation.value = event.x + ':' + event.y";

		 onlosecapture="alert(event.srcElement.id + ' lost mouse capture.')">

		 &lt;P>Mouse capture has been set to this gray division (DIV) 

		 at load time using the setCapture method. The text area will 

		 track the mousemove event through the &lt;B>x&lt;/B> 

		 and &lt;B>y&lt;/B> properties of the event object.&lt;BR>

		 &lt;P>Event bubbling works as usual on objects within a 

		 container that has mouse capture. Demonstrate this concept by 

		 clicking the button below or changing the active window from 

		 this one and then back. After oOwnCapture loses mouse capture, 

		 the text area continues tracking the mousemove events only 

		 while the cursor is over objects it contains.&lt;/P>

		 &lt;BR>&lt;BR>

		 &lt;TEXTAREA ID=oWriteLocation COLS=9> &lt;/TEXTAREA>

		 &lt;/DIV>

		 &lt;HR>

		 &lt;DIV ID=oNoCapture>

		 &lt;P>This white division is here to illustrate that mousemove 

		 events over objects it contains are captured on the gray 

		 division, oOwnCapture.

		 &lt;INPUT VALUE="Move mouse over this object.">

		 &lt;BUTTON>Click Anywhere to End Mouse Capture&lt;/BUTTON>

		 &lt;/DIV>

		 &lt;/BODY></listing>

		 

		 ]]></example>
<param><![CDATA[containerCapture (IE 5.5+) Whether events originating in a container are captured by the container.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
</method>
<method name='setExpression' fullname='dom.core:Element/setExpression' isStatic='false' isFinal='false' isOverride='false'  param_names='propertyName;expression;language' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Sets an expression for the specified object. 

		 

		 <p>Use the setExpression method to add expressions to supported Cascading 

		 Style Sheets (CSS) attributes and read/write DHTML Properties. To remove 

		 expressions set by setExpression, use the removeExpression method.</p>

		 

		 ]]></description>
<param><![CDATA[propertyName Specifies the name of the property to which 

		 sExpression  is added.

		 ]]></param>
<param><![CDATA[expression Specifies any valid script(JScript, JavaScript, 

		 VBSCript) statement without quotations or semicolons. This string 

		 can include references to other properties on the current page. Array

		 references are not allowed on object properties included in this script.

		 ]]></param>
<param><![CDATA[language Specifies one of the following values:

		 <ul>

		 <li>JScript : Default. Language is JScript.</li>

		 <li>VBScript : Language is VBScript.</li>

		 <li>JavaScript : Language is JavaScript.</li>

		 </ul>

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<since><![CDATA[Non-Standard 0

		 ]]></since>
</method>
<method name='setIdAttribute' fullname='dom.core:Element/setIdAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name;isId' param_types='dom.core.types:DOMString;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <p>If the parameter isId is true, this method declares the specified 

		 attribute to be a user-determined ID attribute. This affects the value 

		 of Attr.isId and the behavior of Document.getElementById, but does not 

		 change any schema that may be in use, in particular this does not 

		 affect the Attr.schemaTypeInfo of the specified Attr node. Use the value 

		 false for the parameter isId to undeclare an attribute for being a 

		 user-determined ID attribute.

		 To specify an attribute by local name and namespace URI, use the setIdAttributeNS

		 method.</p>

		 

		 ]]></description>
<param><![CDATA[name The name of the attribute.

		 ]]></param>
<param><![CDATA[isId Whether the attribute is a of type ID.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOM 3 Core

		 ]]></since>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if the specified 

		 node is not an attribute of this element.

		 

		 ]]></throws>
</method>
<method name='setIdAttributeNS' fullname='dom.core:Element/setIdAttributeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='nameSpaceURI;name;isId' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 <p>If the parameter isId is true, this method declares the specified 

		 attribute to be a user-determined ID attribute. This affects the value 

		 of Attr.isId and the behavior of Document.getElementById, but does not 

		 change any schema that may be in use, in particular this does not 

		 affect the Attr.schemaTypeInfo of the specified Attr node. Use the value 

		 false for the parameter isId to undeclare an attribute for being a 

		 user-determined ID attribute.</p>

		 

		 ]]></description>
<param><![CDATA[nameSpaceURI The namespace URI of the attribute.

		 ]]></param>
<param><![CDATA[name The name of the attribute.

		 ]]></param>
<param><![CDATA[isId Whether the attribute is a of type ID.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOM 3 Core

		 ]]></since>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if the specified 

		 node is not an attribute of this element.

		 

		 ]]></throws>
</method>
<method name='setIdAttributeNode' fullname='dom.core:Element/setIdAttributeNode' isStatic='false' isFinal='false' isOverride='false'  param_names='idAttr;isId' param_types='dom.core:Attr;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <p>If the parameter isId is true, this method declares the specified attribute 

		 to be a user-determined ID attribute. This affects the value of Attr.isId 

		 and the behavior of Document.getElementById, but does not change any schema 

		 that may be in use, in particular this does not affect the 

		 Attr.schemaTypeInfo of the specified Attr node. Use the value false for the 

		 parameter isId to undeclare an attribute for being a user-determined ID attribute. </p>

		 

		 ]]></description>
<param><![CDATA[idAttr The attribute node.

		 ]]></param>
<param><![CDATA[isId Whether the attribute is a of type ID.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOM 3 Core

		 ]]></since>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if 

		 this node is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if the specified 

		 node is not an attribute of this element.

		 

		 ]]></throws>
</method>
<method name='swapNode' fullname='dom.core:Element/swapNode' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Exchanges the location of two objects in the document hierarchy.

		 

		 <p>This method is accessible at run time. If elements are removed at 

		 run time, before the closing tag is parsed, areas of the document 

		 might not render.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script&gt;

		 		function fnSwap() {

		 			oList.children(0).swapNode(oList.children(1));

		 		}

		 &lt;/script&gt;

		 

		 &lt;ul ID = oList&gt;

		 		&lt;li&gt;List Item 1&lt;/li&gt;

		 		&lt;li&gt;List Item 2&lt;/li&gt;

		 		&lt;li&gt;List Item 3&lt;/li&gt;

		 		&lt;li&gt;List Item 4&lt;/li&gt;

		 &lt;/ul&gt;

		 &lt;input type=button value="Swap List" onclick="fnSwap()"&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[node Specifies the existing element.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a reference to the object that invoked the method.

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536774%28VS.85%29.aspx MSDN - swapNode Method

		 

		 ]]></see>
</method>
<method name='baseURIObject' fullname='dom.core:Element/baseURIObject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='gecko:nsIURI'>
<description><![CDATA[

		 <strong>Non-Standard | FireFox 3+</strong> 

		 

		 Returns the nsIURI  object representing the element's URI.

		 

		 <p>Note: This property exists on all elements (HTML, XUL, SVG, MathML, 

		 etc.), but only if the script trying to use it has UniversalXPConnect 

		 privileges.</p>

		 ]]></description>
</method>
<method name='childElementCount' fullname='dom.core:Element/childElementCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the current number of element nodes that are children of this 

		 element. 0 if this element has no child nodes that are of nodeType 1.

		 

		 ]]></description>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.childElementCount  MDC - Element: childElementCount Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-childElementCount  W3C - Element Traversel: childElementCount Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#firstElementChild

		 ]]></see>
<see><![CDATA[#lastElementChild

		 ]]></see>
<see><![CDATA[#nextElementSibling

		 ]]></see>
<see><![CDATA[#previousElementSibling

		 

		 ]]></see>
</method>
<method name='children' fullname='dom.core:Element/children/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:NodeList'>
<description><![CDATA[

		 <strong>? | FireFox 3.5+</strong> 

		 

		 Returns a collection of child elements of the given element.

		 

		 <p>The list returned is an ordered collection of element objects that 

		 are children of the current element. If the element has no children, 

		 then list returned contains no elements.</p>

		 

		 <p>Note: The items in the collection of elements are objects and not 

		 strings. To get data from those node objects, you must use their 

		 properties (e.g. elementNodeReference.children[1].nodeName to get the 

		 name, etc.).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // parg is an object reference to a &lt;p> element

		 if (parg.childElementCount()) {

		 	// So, first we check if the object is not empty, if the object has child nodes

		 	var children = parg.children;

		 	for (var i = 0; i &lt; children.length; i++) {

		 	// do something with each child element as children[i]

		 	// NOTE: List is live, Adding or removing children will change the list

		 	};

		 };

		 </listing>

		 ]]></example>
</method>
<method name='clientHeight' fullname='dom.core:Element/clientHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.

		 

		 <p>clientHeight can be calculated as CSS height + CSS padding - height of horizontal scrollbar (if present).</p>

		 

		 <p><strong>Note:</strong> offsetLeft returns the position the upper left edge of the element; not necessarily 

		 the 'real' left edge of the element. This is important for span elements in flowed text that wraps from one 

		 line to the next. The span may start in the middle of the page and wrap around to the beginning of the next 

		 line. The offsetLeft will refer to the left edge of the start of the span, not the left edge of text at the 

		 start of the second line. Therefore, a box with the left, top, width and height of offsetLeft, offsetTop, 

		 offsetWidth and offsetHeight will not be a bounding box for a span with wrapped text.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example shows how the clientHeight property and the offsetHeight property measure document height differently. 

		 The height of the div is set to 100, and this is the value retrieved by the offsetHeight property, not the clientHeight property. 

		 

		 <listing>

		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;

		 &lt;button onclick="alert(oDiv.clientHeight)">client height&lt;/button&gt;

		 &lt;button onclick="alert(oDiv.offsetHeight)">offset heightY&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533563(VS.85).aspx  MSDN: clientHeight Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.clientHeight  MDC - Element: clientHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#client-attributes  W3C - CSSOM View: clientHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='clientLeft' fullname='dom.core:Element/clientLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 The width of the left border of an element in pixels. 

		 

		 <p>It includes the width of the vertical scrollbar if the text direction of the element is right–to–left and 

		 if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left 

		 margin or the left padding.</p>

		 

		 <p><strong>Note:</strong> The difference between the offsetLeft and clientLeft properties is the border of the object.</p>

		 

		 <p><strong>Note:</strong> When layout.scrollbar.side property is set to 1 or to 3 and when the text-direction is set to RTL, 

		 then the vertical scrollbar is positioned on the left and this impacts the way clientLeft is computed.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533564(VS.85).aspx  MSDN: clientLeft Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.clientLeft  MDC - Element: clientLeft Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#client-attributes  W3C - CSSOM View: clientLeft Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='clientTop' fullname='dom.core:Element/clientTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 The width of the top border of an element in pixels. It does not include the top margin or padding.

		 

		 <p><strong>Note:</strong> The difference between the offsetTop and the clientTop properties is the border area of the object.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533565(VS.85).aspx  MSDN: clientTop Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.clientTop  MDC - Element: clientTop Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#client-attributes  W3C - CSSOM View: clientTop Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='clientWidth' fullname='dom.core:Element/clientWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the inner width of an element in pixels. It includes padding but not the vertical scrollbar (if present, if rendered), border or margin.

		 

		 ]]></description>
<example><![CDATA[
		 This example shows how the clientWidth property and the offsetWidth property measure document width differently. The width of the div 

		 is set to 200, and this is the value retrieved by the offsetWidth property, not the clientWidth property. 

		 

		 <listing>

		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;

		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;

		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset widthY&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533566(VS.85).aspx  MSDN: clientWidth Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.clientWidth  MDC - Element: clientWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#client-attributes  W3C - CSSOM View: clientWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='firstElementChild' fullname='dom.core:Element/firstElementChild/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 

		 Returns the first child element node of this element. null if this 

		 element has no child elements.

		 

		 ]]></description>
<example><![CDATA[
		 In this example, the alert shows "SPAN", which is the name of the 

		 first child node of the paragraph element.

		 <listing>

		 &lt;p id="para-01">

		 	&lt;span>First span&lt;/span>

		 &lt;/p>

		 

		 &lt;script type="text/javascript">

		 	var p01 = document.getElementById('para-01');

		 	alert(p01.firstElementChild.nodeName);

		 &lt;/script></listing>

		 

		 ]]></example>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.firstElementChild  MDC - Element: firstElementChild Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-firstElementChild  W3C - Element Traversel: firstElementChild Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#childElementCount

		 ]]></see>
<see><![CDATA[#lastElementChild

		 ]]></see>
<see><![CDATA[#nextElementSibling

		 ]]></see>
<see><![CDATA[#previousElementSibling

		 

		 ]]></see>
</method>
<method name='innerHTML' fullname='dom.core:Element/innerHTML/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 <strong>DOM Level 0 | NS\FireFox\IE4+</strong> 

		 

		 Sets or gets all of the markup and content within a given element.

		 

		 <p>Note: As there is no public specification for this property, 

		 implementations differ widely. For example, when text is entered into 

		 a text input, IE will change the value attribute of the input's 

		 innerHTML property but Gecko browsers do not.</p>

		 

		 <p>Note: It should never be used to write parts of a table—W3C DOM methods 

		 should be used for that—though it can be used to write an entire table 

		 or the contents of a cell.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // HTML:

		 // &lt;div id="d">&lt;p>Content&lt;/p>

		 // &lt;p>Further Elaborated&lt;/p>

		 // &lt;/div>

		 

		 d = document.getElementById("d");

		 dump(d.innerHTML);

		 

		 // the string "&lt;p>Content&lt;/p>&lt;p>Further Elaborated&lt;/p>"

		 // is dumped to the console window

		 </listing>

		 ]]></example>
</method>
<method name='lastElementChild' fullname='dom.core:Element/lastElementChild/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 

		 Returns the last child element node of this element. null if this 

		 element has no child elements.

		 

		 ]]></description>
<example><![CDATA[
		 In this example, the alert shows "B", which is the name of the 

		 last child node of the paragraph element.

		 <listing>

		 &lt;p id="para-01">

		 	&lt;span>First span&lt;/span>

		 	&lt;b>bold&lt;/b>

		 &lt;/p>

		 

		 &lt;script type="text/javascript">

		 	var p01 = document.getElementById('para-01');

		 	alert(p01.lastElementChild.nodeName);

		 &lt;/script></listing>

		 

		 ]]></example>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.lastElementChild  MDC - Element: lastElementChild Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-lastElementChild  W3C - Element Traversel: lastElementChild Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#childElementCount

		 ]]></see>
<see><![CDATA[#firstElementChild

		 ]]></see>
<see><![CDATA[#nextElementSibling

		 ]]></see>
<see><![CDATA[#previousElementSibling

		 

		 ]]></see>
</method>
<method name='nextElementSibling' fullname='dom.core:Element/nextElementSibling/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 

		 Returns the next sibling element node of this element. null if this 

		 element has no element sibling nodes that come after this one in the 

		 document tree.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="div-01">Here is div-01&lt;/div>

		 &lt;div id="div-02">Here is div-02&lt;/div>

		 

		 &lt;script type="text/javascript">

		 	var el = document.getElementById('div-01').nextElementSibling;

		 	document.write('&lt;p>Siblings of div-01&lt;/p>&lt;ol>');

		 	while (el) {

		 		document.write('&lt;li>' + el.nodeName + '&lt;/li>');

		 		el = el.nextElementSibling;

		 	}

		 	document.write('&lt;/ol>');

		 &lt;/script></listing>

		 

		 <p>This example outputs the following into the page when it loads:</p>

		 

		 <p>Siblings of div-01</p>

		 <ol>

		 	<li>DIV</li>

		 	<li>SCRIPT</li>

		 	<li>P</li>

		 	<li>OL</li>

		 </ol>

		 

		 ]]></example>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.nextElementSibling  MDC - Element: nextElementSibling Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-nextElementSibling  W3C - Element Traversel: nextElementSibling Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#childElementCount

		 ]]></see>
<see><![CDATA[#firstElementChild

		 ]]></see>
<see><![CDATA[#lastElementChild

		 ]]></see>
<see><![CDATA[#previousElementSibling

		 

		 ]]></see>
</method>
<method name='offsetHeight' fullname='dom.core:Element/offsetHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Height of an element relative to the element's offsetParent.

		 

		 <p>Typically, an element's offsetHeight is a measurement which includes 

		 the element borders, the element vertical padding, the element 

		 horizontal scrollbar (if present, if rendered) and the element CSS height.</p>

		 

		 <p>For the document body object, the measurement includes total linear 

		 content height instead of the element CSS height. Floated elements 

		 extending below other linear content are ignored.</p>

		 

		 <p><strong>Note (IE6):</strong> To comply with the <a class="external" rel="external nofollow" href="http://www.w3.org/TR/REC-CSS1/">Cascading Style Sheets, Level 1 (CSS1)</a> World Wide 

		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 

		 height of objects differently when you use the !DOCTYPE declaration in your 

		 document to switch on standards-compliant mode. This difference may affect 

		 the value of the offsetWidth propety. When standards-compliant mode is 

		 switched on, the width property specifies the distance between the left and 

		 right edges of the bounding box that surrounds the object's content. When 

		 standards-compliant mode is not switched on, and with earlier versions of 

		 Windows Internet Explorer, the width property also includes the border and 

		 padding belts that surround the object's bounding box.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example adjusts the size of a clock's readout to fit the current width and height of the document body.

		 

		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;A Simple Clock&lt;/title&gt;

		 &lt;script type="text/javascript"&gt;

		 	function startClock() {

		 		window.setInterval("Clock_Tick()", 1000);

		 		Clock_Tick();

		 	}

		 

		 	var iRatio = 4;

		 	function Clock_Tick() {

		 		var dToday = Date();

		 		var sTime = dToday.substring(11,19);

		 		var iDocHeight = document.body.offsetHeight;

		 		var iDocWidth = document.body.offsetWidth;

		 

		 		if ((iDocHeightRatio)&gt;iDocWidth)

		 		iDocHeight = iDocWidth / iRatio;

		 		document.all.MyTime.innerText = sTime;

		 		document.all.MyTime.style.fontSize = iDocHeight;

		 	}

		 &lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body onload="startClock()"&gt;

		 &lt;p id="MyTime"&gt;&amp;nbsp;&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx  MSDN: Measuring Element Dimension and Location

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534199(VS.85).aspx  MSDN: offsetHeight Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetHeight  MDC - Element: offsetHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='offsetLeft' fullname='dom.core:Element/offsetLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the number of pixels that the upper left corner of the current 

		 element is offset to the left within the offsetParent node.

		 

		 <p><strong>Note:</strong> offsetLeft returns the position the upper left edge of the element; 

		 not necessarily the 'real' left edge of the element. This is important 

		 for inline elements (such as span) in flowed text that wraps from one 

		 line to the next. The span may start in the middle of the line and wrap 

		 around to the beginning of the next line. The offsetLeft will refer to 

		 the left edge of the start of the span, not the left edge of text at the 

		 start of the second line. Therefore, a box with the left, top, width and 

		 height of offsetLeft, offsetTop, offsetWidth and offsetHeight will not be 

		 a bounding box for a span with wrapped text.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var colorTable = document.getElementById("t1");

		 var tOLeft = colorTable.offsetLeft;

		 

		 if (tOLeft > 5) {

		 	// large left offset: do something here

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx  MSDN: Measuring Element Dimension and Location

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534200(VS.85).aspx  MSDN: offsetLeft Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetLeft  MDC - Element: offsetLeft Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetLeft Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='offsetParent' fullname='dom.core:Element/offsetParent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 

		 The element from which all offset calculations are currently computed.

		 

		 <p>offsetParent returns a reference to the object which is the closest 

		 (nearest in the containment hierarchy) positioned containing element. 

		 If the element is non-positioned, the root element (html in standards 

		 compliant mode; body in quirks rendering mode) is the offsetParent. 

		 offsetParent returns null when the element has style.display set 

		 to "none".</p>

		 

		 <p><strong>Note (IE5):</strong> In Microsoft Internet Explorer 5, the offsetParent property returns 

		 the table object for the td object.</p>

		 

		 <p><strong>Note (IE4):</strong> In Internet Explorer 4.0 it returns 

		 the tr object. You can use the parentElement property to retrieve the 

		 immediate container of the table cell.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example shows how to determine the position of a td object. Although the td 

		 object appears to the far right in the document, its position is close to the x-axis and y-axis, 

		 because its offset parent is a table object rather than the document body. For Internet Explorer 4.0,

		 this same example returns a position of 0,0 because the offset parent is the table row.

		 

		 <listing>

		 &lt;table border='1' align='right'&gt;

		 	&lt;tr&gt;

		 		&lt;td id='oCell'&gt;This is a small table.&lt;/td&gt;

		 	&lt;/tr&gt;

		 &lt;/table&gt;</listing>

		 

		 <listing>

		 var oElement = document.getElementById("oCell");

		 

		 alert("The TD element is at (" + oElement.offsetLeft + 

		 "," + oElement.offsetTop + ")\n" + "The offset parent is " 

		 + oElement.offsetParent.tagName );</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534302(VS.85).aspx  MSDN: offsetParent Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetParent  MDC - Element: offsetParent Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetParent Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='offsetTop' fullname='dom.core:Element/offsetTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the distance of the current element relative to the 

		 top of the offsetParent node.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 d = document.getElementById("div1");

		 

		 topPos = d.offsetTop;

		 

		 if (topPos > 10) {

		 	// object is offset more

		 	// than 10 pixels from its parent

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx  MSDN: Measuring Element Dimension and Location

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534303(VS.85).aspx  MSDN: offsetTop Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetTop  MDC - Element: offsetTop Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetTop Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='offsetWidth' fullname='dom.core:Element/offsetWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 The width of an element, relative to the layout.

		 

		 <p>Typically, an element's offsetWidth is a measurement which includes 

		 the element borders, the element horizontal padding, the element 

		 vertical scrollbar (if present, if rendered) and the element CSS width.</p>

		 

		 <p><strong>Note (IE6):</strong> To comply with the <a class="external" rel="external nofollow" href="http://www.w3.org/TR/REC-CSS1/">Cascading Style Sheets, Level 1 (CSS1)</a> World Wide 

		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 

		 height of objects differently when you use the !DOCTYPE declaration in your 

		 document to switch on standards-compliant mode. This difference may affect 

		 the value of the offsetWidth propety. When standards-compliant mode is 

		 switched on, the width property specifies the distance between the left and 

		 right edges of the bounding box that surrounds the object's content. When 

		 standards-compliant mode is not switched on, and with earlier versions of 

		 Windows Internet Explorer, the width property also includes the border and 

		 padding belts that surround the object's bounding box.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example adjusts the size of a clock's readout to fit the current width and height of the document.

		 

		 <listing>

		 &lt;div id=oDiv STYLE="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;

		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;

		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset width&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx  MSDN: Measuring Element Dimension and Location

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534304(VS.85).aspx  MSDN: offsetWidth Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.offsetWidth  MDC - Element: offsetWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#offset-attributes  W3C - CSSOM View: offsetWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='previousElementSibling' fullname='dom.core:Element/previousElementSibling/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 

		 Returns the previous sibling element node of this element. null if 

		 this element has no element sibling nodes that come before this one 

		 in the document tree.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="div-01">Here is div-01&lt;/div>

		 &lt;div id="div-02">Here is div-02&lt;/div>

		 &lt;li>This is a list item&lt;/li>

		 &lt;li>This is another list item&lt;/li>

		 &lt;div id="div-03">Here is div-03&lt;/div>

		 

		 &lt;script type="text/javascript">

		 	var el = document.getElementById('div-03').previousElementSibling;

		 	document.write('&lt;p>Siblings of div-03&lt;/p>&lt;ol>');

		 	while (el) {

		 		document.write('&lt;li>' + el.nodeName + '&lt;/li>');

		 		el = el.previousElementSibling;

		 	}

		 	document.write('&lt;/ol>');

		 &lt;/script></listing>

		 

		 <p>This example outputs the following into the page when it loads:</p>

		 

		 <p>Siblings of div-03</p>

		 <ol>

		 	<li>LI</li>

		 	<li>LI</li>

		 	<li>DIV</li>

		 	<li>DIV</li>

		 </ol>

		 

		 ]]></example>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.previousElementSibling  MDC - Element: previousElementSibling Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-previousElementSibling  W3C - Element Traversel: previousElementSibling Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#childElementCount

		 ]]></see>
<see><![CDATA[#firstElementChild

		 ]]></see>
<see><![CDATA[#lastElementChild

		 ]]></see>
<see><![CDATA[#nextElementSibling

		 

		 ]]></see>
</method>
<method name='schemeTypeInfo' fullname='dom.core:Element/schemeTypeInfo/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:TypeInfo'>
<description><![CDATA[

		 <strong>DOM Level 3 | None</strong> 

		 

		 The type information associated with this element. 

		 ]]></description>
</method>
<method name='scrollHeight' fullname='dom.core:Element/scrollHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Height of the scroll view of an element; it includes the element padding but not its margin.

		 

		 <p>An element's scrollHeight is a measurement of the height of an element's content including 

		 content not visible on the screen due to overflow.</p>

		 

		 <p>If the element's content generated a vertical scrollbar, the scrollHeight value is equal to 

		 the minimum clientHeight the element would require in order to fit all the content in the viewpoint 

		 without using a vertical scrollbar. When an element's content does not generate a vertical scrollbar, 

		 then its scrollHeight property is equal to its clientHeight property.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example uses the scrollHeight property to retrieve the height of the viewable content.

		 

		 <listing>

		 &lt;script type="text/javascript"&gt;

		 	function fnCheckScroll(){

		 		var iNewHeight = oDiv.scrollHeight;

		 		alert("The value of the scrollHeight property is: " 

		 		+ iNewHeight + "px"); 

		 	}

		 &lt;/script&gt;

		 ...

		 &lt;div id="oDiv" style="overflow: scroll; height= 100px; width= 250px; text-align: left"&gt;

		 	... 

		 &lt;/div&gt;

		 &lt;button onclick="fnCheckScroll()"&gt;Check scrollHeight&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534615(VS.85).aspx  MSDN: scrollHeight Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.scrollHeight  MDC - Element: scrollHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#scroll-attributes  W3C - CSSOM View: scrollHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='scrollLeft' fullname='dom.core:Element/scrollLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Gets or sets the number of pixels that an element's content is scrolled to the left.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Set the number of pixels scrolled

		 element.scrollLeft = 10;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534617(VS.85).aspx  MSDN: scrollLeft Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.scrollLeft  MDC - Element: scrollLeft Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#scroll-attributes  W3C - CSSOM View: scrollLeft Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='scrollTop' fullname='dom.core:Element/scrollTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Gets or sets the number of pixels that the content of an element is scrolled upward.

		 

		 <p>An element's scrollTop is a measurement of the distance of an element's top to its topmost visible content.</p>

		 

		 <p>When an element content does not generate a vertical scrollbar, then its scrollTop value defaults to 0.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Get the number of pixels scrolled

		 var  intElemScrollTop = element.scrollTop;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/workshop/author/dhtml/reference/properties/scrolltop.asp?frame=true  MSDN: scrollTop Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.scrollTop  MDC - Element: scrollTop Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#scroll-attributes  W3C - CSSOM View: scrollTop Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='scrollWidth' fullname='dom.core:Element/scrollWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater. 

		 

		 <p>If the element is wider than its content area (for example, if there are scroll bars for scrolling through the content), the scrollWidth is larger than the clientWidth.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="aDiv" style="width: 100px; height: 200px; overflow: auto;"&gt;

		 	-FooBar-FooBar-FooBar

		 &lt;/div&gt;

		 &lt;br/&gt;

		 &lt;input type="button" value="Show scrollWidth"

		 onclick="alert(document.getElementById('aDiv').scrollWidth);"&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOM 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534619(VS.85).aspx  MSDN: scrollWidth Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.scrollWidth  MDC - Element: scrollWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#scroll-attributes  W3C - CSSOM View: scrollWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#elementview  Quirksmode: ElementView properties

		 

		 ]]></see>
</method>
<method name='tagName' fullname='dom.core:Element/tagName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The name of the element. If Node.localName is different from null, 

		 this attribute is a qualified name.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.0+

		 ]]></productversion>
<productversion><![CDATA[Firefox 1.0+

		 ]]></productversion>
<productversion><![CDATA[Opera 8.0+

		 ]]></productversion>
<productversion><![CDATA[Safari 1.3+

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</method>
<method name='innerHTML' fullname='dom.core:Element/innerHTML/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='scrollLeft' fullname='dom.core:Element/scrollLeft/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scrollTop' fullname='dom.core:Element/scrollTop/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<classRec name='Text' fullname='dom.core:Text' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\Text.as' namespace='dom.core' access='public' baseclass='dom.core:CharacterData' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Text interface represents the textual content of an Element or Attr.  If an 

	 element has no markup within its content, it has a single child implementing Text 

	 that contains the element's text.  However, if the element contains markup, it is 

	 parsed into information items and Text nodes that form its children.

	 

	 <p>New documents have a single Text node for each block of text.  Over time, more 

	 Text nodes may be created as the document's content changes.  The Node.normalize() 

	 method merges adjacent Text objects back into a single node for each block of text.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms757862%28VS.85%29.aspx MSDN - IXMLDOMText

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Text MDC - Text

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1312295772 W3C - Text

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
</classRec>
<method name='replacewholeText' fullname='dom.core:Text/replacewholeText' isStatic='false' isFinal='false' isOverride='false'  param_names='content' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Text'>
<description><![CDATA[

		 Replaces the text of the node and all of its logically adjacent text nodes 

		 with the specified text.  The replaced nodes are removed, including the 

		 current node, unless it was the recipient of the replacement text.

		 

		 <p><strong>Note:</strong> This method returns the text node which received the replacement text, or null 

		 if the replacement text is an empty string.  The returned node is the current 

		 node unless the current node is read only, in which case the returned node is 

		 a newly created text node of the same type which has been inserted at the 

		 location of the replacement.</p>

		 

		 <p><strong>Note (Mozilla):</strong> Firefox's implementation of this method does not yet support EntityReference 

		 nodes as defined by the specification.</p>

		 

		 ]]></description>
<param><![CDATA[content Specifying the text with which to replace the node's current contents.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[Firefox 3.5+

		 ]]></productversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The Text node created with the specified content.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Text.replaceWholeText MDC - Text.replacewholeText()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Text3-replaceWholeText W3C - Text.replacewholeText()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR : One of the 

		 text nodes being replaced is read only.

		 

		 ]]></throws>
</method>
<method name='splitText' fullname='dom.core:Text/splitText' isStatic='false' isFinal='false' isOverride='false'  param_names='offset' param_types='Number' param_defaults='undefined' result_type='dom.core:Text'>
<description><![CDATA[

		 Breaks the Text node into two nodes at the specified offset, keeping both 

		 nodes in the tree as siblings.

		 

		 <p><strong>Note:</strong> After the split, the current node contains all the content up to the specified 

		 offset point, and a newly created node of the same type contains the remaining 

		 text.  The newly created node is returned to the caller.  If the original node 

		 had a parent, the new node is inserted as the next sibling of the original 

		 node.  If the offset is equal to the length of the original node, the newly 

		 created node has no data.</p>

		 

		 ]]></description>
<param><![CDATA[offset 16-bit integer offset at which to split; the first character in the node is numbered zero.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[The new node, of the same type as this node.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms753789%28VS.85%29.aspx MSDN - splitText Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Text.splitText MDC - Text.splitText()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-38853C1D W3C - Text.splitText()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR : The specified offset is negative or is greater than the number of 16-bit units in the node's text.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR : The node is read only.

		 

		 ]]></throws>
</method>
<method name='isElementContentWhitespace' fullname='dom.core:Text/isElementContentWhitespace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a Boolean value indicating whether or not the text node contains whitespace within its content.  

		 This determination is made during the loading of the document, or if validation occurs when Document.normalizeDocument() is called.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Text.isElementContentWhitespace MDC - Text.isElementContentWhitespace

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Text3-isElementContentWhitespace W3C - Text.isElementContentWhitespace

		 

		 ]]></see>
</method>
<method name='wholeText' fullname='dom.core:Text/wholeText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns all text of all Text nodes logically adjacent to this node, concatenated in document order.

		 

		 ]]></description>
<example><![CDATA[
		 Suppose you have the following simple paragraph within your webpage (with 

		 some whitespace added to aid formatting throughout the code samples here), 

		 whose DOM node is stored in the variable para:

		 

		 <listing>

		 &lt;p>Thru-hiking is great!  &lt;strong>No insipid election coverage!&lt;/strong>

		 However, &lt;a href="http://en.wikipedia.org/wiki/Absentee_ballot">casting a  

		 ballot&lt;/a> is tricky.&lt;/p></listing>

		 

		 <p>You decide you don’t like the middle sentence, so you remove it:</p>

		 

		 <listing>para.removeChild(para.childNodes[1]);</listing>

		 

		 <p>Later, you decide to rephrase things to, “Thru-hiking is great, but casting a 

		 ballot is tricky.” while preserving the hyperlink. So you try this:</p>

		 

		 <listing>para.firstChild.data = "Thru-hiking is great, but ";</listing>

		 

		 <p>All set, right? Wrong! What happened was you removed the strong element, 

		 but the removed sentence’s element separated two text nodes, one for the 

		 first sentence and one for the first word of the last. Instead, you now 

		 effectively have this:</p>

		 

		 <listing>

		 &lt;p>Thru-hiking is great, but However, &lt;a href="http://en.wikipedia.org/wiki/Absentee_ballot">

		 casting a ballot&lt;/a> is tricky.&lt;/p></listing>

		 

		 <p>You’d really prefer to treat all those adjacent text nodes as a single one. 

		 That’s where wholeText comes in: if you have multiple adjacent text nodes, 

		 you can access the contents of all of them using wholeText. Let’s pretend 

		 you never made that last mistake. In that case, we have:</p>

		 

		 <listing>assert(para.firstChild.wholeText == "Thru-hiking is great!    However, ");</listing>

		 

		 <p>wholeText is just a property of text nodes that returns the string of data 

		 making up all the adjacent (i.e. not separated by an element boundary) 

		 text nodes together.</p>

		 

		 <p>Now let’s return to our original problem. What we want is to be able to 

		 replace the whole text with new text. That’s where replaceWholeText() 

		 comes in:</p>

		 

		 <listing>para.firstChild.replaceWholeText("Thru-hiking is great, but ");</listing>

		 

		 <p>We’re removing every adjacent text node (all the ones that constituted 

		 the whole text) but the one on which replaceWholeText() is called, and 

		 we’re changing the remaining one to the new text. What we have now is this:</p>

		 

		 <listing>

		 &lt;p>Thru-hiking is great, but &lt;a href="http://en.wikipedia.org/wiki/Absentee_ballot">

		 casting a ballot&lt;/a> is tricky.&lt;/p></listing>

		 

		 <p>Some uses of the whole-text functionality may be better served by using 

		 Node.textContent or the longstanding innerHTML; that’s fine and probably 

		 clearer in most circumstances. If you have to work with mixed content 

		 within an element as here, however, wholeText and replaceWholeText() may be useful.</p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<productversion><![CDATA[Firefox 3.5+

		 ]]></productversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Text.wholeText MDC - Text.wholeText

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Text3-wholeText W3C - Text.wholeText

		 

		 ]]></see>
</method>
<method name='wholeText' fullname='dom.core:Text/wholeText/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='Document' fullname='dom.core:Document' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\Document.as' namespace='dom.core' access='public' baseclass='dom.core:Node' interfaces='dom.style.css:DocumentCSS;dom.style.stylesheets:DocumentStyle;cssom.view:DocumentView;dom.views:DocumentView;dom.tr.range:DocumentRange;dom.events:DocumentEvent;dom.tr.traversal:DocumentTraversal;selectors:NodeSelector;dom.loadsave:DOMImplementationLS;dom.loadsave:DocumentLS' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 In the DOM, the document object provides a general way to represent HTML, 

	 XHTML, and XML documents. Document objects implement the general DOM Core 

	 document interface (which itself implements the Node interface).

	 

	 <p>In addition to the generalized DOM Core document interface, HTML documents 

	 also implement the DOM HTMLDocument interface, which is a more specialized 

	 interface for dealing with HTML documents (e.g., document.cookie, 

	 document.alinkColor). Methods listed here that are part of this more 

	 specialized interface have an asterisk (~~) next to them.</p>

	 

	 <p>The document is contained by the window object and may contain any number 

	 of elements.</p>

	 

	 <p>The document interface provides access to things such as the document type, 

	 its color and formatting, plugins and applets, as well providing methods 

	 for creating and manipulating all of the document's child nodes, or elements, 

	 such as BODY and TABLE elements.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms531073%28VS.85%29.aspx MSDN - document Object

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document MDC - Document

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#i-Document W3C - Document

	 

	 ]]></see>
<modified><![CDATA[DOMCore 3

	 ]]></modified>
<metadata>
	<Event owner='dom.core:Document' name='offline' type='dom.events.Event' >
<description><![CDATA[

	 Is fired when the browser switches between online and offline mode.

	 
	 ]]></description>
<eventType><![CDATA[offline

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Document' name='online' type='dom.events.Event' >
<description><![CDATA[

	 Is fired when the browser switches between online and offline mode.

	 
	 ]]></description>
<eventType><![CDATA[online

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Document' name='scroll' type='dom.events.Event' >
<description><![CDATA[

	 A document view or an element has been scrolled. The scroll occured before 

	 the dispatch of this event type.

	 
	 ]]></description>
<eventType><![CDATA[scroll

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Document' name='resize' type='dom.events.Event' >
<description><![CDATA[

	 A document view or an element has been resized. The resize occured before 

	 the dispatch of this event type.

	 
	 ]]></description>
<eventType><![CDATA[resize

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Document' name='unload' type='dom.events.Event' >
<description><![CDATA[

	 The DOM implementation removes from the environment the resource 

	 (such as the document) or any dependent resources (such as images, 

	 style sheets, scripts). The document is unloaded after the dispatch 

	 of this event type. If this event type is dispatched, implementations 

	 are required to dispatch this event at least on the Document node.

	 
	 ]]></description>
<eventType><![CDATA[unload

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Document' name='load' type='dom.events.Event' >
<description><![CDATA[

	 The DOM Implementation finishes loading the resource (such as the 

	 document) and any dependent resources (such as images, style sheets, 

	 or scripts). Dependent resources that fail to load will not prevent 

	 this event from firing if the resource that loaded them is still 

	 accessible via the DOM. If this event type is dispatched, 

	 implementations are required to dispatch this event at least on the 

	 Document node.

	 
	 ]]></description>
<eventType><![CDATA[load

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Document' name='DOMSubtreeModified' type='dom.events.MutationEvent' >
<description><![CDATA[

	 This is a general event for notification of all changes to the 

	 document. It can be used instead of the more specific mutation and 

	 mutation name events listed below. It may be dispatched after a 

	 single modification to the document or, at the implementation's 

	 discretion, after multiple changes have occurred. The latter use 

	 should generally be used to accommodate multiple changes which occur 

	 either simultaneously or in rapid succession. The target of this 

	 event is the lowest common parent of the changes which have taken 

	 place. This event is dispatched after any other events caused by the 

	 mutation(s) have occurred.

	 
	 ]]></description>
<eventType><![CDATA[DOMSubtreeModified

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Document' name='mousewheel' type='dom.events.MouseWheelEvent' >
<description><![CDATA[

	 A mouse wheel has been rotated around the y-axis.

	 
	 ]]></description>
<eventType><![CDATA[mousewheel

	 ]]></eventType>
	</Event>
</metadata>
<metadata>
	<Event owner='dom.core:Document' name='mousemultiwheel' type='dom.events.MouseMultiWheelEvent' >
<description><![CDATA[

	 A mouse wheel has been rotated. A default action of user agent 

	 generated event objects of this type causes implementations to 

	 dispatch a mousewheel event iff it supports that event type and 

	 MouseMultiWheelEvent.wheelDeltaY is non-zero.

	 
	 ]]></description>
<eventType><![CDATA[mousemultiwheel

	 ]]></eventType>
	</Event>
</metadata>
</classRec>
<method name='abort' fullname='dom.core:Document/abort' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 

		 If the document is currently being loaded as a result of the method load being invoked the loading and parsing is immediately 

		 aborted. The possibly partial result of parsing the document is discarded and the document is cleared. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-abort W3C - DocumentLS.abort()

		 

		 ]]></see>
</method>
<method name='adoptNode' fullname='dom.core:Document/adoptNode' isStatic='false' isFinal='false' isOverride='false'  param_names='source' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Attempts to adopt a node from another document to this document. If supported, 

		 it changes the ownerDocument of the source node, its children, as well as the 

		 attached attribute nodes if there are any. If the source node has a parent it 

		 is first removed from the child list of its parent. This effectively allows 

		 moving a subtree from one document to another (unlike importNode() which create 

		 a copy of the source node instead of moving it). When it fails, applications 

		 should use Document.importNode() instead. Note that if the adopted node is 

		 already part of this document (i.e. the source and target document are the same), 

		 this method still has the effect of removing the source node from the child 

		 list of its parent, if any. The following list describes the specifics for 

		 each type of node.

		 

		 <table class="innertable">

		 	<tr><th>Attribute</th><th>Value</th></tr>

		 	<tr>

		 		<td>ATTRIBUTE_NODE</td>

		 		<td>The ownerElement attribute is set to null and the specified flag is set to true on the adopted Attr. The descendants of the source Attr are recursively adopted.</td>

		 	</tr>

		 	<tr>

		 		<td>DOCUMENT_FRAGMENT_NODE</td>

		 		<td>The descendants of the source node are recursively adopted.</td>

		 	</tr>

		 	<tr>

		 		<td>DOCUMENT_NODE</td>

		 		<td>Document nodes cannot be adopted.</td>

		 	</tr>

		 	<tr>

		 		<td>DOCUMENT_TYPE_NODE</td>

		 		<td>DocumentType nodes cannot be adopted.</td>

		 	</tr>

		 	<tr>

		 		<td>ELEMENT_NODE</td>

		 		<td>Specified attribute nodes of the source element are adopted. Default attributes are discarded, though if the document being adopted into defines default attributes for this element name, those are assigned. The descendants of the source element are recursively adopted.</td>

		 	</tr>

		 <tr>

		 		<td>ENTITY_NODE</td>

		 		<td>Entity nodes cannot be adopted.</td>

		 	</tr>

		 <tr>

		 		<td>ENTITY_REFERENCE_NODE</td>

		 		<td>Only the EntityReference node itself is adopted, the descendants are discarded, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.</td>

		 	</tr>

		 <tr>

		 		<td>NOTATION_NODE</td>

		 		<td>Notation nodes cannot be adopted.</td>

		 	</tr>

		 <tr>

		 		<td>PROCESSING_INSTRUCTION_NODE, TEXT_NODE, CDATA_SECTION_NODE, COMMENT_NODE</td>

		 		<td>These 

		 nodes can all be adopted. No specifics.</td>

		 	</tr>

		 </table>

		 

		 <p><strong>Note:</strong> Since it does not create new nodes unlike the Document.importNode() method, 

		 this method does not raise an INVALID_CHARACTER_ERR exception, and applications 

		 should use the Document.normalizeDocument() method to check if an imported name 

		 is not an XML name according to the XML version in use.</p>

		 

		 ]]></description>
<param><![CDATA[source The node to move into this document.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The adopted node, or null if this operation fails, such as when 

		 the source node comes from a different implementation.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.adoptNode MDC - Document.adoptNode()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-adoptNode W3C - Document.adoptNode()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the source 

		 node is of type DOCUMENT, DOCUMENT_TYPE.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised when 

		 the source node is readonly.

		 

		 ]]></throws>
</method>
<method name='attachEvent' fullname='dom.core:Document/attachEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener' param_types='dom.core.types:DOMString;Function' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Binds the specified function to an event, so that the function gets called whenever 

		 the event fires on the object.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>if (window.attachEvent) window.attachEvent("onload", statusreport); //invoke function</listing>

		 

		 ]]></example>
<param><![CDATA[type The event string should include the "on" prefix (ie: "onload", "onclick" etc).

		 ]]></param>
<param><![CDATA[listener The function or method to associate with the event.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<return><![CDATA[true (successful) or false (failed).

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536343%28VS.85%29.aspx MSDN - attachEvent Method

		 

		 ]]></see>
</method>
<method name='canDispatch' fullname='dom.core:Document/canDispatch' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;type' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 Tests if the implementation can generate events of a specified type. 

		 

		 ]]></description>
<param><![CDATA[namespaceURI Specifies the Event.namespaceURI of the event.

		 ]]></param>
<param><![CDATA[type Specifies the Event.type of the event.

		 ]]></param>
<playerversion><![CDATA[DOMEvents 3

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<return><![CDATA[If the implementation can generate and dispatch this event type

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent-canDispatch W3C - DOM 3 Events: DocumentEvent.canDispatch()

		 

		 ]]></see>
</method>
<method name='createAttribute' fullname='dom.core:Document/createAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Attr'>
<description><![CDATA[

		 Creates an Attr of the given name. Note that the Attr instance can 

		 then be set on an Element  using the setAttributeNode method.

		 To create an attribute with a qualified name and namespace URI, use 

		 the createAttributeNS method.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 

		 &lt;head&gt;

		 &lt;title&gt; create/set/get Attribute example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function doAttrib() {

		 	var node = document.getElementById("div1");

		 	var a = document.createAttribute("my_attrib");

		 	a.nodeValue = "newVal";

		 	node.setAttributeNode(a);

		 	alert(node.getAttribute("my_attrib")); // "newVal"

		 }

		 

		 // alternative form not actually using createAttribute

		 //function doAttrib() {

		 //var node = document.getElementById("div1");

		 //node.setAttribute("my_attrib", "newVal");

		 //alert(node.getAttribute("my_attrib")); // "newVal"

		 //}

		 

		 &lt;/script&gt;

		 

		 &lt;/head&gt;

		 

		 &lt;body onload="doAttrib();"&gt;

		 	&lt;div id="div1"&gt;

		 		&lt;p&gt;Some content here&lt;/p&gt;

		 	&lt;/div&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[name The name of the attribute.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 1

		 

		 ]]></since>
<return><![CDATA[A new Attr object with the nodeName  attribute set to name, 

		 and localName, prefix, and namespaceURI set to null. The value of 

		 the attribute is the empty string.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536379%28VS.85%29.aspx MSDN - createAttribute Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createAttribute MDC - Document.createAttribute()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1084891198 W3C - Document.createAttribute()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified name is not an XML name according to the XML version 

		 in use specified in the Document.xmlVersion attribute.

		 

		 ]]></throws>
</method>
<method name='createAttributeNS' fullname='dom.core:Document/createAttributeNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;qualifiedName' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core:Attr'>
<description><![CDATA[

		 Creates an attribute of the given qualified name and namespace URI.

		 Per XML Namespaces, applications must use the value null as the 

		 namespaceURI parameter for methods if they wish to have no namespace.

		 

		 ]]></description>
<param><![CDATA[namespaceURI The namespace URI of the attribute to create.

		 ]]></param>
<param><![CDATA[qualifiedName The qualified name of the attribute to instantiate.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A new Attr object with the following attributes:

		 <table class="innertable">

		 	<tr><th>Attribute</th><th>Value</th></tr>

		 	<tr>

		 		<td><code>Node.nodeName</code></td>

		 		<td>qualifiedName</td>

		 	</tr>

		 	<tr>

		 		<td><code>Node.namespaceURI</code></td>

		 		<td><code>namespaceURI</code></td>

		 	</tr>

		 	<tr>

		 		<td><code>Node.prefix</code></td>

		 		<td>prefix, extracted from <code>qualifiedName</code>, or <code>null</code> if there is no	prefix</td>

		 	</tr>

		 	<tr>

		 		<td><code>Node.localName</code></td>

		 		<td>local name, extracted from <code>qualifiedName</code></td>

		 	</tr>

		 	<tr>

		 		<td><code>Attr.name</code></td>

		 		<td>qualifiedName</td>

		 	</tr>

		 	<tr>

		 		<td><code>Node.nodeValue</code></td>

		 		<td>the empty string</td>

		 	</tr>

		 </table>

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createAttributeNS MDC - Document.createAttributeNS()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-DocCrAttrNS W3C - Document.createAttributeNS()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified qualifiedName  is not an XML name according to the XML 

		 version in use specified in the Document.xmlVersion attribute.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NAMESPACE_ERR: Raised if the qualifiedName 

		 is a malformed qualified name, if the qualifiedName has a prefix and 

		 the namespaceURI is null, if the qualifiedName has a prefix that is 

		 "xml" and the namespaceURI is different from 

		 "http://www.w3.org/XML/1998/namespace", if the qualifiedName or its 

		 prefix is "xmlns" and the namespaceURI is different from 

		 "http://www.w3.org/2000/xmlns/", or if the namespaceURI is 

		 "http://www.w3.org/2000/xmlns/" and neither the qualifiedName nor its 

		 prefix is "xmlns".

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Always thrown if the 

		 current document does not support the "XML" feature, since namespaces 

		 were defined by XML.

		 

		 ]]></throws>
</method>
<method name='createCDATASection' fullname='dom.core:Document/createCDATASection' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:CDATASection'>
<description><![CDATA[

		 Creates a CDATASection node whose value is the specified string.

		 

		 <p><strong>Note (Mozilla):</strong> Will throw a NS_ERROR_DOM_INVALID_CHARACTER_ERR exception if one tries to 

		 submit the closing CDATA sequence ("]]&gt;") as part of the data, so unescaped user-provided data cannot 

		 be safely used without with this method getting this exception (createTextNode() can often be used in 

		 its place). </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var docu = new DOMParser().parseFromString('&lt;xml&gt;&lt;/xml&gt;',  "application/xml");

		 

		 var cdata = docu.createCDATASection('Some &lt;CDATA&gt; data &amp; then some');

		 

		 docu.getElementsByTagName('xml')[0].appendChild(cdata);

		 

		 alert(new XMLSerializer().serializeToString(docu));

		 // Displays: &lt;xml&gt;&lt;![CDATA[Some &lt;CDATA&gt; data &amp; then some]]&gt;&lt;/xml&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[data The data for the CDATASection contents.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[The new CDATASection object.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createCDATASection MDC - Document.createCDATASection()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D26C0AF8 W3C - Document.createCDATASection()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if this 

		 document is an HTML document.

		 

		 ]]></throws>
</method>
<method name='createComment' fullname='dom.core:Document/createComment' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Comment'>
<description><![CDATA[

		 Creates a Comment node given the specified string.

		 

		 <p><strong>Note (Mozilla):</strong> Will throw a NS_ERROR_DOM_INVALID_CHARACTER_ERR exception if one tries to 

		 include the "--" sequence as part of the data, so if based on user data, this potential string would 

		 need to be escaped or have its exception caught. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var docu = new DOMParser().parseFromString('&lt;xml&gt;&lt;/xml&gt;',  "application/xml");

		 

		 var comment = docu.createComment('This is a not-so-secret comment in your document');

		 

		 docu.getElementsByTagName('xml')[0].appendChild(comment);

		 

		 alert(new XMLSerializer().serializeToString(docu));

		 // Displays: &lt;xml&gt;&lt;!--This is a not-so-secret comment in your document--&gt;&lt;/xml&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[data The data for the node.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 1

		 

		 ]]></since>
<return><![CDATA[The new Comment object.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536383%28VS.85%29.aspx MSDN - createComment Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createComment MDC - Document.createComment()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1334481328 W3C - Document.createComment()

		 

		 ]]></see>
</method>
<method name='createDocumentFragment' fullname='dom.core:Document/createDocumentFragment' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DocumentFragment'>
<description><![CDATA[

		 Creates an empty DocumentFragment object. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var frag = document.createDocumentFragment();

		 frag.appendChild(document.createTextNode('Ipsum Lorem'));

		 document.body.appendChild(frag);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[A new DocumentFragment.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536387%28VS.85%29.aspx MSDN - createDocumentFragment Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createDocumentFragment MDC - Document.createDocumentFragment()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-35CB04B5 W3C - Document.createDocumentFragment()

		 

		 ]]></see>
</method>
<method name='createElement' fullname='dom.core:Document/createElement' isStatic='false' isFinal='false' isOverride='false'  param_names='tagName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 Creates an element of the type specified. Note that the instance

		 returned implements the Element interface, so attributes can be 

		 specified directly on the returned object.

		 In addition, if there are known attributes with default values, 

		 Attr nodes representing them are automatically created and attached 

		 to the element.

		 To create an element with a qualified name and namespace URI, use 

		 the createElementNS method.

		 

		 <p><strong>Note (Mozilla):</strong> Gecko implementation of createElement doesn't conform 

		 to the DOM spec for XUL and XHTML documents: localName and namespaceURI are not set 

		 to null on the created element. See bug 280692 for details.</p>

		 

		 <p><strong>Note (IE):</strong> In Microsoft Internet Explorer 4.0, the only new elements you can create are  img,  area, and  

		 option. As of Internet Explorer 5, you can create all elements programmatically, except  frame and  

		 iframe. The properties of these created elements are read/write and can be accessed programmatically.

		 Before you use new objects, you must explicitly add them to their respective collections or to the 

		 document. To insert new elements into the current document, use the  insertBefore method or the  

		 appendChild method. </p>

		 

		 <p><strong>Note (IE):</strong> You must perform a second step when you use createElement to create the  

		 input element. The createElement method generates an input text box, because that is the default input 

		 type property. To insert any other kind of input element, first invoke createElement for input, and then 

		 set the type property to the appropriate value in the next line of code. </p>

		 

		 <p><strong>Note (IE):</strong> Attributes can be included with the tagName as long as the entire string is valid 

		 HTML. To include the  NAME attribute at run time on objects created with the createElement method, use the tagName.</p>

		 

		 <p><strong>Note (IE):</strong> Use the tagName to include attributes when form elements are created that will be reset 

		 using the  reset method or a  BUTTON with a  TYPE attribute value of reset.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This creates a new &lt;div&gt; and inserts it before the element with id "org_div1":

		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;||Working with elements||&lt;/title&gt;

		 &lt;/head&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 var my_div = null;

		 var newDiv = null;

		 

		 function addElement() {

		 // create a new div element

		 // and give it some content

		 newDiv = document.createElement("div");

		 newDiv.innerHTML = "&lt;h1&gt;Hi there and greetings!&lt;/h1&gt;";

		 

		 // add the newly created element and it's content into the DOM

		 my_div = document.getElementById("org_div1");

		 document.body.insertBefore(newDiv, my_div);

		 }

		 

		 

		 &lt;/script&gt;

		 

		 &lt;body onload="addElement()"&gt;

		 	&lt;div id='org_div1'&gt; The text above has been created dynamically.&lt;/div&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[tagName The name of the element type to instantiate. For XML, 

		 this is case-sensitive, otherwise it depends on the case-sensitivity 

		 of the markup language in use. In that case, the name is mapped to 

		 the canonical form of that markup by the DOM implementation.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[A new Element object with the nodeName attribute set to tagName, 

		 and localName, prefix, and namespaceURI set to null.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536389%28VS.85%29.aspx MSDN - createElement Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createElement MDC - Document.createElement()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-2141741547 W3C - Document.createElement()

		 ]]></see>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=280692 bug 280692

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified name is not an XML name according to the XML version in 

		 use specified in the Document.xmlVersion attribute.

		 

		 ]]></throws>
</method>
<method name='createElementNS' fullname='dom.core:Document/createElementNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;qualifiedName' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 Creates an element of the given qualified name and namespace URI.

		 Per XML Namespaces, applications must use the value null as the 

		 namespaceURI parameter for methods if they wish to have no namespace.

		 

		 ]]></description>
<example><![CDATA[
		 This creates a new &lt;div&gt; element in the XHTML namespace and appends it to the vbox element. Although 

		 this is not an extremely useful XUL document, it does demonstrate the use of elements from two different 

		 namespaces within a single document:

		 <listing>

		 &lt;?xml version="1.0"?&gt;

		 &lt;page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"

		 		xmlns:html="http://www.w3.org/1999/xhtml"

		 		title="||Working with elements||"

		 		onload="init()"&gt;

		 

		 &lt;script type="text/javascript"&gt;&lt;![CDATA[

		 var container;

		 var newdiv;

		 var txtnode;

		 

		 function init(){

		 	container = document.getElementById("ContainerBox");

		 	newdiv = document.createElementNS("http://www.w3.org/1999/xhtml","html:div");

		 	txtnode = document.createTextNode("This is text that was constructed dynamically with createElementNS and createTextNode then inserted into the document using appendChild.");

		 	newdiv.appendChild(txtnode);

		 	container.appendChild(newdiv);

		 }

		 

		 ]]&gt;&lt;/script&gt;

		 

		 	&lt;vbox id='ContainerBox' flex='1'&gt;

		 		&lt;html:div&gt;

		 			The script on this page will add dynamic content below:

		 		&lt;/html:div&gt;

		 	&lt;/vbox&gt;

		 &lt;/page&gt;</listing>

		 

		 <p>The example given above uses inline script which is not recommended in XHTML documents. This particular 

		 example is actually an XUL document with embedded XHTML, however, the recommendation still applies. Inline 

		 script does not cause any problems for this short example, however, for any serious work you should learn 

		 about Properly Using CSS and JavaScript in XHTML Documents. </p>

		 

		 ]]></example>
<param><![CDATA[namespaceURI The namespace URI of the element to create.

		 ]]></param>
<param><![CDATA[qualifiedName The qualified name of the element type to instantiate.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A new Element object with the following attributes:

		 <table class="innertable">

		 	<tr><th>Attribute</th><th>Value</th></tr>

		 	<tr>

		 		<td><code>Node.nodeName</code></td>

		 		<td>qualifiedName</td>

		 	</tr>

		 	<tr>

		 		<td><code>Node.namespaceURI</code></td>

		 		<td><code>namespaceURI</code></td>

		 	</tr>

		 	<tr>

		 		<td><code>Node.prefix</code></td>

		 		<td>prefix, extracted from <code>qualifiedName</code>, or <code>null</code> if there is no	prefix</td>

		 	</tr>

		 	<tr>

		 		<td><code>Node.localName</code></td>

		 		<td>local name, extracted from <code>qualifiedName</code></td>

		 	</tr>

		 	<tr>

		 		<td><code>Element.tagName</code></td>

		 		<td>qualifiedName</td>

		 	</tr>

		 </table>

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createElementNS MDC - Document.createElementNS()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-DocCrElNS W3C - Document.createElementNS()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified qualifiedName is not an XML name according to the XML 

		 version in use specified in the Document.xmlVersion attribute.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NAMESPACE_ERR: Raised if the qualifiedName 

		 is a malformed qualified name, if the qualifiedName has a prefix and the 

		 namespaceURI is null, or if the qualifiedName has a prefix that is "xml" 

		 and the namespaceURI is different from 

		 "http://www.w3.org/XML/1998/namespace" [XML Namespaces], or if the 

		 qualifiedName or its prefix is "xmlns" and the namespaceURI is different 

		 from "http://www.w3.org/2000/xmlns/", or if the namespaceURI is 

		 "http://www.w3.org/2000/xmlns/" and neither the qualifiedName nor its 

		 prefix is "xmlns".

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Always thrown if the 

		 current document does not support the "XML" feature, since namespaces 

		 were defined by XML.

		 

		 ]]></throws>
</method>
<method name='createEntityReference' fullname='dom.core:Document/createEntityReference' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:EntityReference'>
<description><![CDATA[

		 Creates an EntityReference object. In addition, if the referenced 

		 entity is known, the child list of the EntityReference node is made 

		 the same as that of the corresponding Entity node.

		 

		 <p><strong>Note:</strong> If any descendant of the Entity node has an unbound namespace 

		 prefix, the corresponding descendant of the created EntityReference 

		 node is also unbound; (its namespaceURI is null). The DOM Level 2 and 

		 3 do not support any mechanism to resolve namespace prefixes in this case.</p>

		 

		 ]]></description>
<param><![CDATA[name The name of the entity to reference.

		 Unlike Document.createElementNS or Document.createAttributeNS, no 

		 namespace well-formed checking is done on the entity name. Applications 

		 should invoke Document.normalizeDocument() with the parameter "namespaces" 

		 set to true in order to ensure that the entity name is namespace well-formed. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[The new EntityReference object.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createEntityReference MDC - Document.createEntityReference()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-392B75AE W3C - Document.createEntityReference()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the 

		 specified name is not an XML name according to the XML version in 

		 use specified in the Document.xmlVersion attribute.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if this document 

		 is an HTML document.

		 

		 ]]></throws>
</method>
<method name='createEvent' fullname='dom.core:Document/createEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='eventType' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.events:Event'>
<description><![CDATA[

		 

		 Creates an event object of the type specified. 

		 

		 ]]></description>
<param><![CDATA[eventType The eventType parameter specifies the name of the 

		 DOM Events interface to be supported by the created event object, 

		 e.g. "Event", "MouseEvent", "MutationEvent" and so on. If the Event 

		 is to be dispatched via the EventTarget.dispatchEvent() method the 

		 appropriate event initialization method must be called after creation 

		 in order to initialize the Event's values.

		 

		 As an example, a user wishing to synthesize some kind of UIEvent would 

		 invoke DocumentEvent.createEvent("UIEvent"). The UIEvent.initUIEventNS() 

		 ethod could then be called on the newly created UIEvent object to 

		 set the specific type of user interface event to be dispatched, DOMActivate 

		 for example, and set its context information, e.g. UIEvent.detail in 

		 this example.

		 

		 For backward compatibility reason, "UIEvents", "MouseEvents", "MutationEvents", 

		 and "HTMLEvents" feature names are valid values for the parameter eventType 

		 and represent respectively the interfaces "UIEvent", "MouseEvent", 

		 "MutationEvent", and "Event", and the characters 'a'..'z' are considered 

		 equivalent to the characters 'A'..'Z'.

		 ]]></param>
<playerversion><![CDATA[DOMEvents 2

		 ]]></playerversion>
<since><![CDATA[DOMEvents 2

		 ]]></since>
<return><![CDATA[The newly created event object.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent-createEvent W3C - DOM 3 Events: DocumentEvent.createEvent()

		 

		 ]]></see>
</method>
<method name='createEventObject' fullname='dom.core:Document/createEventObject' isStatic='false' isFinal='false' isOverride='false'  param_names='existingEvent' param_types='dom.events:Event' param_defaults='null' result_type='dom.events:Event'>
<description><![CDATA[

		 Generates an  event object to pass event context information when you use the  fireEvent method.

		 

		 ]]></description>
<example><![CDATA[
		 The following sample shows how to use the createEventObject method with the fireEvent method.

		 <listing>

		 &lt;html&gt;

		 &lt;body&gt;

		 &lt;script&gt;

		 	function OuterClick() {

		 		if(event.expando == "from_inner") {

		 			alert("Event actually fired by clicking on inner DIV!")

		 		} else {

		 			alert("Event fired by clicking on outer DIV!")

		 		}

		 	}

		 	function InnerClick() {

		 		var eventObj = document.createEventObject();

		 		// Set an expando property on the event object. This will be used by the 

		 		// event handler to determine what element was clicked on.

		 		eventObj.expando = "from_inner";

		 		parent.document.all.Outer.fireEvent("onclick",eventObj);

		 		event.cancelBubble = true;

		 	}

		 &lt;/script&gt;

		 &lt;div id="Outer" onclick="OuterClick()" style="height:200;width:200;padding:50;background-color:mistyrose"&gt;

		 	&lt;div id="Inner" onclick="InnerClick()" style="height:100;width:100;padding:25;background-color:lavender"&gt;&lt;/div&gt;

		 &lt;/div&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[existingEvent A object that specifies an existing event object on which to base the new object.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns an event object.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536390%28VS.85%29.aspx MSDN - createEventObject Method

		 

		 ]]></see>
</method>
<method name='createLSInput' fullname='dom.core:Document/createLSInput' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSInput'>
<description><![CDATA[

		 

		 Create a new empty input source object where LSInput.characterStream, LSInput.byteStream, LSInput.stringData  

		 LSInput.systemId, LSInput.publicId, LSInput.baseURI, and LSInput.encoding are null, and LSInput.certifiedText is false. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[The newly created input object. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSInput W3C - DOMImplementationLS.createLSInput()

		 

		 ]]></see>
</method>
<method name='createLSOutput' fullname='dom.core:Document/createLSOutput' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSOutput'>
<description><![CDATA[

		 

		 Create a new empty output destination object where LSOutput.characterStream, LSOutput.byteStream, LSOutput.systemId, 

		 LSOutput.encoding are null. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[The newly created output object. 

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSOutput W3C - DOMImplementationLS.createLSOutput()

		 

		 ]]></see>
</method>
<method name='createLSParser' fullname='dom.core:Document/createLSParser' isStatic='false' isFinal='false' isOverride='false'  param_names='mode;schemaType' param_types='Number;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.loadsave:LSParser'>
<description><![CDATA[

		 

		 Create a new LSParser. The newly constructed parser may then be configured by means of its 

		 DOMConfiguration object, and used to parse documents by means of its parse method. 

		 

		 ]]></description>
<param><![CDATA[mode The mode argument is either MODE_SYNCHRONOUS or MODE_ASYNCHRONOUS, if mode is 

		 MODE_SYNCHRONOUS then the LSParser that is created will operate in synchronous mode, if it's 

		 MODE_ASYNCHRONOUS then the LSParser that is created will operate in asynchronous mode. 

		 ]]></param>
<param><![CDATA[schemaType An absolute URI representing the type of the schema language used during 

		 the load of a Document using the newly created LSParser. Note that no lexical checking is done 

		 on the absolute URI. In order to create a LSParser for any kind of schema types (i.e. the LSParser 

		 will be free to use any schema found), use the value null. 

		 

		 <p><strong>Note:</strong> For W3C XML Schema [XML Schema Part 1], applications must use the value 

		 "http://www.w3.org/2001/XMLSchema". For XML DTD [XML 1.0], applications must use the value 

		 "http://www.w3.org/TR/REC-xml". Other Schema languages are outside the scope of the W3C and therefore 

		 should recommend an absolute URI in order to use this method. </p>

		 

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[The newly created LSParser object. This LSParser is either synchronous or asynchronous depending on the value of the mode argument. 

		 

		 <p><strong>Note:</strong> By default, the newly created LSParser does not contain a DOMErrorHandler, 

		 i.e. the value of the "error-handler" configuration parameter is null. However, implementations may provide 

		 a default error handler at creation time. In that case, the initial value of the "error-handler" configuration 

		 parameter on the new LSParser object contains a reference to the default error handler. </p>

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSParser W3C - DOMImplementationLS.createLSParser()

		 

		 ]]></see>
</method>
<method name='createLSSerializer' fullname='dom.core:Document/createLSSerializer' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.loadsave:LSSerializer'>
<description><![CDATA[

		 

		 Create a new LSSerializer object. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<since><![CDATA[DOMLS 3

		 ]]></since>
<return><![CDATA[The newly created LSSerializer object.

		 

		 <p><strong>Note:</strong> By default, the newly created LSSerializer  has no DOMErrorHandler, i.e. the value of the 

		 "error-handler" configuration parameter is null. However, implementations may provide a default error handler at creation time. 

		 In that case, the initial value of the "error-handler"  configuration parameter on the new LSSerializer object contains a 

		 reference to the default error handler. </p>

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSSerializer W3C - DOMImplementationLS.createLSSerializer()

		 

		 ]]></see>
</method>
<method name='createNodeIterator' fullname='dom.core:Document/createNodeIterator' isStatic='false' isFinal='false' isOverride='false'  param_names='root;whatToShow;filter;entityReferenceExpansion' param_types='dom.core:Node;Number;dom.tr.traversal:NodeFilter;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='dom.tr.traversal:NodeIterator'>
<description><![CDATA[

		 

		 Create a new NodeIterator over the subtree rooted at the specified node. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 var nodeList = new Array();

		 var currentNode;

		 

		 while (currentNode = nodeIterator.nextNode()) {

		 	nodeList.push(currentNode);

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[root The node which will be iterated together with its children. The iterator is initially positioned 

		 just before this node. The <code>whatToShow</code> flags and the filter, if any, are not considered when setting this position. The <code>root</code> must not be <code>null</code>.

		 ]]></param>
<param><![CDATA[whatToShow This flag specifies which node types may appear in the logical view of the tree presented 

		 by the iterator. These flags can be combined using OR.

		 ]]></param>
<param><![CDATA[filter The <code>NodeFilter</code> to be used with this <code>TreeWalker</code>, or <code>null</code> to indicate no filter.

		 ]]></param>
<param><![CDATA[entityReferenceExpansion The value of this flag determines whether entity reference nodes are expanded.

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The newly created NodeIterator.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.createNodeIterator  MDC - Document: createNodeIterator Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document  W3C - DOM Level 2 Traversal: createNodeIterator Method

		 

		 ]]></see>
</method>
<method name='createProcessingInstruction' fullname='dom.core:Document/createProcessingInstruction' isStatic='false' isFinal='false' isOverride='false'  param_names='target;data' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core:ProcessingInstruction'>
<description><![CDATA[

		 Creates a ProcessingInstruction node given the specified name and 

		 data strings.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var docu = new DOMParser().parseFromString('&lt;xml&gt;&lt;/xml&gt;',  "application/xml");

		 

		 var pi = docu.createProcessingInstruction('xml-stylesheet', 'href="mycss.css" type="text/css"');

		 

		 docu.getElementsByTagName('xml')[0].appendChild(pi);

		 

		 alert(new XMLSerializer().serializeToString(docu));

		 // Displays: &lt;xml&gt;&lt;?xml-stylsheet href="mycss.css" type="text/css"?&gt;&lt;/xml&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[target The target part of the processing instruction.

		 Unlike Document.createElementNS or Document.createAttributeNS, no namespace 

		 well-formed checking is done on the target name. Applications should invoke 

		 Document.normalizeDocument() with the parameter "namespaces" set to true in 

		 order to ensure that the target name is namespace well-formed. 

		 ]]></param>
<param><![CDATA[data The data for the node.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[The new ProcessingInstruction object.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createProcessingInstruction MDC - Document.createProcessingInstruction()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-135944439 W3C - Document.createProcessingInstruction()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the specified

		 target is not an XML name according to the XML version in use specified in 

		 the Document.xmlVersion attribute.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if this document is 

		 an HTML document.

		 

		 ]]></throws>
</method>
<method name='createRange' fullname='dom.core:Document/createRange' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.tr.range:Range'>
<description><![CDATA[

		 

		 This interface can be obtained from the object implementing the Document interface using binding-specific 

		 casting methods. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var range = document.createRange();

		 range.setStart(startNode, startOffset);

		 range.setEnd(endNode, endOffset);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The initial state of the Range returned from this method is such that both of its boundary-points 

		 are positioned at the beginning of the corresponding Document, before any content. The Range returned can 

		 only be used to select content associated with this Document, or with DocumentFragments and Attrs for which 

		 this Document is the ownerDocument.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536394%28VS.85%29.aspx  MSDN: createRange Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createRange  MDC - Document: createRange Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-DocumentRange-idl W3C - DOM Level 2 Range: DocumentRange

		 

		 ]]></see>
</method>
<method name='createStyleSheet' fullname='dom.core:Document/createStyleSheet' isStatic='false' isFinal='false' isOverride='false'  param_names='url;index' param_types='dom.core.types:DOMString;Number' param_defaults='null;unknown' result_type='dom.style.stylesheets:StyleSheet'>
<description><![CDATA[

		 Creates a style sheet for the document. 

		 

		 <p><strong>Note (IE):</strong> You can create up to 31 styleSheet objects with the createStyleSheet method. After 

		 that, the method returns an "Invalid Argument" exception. To create additional objects, use  createElement and 

		 append them to the  HEAD of the document as follows: 

		 

		 <listing>

		 var styleSheet = document.createElement('STYLE');

		 document.documentElement.firstChild.appendChild(styleSheet);</listing>

		 </p>

		 

		 ]]></description>
<example><![CDATA[
		 This example uses the createStyleSheet method to create a link to a style sheet.

		 <listing>document.createStyleSheet('styles.css');</listing>

		 

		 ]]></example>
<param><![CDATA[url Specifies how to add the style sheet to the document. If a file name is specified for the URL, the style information is added as a  link object. If the URL contains style information, it is added to the  style object.

		 ]]></param>
<param><![CDATA[index The index that indicates where the new style sheet is inserted in the  styleSheets collection. The default is to insert the new style sheet at the end of the collection.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a  styleSheet object. 

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx MSDN - createStyleSheet Method

		 

		 ]]></see>
</method>
<method name='createTextNode' fullname='dom.core:Document/createTextNode' isStatic='false' isFinal='false' isOverride='false'  param_names='data' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Text'>
<description><![CDATA[

		 Creates a Text node given the specified string.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;createTextNode example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function addTextNode() {

		 	var newtext = document.createTextNode(" Some text added dynamically. ");

		 	var para = document.getElementById("p1");

		 	para.appendChild(newtext);

		 }

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body&gt;

		 &lt;div style="border: 1px solid red"&gt;

		 &lt;p id="p1"&gt;First line of paragraph.&lt;br /&gt;&lt;/p&gt;

		 &lt;/div&gt;&lt;br /&gt;

		 

		 &lt;button onclick="addTextNode();"&gt;add another textNode.&lt;/button&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[data The data for the node.

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[The new Text object.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536400%28VS.85%29.aspx MSDN - createTextNode Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createTextNode MDC - Document.createTextNode()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1975348127 W3C - Document.createTextNode()

		 

		 ]]></see>
</method>
<method name='createTreeWalker' fullname='dom.core:Document/createTreeWalker' isStatic='false' isFinal='false' isOverride='false'  param_names='root;whatToShow;filter;entityReferenceExpansion' param_types='dom.core:Node;Number;dom.tr.traversal:NodeFilter;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='dom.tr.traversal:TreeWalker'>
<description><![CDATA[

		 

		 Create a new TreeWalker over the subtree rooted at the specified node. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var treeWalker = document.createTreeWalker(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 var nodeList = new Array();

		 while(treeWalker.nextNode()) nodeList.push(treeWalker.currentNode);</listing>

		 

		 ]]></example>
<param><![CDATA[root The node which will serve as the <code>root</code> for the TreeWalker. The whatToShow flags and the NodeFilter 

		 are not considered when setting this value; any node type will be accepted as the <code>root</code>. The <code>currentNode</code> of the 

		 TreeWalker is initialized to this node, whether or not it is visible. The <code>root</code> functions as a stopping point for 

		 traversal methods that look upward in the document structure, such as <code>parentNode</code> and nextNode. The <code>root</code> must not 

		 be <code>null</code>.

		 ]]></param>
<param><![CDATA[whatToShow This flag specifies which node types may appear in the logical view of the tree presented by 

		 the tree-walker. These flags can be combined using OR.

		 ]]></param>
<param><![CDATA[filter The <code>NodeFilter</code> to be used with this <code>TreeWalker</code>, or <code>null</code> to indicate no filter.

		 ]]></param>
<param><![CDATA[entityReferenceExpansion If this flag is false, the contents of <code>EntityReference</code> nodes are not presented in the logical view.

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The newly created <code>TreeWalker</code>.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.createNodeIterator  MDC - Document: createNodeIterator Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document  W3C - DOM Level 2 Traversal: createNodeIterator Method

		 

		 ]]></see>
</method>
<method name='detachEvent' fullname='dom.core:Document/detachEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener' param_types='dom.core.types:DOMString;Function' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Unbinds the specified function from the event, so that the function stops receiving notifications when the event fires.

		 

		 <p><strong>Note (IE):</strong> Behaviors that attach to events using the attachEvent method must explicitly call 

		 the detachEvent method to stop receiving notifications from the page when the  ondetach event fires. 

		 Behaviors that attach to events using the  PUBLIC:ATTACH element automatically stop receiving notifications 

		 when the behavior detaches from the element, and thus do not need to call the detachEvent method.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example calls the detachEvent method from an HTML Component (HTC) when the highlighting effect is 

		 removed from the page, causing the ondetach event to fire.

		 <listing>

		 &lt;PUBLIC:ATTACH EVENT="ondetach" ONEVENT="cleanup()" /&gt;

		 

		 &lt;script language="JScript"&gt;

		 attachEvent ('onmouseover', Hilite);

		 attachEvent ('onmouseout', Restore);

		 

		 function cleanup() {

		 	detachEvent ('onmouseover', Hilite);

		 	detachEvent ('onmouseout', Restore);

		 }

		 

		 function Hilite() {

		 	if (event.srcElement == element) { 

		 		normalColor = style.color;  

		 		runtimeStyle.color  = "red";

		 		runtimeStyle.cursor = "hand";

		 	}

		 }

		 

		 function Restore() {

		 	if (event.srcElement == element) {

		 		runtimeStyle.color  = normalColor;

		 		runtimeStyle.cursor = "";

		 	}

		 }

		 &lt;/script&gt;</listing>

		 

		 

		 ]]></example>
<param><![CDATA[type Specifies any of the standard  DHTML Events.

		 ]]></param>
<param><![CDATA[listener Specifies the function previously set using the attachEvent method.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536411%28VS.85%29.aspx MSDN - detachEvent Method

		 

		 ]]></see>
</method>
<method name='elementFromPoint' fullname='dom.core:Document/elementFromPoint' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='Number;Number' param_defaults='undefined;undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 

		 Returns the element from the document whose elementFromPoint method is being called which is the 

		 topmost element which lies under the given point. 

		 

		 <p>The point is specified via coordinates, in CSS pixels, relative to the upper-left-most point 

		 in the window or frame containing the document.</p>

		 

		 <p><strong>Note:</strong> If the element at the specified point belongs to another document (for example, 

		 an iframe's subdocument), the element in the DOM of the document the method is called on (in the iframe 

		 case, the iframe itself) is returned. If the element at the given point is anonymous or XBL generated 

		 content, such as a textbox's scroll bars, then the first non-anonymous ancestor element (for example, 

		 the textbox) is returned.</p>

		 

		 <p><strong>Note:</strong> If the specified point is outside the visible bounds of the document or either 

		 coordinate is negative, the result is null.</p>

		 

		 <p><strong>Note:</strong> The browsers do not entirely agree which mouse coordinates this method needs. 

		 IE and Firefox 3 need clientX/Y (relative to the viewport), while Opera and Safari need pageX/Y (relative 

		 to the document).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;elementFromPoint example&lt;/title&gt;

		 		&lt;script type="text/javascript"&gt;

		 			function changeColor(newColor) {

		 				elem = document.elementFromPoint(2, 2);

		 				elem.style.color = newColor;

		 			}

		 		&lt;/script&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body&gt;

		 		&lt;p id="para1"&gt;Some text here&lt;/p&gt;

		 		&lt;button onclick="changeColor('blue');"&gt;blue&lt;/button&gt;

		 		&lt;button onclick="changeColor('red');"&gt;red&lt;/button&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;

		 </listing>

		 

		 ]]></example>
<param><![CDATA[x The X coordinate to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.

		 ]]></param>
<param><![CDATA[y The Y coordinate to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.

		 ]]></param>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_alternative

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_alternative

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_alternative

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The element at x,y in the viewport

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536417(VS.85).aspx  MSDN: elementFromPoint Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.elementFromPoint  MDC - Document: elementFromPoint Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-documentview-interface  W3C - CSSOM View: elementFromPoint Method

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#documentview  Quirksmode: DocumentView and ElementView methods

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='enableStylesheetsForSet' fullname='dom.core:Document/enableStylesheetsForSet' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 

		 Invoking this method must change the disabled attribute on each StyleSheet object with a title in the 

		 styleSheets attribute, so that all those whose title matches the name argument are enabled, and all others 

		 are disabled. Title matches must be case-sensitive.

		 

		 <p>Invoking this method with the empty string value must disable all alternative and preferred style sheets

		 (but does not change the state of persistent style sheets).</p>

		 

		 <p>Invoking this method with the null value must have no effect.</p>

		 

		 <p>Style sheets that do not have a title are never affected by this method. This method does not change the 

		 values of the lastStyleSheetSet or preferredStyleSheetSet  attributes.</p>

		 

		 ]]></description>
<param><![CDATA[name

		 

		 ]]></param>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.enableStyleSheetsForSet MDC - Document.enableStylesheetsForSet()

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-enablestylesheetsforset W3C - DocumentStyle.enableStylesheetsForSet()

		 

		 ]]></see>
</method>
<method name='getElementsByTagName' fullname='dom.core:Document/getElementsByTagName' isStatic='false' isFinal='false' isOverride='false'  param_names='tagname' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 Returns a NodeList of all the Elements in document order with a 

		 given tag name and are contained in the document.

		 

		 ]]></description>
<param><![CDATA[tagname The name of the tag to match on. The special 

		 value "~~" matches all tags. For XML, the tagname  parameter is 

		 case-sensitive, otherwise it depends on the case-sensitivity of 

		 the markup language in use. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<return><![CDATA[A new NodeList object containing all the matched Elements.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536439%28VS.85%29.aspx MSDN - getElementsByTagName Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.getElementsByTagName MDC - Document.getElementsByTagName()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-A6C9094 W3C - Document.getElementsByTagName()

		 

		 ]]></see>
</method>
<method name='getElementsByTagNameNS' fullname='dom.core:Document/getElementsByTagNameNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;localName' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 Returns a NodeList of all the Elements with a given local name and 

		 namespace URI in document order.

		 

		 ]]></description>
<param><![CDATA[namespaceURI The namespace URI of the elements to match on. 

		 The special value "~~" matches all namespaces.

		 ]]></param>
<param><![CDATA[localName The local name of the elements to match on. The 

		 special value "~~" matches all local names.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A new NodeList object containing all the matched Elements.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.getElementsByTagNameNS MDC - Document.getElementsByTagNameNS()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getElBTNNS W3C - Document.getElementsByTagNameNS()

		 

		 ]]></see>
</method>
<method name='getElemenyById' fullname='dom.core:Document/getElemenyById' isStatic='false' isFinal='false' isOverride='false'  param_names='elementId' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 Returns the Element that has an ID attribute with the given value. 

		 If no such element exists, this returns null. If more than one 

		 element has an ID attribute with that value, what is returned is undefined.

		 

		 <p><strong>Note:</strong> Attributes with the name "ID" or "id" are not of type ID 

		 unless so defined.</p>

		 

		 <p><strong>Note:</strong> Simply creating an element and assigning an ID will not make 

		 the element accessible by getElementById. Instead one needs to insert the element first 

		 into the document tree with insertBefore or a similar method, probably into a hidden div. 

		 

		 <listing>var element = document.createElement("div");

		 element.id = 'testqq';

		 var el = document.getElementById('testqq'); // el will be null!</listing>

		 

		 New users should note that the capitalization of 'Id' must be correct for the code to function 

		 - 'getElementByID' does not work, however natural it may seem. 

		 </p>

		 

		 <p><strong>Note (IE):</strong> In IE8 mode, getElementById performs a case-sensitive match on the 

		 ID attribute only. In IE7 mode and previous modes, this method performs a case-insensitive match 

		 on both the ID and NAME attributes, which might produce unexpected results.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;getElementById example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 function changeColor(newColor) {

		 	elem = document.getElementById("para1");

		 	elem.style.color = newColor;

		 }

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body&gt;

		 &lt;p id="para1"&gt;Some text here&lt;/p&gt;

		 &lt;button onclick="changeColor('blue');"&gt;blue&lt;/button&gt;

		 &lt;button onclick="changeColor('red');"&gt;red&lt;/button&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[elementId The unique id value for an element.

		 ]]></param>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<return><![CDATA[The matching element or null if there is none.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536437%28VS.85%29.aspx MSDN - getElementById Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.getElementById MDC - Document.getElemenyById()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getElBId W3C - Document.getElemenyById()

		 

		 ]]></see>
<modified><![CDATA[DOMCore 2

		 ]]></modified>
</method>
<method name='getOverrideStyle' fullname='dom.core:Document/getOverrideStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='elt;pseudoElt' param_types='dom.core:Element;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.style.css:CSSStyleDeclaration'>
<description><![CDATA[

		 

		 This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element. 

		 

		 ]]></description>
<param><![CDATA[elt The element whose style is to be modified. This parameter cannot be null.

		 ]]></param>
<param><![CDATA[pseudoElt The pseudo-element or null if none.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The override style declaration.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DocumentCSS-getOverrideStyle W3C - DOM Level 2 Style: DocumentCSS.getOverrideStyle()

		 

		 ]]></see>
</method>
<method name='importNode' fullname='dom.core:Document/importNode' isStatic='false' isFinal='false' isOverride='false'  param_names='importedNode;deep' param_types='dom.core:Node;Boolean' param_defaults='undefined;undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Imports a node from another document to this document, without altering or removing the source 

		 node from the original document; this method creates a new copy of the source node. The returned 

		 node has no parent; (parentNode is null).

		 

		 <p>For all nodes, importing a node creates a node object owned by the importing document, with attribute 

		 values identical to the source node's nodeName and nodeType, plus the attributes related to 

		 namespaces (prefix, localName, and namespaceURI). As in the cloneNode operation, the source node is 

		 not altered. User data associated to the imported node is not carried over. However, if any 

		 UserDataHandlers has been specified along with the associated data these handlers will be called with 

		 the appropriate parameters before this method returns.</p>

		 

		 <p>Additional information is copied as appropriate to the nodeType, attempting to mirror the behavior 

		 expected if a fragment of XML or HTML source was copied from one document to another, recognizing that 

		 the two documents may have different DTDs in the XML case. The following list describes the specifics

		 for each type of node.</p>

		 

		 <table class="innertable">

		 	<tr><th>Node Type</th><th>Description</th></tr>

		 	<tr>

		 		<td>ATTRIBUTE_NODE</td>

		 		<td>The ownerElement attribute is set to null and the specified flag is set to true on the generated 

		 Attr. The descendants of the source Attr are recursively imported and the resulting nodes reassembled to 

		 form the corresponding subtree. Note that the deep parameter has no effect on Attr nodes; they always 

		 carry their children with them when imported.</td>

		 	</tr>

		 	<tr>

		 		<td>DOCUMENT_FRAGMENT_NODE</td>

		 		<td>If the deep option was set to true, the descendants of the source DocumentFragment are recursively imported and the resulting nodes reassembled under the imported DocumentFragment to form the corresponding subtree. Otherwise, this simply generates an empty DocumentFragment.</td>

		 	</tr>

		 <tr>

		 		<td>DOCUMENT_NODE</td>

		 		<td>Document nodes cannot be imported.</td>

		 	</tr>

		 <tr>

		 		<td>DOCUMENT_TYPE_NODE</td>

		 		<td>DocumentType nodes cannot be imported.</td>

		 	</tr>

		 <tr>

		 		<td>ELEMENT_NODE</td>

		 		<td>Specified attribute nodes of the source element are imported, and the generated Attr nodes are attached to the generated Element. Default attributes are not copied, though if the document being imported into defines default attributes for this element name, those are assigned. If the importNode  deep parameter was set to true, the descendants of the source element are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</td>

		 	</tr>

		 <tr>

		 		<td>ENTITY_NODE</td>

		 		<td>Entity nodes can be imported, however in the current release of the DOM the DocumentType is readonly. Ability to add these imported nodes to a DocumentType will be considered for addition to a future release of the DOM. On import, the publicId, systemId, and notationName attributes are copied. If a deep import is requested, the descendants of the the source Entity are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</td>

		 	</tr>

		 <tr>

		 		<td>ENTITY_REFERENCE_NODE</td>

		 		<td>Only the EntityReference itself is copied, even if a deep import is requested, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.</td>

		 	</tr>

		 <tr>

		 		<td>NOTATION_NODE</td>

		 		<td>Notation nodes can be imported, however in the current release of the DOM the DocumentType is readonly. Ability to add these imported nodes to a DocumentType will be considered for addition to a future release of the DOM. On import, the publicId and systemId attributes are copied. Note that the deep parameter has no effect on this type of nodes since they cannot have any children.</td>

		 	</tr>

		 <tr>

		 		<td>PROCESSING_INSTRUCTION_NODE</td>

		 		<td>The imported node copies its target and data values from those of the source node. Note that the deep parameter has no effect on this type of nodes since they cannot have any children.</td>

		 	</tr>

		 <tr>

		 		<td>TEXT_NODE, CDATA_SECTION_NODE, COMMENT_NODE</td>

		 		<td>These three types of nodes inheriting from CharacterData copy their data and length attributes from those of the source node. Note that the deep parameter has no effect on these types of nodes since they cannot have any children.</td>

		 	</tr>

		 </table>

		 

		 <p><strong>Note:</strong> The original node is not removed from the original document. The imported node is a clone of the original.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var iframe = document.getElementsByTagName("iframe")[0];

		 var oldNode = iframe.contentDocument.getElementById("myNode");

		 var newNode = document.importNode(oldNode,true);

		 document.getElementById("container").appendChild(newNode);</listing>

		 

		 ]]></example>
<param><![CDATA[importedNode The node to import.

		 ]]></param>
<param><![CDATA[deep If true, recursively import the subtree under the specified node; if false, import only 

		 the node itself, as explained above. This has no effect on nodes that cannot have any children, and on 

		 Attr, and EntityReference nodes.

		 ]]></param>
<playerversion><![CDATA[DOMCore 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The imported node that belongs to this Document.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.importNode MDC - Document.importNode()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Core-Document-importNode W3C - Document.importNode()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the type of node being imported is not supported.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if one of the imported names is not an XML name 

		 according to the XML version in use specified in the Document.xmlVersion attribute. This may happen when 

		 importing an XML 1.1 element into an XML 1.0 document, for instance.

		 

		 ]]></throws>
</method>
<method name='load' fullname='dom.core:Document/load' isStatic='false' isFinal='false' isOverride='false'  param_names='uri' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 Replaces the content of the document with the result of parsing the given URI. Invoking this method 

		 will either block the caller or return to the caller immediately depending on the value of the async 

		 attribute. Once the document is fully loaded the document will fire a "load" event that the caller can 

		 register as a listener for. If an error occurs the document will fire an "error" event so that the caller 

		 knows that the load failed (see ParseErrorEvent). If this method is called on a document that is currently 

		 loading, the current load is interrupted and the new URI load is initiated. 

		 

		 <p><strong>Note (Mozilla):</strong> As of at least Gecko 1.9, this no longer supports cross-site loading 

		 of documents (Use XMLHttpRequest instead).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var xmlDoc = document.implementation.createDocument("", "test", null);

		 function documentLoaded (e) {

		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string

		 }

		 xmlDoc.addEventListener("load", documentLoaded, false);

		 xmlDoc.load('querydata.xml');</listing>

		 

		 ]]></example>
<param><![CDATA[uri The URI reference for the XML file to be loaded. If this is a relative URI, the base URI used by the implementation is implementation dependent.

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<return><![CDATA[If async is set to true load returns true if the document load was successfully initiated. If an 

		 error occurred when initiating the document load load returns false. If async is set to false load returns 

		 true if the document was successfully loaded and parsed. If an error occurred when either loading or parsing 

		 the URI load returns false.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.load MDC - Document.load()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-load W3C - DocumentLS.load()

		 

		 ]]></see>
</method>
<method name='loadXML' fullname='dom.core:Document/loadXML' isStatic='false' isFinal='false' isOverride='false'  param_names='source' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 Replace the content of the document with the result of parsing the input string, this method is always synchronous. 

		 This method always parses from a DOMString, which means the data is always UTF16. All other encoding information is ignored. 

		 

		 ]]></description>
<param><![CDATA[source A string containing an XML document.

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<return><![CDATA[true if parsing the input string succeeded without errors, otherwise false.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-loadXML W3C - DocumentLS.loadXML()

		 

		 ]]></see>
</method>
<method name='normalizeDocument' fullname='dom.core:Document/normalizeDocument' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 This method acts as if the document was going through a save and load 

		 cycle, putting the document in a "normal" form. As a consequence, this 

		 method updates the replacement tree of EntityReference nodes and 

		 normalizes Text nodes, as defined in the method Node.normalize().

		 Otherwise, the actual result depends on the features being set on the 

		 Document.domConfig object and governing what operations actually take 

		 place. Noticeably this method could also make the document namespace 

		 well-formed according to the algorithm described in Namespace Normalization, 

		 check the character normalization, remove the CDATASection nodes, etc. See 

		 DOMConfiguration for details.

		 

		 <listing>

		 // Keep in the document the information defined

		 // in the XML Information Set (Java example)

		 DOMConfiguration docConfig = myDocument.getDomConfig();

		 docConfig.setParameter("infoset", Boolean.TRUE);

		 myDocument.normalizeDocument();</listing>

		 

		 <p>Mutation events, when supported, are generated to reflect the changes 

		 occurring on the document.

		 If errors occur during the invocation of this method, such as an attempt 

		 to update a read-only node or a Node.nodeName contains an invalid 

		 character according to the XML version in use, errors or warnings 

		 (DOMError.SEVERITY_ERROR or DOMError.SEVERITY_WARNING) will be reported 

		 using the DOMErrorHandler object associated with the "error-handler" parameter. 

		 Note this method might also report fatal errors (DOMError.SEVERITY_FATAL_ERROR) 

		 if an implementation cannot recover from an error.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document MDC - Document.normalizeDocument()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-normalizeDocument W3C - Document.normalizeDocument()

		 

		 ]]></see>
</method>
<method name='querySelector' fullname='dom.core:Document/querySelector' isStatic='false' isFinal='false' isOverride='false'  param_names='selectors' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 

		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;Selectors API Example&lt;/title&gt;

		 	&lt;/head&gt;

		 	&lt;body&gt;

		 

		 		&lt;div id="foo"&gt;

		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;

		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;

		 		&lt;/div&gt;

		 		&lt;div id="bar"&gt;

		 			&lt;p&gt;...&lt;/p&gt;

		 		&lt;/div&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 x would contain the first element in the document with an ID of either foo or bar (or both). In the sample document above, it would select the div element with the ID of foo because it is first in document order.

		 <listing>var x = document.querySelector("#foo, #bar");</listing>

		 

		 ]]></example>
<param><![CDATA[selectors One or more selectors

		 ]]></param>
<playerversion><![CDATA[Selectors 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 3

		 

		 ]]></since>
<return><![CDATA[The first matching Element node within the node’s subtree. If there is no such node, returns null. 

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc288169%28VS.85%29.aspx MSDN - querySelector Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.querySelector MDC - Document.querySelector()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/selectors-api/#nodeselector W3C - NodeSelector.querySelector()

		 

		 ]]></see>
</method>
<method name='querySelectorAll' fullname='dom.core:Document/querySelectorAll' isStatic='false' isFinal='false' isOverride='false'  param_names='selectors' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 

		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;Selectors API Example&lt;/title&gt;

		 	&lt;/head&gt;

		 	&lt;body&gt;

		 

		 		&lt;div id="foo"&gt;

		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;

		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;

		 		&lt;/div&gt;

		 		&lt;div id="bar"&gt;

		 			&lt;p&gt;...&lt;/p&gt;

		 		&lt;/div&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 The following example would select all p elements in the document that have a class of either "error" or "warning".

		 <listing>var alerts = document.querySelectorAll("p.warning, p.error");</listing>

		 

		 ]]></example>
<param><![CDATA[selectors One or more selectors

		 ]]></param>
<playerversion><![CDATA[Selectors 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<since><![CDATA[DOMCore 3

		 

		 ]]></since>
<return><![CDATA[A NodeList containing all of the matching Element nodes within the node’s subtree, in document order. If there are no such nodes, returns an empty NodeList.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc304115%28VS.85%29.aspx MSDN - querySelectorAll Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.querySelectorAll MDC - Document.querySelectorAll()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/selectors-api/#nodeselector W3C - NodeSelector.querySelectorAll()

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_core.html#gettingelements  Quirksmode: Getting elements

		 

		 ]]></see>
</method>
<method name='renameNode' fullname='dom.core:Document/renameNode' isStatic='false' isFinal='false' isOverride='false'  param_names='n;namespaceURI;qualifiedName' param_types='dom.core:Node;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Rename an existing node of type ELEMENT_NODE or ATTRIBUTE_NODE.

		 When possible this simply changes the name of the given node, 

		 otherwise this creates a new node with the specified name and 

		 replaces the existing node with the new node as described below.

		 If simply changing the name of the given node is not possible, the 

		 following operations are performed: a new node is created, any 

		 registered event listener is registered on the new node, any user 

		 data attached to the old node is removed from that node, the old 

		 node is removed from its parent if it has one, the children are moved 

		 to the new node, if the renamed node is an Element its attributes are 

		 moved to the new node, the new node is inserted at the position the 

		 old node used to have in its parent's child nodes list if it has one, 

		 the user data that was attached to the old node is attached to the 

		 new node.

		 

		 <p>When the node being renamed is an Element only the specified attributes 

		 are moved, default attributes originated from the DTD are updated 

		 according to the new element name. In addition, the implementation 

		 may update default attributes from other schemas. Applications should 

		 use Document.normalizeDocument() to guarantee these attributes are 

		 up-to-date.</p>

		 

		 <p>When the node being renamed is an Attr that is attached to an Element, 

		 the node is first removed from the Element attributes map. Then, once 

		 renamed, either by modifying the existing node or creating a new one as 

		 described above, it is put back. In addition,

		 <ul>

		 <li>a user data event NODE_RENAMED is fired,</li>

		 <li>when the implementation supports the feature "MutationNameEvents", 

		 each mutation operation involved in this method fires the appropriate 

		 event, and in the end the event {http://www.w3.org/2001/xml-events, 

		 DOMElementNameChanged} or {http://www.w3.org/2001/xml-events, 

		 DOMAttributeNameChanged} is fired.</li>

		 </ul></p>

		 

		 ]]></description>
<param><![CDATA[n The node to rename.

		 ]]></param>
<param><![CDATA[namespaceURI The new namespace URI.

		 ]]></param>
<param><![CDATA[qualifiedName The new qualified name.

		 ]]></param>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<return><![CDATA[The renamed node. This is either the specified node or the new 

		 node that was created to replace the specified node.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.renameNode MDC - Document.renameNode()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-renameNode W3C - Document.renameNode()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised when the type of 

		 the specified node is neither ELEMENT_NODE nor ATTRIBUTE_NODE, or if the 

		 implementation does not support the renaming of the document element.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: Raised if the new 

		 qualified name is not an XML name according to the XML version in use 

		 specified in the Document.xmlVersion attribute.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised when the specified 

		 node was created from a different document than this document.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NAMESPACE_ERR: Raised if the qualifiedName is 

		 a malformed qualified name, if the qualifiedName has a prefix and the 

		 namespaceURI is null, or if the qualifiedName has a prefix that is "xml" 

		 and the namespaceURI is different from "http://www.w3.org/XML/1998/namespace" 

		 XML Namespaces. Also raised, when the node being renamed is an attribute, 

		 if the qualifiedName, or its prefix, is "xmlns" and the namespaceURI is 

		 different from "http://www.w3.org/2000/xmlns/".

		 

		 ]]></throws>
</method>
<method name='saveXML' fullname='dom.core:Document/saveXML' isStatic='false' isFinal='false' isOverride='false'  param_names='snode' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 Save the document or the given node to a string (i.e. serialize the document or node). 

		 

		 ]]></description>
<param><![CDATA[snode Specifies what to serialize, if this parameter is null the whole document is serialized, if it's non-null the given node is serialized.

		 ]]></param>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<return><![CDATA[The serialized document or null.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-saveXML W3C - DocumentLS.saveXML()

		 

		 ]]></see>
</method>
<method name='updateSettings' fullname='dom.core:Document/updateSettings' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Allows updating the print settings for the page.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc848923%28VS.85%29.aspx MSDN - updateSettings Method

		 

		 ]]></see>
</method>
<method name='async' fullname='dom.core:Document/async/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 

		 Indicates whether the method load should be synchronous or asynchronous. When the async attribute is set 

		 to true the load method returns control to the caller before the document has completed loading.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 function loadXMLData(e) {

		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string

		 }

		 

		 var xmlDoc = document.implementation.createDocument("", "test", null);

		 xmlDoc.async = false;

		 xmlDoc.onload = loadXMLData;

		 xmlDoc.load('querydata.xml');</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMLS 3

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.async MDC - Document.async

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-async W3C - DocumentLS.async

		 

		 ]]></see>
</method>
<method name='defaultView' fullname='dom.core:Document/defaultView/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.views:AbstractView'>
<description><![CDATA[

		 

		 The default AbstractView for this Document, or null if none available.

		 

		 <p><strong>Note:</strong> document.defaultView is generally a reference to the window object 

		 for the document, however that is not defined in the specification and can't be relied upon 

		 for all host environments, particularly as not all browsers implement it.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMViews 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.defaultView MDC - Document.defaultView

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-DocumentView-defaultView W3C - DocumentView.defaultView

		 

		 ]]></see>
</method>
<method name='doctype' fullname='dom.core:Document/doctype/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DocumentType'>
<description><![CDATA[

		 The Document Type Declaration (see DocumentType) associated with this 

		 document. For XML documents without a document type declaration this 

		 returns null. For HTML documents, a DocumentType object may be returned, 

		 independently of the presence or absence of document type declaration in 

		 the HTML document.

		 

		 <p>This provides direct access to the DocumentType node, child node of this 

		 Document. This node can be set at document creation time and later changed 

		 through the use of child nodes manipulation methods, such as 

		 Node.insertBefore, or Node.replaceChild. Note, however, that while some 

		 implementations may instantiate different types of Document objects 

		 supporting additional features than the "Core", such as "HTML", based on the DocumentType specified at creation time, changing it 

		 afterwards is very unlikely to result in a change of the features supported.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533737%28VS.85%29.aspx MSDN - doctype Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.doctype MDC - Document.doctype

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-B63ED1A31 W3C - Document.doctype

		 

		 ]]></see>
<modified><![CDATA[DOMCore 3

		 

		 ]]></modified>
</method>
<method name='documentElement' fullname='dom.core:Document/documentElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 This is a convenience  attribute that allows direct access to the child node 

		 that is the document element of the document.

		 

		 <p><strong>Note:</strong> HTML documents typically contain a single child node, &lt;html&gt;, perhaps 

		 with a DOCTYPE declaration before it. XML documents often contain multiple child nodes: the root 

		 element, the DOCTYPE declaration, and  processing instructions. </p>

		 

		 <p>That's why you should use document.documentElement rather than document.firstChild  to get the root element. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var rootElement = document.documentElement;

		 var firstTier = rootElement.childNodes;

		 // firstTier is the NodeList of the direct children of the root element

		 for (var i = 0; i &lt; firstTier.length; i++) {

		 	// do something with each direct kid of the root element

		 	// as firstTier[i]

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533739%28VS.85%29.aspx MSDN - documentElement Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.documentElement MDC - Document.documentElement

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-87CD092 W3C - Document.documentElement

		 

		 ]]></see>
</method>
<method name='documentURI' fullname='dom.core:Document/documentURI/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The location of the document or null if undefined or if the Document was 

		 created using DOMImplementation.createDocument. No lexical checking is 

		 performed when setting this attribute; this could result in a null value 

		 returned when using Node.baseURI.

		 

		 <p>Beware that when the Document supports the feature "HTML", the href attribute 

		 of the HTML BASE element takes precedence over this attribute when computing Node.baseURI.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.documentURI MDC - Document.documentURI

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-documentURI W3C - Document.documentURI

		 

		 ]]></see>
</method>
<method name='domConfig' fullname='dom.core:Document/domConfig/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMConfiguration'>
<description><![CDATA[

		 The configuration used when Document.normalizeDocument() is invoked. 

		 

		 <p><strong>Note (Mozilla):</strong> This is not implemented in Mozilla at present.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.domConfig MDC - Document.domConfig

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-domConfig W3C - Document.domConfig

		 

		 ]]></see>
</method>
<method name='implementation' fullname='dom.core:Document/implementation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMImplementation'>
<description><![CDATA[

		 The DOMImplementation object that handles this document. A DOM application 

		 may use objects from multiple implementations.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var modName = "HTML";

		 var modVer = "2.0";

		 var conformTest = document.implementation.hasFeature(modName, modVer);

		 

		 alert("DOM " + modName + " " + modVer + " supported?: " + conformTest);

		 

		 // alerts with: "DOM HTML 2.0 supported?: true" if DOM Level 2 HTML module is supported.</listing>

		 

		 <p>A list of module names (e.g., Core, HTML, XML, etc) is available in the DOM Level 2 Conformance Section</p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 1

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535865%28VS.85%29.aspx MSDN - implementation Object

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533884%28VS.85%29.aspx MSDN - implementation Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.implementation MDC - Document.implementation

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1B793EBA W3C - Document.implementation

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Core/introduction.html#ID-Conformance-h2 W3C - Conformance Section

		 

		 ]]></see>
</method>
<method name='inputEncoding' fullname='dom.core:Document/inputEncoding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns a string representing the encoding under which the document was parsed (e.g. ISO-8859-1). 

		 This is null when it is not known, such as when the Document was created in memory.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.inputEncoding MDC - Document.inputEncoding

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-inputEncoding W3C - Document.inputEncoding

		 

		 ]]></see>
</method>
<method name='lastStyleSheetSet' fullname='dom.core:Document/lastStyleSheetSet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 This attribute must initially have the value null. Its value changes when the selectedStyleSheetSet  attribute is set.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.lastStyleSheetSet MDC - Document.lastStyleSheetSet

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-lastStyleSheetSet W3C - DocumentStyle.lastStyleSheetSet

		 

		 ]]></see>
</method>
<method name='preferredStyleSheetSet' fullname='dom.core:Document/preferredStyleSheetSet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 This attribute must be the preferred style sheet set as set by the author. It is determined from the order 

		 of style sheet declarations and the Default-Style HTTP headers. If there is no preferred style sheet set, 

		 this attribute must  be the empty string. The case of this attribute must  exactly match the case given by 

		 the author where the preferred style sheet is specified or implied. This attribute must  never be null.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.preferredStyleSheetSet MDC - Document.preferredStyleSheetSet

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-preferredStyleSheetSet W3C - DocumentStyle.preferredStyleSheetSet

		 

		 ]]></see>
</method>
<method name='selectedStyleSheetSet' fullname='dom.core:Document/selectedStyleSheetSet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 This attribute indicates which style sheet set is in use. This attribute is live; changing the disabled attribute 

		 on style sheets directly will change the value of this attribute.

		 

		 <p>If all the sheets that are enabled and have a title have the same title (by case-sensitive  comparisons) 

		 then the value of this attribute must be exactly equal to the title of the first enabled style sheet with a 

		 title in the styleSheets  list. Otherwise, if style sheets from different sets are enabled, then the return 

		 value must be null (there is no way to determine what the currently selected style sheet set is in those 

		 conditions). Otherwise, either all style sheets that have a title are disabled, or there are no alternative 

		 style sheets, and selectedStyleSheetSet  must return the empty string.</p>

		 

		 ]]></description>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.selectedStyleSheetSet MDC - Document.selectedStyleSheetSet

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-selectedStyleSheetSet W3C - DocumentStyle.selectedStyleSheetSet

		 

		 ]]></see>
</method>
<method name='strictErrorChecking' fullname='dom.core:Document/strictErrorChecking/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 An attribute specifying whether error checking is enforced or not. When set 

		 to false, the implementation is free to not test every possible error case 

		 normally defined on DOM operations, and not raise any DOMException on DOM 

		 operations or report errors while using Document.normalizeDocument(). In 

		 case of error, the behavior is undefined. This attribute is true by default.

		 

		 ]]></description>
<default><![CDATA[true

		 

		 ]]></default>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.strictErrorChecking MDC - Document.strictErrorChecking

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-strictErrorChecking W3C - Document.strictErrorChecking

		 

		 ]]></see>
</method>
<method name='styleSheetSets' fullname='dom.core:Document/styleSheetSets/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMStringList'>
<description><![CDATA[

		 

		 This must be a live list of the currently available style sheet sets. This list is constructed by enumerating 

		 all the style sheets for this document available to the implementation, in the order they are listed in the 

		 styleSheets  attribute, adding the title of each style sheet with a title to the list, avoiding duplicates by 

		 dropping titles that match (case-sensitively) titles that have already been added to the list.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[htts://developer.mozilla.org/En/DOM/document.styleSheetSets MDC - Document.styleSheetSets

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-styleSheetSets W3C - DocumentStyle.styleSheetSets

		 

		 ]]></see>
</method>
<method name='styleSheets' fullname='dom.core:Document/styleSheets/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.stylesheets:StyleSheetList'>
<description><![CDATA[

		 

		 A list containing all the style sheets explicitly linked into or embedded in a document. For HTML 

		 documents, this includes external style sheets, included via the HTML LINK element, and inline 

		 STYLE elements. In XML, this includes external style sheets, included via style sheet 

		 processing instructions.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms531200%28VS.85%29.aspx MSDN: styleSheets Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.styleSheets  MDC - Document.styleSheets

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle W3C - DOM Level 2 Style: DocumentStyle..styleSheets

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-stylesheets W3C - CSSOM: DocumentStyle.styleSheets

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access  Quirksmode: Accessing style sheets

		 

		 ]]></see>
</method>
<method name='xmlEncoding' fullname='dom.core:Document/xmlEncoding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 An attribute specifying, as part of the XML declaration, the encoding of 

		 this document. This is null when unspecified or when it is not known, such 

		 as when the Document was created in memory.

		 

		 <p>If the XML Declaration states:</p>

		 

		 <listing>&lt;?xml version="1.0" encoding="UTF-16"?&gt;</listing>

		 

		 <p>...the result should be "UTF-16".</p>

		 

		 <p><strong>Note (Mozilla):</strong> However, Firefox 3.0 includes information on endianness (e.g., UTF-16BE for big 

		 endian encoding), and while this extra information is removed as of Firefox 3.1b3, Firefox 3.1b3 is still 

		 consulting the file's encoding, rather than the XML Declaration as the spec defines it ("An attribute specifying, 

		 as part of the XML declaration, the encoding of this document.").</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.xmlEncoding MDC - Document.xmlEncoding

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-encoding W3C - Document.xmlEncoding

		 

		 ]]></see>
</method>
<method name='xmlStandalone' fullname='dom.core:Document/xmlStandalone/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 An attribute specifying, as part of the XML declaration, whether this 

		 document is standalone. This is false when unspecified.

		 

		 <p><strong>Note:</strong> No verification is done on the value when setting this attribute. 

		 Applications should use Document.normalizeDocument() with the "validate" 

		 parameter to verify if the value matches the validity constraint for 

		 standalone document declaration as defined in XML 1.0.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.xmlStandalone MDC - Document.xmlStandalone

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-standalone W3C - Document.xmlStandalone

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if this document 

		 does not support the "XML" feature. 

		 

		 ]]></throws>
</method>
<method name='xmlVersion' fullname='dom.core:Document/xmlVersion/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 An attribute specifying, as part of the XML declaration, the version 

		 number of this document. If there is no declaration and if this document 

		 supports the "XML" feature, the value is "1.0". If this document does not 

		 support the "XML" feature, the value is always null. Changing this 

		 attribute will affect methods that check for invalid characters in XML 

		 names. Application should invoke Document.normalizeDocument() in order to 

		 check for invalid characters in the Nodes that are already part of this Document.

		 

		 <p>DOM applications may use the DOMImplementation.hasFeature(feature, version) 

		 method with parameter values "XMLVersion" and "1.0" (respectively) to 

		 determine if an implementation supports XML 1.0. DOM applications may use 

		 the same method with parameter values "XMLVersion" and "1.1" (respectively) 

		 to determine if an implementation supports XML 1.1. In both cases, in 

		 order to support XML, an implementation must also support the "XML" feature 

		 defined in this specification. Document objects supporting a version of the 

		 "XMLVersion" feature must not raise a NOT_SUPPORTED_ERR exception for the 

		 same version number when using Document.xmlVersion.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 3

		 ]]></playerversion>
<since><![CDATA[DOMCore 3

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.xmlVersion MDC - Document.xmlVersion

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-version W3C - Document.xmlVersion

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the version is set 

		 to a value that is not supported by this Document or if this document does 

		 not support the "XML" feature. 

		 

		 ]]></throws>
</method>
<method name='async' fullname='dom.core:Document/async/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='documentURI' fullname='dom.core:Document/documentURI/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='selectedStyleSheetSet' fullname='dom.core:Document/selectedStyleSheetSet/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='strictErrorChecking' fullname='dom.core:Document/strictErrorChecking/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='xmlStandalone' fullname='dom.core:Document/xmlStandalone/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='xmlVersion' fullname='dom.core:Document/xmlVersion/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='Comment' fullname='dom.core:Comment' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\Comment.as' namespace='dom.core' access='public' baseclass='dom.core:CharacterData' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A comment is used to add notations within markup.

	 

	 <p>Although it is generally not displayed, it is still available to be read in 

	 the source view. These are represented in HTML and XML as content between 

	 &lt;!-- and  --&gt; . In XML, the character sequence "--" cannot be used within a comment.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms765529%28VS.85%29.aspx MSDN - IXMLDOMComment

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Comment MDC - Comment

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1728279322 W3C - DOM 3 Core: Comment

	 

	 ]]></see>
</classRec>
<classRec name='CDATASection' fullname='dom.core:CDATASection' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\core\CDATASection.as' namespace='dom.core' access='public' baseclass='dom.core:Text' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A CDATA Section can be used within XML to include extended portions of 

	 unescaped text, such that the symbols &lt; and &amp; do not need escaping as 

	 they normally do within XML when used as text.

	 

	 <p><strong>Note:</strong> CDATA sections should not be used (without hiding) within HTML.</p>

	 

	 ]]></description>
<example><![CDATA[
	 For example:

	 <listing>&lt;foo&gt;Here is a CDATA section: &lt;![CDATA[  &lt; &gt; &amp; ]]&gt; with all kinds of unescaped text. &lt;/foo&gt;</listing>

	 The only sequence which is not allowed within a CDATA section is the closing sequence of a CDATA section itself:

	 <listing>&lt;![CDATA[  ]]&gt; will cause an error   ]]&gt;</listing>

	 

	 ]]></example>
<playerversion><![CDATA[DOMCore 1

	 ]]></playerversion>
<since><![CDATA[DOMCore 1

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms762780%28VS.85%29.aspx MSDN - IXMLDOMCDATASection

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/CDATASection MDC - CDATASection

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-667469212 W3C - CDATASection

	 

	 ]]></see>
</classRec>
<interfaceRec name='XPathException' fullname='dom.xpath:XPathException' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\xpath\XPathException.as' namespace='dom.xpath' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A new exception has been created for exceptions specific to these XPath interfaces. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMXPath 3

	 ]]></playerversion>
<since><![CDATA[DOMXPath 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathException W3C - XPathException

	 

	 ]]></see>
</interfaceRec>
<method name='code' fullname='dom.xpath:XPathException/dom.xpath:XPathException:code/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The specific exception code.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathException W3C - XPathException

		 

		 ]]></see>
</method>
<classRec name='XPathExceptionCode' fullname='dom.xpath:XPathExceptionCode' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\xpath\XPathExceptionCode.as' namespace='dom.xpath' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An integer indicating the type of error generated.

	 

	 ]]></description>
<playerversion><![CDATA[DOMXPath 3

	 ]]></playerversion>
<since><![CDATA[DOMXPath 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathExceptionCode W3C - XPathExceptionCode

	 

	 ]]></see>
</classRec>
<field name='INVALID_EXPRESSION_ERR' fullname='dom.xpath:XPathExceptionCode/INVALID_EXPRESSION_ERR' type='Number' isStatic='true' isConst='true' defaultValue='51' >
<description><![CDATA[

		 If the expression has a syntax error or otherwise is not a legal expression according to the rules 

		 of the specific XPathEvaluator or contains specialized extension functions or variables not 

		 supported by this implementation.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#INVALID_EXPRESSION_ERR W3C - XPathExceptionCode.INVALID_EXPRESSION_ERR

		 

		 ]]></see>
</field>
<field name='TYPE_ERR' fullname='dom.xpath:XPathExceptionCode/TYPE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='52' >
<description><![CDATA[

		 If the expression cannot be converted to return the specified type.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#TYPE_ERR W3C - XPathExceptionCode.TYPE_ERR

		 

		 ]]></see>
</field>
<interfaceRec name='XPathNSResolver' fullname='dom.xpath:XPathNSResolver' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\xpath\XPathNSResolver.as' namespace='dom.xpath' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The XPathNSResolver interface permit prefix strings in the expression to be properly bound to 

	 namespaceURI strings. XPathEvaluator can construct an implementation of XPathNSResolver from a 

	 node, or the interface may be implemented by any application. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMXPath 3

	 ]]></playerversion>
<since><![CDATA[DOMXPath 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNSResolver W3C - XPathNSResolver

	 

	 ]]></see>
</interfaceRec>
<method name='lookupNamespaceURI' fullname='dom.xpath:XPathNSResolver/dom.xpath:XPathNSResolver:lookupNamespaceURI' isStatic='false' isFinal='false' isOverride='false'  param_names='prefix' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Look up the namespace URI associated to the given namespace prefix. The XPath evaluator must 

		 never call this with a null or empty argument, because the result of doing this is undefined.

		 

		 ]]></description>
<param><![CDATA[prefix The prefix to look for.

		 ]]></param>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[Returns the associated namespace URI or null if none is found.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNSResolver-lookupNamespaceURI W3C - XPathNSResolver.lookupNamespaceURI()

		 

		 ]]></see>
</method>
<interfaceRec name='XPathExpression' fullname='dom.xpath:XPathExpression' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\xpath\XPathExpression.as' namespace='dom.xpath' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The XPathExpression interface represents a parsed and resolved XPath expression. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMXPath 3

	 ]]></playerversion>
<since><![CDATA[DOMXPath 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathExpression W3C - XPathExpression

	 

	 ]]></see>
</interfaceRec>
<method name='evaluate' fullname='dom.xpath:XPathExpression/dom.xpath:XPathExpression:evaluate' isStatic='false' isFinal='false' isOverride='false'  param_names='expression;contextNode;resolver;type;result' param_types='dom.core.types:DOMString;dom.core:Node;dom.xpath:XPathNSResolver;Number;dom.core.types:DOMObject' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='dom.core.types:DOMObject'>
<description><![CDATA[

		 Evaluates this XPath expression and returns a result.

		 

		 ]]></description>
<param><![CDATA[contextNode The context is context node for the evaluation of this XPath expression. 

		 If the XPathEvaluator was obtained by casting the Document then this must be owned by the same 

		 document and must be a Document, Element, Attribute, Text, CDATASection, Comment, ProcessingInstruction, 

		 or XPathNamespace node. If the context node is a Text or a CDATASection, then the context is 

		 interpreted as the whole logical text node as seen by XPath, unless the node is empty in which 

		 case it may not serve as the XPath context.

		 ]]></param>
<param><![CDATA[type If a specific type is specified, then the result will be coerced to return the specified 

		 type relying on XPath conversions and fail if the desired coercion is not possible. This must be one of 

		 the type codes of XPathResult.

		 ]]></param>
<param><![CDATA[result The result specifies a specific result object which may be reused and returned by this 

		 method. If this is specified as nullor the implementation does not reuse the specified result, a new 

		 result object will be constructed and returned. For XPath 1.0 results, this object will be of type XPathResult.

		 ]]></param>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[The result of the evaluation of the XPath expression. For XPath 1.0 results, this object will 

		 be of type XPathResult.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathExpression-evaluate W3C - XPathExpression.evaluate()

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException TYPE_ERR: Raised if the result cannot be converted to return the specified type.

		 

		 ]]></throws>
<throws><![CDATA[dom.events.EventException WRONG_DOCUMENT_ERR: The Node is from a document that is not supported by the XPathEvaluator that created this XPathExpression.

		 

		 ]]></throws>
<throws><![CDATA[dom.events.EventException NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath context node or the request type is not permitted by this XPathExpression.

		 

		 ]]></throws>
</method>
<classRec name='XPathResult' fullname='dom.xpath:XPathResult' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\xpath\XPathResult.as' namespace='dom.xpath' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The XPathResult interface represents the result of the evaluation of an XPath 1.0 expression 

	 within the context of a particular node. Since evaluation of an XPath expression can result in 

	 various result types, this object makes it possible to discover and manipulate the type and 

	 value of the result. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMXPath 3

	 ]]></playerversion>
<since><![CDATA[DOMXPath 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult W3C - XPathResult

	 

	 ]]></see>
</classRec>
<method name='iterateNext' fullname='dom.xpath:XPathResult/iterateNext' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Iterates and returns the next node from the node set or nullif there are no more nodes. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[Returns the next node.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-iterateNext W3C - XPathResult.iterateNext()

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException TYPE_ERR: Raised if resultType is not UNORDERED_NODE_ITERATOR_TYPE or ORDERED_NODE_ITERATOR_TYPE.

		 

		 ]]></throws>
<throws><![CDATA[dom.events.EventException INVALID_STATE_ERR: The document has been mutated since the result was returned.

		 

		 ]]></throws>
</method>
<method name='snapshotItem' fullname='dom.xpath:XPathResult/snapshotItem' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the indexth item in the snapshot collection. If index is greater than or equal to the number of nodes in the list, 

		 this method returns null. Unlike the iterator result, the snapshot does not become invalid, but may not correspond to the 

		 current document if it is mutated.

		 

		 ]]></description>
<param><![CDATA[index Index into the snapshot collection.

		 ]]></param>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[The node at the indexth position in the NodeList, or null if that is not a valid index.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-snapshotItem W3C - XPathResult.snapshotItem()

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException TYPE_ERR: Raised if resultType is not UNORDERED_NODE_SNAPSHOT_TYPE or ORDERED_NODE_SNAPSHOT_TYPE.

		 

		 ]]></throws>
</method>
<method name='booleanValue' fullname='dom.xpath:XPathResult/booleanValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The value of this boolean result.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-booleanValue W3C - XPathResult.booleanValue

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException TYPE_ERR: Raised if resultType is not BOOLEAN_TYPE.

		 

		 ]]></throws>
</method>
<method name='invalideIteratorState' fullname='dom.xpath:XPathResult/invalideIteratorState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Signifies that the iterator has become invalid. True if resultType is UNORDERED_NODE_ITERATOR_TYPE or ORDERED_NODE_ITERATOR_TYPE 

		 and the document has been modified since this result was returned.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-invalid-iterator-state W3C - XPathResult.invalideIteratorState

		 

		 ]]></see>
</method>
<method name='numberValue' fullname='dom.xpath:XPathResult/numberValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The value of this number result. If the native double type of the DOM binding does not directly support the exact IEEE 754 result 

		 of the XPath expression, then it is up to the definition of the binding to specify how the XPath number is converted to the native binding number.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-numberValue W3C - XPathResult.numberValue

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException TYPE_ERR: Raised if resultType is not NUMBER_TYPE.

		 

		 ]]></throws>
</method>
<method name='resultType' fullname='dom.xpath:XPathResult/resultType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 A code representing the type of this result, as defined by the type constants.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-resultType W3C - XPathResult.resultType

		 

		 ]]></see>
</method>
<method name='singleNodeValue' fullname='dom.xpath:XPathResult/singleNodeValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 The value of this single node result, which may be null.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-singleNodeValue W3C - XPathResult.singleNodeValue

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException TYPE_ERR: Raised if resultType is not ANY_UNORDERED_NODE_TYPE or FIRST_ORDERED_NODE_TYPE.

		 

		 ]]></throws>
</method>
<method name='snapshotLength' fullname='dom.xpath:XPathResult/snapshotLength/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of nodes in the result snapshot. Valid values for snapshotItem indices are 0 to snapshotLength-1 inclusive.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-snapshot-length W3C - XPathResult.snapshotLength

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException TYPE_ERR: Raised if resultType is not UNORDERED_NODE_SNAPSHOT_TYPE or ORDERED_NODE_SNAPSHOT_TYPE.

		 

		 ]]></throws>
</method>
<method name='stringValue' fullname='dom.xpath:XPathResult/stringValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The value of this string result.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-stringValue W3C - XPathResult.stringValue

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException TYPE_ERR: Raised if resultType is not STRING_TYPE.

		 

		 ]]></throws>
</method>
<field name='ANY_TYPE' fullname='dom.xpath:XPathResult/ANY_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[

		 This code does not represent a specific type. An evaluation of an XPath expression will never 

		 produce this type. If this type is requested, then the evaluation returns whatever type naturally 

		 results from evaluation of the expression. If the natural result is a node set when ANY_TYPE was 

		 requested, then UNORDERED_NODE_ITERATOR_TYPE is always the resulting type. Any other representation 

		 of a node set must be explicitly requested.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ANY-TYPE W3C - XPathResult.ANY_TYPE

		 

		 ]]></see>
</field>
<field name='ANY_UNORDERED_NODE_TYPE' fullname='dom.xpath:XPathResult/ANY_UNORDERED_NODE_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='8' >
<description><![CDATA[

		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be 

		 null if the node set is empty. Document modification does not invalidate the node, but may mean that the 

		 result node no longer corresponds to the current document. This is a convenience that permits optimization 

		 since the implementation can stop once any node in the resulting set has been found. If there is more than 

		 one node in the actual result, the single node returned might not be the first in document order.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ANY-UNORDERED-NODE-TYPE W3C - XPathResult.ANY_UNORDERED_NODE_TYPE

		 

		 ]]></see>
</field>
<field name='BOOLEAN_TYPE' fullname='dom.xpath:XPathResult/BOOLEAN_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The result is a boolean as defined by [XPath 1.0]. Document modification does not invalidate the boolean, 

		 but may mean that reevaluation would not yield the same boolean.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-BOOLEAN-TYPE W3C - XPathResult.BOOLEAN_TYPE

		 

		 ]]></see>
</field>
<field name='FIRST_ORDERED_NODE_TYPE' fullname='dom.xpath:XPathResult/FIRST_ORDERED_NODE_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='9' >
<description><![CDATA[

		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be null if the 

		 node set is empty. Document modification does not invalidate the node, but may mean that the result node no longer 

		 corresponds to the current document. This is a convenience that permits optimization since the implementation can 

		 stop once the first node in document order of the resulting set has been found. If there are more than one node in

		 the actual result, the single node returned will be the first in document order.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-FIRST-ORDERED-NODE-TYPE W3C - XPathResult.FIRST_ORDERED_NODE_TYPE

		 

		 ]]></see>
</field>
<field name='NUMBER_TYPE' fullname='dom.xpath:XPathResult/NUMBER_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The result is a number as defined by [XPath 1.0]. Document modification does not invalidate the number, 

		 but may mean that reevaluation would not yield the same number.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-NUMBER-TYPE W3C - XPathResult.NUMBER_TYPE

		 

		 ]]></see>
</field>
<field name='ORDERED_NODE_ITERATOR_TYPE' fullname='dom.xpath:XPathResult/ORDERED_NODE_ITERATOR_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='5' >
<description><![CDATA[

		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which will produce 

		 document-ordered nodes. Document modification invalidates the iteration.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ORDERED-NODE-ITERATOR-TYPE W3C - XPathResult.ORDERED_NODE_ITERATOR_TYPE

		 

		 ]]></see>
</field>
<field name='ORDERED_NODE_SNAPSHOT_TYPE' fullname='dom.xpath:XPathResult/ORDERED_NODE_SNAPSHOT_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='7' >
<description><![CDATA[

		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that will be 

		 in original document order. Document modification does not invalidate the snapshot but may mean that reevaluation 

		 would not yield the same snapshot and nodes in the snapshot may have been altered, moved, or removed from the document.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ORDERED-NODE-SNAPSHOT-TYPE W3C - XPathResult.ORDERED_NODE_SNAPSHOT_TYPE

		 

		 ]]></see>
</field>
<field name='STRING_TYPE' fullname='dom.xpath:XPathResult/STRING_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The result is a string as defined by [XPath 1.0]. Document modification does not invalidate the string, but 

		 may mean that the string no longer corresponds to the current document.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-STRING-TYPE W3C - XPathResult.STRING_TYPE

		 

		 ]]></see>
</field>
<field name='UNORDERED_NODE_ITERATOR_TYPE' fullname='dom.xpath:XPathResult/UNORDERED_NODE_ITERATOR_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which may not produce nodes 

		 in a particular order. Document modification invalidates the iteration. This is the default type returned if the 

		 result is a node set and ANY_TYPE is requested.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-UNORDERED-NODE-ITERATOR-TYPE W3C - XPathResult.UNORDERED_NODE_ITERATOR_TYPE

		 

		 ]]></see>
</field>
<field name='UNORDERED_NODE_SNAPSHOT_TYPE' fullname='dom.xpath:XPathResult/UNORDERED_NODE_SNAPSHOT_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='6' >
<description><![CDATA[

		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that may 

		 not be in a particular order. Document modification does not invalidate the snapshot but may mean that reevaluation 

		 would not yield the same snapshot and nodes in the snapshot may have been altered, moved, or removed from the document.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-UNORDERED-NODE-SNAPSHOT-TYPE W3C - XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE

		 

		 ]]></see>
</field>
<interfaceRec name='XPathEvaluator' fullname='dom.xpath:XPathEvaluator' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\xpath\XPathEvaluator.as' namespace='dom.xpath' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The evaluation of XPath expressions is provided by XPathEvaluator. In a DOM implementation 

	 which supports the XPath 3.0 feature, as described above, the XPathEvaluator interface will 

	 be implemented on the same object which implements the Document interface permitting it to 

	 be obtained by the usual binding-specific method such as casting or by using the DOM Level 3 

	 getInterface method. In this case the implementation obtained from the Document supports the 

	 XPath DOM module and is compatible with the XPath 1.0 specification.

	 

	 <p>Evaluation of expressions with specialized extension functions or variables may not work 

	 in all implementations and is, therefore, not portable. XPathEvaluator implementations may be 

	 available from other sources that could provide specific support for specialized extension 

	 functions or variables as would be defined by other specifications. </p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMXPath 3

	 ]]></playerversion>
<since><![CDATA[DOMXPath 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator W3C - XPathEvaluator

	 

	 ]]></see>
</interfaceRec>
<method name='createExpression' fullname='dom.xpath:XPathEvaluator/dom.xpath:XPathEvaluator:createExpression' isStatic='false' isFinal='false' isOverride='false'  param_names='expression;resolver' param_types='dom.core.types:DOMString;dom.xpath:XPathNSResolver' param_defaults='undefined;undefined' result_type='dom.xpath:XPathExpression'>
<description><![CDATA[

		 Creates a parsed XPath expression with resolved namespaces. This is useful when an 

		 expression will be reused in an application since it makes it possible to compile the 

		 expression string into a more efficient internal form and preresolve all namespace 

		 prefixes which occur within the expression.

		 

		 <p><strong>Note (Mozilla):</strong> Prior to Firefox 3, you could call this method on documents other 

		 than the one you planned to run the XPath against. Under Firefox 3, you must call it on the 

		 same document.</p>

		 

		 ]]></description>
<param><![CDATA[expression The XPath expression string to be parsed.

		 ]]></param>
<param><![CDATA[resolver The resolver permits translation of all prefixes, including the xml 

		 namespace prefix, within the XPath expression into appropriate namespace URIs. If this 

		 is specified as null, any namespace prefix within the expression will result in 

		 DOMException being thrown with the code NAMESPACE_ERR.

		 ]]></param>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[The compiled form of the XPath expression.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createExpression MDC - Document.createExpression()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createExpression W3C - XPathEvaluator.createExpression()

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException INVALID_EXPRESSION_ERR: Raised if the expression is 

		 not legal according to the rules of the XPathEvaluator.

		 

		 ]]></throws>
<throws><![CDATA[dom.events.EventException NAMESPACE_ERR: Raised if the expression contains 

		 namespace prefixes  which cannot be resolved by the specified XPathNSResolver.

		 

		 ]]></throws>
</method>
<method name='createNSResolver' fullname='dom.xpath:XPathEvaluator/dom.xpath:XPathEvaluator:createNSResolver' isStatic='false' isFinal='false' isOverride='false'  param_names='nodeResolver' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.xpath:XPathNSResolver'>
<description><![CDATA[

		 Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated 

		 relative to the context of the node where it appeared within the document. This adapter works 

		 like the DOM Level 3 method lookupNamespaceURI  on nodes in resolving the namespaceURI from a 

		 given prefix using the current information available in the node's hierarchy at the time 

		 lookupNamespaceURI is called. also correctly resolving the implicit xml prefix.

		 

		 <p><strong>Note:</strong> XPath defines QNames without prefix to match only elements in the 

		 null namespace. There is no way in XPath to pick up the default namespace as applied to a regular 

		 element reference (e.g., <code>p[&amp;64;id='_myid']</code> for <code>xmlns='http://www.w3.org/1999/xhtml'</code>). 

		 To match default elements in a non-null namespace, you either have to refer to a particular element using 

		 a form such as <code>~~</code></p>

		 

		 ]]></description>
<param><![CDATA[node The node to be used as a context for namespace resolution.

		 ]]></param>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[XPathNSResolver which resolves namespaces with respect to the definitions in scope for a specified node.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createNSResolver MDC - Document.createNSResolver()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createNSResolver W3C - XPathEvaluator.createNSResolver()

		 

		 ]]></see>
</method>
<method name='evaluate' fullname='dom.xpath:XPathEvaluator/dom.xpath:XPathEvaluator:evaluate' isStatic='false' isFinal='false' isOverride='false'  param_names='expression;contextNode;resolver;type;result' param_types='dom.core.types:DOMString;dom.core:Node;dom.xpath:XPathNSResolver;Number;dom.core.types:DOMObject' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='dom.core.types:DOMObject'>
<description><![CDATA[

		 Evaluates an XPath expression string and returns a result of the specified type if possible.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var headings = document.evaluate("//h2", document, null, XPathResult.ANY_TYPE, null); 

		 /~~ Search the document for all h2 elements.  

		  ~~ The result will likely be an unordered node iterator. ~~/

		 var thisHeading = headings.iterateNext(); 

		 var alertText = "Level 2 headings in this document are:\n";

		 while (thisHeading) {

		 	alertText += thisHeading.textContent + "\n";

		 	thisHeading = headings.iterateNext();

		 }

		 alert(alertText); // Alerts the text of all h2 elements</listing>

		 

		 ]]></example>
<param><![CDATA[expression The XPath expression string to be parsed and evaluated.

		 ]]></param>
<param><![CDATA[contextNode The context is context node for the evaluation of this XPath expression. 

		 If the XPathEvaluator was obtained by casting the Document then this must be owned by the same 

		 document and must be a Document, Element, Attribute, Text, CDATASection, Comment, 

		 ProcessingInstruction, or XPathNamespace  node. If the context node is a Text or a CDATASection, 

		 then the context is interpreted as the whole logical text node as seen by XPath, unless the node 

		 is empty in which case it may not serve as the XPath context.

		 ]]></param>
<param><![CDATA[resolver The resolver permits translation of all prefixes, including the xml namespace 

		 prefix, within the XPath expression into appropriate namespace URIs. If this is specified as null, 

		 any namespace prefix within the expression will result in DOMException being thrown with the 

		 code NAMESPACE_ERR.

		 ]]></param>
<param><![CDATA[type If a specific type is specified, then the result will be returned as the 

		 corresponding type. For XPath 1.0 results, this must be one of the codes of the XPathResult interface.

		 ]]></param>
<param><![CDATA[result The result specifies a specific result object which may be reused and returned by 

		 this method. If this is specified as nullor the implementation does not reuse the specified result, 

		 a new result object will be constructed and returned. For XPath 1.0 results, this object will be 

		 of type XPathResult.

		 ]]></param>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[The result of the evaluation of the XPath expression. For XPath 1.0 results, this object 

		 will be of type XPathResult.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.evaluate MDC - Document.evaluate()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-evaluate W3C - XPathEvaluator.evaluate()

		 

		 ]]></see>
<throws><![CDATA[dom.xpath.XPathException INVALID_EXPRESSION_ERR: Raised if the expression is not legal according to the rules of the XPathEvaluator.

		 

		 ]]></throws>
<throws><![CDATA[dom.xpath.XPathException TYPE_ERR: Raised if the result cannot be converted to return the specified type.

		 

		 ]]></throws>
<throws><![CDATA[dom.events.EventException NAMESPACE_ERR: Raised if the expression contains namespace prefixes  which cannot be resolved by the specified XPathNSResolver.

		 

		 ]]></throws>
<throws><![CDATA[dom.events.EventException WRONG_DOCUMENT_ERR: The Node is from a document that is not supported by the XPathEvaluator that created this XPathExpression.

		 

		 ]]></throws>
<throws><![CDATA[dom.events.EventException NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath context node or the request type is not permitted by this XPathExpression.

		 

		 ]]></throws>
</method>
<classRec name='XPathNamespace' fullname='dom.xpath:XPathNamespace' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\xpath\XPathNamespace.as' namespace='dom.xpath' access='public' baseclass='dom.core:Node' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The XPathNamespace interface is returned by XPathResult interfaces to represent the XPath namespace node type 

	 that DOM lacks. There is no public constructor for this node type. Attempts to place it into a hierarchy or a 

	 NamedNodeMap result in a DOMException with the code HIERARCHY_REQUEST_ERR. This node is read only, so methods 

	 or setting of attributes that would mutate the node result in a DOMException with the code NO_MODIFICATION_ALLOWED_ERR.

	 

	 <p>The core specification describes attributes of the Node interface that are different for different node 

	 types but does not describe XPATH_NAMESPACE_NODE, so here is a description of those attributes for this node 

	 type. All attributes of Node not described in this section have a null or false value.</p>

	 

	 <p>ownerDocument matches the ownerDocument of the ownerElement even if the element is later adopted.</p>

	 

	 <p>nodeName is always the string "#namespace".</p>

	 

	 <p>prefix is the prefix of the namespace represented by the node.</p>

	 

	 <p>localName is the same as prefix.</p>

	 

	 <p>nodeType is equal to XPATH_NAMESPACE_NODE.</p>

	 

	 <p>namespaceURI is the namespace URI of the namespace represented by the node.</p>

	 

	 <p>nodeValue is the same as namespaceURI.</p>

	 

	 <p>adoptNode, cloneNode, and importNode fail on this node type by raising a DOMException with the code NOT_SUPPORTED_ERR.</p>

	 

	 <p><strong>Note:</strong> In future versions of the XPath specification, the definition of a namespace node may be changed 

	 incomatibly, in which case incompatible changes to field values may be required to implement versions beyond XPath 1.0.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMXPath 3

	 ]]></playerversion>
<since><![CDATA[DOMXPath 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNamespace W3C - XPathNamespace

	 

	 ]]></see>
</classRec>
<method name='ownerElement' fullname='dom.xpath:XPathNamespace/ownerElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 The Element on which the namespace was in scope when it was requested. This does not change 

		 on a returned namespace node even if the document changes such that the namespace goes out of 

		 scope on that element and this node is no longer found there by XPath.

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNamespace-ownerElement W3C - XPathNamespace.ownerElement()

		 

		 ]]></see>
</method>
<field name='XPATH_NAMESPACE_NODE' fullname='dom.xpath:XPathNamespace/XPATH_NAMESPACE_NODE' type='Number' isStatic='true' isConst='true' defaultValue='13' >
<description><![CDATA[

		 An integer indicating which type of node this is.

		 

		 <p><strong>Note:</strong> There is currently only one type of node which is specific to XPath. The numbers 

		 in this list must not collide with the values assigned to core node types.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPATH_NAMESPACE_NODE W3C - XPathNamespace.XPATH_NAMESPACE_NODE

		 

		 ]]></see>
</field>
<classRec name='BarProp' fullname='dom.objects:BarProp' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\BarProp.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 To allow Web pages to integrate with Web browsers, certain Web browser interface elements are exposed in a limited way to scripts in Web pages.

	 

	 ]]></description>
<playerversion><![CDATA[HTML 5

	 ]]></playerversion>
<since><![CDATA[HTML 5

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/html5/browsers.html#barprop W3C HTML 5: BarProp

	 

	 ]]></see>
</classRec>
<method name='visible' fullname='dom.objects:BarProp/visible/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The visible attribute, on getting, must return either true or a value determined by the user agent to most accurately 

		 represent the visibility state of the user interface element that the object represents, 

		 as described below. On setting, the new value must be discarded.

		 

		 <p>The following BarProp objects exist for each Document object in a browsing context. Some of the user interface elements represented 

		 by these objects might have no equivalent in some user agents; for those user agents, unless otherwise specified, the object must 

		 act as if it was present and visible (i.e. its visible attribute must return true).</p>

		 

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>window.locationbar</td><td>Represents the user interface element that contains a control that displays the URL of the

		 active document, or some similar interface concept.</td>

		 	</tr>

		 	<tr>

		 		<td>window.menubar</td><td>Represents the user interface element that contains a list of commands in menu form, or some 

		 similar interface concept.</td>

		 	</tr>

		 	<tr>

		 		<td>window.personalbar</td><td>Represents the user interface element that contains links to the user's favorite pages, or 

		 some similar interface concept.</td>

		 	</tr>

		 	<tr>

		 		<td>window.scrollbars</td><td>Represents the user interface element that contains links to the user's favorite pages, 

		 or some similar interface concept.</td>

		 	</tr>

		 	<tr>

		 		<td>window.statusbar</td><td>Represents a user interface element found immediately below or after the document, as appropriate 

		 for the default view's media. If the user agent has no such user interface element, then the object may act as if the corresponding

		 user interface element was absent (i.e. its visible attribute may return false).</td>

		 	</tr>

		 	<tr>

		 		<td>window.toolbar</td><td>Represents the user interface element found immediately above or before the document, as appropriate 

		 for the default view's media. If the user agent has no such user interface element, then the object may act as if the corresponding 

		 user interface element was absent (i.e. its visible attribute may return false).</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[HTML 5

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/html5/browsers.html#barprop W3C HTML 5: BarProp.visible

		 

		 ]]></see>
</method>
<method name='visible' fullname='dom.objects:BarProp/visible/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<classRec name='History' fullname='dom.objects:History' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\History.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Contains information about the URLs visited by the client.

	 

	 <p><strong>Note:</strong> For security reasons, the history object does not expose the actual 

	 URLs in the browser history. It does allow navigation through the browser history by exposing 

	 the back, forward, and go methods. A particular document in the browser history can be 

	 identified as an index relative to the current page. For example, specifying -1 as a parameter 

	 for the go method is the equivalent of clicking the Back button.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535864(VS.85).aspx MSDN - history Object

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.history MDC - window.history

	 

	 ]]></see>
</classRec>
<method name='back' fullname='dom.objects:History/back' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Goes to the previous page in session history, the same action as when the user clicks the browser's Back button.

		 

		 <p>Equivalent to history.go(-1).</p>

		 

		 <p>Calling this method to go back beyond the first page in the session history has no effect 

		 and doesn't raise an exception.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536346%28VS.85%29.aspx MSDN - back Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.history MDC - window.history

		 

		 ]]></see>
</method>
<method name='forward' fullname='dom.objects:History/forward' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Goes to the next page in session history, the same action as when the user clicks the browser's Forward button.

		 

		 <p>Equivalent to history.go(1).</p>

		 

		 <p>Calling this method to go back beyond the last page in the session history has no effect 

		 and doesn't raise an exception.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536426%28VS.85%29.aspx MSDN - forward Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.history MDC - window.history

		 

		 ]]></see>
</method>
<method name='go' fullname='dom.objects:History/go' isStatic='false' isFinal='false' isOverride='false'  param_names='integerDelta' param_types='' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Loads a page from the session history, identified by its relative location to the current page, for 

		 example -1 for the previous page or 1 for the next page.

		 

		 <p>When integerDelta is out of bounds (e.g. -1 when there are no previously visited pages in the session 

		 history), the method doesn't do anything and doesn't raise an exception.</p>

		 

		 <p>Calling go() without parameters or with a non-integer argument has no effect (unlike Internet Explorer, 

		 which supports string URLs as the argument [1]).</p>

		 

		 ]]></description>
<param><![CDATA[integerDelta Specifies an integer or a string. An integer indicates the relative position of a URL in the History list. A string indicates an exact URL in the History list.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536426%28VS.85%29.aspx MSDN - forward Method MSDN - go Method

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536443(VS.85).aspx MSDN - [1]

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.history MDC - window.history

		 

		 ]]></see>
</method>
<method name='current' fullname='dom.objects:History/current/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the URL of the active item of the session history.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.history MDC - window.history

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.objects:History/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the number of elements in the session history, including the currently loaded page.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534105%28VS.85%29.aspx MSDN - length Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.history MDC - window.history

		 

		 ]]></see>
</method>
<method name='next' fullname='dom.objects:History/next/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the URL of the next item in the session history

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.history MDC - window.history

		 

		 ]]></see>
</method>
<method name='previous' fullname='dom.objects:History/previous/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the URL of the previous item in the session history

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.history MDC - window.history

		 

		 ]]></see>
</method>
<method name='current' fullname='dom.objects:History/current/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='next' fullname='dom.objects:History/next/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='previous' fullname='dom.objects:History/previous/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='Pkcs11' fullname='dom.objects:Pkcs11' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\Pkcs11.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 PKCS11 modules are external modules which provide access to smart-card readers, biometric security 

	 devices, or external certificate stores. There are two methods for installing PKCS11 modules into 

	 Firefox. Users can use the preferences dialog to install or remove PKCS11 module. Extensions can 

	 programmatically manage PKCS11 modules using the nsIPKCS11 programming interface.

	 

	 <p><strong>Note (Mozilla):</strong> The information in this article is specific to Firefox 3.5 and 

	 newer, support for window.pkcs11 property was disabled due to security concerns.</p>

	 

	 <p><strong>Mechanism Flag Definitions</strong></p>

	 

	 <p>In general, most tokens should not set any of the cipher flags. Setting these flags means you want 

	 your token to supply the default implementation for these functions. Normally Mozilla uses its own 

	 internal module to supply these functions. These flags override that preference. If you choose to 

	 implement these flags, your module must supply the following additional functions for each flag: </p>

	 

	 <ul>

		<li>PKCS11_MECH_FLAG: must support CKM_RSA_PKCS and CKM_RSA_X_509 and the following functions: C_WRAPKEY, C_ENCRYPT, C_SIGN, C_DECRYPT, C_UNWRAPKEY, C_VERIFYRECOVER, C_VERIFY, C_GENERATEKEYPAIR (2048, 1024, 512) size

		</li>

		<li>PKCS11_MECH_DSA_FLAG: must support CKM_DSA and the following functions: C_SIGN, C_VERIFY, C_GENERATEKEYPAIR

		</li>

		<li>PKCS11_MECH_RC2_FLAG: must support CKM_RC2_CBC and CKM_RC2_ECB and the following functions: C_GENERATEKEY, C_ENCRYPT, C_DECRYPT, C_WRAPKEY, C_UNWRAPKEY

		</li>

		<li>PKCS11_MECH_RC4_FLAG: must support CKM_RC4_CBC and CKM_RC4_ECB and the following functions: C_GENERATEKEY, C_ENCRYPT, C_DECRYPT, C_WRAPKEY, C_UNWRAPKEY

		</li>

		<li>PKCS11_MECH_DES_FLAG: must support CKM_CPMF_CBC, CKM_DES_CBC, CKM_DES3_CBC, CKM_CPMF_ECB, CKM_DES_ECB, CKM_DES3_ECB and the following functions: C_GENERATEKEY, C_ENCRYPT, C_DECRYPT, C_WRAPKEY, C_UNWRAPKEY

		</li>

		<li>PKCS11_MECH_DH_FLAG: must support CKM_DH_PKCS_DERIVE and CKM_DH_KEY_PAIR_GEN and the following functions: C_DERIVEKEY, C_GENERATEKEYPAIR

		</li>

		<li>PKCS11_MECH_MD5_FLAG: Hashing must be able to function without authentication.

		</li>

		<li>PKCS11_MECH_SHA1_FLAG: Hashing must be able to function without authentication.

		</li>

		<li>PKCS11_MECH_MD2_FLAG: Hashing must be able to function without authentication.
		</li>

		<li>PKCS11_RANDOM_FLAG: Use token's Random Number Generator.

			<ul>

				<li>Warning: Must be able to use without authentication. Many hardware random number generators are not as secure as the Netscape internal one. Do not select this value unless you can show that your random number generator is secure. Even so, it's highly discouraged.

				</li>

			</ul>

		</li>

		<li>PKCS11_PUB_READABLE_CERT_FLAG: This is the only flag most smart tokens should turn on. You can turn this flag on if:

			<ul>

				<li> the certs on your token can be read without authentication and,

				</li>

				<li> the public key on your token can be found by ID, MODULUS, or VALUE and all your private keys have the associated public key.



					<ul>

						<li>Turning this flag on will illuminate a large number of password prompts for your token when looking up certs in Communicator. </li>

					</ul>

				</li>

			</ul>

		</li>

		</ul>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/PKCS11 MDC - PKCS11

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.pkcs11 MDC - window.pkcs11

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

	 

	 ]]></see>
</classRec>
<method name='addModule' fullname='dom.objects:Pkcs11/addModule' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleName;libraryFullPath;cryptoMechanismFlags;cipherFlags' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Number;Number' param_defaults='undefined;undefined;undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Loads a new PKCS #11 module.

		 

		 <p><strong>Note (Mozilla):</strong> The module will be placed in the NSS secmod.db database and will be loaded

		 automatically on application restart.</p>

		 

		 ]]></description>
<param><![CDATA[moduleName Name of the module.

		 ]]></param>
<param><![CDATA[libraryFullPath The filename of the library prepended with its full path.

		 ]]></param>
<param><![CDATA[cryptoMechanismFlags A bit vector indicating all cryptographic mechanisms should be turned on by default (see above).

		 ]]></param>
<param><![CDATA[cipherFlags A bit vector indicating all SSL or S/MIME cipher functions supported by the module (see above).

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[Unknown

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

		 

		 ]]></see>
</method>
<method name='deletemodule' fullname='dom.objects:Pkcs11/deletemodule' isStatic='false' isFinal='false' isOverride='false'  param_names='moduleName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Removes a PKCS #11 module.

		 

		 <p><strong>Note (Mozilla):</strong> In the delete case, the module is removed from the NSS secmod.db. This function 

		 will issue a user prompt to confirm the operation before the add or delete actually occurs.</p>

		 

		 ]]></description>
<param><![CDATA[moduleName Name of the module.

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[Unknown

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

		 

		 ]]></see>
</method>
<interfaceRec name='NavigatorOnLine' fullname='dom.objects:NavigatorOnLine' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\NavigatorOnLine.as' namespace='dom.objects' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Objects implementing the Navigator interface must also implement the NavigatorOnLine interface. This interface is defined separately so 

	 that other specifications can re-use parts of the Navigator interface.

	 

	 ]]></description>
<playerversion><![CDATA[HTML 5

	 ]]></playerversion>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorOnLine

	 

	 ]]></see>
</interfaceRec>
<method name='onLine' fullname='dom.objects:NavigatorOnLine/dom.objects:NavigatorOnLine:onLine/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a boolean indicating whether the browser is working online. 

		 

		 <p><strong>Note (IE):</strong>  In Windows Internet Explorer 8 and later, the onLine property returns true if both of the 

		 following conditions are true: 

		 <ul>

		 <li>the system is able to communicate with the network</li>

		 <li>the system is not in global offline mode (Users can modify the global offline state by choosing Work Offline on the File menu.)</li>

		 </ul>

		 If either of these conditions is false, the onLine property returns false.

		 </p>

		 

		 <p><strong>Note (IE):</strong> In Microsoft Internet Explorer 4.0 through Internet Explorer 7, the onLine property indicates whether the 

		 system is in global offline mode. It does not indicate whether the system can communicate with the network.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>alert(navigator.onLine ? "You're online" : "You're offline");</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534307%28VS.85%29.aspx MSDN - onLine Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator.onLine MDC - window.navigator.onLine

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<interfaceRec name='NavigatorAbilities' fullname='dom.objects:NavigatorAbilities' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\NavigatorAbilities.as' namespace='dom.objects' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Objects implementing the Navigator interface must also implement the NavigatorAbilities interface. This interface is defined separately so 

	 that other specifications can re-use parts of the Navigator interface.

	 

	 ]]></description>
<playerversion><![CDATA[HTML 5

	 ]]></playerversion>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

	 

	 ]]></see>
</interfaceRec>
<method name='getStorageUpdates' fullname='dom.objects:NavigatorAbilities/dom.objects:NavigatorAbilities:getStorageUpdates' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 The getStorageUpdates()  method, when invoked, must, if the storage mutex is owned by the event loop of the task that resulted in the method 

		 being called, release the storage mutex so that it is once again free. Otherwise, it must do nothing.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-getstorageupdates W3C - HTML5: Navigator.getStorageUpdates()

		 

		 ]]></see>
</method>
<method name='registerContentHandler' fullname='dom.objects:NavigatorAbilities/dom.objects:NavigatorAbilities:registerContentHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='mimeType;url;title' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Allows web sites to register themselves as possible handlers for content of a particular MIME type. 

		 

		 <p><strong>Note:</strong> For Firefox 2, only the application/vnd.mozilla.maybe.feed, application/atom+xml, and 

		 application/rss+xml MIME types are supported. All values have the same effect, and the registered 

		 handler will receive feeds in all Atom and RSS versions. </p>

		 

		 <p><strong>Note:</strong> Web sites may only register content handlers for themselves. For security reasons, 

		 it's not possible for an extension or web site to register content handlers targeting other sites.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 navigator.registerContentHandler("application/vnd.mozilla.maybe.feed",

                                 "http://www.example.tld/?foo=%s",

                                 "My Feed Reader");</listing>

		 

		 ]]></example>
<param><![CDATA[mimeType The desired MIME type as a string.

		 ]]></param>
<param><![CDATA[uri The URI to the handler as a string.

		 ]]></param>
<param><![CDATA[title The title of the handler presented to the user as a string.

		 

		 ]]></param>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator.registerContentHandler MDC - window.navigator.registerContentHandler()

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-registercontenthandler W3C - HTML5: Navigator.registerContentHandler()

		 

		 ]]></see>
</method>
<method name='registerProtocolHandler' fullname='dom.objects:NavigatorAbilities/dom.objects:NavigatorAbilities:registerProtocolHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='scheme;url;title' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Allows web sites to register themselves as possible handlers for particular protocols. 

		 

		 ]]></description>
<example><![CDATA[If your web application is located at http://www.example.com, you can register a protocol handler for it to handle "mailto" like this: 

		 <listing>navigator.registerProtocolHandler("mailto", "http://www.example.com/?uri=%s", "Example Mail");</listing>

		 

		 ]]></example>
<param><![CDATA[protocol The protocol the site wishes to handle, specified as a string. 

		 ]]></param>
<param><![CDATA[uri The URI to the handler as a string. You can include "%s" to indicate where to insert the escaped URI of the document to be handled. 

		 ]]></param>
<param><![CDATA[title The title of the handler presented to the user as a string. 

		 

		 ]]></param>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator.registerProtocolHandler MDC - window.navigator.registerProtocolHandler()

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-registerprotocolhandler W3C - HTML5: Navigator.registerProtocolHandler()

		 

		 ]]></see>
</method>
<classRec name='Location' fullname='dom.objects:Location' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\Location.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Contains information about the URL of the document and provides methods for changing that URL.

	 

	 ]]></description>
<example><![CDATA[
	 Replace the current document with the one at the given URL: 

	 <listing>

	 function goMoz() {

	 	window.location = "http://www.mozilla.org";

	 } 

	 

	 // in html: &lt;button onclick="goMoz();"&gt;Mozilla&lt;/button&gt;</listing>

	 

	 ]]></example>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535866%28VS.85%29.aspx MSDN - location Object

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

	 

	 ]]></see>
<modified><![CDATA[WindowObject 1

	 ]]></modified>
</classRec>
<method name='assign' fullname='dom.objects:Location/assign' isStatic='false' isFinal='false' isOverride='false'  param_names='url' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Load the document at the provided URL.

		 

		 ]]></description>
<param><![CDATA[url The URL of the document to load.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536342%28VS.85%29.aspx MSDN - assign Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='reload' fullname='dom.objects:Location/reload' isStatic='false' isFinal='false' isOverride='false'  param_names='forceget' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Reload the document from the current URL.

		 

		 ]]></description>
<param><![CDATA[forceget <strong>Not in W3 specification</strong> When it is true, causes the page to always be reloaded from 

		 the server. If it is false or not specified, the browser may reload the page 

		 from its cache.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536691%28VS.85%29.aspx MSDN - reload Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='replace' fullname='dom.objects:Location/replace' isStatic='false' isFinal='false' isOverride='false'  param_names='url' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Replace the current document with the one at the provided URL. The difference 

		 from the assign() method is that after using replace() the current page will 

		 not be saved in session history, meaning the user won't be able to use the 

		 Back button to navigate to it.

		 

		 ]]></description>
<param><![CDATA[url The URL to insert into the session history.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536712%28VS.85%29.aspx MSDN - replace Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='hash' fullname='dom.objects:Location/hash/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The part of the URL that follows the # symbol, including the # symbol.

		 

		 <p><strong>Note:</strong> If there is no number sign, this property returns an empty string.</p>

		 

		 ]]></description>
<example><![CDATA[
		 You can read them to get information about the current URL or set them to navigate to another URL.

		 The example contains the value of the property of the following URL: <code>http://[www.google.com]:80/search?q=devmo#test</code>

		 

		 <p>hash: <code>#test</code></p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533775%28VS.85%29.aspx MSDN - hash Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='host' fullname='dom.objects:Location/host/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The host name (without the port number or square brackets).

		 

		 <p><strong>Note:</strong> The host property is the concatenation of the hostname and port properties, separated by a colon (hostname:port). When the port property is null, the host property is the same as the hostname property. </p>

		 

		 <p><strong>Note:</strong> The host property may be set at any time, although it is safer to set the href property to change a location. If the specified host cannot be found, an error is returned. </p>

		 

		 ]]></description>
<example><![CDATA[
		 You can read them to get information about the current URL or set them to navigate to another URL.

		 The example contains the value of the property of the following URL: <code>http://[www.google.com]:80/search?q=devmo#test</code>

		 

		 <p>host: <code>[www.google.com]:80</code></p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533784%28VS.85%29.aspx MSDN - host Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='hostname' fullname='dom.objects:Location/hostname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute represents the name or IP address of the network location without any port number.

		 

		 <p><strong>Note:</strong> If no host name is available, this property returns an empty string. </p>

		 

		 ]]></description>
<example><![CDATA[
		 You can read them to get information about the current URL or set them to navigate to another URL.

		 The example contains the value of the property of the following URL: <code>http://[www.google.com]:80/search?q=devmo#test</code>

		 

		 <p>hostname: <code>www.google.com</code></p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533785%28VS.85%29.aspx MSDN - hostname Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='href' fullname='dom.objects:Location/href/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Sets or retrieves the entire URL as a string.

		 

		 ]]></description>
<example><![CDATA[
		 You can read them to get information about the current URL or set them to navigate to another URL.

		 The example contains the value of the property of the following URL: <code>http://[www.google.com]:80/search?q=devmo#test</code>

		 

		 <p>href: <code>http://[www.google.com]:80/search?q=devmo#test</code></p>

		 

		 <p>This example shows a URL list. The user is taken to the URL selected from the options, if the selection is different from the list's default value.</p>

		 <listing>

		 &lt;SELECT onchange="window.location.href=this.options[this.selectedIndex].value"&gt;

		 	&lt;OPTION VALUE="http://www.microsoft.com/ie"&gt;Internet Explorer&lt;/OPTION&gt;

		 	&lt;OPTION VALUE="http://www.microsoft.com"&gt;Microsoft Home&lt;/OPTION&gt;

		 	&lt;OPTION VALUE="http://msdn.microsoft.com"&gt;Developer Network&lt;/OPTION&gt;

		 &lt;/SELECT&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533867%28VS.85%29.aspx MSDN - href Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='pathname' fullname='dom.objects:Location/pathname/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The path (relative to the host).

		 

		 ]]></description>
<example><![CDATA[
		 You can read them to get information about the current URL or set them to navigate to another URL.

		 The example contains the value of the property of the following URL: <code>http://[www.google.com]:80/search?q=devmo#test</code>

		 

		 <p>pathname: <code>/search</code></p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534332%28VS.85%29.aspx MSDN - pathname Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='port' fullname='dom.objects:Location/port/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute represents the port number of the network location.

		 

		 ]]></description>
<example><![CDATA[
		 You can read them to get information about the current URL or set them to navigate to another URL.

		 The example contains the value of the property of the following URL: <code>http://[www.google.com]:80/search?q=devmo#test</code>

		 

		 <p>port: <code>80</code></p>

		 

		 <p>This example function returns the port property of two <code>a</code> elements.</p>

		 <listing>

		 &lt;script&gt;

		 function getPort() {

		 	alert ("FTP: " + oFtp.port + "\n" + "HTTP: " + oHttp.port);

		 }

		 &lt;/script&gt;

		 

		 &lt;a href="ftp://www.microsoft.com" onclick="getPort();" id=oFtp&gt;ftp&lt;/a&gt;

		 &lt;a href="http://www.microsoft.com" onclick="getPort();" id=oHttp&gt;http&lt;/a&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534342%28VS.85%29.aspx MDC - port Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='protocol' fullname='dom.objects:Location/protocol/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute represents the scheme of the URI including the trailing colon (:).

		 

		 <p><strong>Note (IE):</strong> The protocol property specifies how to transfer information from the host to the client. Windows Internet Explorer supports several predefined protocols, including http and ftp.</p>

		 

		 <p><strong>Note (IE):</strong> The document, img, and location objects expose the protocol property as read-only.

		 location.protocol property returns the initial substring of a URL, including the first colon (for example, http:).

		 However, document.protocol returns the expanded text of the protocol acronym. For example, it returns the http 

		 protocol as Hypertext Transfer Protocol.</p>

		 

		 ]]></description>
<example><![CDATA[
		 You can read them to get information about the current URL or set them to navigate to another URL.

		 The example contains the value of the property of the following URL: <code>http://[www.google.com]:80/search?q=devmo#test</code>

		 

		 <p>protocol: <code>http:</code></p>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534353%28VS.85%29.aspx MSDN - protocol Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='search' fullname='dom.objects:Location/search/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The part of the URL that follows the ? symbol, including the ? symbol.

		 

		 ]]></description>
<example><![CDATA[
		 You can read them to get information about the current URL or set them to navigate to another URL.

		 The example contains the value of the property of the following URL: <code>http://[www.google.com]:80/search?q=devmo#test</code>

		 

		 <p>search: <code>?q=devmo</code></p>

		 

		 <p>Send a string of data to the server by modifying the search property: </p>

		 <listing>

		 function sendData(dat) {

		 	window.location.search = dat;

		 }

		 

		 // in html: &lt;button onclick="sendData('Some data');"&gt;Send data&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534620%28VS.85%29.aspx MSDN - search Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.location MDC - window.location

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/Window/#location W3C - Window.location

		 

		 ]]></see>
<modified><![CDATA[WindowObject 1

		 ]]></modified>
</method>
<method name='hash' fullname='dom.objects:Location/hash/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='host' fullname='dom.objects:Location/host/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='hostname' fullname='dom.objects:Location/hostname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='href' fullname='dom.objects:Location/href/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='pathname' fullname='dom.objects:Location/pathname/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='port' fullname='dom.objects:Location/port/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='protocol' fullname='dom.objects:Location/protocol/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='search' fullname='dom.objects:Location/search/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='CRMFRequest' fullname='dom.objects:CRMFRequest' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\CRMFRequest.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 RFC 4211, the Internet X.509 Public Key Infrastructure Certificate Request Message 

	 Format (CRMF), defines a certReqMessage. The object returned by generateCRMFRequest() 

	 contains one of those.

	 

	 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

	 ]]></playerversion>
<see><![CDATA[http://www.ietf.org/rfc/rfc4211.txt Network Working Group - RFC 4211

	 ]]></see>
<see><![CDATA[http://mh-in-f132.google.com/search?hl=en&safe=off&num=100&q=cache%3Awww.ietf.org%2Frfc%2Frfc4211.txt+certReqMessage+certRequest+certReq&btnG=Search Network Working Group - certReqMessage

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/CRMF_Request_object MDC - CRMF Request object

	 ]]></see>
<see><![CDATA[dom.objects.Crypto#generateCRMFRequest()

	 

	 ]]></see>
</classRec>
<method name='request' fullname='dom.objects:CRMFRequest/request/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns a encrypted string.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
</method>
<classRec name='Crypto' fullname='dom.objects:Crypto' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\Crypto.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Mozilla defines a special JavaScript object to allow web pages access to certain cryptographic related services. 

	 These services are a balance between the functionality web pages need, and the requirement to protect users from 

	 malicious web sites. Most of these services are available via the JavaScript window object as window.crypto.

	 

	 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

	 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

	 

	 ]]></see>
</classRec>
<method name='alert' fullname='dom.objects:Crypto/alert' isStatic='false' isFinal='false' isOverride='false'  param_names='message' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[ 

		 Undocumented

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

		 

		 ]]></see>
</method>
<method name='disableRightClick' fullname='dom.objects:Crypto/disableRightClick' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Undocumented

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

		 

		 ]]></see>
</method>
<method name='generateCRMFRequest' fullname='dom.objects:Crypto/generateCRMFRequest' isStatic='false' isFinal='false' isOverride='false'  param_names='requestedDN;regToken;authenticator;escrowAuthorityCert;CRMFGenerationDoneCode;keySizeN;keyParamsN;keyGenAlgN' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;Number;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='dom.objects:CRMFRequest'>
<description><![CDATA[

		 This method will generate a sequence of CRMF requests that has N requests. One request 

		 for each key pair that is generated. The first three parameters will be applied to every 

		 request. The "escrowAuthorityCert" parameter will only be used for requests that pertain 

		 to a key that is being escrowed. After the "escrowAuthorityCert" parameter, the method 

		 takes some JavaScript code that is invoked when the CRMF request is ready. Finally, there 

		 are 1 or more sets of key generation arguments. Each key generation will be associated 

		 with its own request. All the requests will have the same DN.

		 

		 ]]></description>
<example><![CDATA[
		 This generates a CRMF object with dummy settings and outputs to Firebug

		 <listing>

		 var crmfObject = null;

		 try {

		 	crmfObject = window.crypto.generateCRMFRequest("CN=vvv", "regToken", null, null, 'f' , 1024, null, "rsa-dual-use");

		 } catch(ex) {

		 	console.log("window.crypto.generateCRMFRequest() failed - " + ex + "\n");

		 }

		 function f() {

		 	console.log("done");

		 }

		 console.log(crmfObject);</listing>

		 

		 ]]></example>
<param><![CDATA[requestedDN An RFC 1485 formatted DN to include in the certificate request.

		 ]]></param>
<param><![CDATA[regToken A value used to authenticate the user to the RA/CA.

		 ]]></param>
<param><![CDATA[authenticator A value that the user can authenticate with in the future when 

		 their private key is not available. Can be used for key recovery or revocation requests.

		 ]]></param>
<param><![CDATA[escrowAuthorityCert If this value is NULL, then no key escrow will be performed. 

		 This value specifies which KRA certificate should be used to wrap the private key being 

		 escrowed. The user will be prompted for confirmation whenever a key will be escrowed. 

		 Only key exchange keys will be escrowed. If a dual use key is being generated, it will 

		 not be escrowed. The value of this argument is a base-64 encoded certificate.

		 ]]></param>
<param><![CDATA[completeHandler This parameter is JavaScript to execute when the CRMF generation is complete.

		 ]]></param>
<param><![CDATA[keySizeN The size in bits of the Nth key to generate

		 ]]></param>
<param><![CDATA[keyParamsN This string is an optional algorithm dependent parameter value. For 

		 Diffie-Hellman it is used to specify p and g parameters. For DSA, it will be used to 

		 specify pqg. If the key generation requires parameters and the value passed in is NULL, 

		 then the client will generate the parameters on its own. Currently, this value is ignored.

		 ]]></param>
<param><![CDATA[keyGenAlgN Which algorithm the generated key will support. Acceptable values are (the 

		 mentioned values for keyUsage pertain to the keyUsage value of the Certificate Extension that 

		 will ultimately be in the issued certificate):

		 <ul>

		 <li>"rsa-ex" - generate an RSA key for key exchange only (This will have eyEncipherment set for keyUsage.)</li>

		 <li>"rsa-dual-use" - generate a single RSA key for both signing and encryption. (This will have digitalSignature, keyEncipherment, and nonRepudiation set for keyUsage.)</li>

		 <li>"rsa-sign" - generate an RSA key for signing only. (This will have digitalSignature set for keyUsage.)</li>

		 <li>"rsa-nonrepudiation" - generate a single RSA key for nonRepudiation only. (This will have non-repudiation set for keyUsage.)</li>

		 <li>"rsa-sign-nonrepudiation" - generate a single RSA key use for both signing and nonRepudiation. (This will have both digitalSignature and nonRepudiation set for keyUsage.)</li>

		 <li>"dsa-sign" - generate a single DSA key for signing only. (This will have digitalSignature set for keyUsage.)</li>

		 <li>"dsa-nonrepudiation" - generate a single DSA key for nonRepudiation. (This will have nonRepudiation set for keyUsage.)</li>

		 <li>"dsa-sign-nonrepudiation" - generate a single DSA key for signing and non-repudiation. (This will have digitalSignature and nonRepudiation set for keyUsage.)</li>

		 <li>"dh-ex"</li>

		 <li>"ec-ex"</li>

		 <li>"ec-dual-use"</li>

		 <li>"ec-sign"</li>

		 <li>"ec-sign-nonrepudiation"</li>

		 <li>"ec-nonrepudiation"</li>

		 </ul>

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<return><![CDATA[
		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/GenerateCRMFRequest MDC - crypto.generateCRMFRequest()

		 

		 ]]></see>
</method>
<method name='importUserCertificates' fullname='dom.objects:Crypto/importUserCertificates' isStatic='false' isFinal='false' isOverride='false'  param_names='nicknameString;certString;forceBackup' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean' param_defaults='undefined;undefined;undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Imports newly issued certificates for the user. The private key for the certificates must 

		 already reside in the user's personal private key database.

		 

		 The request ID in the response being imported must match the request ID in the associated 

		 Certification Request or Recovery Request.

		 

		 ]]></description>
<param><![CDATA[nicknameString This is the nickname that will be used to describe the certificate in the 

		 client's certificate management UI. It should serve to uniquely identify the certificate to the user. 

		 For example, "John Smith's VeriSign Class 3 Digital ID" or "John Smith's Ford ID Certificate". However, 

		 if this certificate has the same DN as one or more certificates that already exist in the user's 

		 certificate store, the nickname associated with the certificate(s) of the same DN in the certificate 

		 store is used, and the "nicknameString" parameter is ignored. If the string is null and no certificate 

		 with the same DN exists in the user's certificate store, Personal Security Manager uses the following 

		 pattern to derive the nickname: &lt;Common Name>'s &lt;Issuer Name> ID.

		 ]]></param>
<param><![CDATA[certString This string is the CMMF Certification Response from the CA that contains the user's certificate(s). The response is base-64 encoded.

		 ]]></param>
<param><![CDATA[forceBackup It allows the CA or RA to indicate to the client whether to force the user to back up a newly issued certificate (PKCS #12).

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<return><![CDATA[If the import operation succeeds, an empty string will be returned. If it fails, one of 

		 the following error strings will be returned: 

		 <ul>

		 <li>"error:userCancel" -	The user canceled the import operation</li>

		 <li>"error:invalidCertificate" -	One of the certificate packages was incorrectly formatted</li>

		 <li>"error:internalError" -	The software encountered some internal error, such as out of memory</li>

		 <li>"error:invalidRequestID" -	The request ID in the response message does not match any outstanding request</li>

		 </ul>

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/ImportUserCertificates MDC - crypto.importUserCertificates()

		 

		 ]]></see>
</method>
<method name='logout' fullname='dom.objects:Crypto/logout' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[ 

		 Undocumented

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

		 

		 ]]></see>
</method>
<method name='popChallengeResponse' fullname='dom.objects:Crypto/popChallengeResponse' isStatic='false' isFinal='false' isOverride='false'  param_names='challengeString' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The popChallengeResponse() function returns a proof of key posession signed challenge which a CA can use 

		 to verify the client has the private key associated with it's claimed public key. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 resultString = crypto.popChallengeResponse("challengeString");</listing>

		 

		 ]]></example>
<param><![CDATA[challengeString A base-64 encoded CMMF POPODecKeyChallContent message. The current implementation

		 does not conform to that defined in the CMMF draft, and we intend to change this implementation to that 

		 defined in the CMC RFC. See below for the current implementation.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<return><![CDATA[The resultString will either be a base-64 encoded POPODecKeyRespContent message, or one of the 

		 following error strings: 

		 <ul>

		 <li>"error:invalidParameter:XXX" 	The parameter XXX was an invalid value.</li>

		 <li>"error:internalError" 	The software encountered some internal error, such as out of memory</li>

		 </ul>

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/PopChallengeResponse MDC - crypto.popChallengeResponse()

		 

		 ]]></see>
</method>
<method name='random' fullname='dom.objects:Crypto/random' isStatic='false' isFinal='false' isOverride='false'  param_names='numBytes' param_types='Number' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[ 

		 Generates a random number of numBytes length.

		 

		 <p><strong>Note (Mozilla):</strong> window.crypto.random() is not yet implemented in Mozilla browsers.</p>

		 

		 ]]></description>
<example><![CDATA[
		 To obtain a ten byte random number using the cryptographic engine, simply call: 

		 <listing>var myrandom = window.crypto.random(10);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

		 

		 ]]></see>
</method>
<method name='signText' fullname='dom.objects:Crypto/signText' isStatic='false' isFinal='false' isOverride='false'  param_names='stringToSign;caOption' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[ 

		 Undocumented

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

		 

		 ]]></see>
</method>
<method name='enableSmartCardEvents' fullname='dom.objects:Crypto/enableSmartCardEvents/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[ 

		 To enable your document to receive these events, you must first tell the crypto system you are interested. You 

		 can do this by setting <code>window.crypto.enableSmartCardEvents</code> to <code>true</code>. This tells the 

		 crypto system that you are interested in listening for these events. You can then register event handlers for 

		 these events with the document.addEventListener. 

		 

		 ]]></description>
<example><![CDATA[
		 With this example, your website will automatically reload anytime a SmartCard is inserted or removed. This 

		 allows the page to automatically login and logout based on the presence of the SmartCard. 

		 <listing>

		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;

		 &lt;html&gt;&lt;head&gt; 

		 ....

		 &lt;script language="javascript"&gt;

		 

		 function onSmartCardChange() {

		 	window.location.reload();

		 }

		 function register() {

		 window.crypto.enableSmartCardEvents=true;

		 	document.addEventListener("smartcard-insert",onSmartCardChange,false);

		 	document.addEventListener("smartcard-remove",onSmartCardChange,false);

		 };

		 function deregister() {

		 	document.removeEventListener("smartcard-insert",onSmartCardChange,false);

		 	document.removeEventListener("smartcard-remove",onSmartCardChange,false);

		 };

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body .... onload=register() onunload=deregister()&gt;

		 

		 .....

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

		 

		 ]]></see>
</method>
<method name='version' fullname='dom.objects:Crypto/version/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[ 

		 Undocumented

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/JavaScript_crypto MDC - JavaScript crypto

		 

		 ]]></see>
</method>
<method name='enableSmartCardEvents' fullname='dom.objects:Crypto/enableSmartCardEvents/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='MessagePortArray' fullname='dom.objects:MessagePortArray' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\MessagePortArray.as' namespace='dom.objects' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A typed array containing only MessagePorts

	 

	 ]]></description>
<playerversion><![CDATA[HTML 5

	 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/html5/comms.html#messageport W3C - HTML5: MessagePortArray

	 ]]></see>
<see><![CDATA[dom.objects.MessagePort

	 

	 ]]></see>
</interfaceRec>
<interfaceRec name='MessagePort' fullname='dom.objects:MessagePort' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\MessagePort.as' namespace='dom.objects' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Each channel has two message ports. Data sent through one port is received by the other port, and vice versa.

	 

	 ]]></description>
<playerversion><![CDATA[HTML 5

	 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/html5/comms.html#messageport W3C - HTML5: MessagePort

	 

	 ]]></see>
</interfaceRec>
<method name='close' fullname='dom.objects:MessagePort/dom.objects:MessagePort:close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Disconnects the port, so that it is no longer active.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/html5/comms.html#dom-messageport-close W3C - HTML5: MessagePort.start()

		 

		 ]]></see>
</method>
<method name='postMessage' fullname='dom.objects:MessagePort/dom.objects:MessagePort:postMessage' isStatic='false' isFinal='false' isOverride='false'  param_names='message;ports' param_types=';dom.objects:MessagePortArray' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Posts a message through the channel, optionally with the given ports.

		 

		 ]]></description>
<param><![CDATA[message

		 ]]></param>
<param><![CDATA[ports

		 

		 ]]></param>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/html5/comms.html#dom-messageport-postmessage W3C - HTML5: MessagePort.postMessage()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: If the ports array is not null and it contains either null 

		 entries, duplicate ports, ports that are not entangled, or the source or target port.

		 

		 ]]></throws>
</method>
<method name='start' fullname='dom.objects:MessagePort/dom.objects:MessagePort:start' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Begins dispatching messages received on the port.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/html5/comms.html#dom-messageport-start W3C - HTML5: MessagePort.start()

		 

		 ]]></see>
</method>
<method name='active' fullname='dom.objects:MessagePort/dom.objects:MessagePort:active/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns true if the port is still active; otherwise, returns false.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://www.w3.org/TR/html5/comms.html#dom-messageport-active W3C - HTML5: MessagePort.active

		 

		 ]]></see>
</method>
<classRec name='MimeType' fullname='dom.objects:MimeType' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\MimeType.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A MIME type (Multipart Internet Mail Extension) supported by the client.

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

	 

	 ]]></see>
</classRec>
<method name='description' fullname='dom.objects:MimeType/description/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A description of the MIME type.

		 

		 ]]></description>
<example><![CDATA[<listing>"Adobe Flash movie"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

		 

		 ]]></see>
</method>
<method name='enabledPlugin' fullname='dom.objects:MimeType/enabledPlugin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:Plugin'>
<description><![CDATA[

		 Reference to the Plugin object configured for the MIME type.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Can we display Shockwave movies?

		 var mimetype = navigator.mimeTypes["application/x-director"];

		 if (mimetype) {

		 	// Yes, so can we display with a plug-in?

		 	var plugin = mimetype.enabledPlugin;

		 	if (plugin) {

		 		// Yes, so show the data in-line

		 		document.writeln("Here's a movie: &lt;EMBED SRC=mymovie.dir HEIGHT=100 WIDTH=100&gt;");

		 	} else {

		 		// No, so provide a link to the data

		 		document.writeln("&lt;A HREF='mymovie.dir'&gt;Click here&lt;/A&gt; to see a movie.");

		 	}

		 } else {

		 	// No, so tell them so

		 	document.writeln("Sorry, can't show you this cool movie.");

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

		 

		 ]]></see>
</method>
<method name='suffixes' fullname='dom.objects:MimeType/suffixes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A string listing possible filename extensions for the MIME type, for example "mpeg, mpg, mpe, mpv, vbs, mpegv".

		 

		 ]]></description>
<example><![CDATA[<listing>"swf"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

		 

		 ]]></see>
</method>
<method name='type' fullname='dom.objects:MimeType/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The name of the MIME type, for example "video/mpeg" or "audio/x-wav".

		 

		 ]]></description>
<example><![CDATA[<listing>"application/x-shockwave-flash"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

		 

		 ]]></see>
</method>
<interfaceRec name='NavigatorID' fullname='dom.objects:NavigatorID' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\NavigatorID.as' namespace='dom.objects' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Objects implementing the Navigator interface must also implement the NavigatorID interface. This interface is defined separately so 

	 that other specifications can re-use parts of the Navigator interface.

	 

	 ]]></description>
<playerversion><![CDATA[HTML 5

	 ]]></playerversion>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

	 

	 ]]></see>
</interfaceRec>
<method name='appName' fullname='dom.objects:NavigatorID/dom.objects:NavigatorID:appName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the official name of the browser. 

		 

		 ]]></description>
<example><![CDATA[

		 <listing>

		 dump(window.navigator.appName);

		 // prints "Navigator" to the console for NS6</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533079%28VS.85%29.aspx MSDN - appName Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.appName MDC - window.navigator.appName

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='appVersion' fullname='dom.objects:NavigatorID/dom.objects:NavigatorID:appVersion/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the version of the browser.

		 

		 <p><strong>Note:</strong> The window.navigator.userAgent property also contains the version number 

		 (example: "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape 6/6.1"), but you 

		 should be aware of how easy it is to change the user agent string and "spoof" other browsers, platforms, 

		 or user agents, and also how cavalier the browser vendor themselves are with these properties. 

		 The window.navigator.appVersion and window.navigator.userAgent properties are quite often used in 

		 "browser sniffing" code: scripts that attempt to find out what kind of browser you are using and 

		 adjust pages accordingly.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if ( navigator.appVersion.charAt(0) == "5" ) { 

		 	// browser is putatively a v5 browser

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533080%28VS.85%29.aspx MSDN - appVersion Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.appVersion MDC - window.navigator.appVersion

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='platform' fullname='dom.objects:NavigatorID/dom.objects:NavigatorID:platform/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns a string representing the platform of the browser.

		 

		 <table class="innertable">

		 	<tr><th>Platform Code</th><th>Platform Name</th></tr>

		 	<tr>

		 		<td>HP-UX</td><td><code>HP UNIX-based computers.</code></td>

		 	</tr>

		 	<tr>

		 		<td>MacPPC</td><td>Macintosh PowerPC-based computers.</td>

		 	</tr>

		 	<tr>

		 		<td>Mac68K</td><td>Macintosh 68K-based computers.</td>

		 	</tr>

		 	<tr>

		 		<td>MacIntel</td><td>Macintosh Intel-based computers.</td>

		 	</tr>

		 	<tr>

		 		<td>Win32</td><td><code>Microsoft Windows 32-bit platform.</code></td>

		 	</tr>

		 	<tr>

		 		<td>Win16</td><td>Windows 16-bit platform.</td>

		 	</tr>

		 	<tr>

		 		<td>WinCE</td><td>Windows CE platform.</td>

		 	</tr>

		 	<tr>

		 		<td>Linux i686</td><td>Linux i686</td>

		 	</tr>

		 	<tr>

		 		<td>Other</td><td>Other</td>

		 	</tr>

		 </table>

		 

		 <p><strong>Note (Mozilla):</strong> Unless your code is privileged (chrome or at least has the UniversalBrowserRead 

		 privilege), it may get the value of the general.platform.override preference instead of the true platform. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534340%28VS.85%29.aspx MSDN - platform Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.platform MDC - window.navigator.platform

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='userAgent' fullname='dom.objects:NavigatorID/dom.objects:NavigatorID:userAgent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the user agent string for the current browser. 

		 

		 <p><strong>Note:</strong> Browser identification based on detecting the user agent string is 

		 <strong>unreliable</strong> and <strong>is not recommended</strong>, as the user agent string is user configurable.

		 

		 <ul>

		 <li>Mozilla Suite and Firefox can use the preference "general.useragent.override" in about:config. Some Firefox extensions or multi-bar do that. </li>

		 <li>Opera 6+ allows users to set the browser identification string via a menu </li>

		 <li>Microsoft Internet Explorer uses the Windows registry </li>

		 <li>Safari and iCab allow users to change the browser user agent string to predefined Internet Explorer or Netscape strings via a menu. </li>

		 </ul>

		 

		 </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 alert(window.navigator.userAgent);

		 // alerts "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape6/6.1"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534712%28VS.85%29.aspx MSDN - userAgent Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.userAgent MDC - window.navigator.userAgent

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<classRec name='MimeTypeArray' fullname='dom.objects:MimeTypeArray' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\MimeTypeArray.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Contains a list of MimeType objects representing the MIME types recognized by the browser. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

	 

	 ]]></see>
</classRec>
<method name='item' fullname='dom.objects:MimeTypeArray/item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.objects:MimeType'>
<description><![CDATA[

		 Retrieves a MimeType by index.

		 

		 ]]></description>
<param><![CDATA[index Index of the MimeType

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The specified MimeType

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

		 

		 ]]></see>
</method>
<method name='nameItem' fullname='dom.objects:MimeTypeArray/nameItem' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.objects:MimeType'>
<description><![CDATA[

		 Retrives a MimeType by name.

		 

		 ]]></description>
<param><![CDATA[name Name of the MimeType

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The specified MimeType

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.objects:MimeTypeArray/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of MimeTypes in the array.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

		 

		 ]]></see>
</method>
<classRec name='PluginArray' fullname='dom.objects:PluginArray' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\PluginArray.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Contains a list of Plugins objects loaded in the browser. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537477%28VS.85%29.aspx# MSDN - plugins Collection

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.plugins MDC - window.navigator.plugins

	 

	 ]]></see>
</classRec>
<method name='item' fullname='dom.objects:PluginArray/item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.objects:Plugin'>
<description><![CDATA[

		 Retrieves a Plugins by index.

		 

		 ]]></description>
<param><![CDATA[index Index of the Plugins

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The specified Plugins

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536460%28VS.85%29.aspx MSDN - item Method

		 

		 ]]></see>
</method>
<method name='nameItem' fullname='dom.objects:PluginArray/nameItem' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.objects:Plugin'>
<description><![CDATA[

		 Retrives a Plugins by name.

		 

		 ]]></description>
<param><![CDATA[name Name of the Plugins

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The specified Plugins

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536634%28VS.85%29.aspx MSDN - namedItem Method

		 

		 ]]></see>
</method>
<method name='refresh' fullname='dom.objects:PluginArray/refresh' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
</method>
<method name='tags' fullname='dom.objects:PluginArray/tags' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Retrieves a collection of objects that have the specified HTML tag name. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>var coll = document.all.tags("p");</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536776%28VS.85%29.aspx MSDN - tags Method

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.objects:PluginArray/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of Plugins in the array.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534101%28VS.85%29.aspx MSDN - length Property

		 

		 ]]></see>
</method>
<classRec name='Plugin' fullname='dom.objects:Plugin' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\Plugin.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A plug-in module installed on the client.

	 

	 <p>A plug-in is a software module that the browser can invoke to display specialized types of 

	 embedded data within the browser. The user can obtain a list of installed plug-ins by choosing 

	 About Plug-ins from the Help menu.</p>

	 

	 <p>Each Plugin object is itself array containing one element for each MIME type supported by the 

	 plug-in. Each element of the array is a MimeType object. For example, the following code displays 

	 the type and description properties of the first Plugin object's first MimeType object.</p>

	 

	 <listing>

	 myPlugin=navigator.plugins[0]

	 myMimeType=myPlugin[0]

	 document.writeln('myMimeType.type is ',myMimeType.type,"&lt;BR&gt;")

	 document.writeln('myMimeType.description is ',myMimeType.description</listing>

	 

	 <p>The preceding code displays output similar to the following:</p>

	 

	 <listing>

	 myMimeType.type is video/quicktime

	 myMimeType.description is QuickTime for Windows </listing>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
</classRec>
<method name='item' fullname='dom.objects:Plugin/item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.objects:MimeType'>
<description><![CDATA[

		 Retrieves a MimeType by index.

		 

		 ]]></description>
<param><![CDATA[index Index of the MimeType

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The specified MimeType

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536460%28VS.85%29.aspx MSDN - item Method

		 

		 ]]></see>
</method>
<method name='nameItem' fullname='dom.objects:Plugin/nameItem' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.objects:MimeType'>
<description><![CDATA[

		 Retrives a MimeType by name.

		 

		 ]]></description>
<param><![CDATA[name Name of the MimeType

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The specified MimeType

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536634%28VS.85%29.aspx MSDN - namedItem Method

		 

		 ]]></see>
</method>
<method name='description' fullname='dom.objects:Plugin/description/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A description of the plug-in.

		 

		 ]]></description>
<example><![CDATA[<listing>3.0.40624.0</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
</method>
<method name='filename' fullname='dom.objects:Plugin/filename/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Name of the plug-in file on disk.

		 

		 ]]></description>
<example><![CDATA[<listing>npctrl.dll</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
</method>
<method name='length' fullname='dom.objects:Plugin/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Number of elements in the plug-in's array of MimeType objects.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
</method>
<method name='name' fullname='dom.objects:Plugin/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 	Name of the plug-in.

		 

		 ]]></description>
<example><![CDATA[<listing>Silverlight Plug-In</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
</method>
<classRec name='UserProfile' fullname='dom.objects:UserProfile' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\UserProfile.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.

	 

	 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

	 ]]></playerversion>
<playerversion><![CDATA[Obsolete IE7

	 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535915%28VS.85%29.aspx MSDN - userProfile Object

	 

	 ]]></see>
</classRec>
<method name='addReadRequest' fullname='dom.objects:UserProfile/addReadRequest' isStatic='false' isFinal='false' isOverride='false'  param_names='attributeName;reserved' param_types='dom.core.types:DOMString' param_defaults='undefined;null' result_type='Boolean'>
<description><![CDATA[

		 Adds an entry to the queue for read requests.

		 

		 <p><strong>Note:</strong> This method appends a vCard name to the read-requests queue. The

		 read-requests queue is a list of read requests waiting to be initiated. To initiate the accumulated, 

		 or compound, read requests in the queue, call doReadRequest. To clear the queue, call clearRequest. </p>

		  

		 ]]></description>
<param><![CDATA[attributeName Specifies one of the standard vCard names. If anything else is used, the request is ignored and nothing is added to the read-requests queue.

		 ]]></param>
<param><![CDATA[reserved Windows Internet Explorer currently ignores this parameter.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete IE7

		 ]]></playerversion>
<return><![CDATA[True if the request has been successfully added to the queue. False if the attribute name was not recognized or the attribute already appeared in the request queue.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535929%28VS.85%29.aspx MSDN - addReadRequest Method

		 

		 ]]></see>
</method>
<method name='clearRequest' fullname='dom.objects:UserProfile/clearRequest' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Clears all requests in the read-requests queue to prepare for new profile-information requests.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete IE7

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536355%28VS.85%29.aspx MSDN - clearRequest Method

		 

		 ]]></see>
</method>
<method name='doReadRequest' fullname='dom.objects:UserProfile/doReadRequest' isStatic='false' isFinal='false' isOverride='false'  param_names='usageCode;friendlyName;domain;path;expiration;reserved' param_types='Number;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;null;null;null;null;null' result_type='void'>
<description><![CDATA[

		 Performs all requests located in the read-requests queue.

		 

		 ]]></description>
<param><![CDATA[usageCode Specifies the code that notifies the user of the type of access requested. This usage 

		 code should be one of the following 13 codes defined by the Internet Privacy Working Group (IPWG).

		 <table class="innertable">

		 	<tr><th>Title</th><th>Value</th></tr>

		 	<tr>

		 		<td>0</td><td>Used for system administration.</td>

		 	</tr>

		 	<tr>

		 		<td>1</td><td>Used for research and product development.</td>

		 	</tr>

		 	<tr>

		 		<td>2</td><td>Used for completion and support of the current transaction.</td>

		 	</tr>

		 	<tr>

		 		<td>3</td><td>Used to customize the content and design of a site.</td>

		 	</tr>

		 	<tr>

		 		<td>4</td><td>Used to improve the content of a site that includes advertisements.</td>

		 	</tr>

		 	<tr>

		 		<td>5</td><td>Used for notifying visitors about updates to the site.</td>

		 	</tr>

		 <tr>

		 		<td>6</td><td>Used for contacting visitors for marketing of services or products.</td>

		 	</tr>

		 <tr>

		 		<td>7</td><td>Used for linking other collected information.</td>

		 	</tr>

		 <tr>

		 		<td>8</td><td>Used by a site for other purposes.</td>

		 	</tr>

		 <tr>

		 		<td>9</td><td>Disclosed to others for customization or improvement of the content and design of the site.</td>

		 	</tr>

		 <tr>

		 		<td>10</td><td>Disclosed to others, who may contact the user, for marketing of services or products.</td>

		 	</tr>

		 <tr>

		 		<td>11</td><td>Disclosed to others, who may contact the user, for marketing of services or products. The user can ask a site not to do this.</td>

		 	</tr>

		 <tr>

		 		<td>12</td><td>Disclosed to others for any other purpose.</td>

		 	</tr>

		 </table>

		 ]]></param>
<param><![CDATA[friendlyName Specifies the display name of the party requesting access to private information. 

		 For security reasons, it is not sufficient for the user agent to show this display name to the user. In addition 

		 to display name, the user agent must display the URL that originates the script requesting profile access. If 

		 this script originates from a secure connection (for example, SSL), the Web author can use the SSL certificate 

		 to reliably identify the party requesting access.

		 ]]></param>
<param><![CDATA[domain Specifies the pages that the user's choice will apply to in addition to the current page. 

		 The specification follows the cookie standard.

		 ]]></param>
<param><![CDATA[path Specifies the path to the domain server requesting access. When vExpiration is set, the path is saved with the requested attributes.

		 ]]></param>
<param><![CDATA[expiration Specifies the amount of time the site has requested access to these attributes. This is currently ignored by Windows Internet Explorer.

		 ]]></param>
<param><![CDATA[reserved This parameter is reserved.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete IE7

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536413%28VS.85%29.aspx MSDN - doReadRequest Method

		 

		 ]]></see>
</method>
<method name='getAttribute' fullname='dom.objects:UserProfile/getAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='attributeName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Returns the value of the named attribute from the userProfile object.

		 

		 <p><strong>Note:</strong> The following schema is used for the field names of the user data store. These names are 

		 specified when you use the getAttribute method on the userProfile object. Note that the format has changed from 

		 vCard_xxx to vCard.xxx, and that the older format no longer is supported.</p>

		 

		 <p><strong>Note:</strong> An asterisk ( denotes extensions to the vCard schema. Extensions are referenced 

		 as X- elements, as defined in the vCard schema.</p>

		 

		 <table class="innertable">

		 <tr>

		 <th colspan="3">vCard Names</th>

		 </tr>

		 <tr>

		 <td>vCard.Business.City</td>

		 <td>vCard.Business.Country</td>

		 <td>vCard.Business.Fax</td>

		 </tr>

		 <tr>

		 <td>vCard.Business.Phone</td>

		 <td>vCard.Business.State</td>

		 <td>vCard.Business.StreetAddress</td>

		 </tr>

		 <tr>

		 <td>vCard.Business.URL</td>

		 <td>vCard.Business.Zipcode</td>

		 <td>vCard.Cellular</td>

		 </tr>

		 <tr>

		 <td>vCard.Company</td>

		 <td>vCard.Department</td>

		 <td>vCard.DisplayName</td>

		 </tr>

		 <tr>

		 <td>vCard.Email</td>

		 <td>vCard.FirstName</td>

		 <td>vCard.Gender~~</td>

		 </tr>

		 <tr>

		 <td>vCard.Home.City</td>

		 <td>vCard.Home.Country</td>

		 <td>vCard.Home.Fax</td>

		 </tr>

		 <tr>

		 <td>vCard.Home.Phone</td>

		 <td>vCard.Home.State</td>

		 <td>vCard.Home.StreetAddress</td>

		 </tr>

		 <tr>

		 <td>vCard.Home.Zipcode</td>

		 <td>vCard.Homepage</td>

		 <td>vCard.JobTitle</td>

		 </tr>

		 <tr>

		 <td>vCard.LastName</td>

		 <td>vCard.MiddleName</td>

		 <td>vCard.Notes</td>

		 </tr>

		 <tr>

		 <td>vCard.Office</td>

		 <td>vCard.Pager</td>

		 <td/>

		 </tr>

		 </table>

		 

		 ]]></description>
<param><![CDATA[attributeName One of the standard vCard names listed in Remarks. If one of these names is not used, the request is ignored.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete IE7

		 ]]></playerversion>
<return><![CDATA[Returns a null value if read access for this attribute is not available.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536431%28VS.85%29.aspx MSDN - getAttribute Method

		 

		 ]]></see>
</method>
<method name='setAttribute' fullname='dom.objects:UserProfile/setAttribute' isStatic='false' isFinal='false' isOverride='false'  param_names='attrName;value;caseSensitive' param_types='dom.core.types:DOMString;Number' param_defaults='undefined;undefined;unknown' result_type='void'>
<description><![CDATA[

		 Sets the value of the specified attribute.

		 

		 <p><strong>Note (IE8):</strong>  Internet Explorer 8 and later. IE8 mode enables several enhancements to the setAttribute, getAttribute, and 

		 removeAttribute methods that are not available when pages are displayed in earlier document modes. 

		 

		 <ul>

		 <li>The attrName parameter requires the name of the desired content attribute and not the Document Object Model (DOM) attribute. 

		 For example, in IE8 mode, this method no longer requires attrName to be "className" when setting, getting, or removing a CLASS attribute. 

		 Earlier versions of Internet Explorer and Internet Explorer 8 in compatibility mode still require attrName to specify the corresponding 

		 DOM property name. </li>

		 <li>The attrName parameter is not case sensitive. As a result, the iCaseSensitive parameter is no longer supported and should not be used.</li>

		 <li>The methods support event handlers. For example, the following code example defines an event handler to call a function called SomeFunction 

		 when the body of the page is loaded. 

		 <listing>document.body.setAttribute('onload', 'SomeFunction()');</listing></li>

		 </ul>

		 

		 If the specified attribute is not already present, the setAttribute method adds the attribute to the object and sets the value.

		 </p>

		 

		 <p><strong>Note:</strong> If your pages are displayed in IE5 mode or IE7 mode, be careful when spelling attribute names. If you 

		 set caseSensitive to 1 and the attrName parameter does not have the same uppercase and lowercase letters as the attribute, a new 

		 attribute is created for the object. If two or more attributes have the same name, differing only in case, and caseSensitive is 

		 set to 0, this method assigns values only to the first attribute created with this name. All other attributes of the same name are ignored.</p>

		 

		 <p><strong>Note (IE8):</strong> Internet Explorer 8 and later. When pages are displayed in IE8 mode, the value parameter only supports 

		 string values. Non-string values are not automatically converted to string values. For best results, formally convert values to 

		 strings before using them as parameter values. For example, do not attempt to pass an object directly to the value parameter; 

		 call the object's toString method instead.</p>

		 

		 ]]></description>
<param><![CDATA[attrName The name of the attribute.

		 ]]></param>
<param><![CDATA[value The string, number, or Boolean to assign to the attribute. 

		 ]]></param>
<param><![CDATA[caseSensitive Whether to use a case-sensitive search to locate the attribute. Can be one of the following values: 

		 <ul>

		 <li>1 - The case of attrName is respected. </li>

		 <li>0 - TMatch attrName regardless of case. </li>

		 </ul>

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete IE7

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536431%28VS.85%29.aspx MSDN - getAttribute Method

		 

		 ]]></see>
</method>
<classRec name='Navigator' fullname='dom.objects:Navigator' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\Navigator.as' namespace='dom.objects' access='public' baseclass='Object' interfaces='dom.objects:NavigatorID;dom.objects:NavigatorOnLine;dom.objects:NavigatorAbilities' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Contains information about the application running the script. 

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535867%28VS.85%29.aspx MSDN - navigator Object

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM_Client_Object_Cross-Reference/navigator MDC - navigator

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator MDC - window.navigator

	 

	 ]]></see>
<modified><![CDATA[HTML 5

	 ]]></modified>
</classRec>
<method name='getStorageUpdates' fullname='dom.objects:Navigator/getStorageUpdates' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 The getStorageUpdates()  method, when invoked, must, if the storage mutex is owned by the event loop of the task that resulted in the method 

		 being called, release the storage mutex so that it is once again free. Otherwise, it must do nothing.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-getstorageupdates W3C - HTML5: Navigator.getStorageUpdates()

		 

		 ]]></see>
</method>
<method name='javaEnabled' fullname='dom.objects:Navigator/javaEnabled' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Indicates whether the host browser is Java-enabled or not. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (window.navigator.javaEnabled()) {

		 	// browser has java

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536610%28VS.85%29.aspx MSDN - javaEnabled Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.javaEnabled MDC - window.navigator.javaEnabled()

		 

		 ]]></see>
</method>
<method name='mozIsLocallyAvailable' fullname='dom.objects:Navigator/mozIsLocallyAvailable' isStatic='false' isFinal='false' isOverride='false'  param_names='uri;ifOffline' param_types='dom.core.types:DOMString;Boolean' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Allows code to determine whether or not a given resource is available. 

		 

		 <p><strong>Note:</strong> Security exceptions can occur if the requested URI is not from the same origin.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var available = navigator.mozIsLocallyAvailable("my-image-file.png", true);

		 if (available) {

		 	/~~ the offline resource is present ~~/

		 } else {

		 	alert("Certain needed resources are not available until you connect to the network.");

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[uri URI of the resource whose availability is to be checked, as a string. 

		 ]]></param>
<param><![CDATA[ifOffline Whether or not the offline resources cache should be checked; specify true to consider the offline resources cache. 

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
</method>
<method name='preference' fullname='dom.objects:Navigator/preference' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 Sets a user preference. This method is only available to privileged code, 

		 and you should use XPCOM Preferences API instead. 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator.preference MDC - window.navigator.preference()

		 

		 ]]></see>
</method>
<method name='registerContentHandler' fullname='dom.objects:Navigator/registerContentHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='mimeType;uri;title' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Allows web sites to register themselves as possible handlers for content of a particular MIME type. 

		 

		 <p><strong>Note:</strong> For Firefox 2, only the application/vnd.mozilla.maybe.feed, application/atom+xml, and 

		 application/rss+xml MIME types are supported. All values have the same effect, and the registered 

		 handler will receive feeds in all Atom and RSS versions. </p>

		 

		 <p><strong>Note:</strong> Web sites may only register content handlers for themselves. For security reasons, 

		 it's not possible for an extension or web site to register content handlers targeting other sites.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 navigator.registerContentHandler("application/vnd.mozilla.maybe.feed",

                                 "http://www.example.tld/?foo=%s",

                                 "My Feed Reader");</listing>

		 

		 ]]></example>
<param><![CDATA[mimeType The desired MIME type as a string.

		 ]]></param>
<param><![CDATA[uri The URI to the handler as a string.

		 ]]></param>
<param><![CDATA[title The title of the handler presented to the user as a string.

		 

		 ]]></param>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator.registerContentHandler MDC - window.navigator.registerContentHandler()

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-registercontenthandler W3C - HTML5: Navigator.registerContentHandler()

		 

		 ]]></see>
</method>
<method name='registerProtocolHandler' fullname='dom.objects:Navigator/registerProtocolHandler' isStatic='false' isFinal='false' isOverride='false'  param_names='protocol;uri;title' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Allows web sites to register themselves as possible handlers for particular protocols. 

		 

		 ]]></description>
<example><![CDATA[If your web application is located at http://www.example.com, you can register a protocol handler for it to handle "mailto" like this: 

		 <listing>navigator.registerProtocolHandler("mailto", "http://www.example.com/?uri=%s", "Example Mail");</listing>

		 

		 ]]></example>
<param><![CDATA[protocol The protocol the site wishes to handle, specified as a string. 

		 ]]></param>
<param><![CDATA[uri The URI to the handler as a string. You can include "%s" to indicate where to insert the escaped URI of the document to be handled. 

		 ]]></param>
<param><![CDATA[title The title of the handler presented to the user as a string. 

		 

		 ]]></param>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator.registerProtocolHandler MDC - window.navigator.registerProtocolHandler()

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-registerprotocolhandler W3C - HTML5: Navigator.registerProtocolHandler()

		 

		 ]]></see>
</method>
<method name='taintEnabled' fullname='dom.objects:Navigator/taintEnabled' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 Returns whether data tainting is enabled. JavaScript taint/untaint functions removed in JavaScript 1.2[1].

		 

		 <p><strong>Note (IE):</strong> Microsoft Internet Explorer 5 and earlier does not support data tainting and therefore always returns false.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Obsolete Mozilla

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536778%28VS.85%29.aspx taintEnabled Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator.taintEnabled MDC - window.navigator.taintEnabled()

		 ]]></see>
<see><![CDATA[http://devedge-temp.mozilla.org/library/manuals/2000/javascript/1.3/reference/nav.html#1194117 [1]

		 

		 ]]></see>
</method>
<method name='appCodeName' fullname='dom.objects:Navigator/appCodeName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the internal "code" name of the current browser. 

		 

		 <p><strong>Note:</strong> Mozilla, Netscape 6, and IE5 all use the internal name "Mozilla."</p>

		 

		 ]]></description>
<example><![CDATA[Mozilla

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533077%28VS.85%29.aspx MSDN - appCodeName Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.appCodeName MDC - window.navigator.appCodeName

		 

		 ]]></see>
</method>
<method name='appMinorVersion' fullname='dom.objects:Navigator/appMinorVersion/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves the application's minor version value. 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533077%28VS.85%29.aspx MSDN - appMinorVersion Property

		 

		 ]]></see>
</method>
<method name='appName' fullname='dom.objects:Navigator/appName/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the official name of the browser. 

		 

		 ]]></description>
<example><![CDATA[

		 <listing>

		 dump(window.navigator.appName);

		 // prints "Navigator" to the console for NS6</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533079%28VS.85%29.aspx MSDN - appName Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.appName MDC - window.navigator.appName

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='appVersion' fullname='dom.objects:Navigator/appVersion/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the version of the browser.

		 

		 <p><strong>Note:</strong> The window.navigator.userAgent property also contains the version number 

		 (example: "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape 6/6.1"), but you 

		 should be aware of how easy it is to change the user agent string and "spoof" other browsers, platforms, 

		 or user agents, and also how cavalier the browser vendor themselves are with these properties. 

		 The window.navigator.appVersion and window.navigator.userAgent properties are quite often used in 

		 "browser sniffing" code: scripts that attempt to find out what kind of browser you are using and 

		 adjust pages accordingly.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if ( navigator.appVersion.charAt(0) == "5" ) { 

		 	// browser is putatively a v5 browser

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533080%28VS.85%29.aspx MSDN - appVersion Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.appVersion MDC - window.navigator.appVersion

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='browserLanguage' fullname='dom.objects:Navigator/browserLanguage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves the current browser language. 

		 

		 <p><strong>Note (IE):</strong> This property does not indicate the language or languages set by the user in Language 

		 Preferences, located in the Internet Options dialog box.</p>

		 

		 <p><strong>Note (IE):</strong> In Microsoft Internet Explorer 4.0 and earlier, the browserLanguage property reflects 

		 the language of the installed browser's user interface. For example, if you install a Japanese version of Windows 

		 Internet Explorer on an English operating system, browserLanguage would be ja.</p>

		 

		 <p><strong>Note (IE):</strong> In Internet Explorer 5 and later, however, the browserLanguage property reflects the language 

		 of the operating system regardless of the installed language version of Internet Explorer. However, if Microsoft Windows 

		 2000 MultiLanguage version is installed, the browserLanguage property indicates the language set in the operating system's 

		 current menus and dialogs, as found in the Regional Options of the Control Panel. For example, if you install a 

		 Japanese version of Internet Explorer 5 on an English (United Kingdom) operating system, browserLanguage would be en-gb. 

		 If you install Windows 2000 MultiLanguage version and set the language of the menus and dialogs to French, browserLanguage 

		 would be fr, even though you have a Japanese version of Internet Explorer.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533542%28VS.85%29.aspx MSDN - browserLanguage Property

		 

		 ]]></see>
</method>
<method name='buildID' fullname='dom.objects:Navigator/buildID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the build identifier of the browser. The build ID is in form YYYYMMDDHH.

		 

		 <p><strong>Note:</strong> Available in Firefox 2 (Gecko 1.8.1) and later.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 dump(window.navigator.buildID); 

		 // prints "2006090803" to the console</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.buildID window.navigator.buildID MDC - window.navigator.buildID

		 

		 ]]></see>
</method>
<method name='cookieEnabled' fullname='dom.objects:Navigator/cookieEnabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a boolean indicating whether cookies are enabled in the browser or not. 

		 

		 <p><strong>Note (IE):</strong> CookieEnabled does not check the status of session cookies.</p>

		 

		 <p><strong>Note (Mozilla):</strong> Due to bug 230350, cookieEnabled may return the wrong result in Gecko-based applications. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (!navigator.cookieEnabled) { 

		 	// let the user know that enabling cookies makes the web page much more useful

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533694%28VS.85%29.aspx MSDn - cookieEnabled Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.cookieEnabled MDC - window.navigator.cookieEnabled

		 ]]></see>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=230350 bug 230350

		 

		 ]]></see>
</method>
<method name='cpuClass' fullname='dom.objects:Navigator/cpuClass/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves a string denoting the CPU class. 

		 

		 <table class="innertable">

		 	<tr><th>CPU Class</th><th>CPU Name</th></tr>

		 	<tr>

		 		<td>x86</td><td><code>Intel processor.</code></td>

		 	</tr>

		 	<tr>

		 		<td>68K</td><td>Motorola processor.</td>

		 	</tr>

		 	<tr>

		 		<td>Alpha</td><td>Digital processor.</td>

		 	</tr>

		 	<tr>

		 		<td>PPC</td><td><code>Motorola processor.</code></td>

		 	</tr>

		 	<tr>

		 		<td>Other</td><td>Other CPU classes, including Sun SPARC.</td>

		 	</tr>

		 </table>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533697%28VS.85%29.aspx MSDN - cpuClass Property

		 

		 ]]></see>
</method>
<method name='language' fullname='dom.objects:Navigator/language/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns a string representing the language version of the browser. Examples 

		 of valid language codes include "en", "en-US", "fr", "es-ES", etc. 

		 

		 <p><strong>Note:</strong> This property also shows up as part of the navigator.userAgent string.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if ( window.navigator.language != "en" ) {       

		 	doLangSelect(window.navigator.language); 

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.language MDC - window.navigator.language

		 ]]></see>
<see><![CDATA[#systemLanguage

		 

		 ]]></see>
</method>
<method name='mimeTypes' fullname='dom.objects:Navigator/mimeTypes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:MimeTypeArray'>
<description><![CDATA[

		 Returns a MimeTypeArray object, which contains a list of MimeType objects representing the MIME types recognized by the browser. 

		 

		 <p><strong>Note:</strong> The zeroth element in mimeTypes (the "Mozilla Default Plug-in" MimeType object) has a type property of 

		 instead of a typical MIME format like "image/x-macpaint"</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>alert(window.navigator.mimeTypes.item(0).description); // alerts "Mozilla Default Plug-in"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.mimeTypes MDC - window.navigator.mimeTypes

		 

		 ]]></see>
</method>
<method name='onLine' fullname='dom.objects:Navigator/onLine/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a boolean indicating whether the browser is working online. 

		 

		 <p><strong>Note (IE):</strong>  In Windows Internet Explorer 8 and later, the onLine property returns true if both of the 

		 following conditions are true: 

		 <ul>

		 <li>the system is able to communicate with the network</li>

		 <li>the system is not in global offline mode (Users can modify the global offline state by choosing Work Offline on the File menu.)</li>

		 </ul>

		 If either of these conditions is false, the onLine property returns false.

		 </p>

		 

		 <p><strong>Note (IE):</strong> In Microsoft Internet Explorer 4.0 through Internet Explorer 7, the onLine property indicates whether the 

		 system is in global offline mode. It does not indicate whether the system can communicate with the network.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>alert(navigator.onLine ? "You're online" : "You're offline");</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534307%28VS.85%29.aspx MSDN - onLine Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator.onLine MDC - window.navigator.onLine

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='oscpu' fullname='dom.objects:Navigator/oscpu/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns a string that represents the current operating system. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 function osInfo() { 

		 	alert(window.navigator.oscpu); 

		 }

		 // returns: Windows NT 6.0</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.oscpu MDC - window.navigator.oscpu

		 

		 ]]></see>
</method>
<method name='platform' fullname='dom.objects:Navigator/platform/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns a string representing the platform of the browser.

		 

		 <table class="innertable">

		 	<tr><th>Platform Code</th><th>Platform Name</th></tr>

		 	<tr>

		 		<td>HP-UX</td><td><code>HP UNIX-based computers.</code></td>

		 	</tr>

		 	<tr>

		 		<td>MacPPC</td><td>Macintosh PowerPC-based computers.</td>

		 	</tr>

		 	<tr>

		 		<td>Mac68K</td><td>Macintosh 68K-based computers.</td>

		 	</tr>

		 	<tr>

		 		<td>MacIntel</td><td>Macintosh Intel-based computers.</td>

		 	</tr>

		 	<tr>

		 		<td>Win32</td><td><code>Microsoft Windows 32-bit platform.</code></td>

		 	</tr>

		 	<tr>

		 		<td>Win16</td><td>Windows 16-bit platform.</td>

		 	</tr>

		 	<tr>

		 		<td>WinCE</td><td>Windows CE platform.</td>

		 	</tr>

		 	<tr>

		 		<td>Linux i686</td><td>Linux i686</td>

		 	</tr>

		 	<tr>

		 		<td>Other</td><td>Other</td>

		 	</tr>

		 </table>

		 

		 <p><strong>Note (Mozilla):</strong> Unless your code is privileged (chrome or at least has the UniversalBrowserRead 

		 privilege), it may get the value of the general.platform.override preference instead of the true platform. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534340%28VS.85%29.aspx MSDN - platform Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.platform MDC - window.navigator.platform

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='plugins' fullname='dom.objects:Navigator/plugins/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:PluginArray'>
<description><![CDATA[

		 Returns an PluginArray object, listing the plugins installed in the application. 

		 

		 <strong>IE:</strong> Retrieves a collection of all embed objects within the document.

		 

		 <p><strong>Note (IE):</strong> The collection is an alias for the embeds collection on the document. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script type="text/javascript"&gt;

		 	var L = navigator.plugins.length;

		 	document.write(L.toString().bold() + " Plugin(s)".bold());

		 	document.write("&lt;br&gt;");

		 	document.write("Name | Filename | description".bold());

		 	document.write("&lt;br&gt;");

		 	for(var i=0; i&lt;L; i++) {

		 		document.write(navigator.plugins[i].name);

		 		document.write(" | ");

		 		document.write(navigator.plugins[i].filename);

		 		document.write(" | ");

		 		document.write(navigator.plugins[i].description);

		 		document.write("&lt;br&gt;");

		 	}

		 &lt;/script&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537477%28VS.85%29.aspx MSDN - plugins Collection

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.plugins MDC - window.navigator.plugins

		 

		 ]]></see>
</method>
<method name='product' fullname='dom.objects:Navigator/product/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the product name of the current browser.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script&gt;

		 function prod() { 

		 	dt = document.getElementById("d"); 

		 	dt.innerHTML = window.navigator.product; 

		 }

		 &lt;/script&gt; 

		 &lt;button onclick="prod();"&gt;product&lt;/button&gt; 

		 &lt;div id="d"&gt; &lt;/div&gt; 

		 // returns "Gecko"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.product MDC - window.navigator.product

		 

		 ]]></see>
</method>
<method name='productSub' fullname='dom.objects:Navigator/productSub/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the build number of the current browser.

		 

		 <p><strong>Note:</strong> On IE, this property returns undefined. </p>

		 

		 <p><strong>Note:</strong> On Apple Safari this property always returns 20030107.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script&gt; 

		 function prodsub() {

		 	dt = document.getElementById("d").childNodes[0];

		 	dt.data = window.navigator.productSub;

		 } 

		 &lt;/script&gt; 

		 &lt;button onclick="prodsub();"&gt;productSub&lt;/button&gt;

		 // returns: 20010725</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.productSub MDC - window.navigator.productSub

		 

		 ]]></see>
</method>
<method name='securityPolicy' fullname='dom.objects:Navigator/securityPolicy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns an empty string. In Netscape 4.7x, returns "US &amp; CA domestic policy" or "Export policy". 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.navigator.securityPolicy MDC - window.navigator.securityPolicy

		 

		 ]]></see>
</method>
<method name='systemLanguage' fullname='dom.objects:Navigator/systemLanguage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves the default language used by the operating system. 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534653%28VS.85%29.aspx MSDN - systemLanguage Property

		 ]]></see>
<see><![CDATA[#language

		 

		 ]]></see>
</method>
<method name='userAgent' fullname='dom.objects:Navigator/userAgent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the user agent string for the current browser. 

		 

		 <p><strong>Note:</strong> Browser identification based on detecting the user agent string is 

		 <strong>unreliable</strong> and <strong>is not recommended</strong>, as the user agent string is user configurable.

		 

		 <ul>

		 <li>Mozilla Suite and Firefox can use the preference "general.useragent.override" in about:config. Some Firefox extensions or multi-bar do that. </li>

		 <li>Opera 6+ allows users to set the browser identification string via a menu </li>

		 <li>Microsoft Internet Explorer uses the Windows registry </li>

		 <li>Safari and iCab allow users to change the browser user agent string to predefined Internet Explorer or Netscape strings via a menu. </li>

		 </ul>

		 

		 </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 alert(window.navigator.userAgent);

		 // alerts "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape6/6.1"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534712%28VS.85%29.aspx MSDN - userAgent Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.userAgent MDC - window.navigator.userAgent

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator W3C - HTML 5: NavigatorID

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='userLanguage' fullname='dom.objects:Navigator/userLanguage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves the operating system's natural language setting.

		 

		 <p><strong>Note (IE):</strong> This property reflects the setting in the "Your locale (location)" 

		 box in the Regional Options of Control Panelfor example, "English (United States).</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534713%28VS.85%29.aspx MSDN - userLanguage Property

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533052(VS.85).aspx MSDN - Language Codes

		 

		 ]]></see>
</method>
<method name='userProfile' fullname='dom.objects:Navigator/userProfile/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:UserProfile'>
<description><![CDATA[

		 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.

		 

		 <p><strong>Note (IE):</strong> As of Windows Internet Explorer 7, this object is obsolete and should not be used.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Queue a request for read access to multiple profile attributes.

		 navigator.userProfile.addReadRequest("vcard.displayname");

		 navigator.userProfile.addReadRequest("vcard.gender");

		 

		 // Request access to the information.

		 navigator.userProfile.doReadRequest(usage-code, "Acme Corporation");

		 

		 // Now perform read operations to access the information.

		 name = navigator.userProfile.getAttribute("vcard.displayname");

		 gender = navigator.userProfile.getAttribute("vcard.gender");

		 

		 // The script can now use the 'name' and 'gender' variables

		 // to personalize content or to send information back to the server.

		 

		 // Clear the request queue to prepare for later information requests.

		 navigator.userProfile.clearRequest();</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete IE7

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535915%28VS.85%29.aspx MSDN - userProfile Object

		 

		 ]]></see>
</method>
<method name='vendor' fullname='dom.objects:Navigator/vendor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the vendor name of the current browser.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 window.navigator.vendor 

		 // returns "Netscape6"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.vendor MDC - window.navigator.vendor

		 

		 ]]></see>
</method>
<method name='vendorSub' fullname='dom.objects:Navigator/vendorSub/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the vendor version number.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 window.navigator.vendorSub 

		 // returns "6.1" where the vendor part of userAgent is 

		 // Netscape6/6.1</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/Navigator.vendor MDC - window.navigator.vendorSub

		 

		 ]]></see>
</method>
<classRec name='Selection' fullname='dom.objects:Selection' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\objects\Selection.as' namespace='dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Selection is the class of the object returned by window.getSelection() and other methods. A 

	 selection object represents the ranges that the user has selected.

	 

	 <p><strong>Note (IE):</strong> Internet Explorer uses the document.selection.createRange() to create a TextRange,

	 which is fundamentally different from Mozilla's Selection and W3C's Range objects.</p>

	 

	 ]]></description>
<example><![CDATA[
	 Note the order of the branches: the Mozilla Selection should come first! The reason is that Opera 

	 supports both objects; if you use window.getSelection() to read out the user selection, Opera 

	 creates a Selection object, while if you use document.selection it creates a Text Range object.

	 <listing>

	 var userSelection;

	 if (window.getSelection) {

	 	userSelection = window.getSelection();

	 } else if (document.selection) { // should come last; Opera!

	 	userSelection = document.selection.createRange();

	 }</listing>

	 

	 ]]></example>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://www.quirksmode.org/dom/range_intro.html Quirksmode - Accessing the user selection

	 

	 ]]></see>
</classRec>
<method name='addRange' fullname='dom.objects:Selection/addRange' isStatic='false' isFinal='false' isOverride='false'  param_names='range' param_types='dom.tr.range:Range' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Adds a range to the selection. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Select all STRONG elements in an HTML document

		 var strongs = document.getElementsByTagName("strong");

		 var s = window.getSelection();

		 if(s.rangeCount &gt; 0) s.removeAllRanges();

		 for(var i = 0; i &lt; strongs.length; i++) {

		   var range = document.createRange();

		   range.selectNode(strongs[i]);

		   s.addRange(range);

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[range A range object that will be added to the selection. 

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/addRange MDC - Selection.addRange()

		 

		 ]]></see>
</method>
<method name='collapse' fullname='dom.objects:Selection/collapse' isStatic='false' isFinal='false' isOverride='false'  param_names='parentNode;offset' param_types='dom.core:Node;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Collapses the current selection to a single point. The document is not modified. If the content is 

		 focused and editable, the caret will blink there.

		 

		 ]]></description>
<example><![CDATA[
		 // Place the caret at the beginning of an HTML document's body.

		 var body = document.getElementsByTagName("body")[0];

		 window.getSelection().collapse(body,0);

		 

		 ]]></example>
<param><![CDATA[parentNode The caret location will be within this node. 

		 ]]></param>
<param><![CDATA[offset 

		 <ul>

		 <li>0 - Collapses the selection from the anchor to the beginning of parentNode's text.</li>

		 <li>1 - Collapses the selection from the anchor to the end of parentNode's text.</li></ul>

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/collapse MDC - Selection.collapse()

		 

		 ]]></see>
</method>
<method name='collapseToEnd' fullname='dom.objects:Selection/collapseToEnd' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Moves the anchor of the selection to the same point as the focus.

		 

		 <p>The focus does not move. If the content is focused and editable, the caret will blink there. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/collapseToEnd MDC - Selection.collapseToEnd()

		 

		 ]]></see>
</method>
<method name='collapseToStart' fullname='dom.objects:Selection/collapseToStart' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Moves the focus of the selection to the same point at the anchor.

		 

		 <p>The anchor does not move. If the content is focused and editable, the caret will blink there. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/collapseToStart MDC - Selection.collapseToStart()

		 

		 ]]></see>
</method>
<method name='containsNode' fullname='dom.objects:Selection/containsNode' isStatic='false' isFinal='false' isOverride='false'  param_names='node;partlyContained' param_types='dom.core:Node;Boolean' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Indicates if the node is part of the selection. 

		 

		 ]]></description>
<example><![CDATA[
		 // Check to see if anything inside the body element is selected

		 alert(window.getSelection().containsNode(document.body, true));

		 

		 ]]></example>
<param><![CDATA[node The node that is being looked for whether it is part of the selection 

		 ]]></param>
<param><![CDATA[partlyContained When true, containsNode returns true when a part of the node is part of the selection. 

		 When false, containsNode only returns true when the entire node is part of the selection. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[If the node is part of the selection.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/containsNode MDC - Selection.containsNode()

		 

		 ]]></see>
</method>
<method name='deleteFromDocument' fullname='dom.objects:Selection/deleteFromDocument' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Deletes the actual text being represented by a selection object from the document's DOM. 

		 

		 ]]></description>
<example><![CDATA[
		 A user selects the (imaginary) text "ve two ea" from "Rabbits have two ears." on a web page. 

		 The user then clicks a button that executes the JavaScript snippet 

		 window.getSelection().deleteFromDocument(). The document's text becomes "Rabbits hars." 

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/deleteFromDocument MDC - Selection.deleteFromDocument()

		 

		 ]]></see>
</method>
<method name='extend' fullname='dom.objects:Selection/extend' isStatic='false' isFinal='false' isOverride='false'  param_names='parentNode;offset' param_types='dom.core:Node;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Moves the focus of the selection to a specified point.

		 

		 <p>The anchor of the selection does not move. The selection will be from the anchor 

		 to the new focus regardless of direction.</p>

		  

		 ]]></description>
<param><![CDATA[parentNode The node within which the focus will be moved.

		 ]]></param>
<param><![CDATA[offset The offset position within parentNode where the focus will be moved to.

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/extend MDC - Selection.extend()

		 

		 ]]></see>
</method>
<method name='getRangeAt' fullname='dom.objects:Selection/getRangeAt' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.tr.range:Range'>
<description><![CDATA[

		 Returns a range object representing one of the ranges currently selected.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 ranges = [];

		 sel = window.getSelection();

		 for(var i = 0; i &lt; sel.rangeCount; i++) {

		 	ranges[i] = sel.getRangeAt(i);

		 }

		 // Each item in the ranges array is now 

		 // a range object representing one of the 

		 // ranges in the current selection</listing>

		 

		 ]]></example>
<param><![CDATA[index The zero-based index of the range to return. A negative number or a number greater than or 

		 equal to rangeCount will result in an error.

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The range object that will be returned. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/getRangeAt MDC - Selection.getRangeAt()

		 

		 ]]></see>
</method>
<method name='removeAllRanges' fullname='dom.objects:Selection/removeAllRanges' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Removes all ranges from the selection, leaving the anchorNode and focusNode 

		 properties equal to null and leaving nothing selected. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/removeAllRanges MDC - Selection.removeAllRanges()

		 

		 ]]></see>
</method>
<method name='removeRange' fullname='dom.objects:Selection/removeRange' isStatic='false' isFinal='false' isOverride='false'  param_names='range' param_types='dom.tr.range:Range' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Removes a range from the selection. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Programmaticaly, more than one range can be selected.  

		 // This will remove all ranges except the first.

		 s = window.getSelection();

		 if(s.rangeCount &gt; 1) {

		   for(var i = 1; i &lt; s.rangeCount; i++) {

		     s.removeRange(s.getRangeAt(i));

		   }

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[range A range object that will be removed to the selection. 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/removeRange MDC - Selection.removeRange()

		 

		 ]]></see>
</method>
<method name='selectAllChildren' fullname='dom.objects:Selection/selectAllChildren' isStatic='false' isFinal='false' isOverride='false'  param_names='parentNode' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Adds all the children of the specified node to the selection. Previous selection is lost. 

		 

		 ]]></description>
<example><![CDATA[
		 footer = document.getElementById("footer");

		 window.getSelection().selectAllChildren(footer);

		 // Everything inside the footer is now selected

		 

		 ]]></example>
<param><![CDATA[parentNode All children of parentNode will be selected. parentNode itself is not 

		 part of the selection. 

		 

		 ]]></param>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/selectAllChildren MDC - Selection.selectAllChildren()

		 

		 ]]></see>
</method>
<method name='selectionLanguageChange' fullname='dom.objects:Selection/selectionLanguageChange' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/selectionLanguageChange MDC - Selection.selectionLanguageChange()

		 

		 ]]></see>
</method>
<method name='toString' fullname='dom.objects:Selection/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns a string currently being represented by the selection object, i.e. the currently selected text. 

		 

		 <p><strong>Note:</strong> In JavaScript, this method is called automatically when a function the selection object is passed 

		 to requires a string: alert(window.getSelection()) // What is called alert(window.getSelection().toString()) 

		 // What is actually being effectively called.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The string representation of selection. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/toString MDC - Selection.toString()

		 

		 ]]></see>
</method>
<method name='anchorNode' fullname='dom.objects:Selection/anchorNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the node in which the selection begins. 

		 

		 <p><strong>Note:</strong> A user may make a selection from left to right (in document order) or right to left (reverse of 

		 document order). The anchor is where the user began the selection. This can be visualized by holding the 

		 Shift key and pressing the arrow keys on your keyboard. The selection's anchor does not move, but the 

		 selection's focus, the other end of the selection, does move.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/anchorNode MDC - Selection.anchorNode

		 

		 ]]></see>
</method>
<method name='anchorOffset' fullname='dom.objects:Selection/anchorOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the number of characters that the selection's anchor is offset within the anchorNode. 

		 

		 <p><strong>Note:</strong> This number is zero-based. If the selection begins with the first character in the anchorNode, 

		 0 is returned.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/anchorOffset MDC - Selection.anchorOffset

		 

		 ]]></see>
</method>
<method name='focusNode' fullname='dom.objects:Selection/focusNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the node in which the selection ends. 

		 

		 <p><strong>Note:</strong> A user may make a selection from left to right (in document order) or right to left (reverse of 

		 document order). The focus is where the user ended the selection. This can be visualized by holding the 

		 Shift key and pressing the arrow keys on your keyboard to modify the current selection. The selection's 

		 focus moves, but the selection's anchor, the other end of the selection, does not move. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/focusNode MDC - Selection.focusNode

		 

		 ]]></see>
</method>
<method name='focusOffset' fullname='dom.objects:Selection/focusOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the number of characters that the selection's focus is offset within the focusNode. 

		 

		 <p><strong>Note:</strong> This number is zero-based. If the selection ends with the first character in the focusNode, 

		 0 is returned. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/focusOffset MDC - Selection.focusOffset

		 

		 ]]></see>
</method>
<method name='isCollapsed' fullname='dom.objects:Selection/isCollapsed/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a boolean indicating whether the selection's start and end points are at the same position. 

		 

		 <p><strong>Note:</strong> Even a collapsed selection may have a rangeCount greater than 0. sel.getRangeAt(0) may return 

		 a range that is also collapsed. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/isCollapsed MDC - Selection.isCollapsed

		 

		 ]]></see>
</method>
<method name='rangeCount' fullname='dom.objects:Selection/rangeCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the number of ranges in the selection. 

		 

		 <p><strong>Note:</strong> Before the user has clicked a freshly loaded page, the rangeCount is 0. A user can normally 

		 only select one range at a time, so the rangeCount will usually be 1. Scripting can be use to make 

		 the selection contain more than 1 range. </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Selection/rangeCount MDC - Selection.rangeCount

		 

		 ]]></see>
</method>
<classRec name='Counter' fullname='dom.style.css:Counter' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\Counter.as' namespace='dom.style.css' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Counter interface is used to represent any counter or counters function value. This interface reflects the values in 

	 the underlying style property.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter W3C - DOM Level 2 Style: Counter

	 

	 ]]></see>
</classRec>
<method name='identifier' fullname='dom.style.css:Counter/identifier/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute is used for the identifier of the counter.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-identifier W3C - DOM Level 2 Style: Counter.identifier

		 

		 ]]></see>
</method>
<method name='listStyle' fullname='dom.style.css:Counter/listStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute is used for the style of the list.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-listStyle W3C - DOM Level 2 Style: Counter.listStyle

		 

		 ]]></see>
</method>
<method name='separator' fullname='dom.style.css:Counter/separator/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute is used for the separator of the nested counters.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-separator W3C - DOM Level 2 Style: Counter.separator

		 

		 ]]></see>
</method>
<classRec name='CSSRule' fullname='dom.style.css:CSSRule' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSRule.as' namespace='dom.style.css' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSRule interface is the abstract base interface for any type of CSS statement. 

	 

	 <p>This includes both rule sets and at-rules. An implementation is expected to preserve 

	 all rules specified in a CSS style sheet, even if the rule is not recognized by the 

	 parser. Unrecognized rules are represented using the CSSUnknownRule interface.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSRule MDC - CSSRule

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule W3C - DOM Level 2 Style: CSSRule

	 

	 ]]></see>
</classRec>
<method name='cssText' fullname='dom.style.css:CSSRule/cssText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The parsable textual representation of the rule. This reflects the current state of the 

		 rule and not its initial value.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if ( myRule.cssText.indexOf("background-color") != -1 ) {

		 	bgRule = myRule;

		 } </listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule.cssText MDC - cssRule.cssText

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-cssText W3C - DOM Level 2 Style: CSSRule.cssText

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified CSS string 

		 value has a syntax error and is unparsable.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_MODIFICATION_ERR: Raised if the specified CSS string 

		 value represents a different type of rule than the current one.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted 

		 at this point in the style sheet.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if the rule is readonly.

		 

		 ]]></throws>
</method>
<method name='parentRule' fullname='dom.style.css:CSSRule/parentRule/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSRule'>
<description><![CDATA[

		 If this rule is contained inside another rule (e.g. a style rule inside an &#64;media block), 

		 this is the containing rule. If this rule is not nested inside any other rules, this returns null.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule.parentRule MDC - cssRule.parentRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-parentRule W3C - DOM Level 2 Style: CSSRule.parentRule

		 

		 ]]></see>
</method>
<method name='parentStyleSheet' fullname='dom.style.css:CSSRule/parentStyleSheet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSStyleSheet'>
<description><![CDATA[

		 The style sheet that contains this rule.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if ( bgRule.parentStyleSheet != mySheet ) {

		 	// alien style rule!

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule.parentStyleSheet MDC - cssRule.parentStyleSheet

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-sheet W3C - DOM Level 2 Style: CSSRule.parentStyleSheet

		 

		 ]]></see>
</method>
<method name='type' fullname='dom.style.css:CSSRule/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The type of the rule, as defined above. 

		 

		 <p>The expectation is that binding-specific casting 

		 methods can be used to cast down from an instance of the CSSRule interface to the 

		 specific derived interface implied by the type.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule.type MDC - cssRule.type

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-type W3C - DOM Level 2 Style: CSSRule.type

		 

		 ]]></see>
</method>
<field name='CHARSET_RULE' fullname='dom.style.css:CSSRule/CHARSET_RULE' type='Number' isStatic='false' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The rule is a CSSCharsetRule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule W3C - DOM Level 2 Style: CSSRule

		 ]]></see>
<see><![CDATA[dom.style.css.CSSCharsetRule

		 

		 ]]></see>
</field>
<field name='FONT_FACE_RULE' fullname='dom.style.css:CSSRule/FONT_FACE_RULE' type='Number' isStatic='false' isConst='true' defaultValue='5' >
<description><![CDATA[

		 The rule is a CSSFontFaceRule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule W3C - DOM Level 2 Style: CSSRule

		 ]]></see>
<see><![CDATA[dom.style.css.CSSFontFaceRule

		 

		 ]]></see>
</field>
<field name='IMPORT_RULE' fullname='dom.style.css:CSSRule/IMPORT_RULE' type='Number' isStatic='false' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The rule is a CSSImportRule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule W3C - DOM Level 2 Style: CSSRule

		 ]]></see>
<see><![CDATA[dom.style.css.CSSImportRule

		 

		 ]]></see>
</field>
<field name='MEDIA_RULE' fullname='dom.style.css:CSSRule/MEDIA_RULE' type='Number' isStatic='false' isConst='true' defaultValue='4' >
<description><![CDATA[

		 The rule is a CSSMediaRule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule W3C - DOM Level 2 Style: CSSRule

		 ]]></see>
<see><![CDATA[dom.style.css.CSSMediaRule

		 

		 ]]></see>
</field>
<field name='PAGE_RULE' fullname='dom.style.css:CSSRule/PAGE_RULE' type='Number' isStatic='false' isConst='true' defaultValue='6' >
<description><![CDATA[

		 The rule is a CSSPageRule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule W3C - DOM Level 2 Style: CSSRule

		 ]]></see>
<see><![CDATA[dom.style.css.CSSPageRule

		 

		 ]]></see>
</field>
<field name='STYLE_RULE' fullname='dom.style.css:CSSRule/STYLE_RULE' type='Number' isStatic='false' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The rule is a CSSStyleRule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule W3C - DOM Level 2 Style: CSSRule

		 ]]></see>
<see><![CDATA[dom.style.css.CSSStyleRule

		 

		 ]]></see>
</field>
<field name='UNKNOWN_RULE' fullname='dom.style.css:CSSRule/UNKNOWN_RULE' type='Number' isStatic='false' isConst='true' defaultValue='0' >
<description><![CDATA[

		 The rule is a CSSUnknownRule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule W3C - DOM Level 2 Style: CSSRule

		 ]]></see>
<see><![CDATA[dom.style.css.CSSUnknownRule

		 

		 ]]></see>
</field>
<classRec name='CSSRuleList' fullname='dom.style.css:CSSRuleList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSRuleList.as' namespace='dom.style.css' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules.

	 

	 <p>The items in the CSSRuleList are accessible via an integral index, starting from 0.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/dd347050%28VS.85%29.aspx MSDN - CSSRuleList

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList W3C - DOM Level 2 Style: CSSRuleList

	 

	 ]]></see>
</classRec>
<method name='item' fullname='dom.style.css:CSSRuleList/item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.style.css:CSSRule'>
<description><![CDATA[

		 Used to retrieve a CSS rule by ordinal index. 

		 

		 <p>The order in this collection represents the order of the 

		 rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, 

		 this returns null.</p>

		 

		 ]]></description>
<param><![CDATA[index Index into the collection

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The style rule at the index position in the CSSRuleList, or null if that is not a valid index.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc304123%28VS.85%29.aspx MSDN - item Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList-item W3C - DOM Level 2 Style: CSSRuleList.item()

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.style.css:CSSRuleList/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of CSSRules in the list. The range of valid child rule indices is 0 to length-1 inclusive.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc304101%28VS.85%29.aspx MSDN - length Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList-length W3C - DOM Level 2 Style: CSSRuleList.length

		 

		 ]]></see>
</method>
<classRec name='CSSImportRule' fullname='dom.style.css:CSSImportRule' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSImportRule.as' namespace='dom.style.css' access='public' baseclass='dom.style.css:CSSRule' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSImportRule interface represents a &#64;import rule within a CSS style sheet. The &#64;import 

	 rule is used to import style rules from other style sheets.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530768%28VS.85%29.aspx MSDN - &#64;import Rule

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule MDC - cssRule: CSSImportRule

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule W3C - DOM Level 2 Style: CSSImportRule

	 

	 ]]></see>
</classRec>
<method name='href' fullname='dom.style.css:CSSImportRule/href/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The location of the style sheet to be imported. The attribute will not contain the "url(...)" 

		 specifier around the URI.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule MDC - cssRule: CSSImportRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-href W3C - DOM Level 2 Style: CSSImportRule.href

		 

		 ]]></see>
</method>
<method name='media' fullname='dom.style.css:CSSImportRule/media/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.stylesheets:MediaList'>
<description><![CDATA[

		 A list of media types for which this style sheet may be used.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule MDC - cssRule: CSSImportRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-media W3C - DOM Level 2 Style: CSSImportRule.media

		 

		 ]]></see>
</method>
<method name='styleSheet' fullname='dom.style.css:CSSImportRule/styleSheet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSStyleSheet'>
<description><![CDATA[

		 The style sheet referred to by this rule, if it has been loaded. The value of this attribute is 

		 null if the style sheet has not yet been loaded or if it will not be loaded.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule MDC - cssRule: CSSImportRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-styleSheet W3C - DOM Level 2 Style: CSSImportRule.styleSheet

		 

		 ]]></see>
</method>
<classRec name='CSSMediaRule' fullname='dom.style.css:CSSMediaRule' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSMediaRule.as' namespace='dom.style.css' access='public' baseclass='dom.style.css:CSSRule' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSMediaRule interface represents a &#64;media rule in a CSS style sheet. A &#64;media 

	 rule can be used to delimit style rules for specific media types.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530813%28VS.85%29.aspx MSDN - &#64;media Rule

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule MDC - cssRule: CSSMediaRule

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule W3C - DOM Level 2 Style: CSSMediaRule

	 

	 ]]></see>
</classRec>
<method name='deleteRule' fullname='dom.style.css:CSSMediaRule/deleteRule' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Used to delete a rule from the media block. 

		 

		 ]]></description>
<param><![CDATA[index The index within the media block's rule collection of the rule to remove.

		 

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule MDC - cssRule: CSSMediaRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-deleteRule W3C - DOM Level 2 Style: CSSMediaRule.deleteRule()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index does not correspond 

		 to a rule in the media rule list.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is readonly.

		 

		 ]]></throws>
</method>
<method name='insertRule' fullname='dom.style.css:CSSMediaRule/insertRule' isStatic='false' isFinal='false' isOverride='false'  param_names='rule;index' param_types='dom.core.types:DOMString;Number' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Used to insert a new rule into the media block.

		 

		 ]]></description>
<param><![CDATA[rule The parsable text representing the rule. For rule sets this contains both 

		 the selector and the style declaration. For at-rules, this specifies both the at-identifier 

		 and the rule content.

		 ]]></param>
<param><![CDATA[index The index within the media block's rule collection of the rule before which 

		 to insert the specified rule. If the specified index is equal to the length of the media 

		 blocks's rule collection, the rule will be added to the end of the media block.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The index within the media block's rule collection of the newly inserted rule.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule MDC - cssRule: CSSMediaRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-insertRule W3C - DOM Level 2 Style: CSSMediaRule.insertRule()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the specified 

		 index, e.g., if an &#64;import rule is inserted after a standard rule set or other at-rule.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index is not a valid insertion point.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable.

		 

		 ]]></throws>
</method>
<method name='cssRules' fullname='dom.style.css:CSSMediaRule/cssRules/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSRuleList'>
<description><![CDATA[

		 A list of all CSS rules contained within the media block.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule MDC - cssRule: CSSMediaRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-cssRules W3C - DOM Level 2 Style: CSSMediaRule.cssRules

		 

		 ]]></see>
</method>
<method name='media' fullname='dom.style.css:CSSMediaRule/media/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.stylesheets:MediaList'>
<description><![CDATA[

		 A list of media types for this rule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule MDC - cssRule: CSSMediaRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-mediaTypes W3C - DOM Level 2 Style: CSSMediaRule.media

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/media.html#media-types W3C - Recognized media types

		 

		 ]]></see>
</method>
<classRec name='CSSCharsetRule' fullname='dom.style.css:CSSCharsetRule' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSCharsetRule.as' namespace='dom.style.css' access='public' baseclass='dom.style.css:CSSRule' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSCharsetRule interface represents a &#64;charset rule in a CSS style sheet.

	 

	 <p>The value of the 

	 encoding attribute does not affect the encoding of text data in the DOM objects; this encoding 

	 is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value 

	 found in the &#64;charset rule. If there was no &#64;charset in the original document, then no 

	 CSSCharsetRule is created. The value of the encoding attribute may also be used as a hint for 

	 the encoding used on serialization of the style sheet.</p>

	 

	 <p>The value of the &#64;charset rule (and therefore of the CSSCharsetRule) may not correspond to the 

	 encoding the document actually came in; character encoding information e.g. in an HTTP header, 

	 has priority but this is not reflected in the CSSCharsetRule.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530746%28VS.85%29.aspx MSDN - &#64;charset Rule

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSCharsetRule MDC - cssRule: CSSCharsetRule

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSCharsetRule W3C - DOM Level 2 Style: CSSCharsetRule

	 

	 ]]></see>
</classRec>
<method name='encoding' fullname='dom.style.css:CSSCharsetRule/encoding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The encoding information used in this &#64;charset rule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSCharsetRule MDC - cssRule: CSSCharsetRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSCharsetRule-encoding W3C - DOM Level 2 Style: CSSCharsetRule.encoding

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified CSS string 

		 value has a syntax error and is unparsable.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this 

		 declaration is readonly or a property is readonly.

		 

		 ]]></throws>
</method>
<classRec name='CSSValue' fullname='dom.style.css:CSSValue' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSValue.as' namespace='dom.style.css' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSValue interface represents a simple or a complex value. A CSSValue 

	 object only occurs in a context of a CSS property.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue W3C - DOM Level 2 Style: CSSValue

	 

	 ]]></see>
</classRec>
<method name='cssText' fullname='dom.style.css:CSSValue/cssText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A string representation of the current value.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-cssText W3C - DOM Level 2 Style: CSSValue.cssText

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified CSS string 

		 value has a syntax error and is unparsable.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_MODIFICATION_ERR: Raised if the 

		 specified CSS string value represents a different type of values than the 

		 values allowed by the CSS property.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this 

		 declaration is readonly or a property is readonly.

		 

		 ]]></throws>
</method>
<method name='cssValueType' fullname='dom.style.css:CSSValue/cssValueType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 A code defining the type of the value as defined above.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-cssValueType W3C - DOM Level 2 Style: CSSValue.cssValueType

		 

		 ]]></see>
</method>
<field name='CSS_CUSTOM' fullname='dom.style.css:CSSValue/CSS_CUSTOM' type='Number' isStatic='false' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The value is a custom value.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue W3C - DOM Level 2 Style: CSSValue

		 

		 ]]></see>
</field>
<field name='CSS_INHERIT' fullname='dom.style.css:CSSValue/CSS_INHERIT' type='Number' isStatic='false' isConst='true' defaultValue='0' >
<description><![CDATA[

		 The value is inherited and the cssText contains "inherit".

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue W3C - DOM Level 2 Style: CSSValue

		 

		 ]]></see>
</field>
<field name='CSS_PRIMITIVE_VALUE' fullname='dom.style.css:CSSValue/CSS_PRIMITIVE_VALUE' type='Number' isStatic='false' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The value is a primitive value and an instance of the CSSPrimitiveValue 

		 interface can be obtained by using binding-specific casting methods on 

		 this instance of the CSSValue interface.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue W3C - DOM Level 2 Style: CSSValue

		 ]]></see>
<see><![CDATA[dom.style.css.CSSPrimitiveValue

		 

		 ]]></see>
</field>
<field name='CSS_VALUE_LIST' fullname='dom.style.css:CSSValue/CSS_VALUE_LIST' type='Number' isStatic='false' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The value is a CSSValue list and an instance of the CSSValueList interface 

		 can be obtained by using binding-specific casting methods on this instance 

		 of the CSSValue interface.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue W3C - DOM Level 2 Style: CSSValue

		 ]]></see>
<see><![CDATA[dom.style.css.CSSValueList

		 

		 ]]></see>
</field>
<classRec name='CSSUnknownRule' fullname='dom.style.css:CSSUnknownRule' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSUnknownRule.as' namespace='dom.style.css' access='public' baseclass='dom.style.css:CSSRule' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSUnknownRule interface represents an at-rule not supported by this user agent.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSUnknownRule MDC - cssRule: CSSUnknownRule

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSUnknownRule W3C - DOM Level 2 Style: CSSUnknownRule

	 

	 ]]></see>
</classRec>
<interfaceRec name='CSS2Properties' fullname='dom.style.css:CSS2Properties' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSS2Properties.as' namespace='dom.style.css' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 INCOMPLETE

	 

	 The CSS2Properties interface represents a convenience mechanism for retrieving and setting properties within a 

	 CSSStyleDeclaration. 

	 

	 <p>The attributes of this interface correspond to all the properties specified in CSS2. 

	 Getting an attribute of this interface is equivalent to calling the getPropertyValue method of the 

	 CSSStyleDeclaration interface. Setting an attribute of this interface is equivalent to calling the 

	 setProperty method of the CSSStyleDeclaration interface.</p>

	 

	 <p><strong>Note:</strong> When the margin property is set, for example, the marginTop, marginRight, marginBottom and marginLeft 

	 properties are actually being set.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[CSS 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/CSS MDC - DOM CSS Properties

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/CSS_Reference MDC - CSS Reference

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties W3C - DOM Level 2 Style: CSS2Properties

	 

	 ]]></see>
</interfaceRec>
<method name='azimuth' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:azimuth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 In combination with elevation, azimuth enables different audio sources to be positioned spatially for aural presentation. 

		 

		 <p>This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate 

		 at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and 

		 multi-speaker setups allow for a fully three-dimensional stage.</p>

		 

		 <listing>azimuth: angle | [[ left-side | far-left | left | center-left | center | center-right | 

		 right | far-right | right-side ] || behind ] | leftwards | rightwards | inherit</listing>

		 

		 <strong>angle</strong>

		 <p>Audible source position is described as an angle within the range <code>-360deg</code> to <code>360deg</code>. 

		 The value <code>0deg</code> means directly ahead in the center of the sound stage (this is the default value). 

		 <code>90deg</code> is to the right, <code>180deg</code> is behind, and <code>270deg</code> or <code>-90deg</code> is to the left.</p>

		 

		 <strong>Positional keywords</strong>

		 <p>

		 <ul><li> <b>left-side</b>: Same as <code>270deg</code>.

		 </li><li> <b>left-side behind</b>: Same as <code>270deg</code>.

		 </li><li> <b>far-left</b>: Same as <code>300deg</code>.

		 

		 </li><li> <b>far-left behind</b>: Same as <code>240deg</code>.

		 </li><li> <b>left</b>: Same as <code>320deg</code>.

		 </li><li> <b>left behind</b>: Same as <code>220deg</code>.

		 </li><li> <b>center-left</b>: Same as <code>340deg</code>.

		 

		 </li><li> <b>center-left behind</b>: Same as <code>200deg</code>.

		 </li><li> <b>center</b>: Same as <code>0deg</code>.

		 </li><li> <b>center behind</b>: Same as <code>180deg</code>.

		 </li><li> <b>center-right</b>: Same as <code>20deg</code>.

		 

		 </li><li> <b>center-right behind</b>: Same as <code>160deg</code>.

		 </li><li> <b>right</b>: Same as <code>40deg</code>.

		 </li><li> <b>right behind</b>: Same as <code>140deg</code>.

		 </li><li> <b>far-right</b>: Same as <code>60deg</code>.

		 

		 </li><li> <b>far-right behind</b>: Same as <code>120deg</code>.

		 </li><li> <b>right-side</b>: Same as <code>90deg</code>.

		 </li><li> <b>right-side behind</b>: Same as <code>90deg</code>.

		 </li><li> <b>behind</b>: Same as <code>180deg</code>. Also used as a modifier for other positional keyword values, as above.

		 

		 </li><li> <b>leftwards</b>: Moves the sound counter-clockwise by 20 degrees, relative to the current angle.

		 </li><li> <b>rightwards</b>: Moves the sound clockwise by 20 degrees, relative to the current angle.

		 </li></ul>

		 </p>

		 

		 ]]></description>
<default><![CDATA[center

		 

		 ]]></default>
<example><![CDATA[
		 <listing>

		 h1   { azimuth: 30deg }

		 td.a { azimuth: far-right }          /~~  60deg ~~/

		 #12  { azimuth: behind far-right }   /~~ 120deg ~~/

		 p.comment { azimuth: behind }        /~~ 180deg ~~/</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/CSS/azimuth MDC - CSS: azimuth

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-azimuth W3C - DOM Level 2 Style: CSS2Properties.azimuth

		 ]]></see>
<see><![CDATA[#elevation

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='background' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:background/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The background property is a shorthand property for setting the individual background property values in a 

		 single place in the style sheet. background can be used to set the values for one or more of: background-attachment, 

		 background-color, background-image, background-position, background-repeat.

		 

		 <listing>background: [ &lt;background-color&gt; || &lt;background-image&gt; || &lt;background-repeat&gt; 

		 || &lt;background-attachment&gt; || &lt;background-position&gt; ] | inherit;</listing>

		 

		 <p><strong>Note:</strong> Given a valid declaration, the background property first sets the individual background 

		 properties to their initial values, then assigns the explicit values specified in the declaration. You do not have 

		 to define a value for each of the individual properties, only those you want to change from their initial defaults. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 body { 

		 	background: red;

		 }

		 

		 .topbanner {

		 	background: url("topbanner.png") #00D repeat fixed;

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/CSS/background MDC - CSS: background

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-background W3C - DOM Level 2 Style: CSS2Properties.background

		 ]]></see>
<see><![CDATA[#backgroundAttachment

		 ]]></see>
<see><![CDATA[#backgroundColor

		 ]]></see>
<see><![CDATA[#backgroundImage

		 ]]></see>
<see><![CDATA[#backgroundPosition

		 ]]></see>
<see><![CDATA[#backgroundRepeat

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='backgroundAttachment' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:backgroundAttachment/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 If a background-image is specified, background-attachment determines whether that image's position is 

		 fixed within the viewport, or scrolls along with its containing block.

		 

		 <listing>background-attachment:  scroll | fixed | inherit</listing>

		 

		 <strong>scroll</strong>

		 <p>If scroll is specified, the background image will scroll within the viewport along with the block the image is contained within. </p>

		 

		 <strong>inherit</strong>

		 <p>If fixed is specified, the background image will not scroll with its containing element, instead remaining stationary within the viewport.</p>

		 

		 ]]></description>
<default><![CDATA[scroll

		 

		 ]]></default>
<example><![CDATA[
		 <listing>

		 body {

		 	background-image: url("images/cartooncat.png");

		 	background-attachment: fixed;

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/CSS/background-attachment MDC - CSS: background-attachment

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundAttachment W3C - DOM Level 2 Style: CSS2Properties.backgroundAttachment

		 ]]></see>
<see><![CDATA[#background

		 ]]></see>
<see><![CDATA[#backgroundColor

		 ]]></see>
<see><![CDATA[#backgroundImage

		 ]]></see>
<see><![CDATA[#backgroundPosition

		 ]]></see>
<see><![CDATA[#backgroundRepeat

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='backgroundColor' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:backgroundColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 background-color sets the background color of an element, either through a color value or the keyword transparent. 

		 

		 <listing>background-color: color | transparent | inherit</listing>

		 

		 <strong>color</strong>

		 <p>The color can be specified as a hexidecimal RGB value, a regular RGB value, or by using one of the pre-defined color keywords.</p>

		 

		 <strong>transparent</strong>

		 <p>The default value for background-color is transparent meaning the element has no color of its own, instead showing the color of the element behind it.</p>

		 

		 ]]></description>
<default><![CDATA[transparent

		 

		 ]]></default>
<example><![CDATA[
		 <listing>

		 .exampleone {

		 	background-color: teal;

		 	color: white;

		 }

		 

		 .exampletwo {

		 	background-color: rgb(153,102,153);

		 	color: rgb(255,255,204);

		 }

		 

		 .examplethree {

		 	background-color: #666699;

		 	color: #FFFFFF;

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/CSS/background-color MDC - CSS: background-color

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundColor W3C - DOM Level 2 Style: CSS2Properties.backgroundColor

		 ]]></see>
<see><![CDATA[#background

		 ]]></see>
<see><![CDATA[#backgroundAttachment

		 ]]></see>
<see><![CDATA[#backgroundImage

		 ]]></see>
<see><![CDATA[#backgroundPosition

		 ]]></see>
<see><![CDATA[#backgroundRepeat

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='backgroundImage' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:backgroundImage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The background-image property sets the background image for an element.

		 

		 <listing>background-image: uri | none | inherit</listing>

		 

		 <p><strong>Note:</strong> Developers should ensure that they specify a background-color to be used if an image is not available. Background images are rendered on top of the background color.</p>

		 

		 <strong>uri</strong>

		 <p>The location of the image resource to be used as a background image.</p>

		 

		 <strong>none</strong>

		 <p>Used to specify that an element is to have no background image.</p>

		 

		 ]]></description>
<default><![CDATA[none

		 

		 ]]></default>
<example><![CDATA[
		 <listing>

		 body { background-image: url("images/darkpattern.png"); }

		 

		 p { background-image: none; }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/CSS/background-image MDC - CSS: background-image

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundImage W3C - DOM Level 2 Style: CSS2Properties.backgroundImage

		 ]]></see>
<see><![CDATA[#background

		 ]]></see>
<see><![CDATA[#backgroundAttachment

		 ]]></see>
<see><![CDATA[#backgroundColor

		 ]]></see>
<see><![CDATA[#backgroundPosition

		 ]]></see>
<see><![CDATA[#backgroundRepeat

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='backgroundPosition' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:backgroundPosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 background-position sets the initial position of any background image that has been set. 

		 

		 <listing>background-position: [ &lt;percentage&gt; | &lt;length&gt; | left | center | right  ] 

		 [ &lt;percentage&gt; | &lt;length&gt; | top  | center | bottom ] ? ;</listing>

		 

		 <listing>background-position: [ top | center | bottom ];</listing>

		 

		 <listing>background-position: inherit;</listing>

		 

		 <strong>&lt;percentage&gt;</strong>

		 <p>With a value pair of '0% 0%', the upper left corner of the image is aligned with the upper left corner of the box's padding edge. A value pair of '100% 100%' places the lower right corner of the image in the lower right corner of padding area. With a value pair of '14% 84%', the point 14% across and 84% down the image is to be placed at the point 14% across and 84% down the padding area.</p>

		 

		 <strong>&lt;length&gt;</strong>

		 <p>With a value pair of '2cm 1cm', the upper left corner of the image is placed 2cm to the right and 1cm below the upper left corner of the padding area.</p>

		 

		 <strong>top left and left top</strong>

		 <p> Same as '0% 0%'. </p>

		 

		 <strong>top, top center, and center top</strong>

		 <p> Same as '50% 0%'. </p>

		 

		 <strong>right top and top right</strong>

		 <p>Same as '100% 0%'. </p>

		 

		 <strong>left, left center, and center left</strong>

		 <p>Same as '0% 50%'. </p>

		 

		 <strong>center and center center</strong>

		 <p>Same as '50% 50%'. </p>

		 

		 <strong>right, right center, and center right</strong>

		 <p>Same as '100% 50%'. </p>

		 

		 <strong>bottom left and left bottom</strong>

		 <p>Same as '0% 100%'. </p>

		 

		 <strong>bottom, bottom center, and center bottom</strong>

		 <p>Same as '50% 100%'. </p>

		 

		 <strong>bottom right and right bottom</strong>

		 <p>Same as '100% 100%'. </p>

		 

		 <p>If only one value is specified, then it sets the horizontal position, with the vertical position at 50%. Otherwise, 

		 the first value specifies the horizontal position. Combinations are allowed of keyword, length, or percentage values, 

		 but if keywords are mixed with other values, 'left' and 'right' may only be used as the first value, and 'top' and 

		 'bottom' may only be used as the second value. Negative positions are allowed.</p>

		 

		 ]]></description>
<default><![CDATA[0% 0%

		 

		 ]]></default>
<example><![CDATA[
		 <listing>

		 .exampleone {

		 	background-image: url("logo.png");

		 	background-position: top center;

		 }

		 

		 .exampletwo {

		 	background-image: url("logo.png");

		 	background-position: 25% 75%;

		 }

		 

		 .examplethree {

		 	background-image: url("logo.png");

		 	background-position: 2cm bottom;

		 }

		 

		 .examplefour {

		 	background-image: url("logo.png");

		 	background-position: center 10%;

		 }

		 

		 .examplefive {

		 	background-image: url("logo.png");

		 	background-position: 2cm 50%;

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/CSS/background-position MDC - CSS: background-position

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundPosition W3C - DOM Level 2 Style: CSS2Properties.backgroundPosition

		 ]]></see>
<see><![CDATA[#background

		 ]]></see>
<see><![CDATA[#backgroundAttachment

		 ]]></see>
<see><![CDATA[#backgroundColor

		 ]]></see>
<see><![CDATA[#backgroundImage

		 ]]></see>
<see><![CDATA[#backgroundRepeat

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='backgroundRepeat' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:backgroundRepeat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 background-repeat specifies whether the image is repeated (tiled), and how. 

		 

		 <listing>background-repeat: repeat | repeat-x | repeat-y | no-repeat | inherit</listing>

		 

		 <strong> repeat</strong>

		 <p> The image is repeated both horizontally and vertically.</p>

		 

		 <strong> repeat-x</strong>

		 <p> The image is repeated horizontally only.</p>

		 

		 <strong> repeat-y</strong>

		 <p> The image is repeated vertically only.</p>

		 

		 <strong> no-repeat</strong>

		 <p> The image is not repeated: only one copy of the image is drawn.</p>

		 

		 ]]></description>
<default><![CDATA[repeat

		 

		 ]]></default>
<example><![CDATA[
		 <listing>

		 .exampleone {

		 	background-image: url("logo.png");

		 	background-repeat: repeat-x;

		 }

		 

		 .exampletwo {

		 	background-image: url("logo.png");

		 	background-repeat: no-repeat;

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/CSS/background-repeat MDC - CSS: background-repeat

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundRepeat W3C - DOM Level 2 Style: CSS2Properties.backgroundRepeat

		 ]]></see>
<see><![CDATA[#background

		 ]]></see>
<see><![CDATA[#backgroundAttachment

		 ]]></see>
<see><![CDATA[#backgroundColor

		 ]]></see>
<see><![CDATA[#backgroundImage

		 ]]></see>
<see><![CDATA[#backgroundPosition

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='border' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:border/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderBottom' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderBottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderBottomColor' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderBottomColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderBottomStyle' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderBottomStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderBottomWidth' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderBottomWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 ]]></throws>
</method>
<method name='borderCollapse' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderCollapse/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderColor' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderLeft' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderLeftColor' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderLeftColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderLeftStyle' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderLeftStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderLeftWidth' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderLeftWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderRight' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderRightColor' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderRightColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderRightStyle' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderRightStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderRightWidth' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderRightWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderSpacing' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderSpacing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderStyle' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderTop' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderTopColor' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderTopColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderTopStyle' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderTopStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderTopWidth' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderTopWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='borderWidth' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:borderWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='bottom' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:bottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='captionSide' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:captionSide/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='clear' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:clear/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='clip' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:clip/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='color' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='content' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:content/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='counterIncrement' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:counterIncrement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='counterReset' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:counterReset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='cssFloat' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:cssFloat/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='cue' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:cue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='cueAfter' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:cueAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='cueBefore' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:cueBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='cursor' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:cursor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='direction' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:direction/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='display' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:display/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='elevation' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:elevation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='emptyCells' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:emptyCells/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='font' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:font/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='fontFamily' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:fontFamily/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='fontSize' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:fontSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='fontSizeAdjust' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:fontSizeAdjust/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='fontStretch' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:fontStretch/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='fontStyle' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:fontStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='fontVariant' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:fontVariant/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='fontWeight' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:fontWeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='height' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='left' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:left/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='letterSpacing' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:letterSpacing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='lineHeight' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:lineHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='listStyle' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:listStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='listStyleImage' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:listStyleImage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='listStylePosition' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:listStylePosition/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='listStyleType' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:listStyleType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='margin' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:margin/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='marginBottom' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:marginBottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='marginLeft' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:marginLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='marginRight' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:marginRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='marginTop' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:marginTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='markerOffset' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:markerOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='marks' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:marks/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='maxHeight' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:maxHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='maxWidth' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:maxWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='minHeight' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:minHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='minWidth' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:minWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='orphans' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:orphans/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='outline' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:outline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='outlineColor' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:outlineColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='outlineStyle' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:outlineStyle/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='outlineWidth' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:outlineWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='overflow' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:overflow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='padding' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:padding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='paddingBottom' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:paddingBottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='paddingLeft' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:paddingLeft/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='paddingRight' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:paddingRight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='paddingTop' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:paddingTop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='page' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:page/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='pageBreakAfter' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:pageBreakAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='pageBreakBefore' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:pageBreakBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='pageBreakInside' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:pageBreakInside/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='pause' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:pause/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='pauseAfter' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:pauseAfter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='pauseBefore' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:pauseBefore/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='pitch' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:pitch/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='pitchRange' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:pitchRange/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='playDuring' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:playDuring/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='position' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:position/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='quotes' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:quotes/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='richness' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:richness/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='right' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:right/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='size' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:size/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='speak' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:speak/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='speakHeader' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:speakHeader/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='speakNumeral' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:speakNumeral/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='speakPunctuation' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:speakPunctuation/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='speechRate' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:speechRate/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='stress' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:stress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='tableLayout' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:tableLayout/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='textAlign' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:textAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='textDecoration' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:textDecoration/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='textIndent' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:textIndent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='textShadow' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:textShadow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='textTransform' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:textTransform/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='top' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:top/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='unicodeBidi' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:unicodeBidi/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='verticalAlign' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:verticalAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='visibility' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:visibility/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='voiceFamily' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:voiceFamily/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='volume' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:volume/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='whiteSpace' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:whiteSpace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='widows' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:widows/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='width' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='wordSpacing' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:wordSpacing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='zIndex' fullname='dom.style.css:CSS2Properties/dom.style.css:CSS2Properties:zIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<classRec name='CSSStyleDeclaration' fullname='dom.style.css:CSSStyleDeclaration' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSStyleDeclaration.as' namespace='dom.style.css' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSStyleDeclaration interface represents a single CSS declaration block.

	 

	 <p class="style1">TODO: Add MS proprietary methods</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/dd347052%28VS.85%29.aspx MSDN - CSSStyleDeclaration

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/CSSStyleDeclaration MDC - CSSStyleDeclaration

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration W3C - DOM Level 2 Style: CSSStyleDeclaration

	 

	 ]]></see>
</classRec>
<method name='getPropertyCSSValue' fullname='dom.style.css:CSSStyleDeclaration/getPropertyCSSValue' isStatic='false' isFinal='false' isOverride='false'  param_names='propertyName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.style.css:CSSValue'>
<description><![CDATA[

		 Used to retrieve the object representation of the value of a CSS property if it has been explicitly 

		 set within this declaration block. This method returns null if the property is a shorthand property. 

		 Shorthand property values can only be accessed and modified as strings, using the getPropertyValue 

		 and setProperty methods. 

		 

		 ]]></description>
<param><![CDATA[propertyName The name of the CSS property.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[Returns the value of the property if it has been explicitly set for this declaration block. 

		 Returns null if the property has not been set.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyCSSValue W3C - DOM Level 2 Style: CSSStyleDeclaration.getPropertyCSSValue()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html W3C - CSS2: CSS Property index

		 ]]></see>
<see><![CDATA[dom.style.css.CSS2Properties

		 

		 ]]></see>
</method>
<method name='getPropertyPriority' fullname='dom.style.css:CSSStyleDeclaration/getPropertyPriority' isStatic='false' isFinal='false' isOverride='false'  param_names='propertyName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Used to retrieve the priority of a CSS property (e.g. the "important" qualifier) if the property 

		 has been explicitly set in this declaration block. 

		 

		 ]]></description>
<param><![CDATA[propertyName The name of the CSS property.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A string representing the priority (e.g. "important") if one exists. The empty string if none exists.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyPriority W3C - DOM Level 2 Style: CSSStyleDeclaration.getPropertyPriority()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html W3C - CSS2: CSS Property index

		 ]]></see>
<see><![CDATA[dom.style.css.CSS2Properties

		 

		 ]]></see>
</method>
<method name='getPropertyValue' fullname='dom.style.css:CSSStyleDeclaration/getPropertyValue' isStatic='false' isFinal='false' isOverride='false'  param_names='propertyName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. 

		 

		 ]]></description>
<param><![CDATA[propertyName The name of the CSS property.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[Returns the value of the property if it has been explicitly set for this declaration block. 

		 Returns the empty string if the property has not been set.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyValue W3C - DOM Level 2 Style: CSSStyleDeclaration.getPropertyValue()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html W3C - CSS2: CSS Property index

		 ]]></see>
<see><![CDATA[dom.style.css.CSS2Properties

		 

		 ]]></see>
</method>
<method name='item' fullname='dom.style.css:CSSStyleDeclaration/item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Used to retrieve the properties that have been explicitly set in this declaration block. 

		 The order of the properties retrieved using this method does not have to be the order in 

		 which they were set. This method can be used to iterate over all properties in this 

		 declaration block. 

		 

		 ]]></description>
<param><![CDATA[index Index of the property name to retrieve.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The name of the property at this ordinal position. The empty string if no property 

		 exists at this position.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-item W3C - DOM Level 2 Style: CSSStyleDeclaration.item()

		 

		 ]]></see>
</method>
<method name='removeProperty' fullname='dom.style.css:CSSStyleDeclaration/removeProperty' isStatic='false' isFinal='false' isOverride='false'  param_names='propertyName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Used to remove a CSS property if it has been explicitly set within this declaration block. 

		 

		 ]]></description>
<param><![CDATA[propertyName The name of the CSS property.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[Returns the value of the property if it has been explicitly set for this declaration 

		 block. Returns the empty string if the property has not been set or the property name does 

		 not correspond to a known CSS property.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-removeProperty W3C - DOM Level 2 Style: CSSStyleDeclaration.removeProperty()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html W3C - CSS2: CSS Property index

		 ]]></see>
<see><![CDATA[dom.style.css.CSS2Properties

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration 

		 is readonly or the property is readonly.

		 

		 ]]></throws>
</method>
<method name='setProperty' fullname='dom.style.css:CSSStyleDeclaration/setProperty' isStatic='false' isFinal='false' isOverride='false'  param_names='propertyName;value;priority' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Used to set a property value and priority within this declaration block. 

		 

		 ]]></description>
<param><![CDATA[propertyName The name of the CSS property.

		 ]]></param>
<param><![CDATA[value The new value of the property.

		 ]]></param>
<param><![CDATA[priority The new priority of the property (e.g. "important").

		 

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-setProperty W3C - DOM Level 2 Style: CSSStyleDeclaration.setProperty()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html W3C - CSS2: CSS Property index

		 ]]></see>
<see><![CDATA[dom.style.css.CSS2Properties

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified value has a syntax 

		 error and is unparsable.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration 

		 is readonly or the property is readonly.

		 

		 ]]></throws>
</method>
<method name='cssText' fullname='dom.style.css:CSSStyleDeclaration/cssText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The parsable textual representation of the declaration block (excluding the 

		 surrounding curly braces). 

		 

		 <p>Setting this attribute will result in the parsing 

		 of the new value and resetting of all the properties in the declaration block 

		 including the removal or addition of properties.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-cssText W3C - DOM Level 2 Style: CSSStyleDeclaration.cssText

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified CSS string 

		 value has a syntax error and is unparsable.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this 

		 declaration is readonly or a property is readonly.

		 

		 ]]></throws>
</method>
<method name='length' fullname='dom.style.css:CSSStyleDeclaration/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of properties that have been explicitly set in this declaration block. 

		 The range of valid indices is 0 to length-1 inclusive.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-length W3C - DOM Level 2 Style: CSSStyleDeclaration.length

		 

		 ]]></see>
</method>
<method name='parentRule' fullname='dom.style.css:CSSStyleDeclaration/parentRule/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSRule'>
<description><![CDATA[

		 The CSS rule that contains this declaration block or null if this CSSStyleDeclaration 

		 is not attached to a CSSRule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-parentRule W3C - DOM Level 2 Style: CSSStyleDeclaration.parentRule

		 

		 ]]></see>
</method>
<interfaceRec name='ElementCSSInlineStyle' fullname='dom.style.css:ElementCSSInlineStyle' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\ElementCSSInlineStyle.as' namespace='dom.style.css' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Inline style information attached to elements is exposed through the style attribute. 

	 

	 <p>This represents 

	 the contents of the STYLE attribute for HTML elements (or elements in other schemas or DTDs which use 

	 the STYLE attribute in the same way). The expectation is that an instance of the ElementCSSInlineStyle 

	 interface can be obtained by using binding-specific casting methods on an instance of the Element 

	 interface when the element supports inline CSS style informations.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ElementCSSInlineStyle W3C - DOM Level 2 Style: ElementCSSInlineStyle

	 

	 ]]></see>
</interfaceRec>
<method name='style' fullname='dom.style.css:ElementCSSInlineStyle/dom.style.css:ElementCSSInlineStyle:style/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSStyleDeclaration'>
<description><![CDATA[

		 Returns an object that represents the element's style attribute.

		 

		 <p>Note: Since the style property has the same (and highest) priority 

		 in the CSS cascade as an inline style declaration via the style 

		 attribute, it is useful for setting style on one specific element.</p>

		 

		 <p>Note: However, it is not useful for learning about the element's 

		 style in general, since it represents only the CSS declarations set 

		 in the element's inline style attribute, not those that come from 

		 style rules elsewhere, such as style rules in the &lt;head&gt; section, or

		 external style sheets.</p>

		 

		 <p><strong>Note:</strong> To get the values of all CSS properties for an element you 

		 should use window.getComputedStyle instead.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var div = document.getElementById("div1");

		 div.style.marginTop = ".25in";</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534651%28VS.85%29.aspx MSDN - STYLE Attribute

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/element.style MDC - element.style

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ElementCSSInlineStyle-style W3C - DOM Level 2 Style: ElementCSSInlineStyle.style

		 

		 ]]></see>
</method>
<classRec name='CSSPrimitiveValue' fullname='dom.style.css:CSSPrimitiveValue' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSPrimitiveValue.as' namespace='dom.style.css' access='public' baseclass='dom.style.css:CSSValue' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSPrimitiveValue interface represents a single CSS value. 

	 

	 <p>This interface may be used to determine 

	 the value of a specific style property currently set in a block or to set a specific style property 

	 explicitly within the block. An instance of this interface might be obtained from the getPropertyCSSValue 

	 method of the CSSStyleDeclaration interface. A CSSPrimitiveValue object only occurs in a context of 

	 a CSS property.</p>

	 

	 <p>Conversions are allowed between absolute values (from millimeters to centimeters, from degrees to radians, 

	 and so on) but not between relative values. (For example, a pixel value cannot be converted to a 

	 centimeter value.) Percentage values can't be converted since they are relative to the parent value (or 

	 another property value). There is one exception for color percentage values: since a color percentage value 

	 is relative to the range 0-255, a color percentage value can be converted to a number; (see also the 

	 RGBColor interface).</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

	 

	 ]]></see>
</classRec>
<method name='getFloatValue' fullname='dom.style.css:CSSPrimitiveValue/getFloatValue' isStatic='false' isFinal='false' isOverride='false'  param_names='unitType' param_types='Number' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value 

		 or can't be converted into the specified unit, a DOMException is raised.  

		 

		 ]]></description>
<param><![CDATA[unitType A unit code to get the float value. The unit code can only be a float unit type (i.e. CSS_NUMBER, 

		 CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION).

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The float value in the specified unit.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getFloatValue W3C - DOM Level 2 Style: CSSPrimitiveValue.getFloatValue()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value or if the 

		 float value can't be converted into the specified unit.

		 

		 ]]></throws>
</method>
<method name='getRGBColorValue' fullname='dom.style.css:CSSPrimitiveValue/getRGBColorValue' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:RGBColor'>
<description><![CDATA[

		 This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DOMException is raised. 

		 Modification to the corresponding style property can be achieved using the RGBColor interface. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The RGB color value.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getRGBColorValue W3C - DOM Level 2 Style: CSSPrimitiveValue.getRGBColorValue()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_ACCESS_ERR: Raised if the attached property can't return a RGB color value (e.g. 

		 this is not CSS_RGBCOLOR).

		 

		 ]]></throws>
</method>
<method name='getRectValue' fullname='dom.style.css:CSSPrimitiveValue/getRectValue' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:Rect'>
<description><![CDATA[

		 This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a DOMException is raised. 

		 Modification to the corresponding style property can be achieved using the Rect interface. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The Rect value.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getRectValue W3C - DOM Level 2 Style: CSSPrimitiveValue.getRectValue()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Rect value. (e.g. this is not CSS_RECT).

		 

		 ]]></throws>
</method>
<method name='getStringValue' fullname='dom.style.css:CSSPrimitiveValue/getStringValue' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This method is used to get the string value. If the CSS value doesn't contain a string value, a DOMException is raised.

		 

		 <p><strong>Note:</strong> Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The string value in the current unit. The current primitiveType can only be a string unit type (i.e. CSS_STRING, 

		 CSS_URI, CSS_IDENT and CSS_ATTR).

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getStringValue W3C - DOM Level 2 Style: CSSPrimitiveValue.getStringValue()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value.

		 

		 ]]></throws>
</method>
<method name='setFloatValue' fullname='dom.style.css:CSSPrimitiveValue/setFloatValue' isStatic='false' isFinal='false' isOverride='false'  param_names='unitType;floatValue' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 A method to set the float value with a specified unit. If the property attached with this value can not accept the specified 

		 unit or the float value, the value will be unchanged and a DOMException will be raised. 

		 

		 ]]></description>
<param><![CDATA[unitType A unit code as defined above. The unit code can only be a float unit type (i.e. CSS_NUMBER, 

		 CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, 

		 CSS_HZ, CSS_KHZ, CSS_DIMENSION).

		 ]]></param>
<param><![CDATA[floatValue The new float value.

		 

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-setFloatValue W3C - DOM Level 2 Style: CSSPrimitiveValue.setFloatValue()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_ACCESS_ERR: Raised if the attached property doesn't support the float value or the unit type.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='setStringValue' fullname='dom.style.css:CSSPrimitiveValue/setStringValue' isStatic='false' isFinal='false' isOverride='false'  param_names='stringType;stringValue' param_types='Number;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit 

		 or the string value, the value will be unchanged and a DOMException will be raised. 

		 

		 ]]></description>
<param><![CDATA[stringType A string code as defined above. The string code can only be a string unit type (i.e. CSS_STRING, 

		 CSS_URI, CSS_IDENT, and CSS_ATTR).

		 ]]></param>
<param><![CDATA[stringValue The new string value.

		 

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-setStringValue W3C - DOM Level 2 Style: CSSPrimitiveValue.setStringValue()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value or if the string value 

		 can't be converted into the specified unit.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.

		 

		 ]]></throws>
</method>
<method name='primitiveType' fullname='dom.style.css:CSSPrimitiveValue/primitiveType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The type of the value as defined by the constants specified above.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-primitiveType W3C - DOM Level 2 Style: CSSPrimitiveValue.primitiveType

		 

		 ]]></see>
</method>
<field name='CSS_ATTR' fullname='dom.style.css:CSSPrimitiveValue/CSS_ATTR' type='Number' isStatic='false' isConst='true' defaultValue='22' >
<description><![CDATA[

		 The value is a attribute function. The value can be obtained by using the getStringValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/generate.html#x16 W3C - CSS2: The 'content' property

		 

		 ]]></see>
</field>
<field name='CSS_CM' fullname='dom.style.css:CSSPrimitiveValue/CSS_CM' type='Number' isStatic='false' isConst='true' defaultValue='6' >
<description><![CDATA[

		 The value is a length (cm). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units W3C - CSS2: Lengths

		 

		 ]]></see>
</field>
<field name='CSS_COUNTER' fullname='dom.style.css:CSSPrimitiveValue/CSS_COUNTER' type='Number' isStatic='false' isConst='true' defaultValue='23' >
<description><![CDATA[

		 The value is a counter or counters function. The value can be obtained by using the getCounterValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#counter W3C - CSS2: Counters

		 

		 ]]></see>
</field>
<field name='CSS_DEG' fullname='dom.style.css:CSSPrimitiveValue/CSS_DEG' type='Number' isStatic='false' isConst='true' defaultValue='11' >
<description><![CDATA[

		 The value is an angle (deg). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q19 W3C - CSS2: Angles

		 

		 ]]></see>
</field>
<field name='CSS_DIMENSION' fullname='dom.style.css:CSSPrimitiveValue/CSS_DIMENSION' type='Number' isStatic='false' isConst='true' defaultValue='18' >
<description><![CDATA[

		 The value is a number with an unknown dimension. The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 

		 ]]></see>
</field>
<field name='CSS_EMS' fullname='dom.style.css:CSSPrimitiveValue/CSS_EMS' type='Number' isStatic='false' isConst='true' defaultValue='3' >
<description><![CDATA[

		 The value is a length (ems). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units W3C - CSS2: Lengths

		 

		 ]]></see>
</field>
<field name='CSS_EXS' fullname='dom.style.css:CSSPrimitiveValue/CSS_EXS' type='Number' isStatic='false' isConst='true' defaultValue='4' >
<description><![CDATA[

		 The value is a length (exs). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units W3C - CSS2: Lengths

		 

		 ]]></see>
</field>
<field name='CSS_GRAD' fullname='dom.style.css:CSSPrimitiveValue/CSS_GRAD' type='Number' isStatic='false' isConst='true' defaultValue='13' >
<description><![CDATA[

		 The value is an angle (grad). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q19 W3C - CSS2: Angles

		 

		 ]]></see>
</field>
<field name='CSS_HZ' fullname='dom.style.css:CSSPrimitiveValue/CSS_HZ' type='Number' isStatic='false' isConst='true' defaultValue='16' >
<description><![CDATA[

		 The value is a frequency (Hz). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q21 W3C - CSS2: Frequencies

		 

		 ]]></see>
</field>
<field name='CSS_IDENT' fullname='dom.style.css:CSSPrimitiveValue/CSS_IDENT' type='Number' isStatic='false' isConst='true' defaultValue='21' >
<description><![CDATA[

		 The value is an identifier. The value can be obtained by using the getStringValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#value-def-identifier W3C - CSS2: Characters and case

		 

		 ]]></see>
</field>
<field name='CSS_IN' fullname='dom.style.css:CSSPrimitiveValue/CSS_IN' type='Number' isStatic='false' isConst='true' defaultValue='8' >
<description><![CDATA[

		 The value is a length (in). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units W3C - CSS2: Lengths

		 

		 ]]></see>
</field>
<field name='CSS_KHZ' fullname='dom.style.css:CSSPrimitiveValue/CSS_KHZ' type='Number' isStatic='false' isConst='true' defaultValue='17' >
<description><![CDATA[

		 The value is a frequency (kHz). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q21 W3C - CSS2: Frequencies

		 

		 ]]></see>
</field>
<field name='CSS_MM' fullname='dom.style.css:CSSPrimitiveValue/CSS_MM' type='Number' isStatic='false' isConst='true' defaultValue='7' >
<description><![CDATA[

		 The value is a length (mm). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units W3C - CSS2: Lengths

		 

		 ]]></see>
</field>
<field name='CSS_MS' fullname='dom.style.css:CSSPrimitiveValue/CSS_MS' type='Number' isStatic='false' isConst='true' defaultValue='14' >
<description><![CDATA[

		 The value is a time (ms). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q20 W3C - CSS2: Times

		 

		 ]]></see>
</field>
<field name='CSS_NUMBER' fullname='dom.style.css:CSSPrimitiveValue/CSS_NUMBER' type='Number' isStatic='false' isConst='true' defaultValue='1' >
<description><![CDATA[

		 The value is a simple number. The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q13 W3C - CSS2: Integers and real numbers

		 

		 ]]></see>
</field>
<field name='CSS_PC' fullname='dom.style.css:CSSPrimitiveValue/CSS_PC' type='Number' isStatic='false' isConst='true' defaultValue='10' >
<description><![CDATA[

		 The value is a length (pc). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units W3C - CSS2: Lengths

		 

		 ]]></see>
</field>
<field name='CSS_PERCENTAGE' fullname='dom.style.css:CSSPrimitiveValue/CSS_PERCENTAGE' type='Number' isStatic='false' isConst='true' defaultValue='2' >
<description><![CDATA[

		 The value is a percentage. The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#percentage-units W3C - CSS2:  Percentages

		 

		 ]]></see>
</field>
<field name='CSS_PT' fullname='dom.style.css:CSSPrimitiveValue/CSS_PT' type='Number' isStatic='false' isConst='true' defaultValue='9' >
<description><![CDATA[

		 The value is a length (pt). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units W3C - CSS2: Lengths

		 

		 ]]></see>
</field>
<field name='CSS_PX' fullname='dom.style.css:CSSPrimitiveValue/CSS_PX' type='Number' isStatic='false' isConst='true' defaultValue='5' >
<description><![CDATA[

		 The value is a length (px). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units W3C - CSS2: Lengths

		 

		 ]]></see>
</field>
<field name='CSS_RAD' fullname='dom.style.css:CSSPrimitiveValue/CSS_RAD' type='Number' isStatic='false' isConst='true' defaultValue='12' >
<description><![CDATA[

		 The value is an angle (rad). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q19 W3C - CSS2: Angles

		 

		 ]]></see>
</field>
<field name='CSS_RECT' fullname='dom.style.css:CSSPrimitiveValue/CSS_RECT' type='Number' isStatic='false' isConst='true' defaultValue='24' >
<description><![CDATA[

		 The value is a rect function. The value can be obtained by using the getRectValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/visufx.html#value-def-shape W3C - CSS2: Clipping: the 'clip' property

		 

		 ]]></see>
</field>
<field name='CSS_RGBCOLOR' fullname='dom.style.css:CSSPrimitiveValue/CSS_RGBCOLOR' type='Number' isStatic='false' isConst='true' defaultValue='25' >
<description><![CDATA[

		 The value is a RGB color. The value can be obtained by using the getRGBColorValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#color-units W3C - CSS2: Colors

		 

		 ]]></see>
</field>
<field name='CSS_S' fullname='dom.style.css:CSSPrimitiveValue/CSS_S' type='Number' isStatic='false' isConst='true' defaultValue='15' >
<description><![CDATA[

		 The value is a time (s). The value can be obtained by using the getFloatValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q20 W3C - CSS2: Times

		 

		 ]]></see>
</field>
<field name='CSS_STRING' fullname='dom.style.css:CSSPrimitiveValue/CSS_STRING' type='Number' isStatic='false' isConst='true' defaultValue='19' >
<description><![CDATA[

		 The value is a STRING. The value can be obtained by using the getStringValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#strings W3C - CSS2: Strings

		 

		 ]]></see>
</field>
<field name='CSS_UNKNOWN' fullname='dom.style.css:CSSPrimitiveValue/CSS_UNKNOWN' type='Number' isStatic='false' isConst='true' defaultValue='0' >
<description><![CDATA[

		 The value is not a recognized CSS2 value. The value can only be obtained by using the cssText attribute.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 

		 ]]></see>
</field>
<field name='CSS_URI' fullname='dom.style.css:CSSPrimitiveValue/CSS_URI' type='Number' isStatic='false' isConst='true' defaultValue='20' >
<description><![CDATA[

		 The value is a URI. The value can be obtained by using the getStringValue method.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue W3C - DOM Level 2 Style: CSSPrimitiveValue

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#uri W3C - CSS2: URL + URN = URI

		 

		 ]]></see>
</field>
<classRec name='CSSPageRule' fullname='dom.style.css:CSSPageRule' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSPageRule.as' namespace='dom.style.css' access='public' baseclass='dom.style.css:CSSRule' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSPageRule interface represents a &#64;page rule within a CSS style sheet. The &#64;page rule is used to 

	 specify the dimensions, orientation, margins, etc. of a page box for paged media.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530841%28VS.85%29.aspx MSDN - &#64;page Rule

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSPageRule MDC - cssRule: CSSPageRule

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule W3C - DOM Level 2 Style: CSSPageRule

	 

	 ]]></see>
</classRec>
<method name='selectorText' fullname='dom.style.css:CSSPageRule/selectorText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The parsable textual representation of the page selector for the rule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSPageRule MDC - cssRule: CSSPageRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule-name W3C - DOM Level 2 Style: CSSPageRule.selectorText

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified CSS string 

		 value has a syntax error and is unparsable.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly.

		 

		 ]]></throws>
</method>
<method name='style' fullname='dom.style.css:CSSPageRule/style/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSStyleDeclaration'>
<description><![CDATA[

		 The declaration-block of this rule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSPageRule MDC - cssRule: CSSPageRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule-style W3C - DOM Level 2 Style: CSSPageRule.style

		 

		 ]]></see>
</method>
<classRec name='RGBColor' fullname='dom.style.css:RGBColor' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\RGBColor.as' namespace='dom.style.css' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The RGBColor interface is used to represent any RGB color value. 

	 

	 <p>This interface reflects the values 

	 in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify 

	 the style property.</p>

	 

	 <p>A specified RGB color is not clipped (even if the number is outside the range 0-255 or 0%-100%). A 

	 computed RGB color is clipped depending on the device.</p>

	 

	 <p>Even if a style sheet can only contain an integer for a color value, the internal storage of this 

	 integer is a float, and this can be used as a float in the specified or the computed style.</p>

	 

	 <p>A color percentage value can always be converted to a number and vice versa.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor W3C - DOM Level 2 Style: RGBColor

	 

	 ]]></see>
</classRec>
<method name='blue' fullname='dom.style.css:RGBColor/blue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSPrimitiveValue'>
<description><![CDATA[

		 This attribute is used for the blue value of the RGB color.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-blue W3C - DOM Level 2 Style: RGBColor.blue

		 

		 ]]></see>
</method>
<method name='green' fullname='dom.style.css:RGBColor/green/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSPrimitiveValue'>
<description><![CDATA[

		 This attribute is used for the green value of the RGB color.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-green W3C - DOM Level 2 Style: RGBColor.green

		 

		 ]]></see>
</method>
<method name='red' fullname='dom.style.css:RGBColor/red/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSPrimitiveValue'>
<description><![CDATA[

		 This attribute is used for the red value of the RGB color.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-red W3C - DOM Level 2 Style: RGBColor.red

		 

		 ]]></see>
</method>
<classRec name='Rect' fullname='dom.style.css:Rect' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\Rect.as' namespace='dom.style.css' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Rect interface is used to represent any rect value. 

	 

	 <p>This interface reflects the values in 

	 the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects 

	 modify the style property.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect W3C - DOM Level 2 Style: Rect

	 

	 ]]></see>
</classRec>
<method name='bottom' fullname='dom.style.css:Rect/bottom/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSPrimitiveValue'>
<description><![CDATA[

		 This attribute is used for the bottom of the rect.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-bottom W3C - DOM Level 2 Style: Rect.bottom

		 

		 ]]></see>
</method>
<method name='left' fullname='dom.style.css:Rect/left/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSPrimitiveValue'>
<description><![CDATA[

		 This attribute is used for the left of the rect.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-left W3C - DOM Level 2 Style: Rect.left

		 

		 ]]></see>
</method>
<method name='right' fullname='dom.style.css:Rect/right/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSPrimitiveValue'>
<description><![CDATA[

		 This attribute is used for the right of the rect.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-right W3C - DOM Level 2 Style: Rect.right

		 

		 ]]></see>
</method>
<method name='top' fullname='dom.style.css:Rect/top/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSPrimitiveValue'>
<description><![CDATA[

		 This attribute is used for the top of the rect.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-top W3C - DOM Level 2 Style: Rect.top

		 

		 ]]></see>
</method>
<classRec name='CSSStyleRule' fullname='dom.style.css:CSSStyleRule' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSStyleRule.as' namespace='dom.style.css' access='public' baseclass='dom.style.css:CSSRule' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSStyleRule interface represents a single rule set in a CSS style sheet.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/dd347053%28VS.85%29.aspx MSDN - CSSStyleRule

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSStyleRule MDC - CSSStyleRule

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule W3C - DOM Level 2 Style: CSSStyleRule

	 

	 ]]></see>
</classRec>
<method name='readOnly' fullname='dom.style.css:CSSStyleRule/readOnly/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Retrieves whether the rule or style sheet is defined on the page or is imported.

		 

		 <p><strong>Note (IE):</strong> You cannot modify style sheets obtained through a link object or the &#64;import rule while the designMode property is enabled.</p>

		 

		 ]]></description>
<default><![CDATA[false. Rule or style sheet is obtained through a link object or the &#64;import rule.

		 

		 ]]></default>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534356%28VS.85%29.aspx MSDN - readOnly Property

		 

		 ]]></see>
</method>
<method name='selectorText' fullname='dom.style.css:CSSStyleRule/selectorText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The textual representation of the selector for the rule set.

		 

		 <p><strong>Note:</strong> The implementation may have stripped out insignificant whitespace while parsing the selector. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // for cssrule: body { background-color: darkblue; }

		 cssrule = document.styleSheets[1];

		 !!TODO!! 

		 selector = cssrule.selectorText; 

		 // selector is now "body"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534626%28VS.85%29.aspx MSDN - selectorText Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule.selectorText MDC - cssRule.selectorText

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule-selectorText W3C - DOM Level 2 Style: CSSStyleRule.selectorText

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified CSS string value 

		 has a syntax error and is unparsable.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this rule 

		 is readonly.

		 

		 ]]></throws>
</method>
<method name='style' fullname='dom.style.css:CSSStyleRule/style/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSStyleDeclaration'>
<description><![CDATA[

		 The declaration-block of this rule set.

		 

		 <p><strong>Note:</strong> The declaration block is that part of the style rule that appears within the braces 

		 and that actually provides the style definitions (for the selector, the part that comes before the braces).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 function stilo() {

		 	alert(document.styleSheets[0].cssRules[0].style.cssText);

		 }

		 // displays "background-color: gray;"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534651%28VS.85%29.aspx MSDN - STYLE Attribute

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule.style MDC - cssRule.style

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule-style W3C - DOM Level 2 Style: CSSStyleRule.style

		 

		 ]]></see>
</method>
<classRec name='CSSFontFaceRule' fullname='dom.style.css:CSSFontFaceRule' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSFontFaceRule.as' namespace='dom.style.css' access='public' baseclass='dom.style.css:CSSRule' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSFontFaceRule interface represents a &#64;font-face rule in a CSS style sheet. The 

	 &#64;font-face rule is used to hold a set of font descriptions.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms530757%28VS.85%29.aspx MSDN - &#64;font-face Rule

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSFontFaceRule MDC - cssRule: CSSFontFaceRule

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSFontFaceRule W3C - DOM Level 2 Style: CSSFontFaceRule

	 

	 ]]></see>
</classRec>
<method name='style' fullname='dom.style.css:CSSFontFaceRule/style/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSStyleDeclaration'>
<description><![CDATA[

		 The declaration-block of this rule.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/cssRule#CSSFontFaceRule MDC - cssRule: CSSFontFaceRule

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSFontFaceRule-style W3C - DOM Level 2 Style: CSSFontFaceRule.style

		 

		 ]]></see>
</method>
<classRec name='CSSValueList' fullname='dom.style.css:CSSValueList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSValueList.as' namespace='dom.style.css' access='public' baseclass='dom.style.css:CSSValue' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSValueList interface provides the abstraction of an ordered collection of CSS values.

	 

	 <p>Some properties allow an empty list into their syntax. In that case, these properties take the 

	 none identifier. So, an empty list means that the property has the value none.</p>

	 

	 <p>The items in the CSSValueList are accessible via an integral index, starting from 0.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList W3C - DOM Level 2 Style: CSSValueList

	 

	 ]]></see>
</classRec>
<method name='item' fullname='dom.style.css:CSSValueList/item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.style.css:CSSValue'>
<description><![CDATA[

		 Used to retrieve a CSSValue by ordinal index. The order in this collection represents the order of the values 

		 in the CSS style property. If index is greater than or equal to the number of values in the list, this returns null. 

		 

		 ]]></description>
<param><![CDATA[index Index into the collection.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The CSSValue at the index position in the CSSValueList, or null if that is not a valid index.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList-item W3C - DOM Level 2 Style: CSSValueList.item()

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.style.css:CSSValueList/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of CSSValues in the list. The range of valid values of the indices is 0 to length-1 inclusive.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList-length W3C - DOM Level 2 Style: CSSValueList.length

		 

		 ]]></see>
</method>
<interfaceRec name='ViewCSS' fullname='dom.style.css:ViewCSS' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\ViewCSS.as' namespace='dom.style.css' access='public' baseClasses='dom.views:AbstractView' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface represents a CSS view. The getComputedStyle method provides a read only access to the computed 

	 values of an element.

	 

	 <p>The expectation is that an instance of the ViewCSS interface can be obtained by using binding-specific casting 

	 methods on an instance of the AbstractView interface.</p>

	 

	 <p>Since a computed style is related to an Element node, if this element is removed from the document, the associated 

	 CSSStyleDeclaration and CSSValue related to this declaration are no longer valid.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ViewCSS W3C - DOM Level 2 Style: ViewCSS

	 

	 ]]></see>
</interfaceRec>
<method name='getComputedStyle' fullname='dom.style.css:ViewCSS/dom.style.css:ViewCSS:getComputedStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='elt;pseudoElt' param_types='dom.core:Element;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.style.css:CSSStyleDeclaration'>
<description><![CDATA[

		 This method is used to get the computed style as it is defined in CSS2. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var element = document.getElementById(“elemId”);

		 var style = document.defaultView.getComputedStyle(element, pseudoElt);</listing>

		 

		 <listing>

		 //practical example:

		 &lt;html&gt;

		 &lt;head&gt;

		 	&lt;style&gt;

		 		#elem_container{

		 			position: absolute;

		 			left: 100Px;

		 			top: 200px;

		 			height:100px;

		 		}

		 	&lt;/style&gt;

		 &lt;/head&gt;

		 &lt;body&gt;

		 	&lt;div id="elem_container"&gt;dummy&lt;/div&gt;

		 

		 	&lt;div id="output"&gt;&lt;/div&gt;  

		 	&lt;script&gt;

		 		function getTheStyle() {

		 			var elem=document.getElementById("elem_container");

		 			var theCSSprop=document.defaultView.getComputedStyle(elem,null).getPropertyValue("height");

		 			document.getElementById("output").innerHTML=theCSSprop;

		 		}

		 	getTheStyle();

		 	&lt;/script&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[elt The element whose style is to be computed. This parameter cannot be null.

		 ]]></param>
<param><![CDATA[pseudoElt The pseudo-element or null if none.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The computed style. The CSSStyleDeclaration is read-only and contains only absolute values.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.getComputedStyle MDC - window.getComputedStyle

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSview-getComputedStyle W3C - DOM Level 2 Style: ViewCSS.getComputedStyle()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-CSS2-19980512/ W3C - CSS2 Specification

		 

		 ]]></see>
</method>
<classRec name='CSSStyleSheet' fullname='dom.style.css:CSSStyleSheet' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\CSSStyleSheet.as' namespace='dom.style.css' access='public' baseclass='dom.style.stylesheets:StyleSheet' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The CSSStyleSheet interface is a concrete interface used to represent a CSS style 

	 sheet i.e., a style sheet whose content type is "text/css".

	 

	 <p>All browser compatibility information was obtained via Quirksmode.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535871%28VS.85%29.aspx MSDN: StyleSheet

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet MDC - stylesheet

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet W3C - DOM Level 2 Style: CSSStyleSheet

	 

	 ]]></see>
</classRec>
<method name='addImport' fullname='dom.style.css:CSSStyleSheet/addImport' isStatic='false' isFinal='false' isOverride='false'  param_names='url;indexRequest' param_types='dom.core.types:DOMString;Number' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Adds a style sheet to the imports collection for the specified style sheet.

		 

		 <p><strong>Note (IE):</strong> Whether a CSS import is made in a CSS file itself (by using &#64;import) or dynamically by 

		 JavaScript, the limit per stylesheet is 31. Beyond that number, all other imports in that stylesheet will be 

		 ignored. Additionally, when trying to add an import by JavaScript, the browser will return an "Invalid argument" error.</p>

		 

		 ]]></description>
<param><![CDATA[url Specifies the location of the source file for the style sheet.

		 ]]></param>
<param><![CDATA[indexRequest (Optional) Specifies the requested position for the style sheet in the collection. If this value is not given, the style sheet is added to the end of the collection.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_unknown

		 ]]></productversion>
<return><![CDATA[Returns a a zero-based index value indicating the position of the imported style sheet in the imports collection. 

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms531193%28VS.85%29.aspx MSDN: addImport Method

		 

		 ]]></see>
</method>
<method name='addPageRule' fullname='dom.style.css:CSSStyleSheet/addPageRule' isStatic='false' isFinal='false' isOverride='false'  param_names='selector;style;index' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Number' param_defaults='undefined;undefined;-1' result_type='Number'>
<description><![CDATA[

		 Creates a new page object for a style sheet.

		 

		 <p><strong>Note (IE):</strong> Each page object represents a style sheet that corresponds to a &#64;page rule in the document.</p>

		 

		 ]]></description>
<default><![CDATA[The page object is added to the end of the collection.

		 ]]></default>
<param><![CDATA[selector Specifies the selector for the new page object.

		 ]]></param>
<param><![CDATA[style Specifies the style assignments for this page object. This style takes the same form as an inline style specification. For example, "color:blue" is a valid style parameter.

		 ]]></param>
<param><![CDATA[index Specifies the zero-based position in the pages collection where the new page object should be placed.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_unknown

		 ]]></productversion>
<return><![CDATA[Reserved. Always returns -1.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535928%28VS.85%29.aspx MSDN: addPageRule Method

		 

		 ]]></see>
</method>
<method name='addRule' fullname='dom.style.css:CSSStyleSheet/addRule' isStatic='false' isFinal='false' isOverride='false'  param_names='selector;style;index' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Number' param_defaults='undefined;undefined;-1' result_type='Number'>
<description><![CDATA[

		 Creates a new rule for a style sheet.

		 

		 <p><strong>Note (IE):</strong> You can add up to 4095 style rules with the addRule method. After that, the method returns an "Invalid Argument" exception.</p>

		 <p><strong>Note (IE):</strong> You can apply rules to a disabled styleSheet, but they do not apply to the document until you enable the styleSheet.</p>

		 

		 ]]></description>
<default><![CDATA[The page object is added to the end of the collection.

		 ]]></default>
<example><![CDATA[
		 <listing>

		 &lt;style&gt;

		 &lt;/style&gt;

		 

		 &lt;div&gt;

		 	Internet Explorer makes &lt;b&gt;HTML&lt;/b&gt; dynamic.

		 &lt;/div&gt;

		 

		 &lt;script&gt;

		 	var new_rule;

		 	new_rule = document.styleSheets[0].addRule("div b", "color:blue", 0);

		 &lt;/script&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[selector Specifies the selector for the new rule. Single contextual selectors are valid. For example, 

		 "div p b" is a valid contextual selector.

		 ]]></param>
<param><![CDATA[style Specifies the style assignments for this style rule. This style takes the same form as an inline 

		 style specification. For example, "color:blue" is a valid style parameter.

		 ]]></param>
<param><![CDATA[index (Optional) Specifies the zero-based position in the rules collection where the new style rule should be placed.

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<return><![CDATA[Reserved. Always returns -1.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa358796%28VS.85%29.aspx MSDN: addRule Method

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 ]]></see>
<see><![CDATA[#removeRule()

		 ]]></see>
<see><![CDATA[#rules

		 

		 ]]></see>
</method>
<method name='deleteRule' fullname='dom.style.css:CSSStyleSheet/deleteRule' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Used to delete a rule from the style sheet. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>myStyles.deleteRule(0);</listing>

		 

		 ]]></example>
<param><![CDATA[index The index within the style sheet's rule list of the rule to remove.

		 

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.deleteRule MDC - stylesheet: deleteRule Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet W3C - DOM Level 2 Style: CSSStyleSheet

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index does not 

		 correspond to a rule in the style sheet's rule list.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly.

		 

		 ]]></throws>
</method>
<method name='insertRule' fullname='dom.style.css:CSSStyleSheet/insertRule' isStatic='false' isFinal='false' isOverride='false'  param_names='rule;index' param_types='dom.core.types:DOMString;Number' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // push a new rule onto the top of my stylesheet

		 myStyle.insertRule("#blanc { color: white }", 0);</listing>

		 

		 ]]></example>
<param><![CDATA[rule The parsable text representing the rule. For rule sets this contains both the selector 

		 and the style declaration. For at-rules, this specifies both the at-identifier and the rule content.

		 ]]></param>
<param><![CDATA[index The index within the style sheet's rule list of the rule before which to insert the 

		 specified rule. If the specified index is equal to the length of the style sheet's rule collection, 

		 the rule will be added to the end of the style sheet.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<return><![CDATA[The index within the style sheet's rule collection of the newly inserted rule.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.insertRule MDC - stylesheet: insertRule Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet W3C - DOM Level 2 Style: CSSStyleSheet

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at 

		 the specified index e.g. if an &#64;import rule is inserted after a standard rule set or other at-rule.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index is not a valid insertion point.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable.

		 

		 ]]></throws>
</method>
<method name='removeImport' fullname='dom.style.css:CSSStyleSheet/removeImport' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Removes the imported style sheet from the imports collection based on ordinal position. 

		 

		 ]]></description>
<param><![CDATA[index Indicates which imported style sheet to remove.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa358799%28VS.85%29.aspx MSDN: removeImport Method

		 

		 ]]></see>
</method>
<method name='removeRule' fullname='dom.style.css:CSSStyleSheet/removeRule' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Deletes an existing style rule for the styleSheet object, and adjusts the index of the rules collection accordingly. 

		 

		 <p><strong>Note (IE):</strong> The page does not automatically reflow when the rule is removed. To see the change, you 

		 must reflow the page. You can reflow the objects affected using a number of methods. For example, you can reflow 

		 the style change only on affected text by setting the text equal to itself. Alternately, you can reload the entire 

		 page using the reload method. When you use the refresh method on a table, its content is reflowed. </p>

		 

		 ]]></description>
<example><![CDATA[
		 This example uses the removeRule method to delete a rule from the rules collection, which causes the text to reflow according to the new rules.

		 <listing>

		 &lt;STYLE&gt;

		 	P {color:green}

		 &lt;/STYLE&gt;

		 ...

		 &lt;SCRIPT&gt;

		 	function removeTheRule() {

		 		// Style sheets and rules are zero-based collections; therefore,

		 		// the first item is item 0 in the collection.

		 		var iSheets = document.styleSheets.length;

		 		var iRules = document.styleSheets[iSheets-1].rules.length;

		 		// make sure there is a rule to delete

		 		if (1 &lt; iRules) {            

		 			document.styleSheets[iSheets-1].removeRule(1);

		 			// Force the page to render the change.

		 			oEffectRules.innerHTML=oEffectRules.innerHTML;

		 		}

		 	}

		 &lt;/SCRIPT&gt;

		 ...

		 &lt;P ID=oEffectRules&gt;This text has the new style applied to it.&lt;/P&gt;

		 ...

		 &lt;BUTTON onclick="removeTheRule()"&gt;Remove the new rule.&lt;/BUTTON&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[index (Optional) Specifies the index value of the rule to be deleted from the style sheet. If an index is not provided, the first rule in the rules collection is removed.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard 0

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms531195%28VS.85%29.aspx MSDN: removeRule Method

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 ]]></see>
<see><![CDATA[#addRule()

		 ]]></see>
<see><![CDATA[#rules

		 

		 ]]></see>
</method>
<method name='cssRules' fullname='dom.style.css:CSSStyleSheet/cssRules/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSRuleList'>
<description><![CDATA[

		 The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // get the first style sheet’s first rule

		 first_rule = document.styleSheets[0].cssRules[0];</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.cssRules MDC - stylesheet: cssRules Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet W3C - DOM Level 2 Style: CSSStyleSheet

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 ]]></see>
<see><![CDATA[#rules

		 

		 ]]></see>
</method>
<method name='ownerRule' fullname='dom.style.css:CSSStyleSheet/ownerRule/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSRule'>
<description><![CDATA[

		 If this style sheet comes from an &#64;import rule, the ownerRule attribute will contain 

		 the CSSImportRule. In that case, the ownerNode attribute in the StyleSheet interface 

		 will be null. If the style sheet comes from an element or a processing instruction, 

		 the ownerRule attribute will be null and the ownerNode attribute will contain the Node.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.ownerRule MDC - stylesheet: ownerRule Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet W3C - DOM Level 2 Style: CSSStyleSheet

		 

		 ]]></see>
</method>
<method name='rules' fullname='dom.style.css:CSSStyleSheet/rules/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSRuleList'>
<description><![CDATA[

		 Retrieves a collection of rules defined in a style sheet.

		 

		 <p><strong>Note (IE):</strong> IE doesn't count &#64;imports as rules, but splits up selectors like p#test, ul  into two rules.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;script&gt;

		 			function ruleColor(ruleIndex) {

		 				alert("The color of rule " + ruleIndex + " is " +

		 				document.styleSheets[0].rules.item(ruleIndex).style.color + ".");

		 			}

		 		&lt;/script&gt;

		 

		 		&lt;style&gt;

		 			.rule0 {color:"red"}

		 			.rule1 {color:"blue"} 

		 		&lt;/style&gt;

		 	&lt;/head&gt;

		 

		 	&lt;body&gt;

		 		&lt;p class="rule0" id="oRule0Span"&gt;

		 			Rule 0 is applied to this line.

		 		&lt;/p&gt;

		 		&lt;p class="rule1" id="oRule1Span"&gt;

		 			Rule 1 is applied to this line.

		 		&lt;/p&gt;

		 

		 		&lt;button onclick="ruleColor(0)"&gt;Color of Rule 0&lt;/button&gt; 

		 

		 		&lt;button onclick="ruleColor(1)"&gt;Color of Rule 1&lt;/button&gt;

		 

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard 0

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_incorrect

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_incorrect

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms531199%28VS.85%29.aspx MSDN: rules Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 ]]></see>
<see><![CDATA[#cssRules

		 

		 ]]></see>
</method>
<interfaceRec name='DocumentCSS' fullname='dom.style.css:DocumentCSS' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\DocumentCSS.as' namespace='dom.style.css' access='public' baseClasses='dom.style.stylesheets:DocumentStyle' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface represents a document with a CSS view.

	 

	 <p>The getOverrideStyle method provides a mechanism through which a DOM author could effect immediate change 

	 to the style of an element without modifying the explicitly linked style sheets of a document or the inline 

	 style of elements in the style sheets. This style sheet comes after the author style sheet in the cascade 

	 algorithm and is called override style sheet. The override style sheet takes precedence over author style 

	 sheets. An "!important" declaration still takes precedence over a normal declaration. Override, author, 

	 and user style sheets all may contain "!important" declarations. User "!important" rules take precedence 

	 over both override and author "!important" rules, and override "!important" rules take precedence over 

	 author "!important" rules.</p>

	 

	 <p>The expectation is that an instance of the DocumentCSS interface can be obtained by using binding-specific 

	 casting methods on an instance of the Document interface.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DocumentCSS W3C - DOM Level 2 Style: DocumentCSS

	 

	 ]]></see>
</interfaceRec>
<method name='getOverrideStyle' fullname='dom.style.css:DocumentCSS/dom.style.css:DocumentCSS:getOverrideStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='elt;pseudoElt' param_types='dom.core:Element;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.style.css:CSSStyleDeclaration'>
<description><![CDATA[

		 This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element. 

		 

		 ]]></description>
<param><![CDATA[elt The element whose style is to be modified. This parameter cannot be null.

		 ]]></param>
<param><![CDATA[pseudoElt The pseudo-element or null if none.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The override style declaration.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DocumentCSS-getOverrideStyle W3C - DOM Level 2 Style: DocumentCSS.getOverrideStyle()

		 

		 ]]></see>
</method>
<interfaceRec name='DOMImplementationCSS' fullname='dom.style.css:DOMImplementationCSS' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\css\DOMImplementationCSS.as' namespace='dom.style.css' access='public' baseClasses='dom.core:DOMImplementation' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This interface allows the DOM user to create a CSSStyleSheet outside the context of a document. 

	 

	 <p>There is no way to associate the new CSSStyleSheet with a document in DOM Level 2.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-StyleSheetCreation W3C - DOM Level 2 Style: DOMImplementationCSS

	 

	 ]]></see>
</interfaceRec>
<method name='createCSSStyleSheet' fullname='dom.style.css:DOMImplementationCSS/dom.style.css:DOMImplementationCSS:createCSSStyleSheet' isStatic='false' isFinal='false' isOverride='false'  param_names='title;media' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.style.css:CSSStyleSheet'>
<description><![CDATA[

		 Creates a new CSSStyleSheet. 

		 

		 ]]></description>
<param><![CDATA[title The advisory title.

		 ]]></param>
<param><![CDATA[media The comma-separated list of media associated with the new style sheet.

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A new CSS style sheet.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DOMImplementationCSS-createCSSStyleSheet W3C - DOM Level 2 Style: DOMImplementationCSS.createCSSStyleSheet()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified media string value 

		 has a syntax error and is unparsable.

		 

		 ]]></throws>
</method>
<interfaceRec name='Storage' fullname='webstorage:Storage' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\webstorage\Storage.as' namespace='webstorage' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DOM Storage mechanism is a means through which string key/value pairs can be securely stored and later 

	 retrieved for use. The goal of this addition is to provide a comprehensive means through which interactive 

	 applications can be built (including advanced abilities, such as being able to work "offline" for extended 

	 periods of time).

	 

	 <p><code>sessionStorage</code> sets fields on the window. When the window is closed, the session fields 

	 are lost, even if the site remains open in another window.</p>

	 

	 <p><code>localStorage</code> sets fields on the domain. Even when you close the browser, reopen it, and 

	 go back to the site, it remembers all fields in localStorage.</p>

	 

	 ]]></description>
<playerversion><![CDATA[WebStorage 0

	 ]]></playerversion>
<since><![CDATA[HTML 5

	 

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-interface W3C Web Storage Specification

	 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: HTML5 compatibility - Local storage and session storage

	 ]]></see>
</interfaceRec>
<method name='clear' fullname='webstorage:Storage/webstorage:Storage:clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Empties the object of all key/value pairs, if there are any.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>&lt;button onclick="localStorage.clear()"&gt;Clear Stored Values&lt;/button&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4_incomplete

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc288131%28VS.85%29.aspx  MSDN: clear Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Storage  MDC - DOM Storage

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-interface  W3C - Web Storage: clear Method

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 ]]></see>
<see><![CDATA[#removeItem()

		 

		 ]]></see>
</method>
<method name='getItem' fullname='webstorage:Storage/webstorage:Storage:getItem' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 NameGetter

		 

		 The getItem(key) method must return the current value associated with the given key.

		 

		 ]]></description>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc197039%28VS.85%29.aspx  MSDN: getItem Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Storage  MDC - DOM Storage

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-interface  W3C - Web Storage: getItem Method

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 ]]></see>
<see><![CDATA[#setItem()

		 

		 ]]></see>
</method>
<method name='key' fullname='webstorage:Storage/webstorage:Storage:key' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 IndexGetter

		 

		 Returns the value at the specified index.

		 

		 ]]></description>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc197042%28VS.85%29.aspx  MSDN: key Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Storage  MDC - DOM Storage

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-interface  W3C - Web Storage: key Method

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 ]]></see>
<see><![CDATA[#getItem()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: May be raised if <code>index</code> is greater than or 

		 equal to the number of key/value pairs in the object. 

		 

		 ]]></throws>
</method>
<method name='removeItem' fullname='webstorage:Storage/webstorage:Storage:removeItem' isStatic='false' isFinal='false' isOverride='false'  param_names='key' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 NameDeleter

		 

		 The removeItem(key) method must cause the key/value pair with the given 

		 key to be removed from the list associated with the object, if it exists.

		 

		 ]]></description>
<param><![CDATA[key The name of the key, or the empty string.

		 

		 ]]></param>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc197047%28VS.85%29.aspx  MSDN: removeItem Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Storage  MDC - DOM Storage

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-interface  W3C - Web Storage: removeItem Method

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 ]]></see>
<see><![CDATA[#clear()

		 

		 ]]></see>
</method>
<method name='setItem' fullname='webstorage:Storage/webstorage:Storage:setItem' isStatic='false' isFinal='false' isOverride='false'  param_names='key;data' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 NameSetter

		 

		 Adds the data based on the key name. If the key already exists, that data is updated

		 with the new data.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 sessionStorage.setItem('myKey', '...');

		 sessionStorage['myKey'] = '...'; 

		 sessionStorage.myKey = '...';</listing>

		 

		 ]]></example>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc197050%28VS.85%29.aspx  MSDN: setItem Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Storage  MDC - DOM Storage

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-interface  W3C - Web Storage: setItem Method

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 ]]></see>
<see><![CDATA[#getItem()

		 ]]></see>
<see><![CDATA[#remainingSpace

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException QUOTA_EXCEEDED_ERR: May be raised if setting fails. 

		 

		 ]]></throws>
</method>
<method name='length' fullname='webstorage:Storage/webstorage:Storage:length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the number of key/value pairs currently present in the list associated with the object.

		 

		 ]]></description>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc304101%28VS.85%29.aspx  MSDN: length Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/Storage  MDC - DOM Storage

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-interface  W3C - Web Storage: length Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 

		 ]]></see>
</method>
<method name='remainingSpace' fullname='webstorage:Storage/webstorage:Storage:remainingSpace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Retrieves the remaining memory space, in bytes, for the storage object.

		 

		 <p>The current size of the storage area is calculated as the sum of the length of all key names and values.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc197016%28VS.85%29.aspx  MSDN: remainingSpace Property

		 

		 ]]></see>
</method>
<classRec name='StorageEvent' fullname='webstorage:StorageEvent' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\webstorage\StorageEvent.as' namespace='webstorage' access='public' baseclass='dom.events:Event' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Is fired when a storage area changes

	 

	 ]]></description>
<playerversion><![CDATA[WebStorage 0

	 ]]></playerversion>
<since><![CDATA[HTML 5

	 

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-event W3C Web Storage Specification

	 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: HTML5 compatibility - Local storage and session storage

	 ]]></see>
</classRec>
<method name='initStorageEvent' fullname='webstorage:StorageEvent/initStorageEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='typeArg;canBubbleArg;cancelableArg;keyArg;oldValueArg;newValueArg;urlArg;sourceArg;storageAreaArg' param_types='dom.core.types:DOMString;Boolean;Boolean;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;dom:WindowProxy;webstorage:Storage' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of an Event created through the 

		 DocumentEvent.createEvent method.

		 

		 ]]></description>
<param><![CDATA[typeArgSpecifies Event.type, the local name of the 

		 event type.

		 ]]></param>
<param><![CDATA[canBubbleArg Specifies Event.bubbles. This parameter overrides 

		 the intrinsic bubbling behavior of the event.

		 ]]></param>
<param><![CDATA[cancelableArg Specifies Event.cancelable. This parameter 

		 overrides the intrinsic cancelable behavior of the event.

		 ]]></param>
<param><![CDATA[keyArg The key being changed.

		 ]]></param>
<param><![CDATA[oldValueArg The old value of the key being changed.

		 ]]></param>
<param><![CDATA[newValueArg The new value of the key being changed.

		 ]]></param>
<param><![CDATA[urlArg The address of the document whose key changed.

		 ]]></param>
<param><![CDATA[sourceArg The WindowProxy object of the browsing context of the document whose key changed.

		 ]]></param>
<param><![CDATA[storageAreaArg The Storage object that was affected.

		 

		 ]]></param>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-event  W3C - Web Storage: initStorageEvent Method

		 

		 ]]></see>
</method>
<method name='initStorageEventNS' fullname='webstorage:StorageEvent/initStorageEventNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;typeArg;canBubbleArg;cancelableArg;keyArg;oldValueArg;newValueArg;urlArg;sourceArg;storageAreaArg' param_types='dom.core.types:DOMString;dom.core.types:DOMString;Boolean;Boolean;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;dom:WindowProxy;webstorage:Storage' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Initializes attributes of a StorageEvent object. This method has 

		 the same behavior as Event.initEventNS(). 

		 

		 ]]></description>
<param><![CDATA[namespaceURIArg Refer to the Event.initEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[typeArg Refer to the Event.initEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[canBubbleArg Refer to the Event.initEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[cancelableArg Refer to the Event.initEventNS() method for a description of this parameter.

		 ]]></param>
<param><![CDATA[keyArg Specifies StorageEvent.key.

		 ]]></param>
<param><![CDATA[oldValueArg Specifies StorageEvent.oldValue.

		 ]]></param>
<param><![CDATA[newValueArg Specifies StorageEvent.newValue.

		 ]]></param>
<param><![CDATA[urlArg Specifies StorageEvent.url.

		 ]]></param>
<param><![CDATA[sourceArg Specifies StorageEvent.source.

		 ]]></param>
<param><![CDATA[storageAreaArg Specifies StorageEvent.storageArea.

		 

		 ]]></param>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<since><![CDATA[DOMEvents 3

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-event  W3C - Web Storage: initStorageEvent Method

		 ]]></see>
<see><![CDATA[dom.events.Event#initEventNS()

		 

		 ]]></see>
</method>
<method name='domain' fullname='webstorage:StorageEvent/domain/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The domain the field is stored in.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 

		 ]]></see>
</method>
<method name='key' fullname='webstorage:StorageEvent/key/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The key being changed.

		 

		 ]]></description>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-event  W3C - Web Storage: key Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 

		 ]]></see>
</method>
<method name='newValue' fullname='webstorage:StorageEvent/newValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The new value of the key being changed.

		 

		 ]]></description>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-event  W3C - Web Storage: newValue Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 

		 ]]></see>
</method>
<method name='oldValue' fullname='webstorage:StorageEvent/oldValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The old value of the key being changed.

		 

		 ]]></description>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-event  W3C - Web Storage: oldValue Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 

		 ]]></see>
</method>
<method name='source' fullname='webstorage:StorageEvent/source/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom:WindowProxy'>
<description><![CDATA[

		 The WindowProxy object of the browsing context of the document whose key changed.

		 

		 ]]></description>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-event  W3C - Web Storage: source Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 

		 ]]></see>
</method>
<method name='storageArea' fullname='webstorage:StorageEvent/storageArea/get' isStatic='false' isFinal='false' isOverride='false'  result_type='webstorage:Storage'>
<description><![CDATA[

		 The Storage object that was affected.

		 

		 ]]></description>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-event  W3C - Web Storage: storageArea Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 

		 ]]></see>
</method>
<method name='uri' fullname='webstorage:StorageEvent/uri/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The URL of the page that changed the field.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Apple

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 

		 ]]></see>
</method>
<method name='url' fullname='webstorage:StorageEvent/url/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The address of the document whose key changed.

		 

		 ]]></description>
<playerversion><![CDATA[WebStorage 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5b4

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_no

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/webstorage/#the-storage-event  W3C - Web Storage: url Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/html5.html#localstorage  Quirksmode: Local storage and session storage

		 

		 ]]></see>
</method>
<classRec name='MediaList' fullname='dom.style.stylesheets:MediaList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\stylesheets\MediaList.as' namespace='dom.style.stylesheets' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The MediaList interface provides the abstraction of an ordered collection of media, without 

	 defining or constraining how this collection is implemented. An empty list is the same as 

	 a list that contains the medium "all".

	 

	 The items in the MediaList are accessible via an integral index, starting from 0.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList W3C - DOM Level 2 Style: MediaList

	 

	 ]]></see>
</classRec>
<method name='appendMedium' fullname='dom.style.stylesheets:MediaList/appendMedium' isStatic='false' isFinal='false' isOverride='false'  param_names='newMedium' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed. 

		 

		 ]]></description>
<param><![CDATA[newMedium The new medium to add.

		 

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList W3C - DOM Level 2 Style: appendMedium Method

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_CHARACTER_ERR: If the medium contains characters that are 

		 invalid in the underlying style language.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly.

		 

		 ]]></throws>
</method>
<method name='deleteMedium' fullname='dom.style.stylesheets:MediaList/deleteMedium' isStatic='false' isFinal='false' isOverride='false'  param_names='oldMedium' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Deletes the medium indicated by oldMedium from the list. 

		 

		 ]]></description>
<param><![CDATA[oldMedium The medium to delete in the media list.

		 

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList W3C - DOM Level 2 Style: deleteMedium Method

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if oldMedium is not in the list.

		 

		 ]]></throws>
</method>
<method name='length' fullname='dom.style.stylesheets:MediaList/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of media in the list. The range of valid media is 0 to length-1 inclusive.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList W3C - DOM Level 2 Style: length Property

		 

		 ]]></see>
</method>
<method name='mediaText' fullname='dom.style.stylesheets:MediaList/mediaText/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The parsable textual representation of the media list. This is a comma-separated list of media.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList W3C - DOM Level 2 Style: mediaText Property

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: Raised if the specified string value has a syntax error and is unparsable.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly.

		 

		 ]]></throws>
</method>
<classRec name='LinkStyle' fullname='dom.style.stylesheets:LinkStyle' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\stylesheets\LinkStyle.as' namespace='dom.style.stylesheets' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible 

	 for linking it into a document. An instance of the LinkStyle interface can be obtained using binding-specific 

	 casting methods on an instance of a linking node.

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-LinkStyle W3C - DOM Level 2 Style: LinkStyle

	 

	 ]]></see>
</classRec>
<method name='sheet' fullname='dom.style.stylesheets:LinkStyle/sheet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.stylesheets:StyleSheet'>
<description><![CDATA[

		 The style sheet.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-LinkStyle W3C - DOM Level 2 Style: sheet Property

		 

		 ]]></see>
</method>
<classRec name='StyleSheetList' fullname='dom.style.stylesheets:StyleSheetList' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\stylesheets\StyleSheetList.as' namespace='dom.style.stylesheets' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The StyleSheetList interface provides the abstraction of an ordered collection of style sheets.

	 

	 <p>The items in the StyleSheetList are accessible via an integral index, starting from 0.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList W3C - DOM Level 2 Style: StyleSheetList

	 

	 ]]></see>
</classRec>
<method name='item' fullname='dom.style.stylesheets:StyleSheetList/item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.style.stylesheets:StyleSheet'>
<description><![CDATA[

		 Used to retrieve a style sheet by ordinal index. If index is greater than or equal to the number 

		 of style sheets in the list, this returns null. 

		 

		 ]]></description>
<param><![CDATA[index Index into the collection

		 ]]></param>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The style sheet at the index position in the StyleSheetList, or null if that is not a valid index.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.styleSheets  MDC - Document.styleSheets

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList-item W3C - DOM Level 2 Style: StyleSheetList.itme()

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.style.stylesheets:StyleSheetList/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.styleSheets  MDC - Document.styleSheets

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList-length W3C - DOM Level 2 Style: StyleSheetList.length

		 

		 ]]></see>
</method>
<interfaceRec name='DocumentStyle' fullname='dom.style.stylesheets:DocumentStyle' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\stylesheets\DocumentStyle.as' namespace='dom.style.stylesheets' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document 

	 can be retrieved. The expectation is that an instance of the DocumentStyle interface can be obtained 

	 by using binding-specific casting methods on an instance of the Document interface.

	 

	 <p><strong>Note:</strong> CSSOM is in its very early stages. The intention is that this specification will in due course supersede DOM Level 2 Style. </p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle W3C - DOM Level 2 Style: DocumentStyle

	 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle W3C - CSSOM: DocumentStyle

	 

	 ]]></see>
</interfaceRec>
<method name='enableStylesheetsForSet' fullname='dom.style.stylesheets:DocumentStyle/dom.style.stylesheets:DocumentStyle:enableStylesheetsForSet' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Invoking this method must change the disabled attribute on each StyleSheet object with a title in the 

		 styleSheets attribute, so that all those whose title matches the name argument are enabled, and all others 

		 are disabled. Title matches must be case-sensitive.

		 

		 <p>Invoking this method with the empty string value must disable all alternative and preferred style sheets

		 (but does not change the state of persistent style sheets).</p>

		 

		 <p>Invoking this method with the null value must have no effect.</p>

		 

		 <p>Style sheets that do not have a title are never affected by this method. This method does not change the 

		 values of the lastStyleSheetSet or preferredStyleSheetSet  attributes.</p>

		 

		 ]]></description>
<param><![CDATA[name

		 

		 ]]></param>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.enableStyleSheetsForSet MDC - Document.enableStylesheetsForSet()

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-enablestylesheetsforset W3C - DocumentStyle.enableStylesheetsForSet()

		 

		 ]]></see>
</method>
<method name='lastStyleSheetSet' fullname='dom.style.stylesheets:DocumentStyle/dom.style.stylesheets:DocumentStyle:lastStyleSheetSet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute must initially have the value null. Its value changes when the selectedStyleSheetSet  attribute is set.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.lastStyleSheetSet MDC - Document.lastStyleSheetSet

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-lastStyleSheetSet W3C - DocumentStyle.lastStyleSheetSet

		 

		 ]]></see>
</method>
<method name='preferredStyleSheetSet' fullname='dom.style.stylesheets:DocumentStyle/dom.style.stylesheets:DocumentStyle:preferredStyleSheetSet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute must be the preferred style sheet set as set by the author. It is determined from the order 

		 of style sheet declarations and the Default-Style HTTP headers. If there is no preferred style sheet set, 

		 this attribute must  be the empty string. The case of this attribute must  exactly match the case given by 

		 the author where the preferred style sheet is specified or implied. This attribute must  never be null.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.preferredStyleSheetSet MDC - Document.preferredStyleSheetSet

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-preferredStyleSheetSet W3C - DocumentStyle.preferredStyleSheetSet

		 

		 ]]></see>
</method>
<method name='selectedStyleSheetSet' fullname='dom.style.stylesheets:DocumentStyle/dom.style.stylesheets:DocumentStyle:selectedStyleSheetSet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute indicates which style sheet set is in use. This attribute is live; changing the disabled attribute 

		 on style sheets directly will change the value of this attribute.

		 

		 <p>If all the sheets that are enabled and have a title have the same title (by case-sensitive  comparisons) 

		 then the value of this attribute must be exactly equal to the title of the first enabled style sheet with a 

		 title in the styleSheets  list. Otherwise, if style sheets from different sets are enabled, then the return 

		 value must be null (there is no way to determine what the currently selected style sheet set is in those 

		 conditions). Otherwise, either all style sheets that have a title are disabled, or there are no alternative 

		 style sheets, and selectedStyleSheetSet  must return the empty string.</p>

		 

		 ]]></description>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.selectedStyleSheetSet MDC - Document.selectedStyleSheetSet

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-selectedStyleSheetSet W3C - DocumentStyle.selectedStyleSheetSet

		 

		 ]]></see>
</method>
<method name='styleSheetSets' fullname='dom.style.stylesheets:DocumentStyle/dom.style.stylesheets:DocumentStyle:styleSheetSets/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DOMStringList'>
<description><![CDATA[

		 This must be a live list of the currently available style sheet sets. This list is constructed by enumerating 

		 all the style sheets for this document available to the implementation, in the order they are listed in the 

		 styleSheets  attribute, adding the title of each style sheet with a title to the list, avoiding duplicates by 

		 dropping titles that match (case-sensitively) titles that have already been added to the list.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOM 0

		 ]]></playerversion>
<since><![CDATA[CSSOM 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.styleSheetSets MDC - Document.styleSheetSets

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-styleSheetSets W3C - DocumentStyle.styleSheetSets

		 

		 ]]></see>
</method>
<method name='styleSheets' fullname='dom.style.stylesheets:DocumentStyle/dom.style.stylesheets:DocumentStyle:styleSheets/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.stylesheets:StyleSheetList'>
<description><![CDATA[

		 A list containing all the style sheets explicitly linked into or embedded in a document. For HTML 

		 documents, this includes external style sheets, included via the HTML LINK element, and inline 

		 STYLE elements. In XML, this includes external style sheets, included via style sheet 

		 processing instructions.

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms531200%28VS.85%29.aspx MSDN: styleSheets Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.styleSheets  MDC - Document.styleSheets

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle W3C - DOM Level 2 Style: DocumentStyle..styleSheets

		 ]]></see>
<see><![CDATA[http://dev.w3.org/csswg/cssom/#documentstyle-stylesheets W3C - CSSOM: DocumentStyle.styleSheets

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access  Quirksmode: Accessing style sheets

		 

		 ]]></see>
</method>
<method name='selectedStyleSheetSet' fullname='dom.style.stylesheets:DocumentStyle/dom.style.stylesheets:DocumentStyle:selectedStyleSheetSet/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='StyleSheet' fullname='dom.style.stylesheets:StyleSheet' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\style\stylesheets\StyleSheet.as' namespace='dom.style.stylesheets' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The StyleSheet interface is the abstract base interface for any type of style sheet. It represents 

	 a single style sheet associated with a structured document. In HTML, the StyleSheet interface 

	 represents either an external style sheet, included via the HTML LINK element, or an inline STYLE 

	 element. In XML, this interface represents an external style sheet, included via a style sheet 

	 processing instruction.

	 

	 <p>All browser compatibility information was obtained via Quirksmode.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMStyle 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535871%28VS.85%29.aspx MSDN: StyleSheet

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet MDC - stylesheet

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet W3C - DOM Level 2 Style: StyleSheet

	 

	 ]]></see>
</classRec>
<method name='disabled' fullname='dom.style.stylesheets:StyleSheet/disabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 This property indicates whether the current stylesheet is applied or not.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // if the stylesheet is disabled... 

		 if (stylesheet.disabled) {

		 	// apply style in-line 

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533732%28VS.85%29.aspx MSDN: disabled Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.disabled MDC - stylesheet: disabled Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet W3C - DOM Level 2 Style: StyleSheet

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 

		 ]]></see>
</method>
<method name='href' fullname='dom.style.stylesheets:StyleSheet/href/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 If the style sheet is a linked style sheet, the value of its attribute is its location. For inline 

		 style sheets, the value of this attribute is null.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // on a local machine: 

		 &lt;html&gt; 

		 	&lt;head&gt; 

		 		&lt;link rel="StyleSheet" href="example.css" type="text/css" /&gt; 

		 		&lt;script&gt; 

		 			function sref() { 

		 				alert(document.styleSheets[0].href); 

		 			}

		 		&lt;/script&gt; 

		 	&lt;/head&gt; 

		 	&lt;body&gt; 

		 		&lt;div class="thunder"&gt;Thunder&lt;/div&gt;

		 

		 		&lt;button onclick="sref()"&gt;ss&lt;/button&gt;

		 	&lt;/body&gt; 

		 &lt;/html&gt;

		 // returns "file:////C:/Windows/Desktop/example.css</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533860%28VS.85%29.aspx MSDN: href Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.href MDC - stylesheet: href Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet W3C - DOM Level 2 Style: StyleSheet

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 

		 ]]></see>
</method>
<method name='media' fullname='dom.style.stylesheets:StyleSheet/media/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Specifies the intended destination medium for style information. 

		 

		 <strong>DOM 1 Spec</strong>

		 <p>A string describing a single medium or a comma-separated list.</p>

		 

		 <strong>DOM Level 2 Style Spec</strong>

		 <p>The intended destination media for style information. The media is often specified in the ownerNode. 

		 If no media has been specified, the MediaList will be empty.</p>

		 

		 <p><strong>Note:</strong> According to DOM Level 2 Style specification, the Media property is supposed to be Read-Only and return an 

		 instance of the MediaList object. Most browsers handle this property as it was specified in DOM Level 1.</p>

		 

		 <p><strong>Note:</strong> Acceptable values are as listed:</p>

		 <ul>

		 	<li>screen - Intended for non-paged computer screens.</li>

		 	<li>tty - Intended for media using a fixed-pitch character grid, such as teletypes, terminals, or portable devices with limited display capabilities.</li>

		 	<li>tv - Intended for television-type devices (low resolution, color, limited scrollability).</li>

		 	<li>projection - Intended for projectors.</li>

		 	<li>handheld - Intended for handheld devices (small screen, monochrome, bitmapped graphics, limited bandwilih).</li>

		 	<li>print - Intended for paged, opaque material and for documents viewed on screen in print preview mode.</li>

		 	<li>braille - Intended for braille tactile feedback devices.</li>

		 	<li>aural - Intended for speech synthesizers.</li>

		 	<li>all - Suitable for all devices. </li>

		 </ul>

		 

		 ]]></description>
<default><![CDATA["screen" for Firefox and "all" for Internet Explorer

		 

		 ]]></default>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534161%28VS.85%29.aspx MSDN: media Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.media MDC - stylesheet: media Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet W3C - DOM Level 2 Style: StyleSheet

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/1998/REC-html40-19980424/types.html#type-media-descriptors W3C - Media descriptors

		 

		 ]]></see>
</method>
<method name='ownerNode' fullname='dom.style.stylesheets:StyleSheet/ownerNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 The node that associates this style sheet with the document. For HTML, this may be the corresponding 

		 LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that 

		 are included by other style sheets, the value of this attribute is null.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;link rel="StyleSheet" href="example.css" type="text/css" /&gt;

		 		&lt;script&gt;

		 			function stilo() {

		 				alert(document.styleSheets[0].ownerNode);

		 			}

		 		&lt;/script&gt; 

		 	&lt;/head&gt;

		 

		 	&lt;body&gt; 

		 		&lt;div class="thunder"&gt;Thunder&lt;/div&gt;

		 

		 		&lt;button onclick="sref()"&gt;ss&lt;/button&gt;

		 	&lt;/body&gt; 

		 	// displays "object HTMLLinkElement"

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.ownerNode MDC - stylesheet: ownerNode Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet W3C - DOM Level 2 Style: StyleSheet

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 

		 ]]></see>
</method>
<method name='parentStyleSheet' fullname='dom.style.stylesheets:StyleSheet/parentStyleSheet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.stylesheets:StyleSheet'>
<description><![CDATA[

		 For style sheet languages that support the concept of style sheet inclusion, this attribute represents 

		 the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style 

		 sheet language does not support inclusion, the value of this attribute is null.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // find the top level stylesheet

		 if (stylesheet.parentStyleSheet) {

		 	sheet = stylesheet.parentStyleSheet;

		 } else {

		 	sheet = stylesheet;

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534329%28VS.85%29.aspx MSDN: parentStyleSheet Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.parentStyleSheet MDC - stylesheet: parentStyleSheet Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet W3C - DOM Level 2 Style: StyleSheet

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_css.html#access Quirksmode: Accessing style sheets

		 

		 ]]></see>
</method>
<method name='title' fullname='dom.style.stylesheets:StyleSheet/title/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The advisory title.

		 

		 <p><strong>Note:</strong> The title is often specified in the ownerNode.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534682%28VS.85%29.aspx MSDN: title Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.title MDC - stylesheet: title Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet W3C - DOM Level 2 Style: StyleSheet

		 

		 ]]></see>
</method>
<method name='type' fullname='dom.style.stylesheets:StyleSheet/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This specifies the style sheet language for this style sheet. The style sheet language is 

		 specified as a content type. The content type is often specified in the ownerNode.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>ss.type = "text/css";</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMStyle 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534699%28VS.85%29.aspx MSDN: type Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/stylesheet.type MDC - stylesheet: type Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet W3C - DOM Level 2 Style: StyleSheet

		 

		 ]]></see>
</method>
<method name='media' fullname='dom.style.stylesheets:StyleSheet/media/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='Sidebar' fullname='gecko.dom.objects:Sidebar' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\gecko\dom\objects\Sidebar.as' namespace='gecko.dom.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 ]]></description>
<internal><![CDATA[http://developer.mozilla.org/en/DOM/window.sidebar

	 ]]></internal>
</classRec>
<method name='addMicrosummaryGenerator' fullname='gecko.dom.objects:Sidebar/addMicrosummaryGenerator' isStatic='false' isFinal='false' isOverride='false'  param_names='generatorURL' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>Firefox 2+</strong>

		 

		 Installs a microsummary generator.

		 

		 ]]></description>
<param><![CDATA[generatorURL

		 ]]></param>
</method>
<method name='addPanel' fullname='gecko.dom.objects:Sidebar/addPanel' isStatic='false' isFinal='false' isOverride='false'  param_names='title;contentURL;customizeURL' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Note: the third empty parameter is required! 

		 

		 ]]></description>
<param><![CDATA[title

		 ]]></param>
<param><![CDATA[contentURL

		 ]]></param>
<param><![CDATA[customizeURL

		 ]]></param>
</method>
<method name='addPersistentPanel' fullname='gecko.dom.objects:Sidebar/addPersistentPanel' isStatic='false' isFinal='false' isOverride='false'  param_names='title;contentURL;customizeURL' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 ]]></description>
<param><![CDATA[title

		 ]]></param>
<param><![CDATA[contentURL

		 ]]></param>
<param><![CDATA[customizeURL

		 ]]></param>
</method>
<method name='addSearchEngine' fullname='gecko.dom.objects:Sidebar/addSearchEngine' isStatic='false' isFinal='false' isOverride='false'  param_names='engineURL;iconURL;suggestedTitle;suggestedCategory' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 Installs a search engine.

		 

		 ]]></description>
<param><![CDATA[engineURL

		 ]]></param>
<param><![CDATA[iconURL

		 ]]></param>
<param><![CDATA[suggestedTitle

		 ]]></param>
<param><![CDATA[suggestedCategory

		 ]]></param>
</method>
<classRec name='RangeExceptionCode' fullname='dom.tr.range:RangeExceptionCode' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\tr\range\RangeExceptionCode.as' namespace='dom.tr.range' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An integer indicating the type of error generated.

	 

	 ]]></description>
<playerversion><![CDATA[DOMTR 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#RangeException W3C - DOM Level 2 Range: RangeExceptionCode

	 

	 ]]></see>
</classRec>
<field name='BAD_BOUNDARYPOINTS_ERR' fullname='dom.tr.range:RangeExceptionCode/BAD_BOUNDARYPOINTS_ERR' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 If the boundary-points of a Range do not meet specific requirements.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='INVALID_NODE_TYPE_ERR' fullname='dom.tr.range:RangeExceptionCode/INVALID_NODE_TYPE_ERR' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 If the container of an boundary-point of a Range is being set to either a node of an invalid type or a node with an ancestor of an invalid type.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<classRec name='RangeException' fullname='dom.tr.range:RangeException' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\tr\range\RangeException.as' namespace='dom.tr.range' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Range operations may throw a RangeException as specified in their method descriptions.

	 

	 ]]></description>
<playerversion><![CDATA[DOMTR 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#RangeException W3C - DOM Level 2 Range: RangeException

	 

	 ]]></see>
</classRec>
<method name='code' fullname='dom.tr.range:RangeException/code/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
</method>
<interfaceRec name='DocumentRange' fullname='dom.tr.range:DocumentRange' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\tr\range\DocumentRange.as' namespace='dom.tr.range' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Contains a method to create a range object.

	 

	 ]]></description>
<playerversion><![CDATA[DOMTR 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document MDC - Document

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-DocumentRange-idl W3C - DOM Level 2 Range: DocumentRange

	 

	 ]]></see>
</interfaceRec>
<method name='createRange' fullname='dom.tr.range:DocumentRange/dom.tr.range:DocumentRange:createRange' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.tr.range:Range'>
<description><![CDATA[

		 This interface can be obtained from the object implementing the Document interface using binding-specific 

		 casting methods. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var range = document.createRange();

		 range.setStart(startNode, startOffset);

		 range.setEnd(endNode, endOffset);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The initial state of the Range returned from this method is such that both of its boundary-points 

		 are positioned at the beginning of the corresponding Document, before any content. The Range returned can 

		 only be used to select content associated with this Document, or with DocumentFragments and Attrs for which 

		 this Document is the ownerDocument.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536394%28VS.85%29.aspx  MSDN: createRange Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createRange  MDC - Document: createRange Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-DocumentRange-idl W3C - DOM Level 2 Range: DocumentRange

		 

		 ]]></see>
</method>
<classRec name='Range' fullname='dom.tr.range:Range' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\tr\range\Range.as' namespace='dom.tr.range' access='public' baseclass='Object' interfaces='cssom.view:RangeView' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The Range object represents a fragment of a document that can contain nodes and parts of text nodes in a given document. 

	 

	 <p>A range can be created using the createRange method of the Document object. Range objects can also be retrieved by using 

	 the getRangeAt method of the selection object. </p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMTR 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range MDC - range

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-idl W3C - DOM Level 2 Range: Range

	 

	 ]]></see>
</classRec>
<method name='cloneContents' fullname='dom.tr.range:Range/cloneContents' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DocumentFragment'>
<description><![CDATA[

		 Duplicates the contents of a Range.

		 

		 <p><strong>Note:</strong> Event Listeners added using DOM Events are not copied during cloning. HTML attribute events 

		 are duplicated as they are for the DOM Core cloneNode method. HTML id attributes are also cloned, which can lead to an 

		 invalid document through cloning.</p>

		 

		 <p><strong>Note:</strong> Partially selected nodes include the parent tags necessary to make the document fragment valid.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 documentFragment = range.cloneContents();

		 document.body.appendChild(documentFragment);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A DocumentFragment that contains content equivalent to this Range.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.cloneContents  MDC - range.cloneContents()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-cloneContents W3C - DOM Level 2 Range: Range.cloneContents()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be extracted 

		 into the new DocumentFragment.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='cloneRange' fullname='dom.tr.range:Range/cloneRange' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.tr.range:Range'>
<description><![CDATA[

		 Produces a new Range whose boundary-points are equal to the boundary-points of the Range. 

		 

		 <p><strong>Note:</strong> clone is copied by value, not reference, so a change in either Range does not effect the other. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 clone = range.cloneRange();</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The duplicated Range.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.cloneRange  MDC - range.cloneRange()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-clone W3C - DOM Level 2 Range: Range.cloneRange()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='collapse' fullname='dom.tr.range:Range/collapse' isStatic='false' isFinal='false' isOverride='false'  param_names='toStart' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Collapse a Range onto one of its boundary-points 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 referenceNode = document.getElementsByTagName("div").item(0);

		 range.selectNode(referenceNode);

		 range.collapse(true);</listing>

		 

		 ]]></example>
<param><![CDATA[toStart If TRUE, collapses the Range onto its start; if FALSE, collapses it onto its end.

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.collapse  MDC - range.collapse()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-collapse W3C - DOM Level 2 Range: Range.collapse()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='compareBoundaryPoints' fullname='dom.tr.range:Range/compareBoundaryPoints' isStatic='false' isFinal='false' isOverride='false'  param_names='how;sourceRange' param_types='Number;dom.tr.range:Range' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 Compare the boundary-points of two Ranges in a document. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var range, sourceRange, compare;

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div")[0]);

		 sourceRange = document.createRange();

		 sourceRange.selectNode(document.getElementsByTagName("div")[1]);

		 compare = range.compareBoundaryPoints(Range.START_TO_END, sourceRange);</listing>

		 

		 ]]></example>
<param><![CDATA[how A code representing the type of comparison, as defined above.

		 ]]></param>
<param><![CDATA[sourceRange The Range on which this current Range is compared to.

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[-1, 0 or 1 depending on whether the corresponding boundary-point of the Range is 

		 respectively before, equal to, or after the corresponding boundary-point of sourceRange.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.compareBoundaryPoints  MDC - range.compareBoundaryPoints()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-compareBoundaryPoints W3C - DOM Level 2 Range: Range.compareBoundaryPoints()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if the two Ranges are not in the same Document or DocumentFragment.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='compareNode' fullname='dom.tr.range:Range/compareNode' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode' param_types='dom.core:Node' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Returns a constant (see notes). 

		 

		 <p><strong>Note:</strong> This method is obsolete; you should use the W3C DOM Range methods (see compareBoundaryPoints()).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 returnValue = range.compareNode(document.getElementsByTagName("p").item(0));</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.compareNode  MDC - range.compareNode()

		 ]]></see>
<see><![CDATA[dom.tr.range.Range#NODE_BEFORE

		 ]]></see>
<see><![CDATA[dom.tr.range.Range#NODE_AFTER

		 ]]></see>
<see><![CDATA[dom.tr.range.Range#NODE_BEFORE_AND_AFTER

		 ]]></see>
<see><![CDATA[dom.tr.range.Range#NODE_INSIDE

		 ]]></see>
<see><![CDATA[dom.tr.range.Range#compareBoundaryPoints()

		 

		 ]]></see>
<as-of><![CDATA[Gecko 1.9

		 ]]></as-of>
</method>
<method name='comparePoint' fullname='dom.tr.range:Range/comparePoint' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode;offset' param_types='dom.core:Node;Number' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 If the referenceNode is a Node of type Text, Comment, or CDATASection, then offset is the number of characters 

		 from the start of referenceNode. For other Node types, offset is the number of child nodes between the start of the referenceNode.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 returnValue = range.comparePoint(document.getElementsByTagName("p").item(0),1);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode The Node to compare with the Range. 

		 ]]></param>
<param><![CDATA[offset An integer greater than or equal to zero representing the offset inside the referenceNode. 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<return><![CDATA[Returns -1, 0, or 1 depending on whether the referenceNode is before, the same as, or after the range. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.comparePoint  MDC - range.comparePoint()

		 

		 ]]></see>
</method>
<method name='createContextualFragment' fullname='dom.tr.range:Range/createContextualFragment' isStatic='false' isFinal='false' isOverride='false'  param_names='tagString' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:DocumentFragment'>
<description><![CDATA[

		 This method takes a string and uses Mozilla's parser to convert it to a DOM tree.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var tagString = "&lt;div&gt;I am a div node&lt;/div&gt;";

		 var range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 var documentFragment = range.createContextualFragment(tagString);

		 document.body.appendChild(documentFragment);</listing>

		 

		 ]]></example>
<param><![CDATA[tagString Text that contains text and tags to be converted to a document fragment. 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<return><![CDATA[Returns a document fragment. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.createContextualFragment  MDC - range.createContextualFragment()

		 

		 ]]></see>
</method>
<method name='deleteContents' fullname='dom.tr.range:Range/deleteContents' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Removes the contents of a Range from the containing document or document fragment without returning a reference 

		 to the removed content. 

		 

		 <p><strong>Note:</strong> Unlike extractContents, this method does not return a documentFragment containing the deleted content. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 range.deleteContents();</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.deleteContents  MDC - range.deleteContents()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-deleteContents W3C - DOM Level 2 Range: Range.deleteContents()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of the Range is 

		 read-only or any of the nodes that contain any of the content of the Range are read-only.

		 

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='detach' fullname='dom.tr.range:Range/detach' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Called to indicate that the Range is no longer in use and that the implementation may relinquish any resources 

		 associated with this Range. Subsequent calls to any methods or attribute getters on this Range will result in 

		 a DOMException being thrown with an error code of INVALID_STATE_ERR. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 range.detach();</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.detach  MDC - range.detach()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-detach W3C - DOM Level 2 Range: Range.detach()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='extractContents' fullname='dom.tr.range:Range/extractContents' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:DocumentFragment'>
<description><![CDATA[

		 Moves the contents of a Range from the containing document or document fragment to a new DocumentFragment. 

		 

		 <p><strong>Note:</strong> Event Listeners added using DOM Events are not retained during extraction. HTML 

		 attribute events are retained or duplicated as they are for the DOM Core cloneNode method. HTML id attributes 

		 are also cloned, which can lead to an invalid document if a partially-selected node is extracted and appened 

		 to the document. </p>

		 

		 <p><strong>Note:</strong> Partially selected nodes are cloned to include the parent tags necessary to make the document fragment valid. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 documentFragment = range.extractContents();

		 document.body.appendChild(documentFragment);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[A DocumentFragment containing the extracted contents.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.extractContents  MDC - range.extractContents()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-extractContents W3C - DOM Level 2 Range: Range.extractContents()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of the Range is 

		 read-only or any of the nodes which contain any of the content of the Range are read-only.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be extracted into the 

		 new DocumentFragment.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='getBoundingClientRect' fullname='dom.tr.range:Range/getBoundingClientRect' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:TextRectangle'>
<description><![CDATA[

		 

		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMTR 2

		 

		 ]]></since>
<return><![CDATA[The returned value is a TextRectangle object which is the union 

		 of the rectangles returned by getClientRects() for the element, i.e., 

		 the CSS border-boxes associated with the element.

		 

		 ]]></return>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#rangeview-getboundingclientrect  W3C - CSSOM View: RangeView.getBoundingClientRect()

		 ]]></see>
<see><![CDATA[cssom.view.ElementView#getBoundingClientRect() ElementView.getBoundingClientRect()

		 

		 ]]></see>
</method>
<method name='getClientRects' fullname='dom.tr.range:Range/getClientRects' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:TextRectangleList'>
<description><![CDATA[

		 

		 Retrieves a collection of rectangles that describes the layout of the 

		 contents of an object or range within the client. Each rectangle 

		 describes a single line.

		 

		 ]]></description>
<playerversion><![CDATA[CSSOMView 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMTR 2

		 

		 ]]></since>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#rangeview-getclientrects  W3C - CSSOM View: RangeView.getClientRects()

		 ]]></see>
<see><![CDATA[cssom.view.ElementView#getClientRects() ElementView.getClientRects()

		 

		 ]]></see>
</method>
<method name='insertNode' fullname='dom.tr.range:Range/insertNode' isStatic='false' isFinal='false' isOverride='false'  param_names='newNode' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Inserts a node into the Document or DocumentFragment at the start of the Range.

		 

		 <p>If the container is a 

		 Text node, this will be split at the start of the Range (as if the Text node's splitText method was 

		 performed at the insertion point) and the insertion will occur between the two resulting Text nodes. 

		 Adjacent Text nodes will not be automatically merged. If the node to be inserted is a DocumentFragment 

		 node, the children will be inserted rather than the DocumentFragment node itself. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 newNode = document.createElement("p");

		 newNode.appendChild(document.createTextNode("New Node Inserted Here"));

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 range.insertNode(newNode);</listing>

		 

		 ]]></example>
<param><![CDATA[newNode The node to insert at the start of the Range

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.insertNode  MDC - range.insertNode()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-insertNode W3C - DOM Level 2 Range: Range.insertNode()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of the start of the Range is read-only.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if newNode and the container of the start of the Range were not created from the same document.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if the container of the start of the Range is of a type that does not allow children of the type of newNode or if newNode is an ancestor of the container.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 ]]></throws>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if newNode is an Attr, Entity, Notation, or Document node.

		 

		 ]]></throws>
</method>
<method name='intersectsNode' fullname='dom.tr.range:Range/intersectsNode' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode' param_types='dom.core:Node' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Returns a boolean indicating whether the given node intersects the range. 

		 

		 <p><strong>Note:</strong> This method is obsolete; you should instead use the W3C DOM Range methods (see compareBoundaryPoints()).</p>

		 

		 <p><strong>Warning:</strong> This method has been removed from Gecko 1.9 and will not exist in future versions of Firefox; you should switch to compareBoundaryPoints() as soon as possible.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 bool = range.intersectsNode(document.getElementsByTagName("p").item(0));</listing>

		 

		 ]]></example>
<param><![CDATA[refNode The Node to compare with the Range. 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<return><![CDATA[Returns a boolean indicating whether the given node intersects the range. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.intersectsNode  MDC - range.intersectsNode()

		 ]]></see>
<see><![CDATA[dom.tr.range.Range#compareBoundaryPoints()

		 

		 ]]></see>
</method>
<method name='isPointInRange' fullname='dom.tr.range:Range/isPointInRange' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode;offset' param_types='dom.core:Node;Number' param_defaults='undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 Returns true if the point (cursor position) at offset within ReferenceNode is within this range.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 bool = range.isPointInRange(document.getElementsByTagName("p").item(0),1);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode The Node to compare with the Range. 

		 ]]></param>
<param><![CDATA[offset The offset into Node of the point to compare with the Range. 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<return><![CDATA[Returns a boolean indicating whether the given point is in the range. 

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.isPointInRange  MDC - range.isPointInRange()

		 

		 ]]></see>
</method>
<method name='selectNode' fullname='dom.tr.range:Range/selectNode' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Select a node and its contents 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 referenceNode = document.getElementsByTagName("div").item(0);

		 range.selectNode(referenceNode);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode The node to select.

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.selectNode  MDC - range.selectNode()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-selectNode W3C - DOM Level 2 Range: Range.selectNode()

		 

		 ]]></see>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if an ancestor of refNode is an Entity, Notation or DocumentType node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='selectNodeContents' fullname='dom.tr.range:Range/selectNodeContents' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Select the contents within a node 

		 

		 <p><strong>Note:</strong> The parent Node of the start and end of the Range will be the referenceNode. The startOffset is 0, and the endOffset is the number of child Nodes or number of characters contained in the reference node. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 referenceNode = document.getElementsByTagName("div")[0];

		 range.selectNodeContents(referenceNode);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode Node to select from

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.selectNodeContents  MDC - range.selectNodeContents()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-selectNodeContents W3C - DOM Level 2 Range: Range.selectNodeContents()

		 

		 ]]></see>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if refNode or an ancestor of refNode is an Entity, Notation or DocumentType node.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='setEnd' fullname='dom.tr.range:Range/setEnd' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode;offset' param_types='dom.core:Node;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Sets the attributes describing the end of a Range. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 endNode = document.getElementsByTagName("p").item(3);

		 endOffset = document.getElementsByTagName("p").item(3).childNodes.length;

		 range.setEnd(endNode,endOffset);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode The refNode value. This parameter must be different from null.

		 ]]></param>
<param><![CDATA[offset The endOffset value.

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.setEnd  MDC - range.setEnd()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-setEnd W3C - DOM Level 2 Range: Range.setEnd()

		 

		 ]]></see>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if refNode or an ancestor of refNode is an Entity, Notation, or DocumentType node.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if offset is negative or greater than the number of child units in refNode. Child units are 16-bit units if refNode is a type of CharacterData node (e.g., a Text or Comment node) or a ProcessingInstruction node. Child units are Nodes in all other cases.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='setEndAfter' fullname='dom.tr.range:Range/setEndAfter' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets the end of a Range to be after a node 

		 

		 <p><strong>Note:</strong> The parent Node of end of the Range will be the same as that for the referenceNode. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 referenceNode = document.getElementsByTagName("div").item(0);

		 range.setEndAfter(referenceNode);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode Range ends after refNode.

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.setEndAfter  MDC - range.setEndAfter()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-setEndAfter W3C - DOM Level 2 Range: Range.setEndAfter()

		 

		 ]]></see>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if the root container of refNode is not an Attr, Document or DocumentFragment node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='setEndBefore' fullname='dom.tr.range:Range/setEndBefore' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets the end position to be before a node. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 referenceNode = document.getElementsByTagName("div").item(0);

		 range.setEndBefore(referenceNode);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode Range ends before refNode

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.setEndBefore  MDC - range.setEndBefore()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-setEndBefore W3C - DOM Level 2 Range: Range.setEndBefore()

		 

		 ]]></see>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if the root container of refNode is not an Attr, Document, or DocumentFragment node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='setStart' fullname='dom.tr.range:Range/setStart' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode;offset' param_types='dom.core:Node;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Sets the attributes describing the start of the Range. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 startNode = document.getElementsByTagName("p").item(2);

		 startOffset = 0;

		 range.setStart(startNode,startOffset);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode The refNode value. This parameter must be different from null.

		 ]]></param>
<param><![CDATA[offset The startOffset value.

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.setStart  MDC - range.setStart()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-setStart W3C - DOM Level 2 Range: Range.setStart()

		 

		 ]]></see>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if refNode or an ancestor of refNode is an Entity, Notation, or DocumentType node.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if offset is negative or greater than the number of child units in refNode. Child units are 16-bit units if refNode is a type of CharacterData node (e.g., a Text or Comment node) or a ProcessingInstruction node. Child units are Nodes in all other cases.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='setStartAfter' fullname='dom.tr.range:Range/setStartAfter' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets the start position to be after a node 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 referenceNode = document.getElementsByTagName("div").item(0);

		 range.setStartAfter(referenceNode);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode Range starts after refNode

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.setStartAfter  MDC - range.setStartAfter()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-setStartAfter W3C - DOM Level 2 Range: Range.setStartAfter()

		 

		 ]]></see>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if the root container of refNode is not an Attr, Document, or DocumentFragment node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='setStartBefore' fullname='dom.tr.range:Range/setStartBefore' isStatic='false' isFinal='false' isOverride='false'  param_names='refNode' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Sets the start position to be before a node 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 referenceNode = document.getElementsByTagName("div").item(0);

		 range.setStartBefore(referenceNode);</listing>

		 

		 ]]></example>
<param><![CDATA[refNode Range starts before refNode

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.setStartBefore  MDC - range.setStartBefore()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-setStartBefore W3C - DOM Level 2 Range: Range.setStartBefore()

		 

		 ]]></see>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if the root container of refNode is not an Attr, Document, or DocumentFragment node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='surroundContents' fullname='dom.tr.range:Range/surroundContents' isStatic='false' isFinal='false' isOverride='false'  param_names='newParent' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Reparents the contents of the Range to the given node and inserts the node at the position of the start of the Range. 

		 

		 <p><strong>Note:</strong> surroundContents is equivalent to newNode.appendChild(range.extractContents()); range.insertNode(newNode). After surrounding, the boundary points of the range include newNode.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var range = document.createRange();

		 var newNode = document.createElement("p");

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 range.surroundContents(newNode);</listing>

		 

		 ]]></example>
<param><![CDATA[newParent The node to surround the contents with.

		 

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.surroundContents  MDC - range.surroundContents()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-surroundContents W3C - DOM Level 2 Range: Range.surroundContents()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of either boundary-point of the Range is read-only.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException WRONG_DOCUMENT_ERR: Raised if newParent and the container of the start of the Range were not created from the same document.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: Raised if the container of the start of the Range is of a type that does not allow children of the type of newParent or if newParent is an ancestor of the container or if node would end up with a child node of a type not allowed by the type of node.

		 ]]></throws>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 ]]></throws>
<throws><![CDATA[dom.tr.range.RangeException BAD_BOUNDARYPOINTS_ERR: Raised if the Range partially selects a non-text node.

		 ]]></throws>
<throws><![CDATA[dom.tr.range.RangeException INVALID_NODE_TYPE_ERR: Raised if node is an Attr, Entity, DocumentType, Notation, Document, or DocumentFragment node.

		 

		 ]]></throws>
</method>
<method name='toString' fullname='dom.tr.range:Range/toString' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the contents of a Range as a string. This string contains only the data characters, not any markup. 

		 

		 <p><strong>Note:</strong> Alerting the contents of a Range makes an implicit toString() call, so comparing range and text through an alert dialog is ineffective </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.selectNode(document.getElementsByTagName("div").item(0));

		 text = range.toString();</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The contents of the Range.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.toString  MDC - range.toString()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-toString W3C - DOM Level 2 Range: Range.toString()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='collapsed' fullname='dom.tr.range:Range/collapsed/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a boolean of true if the start and end boundary points of the Range are the same point in the DOM, false if not.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.setStart(startNode, startOffset); 

		 range.setEnd(endNode, endOffset);

		 isCollapsed = range.collapsed;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.collapsed  MDC - range.collapsed

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-collapsed W3C - DOM Level 2 Range: Range.collapsed

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='commonAncestorContainer' fullname='dom.tr.range:Range/commonAncestorContainer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 The deepest common ancestor container of the Range's two boundary-points.

		 

		 <p><strong>Note:</strong> Returns the deepest, or further down the document tree, Node that contains both the startContainer and 

		 endContainer nodes. Since a Range need not be continuous, and may also partially select Nodes, this is a convenient way to find 

		 a Node which encloses a Range. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.setStart(startNode,startOffset);

		 range.setEnd(endNode,endOffset);

		 rangeAncestor = range.commonAncestorContainer;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.commonAncestorContainer  MDC - range.commonAncestorContainer

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-commonParent W3C - DOM Level 2 Range: Range.commonAncestorContainer

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='endContainer' fullname='dom.tr.range:Range/endContainer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Node within which the Range ends

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.setStart(startNode,startOffset); 

		 range.setEnd(endNode,endOffset);

		 endRangeNode = range.endContainer;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.endContainer  MDC - range.endContainer

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-endParent W3C - DOM Level 2 Range: Range.endContainer

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='endOffset' fullname='dom.tr.range:Range/endOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Offset within the ending node of the Range.

		 

		 <p><strong>Note:</strong> endOffset has two meanings. If the endContainer is a Node of type Text, Comment, or CDATASection, 

		 then the offset is the number of characters from the start of the endContainer to the boundary point of the Range. For other 

		 Node types, the endOffset is the number of child nodes between the start of the endContainer and the boundary point of the Range.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.setStart(startNode,startOffset);

		 range.setEnd(endNode,endOffset);

		 endRangeOffset = range.endOffset;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.endOffset  MDC - range.endOffset

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-endOffset W3C - DOM Level 2 Range: Range.endOffset

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='startContainer' fullname='dom.tr.range:Range/startContainer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Node within which the Range begins.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.setStart(startNode,startOffset);

		 range.setEnd(endNode,endOffset);

		 startRangeNode = range.startContainer;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.startContainer  MDC - range.startContainer

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-startParent W3C - DOM Level 2 Range: Range.startContainer

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<method name='startOffset' fullname='dom.tr.range:Range/startOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Offset within the starting node of the Range.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 range = document.createRange();

		 range.setStart(startNode,startOffset);

		 range.setEnd(endNode,endOffset);

		 startRangeOffset = range.startOffset;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/range.startOffset  MDC - range.startOffset

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-startOffset W3C - DOM Level 2 Range: Range.startOffset

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.

		 

		 ]]></throws>
</method>
<field name='END_TO_END' fullname='dom.tr.range:Range/END_TO_END' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 Compare end boundary-point of sourceRange to end boundary-point of Range on which 

		 compareBoundaryPoints is invoked.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='END_TO_START' fullname='dom.tr.range:Range/END_TO_START' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 Compare end boundary-point of sourceRange to start boundary-point of Range on which 

		 compareBoundaryPoints is invoked.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='NODE_AFTER' fullname='dom.tr.range:Range/NODE_AFTER' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 Node ends after the Range 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[dom.tr.range.Range#compareNode()

		 

		 ]]></see>
</field>
<field name='NODE_BEFORE' fullname='dom.tr.range:Range/NODE_BEFORE' type='Number' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[

		 Node starts before the Range 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[dom.tr.range.Range#compareNode()

		 

		 ]]></see>
</field>
<field name='NODE_BEFORE_AND_AFTER' fullname='dom.tr.range:Range/NODE_BEFORE_AND_AFTER' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 Node starts before and ends after the Range 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[dom.tr.range.Range#compareNode()

		 

		 ]]></see>
</field>
<field name='NODE_INSIDE' fullname='dom.tr.range:Range/NODE_INSIDE' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 Node starts after and ends before the Range, i.e. the Node is completely selected by the Range. 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[dom.tr.range.Range#compareNode()

		 

		 ]]></see>
<as-of><![CDATA[Gecko 1.9

		 ]]></as-of>
</field>
<field name='START_TO_END' fullname='dom.tr.range:Range/START_TO_END' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 Compare start boundary-point of sourceRange to end boundary-point of Range on which 

		 compareBoundaryPoints is invoked.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='START_TO_START' fullname='dom.tr.range:Range/START_TO_START' type='Number' isStatic='true' isConst='true' defaultValue='0' >
<description><![CDATA[

		 Compare start boundary-point of sourceRange to start boundary-point of Range on which 

		 compareBoundaryPoints is invoked.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<interfaceRec name='DocumentView' fullname='dom.views:DocumentView' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\views\DocumentView.as' namespace='dom.views' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The DocumentView interface is implemented by Document objects in DOM 

	 implementations supporting DOM Views. It provides an attribute to 

	 retrieve the default view of a document.

	 

	 ]]></description>
<playerversion><![CDATA[DOMViews 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-DocumentView W3C - DocumentView

	 

	 ]]></see>
</interfaceRec>
<method name='defaultView' fullname='dom.views:DocumentView/dom.views:DocumentView:defaultView/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.views:AbstractView'>
<description><![CDATA[

		 The default AbstractView for this Document, or null if none available.

		 

		 <p><strong>Note:</strong> document.defaultView is generally a reference to the window object 

		 for the document, however that is not defined in the specification and can't be relied upon 

		 for all host environments, particularly as not all browsers implement it.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMViews 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.defaultView MDC - Document.defaultView

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-DocumentView-defaultView W3C - DocumentView.defaultView

		 

		 ]]></see>
</method>
<interfaceRec name='AbstractView' fullname='dom.views:AbstractView' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\views\AbstractView.as' namespace='dom.views' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A base interface that all views shall derive from.

	 

	 ]]></description>
<playerversion><![CDATA[DOMViews 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-AbstractView W3C - DOM 2 Views: AbstractView

	 

	 ]]></see>
</interfaceRec>
<method name='document' fullname='dom.views:AbstractView/dom.views:AbstractView:document/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.views:DocumentView'>
<description><![CDATA[

		 The source DocumentView of which this is an AbstractView.

		 

		 ]]></description>
<playerversion><![CDATA[DOMViews 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</method>
<classRec name='NodeFilter' fullname='dom.tr.traversal:NodeFilter' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\tr\traversal\NodeFilter.as' namespace='dom.tr.traversal' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Filters are objects that know how to "filter out" nodes. 

	 

	 <p>If a <code>NodeIterator</code> or <code>TreeWalker</code> is given a <code>NodeFilter</code>, it 

	 applies the filter before it returns the next node. If the filter says to accept the node, the traversal logic 

	 returns it; otherwise, traversal looks for the next node and pretends that the node that was rejected was not there.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMTR 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeFilter W3C - DOM Level 2 Traversal: NodeFilter

	 

	 ]]></see>
</classRec>
<method name='acceptNode' fullname='dom.tr.traversal:NodeFilter/acceptNode' isStatic='false' isFinal='false' isOverride='false'  param_names='n' param_types='dom.core:Node' param_defaults='undefined' result_type='Number'>
<description><![CDATA[

		 Test whether a specified node is visible in the logical view of a TreeWalker or NodeIterator. This function will be 

		 called by the implementation of TreeWalker and NodeIterator; it is not normally called directly from user code. 

		 

		 ]]></description>
<param><![CDATA[n The node to check to see if it passes the filter or not.

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[A constant to determine whether the node is accepted, rejected, or skipped.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.filter  MDC - NodeIterator: filter Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeFilter  W3C - DOM Level 2 Traversal: acceptNode Method

		 

		 ]]></see>
</method>
<field name='FILTER_ACCEPT' fullname='dom.tr.traversal:NodeFilter/FILTER_ACCEPT' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 Accept the node. Navigation methods defined for NodeIterator or TreeWalker will return this node.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='FILTER_REJECT' fullname='dom.tr.traversal:NodeFilter/FILTER_REJECT' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 Reject the node. Navigation methods defined for NodeIterator or TreeWalker will not return this node. For 

		 TreeWalker, the children of this node will also be rejected. NodeIterators treat this as a synonym for 

		 FILTER_SKIP.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='FILTER_SKIP' fullname='dom.tr.traversal:NodeFilter/FILTER_SKIP' type='Number' isStatic='true' isConst='true' defaultValue='3' >
<description><![CDATA[

		 Skip this single node. Navigation methods defined for NodeIterator or TreeWalker will not return this node. 

		 For both NodeIterator and TreeWalker, the children of this node will still be considered.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_ALL' fullname='dom.tr.traversal:NodeFilter/SHOW_ALL' type='Number' isStatic='true' isConst='true' defaultValue='-1' >
<description><![CDATA[

		 Show all <code>Nodes</code>.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_ATTRIBUTE' fullname='dom.tr.traversal:NodeFilter/SHOW_ATTRIBUTE' type='Number' isStatic='true' isConst='true' defaultValue='2' >
<description><![CDATA[

		 Show <code>Attr</code> nodes. This is meaningful only when creating an iterator or tree-walker with an attribute node as 

		 its <code>root</code>; in this case, it means that the attribute node will appear in the first position of the iteration 

		 or traversal. Since attributes are never children of other nodes, they do not appear when traversing over 

		 the document tree.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_CDATA_SECTION' fullname='dom.tr.traversal:NodeFilter/SHOW_CDATA_SECTION' type='Number' isStatic='true' isConst='true' defaultValue='8' >
<description><![CDATA[

		 Show <code>CDATASection</code> nodes.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_COMMENT' fullname='dom.tr.traversal:NodeFilter/SHOW_COMMENT' type='Number' isStatic='true' isConst='true' defaultValue='128' >
<description><![CDATA[

		 Show <code>Comment</code> nodes.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_DOCUMENT' fullname='dom.tr.traversal:NodeFilter/SHOW_DOCUMENT' type='Number' isStatic='true' isConst='true' defaultValue='256' >
<description><![CDATA[

		 Show <code>Document</code> nodes.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_DOCUMENT_FRAGMENT' fullname='dom.tr.traversal:NodeFilter/SHOW_DOCUMENT_FRAGMENT' type='Number' isStatic='true' isConst='true' defaultValue='1024' >
<description><![CDATA[

		 Show <code>DocumentFragment</code> nodes.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_DOCUMENT_TYPE' fullname='dom.tr.traversal:NodeFilter/SHOW_DOCUMENT_TYPE' type='Number' isStatic='true' isConst='true' defaultValue='512' >
<description><![CDATA[

		 Show <code>DocumentType</code> nodes.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_ELEMENT' fullname='dom.tr.traversal:NodeFilter/SHOW_ELEMENT' type='Number' isStatic='true' isConst='true' defaultValue='1' >
<description><![CDATA[

		 Show Element nodes.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_ENTITY' fullname='dom.tr.traversal:NodeFilter/SHOW_ENTITY' type='Number' isStatic='true' isConst='true' defaultValue='32' >
<description><![CDATA[

		 Show <code>Entity</code> nodes. This is meaningful only when creating an iterator or tree-walker with an <code>Entity</code> node as 

		 its <code>root</code>; in this case, it means that the <code>Entity</code> node will appear in the first position of the traversal. 

		 Since entities are not part of the document tree, they do not appear when traversing over the document tree.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_ENTITY_REFERENCE' fullname='dom.tr.traversal:NodeFilter/SHOW_ENTITY_REFERENCE' type='Number' isStatic='true' isConst='true' defaultValue='16' >
<description><![CDATA[

		 Show <code>EntityReference</code> nodes.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_NOTATION' fullname='dom.tr.traversal:NodeFilter/SHOW_NOTATION' type='Number' isStatic='true' isConst='true' defaultValue='2048' >
<description><![CDATA[

		 Show <code>Notation</code> nodes. This is meaningful only when creating an iterator or tree-walker with a <code>Notation</code> node as 

		 its <code>root</code>; in this case, it means that the <code>Notation</code> node will appear in the first position of the traversal. 

		 Since notations are not part of the document tree, they do not appear when traversing over the document tree.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_PROCESSING_INSTRUCTION' fullname='dom.tr.traversal:NodeFilter/SHOW_PROCESSING_INSTRUCTION' type='Number' isStatic='true' isConst='true' defaultValue='64' >
<description><![CDATA[

		 Show <code>ProcessingInstruction</code> nodes.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<field name='SHOW_TEXT' fullname='dom.tr.traversal:NodeFilter/SHOW_TEXT' type='Number' isStatic='true' isConst='true' defaultValue='4' >
<description><![CDATA[

		 Show <code>Text</code> nodes.

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
</field>
<interfaceRec name='DocumentTraversal' fullname='dom.tr.traversal:DocumentTraversal' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\tr\traversal\DocumentTraversal.as' namespace='dom.tr.traversal' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Contains methods that create iterators and tree-walkers to traverse a node and its children in document order.

	 

	 ]]></description>
<playerversion><![CDATA[DOMTR 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document MDC - Document

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document W3C - DOM Level 2 Traversal: DocumentTraversal

	 

	 ]]></see>
</interfaceRec>
<method name='createNodeIterator' fullname='dom.tr.traversal:DocumentTraversal/dom.tr.traversal:DocumentTraversal:createNodeIterator' isStatic='false' isFinal='false' isOverride='false'  param_names='root;whatToShow;filter;entityReferenceExpansion' param_types='dom.core:Node;Number;dom.tr.traversal:NodeFilter;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='dom.tr.traversal:NodeIterator'>
<description><![CDATA[

		 Create a new NodeIterator over the subtree rooted at the specified node. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 var nodeList = new Array();

		 var currentNode;

		 

		 while (currentNode = nodeIterator.nextNode()) {

		 	nodeList.push(currentNode);

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[root The node which will be iterated together with its children. The iterator is initially positioned 

		 just before this node. The <code>whatToShow</code> flags and the filter, if any, are not considered when setting this position. The <code>root</code> must not be <code>null</code>.

		 ]]></param>
<param><![CDATA[whatToShow This flag specifies which node types may appear in the logical view of the tree presented 

		 by the iterator. These flags can be combined using OR.

		 ]]></param>
<param><![CDATA[filter The <code>NodeFilter</code> to be used with this <code>TreeWalker</code>, or <code>null</code> to indicate no filter.

		 ]]></param>
<param><![CDATA[entityReferenceExpansion The value of this flag determines whether entity reference nodes are expanded.

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The newly created NodeIterator.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.createNodeIterator  MDC - Document: createNodeIterator Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document  W3C - DOM Level 2 Traversal: createNodeIterator Method

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the specified <code>root</code> is <code>null</code>.

		 

		 ]]></throws>
</method>
<method name='createTreeWalker' fullname='dom.tr.traversal:DocumentTraversal/dom.tr.traversal:DocumentTraversal:createTreeWalker' isStatic='false' isFinal='false' isOverride='false'  param_names='root;whatToShow;filter;entityReferenceExpansion' param_types='dom.core:Node;Number;dom.tr.traversal:NodeFilter;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='dom.tr.traversal:TreeWalker'>
<description><![CDATA[

		 Create a new TreeWalker over the subtree rooted at the specified node. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var treeWalker = document.createTreeWalker(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 var nodeList = new Array();

		 while(treeWalker.nextNode()) nodeList.push(treeWalker.currentNode);</listing>

		 

		 ]]></example>
<param><![CDATA[root The node which will serve as the <code>root</code> for the TreeWalker. The whatToShow flags and the NodeFilter 

		 are not considered when setting this value; any node type will be accepted as the <code>root</code>. The <code>currentNode</code> of the 

		 TreeWalker is initialized to this node, whether or not it is visible. The <code>root</code> functions as a stopping point for 

		 traversal methods that look upward in the document structure, such as <code>parentNode</code> and nextNode. The <code>root</code> must not 

		 be <code>null</code>.

		 ]]></param>
<param><![CDATA[whatToShow This flag specifies which node types may appear in the logical view of the tree presented by 

		 the tree-walker. These flags can be combined using OR.

		 ]]></param>
<param><![CDATA[filter The <code>NodeFilter</code> to be used with this <code>TreeWalker</code>, or <code>null</code> to indicate no filter.

		 ]]></param>
<param><![CDATA[entityReferenceExpansion If this flag is false, the contents of <code>EntityReference</code> nodes are not presented in the logical view.

		 ]]></param>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The newly created <code>TreeWalker</code>.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.createNodeIterator  MDC - Document: createNodeIterator Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document  W3C - DOM Level 2 Traversal: createNodeIterator Method

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if the specified <code>root</code> is <code>null</code>.

		 

		 ]]></throws>
</method>
<interfaceRec name='TreeWalker' fullname='dom.tr.traversal:TreeWalker' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\tr\traversal\TreeWalker.as' namespace='dom.tr.traversal' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Represents the nodes of a document subtree and a position within them.

	 

	 <p>A <code>TreeWalker</code> can be created using the createTreeWalker()<code></code> method of the <code>Document</code> object.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMTR 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker MDC - treeWalker

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: TreeWalker

	 ]]></see>
<see><![CDATA[dom.core.Document#createTreeWalker()

	 

	 ]]></see>
</interfaceRec>
<method name='firstChild' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:firstChild' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Moves the <code>TreeWalker</code> to the first visible child of the current node, and returns the new node. If the current 

		 node has no visible children, returns <code>null</code>, and retains the current node. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The new node, or <code>null</code> if the current node has no visible children in the <code>TreeWalker</code>'s logical view.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.firstChild MDC - treeWalker: firstChild Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: firstChild Method

		 

		 ]]></see>
</method>
<method name='lastChild' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:lastChild' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Moves the <code>TreeWalker</code> to the last visible child of the current node, and returns the new node. If the current 

		 node has no visible children, returns <code>null</code>, and retains the current node. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The new node, or <code>null</code> if the current node has no children in the <code>TreeWalker</code>'s logical view.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.lastChild MDC - treeWalker: lastChild Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: lastChild Method

		 

		 ]]></see>
</method>
<method name='nextNode' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:nextNode' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Moves the <code>TreeWalker</code> to the next visible node in document order relative to the current node, and returns the 

		 new node. If the current node has no next node, or if the search for nextNode attempts to step upward from the 

		 <code>TreeWalker</code>'s root node, returns <code>null</code>, and retains the current node. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The new node, or <code>null</code> if the current node has no next node in the <code>TreeWalker</code>'s logical view.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.nextNode MDC - treeWalker: nextNode Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: nextNode Method

		 

		 ]]></see>
</method>
<method name='nextSibling' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:nextSibling' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Moves the <code>TreeWalker</code> to the next sibling of the current node, and returns the new node. If the current node has 

		 no visible next sibling, returns <code>null</code>, and retains the current node. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The new node, or <code>null</code> if the current node has no next sibling. in the <code>TreeWalker</code>'s logical view.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.nextSibling MDC - treeWalker: nextSibling Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: nextSibling Method

		 

		 ]]></see>
</method>
<method name='parentNode' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:parentNode' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Moves to and returns the closest visible ancestor node of the current node. If the search for <code>parentNode</code> attempts 

		 to step upward from the <code>TreeWalker</code>'s root node, or if it fails to find a visible ancestor node, this method 

		 retains the current position and returns <code>null</code>. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The new parent node, or <code>null</code> if the current node has no parent in the <code>TreeWalker</code>'s logical view.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.currentNode MDC - treeWalker: parentNode Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: parentNode Method

		 

		 ]]></see>
</method>
<method name='previousNode' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:previousNode' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Moves the <code>TreeWalker</code> to the previous visible node in document order relative to the current node, and returns the 

		 new node. If the current node has no previous node, or if the search for previousNode attempts to step upward from 

		 the <code>TreeWalker</code>'s root node, returns <code>null</code>, and retains the current node. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The new node, or <code>null</code> if the current node has no previous node in the <code>TreeWalker</code>'s logical view.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.previousNode MDC - treeWalker: previousNode Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: previousNode Method

		 

		 ]]></see>
</method>
<method name='previousSibling' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:previousSibling' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Moves the <code>TreeWalker</code> to the previous sibling of the current node, and returns the new node. If the current node has 

		 no visible previous sibling, returns <code>null</code>, and retains the current node. 

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The new node, or <code>null</code> if the current node has no previous sibling. in the <code>TreeWalker</code>'s logical view.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.previousSibling MDC - treeWalker: previousSibling Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: previousSibling Method

		 

		 ]]></see>
</method>
<method name='currentNode' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:currentNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 The node at which the <code>TreeWalker</code> is currently positioned.

		 

		 <p>Alterations to the DOM tree may cause the current node to no longer be accepted by the <code>TreeWalker</code>'s 

		 associated filter. currentNode may also be explicitly set to any node, whether or not it is within the 

		 subtree specified by the root node or would be accepted by the filter and <code>whatToShow</code> flags. Further 

		 traversal occurs relative to currentNode even if it is not part of the current view, by applying the 

		 filters in the requested direction; if no traversal is possible, currentNode is not changed.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.currentNode MDC - treeWalker: currentNode Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: currentNode Property

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: Raised if an attempt is made to set currentNode to <code>null</code>.

		 

		 ]]></throws>
</method>
<method name='expandEntityReferences' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:expandEntityReferences/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The value of this flag determines whether the children of entity reference nodes are visible to the <code>TreeWalker</code>. 

		 If false, they and their descendants will be rejected. Note that this rejection takes precedence over <code>whatToShow</code> 

		 and the filter, if any.

		 

		 <p>To produce a view of the document that has entity references expanded and does not expose the entity reference 

		 node itself, use the <code>whatToShow</code> flags to hide the entity reference node and set <code>expandEntityReferences</code> to true 

		 when creating the <code>TreeWalker</code>. To produce a view of the document that has entity reference nodes but no entity 

		 expansion, use the <code>whatToShow</code> flags to show the entity reference node and set <code>expandEntityReferences</code> to false.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.ExpandEntityReferences MDC - treeWalker: ExpandEntityReferences Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: ExpandEntityReferences Property

		 

		 ]]></see>
</method>
<method name='filter' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:filter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.tr.traversal:NodeFilter'>
<description><![CDATA[

		 The filter used to screen nodes.

		 

		 <p>Note: When creating the TreeWalker, the filter object is passed in as the third parameter, and the object 

		 method acceptNode(node) is called on every single node to determine whether or not to accept it. This function 

		 should return the constant NodeFilter.FILTER_ACCEPT for cases when the node should be accepted and 

		 NodeFilter.FILTER_REJECT for cases when the node should be rejected.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var treeWalker = document.createTreeWalker(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 nodeFilter = treeWalker.filter; // document.body in this case</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.filter MDC - treeWalker: filter Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: filter Property

		 

		 ]]></see>
</method>
<method name='root' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:root/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 The root node of the <code>TreeWalker</code>, as specified when it was created.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var treeWalker = document.createTreeWalker(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 root = treeWalker.root; // document.body in this case</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.root MDC - treeWalker: root Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: root Property

		 

		 ]]></see>
</method>
<method name='whatToShow' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:whatToShow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 This attribute determines which node types are presented via the <code>TreeWalker</code>. The available set of constants is 

		 defined in the NodeFilter interface. Nodes not accepted by <code>whatToShow</code> will be skipped, but their children may 

		 still be considered. Note that this skip takes precedence over the filter, if any.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var treeWalker = document.createTreeWalker(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 if((treeWalker.whatToShow == NodeFilter.SHOW_ALL) || 

		 	(treeWalker.whatToShow % (NodeFilter.SHOW_COMMENT)) >= NodeFilter.SHOW_COMMENT) {

		 	// treeWalker will show comments

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[dom.tr.traversal.NodeFilter NodeFilter

		 

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/treeWalker.whatToShow MDC - treeWalker: whatToShow Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: whatToShow Property

		 

		 ]]></see>
</method>
<method name='currentNode' fullname='dom.tr.traversal:TreeWalker/dom.tr.traversal:TreeWalker:currentNode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core:Node' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='NodeIterator' fullname='dom.tr.traversal:NodeIterator' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\tr\traversal\NodeIterator.as' namespace='dom.tr.traversal' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Allows you to iterate over the members of a list of the nodes in a subtree of the DOM, in document order.

	 

	 A <code>NodeIterator</code> can be created using the createNodeIterator()<code></code> method of the <code>Document</code> object, as follows:

	 

	 <listing>var nodeIterator = document.createNodeIterator();</listing>

	 

	 ]]></description>
<playerversion><![CDATA[DOMTR 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator MDC - NodeIterator

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker W3C - DOM Level 2 Traversal: NodeIterator

	 

	 ]]></see>
</interfaceRec>
<method name='detach' fullname='dom.tr.traversal:NodeIterator/dom.tr.traversal:NodeIterator:detach' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Detaches the NodeIterator from the set over which it iterates, releasing any resources used by the set 

		 and setting the iterator's state to INVALID.

		 

		 <p>Once this method has been called, calls to other methods on NodeIterator will raise the 

		 INVALID_STATE_ERR exception.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 nodeIterator.detach(); // detaches the iterator

		 

		 nodeIterator.nextNode(); // throws an INVALID_STATE_ERR exception</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.detach MDC - NodeIterator: detach Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator W3C - DOM Level 2 Traversal: detach Method

		 

		 ]]></see>
</method>
<method name='nextNode' fullname='dom.tr.traversal:NodeIterator/dom.tr.traversal:NodeIterator:nextNode' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the next node in the set represented by the NodeIterator and advances the position of the iterator within the set.  The first call to nextNode() returns the first node in the set.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 currentNode = nodeIterator.nextNode(); // returns the next node</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The next Node in the set being iterated over, or null if there are no more members in that set.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.nextNode MDC - NodeIterator: nextNode Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator W3C - DOM Level 2 Traversal: nextNode Method

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if this method is called after the detach method was invoked.

		 

		 ]]></throws>
</method>
<method name='previousNode' fullname='dom.tr.traversal:NodeIterator/dom.tr.traversal:NodeIterator:previousNode' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the previous node in the set and moves the position of the NodeIterator backwards in the set.

		 

		 <p>This method returns null when the current node is the first node in the set.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 currentNode = nodeIterator.nextNode(); // returns the next node

		 previousNode = nodeIterator.previousNode(); // same result, since we backtracked to the previous node</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<return><![CDATA[The previous Node in the set being iterated over, or null if there are no more members in that set.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.previousNode MDC - NodeIterator: previousNode Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator W3C - DOM Level 2 Traversal: previousNode Method

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException INVALID_STATE_ERR: Raised if this method is called after the detach method was invoked.

		 

		 ]]></throws>
</method>
<method name='expandEntityReferences' fullname='dom.tr.traversal:NodeIterator/dom.tr.traversal:NodeIterator:expandEntityReferences/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Returns a flag indicating whether or not the children of entity reference nodes are visible to the NodeIterator.

		 

		 <p>If this value is false, the children of entity reference nodes (as well as all of their descendants) are rejected.  

		 This takes precedence over the whatToShow value and the filter.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 expand = nodeIterator.expandEntityReferences;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.expandEntityReferences MDC - NodeIterator: expandEntityReferences Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator W3C - DOM Level 2 Traversal: expandEntityReferences Property

		 

		 ]]></see>
</method>
<method name='filter' fullname='dom.tr.traversal:NodeIterator/dom.tr.traversal:NodeIterator:filter/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.tr.traversal:NodeFilter'>
<description><![CDATA[

		 Returns an object with a method acceptNode(node). This is the NodeFilter used to screen nodes.

		 

		 <p>Note: When creating the NodeIterator, the filter object is passed in as the third parameter, and the 

		 object method acceptNode(node) is called on every single node to determine whether or not to accept it. 

		 This function should return the constant NodeFilter.FILTER_ACCEPT for cases when the node should be 

		 accepted and NodeFilter.FILTER_REJECT for cases when the node should be rejected.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 nodeFilter = nodeIterator.filter</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.filter MDC - NodeIterator: filter Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator W3C - DOM Level 2 Traversal: filter Property

		 

		 ]]></see>
</method>
<method name='pointerBeforeReferenceNode' fullname='dom.tr.traversal:NodeIterator/dom.tr.traversal:NodeIterator:pointerBeforeReferenceNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 A Boolean value that indicates whether the NodeIterator is anchored before (if this value is true) or after (if this value is false) the anchor node indicated by the referenceNode property.

		 

		 <p>Note: This property was introduced by WebKit and is used for testing; it can also be used by debuggers.  It is not part of the DOM specification.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 flag = nodeIterator.pointerBeforeReferenceNode;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<return><![CDATA[Value that indicates whether the NodeIterator is anchored before (if this value is true) or after (if this value is false) the anchor node indicated by the referenceNode property

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.pointerBeforeReferenceNode MDC - NodeIterator: pointerBeforeReferenceNode Property

		 

		 ]]></see>
</method>
<method name='referenceNode' fullname='dom.tr.traversal:NodeIterator/dom.tr.traversal:NodeIterator:referenceNode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the node to which the iterator is anchored; as new nodes are inserted, the iterator remains anchored to the reference node as specified by this property.

		 

		 <p>Note: This property was introduced by WebKit and is used for testing; it can also be used by debuggers.  It is not part of the DOM specification.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 node = nodeIterator.referenceNode;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<return><![CDATA[The node to which the iterator is anchored.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.referenceNode MDC - NodeIterator: referenceNode Property

		 

		 ]]></see>
</method>
<method name='root' fullname='dom.tr.traversal:NodeIterator/dom.tr.traversal:NodeIterator:root/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Node'>
<description><![CDATA[

		 Returns the node that is the root of what the NodeIterator traverses.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 root = nodeIterator.root; // document.body in this case</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.root MDC - NodeIterator: root Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator W3C - DOM Level 2 Traversal: root Property

		 

		 ]]></see>
</method>
<method name='whatToShow' fullname='dom.tr.traversal:NodeIterator/dom.tr.traversal:NodeIterator:whatToShow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns a number signifying what types of nodes should be returned by the NodeIterator.

		 

		 <p>The available set of constants is defined in the NodeFilter interface. Nodes not accepted 

		 by whatToShow will be skipped, but their children may still be considered. Note that this 

		 skip takes precedence over the filter, if any.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var nodeIterator = document.createNodeIterator(

		 	document.body,

		 	NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT,

		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },

		 	false

		 	);

		 if((nodeIterator.whatToShow == NodeFilter.SHOW_ALL) || 

		 	(nodeIterator.whatToShow % (NodeFilter.SHOW_COMMENT)) >= NodeFilter.SHOW_COMMENT) {

		 	// nodeIterator will show comments

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMTR 2

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 2

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/NodeIterator.whatToShow MDC - NodeIterator: whatToShow Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator W3C - DOM Level 2 Traversal: whatToShow Property

		 ]]></see>
<see><![CDATA[dom.tr.traversal.NodeFilter NodeFilter

		 

		 ]]></see>
</method>
<classRec name='HTMLCollection' fullname='dom.html.objects:HTMLCollection' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\objects\HTMLCollection.as' namespace='dom.html.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An HTMLCollection is a list of nodes. 

	 

	 <p>An individual node may be accessed by either ordinal index or the node's name or id attributes.</p>

	 

	 <p><strong>Note:</strong> Collections in the HTML DOM are assumed to be live meaning that they 

	 are automatically updated when the underlying document is changed.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMHTML 1

	 ]]></playerversion>
<since><![CDATA[DOMHTML 1

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/HTMLCollection MDC: HTMLCollection

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-75708506 W3C DOM HTML Specification

	 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/dd347073%28VS.85%29.aspx MSDN: HTMLCollection

	 

	 ]]></see>
</classRec>
<method name='item' fullname='dom.html.objects:HTMLCollection/item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 This method retrieves a node specified by ordinal index. Nodes are

		 numbered in tree order (depth-first traversal order). 

		 

		 <p><strong>Note (IE):</strong> IE7 and earlier. item() has a second and optional param called 'iSubindex'. This param specifies the

		 zero-based index of the object to retrieve when a collection is returned.</p>

		 

		 <p><strong>Note (IE):</strong>  Internet Explorer 8 and later. In IE8 mode, the iSubindex parameter is not used.</p>

		 

		 ]]></description>
<param><![CDATA[index The index of the node to be fetched. The index 

		 origin is 0

		 ]]></param>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<return><![CDATA[The Node at the corresponding position upon success. A value 

		 of null is returned if the index is out of range.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/HTMLCollection MDC: HTMLCollection

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536460%28VS.85%29.aspx MSDN: item Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-33262535 W3C - DOM HTML: HTMLCollection.item()

		 

		 ]]></see>
</method>
<method name='namedItem' fullname='dom.html.objects:HTMLCollection/namedItem' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 This method retrieves a Node using a name. With [HTML 4.01] documents, 

		 it first searches for a Node with a matching id attribute. If it 

		 doesn't find one, it then searches for a Node with a matching name 

		 attribute, but only on those elements that are allowed a name attribute. 

		 With [XHTML 1.0] documents, this method only searches for Nodes with a 

		 matching id attribute. This method is case insensitive in HTML documents 

		 and case sensitive in XHTML documents. 

		 

		 <p><strong>Note (IE):</strong> Internet Explorer 8 and later. In IE8 mode, the namedItem method does not return collections if more than one named item is found; instead, it returns the first case-insensitive matched element.</p>

		 

		 <p><strong>Note (IE):</strong> The namedItem method was introduced in Microsoft Internet Explorer 6.</p>

		 

		 ]]></description>
<example><![CDATA[
		 The following example shows how to use the namedItem method to retrieve a div and change its innerText property.

		 <listing>

		 &lt;div id="oDIV1"&gt;This text will not change.&lt;/div&gt;

		 &lt;div id="oDIV2"&gt;This text will change.&lt;/div&gt;

		 &lt;button onclick="document.all.namedItem('oDIV2').innerHTML='Changed!';"&gt;

		 Change Option

		 &lt;/button&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[name The name of the Node to be fetched.

		 ]]></param>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<return><![CDATA[The Node with a name or id attribute whose value corresponds 

		 to the specified string. Upon failure (e.g., no node with this name 

		 exists), returns null.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/HTMLCollection MDC: HTMLCollection

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536634%28VS.85%29.aspx MSDN: namedItem Method

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-21069976 W3C - DOM HTML: HTMLCollection.namedItem()

		 

		 ]]></see>
</method>
<method name='tags' fullname='dom.html.objects:HTMLCollection/tags' isStatic='false' isFinal='false' isOverride='false'  param_names='tag' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Retrieves a collection of objects that have the specified HTML tag name. 

		 

		 <p><strong>Note:</strong> Successful execution includes the case where no elements having the given name are found. In this case, a collection containing zero elements is returned.</p>

		 

		 <p><strong>Note:</strong> NULL may be returned in cases where the collection cannot be constructed, such as inability to allocate memory for even a zero-length collection.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example uses the tags method to retrieve a collection of all p elements in the document, and all body 

		 elements in the document. It displays some of the properties of the collections that are returned. It then 

		 displays selected elements of the collection.

		 

		 <p>There are no p elements in the document, and there is one body element in the document. So, this example 

		 illustrates both the cases where the collection is empty and where the collection is populated.</p>

		 <listing>

		 &lt;html&gt;

&lt;head&gt;

&lt;title&gt;document.all.tags example &lt;/title&gt;

&lt;/head&gt;



&lt;body&gt;

&lt;script type="text/jscript" language="jscript"&gt;



document.write("Here is how document.all.tags behaves when no tags are found.&lt;br&gt;");

var coll = document.all.tags("p");

document.write("list 'p' tags" + "&lt;br&gt;");

document.write("coll= " + coll + "&lt;br&gt;");

document.write("coll.length= " + coll.length + "&lt;br&gt;");

if (coll==null){

    document.write( "coll= is null &lt;br&gt;" );

} else {

    document.write( "coll= is not null &lt;br&gt;" );

}





if ( coll[0] != null ){

    document.write( "coll[0].attributes length " + coll[0].attributes.length  + "&lt;br&gt;");



    for ( i = 0; i&lt;coll[0].attributes.length ; i++ ){

        if (( coll[0].attributes[i].value       != "null"  )

           &amp;( coll[0].attributes[i].value.length &gt; 0       ))

        {

            document.write( "coll[0].attributes "        + i + ":"   );

            document.write(  coll[0].attributes[i].name      + ":            "   );

            document.write(  coll[0].attributes[i].value     + "&lt;br&gt;");

        }

    }

}



document.write( "&lt;br&gt;&lt;br&gt;" );

document.write( "Here is how document.all.tags behaves when at least 1 tag is found.&lt;br&gt;" );

var coll = document.all.tags( "body" );

document.write( "list 'body' tags"            + "&lt;br&gt;" );

document.write( "coll= "        + coll        + "&lt;br&gt;" );

document.write( "coll.length= " + coll.length + "&lt;br&gt;" );

if ( coll == null ){

    document.write( "coll= is null &lt;br&gt;" );

} else {

    document.write( "coll= is not null &lt;br&gt;" );

}



if ( coll[0] != null ){

    document.write( "coll[0].attributes length " + coll[0].attributes.length  + "&lt;br&gt;");



    for ( i = 0; i&lt;coll[0].attributes.length ; i++ ){

        if (( coll[0].attributes[i].value       != "null"  )

           &amp;( coll[0].attributes[i].value.length &gt; 0       ))

        {

            document.write( "coll[0].attributes "        + i + ":"   );

            document.write(  coll[0].attributes[i].name      + ":            "   );

            document.write(  coll[0].attributes[i].value     + "&lt;br&gt;");

        }

    }

}



&lt;/script&gt;



&lt;pre&gt;

=================================

== Here is what the above example should display in your browser

=================================

Here is how document.all.tags behaves when no tags are found.

list 'p' tags

coll= [object]

coll.length= 0

coll= is not null





Here is how document.all.tags behaves when at least 1 tag is found.

list 'body' tags

coll= [object]

coll.length= 1

coll= is not null

coll[0].attributes length 98

coll[0].attributes 21:hideFocus: false

coll[0].attributes 45:contentEditable: inherit

coll[0].attributes 59:disabled: false

coll[0].attributes 69:tabIndex: 0

coll[0].attributes 80:bottomMargin: 15

coll[0].attributes 81:noWrap: false

coll[0].attributes 90:leftMargin: 10

coll[0].attributes 92:topMargin: 15

coll[0].attributes 95:rightMargin: 10



&lt;/pre&gt;

&lt;/body&gt;

&lt;/html&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[tag Specifies an HTML tag. It can be any one of the objects exposed by the DHTML Object Model.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a collection of element objects if successful, or null otherwise. 

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536776%28VS.85%29.aspx MSDN: tags Method

		 

		 ]]></see>
</method>
<method name='urns' fullname='dom.html.objects:HTMLCollection/urns' isStatic='false' isFinal='false' isOverride='false'  param_names='urn' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Retrieves a collection of all objects to which a specified behavior is attached.

		 

		 ]]></description>
<example><![CDATA[
		 The following example shows how to use the urns method to retrieve a collection of all 

		 elements currently attached to the specified behavior and then display a comma-delimited 

		 list of these element IDs in a message box.

		 <listing>

		 &lt;script language="JScript"&gt;

		 	var coll  = document.all.urns("URN1");

		 	var sText = '';

		 

		 	if (coll != null) {

		 		for (i=0; i&lt;coll.length; i++) {

		 			sText += coll.item(i).id + ', ';

		 		}

		 

		 		window.alert(sText);

		 	}

		 &lt;/script&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[urn Specifies the behavior's Uniform Resource Name (URN).

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a collection of objects if successful, or null otherwise.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536780%28VS.85%29.aspx MSDN: urns Method

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.html.objects:HTMLCollection/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 This attribute specifies the length or size of the list.

		 

		 ]]></description>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/HTMLCollection MDC: HTMLCollection

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534101%28VS.85%29.aspx MSDN: length Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-40057551 W3C - DOM HTML: HTMLCollection.length

		 

		 ]]></see>
</method>
<classRec name='HTMLOptionsCollection' fullname='dom.html.objects:HTMLOptionsCollection' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\objects\HTMLOptionsCollection.as' namespace='dom.html.objects' access='public' baseclass='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An HTMLOptionsCollection is a list of nodes representing HTML option element. 

	 An individual node may be accessed by either ordinal index or the node's 

	 name or id attributes.

	 

	 <p><strong>Note:</strong> Collections in the HTML DOM are assumed to be live meaning that they 

	 are automatically updated when the underlying document is changed.</p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMHTML 2

	 ]]></playerversion>
<since><![CDATA[DOMCore 2

	 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/HTMLOptionsCollection MDC: HTMLOptionsCollection

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection W3C DOM HTML Specification: HTMLOptionsCollection

	 

	 ]]></see>
</classRec>
<method name='item' fullname='dom.html.objects:HTMLOptionsCollection/item' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 This method retrieves a node specified by ordinal index. Nodes are 

		 numbered in tree order (depth-first traversal order).

		 

		 ]]></description>
<param><![CDATA[index The index of the node to be fetched. The index 

		 origin is 0

		 ]]></param>
<playerversion><![CDATA[DOMHTML 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The Node at the corresponding position upon success. A value 

		 of null is returned if the index is out of range.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/HTMLOptionsCollection MDC: HTMLOptionsCollection

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-item W3C DOM HTML Specification: HTMLOptionsCollection.item()

		 

		 ]]></see>
</method>
<method name='namedItem' fullname='dom.html.objects:HTMLOptionsCollection/namedItem' isStatic='false' isFinal='false' isOverride='false'  param_names='name' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 This method retrieves a Node using a name. It first searches for a 

		 Node with a matching id attribute. If it doesn't find one, it then 

		 searches for a Node with a matching name attribute, but only on those 

		 elements that are allowed a name attribute. This method is case 

		 insensitive in HTML documents and case sensitive in XHTML documents.

		 

		 ]]></description>
<param><![CDATA[name The name of the Node to be fetched.

		 ]]></param>
<playerversion><![CDATA[DOMHTML 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<return><![CDATA[The Node with a name or id attribute whose value corresponds 

		 to the specified string. Upon failure (e.g., no node with this name 

		 exists), returns null.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/HTMLOptionsCollection MDC: HTMLOptionsCollection

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-namedItem W3C DOM HTML Specification: HTMLOptionsCollection.namedItem()

		 

		 ]]></see>
</method>
<method name='length' fullname='dom.html.objects:HTMLOptionsCollection/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 This attribute specifies the length or size of the list.

		 

		 ]]></description>
<playerversion><![CDATA[DOMHTML 2

		 ]]></playerversion>
<since><![CDATA[DOMCore 2

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/En/DOM/HTMLOptionsCollection MDC: HTMLOptionsCollection

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-length W3C DOM HTML Specification: HTMLOptionsCollection.length

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: if setting the length 

		 is not allowed by the implementation.

		 

		 ]]></throws>
</method>
<method name='length' fullname='dom.html.objects:HTMLOptionsCollection/length/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<interfaceRec name='ElementTraversal' fullname='elementtraversal:ElementTraversal' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\elementtraversal\ElementTraversal.as' namespace='elementtraversal' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Allows script navigation of the elements of a DOM tree, excluding all other nodes in the DOM, such 

	 as text nodes. It also provides an attribute to expose the number of child elements of an element. 

	 It is intended to provide a more convenient alternative to existing DOM navigation interfaces, with 

	 a low implementation footprint.

	 

	 <p>All browser compatibility information was obtained via Quirksmode.</p>

	 

	 ]]></description>
<playerversion><![CDATA[ElemTrav 0

	 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element  MDC - Element

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#interface-elementTraversal W3C Element Traversal Specification

	 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

	 

	 ]]></see>
</interfaceRec>
<method name='childElementCount' fullname='elementtraversal:ElementTraversal/elementtraversal:ElementTraversal:childElementCount/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the current number of element nodes that are children of this 

		 element. 0 if this element has no child nodes that are of nodeType 1.

		 

		 ]]></description>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.childElementCount  MDC - Element: childElementCount Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-childElementCount  W3C - Element Traversel: childElementCount Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#firstElementChild

		 ]]></see>
<see><![CDATA[#lastElementChild

		 ]]></see>
<see><![CDATA[#nextElementSibling

		 ]]></see>
<see><![CDATA[#previousElementSibling

		 

		 ]]></see>
</method>
<method name='firstElementChild' fullname='elementtraversal:ElementTraversal/elementtraversal:ElementTraversal:firstElementChild/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 Returns the first child element node of this element. null if this 

		 element has no child elements.

		 

		 ]]></description>
<example><![CDATA[
		 In this example, the alert shows "SPAN", which is the name of the 

		 first child node of the paragraph element.

		 <listing>

		 &lt;p id="para-01">

		 	&lt;span>First span&lt;/span>

		 &lt;/p>

		 

		 &lt;script type="text/javascript">

		 	var p01 = document.getElementById('para-01');

		 	alert(p01.firstElementChild.nodeName);

		 &lt;/script></listing>

		 

		 ]]></example>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.firstElementChild  MDC - Element: firstElementChild Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-firstElementChild  W3C - Element Traversel: firstElementChild Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#childElementCount

		 ]]></see>
<see><![CDATA[#lastElementChild

		 ]]></see>
<see><![CDATA[#nextElementSibling

		 ]]></see>
<see><![CDATA[#previousElementSibling

		 

		 ]]></see>
</method>
<method name='lastElementChild' fullname='elementtraversal:ElementTraversal/elementtraversal:ElementTraversal:lastElementChild/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 Returns the last child element node of this element. null if this 

		 element has no child elements.

		 

		 ]]></description>
<example><![CDATA[
		 In this example, the alert shows "B", which is the name of the 

		 last child node of the paragraph element.

		 <listing>

		 &lt;p id="para-01">

		 	&lt;span>First span&lt;/span>

		 	&lt;b>bold&lt;/b>

		 &lt;/p>

		 

		 &lt;script type="text/javascript">

		 	var p01 = document.getElementById('para-01');

		 	alert(p01.lastElementChild.nodeName);

		 &lt;/script></listing>

		 

		 ]]></example>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.lastElementChild  MDC - Element: lastElementChild Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-lastElementChild  W3C - Element Traversel: lastElementChild Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#childElementCount

		 ]]></see>
<see><![CDATA[#firstElementChild

		 ]]></see>
<see><![CDATA[#nextElementSibling

		 ]]></see>
<see><![CDATA[#previousElementSibling

		 

		 ]]></see>
</method>
<method name='nextElementSibling' fullname='elementtraversal:ElementTraversal/elementtraversal:ElementTraversal:nextElementSibling/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 Returns the next sibling element node of this element. null if this 

		 element has no element sibling nodes that come after this one in the 

		 document tree.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="div-01">Here is div-01&lt;/div>

		 &lt;div id="div-02">Here is div-02&lt;/div>

		 

		 &lt;script type="text/javascript">

		 	var el = document.getElementById('div-01').nextElementSibling;

		 	document.write('&lt;p>Siblings of div-01&lt;/p>&lt;ol>');

		 	while (el) {

		 		document.write('&lt;li>' + el.nodeName + '&lt;/li>');

		 		el = el.nextElementSibling;

		 	}

		 	document.write('&lt;/ol>');

		 &lt;/script></listing>

		 

		 <p>This example outputs the following into the page when it loads:</p>

		 

		 <p>Siblings of div-01</p>

		 <ol>

		 	<li>DIV</li>

		 	<li>SCRIPT</li>

		 	<li>P</li>

		 	<li>OL</li>

		 </ol>

		 

		 ]]></example>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.nextElementSibling  MDC - Element: nextElementSibling Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-nextElementSibling  W3C - Element Traversel: nextElementSibling Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#childElementCount

		 ]]></see>
<see><![CDATA[#firstElementChild

		 ]]></see>
<see><![CDATA[#lastElementChild

		 ]]></see>
<see><![CDATA[#previousElementSibling

		 

		 ]]></see>
</method>
<method name='previousElementSibling' fullname='elementtraversal:ElementTraversal/elementtraversal:ElementTraversal:previousElementSibling/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 Returns the previous sibling element node of this element. null if 

		 this element has no element sibling nodes that come before this one 

		 in the document tree.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;div id="div-01">Here is div-01&lt;/div>

		 &lt;div id="div-02">Here is div-02&lt;/div>

		 &lt;li>This is a list item&lt;/li>

		 &lt;li>This is another list item&lt;/li>

		 &lt;div id="div-03">Here is div-03&lt;/div>

		 

		 &lt;script type="text/javascript">

		 	var el = document.getElementById('div-03').previousElementSibling;

		 	document.write('&lt;p>Siblings of div-03&lt;/p>&lt;ol>');

		 	while (el) {

		 		document.write('&lt;li>' + el.nodeName + '&lt;/li>');

		 		el = el.previousElementSibling;

		 	}

		 	document.write('&lt;/ol>');

		 &lt;/script></listing>

		 

		 <p>This example outputs the following into the page when it loads:</p>

		 

		 <p>Siblings of div-03</p>

		 <ol>

		 	<li>LI</li>

		 	<li>LI</li>

		 	<li>DIV</li>

		 	<li>DIV</li>

		 </ol>

		 

		 ]]></example>
<playerversion><![CDATA[ElemTrav 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Element.previousElementSibling  MDC - Element: previousElementSibling Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/ElementTraversal/#attribute-previousElementSibling  W3C - Element Traversel: previousElementSibling Property

		 ]]></see>
<see><![CDATA[http://quirksmode.org/dom/w3c_traversal.html  Quirksmode: W3C DOM Compatibility - Traversal

		 ]]></see>
<see><![CDATA[#childElementCount

		 ]]></see>
<see><![CDATA[#firstElementChild

		 ]]></see>
<see><![CDATA[#lastElementChild

		 ]]></see>
<see><![CDATA[#nextElementSibling

		 

		 ]]></see>
</method>
<interfaceRec name='NodeSelector' fullname='selectors:NodeSelector' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\selectors\NodeSelector.as' namespace='selectors' access='public' baseClasses='Object' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Objects implementing any of the Document, DocumentFragment or Element interfaces, as defined in DOM Level 3 Core, must also implement the NodeSelector interface.

	 

	 ]]></description>
<playerversion><![CDATA[Selectors 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 3

	 ]]></since>
<see><![CDATA[http://www.w3.org/TR/selectors-api/#nodeselector W3C Selectors API

	 

	 ]]></see>
</interfaceRec>
<method name='querySelector' fullname='selectors:NodeSelector/selectors:NodeSelector:querySelector' isStatic='false' isFinal='false' isOverride='false'  param_names='selectors' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:Element'>
<description><![CDATA[

		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;Selectors API Example&lt;/title&gt;

		 	&lt;/head&gt;

		 	&lt;body&gt;

		 

		 		&lt;div id="foo"&gt;

		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;

		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;

		 		&lt;/div&gt;

		 		&lt;div id="bar"&gt;

		 			&lt;p&gt;...&lt;/p&gt;

		 		&lt;/div&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 x would contain the first element in the document with an ID of either foo or bar (or both). In the sample document above, it would select the div element with the ID of foo because it is first in document order.

		 <listing>var x = document.querySelector("#foo, #bar");</listing>

		 

		 ]]></example>
<param><![CDATA[selectors One or more selectors

		 ]]></param>
<playerversion><![CDATA[Selectors 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 3

		 

		 ]]></since>
<return><![CDATA[The first matching Element node within the node’s subtree. If there is no such node, returns null. 

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc288169%28VS.85%29.aspx MSDN - querySelector Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.querySelector MDC - Document.querySelector()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/selectors-api/#nodeselector W3C - NodeSelector.querySelector()

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NAMESPACE_ERR: May be raised if the group of selectors include namespace prefixes that need to be resolved.

		 

		 ]]></throws>
</method>
<method name='querySelectorAll' fullname='selectors:NodeSelector/selectors:NodeSelector:querySelectorAll' isStatic='false' isFinal='false' isOverride='false'  param_names='selectors' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;Selectors API Example&lt;/title&gt;

		 	&lt;/head&gt;

		 	&lt;body&gt;

		 

		 		&lt;div id="foo"&gt;

		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;

		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;

		 		&lt;/div&gt;

		 		&lt;div id="bar"&gt;

		 			&lt;p&gt;...&lt;/p&gt;

		 		&lt;/div&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 The following example would select all p elements in the document that have a class of either "error" or "warning".

		 <listing>var alerts = document.querySelectorAll("p.warning, p.error");</listing>

		 

		 ]]></example>
<param><![CDATA[selectors One or more selectors

		 ]]></param>
<playerversion><![CDATA[Selectors 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b

		 ]]></productversion>
<since><![CDATA[DOMCore 3

		 

		 ]]></since>
<return><![CDATA[A NodeList containing all of the matching Element nodes within the node’s subtree, in document order. If there are no such nodes, returns an empty NodeList.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc304115%28VS.85%29.aspx MSDN - querySelectorAll Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.querySelectorAll MDC - Document.querySelectorAll()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/selectors-api/#nodeselector W3C - NodeSelector.querySelectorAll()

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_core.html#gettingelements  Quirksmode: Getting elements

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException NAMESPACE_ERR: May be raised if the group of selectors include namespace prefixes that need to be resolved.

		 

		 ]]></throws>
</method>
<classRec name='Window' fullname='dom:Window' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\Window.as' namespace='dom' access='public' baseclass='Object' interfaces='dom.style.css:ViewCSS;dom.views:AbstractView;cssom.view:WindowView;dom.events:EventTarget' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 INCOMPLETE

	 

	 ]]></description>
<internal><![CDATA[

	 

	 http://opensource.adobe.com/svn/opensource/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/asdoc/ClassTable.java

	 

	 http://www.w3.org/TR/Window/

	 

	 http://developer.mozilla.org/en/DOM/window

	 ]]></internal>
</classRec>
<method name='GeckoActiveXObject' fullname='dom:Window/GeckoActiveXObject' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Window.GeckoActiveXObject

		 ]]></see>
</method>
<method name='QueryInterface' fullname='dom:Window/QueryInterface' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Window.QueryInterface

		 ]]></see>
</method>
<method name='XPCNativeWrapper' fullname='dom:Window/XPCNativeWrapper' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Window.XPCNativeWrapper http://developer.mozilla.org/En/DOM/Window.XPCNativeWrapper 

		 ]]></see>
</method>
<method name='XPCSafeJSObjectWrapper' fullname='dom:Window/XPCSafeJSObjectWrapper' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 
		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Window.XPCSafeJSObjectWrapper http://developer.mozilla.org/En/DOM/Window.XPCSafeJSObjectWrapper 

		 ]]></see>
</method>
<method name='addEventListener' fullname='dom:Window/addEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 Associates a function with a particular event and binds the event to the current node.

		 

		 ]]></description>
<param><![CDATA[type A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.

		 ]]></param>
<param><![CDATA[listener The function or method to associate with the event.

		 ]]></param>
<param><![CDATA[useCapture Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 

		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.

		 

		 ]]></param>
</method>
<method name='addEventListenerNS' fullname='dom:Window/addEventListenerNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;type;listener;useCapture' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 Registers an event listener, depending on the useCapture parameter, on the 

		 capture phase of the DOM event flow or its target and bubbling phases.

		 

		 ]]></description>
<param><![CDATA[namespaceURI Specifies the Event.namespaceURI associated with the event for which the user is registering.

		 ]]></param>
<param><![CDATA[type A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.

		 ]]></param>
<param><![CDATA[listener The function or method to associate with the event.

		 ]]></param>
<param><![CDATA[useCapture Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 

		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.

		 

		 ]]></param>
</method>
<method name='alert' fullname='dom:Window/alert' isStatic='false' isFinal='false' isOverride='false'  param_names='message' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Display an alert dialog with the specified content and an OK button.

		 

		 ]]></description>
<param><![CDATA[message Text you want to display in the alert dialog, or, alternatively, an 

		 object that is converted into a string and displayed.

		 

		 ]]></param>
<see><![CDATA[dom.Window#confirm()

		 ]]></see>
<see><![CDATA[dom.Window#prompt()

		 ]]></see>
</method>
<method name='atob' fullname='dom:Window/atob' isStatic='false' isFinal='false' isOverride='false'  param_names='encodedData' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Decodes a string of data which has been encoded using base-64 encoding. 

		 

		 ]]></description>
<example><![CDATA[
		 var encodedData = window.btoa("Hello, world"); // encode a string

		 var decodedData = atob(encodedData); // decode the string

		 

		 ]]></example>
<param><![CDATA[encodedData The encoded string

		 ]]></param>
<return><![CDATA[The decoded string

		 ]]></return>
<see><![CDATA[dom.Window#btoa()

		 ]]></see>
</method>
<method name='back' fullname='dom:Window/back' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Returns the window to the previous item in the history. 

		 ]]></description>
</method>
<method name='blur' fullname='dom:Window/blur' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Shifts focus away from the window. 

		 ]]></description>
</method>
<method name='btoa' fullname='dom:Window/btoa' isStatic='false' isFinal='false' isOverride='false'  param_names='stringToEncode' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Creates a base-64 encoded ASCII string from a string of binary data. 

		 

		 ]]></description>
<example><![CDATA[

		 var encodedData = window.btoa("Hello, world"); // encode a string

		 var decodedData = atob(encodedData); // decode the string

		 

		 ]]></example>
<param><![CDATA[stringToEncode	The string to encode

		 ]]></param>
<return><![CDATA[The encoded string

		 

		 ]]></return>
<see><![CDATA[dom.Window#atob()

		 ]]></see>
</method>
<method name='captureEvents' fullname='dom:Window/captureEvents' isStatic='false' isFinal='false' isOverride='false'  param_names='eventType' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0 | OBSOLETE</strong>

		 

		 Registers the window to capture all events of the specified type. 

		 

		 Note: This method is obsolete as of Gecko 1.9, in favor of W3C DOM Events methods 

		 (see addEventListener). The support for this method has been removed from Gecko 1.9. 

		 

		 Note: Events raised in the DOM by user activity (such as clicking buttons or shifting 

		 focus away from the current document) generally pass through the high-level window and 

		 document objects first before arriving at the object that initiated the event. 

		 

		 Note: When you call the captureEvents() method on the window, events of the type you 

		 specify (for example, Event.CLICK) no longer pass through to "lower" objects in the 

		 hierarchy. In order for events to "bubble up" in the way that they normally do, you 

		 must call window.releaseEvents() (Obsolete ) on the window to keep it from trapping events. 

		 

		 Note: Note that you can pass a list of events to this method using the following syntax: 

		 window.caputureEvents(Event.KEYPRESS | Event.KEYDOWN | Event.KEYUP). 

		 

		 ]]></description>
<param><![CDATA[eventType The event type to capture.

		 

		 ]]></param>
<see><![CDATA[dom.Window#releaseEvents()

		 ]]></see>
</method>
<method name='clearInterval' fullname='dom:Window/clearInterval' isStatic='false' isFinal='false' isOverride='false'  param_names='timerID' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Cancels repeated action which was set up using setInterval(). 

		 

		 ]]></description>
<param><![CDATA[timerID The identifier of the repeated action you want to cancel.

		 ]]></param>
<see><![CDATA[#setInterval()

		 ]]></see>
</method>
<method name='clearTimeout' fullname='dom:Window/clearTimeout' isStatic='false' isFinal='false' isOverride='false'  param_names='timerID' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Clears the delay set by window.setTimeout(). 

		 

		 ]]></description>
<param><![CDATA[timerID The ID of the timeout you wish you clear

		 ]]></param>
<see><![CDATA[#setTimeout()

		 ]]></see>
</method>
<method name='close' fullname='dom:Window/close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Closes the current window, or a referenced window. 

		 

		 <p>When this method is called, the referenced window is closed.</p>

		 

		 <p>This method is only allowed to be called for windows that were 

		 opened by a script using the window.open method. If the window 

		 was not opened by a script, the following error appears in the 

		 JavaScript Console: Scripts may not close windows that were not

		 opened by script.</p>

		 

		 ]]></description>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536367(VS.85).aspx

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.close

		 ]]></see>
</method>
<method name='confirm' fullname='dom:Window/confirm' isStatic='false' isFinal='false' isOverride='false'  param_names='message' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Displays a modal dialog with a message and two buttons, OK and Cancel. 

		 

		 <p>Dialog boxes are modal windows - they prevent the user from accessing the 

		 rest of the program's interface until the dialog box is closed. For this 

		 reason, you should not overuse any function that creates a dialog box (or 

		 modal window).</p>

		 

		 ]]></description>
<param><![CDATA[message The string to be displayed in the dialog. 

		 ]]></param>
<return><![CDATA[Value indicating whether OK or Cancel was selected (true means OK). 

		 

		 ]]></return>
<see><![CDATA[dom.Window#alert()

		 ]]></see>
<see><![CDATA[dom.Window#prompt()

		 ]]></see>
</method>
<method name='disableExternalCapture' fullname='dom:Window/disableExternalCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/window.disableExternalCapture

		 ]]></see>
</method>
<method name='dispatchEvent' fullname='dom:Window/dispatchEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='dom.events:Event' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 

		 Dispatches an event to fire on a node artificially.

		 

		 <p><strong>Note (IE):</strong> IE's equivalent of dispatchEvent() is fireEvent().</p>

		 

		 ]]></description>
<param><![CDATA[event The event to be dispatched.

		 ]]></param>
<return><![CDATA[Indicates whether any of the listeners which handled the 

		 event called Event.preventDefault(). If Event.preventDefault() was 

		 called the returned value is false, else it is true.

		 

		 ]]></return>
</method>
<method name='dump' fullname='dom:Window/dump' isStatic='false' isFinal='false' isOverride='false'  param_names='message' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Prints messages to the console. 

		 

		 <p>Note: In Gecko dump is disabled by default – it doesn't do anything but doesn't raise 

		 an error either. To see the dump output you have to enable it by setting the preference 

		 browser.dom.window.dump.enabled to true. You can set the preference in about:config or 

		 in a user.js file. Note: this preference is not listed in about:config by default, you 

		 may need to create it (right-click the content area -> New -> Boolean). </p>

		 

		 <p>Note: On Windows, you will need a console to actually see anything. If you don't have one 

		 already, closing the application and re-opening it with the command line parameter -console 

		 should create the console. On other operating systems, it's enough to launch the application 

		 from a terminal. </p>

		 

		 ]]></description>
<param><![CDATA[message Message to log. 

		 ]]></param>
</method>
<method name='enableExternalCapture' fullname='dom:Window/enableExternalCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/window.enableExternalCapture

		 ]]></see>
</method>
<method name='escape' fullname='dom:Window/escape' isStatic='false' isFinal='false' isOverride='false'  param_names='regular' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Encodes a string, replacing certain characters with a hexadecimal escape sequence. 

		 

		 <p>Note: The escape() method converts special characters (any characters that are 

		 not regular text or numbers) into hexadecimal characters, which is especially 

		 necessary for setting the values of cookies. Also useful when passing name=value 

		 pairs in the URL of a GET request, or an AJAX GET/POST request. </p>

		 

		 ]]></description>
<example><![CDATA[alert(escape("http://www.cnn.com")); // displays: http%3A//www.cnn.com

		 ]]></example>
<param><![CDATA[regular A regular string. 

		 ]]></param>
<return><![CDATA[The encoded string. 

		 

		 ]]></return>
<see><![CDATA[dom.Window#unescape()

		 ]]></see>
</method>
<method name='find' fullname='dom:Window/find' isStatic='false' isFinal='false' isOverride='false'  param_names='string;caseSensitive;backwards;wrapAround;wholeWord;searchInFrames;showDialog' param_types='dom.core.types:DOMString;Boolean;Boolean;Boolean;Boolean;Boolean;Boolean' param_defaults='undefined;undefined;undefined;undefined;undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Finds a string in a window. 

		 

		 ]]></description>
<param><![CDATA[string The text string for which to search. 

		 ]]></param>
<param><![CDATA[caseSensitive If true, specifies a case-sensitive search. 

		 ]]></param>
<param><![CDATA[backwards If true, specifies a backward search. 

		 ]]></param>
<param><![CDATA[wrapAround If true, specifies a wrap around search. 

		 ]]></param>
<param><![CDATA[wholeWord If true, specifies a whole word search. 

		 ]]></param>
<param><![CDATA[searchInFrames If true, specifies a search in frames. 

		 ]]></param>
<param><![CDATA[showDialog If true, specifies a show Dialog. 

		 ]]></param>
<return><![CDATA[true if the string is found; otherwise, false. 

		 ]]></return>
</method>
<method name='focus' fullname='dom:Window/focus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Sets focus on the window. 

		 

		 ]]></description>
<example><![CDATA[if (clicked) { window.focus(); }

		 ]]></example>
</method>
<method name='forward' fullname='dom:Window/forward' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Moves the window one document forward in the history. 

		 

		 ]]></description>
<example><![CDATA[function goForward() { if ( canGoForward) window.forward(); }

		 ]]></example>
</method>
<method name='getAttention' fullname='dom:Window/getAttention' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Attempts to get the user's attention. How this happens varies based on OS and window manager.

		 

		 <p>Note: On Windows, the taskbar button for the window flashes, if this hasn't been disabled by the user.</p>

		 

		 <p>Note: On Linux, the behaviour varies from window manager to window manager - some flash the taskbar button, 

		 others focus the window immediately. This may be configurable as well.</p>

		 

		 <p>Note: On Macintosh, the icon in the upper right corner of the desktop flashes.</p>

		 

		 <p>Note: The function is disabled for web content. Neither Gecko nor Internet Explorer supports this feature 

		 now for web content. getAttention will still work when used from chrome in a Gecko application.</p>

		 ]]></description>
</method>
<method name='getAttentionWithCycleCount' fullname='dom:Window/getAttentionWithCycleCount' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/window.getAttentionWithCycleCount

		 ]]></see>
</method>
<method name='getComputedStyle' fullname='dom:Window/getComputedStyle' isStatic='false' isFinal='false' isOverride='false'  param_names='elt;pseudoElt' param_types='dom.core:Element;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.style.css:CSSStyleDeclaration'>
<description><![CDATA[

		 

		 This method is used to get the computed style as it is defined in CSS2. 

		 

		 ]]></description>
<param><![CDATA[elt The element whose style is to be computed. This parameter cannot be null.

		 ]]></param>
<param><![CDATA[pseudoElt The pseudo-element or null if none.

		 ]]></param>
<return><![CDATA[The computed style. The CSSStyleDeclaration is read-only and contains only absolute values.

		 

		 ]]></return>
</method>
<method name='getSelection' fullname='dom:Window/getSelection' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:Selection'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Returns a selection object representing the range of text selected by the user. 

		 

		 <p>In JavaScript, when a selection object is passed to a function expecting a string (like window.alert  or 

		 document.write ), a string representation of it (i.e. the selected text) is passed instead. This makes the 

		 selection object appear like a string, when it is really an object with its own properties and methods. 

		 Specifically, the return value of calling the toString() method of the Selection object is passed. </p>

		 

		 ]]></description>
<example><![CDATA[
		 function foo() {

		    var selObj = window.getSelection();

		    alert(selObj);

		    var selRange = selObj.getRangeAt(0);

		    // do stuff with the range

		 }

		 ]]></example>
<return><![CDATA[A Selection object. 

		 

		 ]]></return>
</method>
<method name='home' fullname='dom:Window/home' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Returns the window to the home page. 

		 ]]></description>
</method>
<method name='maximize' fullname='dom:Window/maximize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/window.maximize

		 ]]></see>
</method>
<method name='minimize' fullname='dom:Window/minimize' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/window.minimize

		 ]]></see>
</method>
<method name='moveBy' fullname='dom:Window/moveBy' isStatic='false' isFinal='false' isOverride='false'  param_names='deltaX;deltaY' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Moves the current window by a specified amount. 

		 

		 <p>Note: You can use negative numbers as parameters for this function. This function makes 

		 a relative move while window.moveTo makes an absolute move. </p>

		 

		 ]]></description>
<example><![CDATA[

		 <listing>

		 function budge() {

		    moveBy(10, -10);

		 }

		 </listing>

		 ]]></example>
<param><![CDATA[deltaX Amount of pixels to move the window horizontally. 

		 ]]></param>
<param><![CDATA[deltaY Amount of pixels to move the window vertically. 

		 ]]></param>
</method>
<method name='moveTo' fullname='dom:Window/moveTo' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Moves the window to the specified coordinates. 

		 

		 <p>Note: This function moves the window absolutely while window.moveBy moves the window relative to its current location. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 function origin() {

		   // moves to top left corner of screen

		   window.moveTo(0, 0)

		 }

		 </listing>

		 ]]></example>
<param><![CDATA[x The horizontal coordinate to be moved to. 

		 ]]></param>
<param><![CDATA[y The vertical coordinate to be moved to. 

		 ]]></param>
</method>
<method name='open' fullname='dom:Window/open' isStatic='false' isFinal='false' isOverride='false'  param_names='url;windowName;windowFeatures' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='dom:WindowProxy'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Creates a new secondary browser window and loads the referenced resource.

		 

		 <p>The open() method creates a new secondary browser window, similar to choosing New Window from the File menu. The strUrl 

		 parameter specifies the URL to be fetched and loaded in the new window. If strUrl is an empty string, then a new blank, empty 

		 window (URL about:blank loaded) is created with the default toolbars of the main window.</p>

		 

		 <p>Note: Note that remote URLs won't load immediately. When window.open() returns, the window always contains about:blank. The 

		 actual fetching of the URL is deferred and starts after the current script block finishes executing. The window creation and 

		 the loading of the referenced resource are done asynchronously.</p>

		 

		 <p>Note: If you use the strWindowFeatures parameter, then only list the features you want to include in the new window, that 

		 you want to be enabled or rendered; the others (except titlebar and close) will be disabled, removed.</p>

		 

		 <h3>Position and size features</h3>

		 <p>

		 	<dl>

		 		<dt>left</dt>

		 		<dd>Specifies the distance the new window is placed from the left side of the work area for applications of the user's operating system to the leftmost border (resizing handle) of the browser window. The new window can not be initially positioned offscreen.</dd>

		 		<dd> Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" />, <img alt="Opera 6+" src="images/Opera6.gif" /></dd>

		 	</dl>

		 	<dl>

		 		<dt>top</dt>

		 		<dd>Specifies the distance the new window is placed from the top side of the work area for applications of the user's operating system to the topmost border (resizing handle) of the browser window. The new window can not be initially positioned offscreen. </dd>

		 		<dd> Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" />, <img alt="Opera 6+" src="images/Opera6.gif" /></dd>

		 	</dl>

		 	<dl>

		 		<dt>height</dt>

		 		<dd>Specifies the height of the content area, viewing area of the new secondary window in pixels. The height value includes the height of the horizontal scrollbar if present. The minimum required value is 100.</dd>

		 		<dd> Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" />, <img alt="Opera 6+" src="images/Opera6.gif" /></dd>

		 	</dl>

		 	<dl>

		 		<dt>width</dt>

		 		<dd>Specifies the width of the content area, viewing area of the new secondary window in pixels. The width value includes the width of the vertical scrollbar if present. The width value does not include the sidebar if it is expanded. The minimum required value is 100. </dd>

		 		<dd> Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" />, <img alt="Opera 6+" src="images/Opera6.gif" /></dd>

		 	</dl>

		 	<dl>

		 		<dt>screenX</dt>

		 		<dd>Deprecated. Same as left but only supported by Netscape and Mozilla-based browsers. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>screenY</dt>

		 		<dd>Deprecated. Same as top but only supported by Netscape and Mozilla-based browsers. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>centerscreen</dt>

		 		<dd>Centers the window in relation to its parent's size and position. Requires chrome=yes. </dd>

		 	</dl>

		 	<dl>

		 		<dt>outerHeight</dt>

		 		<dd>Specifies the height of the whole browser window in pixels. This outerHeight value includes any/all present toolbar, window horizontal scrollbar (if present) and top and bottom window resizing borders. Minimal required value is 100. </dd>

		 		<dd><strong>Note</strong>: since titlebar is always rendered, then requesting outerHeight=100 will make the innerHeight of the browser window under the minimal 100 pixels. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>outerWidth</dt>

		 		<dd>Specifies the width of the whole browser window in pixels. This outerWidth value includes the window vertical scrollbar (if present) and left and right window resizing borders. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>innerHeight</dt>

		 		<dd>Same as height but only supported by Netscape and Mozilla-based browsers. Specifies the height of the content area, viewing area of the new secondary window in pixels. The <var>innerHeight</var> value includes the height of the horizontal scrollbar if present. Minimal required value is 100. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>innerWidth</dt>

		 		<dd>Same as width but only supported by Netscape and Mozilla-based browsers. Specifies the width of the content area, viewing area of the new secondary window in pixels. The innerWidth value includes the width of the vertical scrollbar if present. The innerWidth value does not include the sidebar if it is expanded. Minimal required value is 100. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 </p>

		 

		 <h3>Toolbar and chrome features</h3>

		 <p>

		 	<dl>

		 		<dt>menubar</dt>

		 		<dd>If this feature is set to yes, then the new secondary window renders the menubar. </dd>

		 		<dd>Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>toolbar</dt>

		 		<dd>If this feature is set to <var>yes</var>, then the new secondary window renders the Navigation Toolbar (Back, Forward, Reload, Stop buttons). In addition to the Navigation Toolbar, Mozilla-based browsers will render the Tab Bar if it is visible, present in the parent window. (If this feature is set to <var>no</var> all toolbars in the window will be invisible, for example extension toolbars). </dd>

		 		<dd>Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>location</dt>

		 		<dd>If this feature is set to <var>yes</var>, then the new secondary window renders the Location bar in Mozilla-based browsers. MSIE 5+ and Opera 7.x renders the Address Bar. </dd>

		 		<dd>Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" />, <img alt="Opera 6+" src="images/Opera6.gif" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>directories</dt>

		 		<dd>If this feature is set to <var>yes</var>, then the new secondary window renders the Personal Toolbar in Netscape 6.x, Netscape 7.x and Mozilla browser. It renders the Bookmarks Toolbar in Firefox 1.x and, in MSIE 5+, it renders the Links bar. In addition to the Personal Toolbar, Mozilla browser will render the Site Navigation Bar if such toolbar is visible, present in the parent window. </dd>

		 		<dd>Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>personalbar</dt>

		 		<dd>Same as <var>directories</var> but only supported by Netscape and Mozilla-based browsers. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>status</dt>

		 		<dd>If this feature is set to <var>yes</var>, then the new secondary window has a status bar. Users can force the rendering of status bar in all Mozilla-based browsers, in MSIE 6 SP2 and in Opera 6+. The default preference setting in recent Mozilla-based browser releases and in Firefox 1.0 is to force the presence of the status bar. </dd>

		 		<dd> Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 </dl>

		 </p>

		 

		 <h3>Window functionality features</h3>

		 <p>

		 	<dl>

		 		<dt>resizable</dt>

		 		<dd>If this feature is set to <var>yes</var>, the new secondary window will be resizable. </dd>

		 		<dd><strong>Note</strong>: Starting with version 1.4, Mozilla-based browsers have a window resizing grippy at the right end of the status bar, this ensures that users can resize the browser window even if the web author requested this secondary window to be non-resizable. In such case, the maximize/restore icon in the window's titlebar will be disabled and the window's borders won't allow resizing but the window will still be resizable via that grippy in the status bar. </dd>

		 		<dd>Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>scrollbars</dt>

		 		<dd>If this feature is set to <var>yes</var>, the new secondary window will show horizontal and/or vertical scrollbar(s) if the document doesn't fit into the window's viewport. </dd>

		 		<dd>Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>dependent</dt>

		 		<dd>If set to <var>yes</var>, the new window is said to be dependent of its parent window. A dependent window closes when its parent window closes. A dependent window is minimized on the Windows task bar only when its parent window is minimized. On Windows platforms, a dependent window does not show on the task bar. A dependent window also stays in front of the parent window. </dd>

		 		<dd>Dependent windows are not implemented on MacOS X, this option will be ignored. </dd>

		 		<dd>The dependent feature is currently under revision to be removed.</dd>

		 		<dd>In MSIE 6, the nearest equivalent to this feature is the <code>showModelessDialog()</code> method. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>dialog</dt>

		 		<dd>The <code>dialog</code> feature removes all icons (restore, minimize, maximize) from the window's titlebar, leaving only the close button. Mozilla 1.2+ and Netscape 7.1 will render the other menu system commands (in FF 1.0 and in NS 7.0x, the command system menu is not identified with the Firefox/NS 7.0x icon on the left end of the titlebar: that's probably a bug. You can access the command system menu with a right-click on the titlebar). Dialog windows are windows which have no minimize system command icon and no maximize/restore down system command icon on the titlebar nor in correspondent menu item in the command system menu. They are said to be dialog because their normal, usual purpose is to only notify info and to be dismissed, closed. On Mac systems, dialog windows have a different window border and they may get turned into a sheet. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>minimizable</dt>

		 		<dd>This setting can only apply to dialog windows; "minimizable" requires <code>dialog=yes</code>. If <code>minimizable</code> is set to <var>yes</var>, the new dialog window will have a minimize system command icon in the titlebar and it will be minimizable. Any non-dialog window is always minimizable and <code>minimizable=no</code> will be ignored. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>fullscreen</dt>

		 		<dd>Do not use. Not implemented in Mozilla. There are no plans to implement this feature in Mozilla. </dd>

		 		<dd>This feature no longer works in MSIE 6 SP2 the way it worked in MSIE 5.x. The Windows taskbar, as well as the titlebar and the status bar of the window are not visible, nor accessible when fullscreen is enabled in MSIE 5.x. </dd>

		 		<dd><code>fullscreen</code> always upsets users with large monitor screen or with dual monitor screen. Forcing <code>fullscreen</code> onto other users is also extremely unpopular and is considered an outright rude attempt to impose web author's viewing preferences onto users. </dd>

		 		<dd>Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" /> </dd><dd> <code>fullscreen</code> does not really work in MSIE 6 SP2. </dd>

		 	</dl>

		 </p>

		 

		 

		 <h3>Features requiring privileges</h3>

		 <p>

		 	The following features require the UniversalBrowserWrite privilege, otherwise they will be ignored. Chrome scripts have this privilege automatically, others have to request it from the PrivilegeManager.

		 	<dl>

		 		<dt>chrome</dt>

		 		<dd><strong>Note</strong>: Starting with Mozilla 1.7/Firefox 0.9, this feature requires the <code>UniversalBrowserWrite</code> privilege. Without this privilege, it is ignored. </dd>

		 		<dd>If set to <var>yes</var>, the page is loaded as window's only content, without any of the browser's interface elements. There will be no context menu defined by default and none of the standard keyboard shortcuts will work. The page is supposed to provide a user interface of its own, usually this feature is used to open XUL documents (standard dialogs like the JavaScript Console are opened this way). </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>modal</dt>

		 		<dd><strong>Note</strong>: Starting with Mozilla 1.2.1, this feature requires the <code>UniversalBrowserWrite</code> privilege. Without this privilege, it is ignored. </dd>

		 		<dd>If set to <var>yes</var>, the new window is said to be modal. The user cannot return to the main window until the modal window is closed. A typical modal window is created by the <a href="http://developer.mozilla.org/en/DOM/window.alert">alert() function</a>. </dd>

		 		<dd>The exact behavior of modal windows depends on the platform and on the Mozilla release version. </dd>

		 		<dd>Note: The MSIE 6 equivalent to this feature is the showModalDialog() method. For compatibility reasons, it is now also supported in Firefox 3.</dd>

		 		<dd>Supported in: <img alt="Internet Explorer 5+" src="images/MSIE_ico.png" />, <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" />, <img alt="Opera 6+" src="images/Opera6.gif" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>titlebar</dt>

		 		<dd>By default, all new secondary windows have a titlebar. If set to <var>no</var>, this feature removes the titlebar from the new secondary window. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>alwaysRaised</dt>

		 		<dd>If set to <var>yes</var>, the new window will always be displayed on top of other browser windows, regardless of whether it is active or not. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>alwaysLowered</dt>

		 		<dd>If set to <var>yes</var>, the new created window floats below, under its own parent when the parent window is not minimized. alwaysLowered windows are often referred as pop-under windows. The alwaysLowered window can not be on top of the parent but the parent window can be minimized. In NS 6.x, the alwaysLowered window has no minimize system command icon and no restore/maximize system command. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 	<dl>

		 		<dt>z-lock</dt>

		 		<dd>Same as <code>alwaysLowered</code>. </dd>

		 	</dl>

		 	<dl>

		 		<dt>close</dt>

		 		<dd>When set to <var>no</var>, this feature removes the system close command icon and system close menu item. It will only work for dialog windows (<code>dialog</code> feature set). <code>close=no</code> will override <code>minimizable=yes</code>. </dd>

		 		<dd>Supported in: <img alt="Netscape 6.x" src="images/Ns6.gif" />, <img alt="Netscape 7.x" src="images/NS7_ico4.gif" />, <img alt="Mozilla 1.x" src="images/Mozilla1_ico.png" />, <img alt="Firefox 1.x" src="images/FF1x.png" /> </dd>

		 	</dl>

		 </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script type="text/javascript"&gt;

		 var WindowObjectReference = null; // global variable

		 

		 function openFFPromotionPopup()	{

		 	if(WindowObjectReference == null || WindowObjectReference.closed) {

		 		//if the pointer to the window object in memory does not exist or if such pointer exists but the window was closed

		 		WindowObjectReference = window.open("http://www.spreadfirefox.com/", "PromoteFirefoxWindowName", "resizable=yes,scrollbars=yes,status=yes");

		 		// then create it. The new window will be created and will be brought on top of any other window.

		 	} else {

		 		WindowObjectReference.focus();

		 		// else the window reference must exist and the window is not closed; therefore, we can bring it back on top of any other window with the focus() method. There would be no need to re-create the window or to reload the referenced resource.

		 	};

		 }

		 &lt;/script&gt;

		 

		 (...)

		 

		 &lt;p>&lt;a href="http://www.spreadfirefox.com/" target="PromoteFirefoxWindowName" onclick="openFFPromotionPopup(); return false;" title="This link will create a new window or will re-use an already opened one">Promote Firefox adoption&lt;/a&gt;&lt;/p&gt;

		 

		 </listing>

		 

		 ]]></example>
<param><![CDATA[url This is the URL to be loaded in the newly opened window. It can be an HTML document on the web, 

		 it can be an image file or any type of file which is supported by the browser.

		 ]]></param>
<param><![CDATA[windowName This is the string that just names the new window. Such string can be used to be the target 

		 of links and forms when the target attribute of an &lt;a&gt; element or of a &lt;form&gt; is specified. This string parameter 

		 should not contain any blank space. strWindowName does not specify the title of the new window.

		 ]]></param>
<param><![CDATA[windowFeatures Optional parameter. This parameter is the string which lists the requested window features 

		 (window functionalities and toolbars) of the new browser window. This string parameter must not contain any blank space. 

		 Each requested window feature must be separated by a comma inside the character string.

		 ]]></param>
<return><![CDATA[This is the reference pointing to the newly created browser window. This reference is the return value of the 

		 open() method; it will be null if for some reasons the execution did not succeed to open the window. A global variable 

		 is best used to store such reference. You can then, for example, use it to look for properties of the new window or access 

		 its methods, assuming that your main versus secondary window relationship complies with Same origin policy security requirements.

		 

		 ]]></return>
<see><![CDATA[http://www.evolt.org/article/Links_and_JavaScript_Living_Together_in_Harmony/17/20938/ Links & JavaScript Living Together in Harmony

		 ]]></see>
<see><![CDATA[http://www.cs.tut.fi/~jkorpela/www/links.html Links Want To Be Links

		 ]]></see>
<exampleText><![CDATA[
		 <h3>Best practices</h3>

		 <p>The above code solves a few usability problems related to links opening secondary window. The purpose of the return false in 

		 the code is to cancel default action of the link: if the onclick event handler is executed, then there is no need to execute the 

		 default action of the link. But if javascript support is disabled or non-existent on the user's browser, then the onclick event 

		 handler is ignored and the browser loads the referenced resource in the target frame or window that has the name 

		 "PromoteFirefoxWindowName". If no frame nor window has the name "PromoteFirefoxWindowName", then the browser will create a new 

		 window and will name it "PromoteFirefoxWindowName".</p>

		 

		 ]]></exampleText>
</method>
<method name='openDialog' fullname='dom:Window/openDialog' isStatic='false' isFinal='false' isOverride='false'  param_names='url;name;features;args' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;restParam' param_defaults='undefined;undefined;undefined;undefined' result_type='dom:WindowProxy'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently. 

		 

		 <p>The optional parameters, if present, will be bundled up in a JavaScript Array object and added to the newly created window as a property named window.arguments. They may be referenced in the JavaScript of the window at 

		 any time, including during the execution of a load handler. These parameters may be used, then, to pass arguments to and from the dialog window. </p>

		 

		 <p>Note: The call to openDialog() returns immediately. If you want the call to block until the user has closed the dialog, supply modal as a 

		 windowFeatures parameter.</p>

		 

		 <p>Note: This also means the user won't be able to interact with the opener window until he closes the modal dialog. </p>

		 

		 <h3>Passing extra parameters to the dialog</h3>

		 <p>

		 To pass extra parameters into the dialog, you can simply supply them after the windowFeatures parameter: 

		 <listing>openDialog("http://example.tld/zzz.xul", "dlg", "", "pizza", 6.98);</listing>

		 The extra parameters will then get packed into a property named arguments of type Array, and this property gets added to the newly opened dialog window. 

		 </p>

		 

		 <p>

		 To access these extra parameters from within dialog code, use the following scheme: 

		 

		 <listing>

		 var food  = window.arguments[0];

		 var price = window.arguments[1];</listing>

		 

		 Note that you can access this property from within anywhere in the dialog code. 

		 </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var win = openDialog("http://example.tld/zzz.xul", "dlg", "", "pizza", 6.98);</listing>

		 ]]></example>
<param><![CDATA[url This is the URL to be loaded in the newly opened window. It can be an HTML document on the web, 

		 it can be an image file or any type of file which is supported by the browser.

		 ]]></param>
<param><![CDATA[name This is the string that just names the new window. Such string can be used to be the target 

		 of links and forms when the target attribute of an &lt;a&gt; element or of a &lt;form&gt; is specified. This string parameter 

		 should not contain any blank space. strWindowName does not specify the title of the new window.

		 ]]></param>
<param><![CDATA[features Optional parameter. This parameter is the string which lists the requested window features 

		 (window functionalities and toolbars) of the new browser window. This string parameter must not contain any blank space. 

		 Each requested window feature must be separated by a comma inside the character string.

		 ]]></param>
<param><![CDATA[...args The arguments to be passed to the new window (optional). 

		 ]]></param>
<return><![CDATA[The opened window 

		 

		 ]]></return>
</method>
<method name='postMessage' fullname='dom:Window/postMessage' isStatic='false' isFinal='false' isOverride='false'  param_names='message;targetOrigin' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <strong>HTML5 | Firefox 3</strong> 

		 

		 window.postMessage is a method for safely enabling cross-origin communication.

		 

		 <p>Normally, scripts on different pages are only allowed to access each other if and only if the pages which executed them 

		 are at locations with the same protocol (usually both http), port number (80 being the default for http), and host (modulo 

		 document.domain being set by both pages to the same value). window.postMessage provides a controlled mechanism to circumvent 

		 this restriction in a way which is secure when properly used.</p>

		 

		 <p>window.postMessage, when called, causes a MessageEvent to be dispatched at the target window when any pending script that 

		 must be executed completes (e.g. remaining event handlers if window.postMessage is called from an event handler, previously-set 

		 pending timeouts, etc.). The MessageEvent has the type message, a data property which is set to the string value of the first 

		 argument provided to window.postMessage, an origin property corresponding to the origin of the main document in the window 

		 calling window.postMessage at the time window.postMessage was called, and a source property which is the window from which 

		 window.postMessage is called. (Other standard properties of events are present with their expected values.)</p>

		 

		 <p>Note: Any window may access this method on any other window, at any time, regardless of the location of the document in 

		 the window, to send it a message. Consequently, any event listener used to receive messages must first check the identity of 

		 the sender of the message, using the origin and possibly source properties. This cannot be understated: Failure to check the 

		 origin and possibly source properties enables cross-site scripting attacks.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // otherWindow: A reference to another window; such a reference may be obtained, for example, using the 

		 // contentWindow property of an iframe element, the object returned by window.open, or by named or 

		 // numeric index on window.frames. 

		 otherWindow.postMessage(message, targetOrigin);</listing>

		 

		 <listing>

		 // In window A's scripts, with A being on &lt;http://example.com:8080&gt;:

		 

		 var popup = window.open(...popup details...);

		 

		 // When the popup has fully loaded, if not blocked by a popup blocker:

		 

		 // This does nothing, assuming the window hasn't changed its location.

		 popup.postMessage("The user is 'bob' and the password is 'secret'", "http://secure.example.net");

		 

		 // This will successfully queue a message to be sent to the popup, assuming the window hasn't changed its location.

		 popup.postMessage("hello there!", "http://example.org");

		 

		 function receiveMessage(event) {

		 		// Do we trust the sender of this message?  (might be different from what we originally opened, for example).

		 		if (event.origin !== "http://example.org") return;

		 

		 		// event.source is popup

		 		// event.data is "hi there yourself!  the secret response is: rheeeeet!"

		 }

		 window.addEventListener("message", receiveMessage, false);</listing>

		 

		 <listing>

		 // In the popup's scripts, running on &lt;http://example.org&gt;:

		 

		 // Called sometime after postMessage is called

		 function receiveMessage(event) {

		 		// Do we trust the sender of this message?

		 		if (event.origin !== "http://example.com:8080") return;

		 

		 		// event.source is window.opener

		 		// event.data is "hello there!"

		 

		 		// Assuming you've verified the origin of the received message (which

		 		// you must do in any case), a convenient idiom for replying to a

		 		// message is to call postMessage on event.source and provide event.origin as the targetOrigin.

		 		event.source.postMessage("hi there yourself!  the secret response " + "is: rheeeeet!", event.origin);

		 }

		 

		 window.addEventListener("message", receiveMessage, false);</listing>

		 ]]></example>
<param><![CDATA[message String data to be sent to the other window. 

		 ]]></param>
<param><![CDATA[targetOrigin Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal 

		 string "~~" (indicating no preference) or as a URI. If at the time the event is scheduled to be dispatched the scheme, hostname, 

		 or port of otherWindow's document does not match that provided in targetOrigin, the event will not be dispatched; only if all 

		 three match will the event be dispatched. This mechanism provides control over where messages are sent; for example, if 

		 postMessage were used to transmit a password, it would be absolutely critical that this argument be a URI whose origin is the

		 same as the intended receiver of the message containing the password, to prevent interception of the password by a malicious third party. 

		 

		 ]]></param>
<see><![CDATA[dom.events.MessageEvent

		 ]]></see>
<see><![CDATA[dom.core.Document#domain

		 

		 ]]></see>
</method>
<method name='print' fullname='dom:Window/print' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Opens the Print Dialog to print the current document. 

		 ]]></description>
</method>
<method name='prompt' fullname='dom:Window/prompt' isStatic='false' isFinal='false' isOverride='false'  param_names='text;value' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Displays a dialog with a message prompting the user to input some text. 

		 

		 <p>Note: A prompt dialog contains a single-line textbox, a Cancel button, and an OK button, and returns the 

		 (possibly empty) text the user inputted into that textbox. </p>

		 

		 <p>Note: Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface 

		 until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box 

		 (or modal window). </p>

		 

		 ]]></description>
<param><![CDATA[text Text to display to the user. 

		 ]]></param>
<param><![CDATA[value The default value displayed in the text input field. It is an optional parameter. 

		 ]]></param>
<return><![CDATA[The text entered by the user, or the value null. 

		 ]]></return>
</method>
<method name='releaseEvents' fullname='dom:Window/releaseEvents' isStatic='false' isFinal='false' isOverride='false'  param_names='eventType' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0 | OBSOLETE</strong>

		 

		 Releases the window from trapping events of a specific type. 

		 

		 <p>Note: that you can pass a list of events to this method using the following syntax: 

		 window.releaseEvents(Event.KEYPRESS | Event.KEYDOWN | Event.KEYUP). </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 window.releaseEvents(Event.KEYPRESS)</listing>

		 

		 ]]></example>
<param><![CDATA[eventType The event type to release.

		 

		 ]]></param>
<see><![CDATA[dom.Window#captureEvents()

		 ]]></see>
</method>
<method name='removeEventListener' fullname='dom:Window/removeEventListener' isStatic='false' isFinal='false' isOverride='false'  param_names='type;listener;useCapture' param_types='dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 Removes an event listener.

		 

		 <p>Calling removeEventListener with arguments 

		 which do not identify any currently registered EventListener on the 

		 EventTarget has no effect. The Event.namespaceURI for which the user 

		 registered the event listener is implied and is null.</p>

		 

		 ]]></description>
<param><![CDATA[type Specifies the Event.type for which the user registered 

		 the event listener.

		 ]]></param>
<param><![CDATA[listener The EventListener to be removed.

		 ]]></param>
<param><![CDATA[useCapture Specifies whether the EventListener being removed 

		 was registered for the capture phase or not. If a listener was 

		 registered twice, once for the capture phase and once for the target 

		 and bubbling phases, each must be removed separately. Removal of an 

		 event listener registered for the capture phase does not affect the 

		 same event listener registered for the target and bubbling phases, 

		 and vice versa.

		 

		 ]]></param>
</method>
<method name='removeEventListenerNS' fullname='dom:Window/removeEventListenerNS' isStatic='false' isFinal='false' isOverride='false'  param_names='namespaceURI;type;listener;useCapture' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.events:EventListener;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='void'>
<description><![CDATA[

		 

		 Removes an event listener. Calling removeEventListenerNS with arguments 

		 which do not identify any currently registered EventListener on the 

		 EventTarget has no effect. 

		  

		 ]]></description>
<param><![CDATA[namespaceURI Specifies the Event.namespaceURI associated with the event for which the user registered the event listener.

		 ]]></param>
<param><![CDATA[type Specifies the Event.type for which the user registered 

		 the event listener.

		 ]]></param>
<param><![CDATA[listener The EventListener to be removed.

		 ]]></param>
<param><![CDATA[useCapture Specifies whether the EventListener being removed 

		 was registered for the capture phase or not. If a listener was 

		 registered twice, once for the capture phase and once for the target 

		 and bubbling phases, each must be removed separately. Removal of an 

		 event listener registered for the capture phase does not affect the 

		 same event listener registered for the target and bubbling phases, 

		 and vice versa.

		 

		 ]]></param>
</method>
<method name='resizeBy' fullname='dom:Window/resizeBy' isStatic='false' isFinal='false' isOverride='false'  param_names='xDelta;yDelta' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Resizes the current window by a certain amount. 

		 

		 <p>Note: This method resizes the window relative to its current size. To resize the window 

		 in absolute terms, use window.resizeTo. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // shrink the window 

		 window.resizeBy(-200, -200);</listing>

		 ]]></example>
<param><![CDATA[xDelta The number of pixels to grow the window horizontally. 

		 ]]></param>
<param><![CDATA[yDelta The number of pixels to grow the window vertically. 

		 

		 ]]></param>
<see><![CDATA[dom.Window#resizeTo()

		 

		 ]]></see>
</method>
<method name='resizeTo' fullname='dom:Window/resizeTo' isStatic='false' isFinal='false' isOverride='false'  param_names='width;height' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Dynamically resizes window. 

		 

		 ]]></description>
<param><![CDATA[width The new width in pixels. 

		 ]]></param>
<param><![CDATA[height The new height in pixels. 

		 

		 ]]></param>
<see><![CDATA[dom.Window#resizeBy()

		 ]]></see>
</method>
<method name='restore' fullname='dom:Window/restore' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/window.restore http://developer.mozilla.org/En/DOM/window.restore

		 ]]></see>
</method>
<method name='routeEvent' fullname='dom:Window/routeEvent' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Window.routeEvent http://developer.mozilla.org/En/DOM/Window.routeEvent

		 ]]></see>
<see><![CDATA[dom.Window#captureEvents()

		 ]]></see>
<see><![CDATA[dom.Window#releaseEvents()

		 ]]></see>
</method>
<method name='scroll' fullname='dom:Window/scroll' isStatic='false' isFinal='false' isOverride='false'  param_names='xCoord;yCoord' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Scrolls the window to a particular place in the document. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // put the 100th vertical pixel at the top of the window 

		 &lt;button onClick="scroll(0, 100);"&gt;click to scroll down 100 pixels&lt;/button&gt;</listing>

		 ]]></example>
<param><![CDATA[xCoord The pixel along the horizontal axis of the document that you want displayed in the upper left. 

		 ]]></param>
<param><![CDATA[yCoord The pixel along the vertical axis of the document that you want displayed in the upper left. 

		 ]]></param>
</method>
<method name='scrollBy' fullname='dom:Window/scrollBy' isStatic='false' isFinal='false' isOverride='false'  param_names='x;y' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Scrolls the document in the window by the given amount. 

		 

		 <p>Note: Positive co-ordinates will scroll to the right and down the page. Negative values 

		 will scroll to the left and up the page. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // scroll one page 

		 window.scrollBy(0, window.innerHeight);</listing>

		 ]]></example>
<param><![CDATA[x the offset in pixels to scroll horizontally. 

		 ]]></param>
<param><![CDATA[y the offset in pixels to scroll vertically. 

		 

		 ]]></param>
</method>
<method name='scrollByLines' fullname='dom:Window/scrollByLines' isStatic='false' isFinal='false' isOverride='false'  param_names='lines' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Scrolls the document by the given number of lines. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // scroll down the document by 5 lines.

		 &lt;button onclick="scrollByLines(5);"&gt;down 5 lines&lt;/button&gt;</listing>

		 ]]></example>
<param><![CDATA[lines The number of lines to scroll the document by. 

		 

		 ]]></param>
</method>
<method name='scrollByPages' fullname='dom:Window/scrollByPages' isStatic='false' isFinal='false' isOverride='false'  param_names='pages' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Scrolls the current document by the specified number of pages. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // scroll down the document by 1 page 

		 window.scrollByPages(1);</listing>

		 ]]></example>
<param><![CDATA[pages The number of pages to scroll. 

		 

		 ]]></param>
</method>
<method name='scrollTo' fullname='dom:Window/scrollTo' isStatic='false' isFinal='false' isOverride='false'  param_names='xCoord;yCoord' param_types='Number;Number' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Scrolls to a particular set of coordinates in the document. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>window.scrollTo(0, 1000);</listing>

		 ]]></example>
<param><![CDATA[xCoord The pixel along the horizontal axis of the document that you want displayed in the upper left. 

		 ]]></param>
<param><![CDATA[yCoord The pixel along the vertical axis of the document that you want displayed in the upper left. 

		 

		 ]]></param>
</method>
<method name='setCursor' fullname='dom:Window/setCursor' isStatic='false' isFinal='false' isOverride='false'  param_names='state' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Changes the cursor for the current window. 

		 

		 <p>Note: The cursor isn't reset until it's set back to auto.</p>

		 

		 <p>Note: This function is unavailable to web pages, which can use CSS cursor property instead.</p>

		 

		 ]]></description>
<param><![CDATA[state What state to set the cursor to. Valid settings can be: "wait", "auto"...

		 ]]></param>
</method>
<method name='setInterval' fullname='dom:Window/setInterval' isStatic='false' isFinal='false' isOverride='false'  param_names='func;delay' param_types='Function;Number' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Calls a function repeatedly, with a fixed time delay between each call to that function.

		 

		 Note: setInterval() will pass the number of milliseconds late the callback was called into 

		 the callback function, which can confuse it if it expects something else as an argument. To 

		 sidestep that problem, use an anonymous function to call your callback.

		 

		 Note: When you pass a method to setInterval() (or any other function, for that matter), it 

		 will be invoked with a wrong <code>this</code> value.

		 

		 ]]></description>
<param><![CDATA[func The function you want to be called repeatedly.

		 ]]></param>
<param><![CDATA[delay The number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.

		 ]]></param>
<return><![CDATA[A unique interval ID

		 

		 ]]></return>
<see><![CDATA[#clearInterval()

		 ]]></see>
</method>
<method name='setResizable' fullname='dom:Window/setResizable' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Undocumented

		 

		 ]]></description>
<see><![CDATA[http://developer.mozilla.org/En/DOM/window.setResizable http://developer.mozilla.org/En/DOM/window.setResizable 

		 ]]></see>
</method>
<method name='setTimeout' fullname='dom:Window/setTimeout' isStatic='false' isFinal='false' isOverride='false'  param_names='func;delay' param_types='Function;Number' param_defaults='undefined;undefined' result_type='Number'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Executes a code snippet or a function after specified delay. 

		 

		 Note: Code executed by setTimeout() is run in a separate execution context to the function from 

		 which it was called. As a consequence, the <code>this</code> keyword for the called function will be set to 

		 the window (or global) object, it will not be the same as the <code>this</code> value for the function that 

		 called setTimeout.

		 

		 ]]></description>
<param><![CDATA[func The function you want to execute after delay milliseconds. 

		 ]]></param>
<param><![CDATA[delay The number of milliseconds (thousandths of a second) that the function call should be delayed by. 

		 ]]></param>
<return><![CDATA[The ID of the timeout

		 

		 ]]></return>
<see><![CDATA[#clearTimeout()

		 ]]></see>
</method>
<method name='showModalDialog' fullname='dom:Window/showModalDialog' isStatic='false' isFinal='false' isOverride='false'  param_names='uri;arguments;options' param_types='dom.core.types:DOMString;dom.core.types:DOMString' param_defaults='undefined;null;null' result_type='*'>
<description><![CDATA[

		 <strong>Non-Standard | IE4 Firefox3</strong> 

		 

		 Creates and displays a modal dialog box containing a specified HTML document. 

		 

		 <p>Note: Firefox does not implement the dialogHide, edge, status, or unadorned arguments.</p>

		 

		 ]]></description>
<param><![CDATA[uri The URI of the document to display in the dialog box. 

		 ]]></param>
<param><![CDATA[arguments An optional variant that contains values that should be passed to the dialog box; these are made available in the window object's window.dialogArguments property. 

		 ]]></param>
<param><![CDATA[options An optional string that specifies window ornamentation for the dialog box, using one or more semicolon delimited values: 

		 <dl><dt>center: {on | off | yes | no | 1 | 0 }</dt><dd>If this argument's value is on, yes, or 1, the dialog window is centered on the desktop; otherwise it's hidden. The default value is yes. </dd></dl>

		 <dl>dialogheight: <em>height</em><dt></dt><dd>	Specifies the height of the dialog box; by default, the size is specified in pixels. </dd></dl>

		 <dl><dt>dialogleft: <em>left</em></dt><dd>	Specifies the horizontal position of the dialog box in relation to the upper-left corner of the desktop. </dd></dl>

		 <dl><dt>dialogwidth: <em>width</em></dt><dd>Specifies the width of the dialog box; by default, the size is specified in pixels. </dd></dl>

		 <dl><dt>dialogtop: <em>top</em></dt><dd>Specifies the vertical position of the dialog box in relation to the upper-left corner of the desktop. </dd></dl>

		 <dl><dt>resizable: {on | off | yes | no | 1 | 0 }</dt><dd>If this argument's value is on, yes, or 1, the dialog window can be resized by the user; otherwise its size is fixed. The default value is no. </dd></dl>

		 <dl><dt>scroll: {on | off | yes | no | 1 | 0 }</dt><dd>If this argument's value is on, yes, or 1, the dialog window has scroll bars; otherwise its size is fixed. The default value is no. </dd></dl>

		 <dl><dt>dialogHide:{ yes | no | 1 | 0 | on | off }</dt><dd>Specifies whether the dialog window is hidden when printing or using print preview. This feature is only available when a dialog box is opened from a trusted application. The default is no.</dd></dl>

		 <dl><dt>edge:{ sunken | raised }</dt><dd>Specifies the edge style of the dialog window. The default is raised.</dd></dl>

		 <dl><dt>status:{ yes | no | 1 | 0 | on | off }</dt><dd>Specifies whether the dialog window displays a status bar. The default is yes for untrusted dialog windows and no for trusted dialog windows.</dd></dl>

		 <dl><dt>unadorned:{ yes | no | 1 | 0 | on | off }</dt><dd>Specifies whether the dialog window displays the border window chrome. This feature is only available when a dialog box is opened from a trusted application. The default is no.</dd></dl>

		 ]]></param>
<return><![CDATA[The returnValue property as set by the window of the document specified by uri. 

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536759(VS.85).aspx MSDN: showModalDialog Method

		 ]]></see>
</method>
<method name='sizeToContent' fullname='dom:Window/sizeToContent' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Sizes the window according to its content. 

		 

		 <p>The DOM content should be loaded when this function is called, for example after the DOMContentLoaded event. </p>

		 ]]></description>
</method>
<method name='stop' fullname='dom:Window/stop' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 This method stops window loading. 

		 

		 <p>Note: The stop() method is exactly equivalent to clicking the stop button in the browser. Because of the order 

		 in which scripts are loaded, the stop() method cannot stop the document in which it is contained from loading, but

		 it will stop the loading of large images, new windows, and other objects whose loading is deferred.</p>

		 ]]></description>
</method>
<method name='unescape' fullname='dom:Window/unescape' isStatic='false' isFinal='false' isOverride='false'  param_names='escaped' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Decodes a value that has been encoded in hexadecimal (e.g., a cookie). 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 alert(unescape("%5C")); // displays "\"</listing>

		 ]]></example>
<param><![CDATA[escaped The encoded string. 

		 ]]></param>
<return><![CDATA[The decoded string. 

		 

		 ]]></return>
</method>
<method name='updateCommands' fullname='dom:Window/updateCommands' isStatic='false' isFinal='false' isOverride='false'  param_names='commandName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Updates the state of commands of the current chrome window (UI). 

		 

		 <p>Note: This enables or disables items (setting or clearing the "disabled" attribute on the command 

		 node as appropriate), or ensures that the command state reflects the state of the selection by setting 

		 current state information in the "state" attribute of the XUL command nodes. </p>

		 

		 ]]></description>
<param><![CDATA[commandName A particular string which describes what kind of update event this is (e.g. whether we are in bold right now). 

		 ]]></param>
</method>
<method name='Components' fullname='dom:Window/Components/get' isStatic='false' isFinal='false' isOverride='false'  result_type='gecko:nsIXPCComponents'>
<description><![CDATA[

		 <strong>Non-Standard | Firefox</strong> 

		 

		 The Components object is the object through which XPConnect functionality is reflected into JavaScript.

		 

		 Some properties of Components require advanced privileges and may not work in web pages. 

		 ]]></description>
</method>
<method name='applicationCache' fullname='dom:Window/applicationCache/get' isStatic='false' isFinal='false' isOverride='false'  result_type='gecko:nsIDOMOfflineResourceList'>
<description><![CDATA[

		 <strong>Non-Standard | Firefox 3+</strong> 

		 

		 Returns a reference to the application cache object for the window. 

		 

		 ]]></description>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#applicationcache

		 ]]></see>
</method>
<method name='closed' fullname='dom:Window/closed/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 This property indicates whether the referenced window is closed or not. 

		 ]]></description>
</method>
<method name='content' fullname='dom:Window/content/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom:Window'>
<description><![CDATA[

		 <strong>Non-Standard | Firefox</strong> 

		 

		 Returns a Window object for the primary content window.

		 ]]></description>
</method>
<method name='crypto' fullname='dom:Window/crypto/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:Crypto'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the browser crypto object, which can then be used to manipulate various 

		 browser security features. 

		 ]]></description>
</method>
<method name='defaultStatus' fullname='dom:Window/defaultStatus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Gets/sets the status bar text for the given window.

		 

		 Note: To set the status once the window has been opened, use window.status.

		 ]]></description>
</method>
<method name='directories' fullname='dom:Window/directories/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:BarProp'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the window directories toolbar object. 

		 ]]></description>
</method>
<method name='document' fullname='dom:Window/document/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.views:DocumentView'>
<description><![CDATA[

		 

		 The source DocumentView of which this is an AbstractView.

		 

		 ]]></description>
</method>
<method name='frameElement' fullname='dom:Window/frameElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Returns the element (such as &lt;iframe&gt; or &lt;object&gt;) in which the window is embedded, 

		 or null if the window is top-level.

		 

		 ]]></description>
<see><![CDATA[#parent

		 ]]></see>
<see><![CDATA[#frames

		 ]]></see>
</method>
<method name='frames' fullname='dom:Window/frames/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Array'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns an array-like object, listing the direct sub-frames of the current window.

		 ]]></description>
</method>
<method name='fullScreen' fullname='dom:Window/fullScreen/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 <strong>DOM Level 0 | Firefox 3+</strong>

		 

		 This property indicates whether the window is displayed in full screen mode or not.

		 

		 Note: This property is only reliable in Mozilla 1.9 (Firefox 3) and later. Mozilla 1.8 

		 and earlier do have this property, but it always returns false, even when the window 

		 is in full screen mode.

		 

		 Note: Switching between regular window and full screen will fire the "resize" event 

		 on the corresponding window. 

		 ]]></description>
</method>
<method name='globalStorage' fullname='dom:Window/globalStorage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Object'>
<description><![CDATA[

		 <strong>Non-Standard | Firefox 2</strong> 

		 

		 This is a global object (globalStorage) that maintains multiple private storage areas 

		 that can be used to hold data over a long period of time (e.g. over multiple pages 

		 and browser sessions).

		 

		 Note: Firefox 2 permitted access to storage objects higher in the domain hierarchy 

		 than the current document. This is no longer allowed in Firefox 3, for security 

		 reasons. In addition, this proposed addition to HTML 5 has been removed from the 

		 HTML 5 specification in favor of localStorage, which is implemented in Firefox 3.5.

		 ]]></description>
</method>
<method name='history' fullname='dom:Window/history/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:History'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns a reference to the History object, which provides an interface for manipulating 

		 the browser session history (pages visited in the tab or frame that the current page is loaded in).

		 ]]></description>
</method>
<method name='innerHeight' fullname='dom:Window/innerHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.

		 

		 <p><strong>Note:</strong> The innerHeight property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>

		 

		 ]]></description>
<example><![CDATA[
		 Assuming a frameset

		 <listing>

		 var intFrameHeight = window.innerHeight; // or

		 var intFrameHeight = self.innerHeight; // will return the height of the frame viewport within the frameset

		 var intFramesetHeight = parent.innerHeight; // will return the height of the viewport of the closest frameset

		 var intOuterFramesetHeight = top.innerHeight; // will return the height of the viewport of the outermost frameset</listing>

		 

		 ]]></example>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.innerHeight  MDC - Window: innerHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: innerHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#outerWidth

		 ]]></see>
<see><![CDATA[#innerWidth

		 ]]></see>
<see><![CDATA[#outerHeight

		 

		 ]]></see>
</method>
<method name='innerWidth' fullname='dom:Window/innerWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Width of the browser window viewport including, if rendered, the vertical scrollbar.

		 

		 <p><strong>Note:</strong> The innerWidth property does not include the sidebar. So when the sidebar is expanded, the innerWidth property value diminishes.</p>

		 

		 <p><strong>Note:</strong> The innerWidth property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>

		 

		 ]]></description>
<example><![CDATA[
		 Assuming a frameset

		 <listing>

		 var intFrameWidth = window.innerWidth; // or

		 var intFrameWidth = self.innerWidth; // will return the width of the frame viewport within the frameset

		 var intFramesetWidth = parent.innerWidth; // will return the width of the viewport of the closest frameset

		 var intOuterFramesetWidth = top.innerWidth; // will return the width of the viewport of the outermost frameset</listing>

		 

		 ]]></example>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.innerWidth  MDC - Window: innerWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: innerWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#outerWidth

		 ]]></see>
<see><![CDATA[#innerHeight

		 ]]></see>
<see><![CDATA[#outerHeight

		 

		 ]]></see>
</method>
<method name='length' fullname='dom:Window/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the number of frames (either frame or iframe elements) in the window. 

		 ]]></description>
</method>
<method name='localStorage' fullname='dom:Window/localStorage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='webstorage:Storage'>
<description><![CDATA[

		 <strong>Web Storage</strong>

		 

		 This is a global object that maintains multiple private storage areas 

		 that can be used to hold data over a long period of time (e.g. over multiple pages 

		 and browser sessions).

		 

		 Note Firefox 3.5: When the browser goes into private browsing mode, a new, temporary database 

		 is created to store local storage data; this database is empty, and is thrown away 

		 when private browsing mode is turned off.

		 

		 ]]></description>
<see><![CDATA[http://www.w3.org/TR/webstorage/

		 ]]></see>
</method>
<method name='location' fullname='dom:Window/location/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:Location'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Returns a  Location object, which contains information about the URL 

		 of the document and provides methods for changing that URL.

		 ]]></description>
</method>
<method name='locationbar' fullname='dom:Window/locationbar/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:BarProp'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the locationbar object, whose visibility can be toggled in the window. 

		 ]]></description>
</method>
<method name='media' fullname='dom:Window/media/get' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:Media'>
<description><![CDATA[

		 

		 Returns an Media object.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_no

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_no

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_no

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_no

		 ]]></productversion>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: media Property

		 

		 ]]></see>
</method>
<method name='menubar' fullname='dom:Window/menubar/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:BarProp'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the menubar object, whose visibility can be toggled in the window. 

		 ]]></description>
</method>
<method name='name' fullname='dom:Window/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Gets/sets the name of the window.

		 

		 Note: The name of the window is used primarily for setting targets for hyperlinks 

		 and forms. Windows do not need to have names.

		 ]]></description>
</method>
<method name='navigator' fullname='dom:Window/navigator/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:Navigator'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns a reference to the navigator object, which can be queried for information 

		 about the application running the script. 

		 ]]></description>
</method>
<method name='onabort' fullname='dom:Window/onabort/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for abort events sent to the window. (Not available with Firefox 2 or Safari) 

		 ]]></description>
</method>
<method name='onbeforeunload' fullname='dom:Window/onbeforeunload/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event that fires before the unload event when the page is unloaded. 

		 

		 <p>Note: There is no public specification. onbeforeunload was introduced by Microsoft IE 4 and has subsequently been copied by other browsers. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 window.onbeforeunload = function (e) {

		 		var e = e || window.event;

		 

		 		// For IE and Firefox

		 		if (e) {

		 			e.returnValue = 'Any string';

		 		}

		 

		 		// For Safari

		 		return 'Any string';

		 };</listing>

		 

		 ]]></example>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536907(VS.85).aspx MSDN—onbeforeunload Event

		 ]]></see>
<exampleText><![CDATA[The function should assign a string value to the returnValue property of the Event object and return the same string/

		 ]]></exampleText>
</method>
<method name='onblur' fullname='dom:Window/onblur/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 The onblur property can be used to set the blur handler on the window, which is triggered when the window loses focus. 

		 ]]></description>
</method>
<method name='onchange' fullname='dom:Window/onchange/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for change events sent to the window. 

		 ]]></description>
</method>
<method name='onclick' fullname='dom:Window/onclick/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 Called when the user clicks the mouse button while the cursor is in the window. This event is fired for any mouse button 

		 pressed; you can look at the event properties to find out which button was pressed and where. 

		 

		 <p>Note: The click event is raised when the user clicks on the window.</p>

		 ]]></description>
</method>
<method name='onclose' fullname='dom:Window/onclose/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for close events sent to the window. (Not available with Firefox 2 or Safari) 

		 ]]></description>
</method>
<method name='oncontextmenu' fullname='dom:Window/oncontextmenu/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler property for right-click events on the window. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 window.oncontextmenu = function () {

		 		return false;

		 }

		 //this will disable right click on the page</listing>

		 ]]></example>
</method>
<method name='ondragdrop' fullname='dom:Window/ondragdrop/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for drag and drop events sent to the window. 

		 

		 <p>Note: The window.ondragdrop property and the ondragdrop attribute are not implemented in Gecko, 

		 you have to use addEventListener.</p>

		 

		 <p>Note: The event.data array available in NN4 seems to be unavailable in Gecko [1].</p>

		 

		 ]]></description>
<see><![CDATA[#addEventListener()

		 ]]></see>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=112288 bug 112288

		 ]]></see>
<see><![CDATA[http://forums.mozillazine.org/viewtopic.php?p=863806 [1]

		 ]]></see>
</method>
<method name='onerror' fullname='dom:Window/onerror/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for error events sent to the window. 

		 

		 <p>Note: When the function returns true, this prevents the firing of the default event handler. Function parameters: 

		 <ul>

		 <li>Error message (string) </li>

		 <li>Url where error was raised (string) </li>

		 <li>Error code (number) </li>

		 </ul>

		 </p>

		 

		 <p>Note: The error event is raised when an error occurs in the script. The example above prevents error 

		 dialogs from displaying-which is the window's normal behavior-by overriding the default event handler for error events that go to the window. </p>

		 

		 <p>Note: When using the inline html markup (&lt;body onerror="alert('an error occurred')&gt;...), the arguments 

		 are not named. They can be referenced by arguments[0] through arguments[2]. </p>

		 ]]></description>
</method>
<method name='onfocus' fullname='dom:Window/onfocus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for focus events sent to the window. 

		 

		 <p>Note: The focus event is raised when the user sets focus on the current window. </p>

		 ]]></description>
</method>
<method name='onkeydown' fullname='dom:Window/onkeydown/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the keydown event on the window. 

		 

		 <p>Note: The keydown event is raised when the user presses any key. </p>

		 ]]></description>
</method>
<method name='onkeypress' fullname='dom:Window/onkeypress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the keypress event on the window. 

		 

		 <p>Note: The keypress event is raised when the user presses and releases any key on the keyboard. </p>

		 

		 <p>Note: Under FF 1.0.5.4 this event fires before the keyup event is detected, i.e. it appears to work exactly like onkeydown. </p>

		 ]]></description>
</method>
<method name='onkeyup' fullname='dom:Window/onkeyup/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the keyup event on the window. 

		 

		 <p>Note: The keyup event is raised when a key that has been pressed is released. </p>

		 ]]></description>
</method>
<method name='onload' fullname='dom:Window/onload/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 An event handler for the load event of a window. 

		 

		 <p>Note: The load event fires at the end of the document loading process. At this point, all of the objects in the document 

		 are in the DOM, and all the images and sub-frames have finished loading. </p>

		 

		 <p>Note: There is also Gecko-Specific DOM Events like DOMContentLoaded and DOMFrameContentLoaded events (which can be handled 

		 using addEventListener) which are fired after the DOM for the page has been constructed, but don't wait for other resources 

		 to finish loading. </p>

		 ]]></description>
</method>
<method name='onmousedown' fullname='dom:Window/onmousedown/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the mousedown event on the window.

		 

		 <p>Note: The mousedown event is raised when the user clicks the mouse button anywhere in the document.</p>

		 ]]></description>
</method>
<method name='onmousemove' fullname='dom:Window/onmousemove/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the mousemove event on the window. 

		 

		 <p>Note: The mousemove event fires when the user moves the mouse pointer by 1 pixel or more in any direction in the browser window. </p>

		 ]]></description>
</method>
<method name='onmouseout' fullname='dom:Window/onmouseout/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the mouseout event on the window. 

		 

		 <p>Note: The mouseout event is raised when the mouse leaves the area of the specified element (in this case the window itself). </p>

		 ]]></description>
</method>
<method name='onmouseover' fullname='dom:Window/onmouseover/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the mouseover event on the window. 

		 

		 <p>Note: The mouseover event is raised when the mouse pointer moves over the current element (in this case the window itself). </p>

		 ]]></description>
</method>
<method name='onmouseup' fullname='dom:Window/onmouseup/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the mouseup event on the window.

		 

		 <p>Note: The mouseup event is raised when the user unclicks the mouse button anywhere in the document.</p>

		 ]]></description>
</method>
<method name='onpaint' fullname='dom:Window/onpaint/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 An event handler for the paint event on the window.

		 

		 <p>Note: <code>onpaint</code> doesn't work currently, and it is questionable whether this event is going to work at all.</p>

		 

		 <p>Note: The paint event is raised when the window is rendered. This event occurs after the load event for a window, and 

		 reoccurs each time the window needs to be re-rendered, as when another window obscures it and is then cleared away. </p>

		 

		 ]]></description>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=239074 bug 239074

		 ]]></see>
</method>
<method name='onreset' fullname='dom:Window/onreset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the reset event on the window. 

		 

		 <p>Note: The reset event is raised when the user clicks a reset button in a form (<input type="reset"/>). </p>

		 

		 ]]></description>
</method>
<method name='onresize' fullname='dom:Window/onresize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the resize event on the window. 

		 

		 <p>Note: The resize event is fired after the window has been resized. </p>

		 ]]></description>
</method>
<method name='onscroll' fullname='dom:Window/onscroll/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 Specifies the function to be called when the window is scrolled. 

		 

		 <p>Note: When the window.scrollX/scrollY isn't 0 -- meaning that some scrolling occurred by either script or 

		 manual action -- reloading the current page will trigger the onscroll event immediately. </p>

		 

		 <p>Note: In older versions of Gecko caused onscroll to be fired only when dragging the scroll bar, not when 

		 using cursor keys or mousewheel. This was fixed in Gecko 1.8/Firefox 1.5.</p>

		 ]]></description>
</method>
<method name='onselect' fullname='dom:Window/onselect/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the select event on the window. 

		 

		 <p>Note: The select event only fires when text inside a text input or textarea is selected. The event is fired after the text has been selected. </p>

		 ]]></description>
</method>
<method name='onsubmit' fullname='dom:Window/onsubmit/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 An event handler for the submit event on the window. 

		 

		 <p>Note: The submit event is raised when the user clicks a submit button in a form (<input type="submit"/>). </p>

		 ]]></description>
</method>
<method name='onunload' fullname='dom:Window/onunload/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 The unload event is raised when the document is unloaded. 

		 

		 <p>Note: Using this event handler in your page prevents Firefox 1.5 from caching the page in the in-memory bfcache.</p>

		 

		 <p>Note: Browsers equipped with pop-up window blockers will ignore all window.open() method calls in onunload event handler functions.</p>

		 ]]></description>
</method>
<method name='opener' fullname='dom:Window/opener/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom:WindowProxy'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns a reference to the window that opened this current window. 

		 

		 Note: When a window is opened from another window, it maintains a reference to that first window 

		 as window.opener. If the current window has no opener, this method returns NULL. 

		 ]]></description>
</method>
<method name='outerHeight' fullname='dom:Window/outerHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Gets the height of the outside of the browser window. window.outerHeight represents the height of 

		 the whole browser window including toolbars and window chrome.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.outerHeight  MDC - Window: outerHeight Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: outerHeight Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#innerWidth

		 ]]></see>
<see><![CDATA[#innerHeight

		 ]]></see>
<see><![CDATA[#outerWidth

		 

		 ]]></see>
</method>
<method name='outerWidth' fullname='dom:Window/outerWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Gets the width of the outside of the browser window. window.outerWidth represents the width of 

		 the whole browser window including sidebar (if expanded), window chrome and window [re-]sizing borders/handles.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.outerWidth  MDC - Window: outerWidth Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: outerWidth Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#innerWidth

		 ]]></see>
<see><![CDATA[#innerHeight

		 ]]></see>
<see><![CDATA[#outerHeight

		 

		 ]]></see>
</method>
<method name='pageXOffset' fullname='dom:Window/pageXOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the number of pixels that the document has already been scrolled horizontally. 

		 

		 <p><strong>Note:</strong> <code>window.pageXOffset == window.scrollX; // always true</code></p>

		 

		  ]]></description>
<example><![CDATA[
		 <listing>

		 // make sure and go over to the second horizontal page

		 if (window.scrollX) {

		 	scroll(0,0);

		 }

		 scrollBy(400, 0);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.pageXOffset  MDC - Window: pageXOffset Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: pageXOffset Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#pageYOffset

		 

		 ]]></see>
</method>
<method name='pageYOffset' fullname='dom:Window/pageYOffset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport. 

		 

		 <p><strong>Note:</strong> <code>window.pageYOffset == window.scrollY; // always true</code></p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // make sure and go over to the second horizontal page

		 if (window.scrollY) {

		 	scroll(0,0);

		 }

		 scrollByPages(1);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.pageYOffset  MDC - Window: pageYOffset Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: pageYOffset Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[pageXOffset

		 

		 ]]></see>
</method>
<method name='parent' fullname='dom:Window/parent/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom:Window'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Returns a reference to the parent of the current window or subframe.

		 

		 If a window does not have a parent, its parent property is a reference to itself.

		 

		 ]]></description>
<see><![CDATA[#top

		 ]]></see>
<see><![CDATA[#frameElement

		 ]]></see>
</method>
<method name='personalbar' fullname='dom:Window/personalbar/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:BarProp'>
<description><![CDATA[

		 Returns the personalbar object, whose visibility can be toggled in the window. 

		 ]]></description>
</method>
<method name='pkcs11' fullname='dom:Window/pkcs11/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:Pkcs11'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the pkcs11 object , which can be used to install drivers and other software 

		 associated with the pkcs11 protocol. 

		 

		 <p><strong>Note (Mozilla):</strong> The window.pkcs11 property has been removed in newer 

		 versions of Firefox (3.5+) for security reasons. For more information on installing PKCS11 

		 modules, see <a target="mm_external" rel="external nofollow" href="http://developer.mozilla.org/en/PKCS11_Jar_Install">installing PKCS11 modules</a>. See 

		 <a target="mm_external" rel="external nofollow" href="http://bugzilla.mozilla.org/show_bug.cgi?id=326628" >bug 

		 326628</a> for details on why the property was removed.</p>

		 ]]></description>
</method>
<method name='returnValue' fullname='dom:Window/returnValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='*'>
<description><![CDATA[

		 <strong>Non-Standard? | Firefox 3+</strong>

		 

		 The return value to be returned to the function that called window.showModalDialog() 

		 to display the window as a modal dialog. 

		 ]]></description>
</method>
<method name='screen' fullname='dom:Window/screen/get' isStatic='false' isFinal='false' isOverride='false'  result_type='cssom.view:Screen'>
<description><![CDATA[

		 

		 Returns a reference to the screen object associated with the window. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (screen.pixelDepth &lt; 8) {

		 	// use low-color version of page

		 } else { 

		 	// use regular, colorful page

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screen MDC - Window: screen Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface W3C - CSSOM View: screen Property

		 ]]></see>
<see><![CDATA[http://www.aptana.com/reference/html/api/Window.html#Window.screen  Aptana: Window.screen Property

		 

		 ]]></see>
</method>
<method name='screenX' fullname='dom:Window/screenX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen. 

		 

		 <p><strong>Note (Opera):</strong> Opera calculates the coordinates of the specific tab window relative to 

		 the encompassing browser window. This is understandable given its way of working with 

		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 

		 browser window relative to the screen.</p>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screenX  MDC - Window: screenX Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: screenX Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#screenY

		 

		 ]]></see>
</method>
<method name='screenY' fullname='dom:Window/screenY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 

		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen. 

		 

		 <p><strong>Note (Opera):</strong> Opera calculates the coordinates of the specific tab window relative to 

		 the encompassing browser window. This is understandable given its way of working with 

		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 

		 browser window relative to the screen.</p>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.1b

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_incorrect

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_incorrect

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/window.screenY  MDC - Window: screenY Property

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/cssom-view/#the-windowview-interface  W3C - CSSOM View: screenY Property

		 ]]></see>
<see><![CDATA[http://www.quirksmode.org/dom/w3c_cssom.html#windowview  Quirksmode: WindowView properties

		 ]]></see>
<see><![CDATA[#screenX

		 

		 ]]></see>
</method>
<method name='scrollMaxX' fullname='dom:Window/scrollMaxX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the maximum number of pixels that the document can be scrolled horizontally. 

		 

		 Note: Use this property to get the total document width, which is equivalent to 

		 window.innerWidth + window.scrollMaxX. 

		 

		 ]]></description>
<see><![CDATA[dom.Window#scrollMaxY

		 ]]></see>
</method>
<method name='scrollMaxY' fullname='dom:Window/scrollMaxY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the maximum number of pixels that the document can be scrolled vertically. 

		 

		 Note: Use this property to get the total document height, which is equivalent to 

		 window.innerHeight + window.scrollMaxY. 

		 

		 ]]></description>
<see><![CDATA[dom.Window#scrollMaxX

		 ]]></see>
</method>
<method name='scrollX' fullname='dom:Window/scrollX/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the number of pixels that the document has already been scrolled horizontally. 

		 

		 Note: Use this property to check that the document hasn't already been scrolled some if 

		 you are using relative scroll functions such as window.scrollBy, window.scrollByLines, 

		 or window.scrollByPages. 

		 

		 Note: The pageXOffset property is an alias for the scrollX property.

		 

		 ]]></description>
<see><![CDATA[dom.window#pageXOffset

		 ]]></see>
</method>
<method name='scrollY' fullname='dom:Window/scrollY/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the number of pixels that the document has already been scrolled vertically. 

		 

		 Note: Use this property to check that the document hasn't already been scrolled some if 

		 you are using relative scroll functions such as window.scrollBy, window.scrollByLines, 

		 or window.scrollByPages. 

		 

		 Note: The pageYOffset property is an alias for the scrollY property.

		 

		 ]]></description>
<see><![CDATA[dom.window#pageYOffset

		 ]]></see>
</method>
<method name='scrollbars' fullname='dom:Window/scrollbars/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:BarProp'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the scrollbars object, whose visibility can be toggled in the window. 

		 

		 Note: Note that scrollbars is not an array of the scrollbars. The visibility of these 

		 objects can only be controlled as a group. 

		 ]]></description>
</method>
<method name='self' fullname='dom:Window/self/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom:WindowProxy'>
<description><![CDATA[

		 Returns a self-reference.

		 ]]></description>
</method>
<method name='sessionStorage' fullname='dom:Window/sessionStorage/get' isStatic='false' isFinal='false' isOverride='false'  result_type='webstorage:Storage'>
<description><![CDATA[

		 <strong>HTML5 | Firefox 3+</strong>

		 

		 This is a global object (sessionStorage) that maintains a storage area that's available 

		 for the duration of the page session. A page session lasts for as long as the browser is 

		 open and survives over page reloads and restores. Opening a page in a new tab or window 

		 will cause a new session to be initiated.

		 

		 The sessionStorage object is most useful for hanging on to temporary data that should be

		 saved and restored if the browser is accidentally refreshed.

		 

		 Note: Prior to Firefox 3.5, sessionStorage data was not restored automatically after 

		 recovering from a browser crash. Starting in Firefox 3.5, this works as per the specification.

		 ]]></description>
</method>
<method name='sidebar' fullname='dom:Window/sidebar/get' isStatic='false' isFinal='false' isOverride='false'  result_type='gecko.dom.objects:Sidebar'>
<description><![CDATA[

		 <strong>Non-Standard | Firefox</strong>

		 

		 Returns a reference to the window object of the sidebar. 

		 ]]></description>
</method>
<method name='status' fullname='dom:Window/status/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Sets the text in the status bar at the bottom of the browser or returns the previously set text. 

		 

		 Note Firefox: This property does not work in default configuration of Firefox and some 

		 other browsers: setting window.status has no effect on the text displayed in the status 

		 bar. To allow scripts change the the status bar text, the user must set the 

		 dom.disable_window_status_change preference to false in the about:config screen. 

		 ]]></description>
</method>
<method name='statusbar' fullname='dom:Window/statusbar/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:BarProp'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the statusbar object, whose visibility can be toggled in the window. 

		 ]]></description>
</method>
<method name='toolbar' fullname='dom:Window/toolbar/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:BarProp'>
<description><![CDATA[

		 <strong>DOM Level 0</strong>

		 

		 Returns the toolbar object, whose visibility can be toggled in the window. 

		 ]]></description>
</method>
<method name='top' fullname='dom:Window/top/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom:WindowProxy'>
<description><![CDATA[

		 <strong>DOM Level 0</strong> 

		 

		 Returns a reference to the topmost window in the window hierarchy. 

		 ]]></description>
</method>
<method name='window' fullname='dom:Window/window/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom:WindowProxy'>
<description><![CDATA[

		 Returns a self-reference.

		 ]]></description>
</method>
<method name='defaultStatus' fullname='dom:Window/defaultStatus/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='fullScreen' fullname='dom:Window/fullScreen/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom:Window/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onabort' fullname='dom:Window/onabort/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onbeforeunload' fullname='dom:Window/onbeforeunload/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onblur' fullname='dom:Window/onblur/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onchange' fullname='dom:Window/onchange/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onclick' fullname='dom:Window/onclick/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onclose' fullname='dom:Window/onclose/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='oncontextmenu' fullname='dom:Window/oncontextmenu/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='ondragdrop' fullname='dom:Window/ondragdrop/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onerror' fullname='dom:Window/onerror/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onfocus' fullname='dom:Window/onfocus/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onkeydown' fullname='dom:Window/onkeydown/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onkeypress' fullname='dom:Window/onkeypress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onkeyup' fullname='dom:Window/onkeyup/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onload' fullname='dom:Window/onload/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmousedown' fullname='dom:Window/onmousedown/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmousemove' fullname='dom:Window/onmousemove/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmouseout' fullname='dom:Window/onmouseout/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmouseover' fullname='dom:Window/onmouseover/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmouseup' fullname='dom:Window/onmouseup/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onpaint' fullname='dom:Window/onpaint/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onreset' fullname='dom:Window/onreset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onresize' fullname='dom:Window/onresize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onscroll' fullname='dom:Window/onscroll/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onselect' fullname='dom:Window/onselect/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onsubmit' fullname='dom:Window/onsubmit/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onunload' fullname='dom:Window/onunload/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='status' fullname='dom:Window/status/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='WindowProxy' fullname='dom:WindowProxy' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\WindowProxy.as' namespace='dom' access='public' baseclass='dom:Window' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Must proxy all operations to the Window object of the browsing context's active document.

	 

	 It is indistinguishable from that Window object in every way, except that it is not equal to it.

	 

	 ]]></description>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#windowproxy

	 ]]></see>
</classRec>
<classRec name='HTMLElement' fullname='dom.html:HTMLElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLElement.as' namespace='dom.html' access='public' baseclass='dom.core:Element' interfaces='dom.style.css:ElementCSSInlineStyle' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 All HTML element interfaces derive from this class. Elements that only 

	 expose the HTML core attributes are represented by the base 

	 HTMLElement interface. These elements are as follows:

	 

	 <ul>

	 <li>special: SUB, SUP, SPAN, BDO</li>

	 <li>font: TT, I, B, U, S, STRIKE, BIG, SMALL</li>

	 <li>phrase: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ACRONYM, ABBR</li>

	 <li>list: DD, DT</li>

	 <li>NOFRAMES, NOSCRIPT</li>

	 <li>ADDRESS, CENTER</li>

	 </ul>

	 

	 DOM Level 2

	 

	 ]]></description>
<internal><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#htmlelement

	 ]]></internal>
</classRec>
<method name='className' fullname='dom.html:HTMLElement/className/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The class attribute of the element. This attribute has been renamed 

		 due to conflicts with the "class" keyword exposed by many languages. 

		 See the class attribute definition in HTML 4.01.

		 

		 ]]></description>
<example><![CDATA[
		 var elementNodeReference = document.getElementById("div1");

		 if (elementNodeReference.className == "fixed") {

		 // skip a particular class of element

		 goNextElement();

		 };

		 ]]></example>
</method>
<method name='dir' fullname='dom.html:HTMLElement/dir/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The dir attribute gets or sets the text writing directionality of 

		 the content of the current element. 

		 

		 Possible values for dir are ltr, for Left-to-right, and rtl, for Right-to-left. 

		 

		 Note: The text writing directionality of an element is which direction 

		 that text goes (for support of different language systems). Arabic 

		 languages and Hebrew are typical languages using the rtl directionality.

		 

		 Note: An image can have its dir attribute set to rtl in which case the 

		 HTML attributes title and alt will be formatted and defined as rtl.

		 

		 Note: When a table has its dir set to rtl, the column order are arranged 

		 from right to left. 

		 

		 ]]></description>
<example><![CDATA[
		 var parg = document.getElementById("para1");

		 parg.dir = "rtl"; 

		 // change the text direction on a paragraph identified as "para1"

		 ]]></example>
</method>
<method name='id' fullname='dom.html:HTMLElement/id/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets or sets the element's identifier. 

		 

		 Note: The ID must be unique in a document, and is often used to 

		 retrieve the element using document.getElementById. 

		 ]]></description>
</method>
<method name='lang' fullname='dom.html:HTMLElement/lang/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This property gets or sets the base language of an element's attribute 

		 values and text content. 

		 

		 Note: The language code returned by this property is defined in 

		 RFC 1766. Common examples include "en" for English, "ja" for 

		 Japanese, "es" for Spanish and so on. The default value of this 

		 attribute is unknown. Note that this attribute, though valid at the 

		 individual element level described here, is most often specified for 

		 the root element of the document.

		 

		 Note: This also only works with the deprecated lang attribute and not 

		 with xml:lang.

		 

		 ]]></description>
<example><![CDATA[
		 // this snippet compares the base language and 

		 // redirects to another url based on language

		 if (document.documentElement.lang == "en") {

		 window.location.href = "Some_document.html.en";

		 } else if(document.documentElement.lang == "ru") {

		 window.location.href = "Some_document.html.ru";

		 };

		 ]]></example>
</method>
<method name='onclick' fullname='dom.html:HTMLElement/onclick/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a pointer button was clicked

		 ]]></description>
</method>
<method name='oncopy' fullname='dom.html:HTMLElement/oncopy/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 <strong>Non-Standard | Firefox 3+</strong>

		 

		 This event is sent when the user attempts to copy text.

		 ]]></description>
</method>
<method name='oncut' fullname='dom.html:HTMLElement/oncut/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 <strong>Non-Standard | Firefox 3+</strong>

		 

		 This event is sent when the user attempts to cut text.

		 ]]></description>
</method>
<method name='ondblclick' fullname='dom.html:HTMLElement/ondblclick/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a pointer button was double clicked

		 ]]></description>
</method>
<method name='onkeydown' fullname='dom.html:HTMLElement/onkeydown/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a key was pressed down

		 ]]></description>
</method>
<method name='onkeypress' fullname='dom.html:HTMLElement/onkeypress/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a key was pressed and released

		 ]]></description>
</method>
<method name='onkeyup' fullname='dom.html:HTMLElement/onkeyup/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a key was released

		 ]]></description>
</method>
<method name='onmousedown' fullname='dom.html:HTMLElement/onmousedown/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a pointer button was pressed down

		 ]]></description>
</method>
<method name='onmousemove' fullname='dom.html:HTMLElement/onmousemove/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a pointer was moved within

		 ]]></description>
</method>
<method name='onmouseout' fullname='dom.html:HTMLElement/onmouseout/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a pointer was moved away

		 ]]></description>
</method>
<method name='onmouseover' fullname='dom.html:HTMLElement/onmouseover/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a pointer was moved onto

		 ]]></description>
</method>
<method name='onmouseup' fullname='dom.html:HTMLElement/onmouseup/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 a pointer button was released

		 ]]></description>
</method>
<method name='onpaste' fullname='dom.html:HTMLElement/onpaste/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 <strong>Non-Standard | Firefox 3+</strong>

		 

		 This event is sent when the user attempts to paste text.

		 ]]></description>
</method>
<method name='style' fullname='dom.html:HTMLElement/style/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.style.css:CSSStyleDeclaration'>
<description><![CDATA[

		 

		 Returns an object that represents the element's style attribute.

		 

		 <p>Note: Since the style property has the same (and highest) priority 

		 in the CSS cascade as an inline style declaration via the style 

		 attribute, it is useful for setting style on one specific element.</p>

		 

		 <p>Note: However, it is not useful for learning about the element's 

		 style in general, since it represents only the CSS declarations set 

		 in the element's inline style attribute, not those that come from 

		 style rules elsewhere, such as style rules in the &lt;head&gt; section, or

		 external style sheets.</p>

		 

		 <p><strong>Note:</strong> To get the values of all CSS properties for an element you 

		 should use window.getComputedStyle instead.</p>

		 

		 ]]></description>
</method>
<method name='title' fullname='dom.html:HTMLElement/title/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Establishes the text to be displayed in a 'tool tip' popup when the 

		 mouse is over the displayed node.

		 

		 If a node does not have a title attribute, then the default action 

		 is to inherit it from its parent node, which in turn may inherit it 

		 from its parent node, etc. 

		 

		 ]]></description>
<example><![CDATA[
		 button1.title = "click to refresh";

		 ]]></example>
</method>
<method name='className' fullname='dom.html:HTMLElement/className/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='dir' fullname='dom.html:HTMLElement/dir/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='id' fullname='dom.html:HTMLElement/id/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='lang' fullname='dom.html:HTMLElement/lang/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onclick' fullname='dom.html:HTMLElement/onclick/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='oncopy' fullname='dom.html:HTMLElement/oncopy/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='oncut' fullname='dom.html:HTMLElement/oncut/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='ondblclick' fullname='dom.html:HTMLElement/ondblclick/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onkeydown' fullname='dom.html:HTMLElement/onkeydown/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onkeypress' fullname='dom.html:HTMLElement/onkeypress/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onkeyup' fullname='dom.html:HTMLElement/onkeyup/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmousedown' fullname='dom.html:HTMLElement/onmousedown/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmousemove' fullname='dom.html:HTMLElement/onmousemove/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmouseout' fullname='dom.html:HTMLElement/onmouseout/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmouseover' fullname='dom.html:HTMLElement/onmouseover/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onmouseup' fullname='dom.html:HTMLElement/onmouseup/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onpaste' fullname='dom.html:HTMLElement/onpaste/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='title' fullname='dom.html:HTMLElement/title/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLDocument' fullname='dom.html:HTMLDocument' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLDocument.as' namespace='dom.html' access='public' baseclass='dom.core:Document' interfaces='dom.xpath:XPathEvaluator' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An HTMLDocument is the root of the HTML hierarchy and holds the entire content.

	 

	 <p>Besides providing access to the hierarchy, it also provides some convenience 

	 methods for accessing certain sets of information from the document.</p>

	 

	 <p>The following properties have been deprecated in favor of the 

	 corresponding ones for the BODY element:

	 <ul>

	 <li>alinkColor</li>

	 <li>background</li>

	 <li>bgColor</li>

	 <li>fgColor</li>

	 <li>linkColor</li>

	 <li>vlinkColor</li>

	 </ul>

	 </p>

	 

	 ]]></description>
<playerversion><![CDATA[DOMCore 0

	 ]]></playerversion>
<since><![CDATA[DOMCore 0

	 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms531073%28VS.85%29.aspx MSDN - document Object

	 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/dd347078%28VS.85%29.aspx MSDN - HTMLDocument Prototype

	 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document MDC - Document

	 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268 W3C - HTMLDocument

	 

	 ]]></see>
<modified><![CDATA[HTML 5

	 ]]></modified>
</classRec>
<method name='captureEvents' fullname='dom.html:HTMLDocument/captureEvents' isStatic='false' isFinal='false' isOverride='false'  param_names='eventTypeList' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Instructs the browser to grab events of a specific type before they reach their intended target document objects. 

		 The object invoking this method must then have event handlers defined for the given event types to process the event. 

		 

		 ]]></description>
<param><![CDATA[eventTypeList A comma-separated list of case-sensitive event types as derived from the available 

		 Event object constants, such as Event.CLICK or Event.MOUSEMOVE.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.captureEvents MDC - Document.captureEvents()

		 

		 ]]></see>
</method>
<method name='clear' fullname='dom.html:HTMLDocument/clear' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 This method used to clear the whole specified document in early (pre-1.0) 

		 versions of Mozilla.

		 

		 <p>In recent versions of Mozilla-based applications as well as in Internet 

		 Explorer and Netscape 4 this method does nothing. </p>

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_no

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_no

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536361%28VS.85%29.aspx MSDN - clear Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.clear MDC - Document.clear()

		 

		 ]]></see>
</method>
<method name='close' fullname='dom.html:HTMLDocument/close' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Closes a document stream opened by open() and forces rendering. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // open a document to write to it.

		 // write the content of the document.

		 // close the document.

		 document.open();

		 document.write("&lt;p&gt;The one and only content.&lt;/p&gt;");

		 document.close();</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536369%28VS.85%29.aspx MSDN - close Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.close MDC - Document.close()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-98948567 W3C - HTMLDocument.close()

		 

		 ]]></see>
</method>
<method name='createExpression' fullname='dom.html:HTMLDocument/createExpression' isStatic='false' isFinal='false' isOverride='false'  param_names='expression;resolver' param_types='dom.core.types:DOMString;dom.xpath:XPathNSResolver' param_defaults='undefined;undefined' result_type='dom.xpath:XPathExpression'>
<description><![CDATA[

		 

		 Creates a parsed XPath expression with resolved namespaces. This is useful when an 

		 expression will be reused in an application since it makes it possible to compile the 

		 expression string into a more efficient internal form and preresolve all namespace 

		 prefixes which occur within the expression.

		 

		 <p><strong>Note (Mozilla):</strong> Prior to Firefox 3, you could call this method on documents other 

		 than the one you planned to run the XPath against. Under Firefox 3, you must call it on the 

		 same document.</p>

		 

		 ]]></description>
<param><![CDATA[expression The XPath expression string to be parsed.

		 ]]></param>
<param><![CDATA[resolver The resolver permits translation of all prefixes, including the xml 

		 namespace prefix, within the XPath expression into appropriate namespace URIs. If this 

		 is specified as null, any namespace prefix within the expression will result in 

		 DOMException being thrown with the code NAMESPACE_ERR.

		 ]]></param>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[The compiled form of the XPath expression.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createExpression MDC - Document.createExpression()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createExpression W3C - XPathEvaluator.createExpression()

		 

		 ]]></see>
</method>
<method name='createNSResolver' fullname='dom.html:HTMLDocument/createNSResolver' isStatic='false' isFinal='false' isOverride='false'  param_names='nodeResolver' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.xpath:XPathNSResolver'>
<description><![CDATA[

		 

		 Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated 

		 relative to the context of the node where it appeared within the document. This adapter works 

		 like the DOM Level 3 method lookupNamespaceURI  on nodes in resolving the namespaceURI from a 

		 given prefix using the current information available in the node's hierarchy at the time 

		 lookupNamespaceURI is called. also correctly resolving the implicit xml prefix.

		 

		 <p><strong>Note:</strong> XPath defines QNames without prefix to match only elements in the 

		 null namespace. There is no way in XPath to pick up the default namespace as applied to a regular 

		 element reference (e.g., <code>p[&amp;64;id='_myid']</code> for <code>xmlns='http://www.w3.org/1999/xhtml'</code>). 

		 To match default elements in a non-null namespace, you either have to refer to a particular element using 

		 a form such as <code>~~</code></p>

		 

		 ]]></description>
<param><![CDATA[node The node to be used as a context for namespace resolution.

		 ]]></param>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[XPathNSResolver which resolves namespaces with respect to the definitions in scope for a specified node.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.createNSResolver MDC - Document.createNSResolver()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createNSResolver W3C - XPathEvaluator.createNSResolver()

		 

		 ]]></see>
</method>
<method name='evaluate' fullname='dom.html:HTMLDocument/evaluate' isStatic='false' isFinal='false' isOverride='false'  param_names='expression;contextNode;resolver;type;result' param_types='dom.core.types:DOMString;dom.core:Node;dom.xpath:XPathNSResolver;Number;dom.core.types:DOMObject' param_defaults='undefined;undefined;undefined;undefined;undefined' result_type='dom.core.types:DOMObject'>
<description><![CDATA[

		 

		 Evaluates an XPath expression string and returns a result of the specified type if possible.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var headings = document.evaluate("//h2", document, null, XPathResult.ANY_TYPE, null); 

		 /~~ Search the document for all h2 elements.  

		  ~~ The result will likely be an unordered node iterator. ~~/

		 var thisHeading = headings.iterateNext(); 

		 var alertText = "Level 2 headings in this document are:\n";

		 while (thisHeading) {

		 	alertText += thisHeading.textContent + "\n";

		 	thisHeading = headings.iterateNext();

		 }

		 alert(alertText); // Alerts the text of all h2 elements</listing>

		 

		 ]]></example>
<param><![CDATA[expression The XPath expression string to be parsed and evaluated.

		 ]]></param>
<param><![CDATA[contextNode The context is context node for the evaluation of this XPath expression. 

		 If the XPathEvaluator was obtained by casting the Document then this must be owned by the same 

		 document and must be a Document, Element, Attribute, Text, CDATASection, Comment, 

		 ProcessingInstruction, or XPathNamespace  node. If the context node is a Text or a CDATASection, 

		 then the context is interpreted as the whole logical text node as seen by XPath, unless the node 

		 is empty in which case it may not serve as the XPath context.

		 ]]></param>
<param><![CDATA[resolver The resolver permits translation of all prefixes, including the xml namespace 

		 prefix, within the XPath expression into appropriate namespace URIs. If this is specified as null, 

		 any namespace prefix within the expression will result in DOMException being thrown with the 

		 code NAMESPACE_ERR.

		 ]]></param>
<param><![CDATA[type If a specific type is specified, then the result will be returned as the 

		 corresponding type. For XPath 1.0 results, this must be one of the codes of the XPathResult interface.

		 ]]></param>
<param><![CDATA[result The result specifies a specific result object which may be reused and returned by 

		 this method. If this is specified as nullor the implementation does not reuse the specified result, 

		 a new result object will be constructed and returned. For XPath 1.0 results, this object will be 

		 of type XPathResult.

		 ]]></param>
<playerversion><![CDATA[DOMXPath 3

		 ]]></playerversion>
<since><![CDATA[DOMXPath 3

		 ]]></since>
<return><![CDATA[The result of the evaluation of the XPath expression. For XPath 1.0 results, this object 

		 will be of type XPathResult.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.evaluate MDC - Document.evaluate()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-evaluate W3C - XPathEvaluator.evaluate()

		 

		 ]]></see>
</method>
<method name='execCommand' fullname='dom.html:HTMLDocument/execCommand' isStatic='false' isFinal='false' isOverride='false'  param_names='aCommandName;aShowDefaultUI;aValueArgument' param_types='dom.core.types:DOMString;Boolean;dom.core.types:DOMString' param_defaults='undefined;undefined;undefined' result_type='Boolean'>
<description><![CDATA[

		 When an HTML document has been switched to designMode, the document object exposes the execCommand 

		 method which allows one to run commands to manipulate the contents of the editable region. Most 

		 commands affect the document's selection (bold, italics, etc), while others insert new elements 

		 (adding a link) or affect an entire line (indenting). When using contentEditable, calling execCommand 

		 will affect the currently active editable element.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 //HTML:

		 &lt;button onclick="doRichEditCommand('bold')" style="font-weight:bold;"&gt;B&lt;/button&gt;

		 

		 //JavaScript:

		 function doRichEditCommand(aName, aArg){

		 	getIFrameDocument('editorWindow').execCommand(aName,false, aArg);

		 	document.getElementById('editorWindow').contentWindow.focus()

		 }</listing>

		 

		 ]]></example>
<param><![CDATA[aCommandName The name of the command 

		 ]]></param>
<param><![CDATA[aShowDefaultUI Whether the default user interface should be shown. This is not implemented in Mozilla.

		 ]]></param>
<param><![CDATA[aValueArgument Some commands (such as insertimage) require an extra value argument (the image's url). 

		 Pass an argument of null if no argument is needed.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<return><![CDATA[True if successful, or an error value otherwise.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa752577%28VS.85%29.aspx MSDN - IHTMLDocument2::execCommand Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/Document.execCommand MDC - Document.execCommand()

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx MSDN - Command Identifiers

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands MDC - Executing Commands

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Midas#Supported_Commands MDC - Supported Commands

		 

		 ]]></see>
</method>
<method name='execCommandShowHelp' fullname='dom.html:HTMLDocument/execCommandShowHelp' isStatic='false' isFinal='false' isOverride='false'  param_names='aCommandName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Displays help information for the given command identifier.

		  

		 ]]></description>
<param><![CDATA[aCommandName Contains an identifier of a command. It can be any command identifier given in the list of  Command Identifiers.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<return><![CDATA[True if successful, or an error value otherwise.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa752578%28VS.85%29.aspx MSDN - IHTMLDocument2::execCommandShowHelp Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.execCommandShowHelp MDC - Document.execCommandShowHelp()

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx MSDN - Command Identifiers

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands MDC - Executing Commands

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Midas#Supported_Commands MDC - Supported Commands

		 

		 ]]></see>
</method>
<method name='fireEvent' fullname='dom.html:HTMLDocument/fireEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='type;event' param_types='dom.core.types:DOMString;Object' param_defaults='undefined;null' result_type='Boolean'>
<description><![CDATA[

		 Fires a specified event on the object.

		 

		 <p>If the event being fired cannot be cancelled, fireEvent always returns true.</p>

		 

		 <p>Regardless of their values specified in the event object, the values of the 

		 four event properties—cancelBubble, returnValue, srcElement, and type—are 

		 automatically initialized to the values shown in the following table.</p> 

		 

		 <ul>

		 <li>cancelBubble : false</li>

		 <li>returnValue : true</li>

		 <li>srcElement : element on which the event is fired</li>

		 <li>type : name of the event that is fired</li>

		 </ul>

		 

		 ]]></description>
<param><![CDATA[type String that specifies the name of the event to fire.

		 ]]></param>
<param><![CDATA[event Object that specifies the event object from which to obtain event object properties.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<return><![CDATA[Event fired successfully

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536423%28VS.85%29.aspx MSDN - fireEvent Method

		 

		 ]]></see>
</method>
<method name='focus' fullname='dom.html:HTMLDocument/focus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Causes the element to receive the focus and executes the code specified by the  onfocus event. 

		 

		 <p><strong>Note (IE):</strong> This method raises the onfocus event. The effect depends on the object calling 

		 the method. When called for child windows (such as those created with the  open method of a  window object), 

		 focus brings the target window to the foreground.</p>

		 

		 <p><strong>Note (IE):</strong> Windows Internet Explorer 8 and later. The focus method no longer brings child windows 

		 (such as those created with the open method) to the foreground. Child windows now request focus from the user, 

		 usually by flashing the title bar. To directly bring the window to the foreground, add script to the child window 

		 that calls the focus method of its window object.</p>

		 

		 <p><strong>Note:</strong> Internet Explorer 7 and later. For security reasons, child windows will only respond to 

		 the focus method when the following conditions are true:

		 <ul>

		 <li>The child window does not have multiple tabs open.</li>

		 <li>The focus method was not triggered by a double-click action.</li>

		 </ul>

		 If any of these conditions are true, the child window ignores the focus event.

		 </p>

		 

		 <p><strong>Note:</strong> As of Microsoft Internet Explorer 5, elements that expose the focus method must have the TABINDEX attribute set.</p>

		 

		 <p><strong>Note:</strong> Elements cannot receive focus until the document finishes loading.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536425%28VS.85%29.aspx MSDN - focus Method

		 

		 ]]></see>
</method>
<method name='getBoxObjectFor' fullname='dom.html:HTMLDocument/getBoxObjectFor' isStatic='false' isFinal='false' isOverride='false'  param_names='element' param_types='dom.core:Element' param_defaults='undefined' result_type='gecko:nsIBoxObject'>
<description><![CDATA[

		 This particular method was a way for XUL elements to efficiently determine their position, amongst other things. 

		 A couple of years ago this feature started to be used by the general web-developer world. This was quickly 

		 realized to be a major mistake.

		 

		 ]]></description>
<param><![CDATA[element Target element

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<return><![CDATA[The dimensions of the element

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.getBoxObjectFor MDC - Document.getBoxObjectFor()

		 ]]></see>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=340571 Bug 340571

		 ]]></see>
<see><![CDATA[http://ejohn.org/blog/the-getboxobjectfor-apocalypse/ John Resig - The getBoxObjectFor Apocalypse

		 

		 ]]></see>
</method>
<method name='getElementsByClassName' fullname='dom.html:HTMLDocument/getElementsByClassName' isStatic='false' isFinal='false' isOverride='false'  param_names='classNames' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 Returns a set of elements with the given class name. When called on the document object, the 

		 complete document is searched, including the root node. You may also call getElementsByClassName 

		 on any element; it will return only elements under the specified root element with the given class name. 

		 

		 ]]></description>
<example><![CDATA[
		 <p>Get all elements that have a class of 'test'</p>

		 

		 <listing>document.getElementsByClassName('test')</listing>

		 

		 <p>Get all elements that have a class of 'red' and 'test'</p>

		 

		 <listing>document.getElementsByClassName('red test')</listing>

		 

		 <p>Get all elements that have a class of 'test', inside of an element that has the ID of 'main'</p>

		 

		 <listing>document.getElementById('main').getElementsByClassName('test')</listing>

		 

		 <p>And if we go ahead and add in <a rel="internal" href="http://developer.mozilla.org/en/New_in_JavaScript_1.6">JavaScript 1.6</a>'s Array extras, we can do some really-cool matches.</p>

		 

		 <p>Find all div elements that have a class of 'test'</p>

		 

		 <listing>

		 Array.filter( document.getElementsByClassName('test'), function(elem) {

		 	return elem.nodeName == 'DIV';

		 });</listing>

		 

		 <p>Find all elements that have a class of 'test' (as do their parent element)</p>

		 

		 <listing>

		 var test = document.getElementsByClassName('test');

		 Array.filter( test, function(elem){

		 	return Array.indexOf( test, elem.parentNode ) &gt; -1;

		 });</listing>

		 

		 ]]></example>
<param><![CDATA[classNames An unordered set of unique space-separated tokens representing classes.

		 ]]></param>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[HTML 5

		 ]]></since>
<return><![CDATA[A live NodeList object containing all the elements in the document, in tree order, that have 

		 all the classes specified in that argument, having obtained the classes by splitting a string on spaces. 

		 If there are no tokens specified in the argument, then returns an empty NodeList.

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.getElementsByClassName MDC - Document.getElementsByClassName()

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-document-getelementsbyclassname WHATWG - HTMLDocument.getElementsByClassName()

		 

		 ]]></see>
</method>
<method name='getElementsByName' fullname='dom.html:HTMLDocument/getElementsByName' isStatic='false' isFinal='false' isOverride='false'  param_names='elementName' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core:NodeList'>
<description><![CDATA[

		 Returns a list of elements with a given name in the (X)HTML document. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>// return some of the forms 

		 //&lt;form name="up"&gt;&lt;input type="text"/&gt;&lt;/form&gt; 

		 //&lt;form name="up"&gt;&lt;input type="text"/&gt;&lt;/form&gt; 

		 //&lt;form name="down"&gt;&lt;input type="text"/&gt;&lt;/div&gt; 

		 //&lt;form name="down"&gt;&lt;input type="text"/&gt;&lt;/div&gt; 

		 

		 up_forms = document.getElementsByName("up"); 

		 dump(up_forms.item(0).tagName); // returns "div"</listing>

		 

		 ]]></example>
<param><![CDATA[elementName The name attribute value for an element.

		 ]]></param>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<return><![CDATA[The matching elements.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536438%28VS.85%29.aspx MSDN - getElementsByName Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.getElementsByName MDC - Document.getElementsByName()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-71555259 W3C - HTMLDocument.getElementsByName()

		 

		 ]]></see>
</method>
<method name='getSelection' fullname='dom.html:HTMLDocument/getSelection' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Return the contents of selected text in the current document.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;INPUT TYPE="BUTTON" NAME="selectString" VALUE="Show <br>

		 any highlighted text" onClick="alert('The following text is <br>

		 selected:\n'+document.getSelection());"&gt; </listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<return><![CDATA[The selected text

		 

		 ]]></return>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.getSelection MDC - Document.getSelection()

		 

		 ]]></see>
</method>
<method name='hasFocus' fullname='dom.html:HTMLDocument/hasFocus' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The hasFocus method returns true if the focus is currently located anywhere inside the specified document.

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[HTML 5

		 

		 ]]></since>
<return><![CDATA[Returns true if the document has focus; otherwise, returns false.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536447%28VS.85%29.aspx MSDN - hasFocus Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.hasFocus MDC - Document.hasFocus()

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-document-hasfocus WHATWG - HTMLDocument.hasFocus()

		 

		 ]]></see>
</method>
<method name='open' fullname='dom.html:HTMLDocument/open' isStatic='false' isFinal='false' isOverride='false'  param_names='url;name;features;replace' param_types='dom.core.types:DOMString;dom.core.types:DOMString;dom.core.types:DOMString;Boolean' param_defaults='undefined;undefined;undefined;undefined' result_type='*'>
<description><![CDATA[

		 Open a document stream for writing. If a document exists in the target, 

		 this method clears it.

		 

		 <p><strong>Note (IE):</strong> All params are for IE only</p>

		 

		 <p><strong>Note:</strong> This method and the ones following allow a user to add to or 

		 replace the structure model of a document using strings of unparsed 

		 HTML. At the time of writing alternate methods for providing similar 

		 functionality for both HTML and XML documents were being considered.</p>

		 

		 <p><strong>Note (Mozilla):</strong> Also, an automatic document.open() call happens when 

		 document.write() is called after the page has loaded, but that's not defined in the W3C specification. </p>

		 

		 <p><strong>IE Style</strong></p>

		 

		 <p>Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the 

		 <code>url</code> parameter and the <code>name</code> parameter to collect the output of the  write method and the  writeln method.</p>

		 

		 ]]></description>
<default><![CDATA[text/html (Currently the only MIME type supported for this method.)

		 ]]></default>
<example><![CDATA[
		 W3C / Mozilla Example

		 <listing>

		 // In this example, the document contents are 

		 // overwritten as the document 

		 // is reinitialized on open(). 

		 document.write("&lt;html&gt;&lt;p&gt;remove me&lt;/p&gt;&lt;/html&gt;"); 

		 document.open(); 

		 // document is empty.</listing>

		 

		 <p><strong>IE Style</strong></p>

		 <p>The following example shows how to use the open method to replace the current document with a new document and display the HTML markup contained in the variable sMarkup. </p>

		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 &lt;title&gt;First Document&lt;/title&gt;

		 &lt;script&gt;

		 function replace(){

		 	var oNewDoc = document.open("text/html", "replace");

		 	var sMarkup = "&lt;html&gt;&lt;head&gt;&lt;title&gt;New Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;Hello, world&lt;/body&gt;&lt;/html&gt;";

		 	oNewDoc.write(sMarkup);

		 	oNewDoc.close();

		 }

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 &lt;body&gt;

		 &lt;h1&gt;I just want to say&lt;/h1&gt;&lt;br&gt;

		 &lt;!--Button will call the replace function and replace the current page with a new one--&gt;

		 &lt;input type ="button" value = "Finish Sentence" onclick="replace();"&gt;

		 &lt;/body&gt;

		 

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[url When a new document is opened, <code>url</code> is a String that specifies a MIME type for the document. 

		 When a new window is opened, <code>url</code> is a String that specifies the URL to render in the new window. If a <code>url</code> 

		 is not specified, a new window with about:blank is displayed.

		 ]]></param>
<param><![CDATA[name 	Optional. When a new document is opened, specify the String replace for <code>name</code> to specify 

		 that the new document replaces the current document in the history list. If the replace value is not specified 

		 when you open a document, a new entry is added to the history list. When a window is opened, this is a String 

		 that specifies the name of the window. The value of this parameter can be specified as the value of the  TARGET 

		 attribute for a  form or an  a element. This value defines this new window as the location to load a document. 

		 <table class="innertable">

		 	<tr><th>Value</th><th>Description</th></tr>

		 	<tr>

		 		<td>replace</td><td>This value is only used to open a new document, and specifies that the new document replaces the current entry in the history list. </td>

		 	</tr>

		 	<tr>

		 		<td>_blank</td><td>When a window is opened, the <code>url</code> is loaded into a new, unnamed window.</td>

		 	</tr>

		 	<tr>

		 		<td>_parent</td><td>When a new window is opened, the <code>url</code> is loaded into the current frame's parent. If the frame has no parent, this value acts as the value _self. </td>

		 	</tr>

		 	<tr>

		 		<td>_search</td><td>Disabled in Windows Internet Explorer 7, see  Security and Compatibility in Internet Explorer 7 for details. Otherwise, when a window is opened, the <code>url</code> is opened in the browser's search pane in Microsoft Internet Explorer 5 or later. </td>

		 	</tr>

		 	<tr>

		 		<td>_self</td><td>When a window id opened, the current document is replaced with the specified <code>url</code>.</td>

		 	</tr>

		 <tr>

		 		<td>_top</td><td><code>url</code> replaces any framesets that are loaded. If there are no framesets defined, this value acts as the _self value.</td>

		 	</tr>

		 <tr>

		 		<td>_media</td><td>The <code>url</code> is loaded in the Media Bar in Internet Explorer 6. Windows XP Service Pack 2 (SP2) and later. This feature is no longer supported. By default the <code>url</code> is loaded into a new browser window or tab.</td>

		 	</tr>

		 </table>

		 ]]></param>
<param><![CDATA[features 	Optional. A list of comma-separated items. Each item consists of an option and a value, separated 

		 by an equals sign (=), for example, "fullscreen=yes, toolbar=yes". The following features are supported.

		 <table class="innertable">

		 	<tr><th>Value</th><th>Description</th></tr>

		 	<tr>

		 		<td>channelmode = { yes | no | 1 | 0 }</td><td>Specifies whether to display the window in theater mode. The default is no. Internet Explorer 7. channelmode = { yes | 1 } overrides the height value, the width value, the top value, and the left value. When active, the Navigation Bar is hidden, and the Title Bar is visible. The Channel Band is no longer supported in Internet Explorer 7. Prior to Internet Explorer 7 channelmode = { yes | 1 } displays the Channel Band in theatre mode. </td>

		 	</tr>

		 	<tr>

		 		<td>directories = { yes | no | 1 | 0 }</td><td>Specifies whether to add directory buttons. The default is yes. Internet Explorer 7. This feature is no longer supported. </td>

		 	</tr>

		 	<tr>

		 		<td>fullscreen = { yes | no | 1 | 0 }</td><td>Specifies whether to display the browser in full-screen mode. The default is no. Use full-screen mode carefully. Because this mode hides the browser's title bar and menus, you should always provide a button or other visual clue to help the user close the window. ALT+F4 closes the new window. Internet Explorer 7. A window in full-screen mode does not have to be in theatre mode. Prior to Internet Explorer 7, a window in full-screen mode must in theater mode (channelmode).</td>

		 	</tr>

		 	<tr>

		 		<td>height = number</td><td>Internet Explorer 7. Sets the height of the window in pixels. The minimum value is 150, and specifies the minimum height of the browser content area. Prior to Internet Explorer 7, the minimum height value is 100. </td>

		 	</tr>

		 	<tr>

		 		<td>left = number</td><td>Specifies the left position, in pixels. This value is relative to the upper-left corner of the screen. The value must be greater than or equal to zero.</td>

		 	</tr>

		 <tr>

		 		<td>location = { yes | no | 1 | 0 }</td><td>Internet Explorer 7. Specifies whether to display the navigation bar. The default is yes. Prior to Internet Explorer 7, this feature specifies whether to display the address bar. The Back command, the Forward command, and the Stop command are now located in the Navigation bar. Prior to Internet Explorer 7, navigation commands were located in the toolbar.</td>

		 	</tr>

		 <tr>

		 		<td>menubar = { yes | no | 1 | 0 }</td><td>Specifies whether to display the menu bar. The default is yes. Internet Explorer 7. By default the menu bar is hidden, unless it is revealed by the ALT key. menubar = { no | 0 } prohibits the menubar from appearing even when the ALT key is pressed. The combination of menubar = { no | 0 } and toolbar = { no | 0 } hides the toolbar and disables any additional third-party user interfaces. </td>

		 	</tr>

		 <tr>

		 		<td>resizable = { yes | no | 1 | 0 }</td><td>Specifies whether to display resize handles at the corners of the window. The default is yes. Internet Explorer 7. resizable = { no | 0 } disables tabs in a new window.</td>

		 	</tr>

		 <tr>

		 		<td>scrollbars = { yes | no | 1 | 0 }</td><td>Specifies whether to display horizontal and vertical scroll bars. The default is yes.</td>

		 	</tr>

		 <tr>

		 		<td>status = { yes | no | 1 | 0 }</td><td>Specifies whether to add a Status Bar at the bottom of the window. The default is yes.</td>

		 	</tr>

		 <tr>

		 		<td>titlebar = { yes | no | 1 | 0 }</td><td>Specifies whether to display a Title Bar for the window. The default is yes. Internet Explorer 5.5 and later. This feature is no longer supported. The Title Bar remains visible unless the fullscreen sFeature is active. This parameter is ignored prior to Internet Explorer 5.5. It applies only if the calling application is an HTML Application or a trusted dialog box.</td>

		 	</tr>

		 <tr>

		 		<td>toolbar = { yes | no | 1 | 0 }</td><td>Internet Explorer 7. Specifies whether to display the browser command bar, making buttons such as Favorites Center, Add to Favorites, and Tools available. The default is yes. The combination of menubar = { no | 0 } and toolbar = { no | 0 } turns off the Toolbar and any additional third-party user interfaces. Prior to Internet Explorer 7, the toolbar sFeature specifies whether to display the browser toolbar, making buttons such as Back, Forward, and Stop available. </td>

		 	</tr>

		 <tr>

		 		<td>top = number</td><td>Specifies the top position, in pixels. This value is relative to the upper-left corner of the screen. The value must be greater than or equal to zero.</td>

		 	</tr>

		 <tr>

		 		<td>width = number</td><td>Internet Explorer 7. Sets the width of the window in pixels. The minimum value is 250, and specifies the minimum width of the browser content area. Prior to Internet Explorer 7, the minimum height value is 100. </td>

		 	</tr>

		 </table>

		 ]]></param>
<param><![CDATA[replace Optional. When the <code>url</code> is loaded into the same window, this Boolean parameter specifies whether the <code>url</code> creates a new entry or replaces the current entry in the window's history list. 

		 ]]></param>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<return><![CDATA[Returns a reference to the new  document object or the  window object. Use this reference to access properties and methods of the new document or window.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536652%28VS.85%29.aspx MSDN - open Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.open MDC - Document.open()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-72161170 W3C - HTMLDocument.open()

		 

		 ]]></see>
</method>
<method name='queryCommandEnabled' fullname='dom.html:HTMLDocument/queryCommandEnabled' isStatic='false' isFinal='false' isOverride='false'  param_names='cmdId' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Determines whether the given command can be executed on the document in its current state. 

		 

		 <p><strong>Note (IE):</strong> Using  queryCommandEnabled ("delete") on a  TextRange object returns true, while  

		 queryCommandEnabled ("delete") on a  document object returns false. However,  execCommand ("delete") can still 

		 be used to delete the selected text. </p>

		 

		 ]]></description>
<param><![CDATA[cmdId Specifies a command identifier.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<return><![CDATA[True if successful, or an error value otherwise.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536676%28VS.85%29.aspx MSDN - queryCommandEnabled Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Document.queryCommandEnabled MDC - Document.queryCommandEnabled()

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx MSDN - Command Identifiers

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands MDC - Executing Commands

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Midas#Supported_Commands MDC - Supported Commands

		 

		 ]]></see>
</method>
<method name='queryCommandIndeterm' fullname='dom.html:HTMLDocument/queryCommandIndeterm' isStatic='false' isFinal='false' isOverride='false'  param_names='cmdId' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Determines whether the current selection is in an indetermined state. 

		 

		 ]]></description>
<param><![CDATA[cmdId Specifies a command identifier.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<return><![CDATA[True if successful, or an error value otherwise.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa752630%28VS.85%29.aspx MSDN - IHTMLDocument2::queryCommandIndeterm Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Document.queryCommandEnabled MDC - Document.queryCommandIndeterm()

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx MSDN - Command Identifiers

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands MDC - Executing Commands

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Midas#Supported_Commands MDC - Supported Commands

		 

		 ]]></see>
</method>
<method name='queryCommandState' fullname='dom.html:HTMLDocument/queryCommandState' isStatic='false' isFinal='false' isOverride='false'  param_names='cmdId' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Determines whether the given command has been executed on the current selection. 

		 

		 ]]></description>
<param><![CDATA[cmdId Specifies a command identifier.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<return><![CDATA[True if the command has been completed; false if the command has not completed; null if the state cannot be accurately determined.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa752631%28VS.85%29.aspx MSDN - IHTMLDocument2::queryCommandState Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Document.queryCommandEnabled MDC - Document.queryCommandState()

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx MSDN - Command Identifiers

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands MDC - Executing Commands

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Midas#Supported_Commands MDC - Supported Commands

		 

		 ]]></see>
</method>
<method name='queryCommandSupported' fullname='dom.html:HTMLDocument/queryCommandSupported' isStatic='false' isFinal='false' isOverride='false'  param_names='cmdId' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='Boolean'>
<description><![CDATA[

		 Returns a Boolean value that indicates whether the current command is supported on the current range.

		 

		 ]]></description>
<param><![CDATA[cmdId Specifies a command identifier.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<return><![CDATA[True if successful, or an error value otherwise.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa752632%28VS.85%29.aspx MSDN - IHTMLDocument2::queryCommandSupported Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Document.queryCommandEnabled MDC - Document.queryCommandSupported()

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx MSDN - Command Identifiers

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands MDC - Executing Commands

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Midas#Supported_Commands MDC - Supported Commands

		 

		 ]]></see>
</method>
<method name='queryCommandText' fullname='dom.html:HTMLDocument/queryCommandText' isStatic='false' isFinal='false' isOverride='false'  param_names='cmdId' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves the string associated with a command.

		 

		 ]]></description>
<param><![CDATA[cmdId Specifies a command identifier.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<return><![CDATA[The text associated with the command will be stored. 

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa752633%28VS.85%29.aspx MSDN - IHTMLDocument2::queryCommandText Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Document.queryCommandEnabled MDC - Document.queryCommandText()

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx MSDN - Command Identifiers

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands MDC - Executing Commands

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Midas#Supported_Commands MDC - Supported Commands

		 

		 ]]></see>
</method>
<method name='queryCommandValue' fullname='dom.html:HTMLDocument/queryCommandValue' isStatic='false' isFinal='false' isOverride='false'  param_names='cmdId' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='*'>
<description><![CDATA[

		 Determines the current value of the document, range, or current selection for the given command. 

		 

		 ]]></description>
<param><![CDATA[cmdId Specifies a command identifier.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<return><![CDATA[True if successful, or an error value otherwise.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa752634%28VS.85%29.aspx MSDN - IHTMLDocument2::queryCommandValue Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Document.queryCommandEnabled MDC - Document.queryCommandValue()

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx MSDN - Command Identifiers

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands MDC - Executing Commands

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Midas#Supported_Commands MDC - Supported Commands

		 

		 ]]></see>
</method>
<method name='recalc' fullname='dom.html:HTMLDocument/recalc' isStatic='false' isFinal='false' isOverride='false'  param_names='forceAll' param_types='Boolean' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Recalculates all dynamic properties in the current document.

		 

		 <p><strong>Note:</strong> Implicit dependencies, internal property changes, and related properties can cause 

		 some expressions not to recalculate, even though the referenced properties might have changed. For example, 

		 resizing the main window changes the  clientWidth property. Expressions that reference  clientWidth might not 

		 be recalculated, because the change might not be recognized.</p>

		 

		 <p><strong>Note:</strong> Implicit dependencies refer to properties that can be modified by changes in other 

		 properties. For example, the  height property of a  div object implicitly depends on the  innerHTML property of 

		 the div object. However, if an expression references the height property, a change in the innerHTML property, 

		 which might modify the height, does not cause a recalculation of the expression on a subsequent call to recalc.</p>

		 

		 <p><strong>Note:</strong> Related properties can access or manipulate data or behaviors through one or more other 

		 properties. For example,  pixelLeft and  posLeft can set or get the left position of the element. However, if an 

		 expression that references pixelLeft and posLeft is modified, the expression might not be recalculated on subsequent 

		 calls to recalc.</p>

		 

		 <p><strong>Note:</strong> Related properties that can cause this behavior include the following:  clientHeight,  

		 clientLeft,  clientTop, clientWidth, height,  left,  offsetHeight,  offsetLeft,  offsetTop,  offsetWidth,  

		 pixelHeight, pixelLeft,  pixelTop,  pixelWidth,  posHeight, posLeft,  posTop,  posWidth, and  top.</p>

		 

		 <p><strong>Note:</strong> To force the recalculation of all expressions, refer to the same property name or manually 

		 call recalc(true).</p>

		 

		 ]]></description>
<default><![CDATA[false

		 

		 ]]></default>
<example><![CDATA[
		 The following example uses the recalc method in HTML and script to help create a timer. If the calls to recalc are commented out, the timer does not work correctly.

		 <listing>

		 &lt;HTML&gt;

		 &lt;HEAD&gt; 

		 &lt;TITLE&gt;Recalc Example&lt;/TITLE&gt;

		 &lt;STYLE&gt;

		 BUTTON {font-size:14;width:150}

		 &lt;/STYLE&gt;

		 &lt;SCRIPT&gt;

		 

		 

		 var timerID = null;

		 var seconds = 0;

		 

		 //

		 // This function is called when the page loads. 

		 // It sets up a couple of expressions.

		 //

		 function init() {

		 	A.style.setExpression("width","seconds0");

		 	B.setExpression("innerText","seconds.toString()");

		 }

		 

		 //

		 // This function gets calls once a second and updates the seconds

		 // variable. Notice that without recalc, the expressions aren't

		 // updated until the mouse is moved.

		 //

		 function timer() {

		 	seconds++;

		 	document.recalc();

		 }

		 

		 //

		 // starts the timer

		 //

		 function starttimer() {

		 	if (timerID == null) {

		 		timerID = setInterval("timer()", 1000);

		 		startButton.disabled = true;

		 		stopButton.disabled = false;

		 	}

		 }

		 

		 //

		 // stops the timer

		 //

		 function stoptimer() {

		 	if (timerID != null) {

		 		clearInterval(timerID);

		 		timerID = null;

		 		startButton.disabled = false;

		 		stopButton.disabled = true;

		 	}

		 }

		 

		 //

		 //  resets the timer

		 //

		 function resettimer() {

		 	seconds = 0;

		 }

		 

		 &lt;/SCRIPT&gt;

		 &lt;/HEAD&gt;

		 &lt;BODY onload="init()"&gt;

		 

		 &lt;DIV id=A style="background-color:lightblue" &gt;&lt;/DIV&gt;

		 &lt;DIV id=B style="color:hotpink;font-weight:bold"&gt;&lt;/DIV&gt;

		 

		 &lt;BR&gt;

		 

		 &lt;BUTTON id="startButton" onclick="starttimer()"&gt;Start the Timer&lt;/BUTTON&gt;&lt;/BR&gt;

		 &lt;BUTTON id="stopButton" DISABLED="true" onclick="stoptimer()"&gt;Stop the Timer&lt;/BUTTON&gt;&lt;BR&gt;

		 &lt;BUTTON id="resetButton" onclick="resettimer()"&gt;Reset the Timer&lt;/BUTTON&gt;&lt;BR&gt;

		 

		 &lt;P style="width:320;color:peru;background-color:wheat"&gt;

		 

		 This example illustrates the use of document.recalc().  If the calls

		 to recalc are omitted in this example, expressions will not be updated 

		 until the mouse is moved.

		 &lt;/P&gt;

		 

		 &lt;/BODY&gt;

		 &lt;/HTML&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[forceAll Optional. A Boolean that specifies one of the following values. 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536689%28VS.85%29.aspx MSDN - releaseCapture Method

		 

		 ]]></see>
</method>
<method name='releaseCapture' fullname='dom.html:HTMLDocument/releaseCapture' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Removes mouse capture from the object in the current document.

		 

		 <p>For releaseCapture to have an effect, you must set mouse capture through 

		 the setCapture method.</p>

		 

		 <p>You can invoke the releaseCapture method on the document object. The 

		 releaseCapture method makes it unnecessary to determine which element 

		 has capture to programmatically release it. Other actions that release 

		 document capture include displaying a modal dialog box and switching 

		 focus to another application or browser window.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;BODY onload="oOwnCapture.setCapture();" onclick="document.releaseCapture();">

		 &lt;DIV ID=oOwnCapture onmousemove="oWriteLocation.value = event.clientX + event.clientY"; onlosecapture="alert(event.srcElement.id + ' has lost mouse capture.')">

		 &lt;TEXTAREA ID=oWriteLocation COLS=2>&lt;/TEXTAREA>

		 &lt;/DIV>

		 &lt;HR>

		 &lt;DIV ID=oNoCapture>

		 &lt;P>Click the document to invoke the releaseCapture method.&lt;/P>

		 &lt;/DIV>

		 &lt;/BODY></listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0b_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536689%28VS.85%29.aspx MSDN - releaseCapture Method

		 

		 ]]></see>
</method>
<method name='releaseEvents' fullname='dom.html:HTMLDocument/releaseEvents' isStatic='false' isFinal='false' isOverride='false'  param_names='eventTypeList' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 The opposite of document.captureEvents( ), this method turns off event capture at the document level for 

		 one or more specific events named in the parameter list.

		 

		 ]]></description>
<param><![CDATA[eventTypeList A comma-separated list of case-sensitive event types as derived from the available 

		 Event object constants, such as Event.CLICK or Event.MOUSEMOVE.

		 

		 ]]></param>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.releaseEvents MDC - Document.releaseEvents()

		 

		 ]]></see>
</method>
<method name='removeNode' fullname='dom.html:HTMLDocument/removeNode' isStatic='false' isFinal='false' isOverride='false'  param_names='removeChildren' param_types='Boolean' param_defaults='false' result_type='dom.core:Node'>
<description><![CDATA[

		 Removes the object from the document hierarchy.

		 

		 <p>This property is accessible at run time. If elements are removed at 

		 run time, before the closing tag is parsed, areas of the document 

		 might not render.</p>

		 

		 ]]></description>
<param><![CDATA[removeChildren If the childNodes collection of the object is removed

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a reference to the object that is removed.

		 

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536708%28VS.85%29.aspx MSDN - removeNode Method

		 

		 ]]></see>
</method>
<method name='replaceNode' fullname='dom.html:HTMLDocument/replaceNode' isStatic='false' isFinal='false' isOverride='false'  param_names='newNode' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Replaces the object with another element.

		 

		 <p>When a node is replaced, all values that are associated with the 

		 replaced object are removed. For example, if a b object is replaced 

		 with an i object, any attributes and text between the opening and 

		 closing tags are also replaced. To preserve these values, copy them 

		 to the new element before the original object is replaced.</p>

		 

		 <p>This method is accessible at run time. If elements are removed at run 

		 time before the closing tag is parsed, areas of the document might 

		 not render.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;SCRIPT>

		 function fnReplace() {

		 var sPreserve = oList.innerHTML;

		 var oNewNode = document.createElement("OL");

		 oList.replaceNode(oNewNode);

		 oNewNode.innerHTML = sPreserve;

		 }

		 &lt;/SCRIPT>

		 

		 &lt;UL ID = oList>

		 &lt;LI>List Item 1

		 &lt;LI>List Item 2

		 &lt;LI>List Item 3

		 &lt;LI>List Item 4

		 &lt;/UL>

		 &lt;INPUT TYPE = button VALUE = "Replace List" onclick = "fnReplace()"></listing>

		 

		 ]]></example>
<param><![CDATA[newNode Specifies the new element to replace the object.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a reference to the object that is replaced.

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536719%28VS.85%29.aspx MSDN - replaceNode Method

		 

		 ]]></see>
</method>
<method name='routeEvent' fullname='dom.html:HTMLDocument/routeEvent' isStatic='false' isFinal='false' isOverride='false'  param_names='event' param_types='dom.events:Event' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Used inside an event handler function, this method lets the event pass to its intended target object.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<playerversion><![CDATA[Obsolete 0

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/En/DOM/document.routeEvent MDC - Document.routeEvent()

		 

		 ]]></see>
</method>
<method name='swapNode' fullname='dom.html:HTMLDocument/swapNode' isStatic='false' isFinal='false' isOverride='false'  param_names='node' param_types='dom.core:Node' param_defaults='undefined' result_type='dom.core:Node'>
<description><![CDATA[

		 Exchanges the location of two objects in the document hierarchy.

		 

		 <p>This method is accessible at run time. If elements are removed at 

		 run time, before the closing tag is parsed, areas of the document 

		 might not render.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;script&gt;

		 		function fnSwap() {

		 			oList.children(0).swapNode(oList.children(1));

		 		}

		 &lt;/script&gt;

		 

		 &lt;ul ID = oList&gt;

		 		&lt;li&gt;List Item 1&lt;/li&gt;

		 		&lt;li&gt;List Item 2&lt;/li&gt;

		 		&lt;li&gt;List Item 3&lt;/li&gt;

		 		&lt;li&gt;List Item 4&lt;/li&gt;

		 &lt;/ul&gt;

		 &lt;input type=button value="Swap List" onclick="fnSwap()"&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[node Specifies the existing element.

		 ]]></param>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<return><![CDATA[Returns a reference to the object that invoked the method.

		 ]]></return>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536774%28VS.85%29.aspx MSDN - swapNode Method

		 

		 ]]></see>
</method>
<method name='write' fullname='dom.html:HTMLDocument/write' isStatic='false' isFinal='false' isOverride='false'  param_names='text' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Write a string of text to a document stream opened by open(). Note that 

		 the function will produce a document which is not necessarily driven by 

		 a DTD and therefore might be produce an invalid result in the context 

		 of the document.

		 

		 <p><strong>Note (Mozilla):</strong> Writing to a document that has already loaded without calling 

		 document.open() will automatically perform a document.open call. Once you have finished 

		 writing, it is recommended to call document.close(), to tell the browser to finish loading 

		 the page. The text you write is parsed into the document's structure model. In the example 

		 above, the h1 element becomes a node in the document.</p>

		 

		 <p><strong>Note (Mozilla):</strong> If the document.write() call is embedded directly in the HTML code, 

		 then it will not call document.open(). For example:

		 <listing>

		 &lt;div&gt; 

		 	&lt;script type="text/javascript"&gt; 

		 		document.write("&lt;h1&gt;Main title&lt;/h1&gt;") 

		 	&lt;/script&gt; 

		 &lt;/div&gt;</listing>

		 </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 

		 &lt;head&gt;

		 &lt;title&gt;write example&lt;/title&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 

		 function newContent() {

		 	alert("load new content");

		 	document.open();

		 	document.write("&lt;h1&gt;Out with the old - in with the new!&lt;/h1&gt;");

		 	document.close();

		 }

		 

		 

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body onload="newContent();"&gt;

		 	&lt;p&gt;Some original document content.&lt;/p&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<param><![CDATA[text The string to be parsed into some structure in the 

		 document structure model.

		 

		 ]]></param>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536782%28VS.85%29.aspx MSDN - write Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.write MDC - Document.write()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-75233634 W3C - HTMLDocument.write()

		 

		 ]]></see>
</method>
<method name='writeln' fullname='dom.html:HTMLDocument/writeln' isStatic='false' isFinal='false' isOverride='false'  param_names='text' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Write a string of text followed by a newline character to a document 

		 stream opened by open(). Note that the function will produce a 

		 document which is not necessarily driven by a DTD and therefore 

		 might be produce an invalid result in the context of the document.

		 

		 <p><strong>Note:</strong> document.writeln is the same as document.write but adds a newline. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>document.writeln("&lt;p&gt;enter password:&lt;/p&gt;"); </listing>

		 

		 ]]></example>
<param><![CDATA[text The string to be parsed into some structure in the 

		 document structure model.

		 

		 ]]></param>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms536783%28VS.85%29.aspx MSDN - writeln Method

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.writeln MDC - Document.writeln()

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-35318390 W3C - HTMLDocument.writeln()

		 

		 ]]></see>
</method>
<method name='URL' fullname='dom.html:HTMLDocument/URL/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the URL of the current document. 

		 

		 <p><strong>Note:</strong> URL is a replacement for the DOM Level 0 document.location.href property. 

		 However document.URL is not settable, unlike document.location.href. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>var currentURL = document.URL; alert(currentURL);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534708%28VS.85%29.aspx MSDN - URL Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.URL MDC - Document.URL

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-46183437 W3C - HTMLDocument.URL

		 

		 ]]></see>
</method>
<method name='URLUnencoded' fullname='dom.html:HTMLDocument/URLUnencoded/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets the URL for the  document, stripped of any character encoding.

		 

		 ]]></description>
<example><![CDATA[
		 The following illustrates the difference between the value returned by the URLUnencoded property and the value returned by the  URL property of the document.

		 <listing>

		 &lt;script&gt;

		 function window.onload() {

		 	oURL.innerText = document.URL;

		 	oURL2.innerText = document.URLUnencoded;

		 }			

		 &lt;/script&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534709%28VS.85%29.aspx MSDN - URLUnencoded Property

		 

		 ]]></see>
</method>
<method name='XSLDocument' fullname='dom.html:HTMLDocument/XSLDocument/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMObject'>
<description><![CDATA[

		 Retrieves a reference to the top-level node of the Extensible Stylesheet Language (XSL) document.

		 

		 <p><strong>Note (IE):</strong> You can use the XSLDocument property to access the Document Object Model (DOM) for the 

		 XSL style sheet. For more information, refer to the  XML DOM overview. </p>

		 

		 ]]></description>
<example><![CDATA[
		 This example uses the XSLDocument property to access the DOM for the XSL and change attributes representing sort keys.

		 <listing>

		 function sort(key) {

		 	// Find the "order-by" attributes in the style sheet.

		 	var s = document.XSLDocument.selectNodes("~~/xsl:template[&amp;64;match='menu']

		 	                                          //xsl:apply-templates/&amp;64;order-by");

		 

		 	// Replace the values with the new sort key.

		 	for (var i = s.nextNode(); i != null; i = s.nextNode()) {

		 		i.value = key;

		 	}

		 

		 	// Find the subset of the document we need to update.

		 	var d = document.XMLDocument.selectSingleNode("story/menu");

		 

		 	// Apply the style sheet to the subset, and update the display.

		 	menu.innerHTML = d.transformNode(document.XSLDocument);

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535163%28VS.85%29.aspx MSDN - XSLDocument Property

		 

		 ]]></see>
</method>
<method name='activeElement' fullname='dom.html:HTMLDocument/activeElement/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Element'>
<description><![CDATA[

		 Returns the currently focused element.

		 

		 <p>If no element in the Document is focused, this will return the body element.</p>

		 

		 <p><strong>Note:</strong> This attribute is part of the in-development HTML 5 specification.</p>

		 

		 <p><strong>Note (IE):</strong> For versions of Microsoft Internet Explorer 5 and later, the activeElement 

		 property is not defined until a document is loaded. A value of null is given for this property, if it 

		 is accessed inline during the loading of a document. This property can be accessed in the  onload event 

		 handler function. </p>

		 

		 <p><strong>Note (IE):</strong> Internet Explorer 4.0 returns  body as the activeElement when it is accessed 

		 inline during the loading of a document.</p>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[HTML 5

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533065%28VS.85%29.aspx MSDN - activeElement Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.activeElement MDC - Document.activeElement

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-document-activeelement WHATWG - HTMLDocument.activeElement

		 

		 ]]></see>
</method>
<method name='alinkColor' fullname='dom.html:HTMLDocument/alinkColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns or sets the color of an active link in the document body. A link is active during 

		 the time between mousedown and mouseup events. 

		 

		 <p><strong>Note:</strong> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>

		 

		 <p><strong>Note:</strong> Gecko supports both alinkColor/:active and :focus . Internet Explorer 6 

		 and 7 support alinkColor/:active only for  HTML anchor (&lt;a&gt;) links and the behavior is the same as 

		 :focus under Gecko. There is no support for :focus in IE. </p>

		 

		 ]]></description>
<default><![CDATA["#0000FF" for IE / "#EE0000" for Mozilla

		 

		 ]]></default>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533071(VS.85).aspx MSDN - alinkColor Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.alinkColor MDC - Document.alinkColor

		 

		 ]]></see>
<as-of><![CDATA[DOM Level 2 HTML

		 

		 ]]></as-of>
</method>
<method name='all' fullname='dom.html:HTMLDocument/all/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Returns a reference to the collection of elements contained by the object.

		 

		 <p><strong>Note:</strong> The all collection includes one element object for each valid HTML tag. If a valid tag has a 

		 matching end tag, both tags are represented by the same element object.</p>

		 

		 <p><strong>Note:</strong> The collection returned by the document's all collection always includes a reference to 

		 the  HTML,  HEAD, and  TITLE objects regardless of whether the tags are present in the document. If the  BODY tag 

		 is not present, but other HTML tags are, a BODY object is added to the all collection.</p>

		 

		 <p><strong>Note:</strong> If the document contains invalid or unknown tags, the collection includes one element object 

		 for each. Unlike valid end tags, unknown end tags are represented by their own element objects. The order of the element 

		 objects is the HTML source order. Although the collection indicates the order of tags, it does not indicate hierarchy.</p>

		 

		 <p><strong>Note:</strong> The  name property only applies to some elements such as  form elements. If the vIndex is set to 

		 a string matching the value of a name property in an element that the name property does not apply, then that element will 

		 not be added to the collection.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example, in Microsoft JScript (compatible with ECMA 262 language specification), shows how to display the names of all tags in the document in the order the tags appear in the document.

		 <listing>

		 for(i = 0; i &lt; document.all.length; i++) {

		 	alert(document.all(i).tagName);

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537434%28VS.85%29.aspx MSDN - all Collection

		 

		 ]]></see>
</method>
<method name='anchors' fullname='dom.html:HTMLDocument/anchors/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 A collection of all the anchor (A) elements in a document with a 

		 value for the name attribute.

		 

		 <p><strong>Note:</strong> For reasons of backwards compatibility, the returned 

		 set of anchors only contains those anchors created with the name attribute, not 

		 those created with the id attribute. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if ( document.anchors.length &gt;= 5 ) {

		 	dump("dump found too many anchors");

		 	window.location = "http://www.google.com";

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537435%28VS.85%29.aspx MSDN - anchors Collection

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.anchors MDC - Document.anchors

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7577272 W3C - HTMLDocument.anchors

		 

		 ]]></see>
</method>
<method name='applets' fullname='dom.html:HTMLDocument/applets/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 A collection of all the OBJECT elements that include applets and 

		 APPLET (deprecated) elements in a document.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // ( When you know the second applet is the one you want ) 

		 my_java_app = document.applets[1];</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537436%28VS.85%29.aspx MSDN - applets Collection

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.appletsMDC - Document.applets

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-85113862 W3C - HTMLDocument.applets

		 

		 ]]></see>
</method>
<method name='background' fullname='dom.html:HTMLDocument/background/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 URI of the background texture tile image.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<as-of><![CDATA[DOM Level 2 HTML

		 

		 ]]></as-of>
</method>
<method name='baseURIObject' fullname='dom.html:HTMLDocument/baseURIObject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='gecko:nsIURI'>
<description><![CDATA[

		 baseURIObject returns the nsIURI object representing the document's URI. 

		 

		 <p><strong>Note (Mozilla):</strong> This property exists on all nodes (HTML, XUL, SVG, MathML, etc.), 

		 but only if the script trying to use it has UniversalXPConnect privileges.</p>

		 

		 <p><strong>Note (Mozilla):</strong> This property may only be accessed from privileged code. </p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.baseURIObject MDC - Document.baseURIObject

		 

		 ]]></see>
</method>
<method name='bgColor' fullname='dom.html:HTMLDocument/bgColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets/sets the background color of the current document. 

		 

		 <p><strong>Note:</strong> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>

		 

		 ]]></description>
<default><![CDATA["#ffffff"

		 

		 ]]></default>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533506%28VS.85%29.aspx MSDN - bgColor Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.bgColor MDC - Document.bgColor

		 

		 ]]></see>
<as-of><![CDATA[DOM Level 2 HTML

		 

		 ]]></as-of>
</method>
<method name='body' fullname='dom.html:HTMLDocument/body/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLElement'>
<description><![CDATA[

		 The element that contains the content for the document. In documents 

		 with BODY contents, returns the BODY element. In frameset documents, 

		 this returns the outermost FRAMESET element.

		 

		 <p><strong>Note:</strong> Though body is settable, setting a new body on a document 

		 will effectively remove all the current children of the existing &lt;/body&gt; element. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // in HTML: &lt;body id="oldBodyElement"&gt;&lt;/body&gt;

		 alert(document.body.id); // "oldBodyElement"

		 var aNewBodyElement = document.createElement("body");

		 aNewBodyElement.id = "newBodyElement";

		 document.body = aNewBodyElement;

		 alert(document.body.id); // "newBodyElement"</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.body MDC - Document.body

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-56360201 W3C - HTMLDocument.body

		 

		 ]]></see>
</method>
<method name='characterSet' fullname='dom.html:HTMLDocument/characterSet/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the character encoding of the current document. 

		 

		 <p><strong>Note:</strong> The character encoding is the character set used for rendering the document, which may be different 

		 from the encoding specified by the page (the user can override the encoding). </p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.characterSet MDC - Document.characterSet

		 

		 ]]></see>
</method>
<method name='charset' fullname='dom.html:HTMLDocument/charset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Sets or retrieves the character set used to encode the object.

		 

		 <p><strong>Note (IE):</strong> In Microsoft Internet Explorer 6, This property now applies to the  

		 a,  link, and  script objects. </p>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[Non-Standard Microsoft

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533553%28VS.85%29.aspx MSDN - charset Property

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='compatMode' fullname='dom.html:HTMLDocument/compatMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Indicates whether the document is rendered in Quirks mode or Strict mode. 

		 

		 <p><strong>Note:</strong> Can either be "BackCompat" for Quirks mode or "CSS1Compat" for Strict mode.</p>

		 

		 <p><strong>Note:</strong> There is a third mode, Gecko's "Almost_Standards" Mode, which only differs from 

		 Strict mode in the layout of images inside table cells. This third mode is reported the same way as 

		 Strict mode: "CSS1Compat". </p>

		 

		 <p><strong>Note (IE):</strong> The compatMode property is deprecated in Internet Explorer 8 in favor of the  documentMode property.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 if (document.compatMode == "BackCompat") {

		 	// use some quirky stuff

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533687%28VS.85%29.aspx MSDN - compatMode Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.compatMode MDC - Document.compatMode

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Gecko%27s_%22Almost_Standards%22_Mode MDC - Gecko's "Almost Standards" Mode

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='compatible' fullname='dom.html:HTMLDocument/compatible/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Retrieves the collection of user agents and versions declared in the X-UA-Compatible  meta tag. 

		 

		 <p><strong>Note (IE):</strong> This method is available in all compatibility modes. </p>

		 

		 ]]></description>
<example><![CDATA[
		 The following script iterates through the collection of compatible user agents, and displays each on a separate line. 

		 <listing>

		 &lt;meta http-equiv="X-UA-Compatible" content="IE=8;FF=3;OtherUA=4" /&gt;

		 

		 &lt;script type="text/javascript"&gt;

		 window.attachEvent('onload',function(e) {

		 var a = [];

		 var compat = document.compatible;

		 for (var i=0; i&lt;compat.length; i++) {

		 a.push(compat[i].userAgent + '=' + compat[i].version);

		 }

		 var o = document.getElementById('output');

		 o.innerHTML = a.join('&lt;br/&gt;');

		 });

		 &lt;/script&gt;

		 

		 &lt;div id="output"&gt;&lt;/div&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_unknown

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc196984%28VS.85%29.aspx MSDN - compatible Property

		 

		 ]]></see>
</method>
<method name='contentType' fullname='dom.html:HTMLDocument/contentType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the Content-Type from the HTTP headers of the document. 

		 

		 <p><strong>Note (Mozilla):</strong> The property returns the MIME property "Content-Type" set in the HTTP Header and not 

		 the META property set in the HEAD section of the document. </p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.contentType MDC - Document.contentType

		 

		 ]]></see>
</method>
<method name='cookie' fullname='dom.html:HTMLDocument/cookie/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Get and set the cookies associated with the current document. 

		 

		 <listing>allCookies = document.cookie;</listing>

		 

		 <p><code>allCookies</code> is a string containing a semicolon-separated list of cookies (i.e. key=value pairs)</p>

		 

		 <listing>document.cookie = updatedCookie;</listing>

		 

		 <p><code>updatedCookie</code> is a string of form key=value. Note that you can only set/update a single cookie at a time using this method.</p>

		 

		 <p>Any of the following cookie attribute values can optionally follow the key-value pair, specifying 

		 the cookie to set/update, and preceded by a semi-colon separator: 

		 <ul>

		 	<li><code>;path=<em>path</em></code> (e.g., '/', '/mydir') If not specified, defaults to the current path of the current document location.</li>

		 	<li><code>;domain=<em>domain</em></code> (e.g., 'example.com', '.example.com' (includes all subdomains), 'subdomain.example.com') If not specified, defaults to the host portion of the current document location.</li>

		 	<li><code>;max-age=<em>max-age-in-seconds</em></code> (e.g., 600465 for a year)</li>

		 	<li><code>;expires=<em>date-in-GMTString-format</em></code> (could use Date.toGMTString; now obsolete) If not specified it wil expire at the end of session.</li>

		 	<li><code>;secure</code> (cookie to only be transmitted over secure protocol as http)</li>

		 </ul>

		 </p>

		 

		 <p><strong>Note:</strong> The cookie value string can use encodeURIComponent() to ensure that the string 

		 does not contain any commas, semicolons, or whitespace (which are disallowed in cookie values).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 document.cookie = "name=oeschger";

		 document.cookie = "favorite_food=tripe";

		 alert(document.cookie);

		 // displays: name=oeschger;favorite_food=tripe</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533693%28VS.85%29.aspx MSDN - cookie Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.cookie MDC - Document.cookie

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-8747038 W3C - HTMLDocument.cookie

		 

		 ]]></see>
<throws><![CDATA[dom.core.DOMException SYNTAX_ERR: If the new value does not adhere to the cookie syntax.

		 

		 ]]></throws>
<modified><![CDATA[DOMHTML 1

		 

		 ]]></modified>
</method>
<method name='defaultCharset' fullname='dom.html:HTMLDocument/defaultCharset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets the default character set from the current regional language settings.

		 

		 <p><strong>Note (Microsoft):</strong> The value depends on the current regional language settings. 

		 For typical settings in North America, the value is windows-1252.</p>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<since><![CDATA[Non-Standard Microsoft

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533553%28VS.85%29.aspx MSDN - defaultCharset Property

		 ]]></see>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/aa752010(VS.85).aspx MSDN - Charsets in Microsoft Internet Explorer 5

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 

		 ]]></modified>
</method>
<method name='designMode' fullname='dom.html:HTMLDocument/designMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Sets or gets a value that indicates whether the document can be edited.

		 

		 <p>Values can be:

		 <ul>

		 <li>On : Document can be edited. </li>

		 <li>Off|Inherit : Default. Document cannot be edited. </li>

		 </ul>

		 </p>

		 

		 <p><strong>Note (Mozilla):</strong> Gets/sets WYSYWIG editing capability of Midas. It can only be used for HTML documents.</p>

		 

		 <p><strong>Note (Mozilla):</strong> Midas is the code name for Gecko's built-in rich text editor. Midas can be enabled via 

		 JavaScript on an HTML document. When Midas is enabled, the document becomes editable by the user. Scripting for Midas is based 

		 on the DHTML commands supported by Internet Explorer.</p>

		 

		 <p><strong>Note (Microsoft):</strong> You can use the designMode property to put Windows Internet 

		 Explorer into a mode so that you can edit the current document.</p>

		 

		 <p><strong>Note (Microsoft):</strong> While the browser is in design mode, objects enter a UI-activated state when 

		 the user presses ENTER, clicks an object that has focus, or double-clicks the object. Objects that are

		 UI-activated have their own window in the document. You can modify the UI only when the object is in a 

		 UI-activated state.</p>

		 

		 <p><strong>Note (Microsoft):</strong> You cannot execute script when the value of the designMode property is set to On.</p>

		 

		 <p><strong>Note:</strong> Since an entire document becomes editable, authors often load the editable document into an 

		 IFRAME and do the bulk of the scripting in the parent document.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 	&lt;head&gt;

		 		&lt;title&gt;Simple Edit Box&lt;/title&gt;

		 	&lt;/head&gt;

		 	&lt;body&gt;

		 

		 		&lt;iframe

		 			id="MidasForm"

		 			src="about:blank"

		 			onload="this.contentDocument.designMode='on';"

		 		&gt;&lt;/iframe&gt;

		 	&lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533720%28VS.85%29.aspx MSDN - designMode Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.designMode MDC - Document.designMode

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/Midas MDC - Midas

		 

		 ]]></see>
</method>
<method name='dir' fullname='dom.html:HTMLDocument/dir/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Sets or retrieves a value that indicates the reading order of the object. 

		 

		 <p>Values can be:

		 <ul>

		 <li>ltr : Default. Content flows from left to right.</li>

		 <li>rtl : Content flows from right to left.</li>

		 </ul>

		 </p>

		 

		 <p><strong>Note:</strong> The dir property does not affect alphanumeric characters in Latin documents. 

		 These characters always render ltr. However, the property does affect punctuation characters in Latin 

		 documents. For example, punctuation marks such as periods and question marks will render to the left 

		 of a sentence when the dir property is set to rtl.</p>

		 

		 <p><strong>Note:</strong> The value of dir property has no effect on the orientation of coordinates for 

		 an object's positioning properties. For example, the  left property and the  right property perform the 

		 same placement in both cases. However, when both the left and right properties are specified, the left 

		 property takes precedence when the dir property is set to ltr. Likewise, the right property takes precedence 

		 when the dir property is set to rtl.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft/Mozilla

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533731%28VS.85%29.aspx MSDN - dir Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/En/DOM/Document.dir MDC - Document.dir

		 

		 ]]></see>
</method>
<method name='documentMode' fullname='dom.html:HTMLDocument/documentMode/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Retrieves the document compatibility mode of the document.

		 

		 <p>Possible Values:

		 <ul>

		 	<li>5 - Microsoft Internet Explorer 5 mode (also known as "quirks mode").</li>

		 	<li>7 - Internet Explorer 7 Standards mode.</li>

		 	<li>8 - Internet Explorer 8 Standards mode.</li>

		 </ul>

		 </p>

		 

		 <p><strong>Note (IE):</strong> The document compatibility mode of a Web page determines how Internet Explorer 8 

		 interprets and renders the page. Page authors generally use  meta elements to specify X-UA-Compatible  

		 HTTP-EQUIV headers that specify the document compatibility mode. For more information, see  Defining Document 

		 Compatibility. In versions of Internet Explorer previous to Internet Explorer 8,  compatMode was solely 

		 determined by  DOCTYPE. </p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5_no

		 ]]></productversion>
<productversion><![CDATA[IE 6.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 7.0_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7_no

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/cc196988%28VS.85%29.aspx MSDN - documentMode Property

		 

		 ]]></see>
</method>
<method name='documentURIObject' fullname='dom.html:HTMLDocument/documentURIObject/get' isStatic='false' isFinal='false' isOverride='false'  result_type='gecko:nsIURI'>
<description><![CDATA[

		 Returns an nsIURI object representing the URI of the document. 

		 

		 <p>This only works for privileged (UniversalXPConnect) scripts, including extension code. For web content this 

		 property doesn't have any special meaning and can be used just like any other custom property. </p>

		 

		 <p>Privileged code must be careful not to try getting or setting this property on a non-wrapped content object 

		 (e.g. on a wrappedJSObject of an XPCNativeWrapper). See bug 324464's comments for details. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // Check that the URI scheme of the current tab in Firefox is 'http',

		 // assuming this code runs in context of browser.xul

		 var uriObj = content.document.documentURIObject;

		 var uriPort = uriObj.port;

		 

		 if (uriObj.schemeIs('http')) {

		 	...

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Mozilla

		 ]]></playerversion>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.documentURIObject MDC - Document.documentURIObject

		 ]]></see>
<see><![CDATA[http://bugzilla.mozilla.org/show_bug.cgi?id=324464 bug 324464

		 

		 ]]></see>
</method>
<method name='domain' fullname='dom.html:HTMLDocument/domain/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets/sets the domain of the current document.

		 

		 <p><strong>Note:</strong> This property returns null if the domain of the document cannot be identified.</p>

		 

		 <p><strong>Note:</strong> In the DOM HTML specification, this property is listed as being read-only. However, 

		 all common browsers including Mozilla will let you set it to a superdomain of the current value. For example, 

		 on developer.mozilla.org it is possible to set it to "mozilla.org" but not "mozilla.com".</p>

		 

		 <p><strong>Note:</strong> It is not universally possible in all browsers to set document.domain to a top-level 

		 domain (such as "com" or "org") or to a subdomain of a domain on which registrations are restricted (e.g. "co.uk", 

		 as registrations on the "uk" domain are restricted).</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // for document www.love.com/good.html,

		 // this script closes the window

		 var badDomain = "www.love.com";

		 if (document.domain == badDomain) {

		 	window.close();

		 }</listing>

		 

		 <listing>

		 // For the URI http://developer.mozilla.org/en/docs/DOM the

		 // following sets domain to the string "developer.mozilla.org"

		 var domain = document.domain;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533740%28VS.85%29.aspx MSDN - domain Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.domain MDC - Document.domain

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-2250147 W3C - HTMLDocument.domain

		 

		 ]]></see>
</method>
<method name='embeds' fullname='dom.html:HTMLDocument/embeds/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Retrieves a collection of all  embed objects in the document.

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537450(VS.85).aspx MSDN - embeds Collection

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.embeds MDC - Document.embeds

		 

		 ]]></see>
</method>
<method name='expando' fullname='dom.html:HTMLDocument/expando/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.

		 

		 <p><strong>Note:</strong> You can extend the properties on an object by creating arbitrary properties 

		 with values. You should be careful, however, because you can unintentionally set a property value when 

		 scripting in a case-sensitive language such as Microsoft JScript. For example, if the property value 

		 is borderColor and you type the value "bordercolor = 'blue'", you have, in fact, created another property 

		 on the style object called bordercolor with the value 'blue'. If you query the value of the property, 

		 the value "blue" is returned. However, the borders for the element do not turn blue.</p>

		 

		 <p><strong>Note:</strong> Setting the  expando property of the  document object to false precludes the 

		 functionality of all expandos within the document.</p>

		 

		 ]]></description>
<default><![CDATA[true

		 

		 ]]></default>
<example><![CDATA[
		 The following example demonstrates that, by setting the expando property of the document object to false, 

		 the document ignores the  UNSELECTABLE expando on the  span and allows you to select the text.

		 <listing>

		 &lt;html&gt;

		 

		 &lt;head&gt;

		 &lt;script type="text/javascript"&gt;

		 	//Set the expando property to false.

		 	document.expando = false;

		 &lt;/script&gt;

		 &lt;/head&gt;

		 

		 &lt;body&gt;

		 

		 &lt;div&gt;

		 &lt;span id="oSpan" unselectable="on"&gt;This text should be selectable.&lt;/span&gt;

		 &lt;/div&gt;

		 

		 &lt;/body&gt;

		 

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 

		 ]]></playerversion>
<productversion><![CDATA[IE 5.5

		 ]]></productversion>
<productversion><![CDATA[IE 6.0

		 ]]></productversion>
<productversion><![CDATA[IE 7.0

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE7

		 ]]></productversion>
<productversion><![CDATA[IE 8.0_as_IE8

		 ]]></productversion>
<productversion><![CDATA[Firefox 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Firefox 3.5_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 3.1_unknown

		 ]]></productversion>
<productversion><![CDATA[Safari 4.0b_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 1.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Chrome 2.0_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 9.62_unknown

		 ]]></productversion>
<productversion><![CDATA[Opera 10.0a_unknown

		 ]]></productversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533747%28VS.85%29.aspx MSDN - expando Property

		 

		 ]]></see>
</method>
<method name='fgColor' fullname='dom.html:HTMLDocument/fgColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets/sets the foreground color, or text color, of the current document. 

		 

		 <p><strong>Note:</strong> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>

		 

		 ]]></description>
<default><![CDATA["#000000"

		 

		 ]]></default>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533749%28VS.85%29.aspx MSDN - fgColor Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.fgColor MDC - Document.fgColor

		 

		 ]]></see>
<as-of><![CDATA[DOM Level 2 HTML

		 

		 ]]></as-of>
</method>
<method name='fileCreatedDate' fullname='dom.html:HTMLDocument/fileCreatedDate/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves the date the file was created. For example, Monday, December 08, 1997.

		 

		 ]]></description>
<example><![CDATA[
		 This example implements the fileCreatedDate property to count the number of days since the document was created.

		 <listing>

		 // Date document was created

		 var oCreated=new Date(document.fileCreatedDate);

		 

		 // Today's Date

		 var oToday=new Date();

		 

		 //There are 86400000 milliseconds in a day

		 var iMilliSeconds=86400000;

		 var iDaysBetween=(oToday.getTime() - oCreated.getTime()) / iMilliSeconds;	

		 

		 alert("Created: " + oCreated + "\nDays since created: " + parseInt(iDaysBetween));</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533750%28VS.85%29.aspx MSDN - fileCreatedDate Property

		 

		 ]]></see>
</method>
<method name='fileModifiedDate' fullname='dom.html:HTMLDocument/fileModifiedDate/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves the date the file was last modified. For example, Monday, December 08, 1997.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533751%28VS.85%29.aspx MSDN - fileModifiedDate Property

		 

		 ]]></see>
</method>
<method name='fileSize' fullname='dom.html:HTMLDocument/fileSize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves the file size. 

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533752%28VS.85%29.aspx MSDN - fileSize Property

		 

		 ]]></see>
</method>
<method name='forms' fullname='dom.html:HTMLDocument/forms/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 A collection of all the forms of a document.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 

		 &lt;head&gt;

		 	&lt;title&gt; document.forms example&lt;/title&gt;

		 &lt;/head&gt;

		 

		 &lt;body&gt;

		 &lt;form id="robby"&gt;

		 	&lt;input type="button" onclick="alert(document.forms[0].id);" value="robby's form" /&gt;

		 &lt;/form&gt;

		 

		 &lt;form id="dave"&gt;

		 	&lt;input type="button" onclick="alert(document.forms[1].id);" value="dave's form" /&gt;

		 &lt;/form&gt;

		 

		 &lt;form id="paul"&gt;

		 	&lt;input type="button" onclick="alert(document.forms[2].id);" value="paul's form" /&gt;

		 &lt;/form&gt;

		 

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537457%28VS.85%29.aspx MSDN - forms Collection

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.forms MDC - Document.forms

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-1689064 W3C - HTMLDocument.forms

		 

		 ]]></see>
</method>
<method name='frames' fullname='dom.html:HTMLDocument/frames/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Retrieves a collection of all  window objects defined by the given document or defined by 

		 the document associated with the given window.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537459%28VS.85%29.aspx MSDN - frames Collection

		 

		 ]]></see>
</method>
<method name='height' fullname='dom.html:HTMLDocument/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the height of the body element of the current document. 

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 // alert document height

		 alert(document.height);</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.height MDC - Document.height

		 

		 ]]></see>
</method>
<method name='images' fullname='dom.html:HTMLDocument/images/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 A collection of all the IMG elements in a document. The behavior is 

		 limited to IMG elements for backwards compatibility.

		 

		 <p><strong>Note:</strong> As suggested by HTML 4.01, to include images, authors may use 

		 the OBJECT element or the IMG element. Therefore, it is recommended 

		 not to use this attribute to find the images in the document but 

		 getElementsByTagName with HTML 4.01 or getElementsByTagNameNS with 

		 XHTML 1.0.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var ilist = document.images;

		 for(var i = 0; i &lt; ilist.length; i++) {

		 	if(ilist[i] == "banner.gif") {

         		// found the banner

		 	}

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537461%28VS.85%29.aspx MSDN - images Collection

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.images MDC - Document.images

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-90379117 W3C - HTMLDocument.images

		 

		 ]]></see>
</method>
<method name='lastModified' fullname='dom.html:HTMLDocument/lastModified/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns a string containing the date and time on which the current document was last modified, in the form "MM/DD/YY hh:mm:ss".

		 

		 <p><strong>Note:</strong> As a string, lastModified cannot easily be used for comparisions between the modified dates of documents. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 dump(document.lastModified); 

		 // returns: Tuesday, July 10, 2001 10:19:42</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms533946%28VS.85%29.aspx MSDN - lastModified Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.lastModified MDC - Document.lastModified

		 

		 ]]></see>
</method>
<method name='linkColor' fullname='dom.html:HTMLDocument/linkColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets/sets the color of links within the document. 

		 

		 <p><strong>Note:</strong> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>

		 

		 ]]></description>
<default><![CDATA["#0000FF" for IE / "#0000EE" for Mozilla

		 

		 ]]></default>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534117%28VS.85%29.aspx MSDN - linkColor Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.linkColor MDC - Document.linkColor

		 

		 ]]></see>
<as-of><![CDATA[DOM Level 2 HTML

		 

		 ]]></as-of>
</method>
<method name='links' fullname='dom.html:HTMLDocument/links/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 A collection of all AREA elements and anchor (A) elements in a document 

		 with a value for the href attribute.

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 var links = document.links;

		 for(var i = 0; i &lt; links.length; i++) {

		 	var linkHref = document.createTextNode(links[i].href);

		 	var lineBreak = document.createElement("br");

		 	document.body.appendChild(linkHref);

		 	document.body.appendChild(lineBreak);

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537465%28VS.85%29.aspx MSDN - links Collection

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.links MDC - Document.links

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7068919 W3C - HTMLDocument.links

		 

		 ]]></see>
</method>
<method name='location' fullname='dom.html:HTMLDocument/location/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:Location'>
<description><![CDATA[

		 Returns a Location object, which contains information about the URL of the document and provides 

		 methods for changing that URL. In Gecko browsers you can also assign to this property to load another URL. 

		 

		 <p><strong>Note:</strong> Location objects have a toString method returning the current URL. You can also 

		 assign a string to document.location. This means that you can work with document.location as if it were a 

		 string in most cases. Sometimes, for example when you need to call a String method on it, you have to 

		 explicitly call toString: 

		 

		 <listing>alert(document.location.toString().charAt(17))</listing>

		 </p>

		 

		 <p><strong>Note:</strong> document.location was originally a read-only property, although Gecko browsers allow 

		 you to assign to it as well. For cross-browser safety, use window.location instead. </p>

		 

		 <p><strong>Note:</strong> To retrieve just the URL as a string, the read-only document.URL property can be used. </p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 dump(document.location); 

		 // Prints a string like

		 // "http://www.example.com/juicybits.html" to the console</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535866%28VS.85%29.aspx MSDN - location Object

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.location MDC - Document.location

		 ]]></see>
<see><![CDATA[dom.html.Window#location()

		 

		 ]]></see>
</method>
<method name='namespaces' fullname='dom.html:HTMLDocument/namespaces/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Retrieves a collection of namespace objects.

		 

		 INCOMPLETE

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537470%28VS.85%29.aspx MSDN - namespaces Collection

		 

		 ]]></see>
</method>
<method name='parentWindow' fullname='dom.html:HTMLDocument/parentWindow/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom:Window'>
<description><![CDATA[

		 Gets a reference to the container object of the window.

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534331%28VS.85%29.aspx MSDN - parentWindow Property

		 

		 ]]></see>
</method>
<method name='plugins' fullname='dom.html:HTMLDocument/plugins/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the &lt;embed&gt; elements in the current document. 

		 

		 <p><strong>Note:</strong> For a list of installed plugins, use navigator.plugins instead.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537477%28VS.85%29.aspx MSDN - plugins Collection

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.plugins MDC - Document.plugins

		 

		 ]]></see>
</method>
<method name='protocol' fullname='dom.html:HTMLDocument/protocol/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Sets or retrieves the protocol portion of a URL. 

		 

		 <p><strong>Note:</strong> The protocol property specifies how to transfer information from the host to the 

		 client. Windows Internet Explorer supports several  predefined protocols, including  http and  ftp.</p>

		 

		 <p><strong>Note:</strong> The  document,  img, and  location objects expose the protocol property as read-only. 

		 location.protocol property returns the initial substring of a URL, including the first colon (for example, 

		 http:). However, document.protocol returns the expanded text of the protocol acronym. For example, it returns 

		 the http protocol as Hypertext Transfer Protocol.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example function returns the protocol property of the current page location.

		 <listing>

		 function getProtocol() {

		 	return document.location.protocol;

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534353%28VS.85%29.aspx MSDN - protocol Property

		 

		 ]]></see>
</method>
<method name='readyState' fullname='dom.html:HTMLDocument/readyState/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves a value that indicates the current state of the object.

		 

		 <table class="innertable">

		 	<tr><th>State</th><th>Description</th></tr>

		 	<tr>

		 		<td>uninitialized</td><td>Object is not initialized with data.</td>

		 	</tr>

		 	<tr>

		 		<td>loading</td><td>Object is loading its data.</td>

		 	</tr>

		 	<tr>

		 		<td>loaded</td><td>Object has finished loading its data.</td>

		 	</tr>

		 	<tr>

		 		<td>interactive</td><td>User can interact with the object even though it is not fully loaded.</td>

		 	</tr>

		 	<tr>

		 		<td>complete</td><td>Object is completely initialized.</td>

		 	</tr>

		 </table>

		 

		 <p><strong>Note:</strong> An object's state is initially set to uninitialized, and then to loading. When data 

		 loading is complete, the state of the link object passes through the loaded and interactive states to reach the 

		 complete state. </p>

		 

		 <p><strong>Note:</strong> The states through which an object passes are determined by that object; an object 

		 can skip certain states (for example, interactive) if the state does not apply to that object.</p>

		 

		 <p><strong>Note:</strong> Data source objects and databound elements are normally populated asynchronously, and 

		 certain programmatic operations can only be performed reliably on databound objects when they are ready for use.

		 Therefore, the appropriate code should be written to confirm the readyState of objects prior to performing 

		 certain operations on them. For example, walking the rows of a  table should not be attempted until after the 

		 table has reached the complete state.</p>

		 

		 <p><strong>Note:</strong> The readyState property enables the status of an object to be tested. The correct place 

		 to test the readyState property is in the event handler for  onreadystatechange. Similarly, a data source object 

		 (DSO) fires the  ondatasetcomplete event to notify the Web page that the dataset is ready for programmatic operation.</p>

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[Non-Standard Microsoft

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534359%28VS.85%29.aspx MSDN - readyState Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.readyState MDC - Document.readyState

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-document-readystate WHATWG - HTMLDocument.readyState

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='referrer' fullname='dom.html:HTMLDocument/referrer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Returns the URI of the page that linked to this page. 

		 The value is an empty string if the user navigated to the page directly 

		 (not through a link, but, for example, via a bookmark).

		 

		 <p><strong>Note:</strong> This property returns a value only when the user reaches the current page through a 

		 link from the previous page. Otherwise, document. referrer returns an empty string; it also returns an empty 

		 string when the link is from a secure site.</p>

		 

		 <p><strong>Note:</strong> For example, if PageA.htm includes a link to PageB.htm, and the user clicks that 

		 link, the document.referrer on PageB.htm returns "PageA.htm." However, if the user is on PageA.htm and types 

		 PageB.htm into the address line or chooses the Open command from the File menu to get to PageB.htm, the 

		 document.referrer returns an empty string.</p>

		 

		 ]]></description>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534365%28VS.85%29.aspx MSDN - referrer Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.referrer MDC - Document.referrer

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-95229140 W3C - HTMLDocument.referrer

		 

		 ]]></see>
</method>
<method name='scripts' fullname='dom.html:HTMLDocument/scripts/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Returns an HTMLCollection object containing one or more HTMLScriptElements or null which represent the &lt;script&gt; elements in the current document. 

		 

		 ]]></description>
<playerversion><![CDATA[HTML 5

		 ]]></playerversion>
<since><![CDATA[Non-Standard Microsoft

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms537487%28VS.85%29.aspx MSDN - scripts Collection

		 ]]></see>
<see><![CDATA[http://www.whatwg.org/specs/web-apps/current-work/#dom-document-scripts WHATWG - HTMLDocument.scripts

		 

		 ]]></see>
<modified><![CDATA[HTML 5

		 ]]></modified>
</method>
<method name='selection' fullname='dom.html:HTMLDocument/selection/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.objects:Selection'>
<description><![CDATA[

		 Represents the active selection, which is a highlighted block of text or other elements in the document 

		 that a user or a script can carry out some action on.

		 

		 <p><strong>Note (IE):</strong> You can use the selection object as input from the user to identify which portion 

		 of the document to act on, or as output to the user to show the results of an action.</p>

		 

		 <p><strong>Note (IE):</strong> Users and scripts can create selections. Users create selections by dragging the 

		 mouse over a portion of the document. Scripts create selections by calling the  select method on a text range 

		 or similar object. To get the active selection, apply the selection keyword to the document object. To carry 

		 out work on a selection, create a text range object from the selection using the  createRange method. </p>

		 

		 <p><strong>Note:</strong> A document can have only one selection at a time. The selection has a type that 

		 determines whether it is empty or contains a block of text or elements. Although an empty selection contains 

		 nothing, you can use it to mark a position in the document.</p>

		 

		 ]]></description>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535869%28VS.85%29.aspx MSDN - selection Object

		 

		 ]]></see>
</method>
<method name='title' fullname='dom.html:HTMLDocument/title/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets or sets the title of the document. 

		 

		 <p><strong>Note:</strong> The initial value of document.title is the text content of the &lt;title&gt; element.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 &lt;html&gt;

		 &lt;head&gt;

		 	&lt;title&gt;Hello World!&lt;/title&gt; 

		 &lt;/head&gt;

		 &lt;body&gt;

		 	&lt;script&gt;

		 		alert(document.title); // displays "Hello World!"

		 		document.title = "Goodbye World!";

		 		alert(document.title); // displays "Goodbye World!"

		 	&lt;/script&gt;

		 &lt;/body&gt;

		 &lt;/html&gt;</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMHTML 1

		 ]]></playerversion>
<since><![CDATA[DOMHTML 1

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.title MDC - Document.title

		 ]]></see>
<see><![CDATA[http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-18446827 W3C - HTMLDocument.title

		 

		 ]]></see>
</method>
<method name='uniqueID' fullname='dom.html:HTMLDocument/uniqueID/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Retrieves an autogenerated, unique identifier for the object. 

		 

		 <p><strong>Note (IE):</strong> When you apply this property to the  document object, the browser automatically 

		 generates a new ID that you can assign to an element's  id property.</p>

		 

		 <p><strong>Note (IE):</strong> A new ID is generated and assigned to the element the first time the property is retrieved. 

		 Every subsequent access to the property on the same element returns the same ID.</p>

		 

		 <p><strong>Note (IE):</strong> The unique ID generated is not guaranteed to be the same every time the page is loaded.</p>

		 

		 ]]></description>
<example><![CDATA[
		 This example uses the uniqueID property to show how the browser can autogenerate a unique ID for an element inserted into the page by a behavior.

		 <listing>

		 // Specifying an ID=document.uniqueID ensures that a unique identifier

		 // will be assigned to the element being inserted into the page by

		 // the behavior.

		 newTextAreaID = element.document.uniqueID;

		 element.document.body.insertAdjacentHTML ("beforeEnd",

		 "<P><TEXTAREA STYLE='height: 200 ;"+

		 "width: 350' ID= " + newTextAreaID + "></TEXTAREA></P>");</listing>

		 

		 ]]></example>
<playerversion><![CDATA[Non-Standard Microsoft

		 ]]></playerversion>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms534704%28VS.85%29.aspx MSDN - uniqueID Property

		 

		 ]]></see>
</method>
<method name='vlinkColor' fullname='dom.html:HTMLDocument/vlinkColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Gets/sets the color of links that the user has visited in the document. 

		 

		 <p><strong>Note:</strong> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>

		 

		 ]]></description>
<default><![CDATA["#800080" for IE / "#551A8B" for Mozilla

		 

		 ]]></default>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://msdn.microsoft.com/en-us/library/ms535139%28VS.85%29.aspx MSDN - vlinkColor Property

		 ]]></see>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.vlinkColor MDC - Document.vlinkColor

		 

		 ]]></see>
<as-of><![CDATA[DOM Level 2 HTML

		 

		 ]]></as-of>
</method>
<method name='width' fullname='dom.html:HTMLDocument/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Returns the width of the body element of the current document in pixels. 

		 

		 <p><strong>Note:</strong> Not supported by IE.</p>

		 

		 ]]></description>
<example><![CDATA[
		 <listing>

		 function init() {

		 	alert("The width of the document is " + document.width + " pixels.");

		 }</listing>

		 

		 ]]></example>
<playerversion><![CDATA[DOMCore 0

		 ]]></playerversion>
<since><![CDATA[DOMCore 0

		 ]]></since>
<see><![CDATA[http://developer.mozilla.org/en/DOM/document.width MDC - Document.width

		 

		 ]]></see>
</method>
<method name='alinkColor' fullname='dom.html:HTMLDocument/alinkColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='background' fullname='dom.html:HTMLDocument/background/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='bgColor' fullname='dom.html:HTMLDocument/bgColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='body' fullname='dom.html:HTMLDocument/body/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.html:HTMLElement' param_defaults='undefined' result_type='void'>
</method>
<method name='characterSet' fullname='dom.html:HTMLDocument/characterSet/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='charset' fullname='dom.html:HTMLDocument/charset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='compatMode' fullname='dom.html:HTMLDocument/compatMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='cookie' fullname='dom.html:HTMLDocument/cookie/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='designMode' fullname='dom.html:HTMLDocument/designMode/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='dir' fullname='dom.html:HTMLDocument/dir/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='domain' fullname='dom.html:HTMLDocument/domain/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='expando' fullname='dom.html:HTMLDocument/expando/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='fgColor' fullname='dom.html:HTMLDocument/fgColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='dom.html:HTMLDocument/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='linkColor' fullname='dom.html:HTMLDocument/linkColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='protocol' fullname='dom.html:HTMLDocument/protocol/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='title' fullname='dom.html:HTMLDocument/title/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='vlinkColor' fullname='dom.html:HTMLDocument/vlinkColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='dom.html:HTMLDocument/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLFormElement' fullname='dom.html:HTMLFormElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLFormElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The FORM element encompasses behavior similar to a collection and an 

	 element. It provides direct access to the contained form controls as well 

	 as the attributes of the form element.

	 ]]></description>
</classRec>
<method name='reset' fullname='dom.html:HTMLFormElement/reset' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Restores a form element's default values. It performs the same action 

		 as a reset button. 

		 ]]></description>
</method>
<method name='submit' fullname='dom.html:HTMLFormElement/submit' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Submits the form. It performs the same action as a submit button. 

		 ]]></description>
</method>
<method name='acceptCharset' fullname='dom.html:HTMLFormElement/acceptCharset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 List of character sets supported by the server. See the accept-charset 

		 attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='action' fullname='dom.html:HTMLFormElement/action/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Server-side form handler. See the action attribute definition in 

		 HTML 4.01.

		 ]]></description>
</method>
<method name='elements' fullname='dom.html:HTMLFormElement/elements/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Returns a collection of all form control elements in the form.

		 ]]></description>
</method>
<method name='enctype' fullname='dom.html:HTMLFormElement/enctype/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The content type of the submitted form, generally 

		 "application/x-www-form-urlencoded". See the enctype attribute 

		 definition in HTML 4.01.

		 

		 Note: The onsubmit even handler is not guaranteed to be triggered when 

		 invoking this method. The behavior is inconsistent for historical 

		 reasons and authors should not rely on a particular one.

		 ]]></description>
</method>
<method name='length' fullname='dom.html:HTMLFormElement/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The number of form controls in the form.

		 ]]></description>
</method>
<method name='method' fullname='dom.html:HTMLFormElement/method/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 HTTP method [IETF RFC 2616] used to submit form. See the method attribute 

		 definition in HTML 4.01.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLFormElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Names the form.

		 ]]></description>
</method>
<method name='onreset' fullname='dom.html:HTMLFormElement/onreset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onreset event occurs when a form is reset.

		 ]]></description>
</method>
<method name='onsubmit' fullname='dom.html:HTMLFormElement/onsubmit/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onsubmit event occurs when a form is submitted.

		 ]]></description>
</method>
<method name='target' fullname='dom.html:HTMLFormElement/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame to render the resource in. See the target attribute definition 

		 in HTML 4.01.

		 ]]></description>
</method>
<method name='acceptCharset' fullname='dom.html:HTMLFormElement/acceptCharset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='action' fullname='dom.html:HTMLFormElement/action/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='enctype' fullname='dom.html:HTMLFormElement/enctype/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='method' fullname='dom.html:HTMLFormElement/method/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLFormElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onreset' fullname='dom.html:HTMLFormElement/onreset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onsubmit' fullname='dom.html:HTMLFormElement/onsubmit/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='target' fullname='dom.html:HTMLFormElement/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLFontElement' fullname='dom.html:HTMLFontElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLFontElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Local change to font. This element is deprecated in HTML 4.01.

	 ]]></description>
</classRec>
<method name='color' fullname='dom.html:HTMLFontElement/color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Font color. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='face' fullname='dom.html:HTMLFontElement/face/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Font face identifier. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='size' fullname='dom.html:HTMLFontElement/size/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Computed font size. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='color' fullname='dom.html:HTMLFontElement/color/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='face' fullname='dom.html:HTMLFontElement/face/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='size' fullname='dom.html:HTMLFontElement/size/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLTextAreaElement' fullname='dom.html:HTMLTextAreaElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLTextAreaElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Multi-line text field.

	 ]]></description>
</classRec>
<method name='blur' fullname='dom.html:HTMLTextAreaElement/blur' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Removes keyboard focus from this element. 

		 ]]></description>
</method>
<method name='focus' fullname='dom.html:HTMLTextAreaElement/focus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Gives keyboard focus to this element. 

		 ]]></description>
</method>
<method name='select' fullname='dom.html:HTMLTextAreaElement/select' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Select the contents of the TEXTAREA. 

		 ]]></description>
</method>
<method name='accessKey' fullname='dom.html:HTMLTextAreaElement/accessKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A single character access key to give access to the form control.

		 ]]></description>
</method>
<method name='cols' fullname='dom.html:HTMLTextAreaElement/cols/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Width of control (in characters).

		 ]]></description>
</method>
<method name='defaultValue' fullname='dom.html:HTMLTextAreaElement/defaultValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Represents the contents of the element. The value of this attribute does 

		 not change if the contents of the corresponding form control, in an 

		 interactive user agent, changes.

		 ]]></description>
</method>
<method name='disabled' fullname='dom.html:HTMLTextAreaElement/disabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The control is unavailable in this context.

		 ]]></description>
</method>
<method name='form' fullname='dom.html:HTMLTextAreaElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this 

		 control is not within the context of a form.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLTextAreaElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Form control or object name when submitted with a form.

		 ]]></description>
</method>
<method name='onblur' fullname='dom.html:HTMLTextAreaElement/onblur/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='onchange' fullname='dom.html:HTMLTextAreaElement/onchange/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.

		 ]]></description>
</method>
<method name='onfocus' fullname='dom.html:HTMLTextAreaElement/onfocus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='onselect' fullname='dom.html:HTMLTextAreaElement/onselect/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onselect event occurs when a user selects some text in a text field.

		 ]]></description>
</method>
<method name='readOnly' fullname='dom.html:HTMLTextAreaElement/readOnly/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 This control is read-only.

		 ]]></description>
</method>
<method name='rows' fullname='dom.html:HTMLTextAreaElement/rows/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Number of text rows.

		 ]]></description>
</method>
<method name='tabIndex' fullname='dom.html:HTMLTextAreaElement/tabIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Index that represents the element's position in the tabbing order.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLTextAreaElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The type of this form control. This the string "textarea".

		 ]]></description>
</method>
<method name='value' fullname='dom.html:HTMLTextAreaElement/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Represents the current contents of the corresponding form control, in an 

		 interactive user agent. Changing this attribute changes the contents of the 

		 form control, but does not change the contents of the element. If the entirety 

		 of the data can not fit into a single DOMString, the implementation may 

		 truncate the data.

		 ]]></description>
</method>
<method name='accessKey' fullname='dom.html:HTMLTextAreaElement/accessKey/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='cols' fullname='dom.html:HTMLTextAreaElement/cols/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='defaultValue' fullname='dom.html:HTMLTextAreaElement/defaultValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='disabled' fullname='dom.html:HTMLTextAreaElement/disabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLTextAreaElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onblur' fullname='dom.html:HTMLTextAreaElement/onblur/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onchange' fullname='dom.html:HTMLTextAreaElement/onchange/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onfocus' fullname='dom.html:HTMLTextAreaElement/onfocus/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onselect' fullname='dom.html:HTMLTextAreaElement/onselect/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='readOnly' fullname='dom.html:HTMLTextAreaElement/readOnly/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='rows' fullname='dom.html:HTMLTextAreaElement/rows/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='tabIndex' fullname='dom.html:HTMLTextAreaElement/tabIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='value' fullname='dom.html:HTMLTextAreaElement/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLOListElement' fullname='dom.html:HTMLOListElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLOListElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Ordered list.

	 ]]></description>
</classRec>
<method name='compact' fullname='dom.html:HTMLOListElement/compact/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='start' fullname='dom.html:HTMLOListElement/start/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Starting sequence number. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLOListElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Bullet style. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='compact' fullname='dom.html:HTMLOListElement/compact/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='start' fullname='dom.html:HTMLOListElement/start/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='dom.html:HTMLOListElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLParagraphElement' fullname='dom.html:HTMLParagraphElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLParagraphElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Paragraphs.

	 ]]></description>
</classRec>
<method name='align' fullname='dom.html:HTMLParagraphElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLParagraphElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLAnchorElement' fullname='dom.html:HTMLAnchorElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLAnchorElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The anchor element.

	 ]]></description>
</classRec>
<method name='blur' fullname='dom.html:HTMLAnchorElement/blur' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Removes keyboard focus from this element. 

		 ]]></description>
</method>
<method name='focus' fullname='dom.html:HTMLAnchorElement/focus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Gives keyboard focus to this element. 

		 ]]></description>
</method>
<method name='accessKey' fullname='dom.html:HTMLAnchorElement/accessKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A single character access key to give access to the form control.

		 ]]></description>
</method>
<method name='charset' fullname='dom.html:HTMLAnchorElement/charset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The character encoding of the linked resource.

		 ]]></description>
</method>
<method name='coords' fullname='dom.html:HTMLAnchorElement/coords/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Comma-separated list of lengths, defining an active region geometry.

		 

		 <p>This attribute specifies the position and shape on the screen. The 

		 number and order of values depends on the shape being defined. Possible combinations:

		 

		 <table class="innertable">

		 <tbody>

		 	<tr>

		 		<th><p>Shape</p></th>

		 		<th><p>Values</p></th>

		 	</tr>

		 	<tr>

		 		<td><code>rect</code></td>

		 		<td>left-x, top-y, right-x, bottom-y.</td>

		 	</tr>

		 	<tr>

		 		<td><code>circle</code></td>

		 		<td>center-x, center-y, radius. <strong>Note:</strong> When the radius value is a percentage value, 

		 user agents should calculate the final radius value based on the associated object's width 

		 and height. The radius should be the smaller value of the two.</td>

		 	</tr>

		 	<tr>

		 		<td><code>poly</code></td>

		 		<td>x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should 

		 be the same to close the polygon. When these coordinate values are not the same, user agents 

		 should infer an additional coordinate pair to close the polygon.</td>

		 	</tr>

		 </tbody>

		 </table>

		 </p>

		 

		 <p>Coordinates are relative to the top, left corner of the object. All values are lengths. 

		 All values are separated by commas.</p>

		 ]]></description>
</method>
<method name='href' fullname='dom.html:HTMLAnchorElement/href/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The absolute URI of the linked resource.

		 ]]></description>
</method>
<method name='hreflang' fullname='dom.html:HTMLAnchorElement/hreflang/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Language code of the linked resource.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLAnchorElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Anchor name.

		 ]]></description>
</method>
<method name='onblur' fullname='dom.html:HTMLAnchorElement/onblur/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='onfocus' fullname='dom.html:HTMLAnchorElement/onfocus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='rel' fullname='dom.html:HTMLAnchorElement/rel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Forward link type.

		 ]]></description>
</method>
<method name='rev' fullname='dom.html:HTMLAnchorElement/rev/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Reverse link type.

		 ]]></description>
</method>
<method name='shape' fullname='dom.html:HTMLAnchorElement/shape/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The shape of the active area. The coordinates are given by coords. 

		 

		 <p>Possible values can be:

		 <ul>

		 <li>default: Specifies the entire region</li>

		 <li>rect: Define a rectangular region</li>

		 <li>circle: Define a circular region</li>

		 <li>poly: Define a polygonal region</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='tabIndex' fullname='dom.html:HTMLAnchorElement/tabIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Index that represents the element's position in the tabbing order.

		 ]]></description>
</method>
<method name='target' fullname='dom.html:HTMLAnchorElement/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame to render the resource in.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLAnchorElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Advisory content type.

		 

		 <p>This attribute gives an advisory hint as to the content type of 

		 the content available at the link target address. It allows user agents 

		 to opt to use a fallback mechanism rather than fetch the content if 

		 they are advised that they will get content in a content type they do 

		 not support.</p>

		 

		 <p>Authors who use this attribute take responsibility to manage the risk 

		 that it may become inconsistent with the content available at the link 

		 target address.</p>

		 ]]></description>
</method>
<method name='accessKey' fullname='dom.html:HTMLAnchorElement/accessKey/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='charset' fullname='dom.html:HTMLAnchorElement/charset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='coords' fullname='dom.html:HTMLAnchorElement/coords/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='href' fullname='dom.html:HTMLAnchorElement/href/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='hreflang' fullname='dom.html:HTMLAnchorElement/hreflang/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLAnchorElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onblur' fullname='dom.html:HTMLAnchorElement/onblur/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onfocus' fullname='dom.html:HTMLAnchorElement/onfocus/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='rel' fullname='dom.html:HTMLAnchorElement/rel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='rev' fullname='dom.html:HTMLAnchorElement/rev/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='shape' fullname='dom.html:HTMLAnchorElement/shape/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='tabIndex' fullname='dom.html:HTMLAnchorElement/tabIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='target' fullname='dom.html:HTMLAnchorElement/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='dom.html:HTMLAnchorElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLParamElement' fullname='dom.html:HTMLParamElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLParamElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Parameters fed to the OBJECT element.

	 ]]></description>
</classRec>
<method name='name' fullname='dom.html:HTMLParamElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The name of a run-time parameter.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLParamElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Content type for the value attribute when valuetype has the value "ref".

		 ]]></description>
</method>
<method name='value' fullname='dom.html:HTMLParamElement/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The value of a run-time parameter.

		 ]]></description>
</method>
<method name='valueType' fullname='dom.html:HTMLParamElement/valueType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Information about the meaning of the value attribute value.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLParamElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='dom.html:HTMLParamElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='value' fullname='dom.html:HTMLParamElement/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='valueType' fullname='dom.html:HTMLParamElement/valueType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLBodyElement' fullname='dom.html:HTMLBodyElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLBodyElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The HTML document body. This element is always present in the DOM 

	 API, even if the tags are not present in the source document.

	 ]]></description>
</classRec>
<method name='aLink' fullname='dom.html:HTMLBodyElement/aLink/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Color of active links (after mouse-button down, but before 

		 mouse-button up). This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='background' fullname='dom.html:HTMLBodyElement/background/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 URI of the background texture tile image. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='bgColor' fullname='dom.html:HTMLBodyElement/bgColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Document background color. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='link' fullname='dom.html:HTMLBodyElement/link/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Color of links that are not active and unvisited. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='onload' fullname='dom.html:HTMLBodyElement/onload/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.

		 ]]></description>
</method>
<method name='onoffline' fullname='dom.html:HTMLBodyElement/onoffline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 <strong>WHATWG Web Applications 1.0 specification | Firefox 3+</strong> 

		 

		 Returns the event handling code for the offline event.

		 

		 <p>Note: The events bubble up from document.body, to document, ending at window. Both events are 

		 non-cancellable (you can't prevent the user from coming online, or going offline).</p>

		 ]]></description>
</method>
<method name='ononline' fullname='dom.html:HTMLBodyElement/ononline/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 <strong>WHATWG Web Applications 1.0 specification | Firefox 3+</strong> 

		 

		 Returns the event handling code for the online event.

		 

		 <p>Note: The events bubble up from document.body, to document, ending at window. Both events are 

		 non-cancellable (you can't prevent the user from coming online, or going offline).</p>

		 ]]></description>
</method>
<method name='onunload' fullname='dom.html:HTMLBodyElement/onunload/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onunload event occurs when the user agent removes a document from a window or frame.

		 ]]></description>
</method>
<method name='text' fullname='dom.html:HTMLBodyElement/text/get' isStatic='false' isFinal='false' isOverride='true'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Document text color. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='vLink' fullname='dom.html:HTMLBodyElement/vLink/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Color of links that have been visited by the user. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='aLink' fullname='dom.html:HTMLBodyElement/aLink/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='background' fullname='dom.html:HTMLBodyElement/background/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='bgColor' fullname='dom.html:HTMLBodyElement/bgColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='link' fullname='dom.html:HTMLBodyElement/link/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onload' fullname='dom.html:HTMLBodyElement/onload/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onoffline' fullname='dom.html:HTMLBodyElement/onoffline/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='ononline' fullname='dom.html:HTMLBodyElement/ononline/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onunload' fullname='dom.html:HTMLBodyElement/onunload/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='text' fullname='dom.html:HTMLBodyElement/text/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='vLink' fullname='dom.html:HTMLBodyElement/vLink/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLHeadElement' fullname='dom.html:HTMLHeadElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLHeadElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Document head information. See the HEAD element definition in HTML 4.01.

	 ]]></description>
</classRec>
<method name='profile' fullname='dom.html:HTMLHeadElement/profile/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 URI designating a metadata profile. See the profile 

		 attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='profile' fullname='dom.html:HTMLHeadElement/profile/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLStyleElement' fullname='dom.html:HTMLStyleElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLStyleElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Style information. See the STYLE element definition in HTML 4.01, the CSS 

	 module [DOM Level 2 Style Sheets and CSS] and the LinkStyle interface in 

	 the StyleSheets module [DOM Level 2 Style Sheets and CSS].

	 ]]></description>
</classRec>
<method name='disabled' fullname='dom.html:HTMLStyleElement/disabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Enables/disables the style sheet.

		 ]]></description>
</method>
<method name='media' fullname='dom.html:HTMLStyleElement/media/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Designed for use with one or more target media. See the media attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLStyleElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The content type of the style sheet language. See the type attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='disabled' fullname='dom.html:HTMLStyleElement/disabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='media' fullname='dom.html:HTMLStyleElement/media/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='dom.html:HTMLStyleElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLModElement' fullname='dom.html:HTMLModElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLModElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Notice of modification to part of a document.

	 ]]></description>
</classRec>
<method name='cite' fullname='dom.html:HTMLModElement/cite/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A URI designating a document that describes the reason for the change.

		 ]]></description>
</method>
<method name='dateTime' fullname='dom.html:HTMLModElement/dateTime/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The date and time of the change.

		 ]]></description>
</method>
<method name='cite' fullname='dom.html:HTMLModElement/cite/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='dateTime' fullname='dom.html:HTMLModElement/dateTime/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLOptGroupElement' fullname='dom.html:HTMLOptGroupElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLOptGroupElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Group options together in logical subdivisions. See the OPTGROUP element definition in HTML 4.01.

	 ]]></description>
</classRec>
<method name='disabled' fullname='dom.html:HTMLOptGroupElement/disabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='label' fullname='dom.html:HTMLOptGroupElement/label/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Assigns a label to this option group. See the label attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='disabled' fullname='dom.html:HTMLOptGroupElement/disabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='label' fullname='dom.html:HTMLOptGroupElement/label/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLFrameElement' fullname='dom.html:HTMLFrameElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLFrameElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Create a frame.

	 ]]></description>
</classRec>
<method name='contentDocument' fullname='dom.html:HTMLFrameElement/contentDocument/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Document'>
<description><![CDATA[

		 DOM Level 2

		 

		 The document this frame contains, if there is any and it is available, or null otherwise.

		 ]]></description>
</method>
<method name='frameBorder' fullname='dom.html:HTMLFrameElement/frameBorder/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Request frame borders.

		 ]]></description>
</method>
<method name='longDesc' fullname='dom.html:HTMLFrameElement/longDesc/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 URI designating a long description of this image or frame.

		 ]]></description>
</method>
<method name='marginHeight' fullname='dom.html:HTMLFrameElement/marginHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame margin height, in pixels.

		 ]]></description>
</method>
<method name='marginWidth' fullname='dom.html:HTMLFrameElement/marginWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame margin width, in pixels.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLFrameElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The frame name (object of the target attribute).

		 ]]></description>
</method>
<method name='noResize' fullname='dom.html:HTMLFrameElement/noResize/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 When true, forbid user from resizing frame.

		 ]]></description>
</method>
<method name='scrolling' fullname='dom.html:HTMLFrameElement/scrolling/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Specify whether or not the frame should have scrollbars. 

		 ]]></description>
</method>
<method name='src' fullname='dom.html:HTMLFrameElement/src/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A URI designating the initial frame contents.

		 ]]></description>
</method>
<method name='frameBorder' fullname='dom.html:HTMLFrameElement/frameBorder/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='longDesc' fullname='dom.html:HTMLFrameElement/longDesc/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='marginHeight' fullname='dom.html:HTMLFrameElement/marginHeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='marginWidth' fullname='dom.html:HTMLFrameElement/marginWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLFrameElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='noResize' fullname='dom.html:HTMLFrameElement/noResize/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='scrolling' fullname='dom.html:HTMLFrameElement/scrolling/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='src' fullname='dom.html:HTMLFrameElement/src/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLOptionElement' fullname='dom.html:HTMLOptionElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLOptionElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A selectable choice. See the OPTION element definition in HTML 4.01.

	 ]]></description>
</classRec>
<method name='defaultSelected' fullname='dom.html:HTMLOptionElement/defaultSelected/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Represents the value of the HTML selected attribute. The value of this attribute 

		 does not change if the state of the corresponding form control, in an interactive 

		 user agent, changes. See the selected attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='disabled' fullname='dom.html:HTMLOptionElement/disabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='form' fullname='dom.html:HTMLOptionElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.

		 ]]></description>
</method>
<method name='index' fullname='dom.html:HTMLOptionElement/index/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 The index of this OPTION in its parent SELECT, starting from 0.

		 ]]></description>
</method>
<method name='label' fullname='dom.html:HTMLOptionElement/label/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Option label for use in hierarchical menus. See the label attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='selected' fullname='dom.html:HTMLOptionElement/selected/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Represents the current state of the corresponding form control, in an interactive user agent. 

		 Changing this attribute changes the state of the form control, but does not change the value 

		 of the HTML selected attribute of the element.

		 ]]></description>
</method>
<method name='text' fullname='dom.html:HTMLOptionElement/text/get' isStatic='false' isFinal='false' isOverride='true'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The text contained within the option element.

		 ]]></description>
</method>
<method name='value' fullname='dom.html:HTMLOptionElement/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The current form control value. See the value attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='defaultSelected' fullname='dom.html:HTMLOptionElement/defaultSelected/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='disabled' fullname='dom.html:HTMLOptionElement/disabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='label' fullname='dom.html:HTMLOptionElement/label/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='selected' fullname='dom.html:HTMLOptionElement/selected/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='value' fullname='dom.html:HTMLOptionElement/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLLinkElement' fullname='dom.html:HTMLLinkElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLLinkElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The LINK element specifies a link to an external resource, and defines this 

	 document's relationship to that resource (or vice versa). See the LINK 

	 element definition in HTML 4.01 (see also the LinkStyle interface in the 

	 StyleSheet module [DOM Level 2 Style Sheets and CSS]).

	 ]]></description>
</classRec>
<method name='charset' fullname='dom.html:HTMLLinkElement/charset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The character encoding of the resource being linked to. See the 

		 charset attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='disabled' fullname='dom.html:HTMLLinkElement/disabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Enables/disables the link. This is currently only used for style 

		 sheet links, and may be used to activate or deactivate style sheets.

		 ]]></description>
</method>
<method name='href' fullname='dom.html:HTMLLinkElement/href/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The URI of the linked resource. See the href 

		 attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='hreflang' fullname='dom.html:HTMLLinkElement/hreflang/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Language code of the linked resource. See the hreflang attribute 

		 definition in HTML 4.01.

		 ]]></description>
</method>
<method name='media' fullname='dom.html:HTMLLinkElement/media/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Designed for use with one or more target media. See the media 

		 attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='rel' fullname='dom.html:HTMLLinkElement/rel/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Forward link type. See the rel attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='rev' fullname='dom.html:HTMLLinkElement/rev/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Reverse link type. See the rev attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='target' fullname='dom.html:HTMLLinkElement/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame to render the resource in. See the target attribute definition 

		 in HTML 4.01.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLLinkElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Advisory content type. See the type attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='charset' fullname='dom.html:HTMLLinkElement/charset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='disabled' fullname='dom.html:HTMLLinkElement/disabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='href' fullname='dom.html:HTMLLinkElement/href/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='hreflang' fullname='dom.html:HTMLLinkElement/hreflang/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='media' fullname='dom.html:HTMLLinkElement/media/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='rel' fullname='dom.html:HTMLLinkElement/rel/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='rev' fullname='dom.html:HTMLLinkElement/rev/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='target' fullname='dom.html:HTMLLinkElement/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='dom.html:HTMLLinkElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLPreElement' fullname='dom.html:HTMLPreElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLPreElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Preformatted text.

	 ]]></description>
</classRec>
<method name='width' fullname='dom.html:HTMLPreElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Fixed width for content. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='width' fullname='dom.html:HTMLPreElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLAppletElement' fullname='dom.html:HTMLAppletElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLAppletElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 An embedded Java applet. This element is deprecated in HTML 4.01.

	 

	 ]]></description>
<playerversion><![CDATA[Deprecated 0

	 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

	 ]]></as-of>
</classRec>
<method name='align' fullname='dom.html:HTMLAppletElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.

		 <p>Valid values are: 

		 <ul>

		 <li>bottom</li>

		 <li>middle</li>

		 <li>top</li>

		 </ul></p>

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='alt' fullname='dom.html:HTMLAppletElement/alt/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Alternate text for user agents not rendering the normal content of this element. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='archive' fullname='dom.html:HTMLAppletElement/archive/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Comma-separated archive list. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='code' fullname='dom.html:HTMLAppletElement/code/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Applet class file. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='codeBase' fullname='dom.html:HTMLAppletElement/codeBase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Optional base URI for applet. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='height' fullname='dom.html:HTMLAppletElement/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Override height. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='hspace' fullname='dom.html:HTMLAppletElement/hspace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Horizontal space, in pixels, to the left and right of this image, applet, or object. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='name' fullname='dom.html:HTMLAppletElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The name of the applet. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='object' fullname='dom.html:HTMLAppletElement/object/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 The value of the "object" attribute. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
</method>
<method name='vspace' fullname='dom.html:HTMLAppletElement/vspace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Vertical space, in pixels, above and below this image, applet, or object. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='width' fullname='dom.html:HTMLAppletElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Override width. This attribute is deprecated in HTML 4.01.

		 

		 ]]></description>
<playerversion><![CDATA[Deprecated 0

		 ]]></playerversion>
<as-of><![CDATA[HTML 4.01

		 ]]></as-of>
</method>
<method name='align' fullname='dom.html:HTMLAppletElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='alt' fullname='dom.html:HTMLAppletElement/alt/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='archive' fullname='dom.html:HTMLAppletElement/archive/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='code' fullname='dom.html:HTMLAppletElement/code/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='codeBase' fullname='dom.html:HTMLAppletElement/codeBase/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='dom.html:HTMLAppletElement/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='hspace' fullname='dom.html:HTMLAppletElement/hspace/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLAppletElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='object' fullname='dom.html:HTMLAppletElement/object/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='vspace' fullname='dom.html:HTMLAppletElement/vspace/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='dom.html:HTMLAppletElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLIFrameElement' fullname='dom.html:HTMLIFrameElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLIFrameElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Inline subwindows.

	 ]]></description>
</classRec>
<method name='align' fullname='dom.html:HTMLIFrameElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.

		 <p>Valid values are: 

		 <ul>

		 <li>bottom</li>

		 <li>middle</li>

		 <li>top</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='contentDocument' fullname='dom.html:HTMLIFrameElement/contentDocument/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Document'>
<description><![CDATA[

		 DOM Level 2

		 

		 The document this frame contains, if there is any and it is available, or null otherwise.

		 ]]></description>
</method>
<method name='frameBorder' fullname='dom.html:HTMLIFrameElement/frameBorder/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Request frame borders.

		 ]]></description>
</method>
<method name='height' fullname='dom.html:HTMLIFrameElement/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame height.

		 ]]></description>
</method>
<method name='longDesc' fullname='dom.html:HTMLIFrameElement/longDesc/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 URI designating a long description of this image or frame.

		 ]]></description>
</method>
<method name='marginHeight' fullname='dom.html:HTMLIFrameElement/marginHeight/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame margin height, in pixels.

		 ]]></description>
</method>
<method name='marginWidth' fullname='dom.html:HTMLIFrameElement/marginWidth/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame margin width, in pixels.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLIFrameElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The frame name (object of the target attribute).

		 ]]></description>
</method>
<method name='scrolling' fullname='dom.html:HTMLIFrameElement/scrolling/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Specify whether or not the frame should have scrollbars. 

		 ]]></description>
</method>
<method name='src' fullname='dom.html:HTMLIFrameElement/src/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A URI designating the initial frame contents.

		 ]]></description>
</method>
<method name='width' fullname='dom.html:HTMLIFrameElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame width.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLIFrameElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='frameBorder' fullname='dom.html:HTMLIFrameElement/frameBorder/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='dom.html:HTMLIFrameElement/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='longDesc' fullname='dom.html:HTMLIFrameElement/longDesc/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='marginHeight' fullname='dom.html:HTMLIFrameElement/marginHeight/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='marginWidth' fullname='dom.html:HTMLIFrameElement/marginWidth/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLIFrameElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='scrolling' fullname='dom.html:HTMLIFrameElement/scrolling/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='src' fullname='dom.html:HTMLIFrameElement/src/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='dom.html:HTMLIFrameElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLUListElement' fullname='dom.html:HTMLUListElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLUListElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Unordered list.

	 ]]></description>
</classRec>
<method name='compact' fullname='dom.html:HTMLUListElement/compact/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLUListElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Bullet style. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='compact' fullname='dom.html:HTMLUListElement/compact/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='dom.html:HTMLUListElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLHeadingElement' fullname='dom.html:HTMLHeadingElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLHeadingElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 For the H1 to H6 elements.

	 ]]></description>
</classRec>
<method name='align' fullname='dom.html:HTMLHeadingElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLHeadingElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLTitleElement' fullname='dom.html:HTMLTitleElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLTitleElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The document title. See the TITLE element definition in HTML 4.01.

	 ]]></description>
</classRec>
<method name='text' fullname='dom.html:HTMLTitleElement/text/get' isStatic='false' isFinal='false' isOverride='true'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The specified title as a string.

		 ]]></description>
</method>
<method name='text' fullname='dom.html:HTMLTitleElement/text/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLObjectElement' fullname='dom.html:HTMLObjectElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLObjectElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Generic embedded object.

	 ]]></description>
</classRec>
<method name='align' fullname='dom.html:HTMLObjectElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.

		 <p>Valid values are: 

		 <ul>

		 <li>bottom</li>

		 <li>middle</li>

		 <li>top</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='archive' fullname='dom.html:HTMLObjectElement/archive/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Space-separated list of archives.

		 ]]></description>
</method>
<method name='border' fullname='dom.html:HTMLObjectElement/border/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Width of border around the object. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='code' fullname='dom.html:HTMLObjectElement/code/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Applet class file.

		 

		 ]]></description>
<see><![CDATA[HTMLAppletElement#code

		 ]]></see>
</method>
<method name='codeBase' fullname='dom.html:HTMLObjectElement/codeBase/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Base URI for classid, data, and archive attributes.

		 ]]></description>
</method>
<method name='codeType' fullname='dom.html:HTMLObjectElement/codeType/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Content type for data downloaded via classid attribute.

		 ]]></description>
</method>
<method name='contentDocument' fullname='dom.html:HTMLObjectElement/contentDocument/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core:Document'>
<description><![CDATA[

		 DOM Level 2

		 

		 The document this object contains, if there is any and it is available, or null otherwise.

		 ]]></description>
</method>
<method name='data' fullname='dom.html:HTMLObjectElement/data/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A URI [IETF RFC 2396] specifying the location of the object's data.

		 ]]></description>
</method>
<method name='declare' fullname='dom.html:HTMLObjectElement/declare/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Declare (for future reference), but do not instantiate, this object.

		 

		 <p>When present, this boolean attribute makes the current OBJECT definition 

		 a declaration only. The object must be instantiated by a subsequent OBJECT 

		 definition referring to this declaration.</p>

		 ]]></description>
</method>
<method name='form' fullname='dom.html:HTMLObjectElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.

		 ]]></description>
</method>
<method name='height' fullname='dom.html:HTMLObjectElement/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Override height.

		 ]]></description>
</method>
<method name='hspace' fullname='dom.html:HTMLObjectElement/hspace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Horizontal space, in pixels, to the left and right of this image, applet, or object. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLObjectElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Form control or object name when submitted with a form.

		 ]]></description>
</method>
<method name='standby' fullname='dom.html:HTMLObjectElement/standby/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Message to render while loading the object.

		 ]]></description>
</method>
<method name='tabIndex' fullname='dom.html:HTMLObjectElement/tabIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Index that represents the element's position in the tabbing order.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLObjectElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Content type for data downloaded via data attribute.

		 ]]></description>
</method>
<method name='useMap' fullname='dom.html:HTMLObjectElement/useMap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Use client-side image map.

		 ]]></description>
</method>
<method name='vspace' fullname='dom.html:HTMLObjectElement/vspace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Vertical space, in pixels, above and below this image, applet, or object. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='width' fullname='dom.html:HTMLObjectElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Override width.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLObjectElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='archive' fullname='dom.html:HTMLObjectElement/archive/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='border' fullname='dom.html:HTMLObjectElement/border/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='code' fullname='dom.html:HTMLObjectElement/code/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='codeBase' fullname='dom.html:HTMLObjectElement/codeBase/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='codeType' fullname='dom.html:HTMLObjectElement/codeType/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='data' fullname='dom.html:HTMLObjectElement/data/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='declare' fullname='dom.html:HTMLObjectElement/declare/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='dom.html:HTMLObjectElement/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='hspace' fullname='dom.html:HTMLObjectElement/hspace/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLObjectElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='standby' fullname='dom.html:HTMLObjectElement/standby/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='tabIndex' fullname='dom.html:HTMLObjectElement/tabIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='dom.html:HTMLObjectElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='useMap' fullname='dom.html:HTMLObjectElement/useMap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='vspace' fullname='dom.html:HTMLObjectElement/vspace/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='dom.html:HTMLObjectElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLMenuElement' fullname='dom.html:HTMLMenuElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLMenuElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Menu list.

	 ]]></description>
</classRec>
<method name='compact' fullname='dom.html:HTMLMenuElement/compact/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='compact' fullname='dom.html:HTMLMenuElement/compact/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLMetaElement' fullname='dom.html:HTMLMetaElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLMetaElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This contains generic meta-information about the document. See the META element definition in HTML 4.01.

	 ]]></description>
</classRec>
<method name='content' fullname='dom.html:HTMLMetaElement/content/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Associated information. See the content attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='httpEquiv' fullname='dom.html:HTMLMetaElement/httpEquiv/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 HTTP response header name [IETF RFC 2616]. See the http-equiv attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLMetaElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Meta information name. See the name attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='scheme' fullname='dom.html:HTMLMetaElement/scheme/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Select form of content. See the scheme attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='content' fullname='dom.html:HTMLMetaElement/content/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='httpEquiv' fullname='dom.html:HTMLMetaElement/httpEquiv/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLMetaElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='scheme' fullname='dom.html:HTMLMetaElement/scheme/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLSelectElement' fullname='dom.html:HTMLSelectElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLSelectElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The select element allows the selection of an option. The contained options 

	 can be directly accessed through the select element as a collection. See 

	 the SELECT element definition in HTML 4.01.

	 

	 http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-40676705

	 ]]></description>
</classRec>
<method name='add' fullname='dom.html:HTMLSelectElement/add' isStatic='false' isFinal='false' isOverride='false'  param_names='element;before' param_types='dom.html:HTMLElement;dom.html:HTMLElement' param_defaults='undefined;undefined' result_type='void'>
<description><![CDATA[

		 Add a new element to the collection of OPTION elements for this SELECT. 

		 This method is the equivalent of the appendChild method of the Node 

		 interface if the before parameter is null. It is equivalent to the 

		 insertBefore method on the parent of before in all other cases. This 

		 method may have no effect if the new element is not an OPTION or 

		 an OPTGROUP. 

		 

		 ]]></description>
<param><![CDATA[element The element to add.

		 ]]></param>
<param><![CDATA[before The element to insert before, or null for the tail 

		 of the list.

		 ]]></param>
<throws><![CDATA[dom.core.DOMException NOT_FOUND_ERR: Raised if before is not a 

		 descendant of the SELECT element.

		 

		 ]]></throws>
</method>
<method name='blur' fullname='dom.html:HTMLSelectElement/blur' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Causes the element to lose focus and fires the onblur event.

		 

		 This method shifts focus away from the element it is applied 

		 to but does not set focus on the next element in the tab order.

		 

		 <strong>IE</strong>

		 In Microsoft Internet Explorer 5 and greater, elements that expose 

		 the blur method must have the TABINDEX attribute set.

		 ]]></description>
</method>
<method name='focus' fullname='dom.html:HTMLSelectElement/focus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Causes the element to receive the focus and executes the code specified 

		 by the onfocus event.

		 

		 This method fires the onfocus event.

		 

		 As of Microsoft Internet Explorer 5, elements that expose the focus method 

		 must have the TABINDEX attribute set.

		 

		 Elements cannot receive focus until the document finishes loading.

		 ]]></description>
</method>
<method name='remove' fullname='dom.html:HTMLSelectElement/remove' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Remove an element from the collection of OPTION elements for this 

		 SELECT. Does nothing if no element has the given index. 

		 

		 ]]></description>
<param><![CDATA[index The index of the item to remove, starting from 0.

		 ]]></param>
</method>
<method name='disabled' fullname='dom.html:HTMLSelectElement/disabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The control is unavailable in this context. See the disabled attribute 

		 definition in HTML 4.01.

		 ]]></description>
</method>
<method name='form' fullname='dom.html:HTMLSelectElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this 

		 control is not within the context of a form.

		 ]]></description>
</method>
<method name='length' fullname='dom.html:HTMLSelectElement/length/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 The number of options in this SELECT.

		 

		 ]]></description>
<throws><![CDATA[dom.core.DOMException NOT_SUPPORTED_ERR: if setting the length 

		 is not allowed by the implementation.

		 ]]></throws>
</method>
<method name='multiple' fullname='dom.html:HTMLSelectElement/multiple/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 If true, multiple OPTION elements may be selected in this SELECT. See 

		 the multiple attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLSelectElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Form control or object name when submitted with a form. See the name 

		 attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='onblur' fullname='dom.html:HTMLSelectElement/onblur/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='onchange' fullname='dom.html:HTMLSelectElement/onchange/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.

		 ]]></description>
</method>
<method name='onfocus' fullname='dom.html:HTMLSelectElement/onfocus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='options' fullname='dom.html:HTMLSelectElement/options/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLOptionsCollection'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 The collection of OPTION elements contained by this element.

		 ]]></description>
</method>
<method name='selectedIndex' fullname='dom.html:HTMLSelectElement/selectedIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 The ordinal index of the selected option, starting from 0. The value 

		 -1 is returned if no element is selected. If multiple options are 

		 selected, the index of the first selected option is returned.

		 ]]></description>
</method>
<method name='size' fullname='dom.html:HTMLSelectElement/size/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Number of visible rows. See the size attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='tabIndex' fullname='dom.html:HTMLSelectElement/tabIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Gets/sets the tab order of the current element. 

		 

		 ]]></description>
<example><![CDATA[
		 b1 = document.getElementById("button1"); 

		 b1.tabIndex = 1;

		 ]]></example>
</method>
<method name='type' fullname='dom.html:HTMLSelectElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The type of this form control. This is the string "select-multiple" when 

		 the multiple attribute is true and the string "select-one" when false.

		 ]]></description>
</method>
<method name='value' fullname='dom.html:HTMLSelectElement/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The current form control value (i.e. the value of the currently selected 

		 option), if multiple options are selected this is the value of the first 

		 selected option.

		 ]]></description>
</method>
<method name='disabled' fullname='dom.html:HTMLSelectElement/disabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='length' fullname='dom.html:HTMLSelectElement/length/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='multiple' fullname='dom.html:HTMLSelectElement/multiple/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLSelectElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onblur' fullname='dom.html:HTMLSelectElement/onblur/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onchange' fullname='dom.html:HTMLSelectElement/onchange/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onfocus' fullname='dom.html:HTMLSelectElement/onfocus/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='selectedIndex' fullname='dom.html:HTMLSelectElement/selectedIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='size' fullname='dom.html:HTMLSelectElement/size/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='tabIndex' fullname='dom.html:HTMLSelectElement/tabIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='value' fullname='dom.html:HTMLSelectElement/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLDivElement' fullname='dom.html:HTMLDivElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLDivElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Generic block container.

	 ]]></description>
</classRec>
<method name='align' fullname='dom.html:HTMLDivElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLDivElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLLegendElement' fullname='dom.html:HTMLLegendElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLLegendElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Provides a caption for a FIELDSET grouping.

	 ]]></description>
</classRec>
<method name='accessKey' fullname='dom.html:HTMLLegendElement/accessKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A single character access key to give access to the form control.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLLegendElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Text alignment relative to FIELDSET. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='form' fullname='dom.html:HTMLLegendElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.

		 ]]></description>
</method>
<method name='accessKey' fullname='dom.html:HTMLLegendElement/accessKey/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='align' fullname='dom.html:HTMLLegendElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLDirectoryElement' fullname='dom.html:HTMLDirectoryElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLDirectoryElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Directory list.

	 ]]></description>
</classRec>
<method name='compact' fullname='dom.html:HTMLDirectoryElement/compact/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='compact' fullname='dom.html:HTMLDirectoryElement/compact/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLQuoteElement' fullname='dom.html:HTMLQuoteElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLQuoteElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 For the Q and BLOCKQUOTE elements.

	 ]]></description>
</classRec>
<method name='cite' fullname='dom.html:HTMLQuoteElement/cite/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A URI designating a source document or message.

		 ]]></description>
</method>
<method name='cite' fullname='dom.html:HTMLQuoteElement/cite/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLTableColElement' fullname='dom.html:HTMLTableColElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLTableColElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Regroups the COL and COLGROUP elements.

	 ]]></description>
</classRec>
<method name='align' fullname='dom.html:HTMLTableColElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Horizontal alignment of cell data in column.

		 <p>Valid values are: 

		 <ul>

		 <li>left: Left-flush data/Left-justify text. This is the default value for table data.</li>

		 <li>center: Center data/Center-justify text. This is the default value for table headers.</li>

		 <li>right: Right-flush data/Right-justify text.</li>

		 <li>justify: Double-justify text.</li>

		 <li>char: Align text around a specific character. If a user agent doesn't support character alignment, behavior in the presence of this value is unspecified.</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='ch' fullname='dom.html:HTMLTableColElement/ch/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Alignment character for cells in a column.

		 ]]></description>
</method>
<method name='chOff' fullname='dom.html:HTMLTableColElement/chOff/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Offset of alignment character.

		 ]]></description>
</method>
<method name='span' fullname='dom.html:HTMLTableColElement/span/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Indicates the number of columns in a group or affected by a grouping.

		 ]]></description>
</method>
<method name='vAlign' fullname='dom.html:HTMLTableColElement/vAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Vertical alignment of cell data in column.

		 <p>Valid values are: 

		 <ul>

		 <li>top: Cell data is flush with the top of the cell.</li>

		 <li>middle: Cell data is centered vertically within the cell. This is the default value.</li>

		 <li>bottom: Cell data is flush with the bottom of the cell.</li>

		 <li>baseline: All cells in the same row as a cell whose valign attribute has this value should have their textual data positioned so that the first text line occurs on a baseline common to all cells in the row. This constraint does not apply to subsequent text lines in these cells.</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='width' fullname='dom.html:HTMLTableColElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Default column width.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLTableColElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='ch' fullname='dom.html:HTMLTableColElement/ch/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='chOff' fullname='dom.html:HTMLTableColElement/chOff/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='span' fullname='dom.html:HTMLTableColElement/span/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='vAlign' fullname='dom.html:HTMLTableColElement/vAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='dom.html:HTMLTableColElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLBRElement' fullname='dom.html:HTMLBRElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLBRElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Force a line break.

	 ]]></description>
</classRec>
<method name='clear' fullname='dom.html:HTMLBRElement/clear/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Control flow of text around floats. This attribute is deprecated in HTML 4.01.

		 <p>Valid values are: 

		 <ul>

		 <li>none</li>

		 <li>left</li>

		 <li>right</li>

		 <li>all</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='clear' fullname='dom.html:HTMLBRElement/clear/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLLIElement' fullname='dom.html:HTMLLIElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLLIElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 List item.

	 ]]></description>
</classRec>
<method name='type' fullname='dom.html:HTMLLIElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 List item bullet style. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='value' fullname='dom.html:HTMLLIElement/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Reset sequence number when used in OL. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLLIElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='value' fullname='dom.html:HTMLLIElement/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLBaseElement' fullname='dom.html:HTMLBaseElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLBaseElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Document base URI [IETF RFC 2396]. See the BASE element definition in HTML 4.01.

	 ]]></description>
</classRec>
<method name='href' fullname='dom.html:HTMLBaseElement/href/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The base URI [IETF RFC 2396]. See the href attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='target' fullname='dom.html:HTMLBaseElement/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The default target frame. See the target attribute definition in HTML 4.01.

		 ]]></description>
</method>
<method name='href' fullname='dom.html:HTMLBaseElement/href/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='target' fullname='dom.html:HTMLBaseElement/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLAreaElement' fullname='dom.html:HTMLAreaElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLAreaElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Client-side image map area definition.

	 ]]></description>
</classRec>
<method name='accessKey' fullname='dom.html:HTMLAreaElement/accessKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A single character access key to give access to the form control.

		 ]]></description>
</method>
<method name='alt' fullname='dom.html:HTMLAreaElement/alt/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Alternate text for user agents not rendering the normal content of this element.

		 ]]></description>
</method>
<method name='coords' fullname='dom.html:HTMLAreaElement/coords/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Comma-separated list of lengths, defining an active region geometry.

		 

		 <p>This attribute specifies the position and shape on the screen. The 

		 number and order of values depends on the shape being defined. Possible combinations:

		 

		 <table class="innertable">

		 <tbody>

		 	<tr>

		 		<th><p>Shape</p></th>

		 		<th><p>Values</p></th>

		 	</tr>

		 	<tr>

		 		<td><code>rect</code></td>

		 		<td>left-x, top-y, right-x, bottom-y.</td>

		 	</tr>

		 	<tr>

		 		<td><code>circle</code></td>

		 		<td>center-x, center-y, radius. <strong>Note:</strong> When the radius value is a percentage value, 

		 user agents should calculate the final radius value based on the associated object's width 

		 and height. The radius should be the smaller value of the two.</td>

		 	</tr>

		 	<tr>

		 		<td><code>poly</code></td>

		 		<td>x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should 

		 be the same to close the polygon. When these coordinate values are not the same, user agents 

		 should infer an additional coordinate pair to close the polygon.</td>

		 	</tr>

		 </tbody>

		 </table>

		 </p>

		 

		 <p>Coordinates are relative to the top, left corner of the object. All values 

		 are lengths. All values are separated by commas.</p>

		 
		 ]]></description>
<see><![CDATA[#shape

		 ]]></see>
</method>
<method name='href' fullname='dom.html:HTMLAreaElement/href/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The URI of the linked resource.

		 ]]></description>
</method>
<method name='noHref' fullname='dom.html:HTMLAreaElement/noHref/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Specifies that this area is inactive, i.e., has no associated action.

		 ]]></description>
</method>
<method name='onblur' fullname='dom.html:HTMLAreaElement/onblur/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='onfocus' fullname='dom.html:HTMLAreaElement/onfocus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='shape' fullname='dom.html:HTMLAreaElement/shape/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The shape of the active area. The coordinates are given by coords.

		 

		 <p>Possible values can be:

		 <ul>

		 <li>default: Specifies the entire region</li>

		 <li>rect: Define a rectangular region</li>

		 <li>circle: Define a circular region</li>

		 <li>poly: Define a polygonal region</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='tabIndex' fullname='dom.html:HTMLAreaElement/tabIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Index that represents the element's position in the tabbing order.

		 ]]></description>
</method>
<method name='target' fullname='dom.html:HTMLAreaElement/target/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Frame to render the resource in.

		 ]]></description>
</method>
<method name='accessKey' fullname='dom.html:HTMLAreaElement/accessKey/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='alt' fullname='dom.html:HTMLAreaElement/alt/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='coords' fullname='dom.html:HTMLAreaElement/coords/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='href' fullname='dom.html:HTMLAreaElement/href/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='noHref' fullname='dom.html:HTMLAreaElement/noHref/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='onblur' fullname='dom.html:HTMLAreaElement/onblur/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onfocus' fullname='dom.html:HTMLAreaElement/onfocus/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='shape' fullname='dom.html:HTMLAreaElement/shape/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='tabIndex' fullname='dom.html:HTMLAreaElement/tabIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='target' fullname='dom.html:HTMLAreaElement/target/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLHtmlElement' fullname='dom.html:HTMLHtmlElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLHtmlElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Root of an HTML document. See the HTML element definition in HTML 4.01.

	 ]]></description>
</classRec>
<method name='version' fullname='dom.html:HTMLHtmlElement/version/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Version information about the document's DTD. This attribute is deprecated 

		 in HTML 4.01.

		 ]]></description>
</method>
<method name='version' fullname='dom.html:HTMLHtmlElement/version/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLScriptElement' fullname='dom.html:HTMLScriptElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLScriptElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Script statements.

	 ]]></description>
</classRec>
<method name='charset' fullname='dom.html:HTMLScriptElement/charset/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The character encoding of the linked resource.

		 ]]></description>
</method>
<method name='defer' fullname='dom.html:HTMLScriptElement/defer/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Indicates that the user agent can defer processing of the script.

		 ]]></description>
</method>
<method name='event' fullname='dom.html:HTMLScriptElement/event/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Reserved for future use.

		 ]]></description>
</method>
<method name='htmlFor' fullname='dom.html:HTMLScriptElement/htmlFor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Reserved for future use.

		 ]]></description>
</method>
<method name='src' fullname='dom.html:HTMLScriptElement/src/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 URI designating an external script.

		 ]]></description>
</method>
<method name='text' fullname='dom.html:HTMLScriptElement/text/get' isStatic='false' isFinal='false' isOverride='true'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The script content of the element.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLScriptElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The content type of the script language.

		 ]]></description>
</method>
<method name='charset' fullname='dom.html:HTMLScriptElement/charset/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='defer' fullname='dom.html:HTMLScriptElement/defer/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='event' fullname='dom.html:HTMLScriptElement/event/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='htmlFor' fullname='dom.html:HTMLScriptElement/htmlFor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='src' fullname='dom.html:HTMLScriptElement/src/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='text' fullname='dom.html:HTMLScriptElement/text/set' isStatic='false' isFinal='false' isOverride='true'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='dom.html:HTMLScriptElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLImageElement' fullname='dom.html:HTMLImageElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLImageElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Embedded image.

	 ]]></description>
</classRec>
<method name='align' fullname='dom.html:HTMLImageElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.

		 <p>Valid values are: 

		 <ul>

		 <li>bottom</li>

		 <li>middle</li>

		 <li>top</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='alt' fullname='dom.html:HTMLImageElement/alt/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Alternate text for user agents not rendering the normal content of this element.

		 ]]></description>
</method>
<method name='border' fullname='dom.html:HTMLImageElement/border/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Width of border around image. <strong>Note:</strong> The type of this attribute was "DOMString" in DOM Level 1 HTML.

		 ]]></description>
</method>
<method name='height' fullname='dom.html:HTMLImageElement/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 The height of the image in pixels. <strong>Note:</strong> The type of this attribute was "DOMString" in DOM Level 1 HTML.

		 ]]></description>
</method>
<method name='hspace' fullname='dom.html:HTMLImageElement/hspace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Horizontal space to the left and right of this image in pixels. This attribute is deprecated in HTML 4.01. <strong>Note:</strong> The type of this attribute was "DOMString" in DOM Level 1 HTML.

		 ]]></description>
</method>
<method name='isMap' fullname='dom.html:HTMLImageElement/isMap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Use server-side image map.

		 ]]></description>
</method>
<method name='longDesc' fullname='dom.html:HTMLImageElement/longDesc/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 URI designating a long description of this image or frame.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLImageElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The name of the element (for backwards compatibility).

		 ]]></description>
</method>
<method name='src' fullname='dom.html:HTMLImageElement/src/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 URI designating the source of this image.

		 ]]></description>
</method>
<method name='useMap' fullname='dom.html:HTMLImageElement/useMap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Use client-side image map.

		 ]]></description>
</method>
<method name='vspace' fullname='dom.html:HTMLImageElement/vspace/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Vertical space above and below this image in pixels. This attribute is deprecated in HTML 4.01. <strong>Note:</strong> The type of this attribute was "DOMString" in DOM Level 1 HTML.

		 ]]></description>
</method>
<method name='width' fullname='dom.html:HTMLImageElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 The width of the image in pixels. <strong>Note:</strong> The type of this attribute was "DOMString" in DOM Level 1 HTML.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLImageElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='alt' fullname='dom.html:HTMLImageElement/alt/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='border' fullname='dom.html:HTMLImageElement/border/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='dom.html:HTMLImageElement/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='hspace' fullname='dom.html:HTMLImageElement/hspace/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='isMap' fullname='dom.html:HTMLImageElement/isMap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='longDesc' fullname='dom.html:HTMLImageElement/longDesc/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLImageElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='src' fullname='dom.html:HTMLImageElement/src/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='useMap' fullname='dom.html:HTMLImageElement/useMap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='vspace' fullname='dom.html:HTMLImageElement/vspace/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='dom.html:HTMLImageElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLTableSectionElement' fullname='dom.html:HTMLTableSectionElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLTableSectionElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The THEAD, TFOOT, and TBODY elements.

	 ]]></description>
</classRec>
<method name='deleteRow' fullname='dom.html:HTMLTableSectionElement/deleteRow' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Delete a row from this section. 

		 

		 ]]></description>
<param><![CDATA[index The index of the row to be deleted, or -1 to delete the last row. This index starts from 0 

		 and is relative only to the rows contained inside this section, not all the rows in the table.

		 ]]></param>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index is 

		 greater than the number of rows or if the index is a negative number other than -1.

		 

		 ]]></throws>
</method>
<method name='insertRow' fullname='dom.html:HTMLTableSectionElement/insertRow' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.html:HTMLElement'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Insert a row into this section. The new row is inserted immediately before the current indexth row in 

		 this section. If index is -1 or equal to the number of rows in this section, the new row is appended.  

		 

		 ]]></description>
<param><![CDATA[index The row number where to insert a new row. This index starts from 0 and is relative only 

		 to the rows contained inside this section, not all the rows in the table.

		 ]]></param>
<return><![CDATA[The newly created row.

		 ]]></return>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index is 

		 greater than the number of rows or if the index is a negative number other than -1.

		 

		 ]]></throws>
</method>
<method name='align' fullname='dom.html:HTMLTableSectionElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Horizontal alignment of data in cells. See the align attribute for HTMLTheadElement for details.

		 ]]></description>
</method>
<method name='ch' fullname='dom.html:HTMLTableSectionElement/ch/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Alignment character for cells in a column.

		 ]]></description>
</method>
<method name='chOff' fullname='dom.html:HTMLTableSectionElement/chOff/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Offset of alignment character.

		 ]]></description>
</method>
<method name='rows' fullname='dom.html:HTMLTableSectionElement/rows/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 The collection of rows in this table section.

		 ]]></description>
</method>
<method name='vAlign' fullname='dom.html:HTMLTableSectionElement/vAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Vertical alignment of data in cells. See the valign attribute for HTMLTheadElement for details.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLTableSectionElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='ch' fullname='dom.html:HTMLTableSectionElement/ch/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='chOff' fullname='dom.html:HTMLTableSectionElement/chOff/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='vAlign' fullname='dom.html:HTMLTableSectionElement/vAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLTableRowElement' fullname='dom.html:HTMLTableRowElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLTableRowElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 A row in a table.

	 ]]></description>
</classRec>
<method name='deleteCell' fullname='dom.html:HTMLTableRowElement/deleteCell' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Delete a cell from the current row. 

		 

		 ]]></description>
<param><![CDATA[index The index of the cell to delete, starting from 0. If the index is -1 the last cell in the row is deleted.

		 ]]></param>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index is 

		 greater than the number of rows or if the index is a negative number other than -1.

		 

		 ]]></throws>
</method>
<method name='insertCell' fullname='dom.html:HTMLTableRowElement/insertCell' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.html:HTMLElement'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Insert an empty TD cell into this row. If index is -1 or equal to the number of cells, 

		 the new cell is appended. 

		 

		  ]]></description>
<param><![CDATA[index The place to insert the cell, starting from 0.

		 ]]></param>
<return><![CDATA[The newly created cell.

		 ]]></return>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index is 

		 greater than the number of rows or if the index is a negative number other than -1.

		 

		 ]]></throws>
</method>
<method name='align' fullname='dom.html:HTMLTableRowElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Horizontal alignment of data within cells of this row.

		 <p>Valid values are: 

		 <ul>

		 <li>left: The table is to the left of the document.</li>

		 <li>center: The table is to the center of the document.</li>

		 <li>right: The table is to the right of the document.</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='bgColor' fullname='dom.html:HTMLTableRowElement/bgColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Background color for rows. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='cells' fullname='dom.html:HTMLTableRowElement/cells/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		  Modified in DOM Level 2

		 

		 The collection of cells in this row.

		 ]]></description>
</method>
<method name='ch' fullname='dom.html:HTMLTableRowElement/ch/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Alignment character for cells in a column.

		 ]]></description>
</method>
<method name='chOff' fullname='dom.html:HTMLTableRowElement/chOff/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Offset of alignment character.

		 ]]></description>
</method>
<method name='rowIndex' fullname='dom.html:HTMLTableRowElement/rowIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 This is in logical order and not in document order. The rowIndex does take into 

		 account sections (THEAD, TFOOT, or TBODY) within the table, placing THEAD rows 

		 first in the index, followed by TBODY rows, followed by TFOOT rows.

		 ]]></description>
</method>
<method name='sectionRowIndex' fullname='dom.html:HTMLTableRowElement/sectionRowIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 The index of this row, relative to the current section (THEAD, TFOOT, or TBODY), starting from 0.

		 ]]></description>
</method>
<method name='vAlign' fullname='dom.html:HTMLTableRowElement/vAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Vertical alignment of data within cells of this row.

		 <p>Valid values are: 

		 <ul>

		 <li>top: Cell data is flush with the top of the cell.</li>

		 <li>middle: Cell data is centered vertically within the cell. This is the default value.</li>

		 <li>bottom: Cell data is flush with the bottom of the cell.</li>

		 <li>baseline: All cells in the same row as a cell whose valign attribute has this value should have their textual data positioned so that the first text line occurs on a baseline common to all cells in the row. This constraint does not apply to subsequent text lines in these cells.</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLTableRowElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='bgColor' fullname='dom.html:HTMLTableRowElement/bgColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='ch' fullname='dom.html:HTMLTableRowElement/ch/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='chOff' fullname='dom.html:HTMLTableRowElement/chOff/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='vAlign' fullname='dom.html:HTMLTableRowElement/vAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLTableCellElement' fullname='dom.html:HTMLTableCellElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLTableCellElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The object used to represent the TH and TD elements.

	 ]]></description>
</classRec>
<method name='abbr' fullname='dom.html:HTMLTableCellElement/abbr/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Abbreviation for header cells.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLTableCellElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Horizontal alignment of data in cell.

		 <p>Valid values are: 

		 <ul>

		 <li>left: Left-flush data/Left-justify text. This is the default value for table data.</li>

		 <li>center: Center data/Center-justify text. This is the default value for table headers.</li>

		 <li>right: Right-flush data/Right-justify text.</li>

		 <li>justify: Double-justify text.</li>

		 <li>char: Align text around a specific character. If a user agent doesn't support character alignment, behavior in the presence of this value is unspecified.</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='axis' fullname='dom.html:HTMLTableCellElement/axis/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Names group of related headers.

		 ]]></description>
</method>
<method name='bgColor' fullname='dom.html:HTMLTableCellElement/bgColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Cell background color. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='cellIndex' fullname='dom.html:HTMLTableCellElement/cellIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The index of this cell in the row, starting from 0. This index is in document tree order and not display order.

		 ]]></description>
</method>
<method name='ch' fullname='dom.html:HTMLTableCellElement/ch/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Alignment character for cells in a column.

		 ]]></description>
</method>
<method name='chOff' fullname='dom.html:HTMLTableCellElement/chOff/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Offset of alignment character.

		 ]]></description>
</method>
<method name='colSpan' fullname='dom.html:HTMLTableCellElement/colSpan/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Number of columns spanned by cell.

		 ]]></description>
</method>
<method name='headers' fullname='dom.html:HTMLTableCellElement/headers/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 List of id attribute values for header cells.

		 ]]></description>
</method>
<method name='height' fullname='dom.html:HTMLTableCellElement/height/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Cell height. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='noWrap' fullname='dom.html:HTMLTableCellElement/noWrap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Suppress word wrapping. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='rowSpan' fullname='dom.html:HTMLTableCellElement/rowSpan/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Number of rows spanned by cell.

		 ]]></description>
</method>
<method name='scope' fullname='dom.html:HTMLTableCellElement/scope/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Scope covered by header cells.

		 ]]></description>
</method>
<method name='vAlign' fullname='dom.html:HTMLTableCellElement/vAlign/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
</method>
<method name='width' fullname='dom.html:HTMLTableCellElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Cell width. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='abbr' fullname='dom.html:HTMLTableCellElement/abbr/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='align' fullname='dom.html:HTMLTableCellElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='axis' fullname='dom.html:HTMLTableCellElement/axis/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='bgColor' fullname='dom.html:HTMLTableCellElement/bgColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='ch' fullname='dom.html:HTMLTableCellElement/ch/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='chOff' fullname='dom.html:HTMLTableCellElement/chOff/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='colSpan' fullname='dom.html:HTMLTableCellElement/colSpan/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='headers' fullname='dom.html:HTMLTableCellElement/headers/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='height' fullname='dom.html:HTMLTableCellElement/height/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='noWrap' fullname='dom.html:HTMLTableCellElement/noWrap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='rowSpan' fullname='dom.html:HTMLTableCellElement/rowSpan/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='scope' fullname='dom.html:HTMLTableCellElement/scope/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='vAlign' fullname='dom.html:HTMLTableCellElement/vAlign/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='dom.html:HTMLTableCellElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLFieldSetElement' fullname='dom.html:HTMLFieldSetElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLFieldSetElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Organizes form controls into logical groups.

	 ]]></description>
</classRec>
<method name='form' fullname='dom.html:HTMLFieldSetElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.

		 ]]></description>
</method>
<classRec name='HTMLDListElement' fullname='dom.html:HTMLDListElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLDListElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Definition list.

	 ]]></description>
</classRec>
<method name='compact' fullname='dom.html:HTMLDListElement/compact/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='compact' fullname='dom.html:HTMLDListElement/compact/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLInputElement' fullname='dom.html:HTMLInputElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLInputElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Form control.

	 

	 <p>Note: Depending upon the environment in which the page is being viewed, the value 

	 property may be read-only for the file upload input type. For the "password" input 

	 type, the actual value returned may be masked to prevent unauthorized use. See the 

	 INPUT element definition in [HTML 4.01].</p>

	 ]]></description>
</classRec>
<method name='blur' fullname='dom.html:HTMLInputElement/blur' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Removes keyboard focus from this element. 

		 ]]></description>
</method>
<method name='click' fullname='dom.html:HTMLInputElement/click' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Simulate a mouse-click. For INPUT elements whose type attribute has one of 

		 the following values: "button", "checkbox", "radio", "reset", or "submit". 

		 ]]></description>
</method>
<method name='focus' fullname='dom.html:HTMLInputElement/focus' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Gives keyboard focus to this element. 

		 ]]></description>
</method>
<method name='select' fullname='dom.html:HTMLInputElement/select' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Select the contents of the text area. For INPUT elements whose type 

		 attribute has one of the following values: "text", "file", or "password". 

		 ]]></description>
</method>
<method name='accept' fullname='dom.html:HTMLInputElement/accept/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A comma-separated list of content types that a server processing this form will handle correctly.

		 ]]></description>
</method>
<method name='accessKey' fullname='dom.html:HTMLInputElement/accessKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A single character access key to give access to the form control.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLInputElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Aligns this object (vertically or horizontally) with respect to its surrounding text.

		 ]]></description>
</method>
<method name='alt' fullname='dom.html:HTMLInputElement/alt/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Alternate text for user agents not rendering the normal content of this element.

		 ]]></description>
</method>
<method name='checked' fullname='dom.html:HTMLInputElement/checked/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 When the type attribute of the element has the value "radio" or "checkbox", this represents 

		 the current state of the form control, in an interactive user agent. Changes to this attribute 

		 change the state of the form control, but do not change the value of the HTML checked 

		 attribute of the INPUT element.

		 

		 <p>Note: During the handling of a click event on an input element with a type attribute that 

		 has the value "radio" or "checkbox", some implementations may change the value of this property 

		 before the event is being dispatched in the document. If the default action of the event is 

		 canceled, the value of the property may be changed back to its original value. This means that 

		 the value of this property during the handling of click events is implementation dependent.</p>

		 ]]></description>
</method>
<method name='defaultChecked' fullname='dom.html:HTMLInputElement/defaultChecked/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 When type has the value "radio" or "checkbox", this represents the HTML checked attribute 

		 of the element. The value of this attribute does not change if the state of the 

		 corresponding form control, in an interactive user agent, changes.

		 ]]></description>
</method>
<method name='defaultValue' fullname='dom.html:HTMLInputElement/defaultValue/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 When the type attribute of the element has the value "text", "file" or "password", this 

		 represents the HTML value attribute of the element. The value of this attribute does not 

		 change if the contents of the corresponding form control, in an interactive user 

		 agent, changes.

		 ]]></description>
</method>
<method name='disabled' fullname='dom.html:HTMLInputElement/disabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The control is unavailable in this context.

		 ]]></description>
</method>
<method name='form' fullname='dom.html:HTMLInputElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this control is not 

		 within the context of a form.

		 ]]></description>
</method>
<method name='maxLength' fullname='dom.html:HTMLInputElement/maxLength/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Maximum number of characters for text fields, when type has the value "text" or "password".

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLInputElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Form control or object name when submitted with a form

		 ]]></description>
</method>
<method name='onblur' fullname='dom.html:HTMLInputElement/onblur/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='onchange' fullname='dom.html:HTMLInputElement/onchange/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.

		 ]]></description>
</method>
<method name='onfocus' fullname='dom.html:HTMLInputElement/onfocus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='onselect' fullname='dom.html:HTMLInputElement/onselect/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onselect event occurs when a user selects some text in a text field.

		 ]]></description>
</method>
<method name='readOnly' fullname='dom.html:HTMLInputElement/readOnly/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 This control is read-only. Relevant only when type has the value "text" or "password".

		 ]]></description>
</method>
<method name='size' fullname='dom.html:HTMLInputElement/size/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Size information. The precise meaning is specific to each type of field.

		 ]]></description>
</method>
<method name='src' fullname='dom.html:HTMLInputElement/src/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 When the type attribute has the value "image", this attribute specifies the 

		 location of the image to be used to decorate the graphical submit button.

		 ]]></description>
</method>
<method name='tabIndex' fullname='dom.html:HTMLInputElement/tabIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Index that represents the element's position in the tabbing order.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLInputElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The type of control created (all lower case).

		 ]]></description>
</method>
<method name='useMap' fullname='dom.html:HTMLInputElement/useMap/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Use client-side image map.

		 ]]></description>
</method>
<method name='value' fullname='dom.html:HTMLInputElement/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 When the type attribute of the element has the value "text", "file" or 

		 "password", this represents the current contents of the corresponding form 

		 control, in an interactive user agent. Changing this attribute changes the 

		 contents of the form control, but does not change the value of the HTML 

		 value attribute of the element. When the type attribute of the element has 

		 the value "button", "hidden", "submit", "reset", "image", "checkbox" or 

		 "radio", this represents the HTML value attribute of the element.

		 ]]></description>
</method>
<method name='accept' fullname='dom.html:HTMLInputElement/accept/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='accessKey' fullname='dom.html:HTMLInputElement/accessKey/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='align' fullname='dom.html:HTMLInputElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='alt' fullname='dom.html:HTMLInputElement/alt/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='checked' fullname='dom.html:HTMLInputElement/checked/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='defaultChecked' fullname='dom.html:HTMLInputElement/defaultChecked/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='defaultValue' fullname='dom.html:HTMLInputElement/defaultValue/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='disabled' fullname='dom.html:HTMLInputElement/disabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='maxLength' fullname='dom.html:HTMLInputElement/maxLength/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLInputElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onblur' fullname='dom.html:HTMLInputElement/onblur/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onchange' fullname='dom.html:HTMLInputElement/onchange/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onfocus' fullname='dom.html:HTMLInputElement/onfocus/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onselect' fullname='dom.html:HTMLInputElement/onselect/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='readOnly' fullname='dom.html:HTMLInputElement/readOnly/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='size' fullname='dom.html:HTMLInputElement/size/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='src' fullname='dom.html:HTMLInputElement/src/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='tabIndex' fullname='dom.html:HTMLInputElement/tabIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='type' fullname='dom.html:HTMLInputElement/type/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='useMap' fullname='dom.html:HTMLInputElement/useMap/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='value' fullname='dom.html:HTMLInputElement/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLTableCaptionElement' fullname='dom.html:HTMLTableCaptionElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLTableCaptionElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Table caption.

	 ]]></description>
</classRec>
<method name='align' fullname='dom.html:HTMLTableCaptionElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Caption alignment with respect to the table.

		 

		 <p>Valid values are: 

		 <ul>

		 <li>top: The caption is at the top of the table. This is the default value.</li>

		 <li>bottom: The caption is at the bottom of the table.</li>

		 <li>left: The caption is at the left of the table.</li>

		 <li>right: The caption is at the right of the table.</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLTableCaptionElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLBaseFontElement' fullname='dom.html:HTMLBaseFontElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLBaseFontElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Base font. This element is deprecated in HTML 4.01.

	 ]]></description>
</classRec>
<method name='color' fullname='dom.html:HTMLBaseFontElement/color/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Font color. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='face' fullname='dom.html:HTMLBaseFontElement/face/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Font face identifier. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='size' fullname='dom.html:HTMLBaseFontElement/size/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Computed font size. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='color' fullname='dom.html:HTMLBaseFontElement/color/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='face' fullname='dom.html:HTMLBaseFontElement/face/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='size' fullname='dom.html:HTMLBaseFontElement/size/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLHRElement' fullname='dom.html:HTMLHRElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLHRElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Create a horizontal rule.

	 ]]></description>
</classRec>
<method name='align' fullname='dom.html:HTMLHRElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Align the rule on the page. This attribute is deprecated in HTML 4.01.

		 <p>Valid values are: 

		 <ul>

		 <li>left</li>

		 <li>center</li>

		 <li>right</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='noShade' fullname='dom.html:HTMLHRElement/noShade/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 Indicates to the user agent that there should be no shading in the rendering of this element. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='size' fullname='dom.html:HTMLHRElement/size/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The height of the rule. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='width' fullname='dom.html:HTMLHRElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The width of the rule. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLHRElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='noShade' fullname='dom.html:HTMLHRElement/noShade/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='size' fullname='dom.html:HTMLHRElement/size/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='dom.html:HTMLHRElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLMapElement' fullname='dom.html:HTMLMapElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLMapElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Client-side image map.

	 ]]></description>
</classRec>
<method name='areas' fullname='dom.html:HTMLMapElement/areas/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 The list of areas defined for the image map.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLMapElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Names the map (for use with usemap).

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLMapElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLButtonElement' fullname='dom.html:HTMLButtonElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLButtonElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Push button.

	 ]]></description>
</classRec>
<method name='accessKey' fullname='dom.html:HTMLButtonElement/accessKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A single character access key to give access to the form control.

		 ]]></description>
</method>
<method name='disabled' fullname='dom.html:HTMLButtonElement/disabled/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Boolean'>
<description><![CDATA[

		 The control is unavailable in this context.

		 ]]></description>
</method>
<method name='form' fullname='dom.html:HTMLButtonElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.

		 ]]></description>
</method>
<method name='name' fullname='dom.html:HTMLButtonElement/name/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Form control or object name when submitted with a form.

		 ]]></description>
</method>
<method name='onblur' fullname='dom.html:HTMLButtonElement/onblur/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='onfocus' fullname='dom.html:HTMLButtonElement/onfocus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='tabIndex' fullname='dom.html:HTMLButtonElement/tabIndex/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Number'>
<description><![CDATA[

		 Index that represents the element's position in the tabbing order.

		 ]]></description>
</method>
<method name='type' fullname='dom.html:HTMLButtonElement/type/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The type of button (all lower case).

		 ]]></description>
</method>
<method name='value' fullname='dom.html:HTMLButtonElement/value/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The current form control value.

		 ]]></description>
</method>
<method name='accessKey' fullname='dom.html:HTMLButtonElement/accessKey/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='disabled' fullname='dom.html:HTMLButtonElement/disabled/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Boolean' param_defaults='undefined' result_type='void'>
</method>
<method name='name' fullname='dom.html:HTMLButtonElement/name/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onblur' fullname='dom.html:HTMLButtonElement/onblur/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onfocus' fullname='dom.html:HTMLButtonElement/onfocus/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='tabIndex' fullname='dom.html:HTMLButtonElement/tabIndex/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Number' param_defaults='undefined' result_type='void'>
</method>
<method name='value' fullname='dom.html:HTMLButtonElement/value/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLTableElement' fullname='dom.html:HTMLTableElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLTableElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 The createand deletemethods on the table allow authors to construct 

	 and modify tables. [HTML 4.01] specifies that only one of each of the 

	 CAPTION, THEAD, and TFOOT elements may exist in a table. Therefore, if 

	 one exists, and the createTHead() or createTFoot() method is called, 

	 the method returns the existing THead or TFoot element.

	 ]]></description>
</classRec>
<method name='createCaption' fullname='dom.html:HTMLTableElement/createCaption' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLElement'>
<description><![CDATA[

		 Create a new table caption object or return an existing one.

		 

		 ]]></description>
<return><![CDATA[A CAPTION element.

		 ]]></return>
</method>
<method name='createTFoot' fullname='dom.html:HTMLTableElement/createTFoot' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLElement'>
<description><![CDATA[

		 Create a table footer row or return an existing one. 

		 

		 ]]></description>
<return><![CDATA[A footer element (TFOOT).

		 ]]></return>
</method>
<method name='createTHead' fullname='dom.html:HTMLTableElement/createTHead' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLElement'>
<description><![CDATA[

		 Create a table header row or return an existing one. 

		 

		 ]]></description>
<return><![CDATA[A new table header element (THEAD).

		 ]]></return>
</method>
<method name='deleteCaption' fullname='dom.html:HTMLTableElement/deleteCaption' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Delete the table caption, if one exists. 

		 ]]></description>
</method>
<method name='deleteRow' fullname='dom.html:HTMLTableElement/deleteRow' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='void'>
<description><![CDATA[

		 Delete a table row. 

		 

		 ]]></description>
<param><![CDATA[index The index of the row to be deleted. This index starts from 

		 0 and is relative to the logical order (not document order) of all the 

		 rows contained inside the table. If the index is -1 the last row in the 

		 table is deleted.

		 ]]></param>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index is greater 

		 than or equal to the number of rows or if the index is a negative number other than -1.

		 

		 ]]></throws>
</method>
<method name='deleteTFoot' fullname='dom.html:HTMLTableElement/deleteTFoot' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Delete the footer from the table, if one exists. 

		 ]]></description>
</method>
<method name='deleteTHead' fullname='dom.html:HTMLTableElement/deleteTHead' isStatic='false' isFinal='false' isOverride='false'  result_type='void'>
<description><![CDATA[

		 Delete the header from the table, if one exists. 

		 ]]></description>
</method>
<method name='insertRow' fullname='dom.html:HTMLTableElement/insertRow' isStatic='false' isFinal='false' isOverride='false'  param_names='index' param_types='Number' param_defaults='undefined' result_type='dom.html:HTMLElement'>
<description><![CDATA[

		 Insert a new empty row in the table. The new row is inserted immediately before 

		 and in the same section as the current indexth row in the table. If index is -1 

		 or equal to the number of rows, the new row is appended. In addition, when the 

		 table is empty the row is inserted into a TBODY which is created and inserted 

		 into the table. 

		 

		 <p><strong>Note:</strong> A table row cannot be empty according to [HTML 4.01].</p>

		 

		 ]]></description>
<param><![CDATA[index The row number where to insert a new row. This index starts from 0 and 

		 is relative to the logical order (not document order) of all the rows contained inside the table.

		 ]]></param>
<return><![CDATA[The newly created row.

		 ]]></return>
<throws><![CDATA[dom.core.DOMException INDEX_SIZE_ERR: Raised if the specified index is 

		 greater than the number of rows or if the index is a negative number other than -1.

		 

		 ]]></throws>
</method>
<method name='align' fullname='dom.html:HTMLTableElement/align/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Specifies the table's position with respect to the rest of the document. 

		 This attribute is deprecated in HTML 4.01.

		 <p>Valid values are: 

		 <ul>

		 <li>left: The table is to the left of the document.</li>

		 <li>center: The table is to the center of the document.</li>

		 <li>right: The table is to the right of the document.</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='bgColor' fullname='dom.html:HTMLTableElement/bgColor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Cell background color. This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='border' fullname='dom.html:HTMLTableElement/border/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The width of the border around the table.

		 ]]></description>
</method>
<method name='caption' fullname='dom.html:HTMLTableElement/caption/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLTableCaptionElement'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Returns the table's CAPTION, or void if none exists.

		 

		 ]]></description>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: if the element is not a CAPTION. 

		 ]]></throws>
</method>
<method name='cellPadding' fullname='dom.html:HTMLTableElement/cellPadding/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Specifies the horizontal and vertical space between cell content and cell borders.

		 ]]></description>
</method>
<method name='cellSpacing' fullname='dom.html:HTMLTableElement/cellSpacing/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Specifies the horizontal and vertical separation between cells.

		 ]]></description>
</method>
<method name='frame' fullname='dom.html:HTMLTableElement/frame/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Specifies which external table borders to render.

		 ]]></description>
</method>
<method name='rows' fullname='dom.html:HTMLTableElement/rows/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Returns a collection of all the rows in the table, including all in THEAD, TFOOT, all TBODY elements.

		 ]]></description>
</method>
<method name='rules' fullname='dom.html:HTMLTableElement/rules/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Specifies which internal table borders to render.

		 <p>Valid values are: 

		 <ul>

		 <li>none: No rules. This is the default value.</li>

		 <li>groups: Rules will appear between row groups (see THEAD, TFOOT, and TBODY) and column groups (see COLGROUP and COL) only.</li>

		 <li>rows: Rules will appear between rows only.</li>

		 <li>cols: Rules will appear between columns only.</li>

		 <li>all: Rules will appear between all rows and columns.</li>

		 </ul></p>

		 ]]></description>
</method>
<method name='summary' fullname='dom.html:HTMLTableElement/summary/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Description about the purpose or structure of a table.

		 ]]></description>
</method>
<method name='tBodies' fullname='dom.html:HTMLTableElement/tBodies/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html.objects:HTMLCollection'>
<description><![CDATA[

		 Returns a collection of the table bodies (including implicit ones).

		 ]]></description>
</method>
<method name='tFoot' fullname='dom.html:HTMLTableElement/tFoot/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLTableSectionElement'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Returns the table's TFOOT, or null if none exists.

		 

		 ]]></description>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: if the element is not a TFOOT. 

		 ]]></throws>
</method>
<method name='tHead' fullname='dom.html:HTMLTableElement/tHead/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLTableSectionElement'>
<description><![CDATA[

		 Modified in DOM Level 2

		 

		 Returns the table's THEAD, or null if none exists.

		 

		 ]]></description>
<throws><![CDATA[dom.core.DOMException HIERARCHY_REQUEST_ERR: if the element is not a THEAD. 

		 ]]></throws>
</method>
<method name='width' fullname='dom.html:HTMLTableElement/width/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 Specifies the desired table width.

		 ]]></description>
</method>
<method name='align' fullname='dom.html:HTMLTableElement/align/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='bgColor' fullname='dom.html:HTMLTableElement/bgColor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='border' fullname='dom.html:HTMLTableElement/border/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='caption' fullname='dom.html:HTMLTableElement/caption/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.html:HTMLTableCaptionElement' param_defaults='undefined' result_type='void'>
</method>
<method name='cellPadding' fullname='dom.html:HTMLTableElement/cellPadding/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='cellSpacing' fullname='dom.html:HTMLTableElement/cellSpacing/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='frame' fullname='dom.html:HTMLTableElement/frame/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='rules' fullname='dom.html:HTMLTableElement/rules/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='summary' fullname='dom.html:HTMLTableElement/summary/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='tBodies' fullname='dom.html:HTMLTableElement/tBodies/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.html.objects:HTMLCollection' param_defaults='undefined' result_type='void'>
</method>
<method name='tFoot' fullname='dom.html:HTMLTableElement/tFoot/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.html:HTMLTableSectionElement' param_defaults='undefined' result_type='void'>
</method>
<method name='tHead' fullname='dom.html:HTMLTableElement/tHead/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.html:HTMLTableSectionElement' param_defaults='undefined' result_type='void'>
</method>
<method name='width' fullname='dom.html:HTMLTableElement/width/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLIsIndexElement' fullname='dom.html:HTMLIsIndexElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLIsIndexElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 This element is used for single-line text input. See the ISINDEX element 

	 definition in HTML 4.01. This element is deprecated in HTML 4.01.

	 ]]></description>
</classRec>
<method name='form' fullname='dom.html:HTMLIsIndexElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this 

		 control is not within the context of a form.

		 ]]></description>
</method>
<method name='prompt' fullname='dom.html:HTMLIsIndexElement/prompt/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The prompt message. See the prompt attribute definition in HTML 4.01. 

		 This attribute is deprecated in HTML 4.01.

		 ]]></description>
</method>
<method name='prompt' fullname='dom.html:HTMLIsIndexElement/prompt/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLLabelElement' fullname='dom.html:HTMLLabelElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLLabelElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Form field label text.

	 ]]></description>
</classRec>
<method name='accessKey' fullname='dom.html:HTMLLabelElement/accessKey/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 A single character access key to give access to the form control.

		 ]]></description>
</method>
<method name='form' fullname='dom.html:HTMLLabelElement/form/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.html:HTMLFormElement'>
<description><![CDATA[

		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.

		 ]]></description>
</method>
<method name='htmlFor' fullname='dom.html:HTMLLabelElement/htmlFor/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 This attribute links this label with another form control by id attribute. 

		 ]]></description>
</method>
<method name='onblur' fullname='dom.html:HTMLLabelElement/onblur/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='onfocus' fullname='dom.html:HTMLLabelElement/onfocus/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.

		 ]]></description>
</method>
<method name='accessKey' fullname='dom.html:HTMLLabelElement/accessKey/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='htmlFor' fullname='dom.html:HTMLLabelElement/htmlFor/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onblur' fullname='dom.html:HTMLLabelElement/onblur/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onfocus' fullname='dom.html:HTMLLabelElement/onfocus/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<classRec name='HTMLFrameSetElement' fullname='dom.html:HTMLFrameSetElement' sourcefile='C:\Documents and Settings\gmariani\My Documents\My Dropbox\Private\Javascript Docs\src\dom\html\HTMLFrameSetElement.as' namespace='dom.html' access='public' baseclass='dom.html:HTMLElement' isFinal='false' isDynamic='false' >
<description><![CDATA[

	 Create a grid of frames.

	 ]]></description>
</classRec>
<method name='cols' fullname='dom.html:HTMLFrameSetElement/cols/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The number of columns of frames in the frameset.

		 

		 <p>It is a comma-separated list of pixels, percentages, and 

		 relative lengths. The default value is 100%, meaning one column.</p>

		 ]]></description>
</method>
<method name='onload' fullname='dom.html:HTMLFrameSetElement/onload/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.

		 ]]></description>
</method>
<method name='onunload' fullname='dom.html:HTMLFrameSetElement/onunload/get' isStatic='false' isFinal='false' isOverride='false'  result_type='Function'>
<description><![CDATA[

		 The onunload event occurs when the user agent removes a document from a window or frame.

		 ]]></description>
</method>
<method name='rows' fullname='dom.html:HTMLFrameSetElement/rows/get' isStatic='false' isFinal='false' isOverride='false'  result_type='dom.core.types:DOMString'>
<description><![CDATA[

		 The number of rows of frames in the frameset.

		 

		 <p>It is a comma-separated list of pixels, percentages, and 

		 relative lengths. The default value is 100%, meaning one column.</p>

		 ]]></description>
</method>
<method name='cols' fullname='dom.html:HTMLFrameSetElement/cols/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
<method name='onload' fullname='dom.html:HTMLFrameSetElement/onload/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='onunload' fullname='dom.html:HTMLFrameSetElement/onunload/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='Function' param_defaults='undefined' result_type='void'>
</method>
<method name='rows' fullname='dom.html:HTMLFrameSetElement/rows/set' isStatic='false' isFinal='false' isOverride='false'  param_names='value' param_types='dom.core.types:DOMString' param_defaults='undefined' result_type='void'>
</method>
</asdoc>
