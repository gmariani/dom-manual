<?xml version="1.0" encoding="UTF-8"?><allClasses><apiPackage id="cssom.view"><apiName>cssom.view</apiName><apiClassifier id="cssom.view:Screen"><apiName>Screen</apiName><shortdesc>
	 Has properties that hold information about the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has properties that hold information about the screen.
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="cssom.view:Screen:cssom.view:Screen:availHeight:get"><apiName>availHeight</apiName><shortdesc>
		 Returns the amount of vertical space available to the window on the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the amount of vertical space available to the window on the screen. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (window.screen.availHeight != window.screen.height) {
		 	// something's in the way!
		 	// use available to size window
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533487(VS.85).aspx"><linktext>MSDN: availHeight Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.availHeight"><linktext>MDC - Window: availHeight Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: availHeight Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:availWidth:get"><apiName>availWidth</apiName><shortdesc>
		 Returns the amount of horizontal space in pixels available to the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the amount of horizontal space in pixels available to the window. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (window.screen.availHeight != window.screen.height) {
		 	// something's in the way!
		 	// use available to size window
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533488(VS.85).aspx"><linktext>MSDN: availWidth Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.availWidth"><linktext>MDC - Window: availWidth Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: availWidth Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:colorDepth:get"><apiName>colorDepth</apiName><shortdesc>
		 Returns the lowest number of bits from the color components of the output device.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the lowest number of bits from the color components of the output device.
		 
		 </apiDesc><example>
		 Check the color depth of the screen
		 <codeblock>
		 if ( window.screen.colorDepth &lt; 8) {
		 	// use low-color version of page
		 } else { 
		 	// use regular, colorful page
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533578(VS.85).aspx"><linktext>MSDN: colorDepth Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.colorDepth"><linktext>MDC - Window: colorDepth Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: colorDepth Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:height:get"><apiName>height</apiName><shortdesc>
		 Returns the height of the screen in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the height of the screen in pixels. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (window.screen.availHeight != window.screen.height) {
		 	// something is occupying some screen real estate!
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533779(VS.85).aspx"><linktext>MSDN: height Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.height"><linktext>MDC - Window: height Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: height Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:pixelDepth:get"><apiName>pixelDepth</apiName><shortdesc>
		 Returns the lowest number of bits from the color components of the output device.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the lowest number of bits from the color components of the output device.
		 
		 </apiDesc><example>
		 <codeblock>
		 // if there is not adequate bit depth choose a simpler color
		 if ( window.screen.pixelDepth &gt; 8 ) {
		 	document.style.color = "#FAEBD7";
		 } else {
		 	document.style.color = "#FFFFFF";
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screen.pixelDepth"><linktext>MDC - Window: pixelDepth Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: pixelDepth Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:width:get"><apiName>width</apiName><shortdesc>
		 Returns the width of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the width of the screen. 
		 
		 </apiDesc><example>
		 Crude way to check that the screen is at 1024x768
		 <codeblock>
		 if (window.screen.width &gt; 1000) {
		 	// resolution is below 10 x 7
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535144(VS.85).aspx"><linktext>MSDN: width Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.width"><linktext>MDC - Window: width Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: width Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:DocumentView"><apiName>DocumentView</apiName><shortdesc>
	 Has a method that gives position information about an Element node relative to the Document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has a method that gives position information about an Element node relative to the Document.
	 
	 <p>DocumentView contains many properties and a few methods that were previously not part of any specification. They originated as part of 
	 MSIE's DHTML object model. They are now all part of the CSSOM Views specification which should be implemented on any browser supporting
	 DOM 3 Core.</p>
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 <p><b>Note:</b> This conflicts with an interface in DOM 2 Views. Maybe this specification
	 combined with HTML 5 (for AbstractView) can obsolete that one as it is completely useless in practice.</p> 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="cssom.view:WindowView"><apiName>WindowView</apiName><shortdesc>
	 Has properties that hold the dimensions of the entire browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has properties that hold the dimensions of the entire browser window.
	 
	 <p>Some browser compatibility information was obtained via Quirksmode.</p>
	 
	 <p>Some browser compatibility information was obtained via Aptana.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="cssom.view:WindowView:cssom.view:WindowView:innerHeight:get"><apiName>innerHeight</apiName><shortdesc>
		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.
		 
		 <p><b>Note:</b> The innerHeight property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>
		 
		 </apiDesc><example>
		 Assuming a frameset
		 <codeblock>
		 var intFrameHeight = window.innerHeight; // or
		 var intFrameHeight = self.innerHeight; // will return the height of the frame viewport within the frameset
		 var intFramesetHeight = parent.innerHeight; // will return the height of the viewport of the closest frameset
		 var intOuterFramesetHeight = top.innerHeight; // will return the height of the viewport of the outermost frameset</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.innerHeight"><linktext>MDC - Window: innerHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: innerHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/outerWidth"><linktext>outerWidth</linktext></link><link href="cssom.view.xml#WindowView/innerWidth"><linktext>innerWidth</linktext></link><link href="cssom.view.xml#WindowView/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:innerWidth:get"><apiName>innerWidth</apiName><shortdesc>
		 Width of the browser window viewport including, if rendered, the vertical scrollbar.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Width of the browser window viewport including, if rendered, the vertical scrollbar.
		 
		 <p><b>Note:</b> The innerWidth property does not include the sidebar. So when the sidebar is expanded, the innerWidth property value diminishes.</p>
		 
		 <p><b>Note:</b> The innerWidth property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>
		 
		 </apiDesc><example>
		 Assuming a frameset
		 <codeblock>
		 var intFrameWidth = window.innerWidth; // or
		 var intFrameWidth = self.innerWidth; // will return the width of the frame viewport within the frameset
		 var intFramesetWidth = parent.innerWidth; // will return the width of the viewport of the closest frameset
		 var intOuterFramesetWidth = top.innerWidth; // will return the width of the viewport of the outermost frameset</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.innerWidth"><linktext>MDC - Window: innerWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: innerWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/outerWidth"><linktext>outerWidth</linktext></link><link href="cssom.view.xml#WindowView/innerHeight"><linktext>innerHeight</linktext></link><link href="cssom.view.xml#WindowView/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:media:get"><apiName>media</apiName><shortdesc>
		 Returns an Media object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>cssom.view:Media</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an Media object.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: media Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:outerHeight:get"><apiName>outerHeight</apiName><shortdesc>
		 Gets the height of the outside of the browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets the height of the outside of the browser window. window.outerHeight represents the height of 
		 the whole browser window including toolbars and window chrome.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.outerHeight"><linktext>MDC - Window: outerHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: outerHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/innerWidth"><linktext>innerWidth</linktext></link><link href="cssom.view.xml#WindowView/innerHeight"><linktext>innerHeight</linktext></link><link href="cssom.view.xml#WindowView/outerWidth"><linktext>outerWidth</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:outerWidth:get"><apiName>outerWidth</apiName><shortdesc>
		 Gets the width of the outside of the browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets the width of the outside of the browser window. window.outerWidth represents the width of 
		 the whole browser window including sidebar (if expanded), window chrome and window [re-]sizing borders/handles.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.outerWidth"><linktext>MDC - Window: outerWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: outerWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/innerWidth"><linktext>innerWidth</linktext></link><link href="cssom.view.xml#WindowView/innerHeight"><linktext>innerHeight</linktext></link><link href="cssom.view.xml#WindowView/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:pageXOffset:get"><apiName>pageXOffset</apiName><shortdesc>
		 Returns the number of pixels that the document has already been scrolled horizontally.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of pixels that the document has already been scrolled horizontally. 
		 
		 <p><b>Note:</b> <codeph>window.pageXOffset == window.scrollX; // always true</codeph></p>
		 
		  </apiDesc><example>
		 <codeblock>
		 // make sure and go over to the second horizontal page
		 if (window.scrollX) {
		 	scroll(0,0);
		 }
		 scrollBy(400, 0);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.pageXOffset"><linktext>MDC - Window: pageXOffset Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: pageXOffset Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/pageYOffset"><linktext>pageYOffset</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:pageYOffset:get"><apiName>pageYOffset</apiName><shortdesc>
		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport. 
		 
		 <p><b>Note:</b> <codeph>window.pageYOffset == window.scrollY; // always true</codeph></p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // make sure and go over to the second horizontal page
		 if (window.scrollY) {
		 	scroll(0,0);
		 }
		 scrollByPages(1);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.pageYOffset"><linktext>MDC - Window: pageYOffset Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: pageYOffset Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="" invalidHref="cssom.view.pageXOffset.xml"><linktext>pageXOffset</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:screen:get"><apiName>screen</apiName><shortdesc>
		 Returns a reference to the screen object associated with the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>cssom.view:Screen</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a reference to the screen object associated with the window. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (screen.pixelDepth &lt; 8) {
		 	// use low-color version of page
		 } else { 
		 	// use regular, colorful page
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screen"><linktext>MDC - Window: screen Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screen Property</linktext></link><link href="http://www.aptana.com/reference/html/api/Window.html#Window.screen"><linktext>Aptana: Window.screen Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:screenX:get"><apiName>screenX</apiName><shortdesc>
		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen. 
		 
		 <p><b>Note (Opera):</b> Opera calculates the coordinates of the specific tab window relative to 
		 the encompassing browser window. This is understandable given its way of working with 
		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 
		 browser window relative to the screen.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screenX"><linktext>MDC - Window: screenX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screenX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:screenY:get"><apiName>screenY</apiName><shortdesc>
		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen. 
		 
		 <p><b>Note (Opera):</b> Opera calculates the coordinates of the specific tab window relative to 
		 the encompassing browser window. This is understandable given its way of working with 
		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 
		 browser window relative to the screen.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screenY"><linktext>MDC - Window: screenY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screenY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/screenX"><linktext>screenX</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:Media"><apiName>Media</apiName><shortdesc>
	 Should be an object returned by the Window.media property, although I haven't found any
	 browsers that support this.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Should be an object returned by the Window.media property, although I haven't found any
	 browsers that support this.
	 
	 </apiDesc><example>
	 <codeblock>var m = window.media;</codeblock>
	 
	 </example></apiClassifierDetail><apiValue id="cssom.view:Media:cssom.view:Media:type:get"><apiName>type</apiName><shortdesc>
		 Returns the string that represents the canvas' current rendering mode in canonical form.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the string that represents the canvas' current rendering mode in canonical form.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#media-type"><linktext>W3C CSSOM Views Specification: Media.type</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:ElementView"><apiName>ElementView</apiName><shortdesc>
	 Has properties and methods that give information about the dimensions of an Element node (HTML tag).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has properties and methods that give information about the dimensions of an Element node (HTML tag).
	 
	 <p>ElementView contains many properties and a few methods that were previously not part of any specification. They originated as part of 
	 MSIE's DHTML object model. They are now all part of the CSSOM Views specification which should be implemented on any browser supporting
	 DOM 3 Core.</p>
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="cssom.view:ElementView:cssom.view:ElementView:clientHeight:get"><apiName>clientHeight</apiName><shortdesc>
		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.
		 
		 <p>clientHeight can be calculated as CSS height + CSS padding - height of horizontal scrollbar (if present).</p>
		 
		 <p><b>Note:</b> offsetLeft returns the position the upper left edge of the element; not necessarily 
		 the 'real' left edge of the element. This is important for span elements in flowed text that wraps from one 
		 line to the next. The span may start in the middle of the page and wrap around to the beginning of the next 
		 line. The offsetLeft will refer to the left edge of the start of the span, not the left edge of text at the 
		 start of the second line. Therefore, a box with the left, top, width and height of offsetLeft, offsetTop, 
		 offsetWidth and offsetHeight will not be a bounding box for a span with wrapped text.</p>
		 
		 </apiDesc><example>
		 This example shows how the clientHeight property and the offsetHeight property measure document height differently. 
		 The height of the div is set to 100, and this is the value retrieved by the offsetHeight property, not the clientHeight property. 
		 
		 <codeblock>
		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientHeight)"&gt;client height&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetHeight)"&gt;offset heightY&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533563(VS.85).aspx"><linktext>MSDN: clientHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientHeight"><linktext>MDC - Element: clientHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:clientLeft:get"><apiName>clientLeft</apiName><shortdesc>
		 The width of the left border of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The width of the left border of an element in pixels. 
		 
		 <p>It includes the width of the vertical scrollbar if the text direction of the element is right–to–left and 
		 if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left 
		 margin or the left padding.</p>
		 
		 <p><b>Note:</b> The difference between the offsetLeft and clientLeft properties is the border of the object.</p>
		 
		 <p><b>Note:</b> When layout.scrollbar.side property is set to 1 or to 3 and when the text-direction is set to RTL, 
		 then the vertical scrollbar is positioned on the left and this impacts the way clientLeft is computed.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533564(VS.85).aspx"><linktext>MSDN: clientLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientLeft"><linktext>MDC - Element: clientLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:clientTop:get"><apiName>clientTop</apiName><shortdesc>
		 The width of the top border of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The width of the top border of an element in pixels. It does not include the top margin or padding.
		 
		 <p><b>Note:</b> The difference between the offsetTop and the clientTop properties is the border area of the object.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533565(VS.85).aspx"><linktext>MSDN: clientTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientTop"><linktext>MDC - Element: clientTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:clientWidth:get"><apiName>clientWidth</apiName><shortdesc>
		 Returns the inner width of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the inner width of an element in pixels. It includes padding but not the vertical scrollbar (if present, if rendered), border or margin.
		 
		 </apiDesc><example>
		 This example shows how the clientWidth property and the offsetWidth property measure document width differently. The width of the div 
		 is set to 200, and this is the value retrieved by the offsetWidth property, not the clientWidth property. 
		 
		 <codeblock>
		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset widthY&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533566(VS.85).aspx"><linktext>MSDN: clientWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientWidth"><linktext>MDC - Element: clientWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetHeight:get"><apiName>offsetHeight</apiName><shortdesc>
		 Height of an element relative to the element's offsetParent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Height of an element relative to the element's offsetParent.
		 
		 <p>Typically, an element's offsetHeight is a measurement which includes 
		 the element borders, the element vertical padding, the element 
		 horizontal scrollbar (if present, if rendered) and the element CSS height.</p>
		 
		 <p>For the document body object, the measurement includes total linear 
		 content height instead of the element CSS height. Floated elements 
		 extending below other linear content are ignored.</p>
		 
		 <p><b>Note (IE6):</b> To comply with the <xref class="external" href="http://www.w3.org/TR/REC-CSS1/" rel="external nofollow">Cascading Style Sheets, Level 1 (CSS1)</xref> World Wide 
		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 
		 height of objects differently when you use the !DOCTYPE declaration in your 
		 document to switch on standards-compliant mode. This difference may affect 
		 the value of the offsetWidth propety. When standards-compliant mode is 
		 switched on, the width property specifies the distance between the left and 
		 right edges of the bounding box that surrounds the object's content. When 
		 standards-compliant mode is not switched on, and with earlier versions of 
		 Windows Internet Explorer, the width property also includes the border and 
		 padding belts that surround the object's bounding box.</p>
		 
		 </apiDesc><example>
		 This example adjusts the size of a clock's readout to fit the current width and height of the document body.
		 
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;A Simple Clock&lt;/title&gt;
		 &lt;script type="text/javascript"&gt;
		 	function startClock() {
		 		window.setInterval("Clock_Tick()", 1000);
		 		Clock_Tick();
		 	}
		 
		 	var iRatio = 4;
		 	function Clock_Tick() {
		 		var dToday = Date();
		 		var sTime = dToday.substring(11,19);
		 		var iDocHeight = document.body.offsetHeight;
		 		var iDocWidth = document.body.offsetWidth;
		 
		 		if ((iDocHeightRatio)&gt;iDocWidth)
		 		iDocHeight = iDocWidth / iRatio;
		 		document.all.MyTime.innerText = sTime;
		 		document.all.MyTime.style.fontSize = iDocHeight;
		 	}
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onload="startClock()"&gt;
		 &lt;p id="MyTime"&gt;&amp;nbsp;&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534199(VS.85).aspx"><linktext>MSDN: offsetHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetHeight"><linktext>MDC - Element: offsetHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetLeft:get"><apiName>offsetLeft</apiName><shortdesc>
		 Returns the number of pixels that the upper left corner of the current 
		 element is offset to the left within the offsetParent node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of pixels that the upper left corner of the current 
		 element is offset to the left within the offsetParent node.
		 
		 <p><b>Note:</b> offsetLeft returns the position the upper left edge of the element; 
		 not necessarily the 'real' left edge of the element. This is important 
		 for inline elements (such as span) in flowed text that wraps from one 
		 line to the next. The span may start in the middle of the line and wrap 
		 around to the beginning of the next line. The offsetLeft will refer to 
		 the left edge of the start of the span, not the left edge of text at the 
		 start of the second line. Therefore, a box with the left, top, width and 
		 height of offsetLeft, offsetTop, offsetWidth and offsetHeight will not be 
		 a bounding box for a span with wrapped text.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var colorTable = document.getElementById("t1");
		 var tOLeft = colorTable.offsetLeft;
		 
		 if (tOLeft &gt; 5) {
		 	// large left offset: do something here
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534200(VS.85).aspx"><linktext>MSDN: offsetLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetLeft"><linktext>MDC - Element: offsetLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetParent:get"><apiName>offsetParent</apiName><shortdesc>
		 The element from which all offset calculations are currently computed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 The element from which all offset calculations are currently computed.
		 
		 <p>offsetParent returns a reference to the object which is the closest 
		 (nearest in the containment hierarchy) positioned containing element. 
		 If the element is non-positioned, the root element (html in standards 
		 compliant mode; body in quirks rendering mode) is the offsetParent. 
		 offsetParent returns null when the element has style.display set 
		 to "none".</p>
		 
		 <p><b>Note (IE5):</b> In Microsoft Internet Explorer 5, the offsetParent property returns 
		 the table object for the td object.</p>
		 
		 <p><b>Note (IE4):</b> In Internet Explorer 4.0 it returns 
		 the tr object. You can use the parentElement property to retrieve the 
		 immediate container of the table cell.</p>
		 
		 </apiDesc><example>
		 This example shows how to determine the position of a td object. Although the td 
		 object appears to the far right in the document, its position is close to the x-axis and y-axis, 
		 because its offset parent is a table object rather than the document body. For Internet Explorer 4.0,
		 this same example returns a position of 0,0 because the offset parent is the table row.
		 
		 <codeblock>
		 &lt;table border='1' align='right'&gt;
		 	&lt;tr&gt;
		 		&lt;td id='oCell'&gt;This is a small table.&lt;/td&gt;
		 	&lt;/tr&gt;
		 &lt;/table&gt;</codeblock>
		 
		 <codeblock>
		 var oElement = document.getElementById("oCell");
		 
		 alert("The TD element is at (" + oElement.offsetLeft + 
		 "," + oElement.offsetTop + ")\n" + "The offset parent is " 
		 + oElement.offsetParent.tagName );</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534302(VS.85).aspx"><linktext>MSDN: offsetParent Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetParent"><linktext>MDC - Element: offsetParent Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetParent Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetTop:get"><apiName>offsetTop</apiName><shortdesc>
		 Returns the distance of the current element relative to the 
		 top of the offsetParent node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance of the current element relative to the 
		 top of the offsetParent node.
		 
		 </apiDesc><example>
		 <codeblock>
		 d = document.getElementById("div1");
		 
		 topPos = d.offsetTop;
		 
		 if (topPos &gt; 10) {
		 	// object is offset more
		 	// than 10 pixels from its parent
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534303(VS.85).aspx"><linktext>MSDN: offsetTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetTop"><linktext>MDC - Element: offsetTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetWidth:get"><apiName>offsetWidth</apiName><shortdesc>
		 The width of an element, relative to the layout.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The width of an element, relative to the layout.
		 
		 <p>Typically, an element's offsetWidth is a measurement which includes 
		 the element borders, the element horizontal padding, the element 
		 vertical scrollbar (if present, if rendered) and the element CSS width.</p>
		 
		 <p><b>Note (IE6):</b> To comply with the <xref class="external" href="http://www.w3.org/TR/REC-CSS1/" rel="external nofollow">Cascading Style Sheets, Level 1 (CSS1)</xref> World Wide 
		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 
		 height of objects differently when you use the !DOCTYPE declaration in your 
		 document to switch on standards-compliant mode. This difference may affect 
		 the value of the offsetWidth propety. When standards-compliant mode is 
		 switched on, the width property specifies the distance between the left and 
		 right edges of the bounding box that surrounds the object's content. When 
		 standards-compliant mode is not switched on, and with earlier versions of 
		 Windows Internet Explorer, the width property also includes the border and 
		 padding belts that surround the object's bounding box.</p>
		 
		 </apiDesc><example>
		 This example adjusts the size of a clock's readout to fit the current width and height of the document.
		 
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;A Simple Clock&lt;/title&gt;
		 &lt;script type="text/javascript"&gt;
		 	function startClock() {
		 		window.setInterval("Clock_Tick()", 1000);
		 		Clock_Tick();
		 	}
		 
		 	var iRatio = 4;
		 	function Clock_Tick() {
		 		var dToday = Date();
		 		var sTime = dToday.substring(11,19);
		 		var iDocHeight = document.body.offsetHeight;
		 		var iDocWidth = document.body.offsetWidth;
		 
		 		if ((iDocHeightRatio)&gt;iDocWidth)
		 		iDocHeight = iDocWidth / iRatio;
		 		document.all.MyTime.innerText = sTime;
		 		document.all.MyTime.style.fontSize = iDocHeight;
		 	}
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onload="startClock()"&gt;
		 &lt;p id="MyTime"&gt;&amp;nbsp;&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534304(VS.85).aspx"><linktext>MSDN: offsetWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetWidth"><linktext>MDC - Element: offsetWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:scrollHeight:get"><apiName>scrollHeight</apiName><shortdesc>
		 Height of the scroll view of an element; it includes the element padding but not its margin.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Height of the scroll view of an element; it includes the element padding but not its margin.
		 
		 <p>An element's scrollHeight is a measurement of the height of an element's content including 
		 content not visible on the screen due to overflow.</p>
		 
		 <p>If the element's content generated a vertical scrollbar, the scrollHeight value is equal to 
		 the minimum clientHeight the element would require in order to fit all the content in the viewpoint 
		 without using a vertical scrollbar. When an element's content does not generate a vertical scrollbar, 
		 then its scrollHeight property is equal to its clientHeight property.</p>
		 
		 </apiDesc><example>
		 This example uses the scrollHeight property to retrieve the height of the viewable content.
		 
		 <codeblock>
		 &lt;script type="text/javascript"&gt;
		 	function fnCheckScroll(){
		 		var iNewHeight = oDiv.scrollHeight;
		 		alert("The value of the scrollHeight property is: " 
		 		+ iNewHeight + "px"); 
		 	}
		 &lt;/script&gt;
		 ...
		 &lt;div id="oDiv" style="overflow: scroll; height= 100px; width= 250px; text-align: left"&gt;
		 	... 
		 &lt;/div&gt;
		 &lt;button onclick="fnCheckScroll()"&gt;Check scrollHeight&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534615(VS.85).aspx"><linktext>MSDN: scrollHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollHeight"><linktext>MDC - Element: scrollHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:scrollLeft:get"><apiName>scrollLeft</apiName><shortdesc>
		 Gets or sets the number of pixels that an element's content is scrolled to the left.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets or sets the number of pixels that an element's content is scrolled to the left.
		 
		 </apiDesc><example>
		 <codeblock>
		 // Set the number of pixels scrolled
		 element.scrollLeft = 10;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534617(VS.85).aspx"><linktext>MSDN: scrollLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollLeft"><linktext>MDC - Element: scrollLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:scrollTop:get"><apiName>scrollTop</apiName><shortdesc>
		 Gets or sets the number of pixels that the content of an element is scrolled upward.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets or sets the number of pixels that the content of an element is scrolled upward.
		 
		 <p>An element's scrollTop is a measurement of the distance of an element's top to its topmost visible content.</p>
		 
		 <p>When an element content does not generate a vertical scrollbar, then its scrollTop value defaults to 0.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Get the number of pixels scrolled
		 var  intElemScrollTop = element.scrollTop;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/workshop/author/dhtml/reference/properties/scrolltop.asp?frame=true"><linktext>MSDN: scrollTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollTop"><linktext>MDC - Element: scrollTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:scrollWidth:get"><apiName>scrollWidth</apiName><shortdesc>
		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater. 
		 
		 <p>If the element is wider than its content area (for example, if there are scroll bars for scrolling through the content), the scrollWidth is larger than the clientWidth.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="aDiv" style="width: 100px; height: 200px; overflow: auto;"&gt;
		 	-FooBar-FooBar-FooBar
		 &lt;/div&gt;
		 &lt;br/&gt;
		 &lt;input type="button" value="Show scrollWidth"
		 onclick="alert(document.getElementById('aDiv').scrollWidth);"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534619(VS.85).aspx"><linktext>MSDN: scrollWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollWidth"><linktext>MDC - Element: scrollWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:TextRectangleList"><apiName>TextRectangleList</apiName><shortdesc>
	 A collection of TextRectangle objects returned by the getClientRects method.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A collection of TextRectangle objects returned by the getClientRects method.
	 
	 </apiDesc><example>
	 This example shows how to use the getClientRects method and the TextRectangle collection to iterate through the lines of text in an object.
	 
	 <codeblock>
	 &lt;script&gt;
	 function newHighlite(obj) {            
	 	oRcts = obj.getClientRects();
	 	iLength = oRcts.length;
	 	for (i = 0;i &lt; iLength; i++) {	
	 		alert("Line number " + (i + 1) + " is " + (oRcts(i).right - oRcts(i).left) + " pixels wide.");
	 	}
	 }
	 &lt;/script&gt;</codeblock>
	 
	 </example></apiClassifierDetail><apiValue id="cssom.view:TextRectangleList:cssom.view:TextRectangleList:length:get"><apiName>length</apiName><shortdesc>
		 Returns the total number of TextRectangle objects associated with the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the total number of TextRectangle objects associated with the object.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534101(VS.85).aspx"><linktext>MSDN: length Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#textrectanglelist"><linktext>W3C - CSSOM View: length Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:MouseEventView"><apiName>MouseEventView</apiName><shortdesc>
	 Used to calculate the mouse position relative to the page or screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Used to calculate the mouse position relative to the page or screen.
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:clientX:get"><apiName>clientX</apiName><shortdesc>
		 Returns the horizontal coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page). 
		 
		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 
		 event with a clientX value of 0, regardless of whether the page is scrolled horizontally.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;title&gt;clientX\clientY example&lt;/title&gt;
		 
		 	&lt;script type="text/javascript"&gt;
		 		function showCoords(evt) {
		 			alert(
		 			"clientX value: " + evt.clientX + "\n"
		 			+ "clientY value: " + evt.clientY + "\n"
		 		);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 	&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533567(VS.85).aspx"><linktext>MSDN: clientX Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.clientX"><linktext>MDC - Event: clientX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: clientX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/clientY"><linktext>clientY</linktext></link><link href="cssom.view.xml#MouseEventView/screenX"><linktext>screenX</linktext></link><link href="cssom.view.xml#MouseEventView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:clientY:get"><apiName>clientY</apiName><shortdesc>
		 Returns the vertical coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).
		 
		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 
		 event with a clientY value of 0, regardless of whether the page is scrolled vertically.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;clientX\clientY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"clientX value: " + evt.clientX + "\n"
		 				+ "clientY value: " + evt.clientY + "\n"
		 			);
		 			}
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533568(VS.85).aspx"><linktext>MSDN: clientY Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.clientY"><linktext>MDC - Event: clientY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: clientY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/clientX"><linktext>clientX</linktext></link><link href="cssom.view.xml#MouseEventView/screenX"><linktext>screenX</linktext></link><link href="cssom.view.xml#MouseEventView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:offsetX:get"><apiName>offsetX</apiName><shortdesc>
		 Returns the horizontal coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_incorrect"/><apiTool name="Safari" version="3.1_incorrect"/><apiTool name="Safari" version="4.0b_incorrect"/><apiTool name="Chrome" version="1.0_incorrect"/><apiTool name="Chrome" version="2.0_incorrect"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.
		 
		 <p>In IE the coordinates are calculated relative to the target element when that element is 
		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 
		 relative to the target's offsetParent.</p>
		 
		 <p><b>Note (Safari/Chrome):</b> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the
		 border box.</p>
		 
		 <p><b>Note (Opera):</b> Opera calculates the position from the content box instead of the padding box.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;head&gt;
		 	&lt;script&gt;
		 		function offsetCoords() {
		 			var offsetInfo = ""
		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"
		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"
		 			alert(offsetInfo);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 
		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;
		 	...
		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;
		 	...
		 	&lt;/div&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534305(VS.85).aspx"><linktext>MSDN: offsetX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: offsetX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/offsetY"><linktext>offsetY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:offsetY:get"><apiName>offsetY</apiName><shortdesc>
		 Returns the vertical coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_incorrect"/><apiTool name="Safari" version="3.1_incorrect"/><apiTool name="Safari" version="4.0b_incorrect"/><apiTool name="Chrome" version="1.0_incorrect"/><apiTool name="Chrome" version="2.0_incorrect"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.
		 
		 <p>In IE the coordinates are calculated relative to the target element when that element is 
		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 
		 relative to the target's offsetParent.</p>
		 
		 <p><b>Note (Safari/Chrome):</b> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the
		 border box.</p>
		 
		 <p><b>Note (Opera):</b> Opera calculates the position from the content box instead of the padding box.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;head&gt;
		 	&lt;script&gt;
		 		function offsetCoords() {
		 			var offsetInfo = ""
		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"
		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"
		 			alert(offsetInfo);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 
		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;
		 	...
		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;
		 	...
		 	&lt;/div&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534306(VS.85).aspx"><linktext>MSDN: offsetY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: offsetY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/offsetX"><linktext>offsetX</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:pageX:get"><apiName>pageX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event relative to whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event relative to whole document. 
		 
		 <p><b>Note (IE):</b> In order to get it in IE, too, add the scrolling offset of the 
		 document to clientX/Y.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	function showCoords(evt){
		 		var form = document.forms.form_coords;
		 		var parent_id = evt.target.parentNode.id;
		 		form.parentId.value = parent_id;
		 		form.pageXCoords.value = evt.pageX;
		 		form.pageYCoords.value = evt.pageY;
		 		form.layerXCoords.value = evt.layerX;
		 		form.layerYCoords.value = evt.layerY;
		 	}
		 &lt;/script&gt;
		 
		 &lt;style type="text/css"&gt;
		 
		 #d1 {
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d2 {
		 	position: absolute;
		 	top: 180px;
		 	left: 80%;
		 	right:auto;
		 	width: 40%;
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d3 {
		 	position: absolute;
		 	top: 240px;
		 	left: 20%;
		 	width: 50%;
		 	border: solid blue 1px;
		 	padding: 10px;
		 }
		 
		 &lt;/style&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 
		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;
		 
		 &lt;div id="d1"&gt;
		 	&lt;span&gt;This is an un-positioned div so clicking it will return
		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d2"&gt;
		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		 	values that are relative to the top-left corner of this positioned
		 	element. Note the pageX\pageY properties still return the
		 	absolute position in the document, including page scrolling.&lt;/span&gt;
		 
		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		 	will return layerX/layerY values that are relative to the top-left
		 	corner of this positioned element. Note the pageX\pageY properties still
		 	return the absolute position in the document, including page
		 	scrolling.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d3"&gt;
		 	&lt;form name="form_coords"&gt;
		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;
		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;
		 	&lt;/form&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageX"><linktext>MDC - Event: pageX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: pageX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/pageY"><linktext>pageY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:pageY:get"><apiName>pageY</apiName><shortdesc>
		 Returns the vertical coordinate of the event relative to the whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event relative to the whole document.
		 
		 <p><b>Note (IE):</b> In order to get it in IE, too, add the scrolling offset of the 
		 document to clientX/Y.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	function showCoords(evt){
		 		var form = document.forms.form_coords;
		 		var parent_id = evt.target.parentNode.id;
		 		form.parentId.value = parent_id;
		 		form.pageXCoords.value = evt.pageX;
		 		form.pageYCoords.value = evt.pageY;
		 		form.layerXCoords.value = evt.layerX;
		 		form.layerYCoords.value = evt.layerY;
		 	}
		 &lt;/script&gt;
		 
		 &lt;style type="text/css"&gt;
		 
		 #d1 {
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d2 {
		 	position: absolute;
		 	top: 180px;
		 	left: 80%;
		 	right:auto;
		 	width: 40%;
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d3 {
		 	position: absolute;
		 	top: 240px;
		 	left: 20%;
		 	width: 50%;
		 	border: solid blue 1px;
		 	padding: 10px;
		 }
		 
		 &lt;/style&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 
		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;
		 
		 &lt;div id="d1"&gt;
		 	&lt;span&gt;This is an un-positioned div so clicking it will return
		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d2"&gt;
		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		 	values that are relative to the top-left corner of this positioned
		 	element. Note the pageX\pageY properties still return the
		 	absolute position in the document, including page scrolling.&lt;/span&gt;
		 
		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		 	will return layerX/layerY values that are relative to the top-left
		 	corner of this positioned element. Note the pageX\pageY properties still
		 	return the absolute position in the document, including page
		 	scrolling.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d3"&gt;
		 	&lt;form name="form_coords"&gt;
		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;
		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;
		 	&lt;/form&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageY"><linktext>MDC - Event: pageY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: pageY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/pageX"><linktext>pageX</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:screenX:get"><apiName>screenX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event within the screen as a whole.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event within the screen as a whole. 
		 
		 <p><b>Note:</b> When you trap events on the window, document, or other roomy elements, you can get the 
		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"screenX value: " + evt.screenX + "\n"
		 				+ "screenY value: " + evt.screenY + "\n"
		 			);
		 		}
		 
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 <codeblock>
		 function checkClickMap(e) {
		 	if (e.screenX &lt; 50) doRedButton();
		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();
		 	if (e.screenX &gt;= 100) doRedButton();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534391(VS.85).aspx"><linktext>MSDN: screenX Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.screenX"><linktext>MDC - Event: screenX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: screenX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/clientX"><linktext>clientX</linktext></link><link href="cssom.view.xml#MouseEventView/clientY"><linktext>clientY</linktext></link><link href="cssom.view.xml#MouseEventView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:screenY:get"><apiName>screenY</apiName><shortdesc>
		 Returns the vertical coordinate of the event within the screen as a whole.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event within the screen as a whole.
		 
		 <p><b>Note:</b> When you trap events on the window, document, or other roomy elements, you can get the 
		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"screenX value: " + evt.screenX + "\n"
		 				+ "screenY value: " + evt.screenY + "\n"
		 			);
		 		}
		 
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 <codeblock>
		 function checkClickMap(e) {
		 	if (e.screenX &lt; 50) doRedButton();
		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();
		 	if (e.screenX &gt;= 100) doRedButton();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534392(VS.85).aspx"><linktext>MSDN: screenY Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.screenY"><linktext>MDC - Event: screenY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: screenY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/clientX"><linktext>clientX</linktext></link><link href="cssom.view.xml#MouseEventView/clientY"><linktext>clientY</linktext></link><link href="cssom.view.xml#MouseEventView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:x:get"><apiName>x</apiName><shortdesc>
		 Returns the value of pageX.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_alternative"/><apiTool name="IE" version="6.0_alternative"/><apiTool name="IE" version="7.0_alternative"/><apiTool name="IE" version="8.0_as_IE7_alternative"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_alternative"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the value of pageX. 
		 
		 </apiDesc><example>
		 <codeblock>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535154(VS.85).aspx"><linktext>MSDN: x Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: x Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/y"><linktext>y</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:y:get"><apiName>y</apiName><shortdesc>
		 Returns the value of pageY.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_alternative"/><apiTool name="IE" version="6.0_alternative"/><apiTool name="IE" version="7.0_alternative"/><apiTool name="IE" version="8.0_as_IE7_alternative"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_alternative"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the value of pageY. 
		 
		 </apiDesc><example>
		 <codeblock>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535164(VS.85).aspx"><linktext>MSDN: y Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: y Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/x"><linktext>x</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:TextRectangle"><apiName>TextRectangle</apiName><shortdesc>
	 Objects implementing the TextRectangle interface represent a rectangular box.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the TextRectangle interface represent a rectangular box.
	 
	 </apiDesc><example>
	 In the following excerpt from the Gettysburg Address, four TextRectangle objects are contained in the b element (bold text).
	 
	 <codeblock>
	 &lt;p&gt;Four score and seven years ago &lt;b&gt;our fathers&lt;br&gt;
	 brought forth . . . a new nation, conceived in liberty&lt;br&gt;
	 and dedicated to the proposition that all men are&lt;br&gt;
	 created equal.&lt;/b&gt; Now we are engaged in a great civil war . . . 
	 &lt;/p&gt;
	 </codeblock>
	 
	 <p>
	 The four TextRectangle objects are: 
	 <ol>
	 <li>"our fathers"</li>
	 <li>"brought forth . . . a new nation, conceived in liberty"</li>
	 <li>"and dedicated to the proposition that all men are"</li>
	 <li>"created equal"</li>
	 </ol>
	 </p>
	 
	 <p>If you resize the window containing this text, the TextRectangle objects do not update. Because the objects are a 
	 snapshot of the layout, the objects should update after an onresize event occurs.</p>
	 
	 <p>The width of the TextRectangle may not be identical to the width of the TextRange it contains. A TextRange is only 
	 as wide as the text, but a TextRectangle is as wide as the element containing that text.</p>
	 
	 </example></apiClassifierDetail><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:bottom:get"><apiName>bottom</apiName><shortdesc>
		 Returns the distance between the top of the viewport and the bottom 
		 of the rectangle box as number of CSS pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance between the top of the viewport and the bottom 
		 of the rectangle box as number of CSS pixels. 
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function getCoords(oObject) {
		 	oBndRct = oObject.getBoundingClientRect();
		 	alert("Bounding rectangle = \nUpper left coordinates: "
		 	+ oBndRct.left + " " + oBndRct.top +
		 	"\nLower right coordinates: "
		 	+ oBndRct.right + " " + oBndRct.bottom);
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;	
		 &lt;body&gt;
		 &lt;p id=oPara onclick="getCoords(this)"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533535(VS.85).aspx"><linktext>MSDN: bottom Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-textrectangle-interface"><linktext>W3C - CSSOM View: bottom Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:height:get"><apiName>height</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/element.getClientRects"><linktext>MDC - Element: getClientRects Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.getBoundingClientRect"><linktext>MDC - Element: getBoundingClientRect Method</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:left:get"><apiName>left</apiName><shortdesc>
		 Returns the distance between the left of the viewport and the left 
		 of the rectangle box as number of CSS pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance between the left of the viewport and the left 
		 of the rectangle box as number of CSS pixels.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function getCoords(oObject) {
		 	oBndRct = oObject.getBoundingClientRect();
		 	alert("Bounding rectangle = \nUpper left coordinates: "
		 	+ oBndRct.left + " " + oBndRct.top +
		 	"\nLower right coordinates: "
		 	+ oBndRct.right + " " + oBndRct.bottom);
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;	
		 &lt;body&gt;
		 &lt;p id=oPara onclick="getCoords(this)"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534099(VS.85).aspx"><linktext>MSDN: left Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-textrectangle-interface"><linktext>W3C - CSSOM View: left Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:right:get"><apiName>right</apiName><shortdesc>
		 Returns the distance between the left of the viewport and the right 
		 of the rectangle box as number of CSS pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance between the left of the viewport and the right 
		 of the rectangle box as number of CSS pixels. 
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function getCoords(oObject) {
		 	oBndRct = oObject.getBoundingClientRect();
		 	alert("Bounding rectangle = \nUpper left coordinates: "
		 	+ oBndRct.left + " " + oBndRct.top +
		 	"\nLower right coordinates: "
		 	+ oBndRct.right + " " + oBndRct.bottom);
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;	
		 &lt;body&gt;
		 &lt;p id=oPara onclick="getCoords(this)"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534374(VS.85).aspx"><linktext>MSDN: right Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-textrectangle-interface"><linktext>W3C - CSSOM View: right Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:top:get"><apiName>top</apiName><shortdesc>
		 Returns the distance between the top of the viewport and the top of 
		 the rectangle box as number of CSS pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance between the top of the viewport and the top of 
		 the rectangle box as number of CSS pixels. 
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function getCoords(oObject) {
		 	oBndRct = oObject.getBoundingClientRect();
		 	alert("Bounding rectangle = \nUpper left coordinates: "
		 	+ oBndRct.left + " " + oBndRct.top +
		 	"\nLower right coordinates: "
		 	+ oBndRct.right + " " + oBndRct.bottom);
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;	
		 &lt;body&gt;
		 &lt;p id=oPara onclick="getCoords(this)"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534688(VS.85).aspx"><linktext>MSDN: top Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-textrectangle-interface"><linktext>W3C - CSSOM View: top Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:width:get"><apiName>width</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/element.getClientRects"><linktext>MDC - Element: getClientRects Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.getBoundingClientRect"><linktext>MDC - Element: getBoundingClientRect Method</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:RangeView"><apiName>RangeView</apiName><shortdesc>
	 Has properties and methods that give information about the dimensions of a Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMTR 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has properties and methods that give information about the dimensions of a Range.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="dom.core.types"><apiName>dom.core.types</apiName><apiClassifier id="dom.core.types:DOMUserData"><apiName>DOMUserData</apiName><shortdesc>
	 A DOMUserData represents a reference to application data.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DOMUserData represents a reference to application data.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core.types:DOMTimeStamp"><apiName>DOMTimeStamp</apiName><shortdesc>
	 A DOMTimeStamp represents a number of milliseconds.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DOMTimeStamp represents a number of milliseconds. 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core.types:DOMObject"><apiName>DOMObject</apiName><shortdesc>
	 A DOMObject represents an object reference.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DOMObject represents an object reference. 
	 
	 <p><b>Note:</b> For Java and ECMAScript, DOMObject is bound to the Object type.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core.types:DOMString"><apiName>DOMString</apiName><shortdesc>
	 A DOMString is a sequence of 16-bit units.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DOMString is a sequence of 16-bit units.
	 
	 The UTF-16 encoding was chosen because of its widespread industry practice. 
	 Note that for both HTML and XML, the document character set (and therefore 
	 the notation of numeric character references) is based on UCS [ISO/IEC 
	 10646]. A single numeric character reference in a source document may therefore 
	 in some cases correspond to two 16-bit units in a DOMString (a high surrogate 
	 and a low surrogate). For issues related to string comparisons, refer to String 
	 Comparisons in the DOM.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="dom.core"><apiName>dom.core</apiName><apiClassifier id="dom.core:CharacterData"><apiName>CharacterData</apiName><shortdesc>
	 Provides text manipulation methods that are used by several objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Provides text manipulation methods that are used by several objects.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:CharacterData:data:get"><apiName>data</apiName><shortdesc>
		 The character data of the node that implements this interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised when 
		 the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>DOMSTRING_SIZE_ERR: Raised when it would 
		 return more characters than fit in a DOMString variable on the 
		 implementation platform.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The character data of the node that implements this interface.
		 
		 <p>The DOM implementation may not put arbitrary limits on the amount of data 
		 that may be stored in a CharacterData node. However, implementation 
		 limits may mean that the entirety of a node's data may not fit into 
		 a single DOMString. In such cases, the user may call substringData 
		 to retrieve the data in appropriately sized pieces.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms765506%28VS.85%29.aspx"><linktext>MSDN - data Property (IXMLDOMCharacterData)</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData.data"><linktext>MDC - CharacterData.data</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-72AB8359"><linktext>W3C - CharacterData.data</linktext></link></related-links></apiValue><apiValue id="dom.core:CharacterData:length:get"><apiName>length</apiName><shortdesc>
		 The number of 16-bit units that are available through data and the 
		 substringData method below.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of 16-bit units that are available through data and the 
		 substringData method below. This may have the value zero, i.e., 
		 CharacterData nodes may be empty.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms760351%28VS.85%29.aspx"><linktext>MSDN - length Property (IXMLDOMCharacterData)</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData.length"><linktext>MDC - CharacterData.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-7D61178C"><linktext>W3C - CharacterData.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DOMConfiguration"><apiName>DOMConfiguration</apiName><shortdesc>
	 Used by Document.normalizeDocument(), and DOM Level 3 DOMParser() and DOMSerializer.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Used by Document.normalizeDocument(), and DOM Level 3 DOMParser() and DOMSerializer.
	 
	 <p>Using the configuration, it is possible to change Document.normalizeDocument() 
	 behavior, such as replacing the CDATASection nodes with Text nodes 
	 or specifying the type of the schema that must be used when the 
	 validation of the Document is requested. DOMConfiguration objects are 
	 also used in [DOM Level 3 Load and Save] in the DOMParser and 
	 DOMSerializer interfaces.</p>
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla.</p>
	 
	 <p>The following list of parameters defined in the DOM: 
	 <adobetable class="innertable">
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 <tgroup cols="3"><thead><row><entry>Parameter</entry><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
	 		<entry>"canonical-form"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Canonicalize the document according to the rules 
	 specified in [Canonical XML], such as removing the DocumentType node (if any) from the tree, or removing 
	 superfluous namespace declarations from each element. Note that this is limited to what can be represented 
	 in the DOM; in particular, there is no way to specify the order of the attributes in the DOM. In addition, 
	 Setting this parameter to true will also set the state of the parameters listed below. Later changes to the 
	 state of one of those parameters will revert "canonical-form" back to false. Parameters set to false: 
	 "entities", "normalize-characters", "cdata-sections". Parameters set to true: "namespaces", 
	 "namespace-declarations", "well-formed", "element-content-whitespace". Other parameters are not changed unless 
	 explicitly specified in the description of the parameters.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not canonicalize the document.</entry>
	 	</row><row>
	 		<entry>"cdata-sections"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Keep CDATASection nodes in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Transform CDATASection nodes in the document into Text nodes. The new Text  node is then combined with any adjacent Text  node.</entry>
	 	</row><row>
	 		<entry>"check-character-normalization"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Check if the characters in the document are fully normalized, as defined in appendix B of XML 1.1. When a sequence of characters is encountered that fails normalization checking, an error with the DOMError.type equals to "check-character-normalization-failure" is issued. </entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not check if characters are normalized.</entry>
	 	</row><row>
	 		<entry>"comments"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Keep Comment nodes in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Discard Comment nodes in the document.</entry>
	 	</row><row>
	 		<entry>"datatype-normalization"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Expose schema normalized values in the tree, such as XML Schema normalized values in the case of XML Schema. Since this parameter requires to have schema information, the "validate" parameter will also be set to true. Having this parameter activated when "validate" is false has no effect and no schema-normalization will happen. </entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not perform schema normalization on the tree. </entry>
	 	</row><row>
	 		<entry>"element-content-whitespace"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Keep all whitespaces in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [optional]</entry><entry>Discard all Text nodes that contain whitespaces in element content, as described in [element content whitespace]. The implementation is expected to use the attribute Text.isElementContentWhitespace to determine if a Text node should be discarded or not.</entry>
	 	</row><row>
	 		<entry>"entities"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Keep EntityReference nodes in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Remove all EntityReference nodes from the document, putting the entity expansions directly in their place. Text nodes are normalized, as defined in Node.normalize. Only unexpanded entity references are kept in the document.<p><b>Note:</b> This parameter does not affect Entity nodes.</p></entry>
	 	</row><row>
	 		<entry>"error-handler"</entry><entry>[required]</entry><entry>Contains a DOMErrorHandler object. If an error is encountered in the document, the implementation will call back the DOMErrorHandler registered using this parameter. The implementation may provide a default DOMErrorHandler object. When called, DOMError.relatedData will contain the closest node to where the error occurred. If the implementation is unable to determine the node where the error occurs, DOMError.relatedData will contain the Document node. Mutations to the document from within an error handler will result in implementation dependent behavior. </entry>
	 	</row><row>
	 		<entry>"infoset"</entry><entry><codeph>true</codeph> [required]</entry><entry>Keep in the document the information defined in the XML Information Set. This forces the following parameters to false: "validate-if-schema", "entities", "datatype-normalization", "cdata-sections". This forces the following parameters to true: "namespace-declarations", "well-formed", "element-content-whitespace", "comments", "namespaces". Other parameters are not changed unless explicitly specified in the description of the parameters. Note that querying this parameter with getParameter returns true only if the individual parameters specified above are appropriately set.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph></entry><entry>Setting infoset to false  has no effect.</entry>
	 	</row><row>
	 		<entry>"namespaces"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Perform the namespace processing as defined in Namespace Normalization. </entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [optional]</entry><entry>Do not perform the namespace processing. </entry>
	 	</row><row>
	 		<entry>"namespace-declarations"</entry><entry/><entry>This parameter has no effect if the parameter "namespaces" is set to false. </entry>
	 	</row><row>
	 		<entry/><entry><codeph>true</codeph> [required] (default)</entry><entry>Include namespace declaration attributes, specified or defaulted from the schema, in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Discard all namespace declaration attributes. The namespace prefixes (Node.prefix) are retained even if this parameter is set to false.</entry>
	 	</row><row>
	 		<entry>"normalize-characters"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Fully normalized the characters in the document as defined in appendix B of [XML 1.1].</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not perform character normalization.</entry>
	 	</row><row>
	 		<entry>"schema-location"</entry><entry>[optional]</entry><entry>Represent a DOMString object containing a list of URIs, separated by whitespaces (characters matching the nonterminal production S defined in section 2.3 [XML 1.0]), that represents the schemas against which validation should occur, i.e. the current schema. The types of schemas referenced in this list must match the type specified with schema-type, otherwise the behavior of an implementation is undefined. The schemas specified using this property take precedence to the schema information specified in the document itself. For namespace aware schema, if a schema specified using this property and a schema specified in the document instance (i.e. using the schemaLocation attribute) in a schema document (i.e. using schema import mechanisms) share the same targetNamespace, the schema specified by the user using this property will be used. If two schemas specified using this property share the same targetNamespace or have no namespace, the behavior is implementation dependent. If no location has been provided, this parameter is null.<p><b>Note:</b> The "schema-location" parameter is ignored unless the "schema-type" parameter value is set. It is strongly recommended that Document.documentURI will be set so that an implementation can successfully resolve any external entities referenced.</p></entry>
	 	</row><row>
	 		<entry>"schema-type"</entry><entry>[optional]</entry><entry>Represent a DOMString object containing an absolute URI and representing the type of the schema language used to validate a document against. Note that no lexical checking is done on the absolute URI. If this parameter is not set, a default value may be provided by the implementation, based on the schema languages supported and on the schema language used at load time. If no value is provided, this parameter is null.<p><b>Note:</b> For XML Schema, applications must use the value "http://www.w3.org/2001/XMLSchema". For XML DTD, applications must use the value "http://www.w3.org/TR/REC-xml". Other schema languages are outside the scope of the W3C and therefore should recommend an absolute URI in order to use this method.</p></entry>
	 	</row><row>
	 		<entry>"split-cdata-sections"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Split CDATA sections containing the CDATA section termination marker ']]&gt;'. When a CDATA section is split a warning is issued with a DOMError.type equals to "cdata-sections-splitted" and DOMError.relatedData equals to the first CDATASection node in document order resulting from the split.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Signal an error if a CDATASection contains an unrepresentable character.</entry>
	 	</row><row>
	 		<entry>"validate"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Require the validation against a schema (i.e. XML schema, DTD, any other type or representation of schema) of the document as it is being normalized as defined by [XML 1.0]. If validation errors are found, or no schema was found, the error handler is notified. Schema-normalized values will not be exposed according to the schema in used unless the parameter "datatype-normalization" is true. This parameter will reevaluate:<ul><li>Attribute nodes with Attr.specified equals to false, as specified in the description of the Attr interface;</li><li>The value of the attribute Text.isElementContentWhitespace for all Text nodes;</li><li>The value of the attribute Attr.isId for all Attr nodes;</li><li>The attributes Element.schemaTypeInfo and Attr.schemaTypeInfo.</li></ul><p><b>Note:</b> "validate-if-schema" and "validate" are mutually exclusive, setting one of them to true will set the other one to false. Applications should also consider setting the parameter "well-formed" to true, which is the default for that option, when validating the document.</p></entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not accomplish schema processing, including the internal subset processing. Default attribute values information are kept. Note that validation might still happen if "validate-if-schema" is true. </entry>
	 	</row><row>
	 		<entry>"validate-if-schema"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Enable validation only if a declaration for the document element can be found in a schema (independently of where it is found, i.e. XML schema, DTD, or any other type or representation of schema). If validation is enabled, this parameter has the same behavior as the parameter "validate" set to true.<p><b>Note:</b> "validate-if-schema" and "validate" are mutually exclusive, setting one of them to true will set the other one to false.</p></entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>No schema processing should be performed if the document has a schema, including internal subset processing. Default attribute values information are kept. Note that validation must still happen if "validate" is true. </entry>
	 	</row><row>
	 		<entry>"well-formed"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Check if all nodes are XML well formed according to the XML version in use in Document.xmlVersion: <ul><li>check if the attribute Node.nodeName contains invalid characters according to its node type and generate a DOMError of type "wf-invalid-character-in-node-name", with a DOMError.SEVERITY_ERROR severity, if necessary;</li><li>check if the text content inside Attr, Element, Comment, Text, CDATASection nodes for invalid characters and generate a DOMError of type "wf-invalid-character", with a DOMError.SEVERITY_ERROR severity, if necessary;</li><li>check if the data inside ProcessingInstruction nodes for invalid characters and generate a DOMError of type "wf-invalid-character", with a DOMError.SEVERITY_ERROR severity, if necessary;</li></ul></entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [optional]</entry><entry>Do not check for XML well-formedness. </entry>
	 	</row></tbody></tgroup></adobetable>
	 </p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:DOMConfiguration:dom.core:DOMConfiguration:parameterNames:get"><apiName>parameterNames</apiName><shortdesc>
		 The list of the parameters supported by this DOMConfiguration object 
		 and for which at least one value can be set by the application.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMStringList</apiValueClassifier></apiValueDef><apiDesc>
		 The list of the parameters supported by this DOMConfiguration object 
		 and for which at least one value can be set by the application. Note 
		 that this list can also contain parameter names defined outside 
		 this specification. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMConfiguration.parameterNames"><linktext>MDC - DOMConfiguration.parameterNames</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration-parameterNames"><linktext>W3C - DOMConfiguration.parameterNames</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:Attr"><apiName>Attr</apiName><shortdesc>
	 This type represents a DOM element's attribute as an object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This type represents a DOM element's attribute as an object. In most DOM methods, you 
	 will probably directly retrieve the attribute as a string (e.g., getAttribute), but 
	 certain functions (e.g., getAttributeNode()) or means of iterating give Attr types.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:Attr:expando:get"><apiName>expando</apiName><shortdesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.
		 
		 <p><b>Note:</b> You can extend the properties on an object by creating arbitrary properties 
		 with values. You should be careful, however, because you can unintentionally set a property value when 
		 scripting in a case-sensitive language such as Microsoft JScript. For example, if the property value 
		 is borderColor and you type the value "bordercolor = 'blue'", you have, in fact, created another property 
		 on the style object called bordercolor with the value 'blue'. If you query the value of the property, 
		 the value "blue" is returned. However, the borders for the element do not turn blue.</p>
		 
		 <p><b>Note:</b> Setting the  expando property of the  document object to false precludes the 
		 functionality of all expandos within the document.</p>
		 
		 </apiDesc><example>
		 The following example demonstrates that, by setting the expando property of the document object to false, 
		 the document ignores the  UNSELECTABLE expando on the  span and allows you to select the text.
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 &lt;script type="text/javascript"&gt;
		 	//Set the expando property to false.
		 	document.expando = false;
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 
		 &lt;div&gt;
		 &lt;span id="oSpan" unselectable="on"&gt;This text should be selectable.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533747%28VS.85%29.aspx"><linktext>MSDN - expando Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:isId:get"><apiName>isId</apiName><shortdesc>
		 Returns whether this attribute is known to be of type ID (i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns whether this attribute is known to be of type ID (i.e. to 
		 contain an identifier for its owner element) or not. 
		 
		 <p>When it is and its value is unique, the ownerElement of this 
		 attribute can be retrieved using the method Document.getElementById.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Attr.isId"><linktext>MDC - Attr.isId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-isId"><linktext>W3C - Attr.isId</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:name:get"><apiName>name</apiName><shortdesc>
		 Returns the name of this attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the name of this attribute. If Node.localName is different 
		 from null, this attribute is a qualified name.
		 
		 <p><b>Note (IE8):</b>  Internet Explorer 8 and later. In IE8 mode, dynamically setting the name attribute on an input type=radio button correctly applies that button to the same named group.</p>
		 
		 <p><b>Note (IE):</b> When submitting a form, use the name property to bind the value of the control. The name is not the value displayed for the input type=button, input type=reset, and input type=submit input types. The internally stored value is submitted with the form, not the displayed value.</p>
		 
		 <p><b>Note (IE):</b> Microsoft JScript allows the name to be changed at run time. This does not cause the name in the programming model to change in the collection of elements, but it does change the name used for submitting elements.</p>
		 
		 <p><b>Note (IE8):</b>  Internet Explorer 8 and later can set the NAME attribute at run time on elements dynamically created with the createElement method. To create an element with a NAME attribute in earlier versions of Internet Explorer, include the attribute and its value when using the createElement method.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var inp = document.createElement('input');
		 inp.setAttribute('type',  'radio');
		 inp.setAttribute('name',  'Q'+count);
		 inp.setAttribute('value', answers[i]);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534184%28VS.85%29.aspx"><linktext>MSDN - NAME Attribute | name Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Attr.name"><linktext>MDC - Attr.name</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1112119403"><linktext>W3C - Attr.name</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:ownerElement:get"><apiName>ownerElement</apiName><shortdesc>
		 The Element node this attribute is attached to or null if this 
		 attribute is not in use.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 The Element node this attribute is attached to or null if this 
		 attribute is not in use.
		 
		 <p><b>Note (IE8):</b> This property is new as of Internet Explorer 8. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/dd347028%28VS.85%29.aspx"><linktext>MSDN - ownerElement Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Attr.ownerElement"><linktext>MDC - Attr.ownerElement</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-ownerElement"><linktext>W3C - Attr.ownerElement</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:schemeTypeInfo:get"><apiName>schemeTypeInfo</apiName><shortdesc>
		 The type information associated with this attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:TypeInfo</apiValueClassifier></apiValueDef><apiDesc>
		 The type information associated with this attribute.
		 
		 <p>While the type 
		 information contained in this attribute is guarantee to be correct 
		 after loading the document or invoking Document.normalizeDocument(), 
		 schemaTypeInfo may not be reliable if the node was moved. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Attr.schemaTypeInfo"><linktext>MDC - Attr.schemeTypeInfo</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-schemaTypeInfo"><linktext>W3C - Attr.schemeTypeInfo</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:specified:get"><apiName>specified</apiName><shortdesc>
		 True if this attribute was explicitly given a value in the instance 
		 document, false otherwise.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 True if this attribute was explicitly given a value in the instance 
		 document, false otherwise. 
		 
		 <p>If the application changed the value of 
		 this attribute node (even if it ends up having the same value as the 
		 default value) then it is set to true. The implementation may handle 
		 attributes with default values from other schemas similarly but 
		 applications should use Document.normalizeDocument() to guarantee 
		 this information is up-to-date.</p>
		 
		 </apiDesc><example>
		 his example uses the specified property to determine the attributes set for an object. 
		 The function checks each attribute, and lists all of the attributes of the object and the 
		 value of each attribute. In addition, each attribute that is set is displayed.
		 <codeblock>
		 &lt;script&gt;
		 function fnFindSpecified(){
		 	var oAttributes=oList.attributes;
		 	alert(oAttributes(0).nodeName);
		 	for(var i=0;i&lt;oAttributes.length;i++){
		 		var oNode=document.createElement("LI");
		 		var oNodeValue=document.createTextNode(i + " "
		 			+ oAttributes(i).nodeName + " = "
		 			+ oAttributes(i).nodeValue);
		 		oList.appendChild(oNode);
		 		oNode.appendChild(oNodeValue);
		 		if(oAttributes(i).nodeValue!=null){
         			alert(oAttributes(i).nodeName
         			+ " specified: " + oAttributes(i).specified);
		 		}
		 	}
		 }
		 &lt;/script&gt;
		 
		 &lt;ul id=oList onclick="fnFindSpecified()"&gt;
		 &lt;li&gt;Click to Find Specified Attributes&lt;/li&gt;
		 &lt;/ul&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534637%28VS.85%29.aspx"><linktext>MSDN - specified Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Attr.specified"><linktext>MDC - Attr.specified</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-862529273"><linktext>W3C - Attr.specified</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:value:get"><apiName>value</apiName><shortdesc>
		 On retrieval, the value of the attribute is returned as a string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised when 
		 the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 On retrieval, the value of the attribute is returned as a string. 
		 Character and general entity references are replaced with their 
		 values.
		 
		 <p>On setting, this creates a Text node with the unparsed contents of 
		 the string, i.e. any characters that an XML processor would 
		 recognize as markup are instead treated as literal text.</p>
		 
		 <p><b>Note (IE8):</b>  Internet Explorer 8 or later. In IE8 mode, the value property 
		 is correctly reported as a canonical attribute name. For example, &lt;input type="text" readonly&gt; 
		 and &lt;input type="text" readonly="readonly"&gt; would both set the input text field to read-only. 
		 In IE8 mode, the value is evaluated as a cannonical value, "readonly". In earlier document 
		 compatibility modes, it is evaluated as a Boolean value, true.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535129%28VS.85%29.aspx"><linktext>MSDN - value Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Attr.value"><linktext>MDC - Attr.value</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-221662474"><linktext>W3C - Attr.value</linktext></link><link href="dom.core.xml#Element/getAttribute"><linktext>dom.core.Element.getAttribute</linktext></link><link href="dom.core.xml#Element/setAttribute"><linktext>dom.core.Element.setAttribute</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DOMImplementationList"><apiName>DOMImplementationList</apiName><shortdesc>
	 Returned by DOMImplementationSource.getDOMImplementationList() and 
	 DOMImplementationRegistry.getDOMImplementationList().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Returned by DOMImplementationSource.getDOMImplementationList() and 
	 DOMImplementationRegistry.getDOMImplementationList(). Can be iterated with 0-based index.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:DOMImplementationList:dom.core:DOMImplementationList:length:get"><apiName>length</apiName><shortdesc>
		 The number of DOMImplementations in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of DOMImplementations in the list. 
		 
		 <p>The range of valid child node indices is 0 to length-1  inclusive.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationList.length"><linktext>MDC - DOMImplementationList.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList-length"><linktext>W3C - DOMImplementationList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:NamedNodeMap"><apiName>NamedNodeMap</apiName><shortdesc>
	 Objects implementing the NamedNodeMap interface are used to represent 
	 collections of nodes that can be accessed by name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 2
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the NamedNodeMap interface are used to represent 
	 collections of nodes that can be accessed by name. Note that NamedNodeMap 
	 does not inherit from NodeList; NamedNodeMaps are not maintained in 
	 any particular order. Objects contained in an object implementing 
	 NamedNodeMap may also be accessed by an ordinal index, but this is simply 
	 to allow convenient enumeration of the contents of a NamedNodeMap, and 
	 does not imply that the DOM specifies an order to these Nodes. 
	 
	 <p><b>Note:</b> NamedNodeMap objects in the DOM are live.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:length:get"><apiName>length</apiName><shortdesc>
		 The number of nodes in this map.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of nodes in this map. The range of valid child node 
		 indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms753799%28VS.85%29.aspx"><linktext>MSDN - length Property (IXMLDOMNamedNodeMap)</linktext></link><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap.length"><linktext>MDC - NamedNodeMap.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6D0FB19E"><linktext>W3C - NamedNodeMap.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:UserDataHandler"><apiName>UserDataHandler</apiName><shortdesc>
	 When associating user data with a key on a node, Node.setUserData()
	 can also accept, in its third argument, a handler which will be 
	 called when the object is cloned, imported, deleted, renamed, or 
	 adopted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 When associating user data with a key on a node, Node.setUserData()
	 can also accept, in its third argument, a handler which will be 
	 called when the object is cloned, imported, deleted, renamed, or 
	 adopted. Per the specification, exceptions should not be thrown in 
	 a UserDataHandler. In both document.importNode() and Node.cloneNode(), 
	 although user data is not copied over, the handler will be called. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:UserDataHandler:NODE_ADOPTED"><apiName>NODE_ADOPTED</apiName><shortdesc>
		 The node is adopted, using Document.adoptNode().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is adopted, using Document.adoptNode().
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:UserDataHandler:NODE_CLONED"><apiName>NODE_CLONED</apiName><shortdesc>
		 The node is cloned, using Node.cloneNode().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is cloned, using Node.cloneNode().
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:UserDataHandler:NODE_DELETED"><apiName>NODE_DELETED</apiName><shortdesc>
		 The node is deleted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is deleted.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:UserDataHandler:NODE_IMPORTED"><apiName>NODE_IMPORTED</apiName><shortdesc>
		 The node is imported, using Document.importNode().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is imported, using Document.importNode().
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:UserDataHandler:NODE_RENAMED"><apiName>NODE_RENAMED</apiName><shortdesc>
		 The node is renamed, using Document.renameNode().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is renamed, using Document.renameNode().
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.core:DOMErrorHandler"><apiName>DOMErrorHandler</apiName><shortdesc>
	 DOMErrorHandler is a callback interface that the DOM implementation can
	 call when reporting errors that happens while processing XML data, or 
	 when doing some other processing (e.g.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 DOMErrorHandler is a callback interface that the DOM implementation can
	 call when reporting errors that happens while processing XML data, or 
	 when doing some other processing (e.g. validating a document). A 
	 DOMErrorHandler  object can be attached to a Document using the 
	 "error-handler" on the DOMConfiguration interface. If more than one error 
	 needs to be reported during an operation, the sequence and numbers of 
	 the errors passed to the error handler are implementation dependent. 
	 
	 <p><b>Note:</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core:DOMImplementationRegistry"><apiName>DOMImplementationRegistry</apiName><shortdesc>
	 This is a global variable used to get a single DOMImplementation or DOMImplementationList 
	 depending on the registered objects with the specified features.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This is a global variable used to get a single DOMImplementation or DOMImplementationList 
	 depending on the registered objects with the specified features.
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core:DOMImplementation"><apiName>DOMImplementation</apiName><shortdesc>
	 The DOMImplementation interface provides a number of methods for 
	 performing operations that are independent of any particular 
	 instance of the document object model.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DOMImplementation interface provides a number of methods for 
	 performing operations that are independent of any particular 
	 instance of the document object model. 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core:DOMException"><apiName>DOMException</apiName><shortdesc>
	 DOM operations only raise exceptions in "exceptional" circumstances.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 DOM operations only raise exceptions in "exceptional" circumstances. For example,
	 when an operation is impossible to perform (either for logical reasons, 
	 because data is lost, or because the implementation has become unstable). 
	 In general, DOM methods return specific error values in ordinary processing 
	 situations, such as out-of-bound errors when using NodeList.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:DOMException:dom.core:DOMException:code:get"><apiName>code</apiName><shortdesc>
		 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 An integer indicating the type of error generated.
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.core.xml#ExceptionCode"><linktext>dom.core.ExceptionCode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DocumentType"><apiName>DocumentType</apiName><shortdesc>
	 Each Document has a doctype attribute whose value is either null or a 
	 DocumentType  object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 2
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Each Document has a doctype attribute whose value is either null or a 
	 DocumentType  object. The DocumentType interface in the DOM Core provides 
	 an interface to the list of entities that are defined for the document, 
	 and little else because the effect of namespaces and the various XML schema 
	 efforts on DTD representation are not clearly understood as of this writing.
	 
	 <p><b>Note:</b> DOM Level 3 doesn't support editing DocumentType nodes. DocumentType nodes 
	 are read-only.</p>
	 
	 <p><b>Note (Mozilla):</b> This interface is not fully supported in Mozilla at present, 
	 including for indicating internalSubset information which Gecko generally does otherwise support.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:DocumentType:entities:get"><apiName>entities</apiName><shortdesc>
		 A NamedNodeMap containing the general entities, both external and internal, 
		 declared in the DTD.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NamedNodeMap</apiValueClassifier></apiValueDef><apiDesc>
		 A NamedNodeMap containing the general entities, both external and internal, 
		 declared in the DTD. Parameter entities are not contained. Duplicates 
		 are discarded.
		 
		 <p>Internal (Parsed) Entities define entity references in order to replace certain strings by a replacement text. The content of the entity is given in the declaration.</p>
		 
		 <p>External (Parsed) Entities refer to external storage objects.</p>
		 
		 <p><b>Note:</b> The DOM Level 2 does not support editing entities, therefore entities 
		 cannot be altered in any way.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE ex SYSTEM "ex.dtd" [
		 	&lt;!ENTITY bat "bat"&gt;       
		 	&lt;!ENTITY bar "bar"&gt;       
		 ]&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757817%28VS.85%29.aspx"><linktext>MSDN - entities Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.entities"><linktext>MDC - DocumentType.entities</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1788794630"><linktext>W3C - DocumentType.entities</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:internalSubset:get"><apiName>internalSubset</apiName><shortdesc>
		 The internal subset as a string, or null if there is none.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The internal subset as a string, or null if there is none. This is does 
		 not contain the delimiting square brackets.
		 
		 <p><b>Note:</b> The actual content returned depends on how much information is 
		 available to the implementation. This may vary depending on various 
		 parameters, including the XML processor used to build the document.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
		 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
		 	[
		 	&lt;!ATTLIST input validate CDATA #IMPLIED&gt;
		 	&lt;!ATTLIST input range CDATA #IMPLIED&gt;
		 ]&gt;
		 // internalSubset : &lt;!ATTLIST input validate CDATA #IMPLIED&gt;&lt;!ATTLIST input range CDATA #IMPLIED&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DocumentType.internalSubset"><linktext>MDC - DocumentType.internalSubset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-internalSubset"><linktext>W3C - DocumentType.internalSubset</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:name:get"><apiName>name</apiName><shortdesc>
		 The name of DTD; i.e., the name immediately following the DOCTYPE keyword.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of DTD; i.e., the name immediately following the DOCTYPE keyword.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
		 // name : html</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms754603%28VS.85%29.aspx"><linktext>MSDN - name Property (IXMLDOMDocumentType)</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.name"><linktext>MDC - DocumentType.name</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1844763134"><linktext>W3C - DocumentType.name</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:notations:get"><apiName>notations</apiName><shortdesc>
		 A NamedNodeMap containing the notations declared in the DTD.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NamedNodeMap</apiValueClassifier></apiValueDef><apiDesc>
		 A NamedNodeMap containing the notations declared in the DTD. Duplicates 
		 are discarded. Every node in this map also implements the Notation interface.
		 
		 <p><b>Note:</b> The DOM Level 2 does not support editing notations, therefore notations 
		 cannot be altered in any way.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE ex SYSTEM "ex.dtd" [
		 	&lt;!NOTATION GIF system "image/gif"&gt;    
		 ]&gt;
		 </codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms762714%28VS.85%29.aspx"><linktext>MSDN - notations Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.notations"><linktext>MDC - DocumentType.notations</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D46829EF"><linktext>W3C - DocumentType.notations</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:publicId:get"><apiName>publicId</apiName><shortdesc>
		 The public identifier of the external subset.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The public identifier of the external subset.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
		 // publicId : -//W3C//DTD XHTML 1.0 Transitional//EN</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms760313%28VS.85%29.aspx"><linktext>MSDN - publicId Property (IXMLDOMEntity)</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms765397%28VS.85%29.aspx"><linktext>MSDN - publicId Property (IXMLDOMNotation)</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.publicId"><linktext>MDC - DocumentType.publicId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-publicId"><linktext>W3C - DocumentType.publicId</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:systemId:get"><apiName>systemId</apiName><shortdesc>
		 The system identifier of the external subset.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The system identifier of the external subset. This may be an absolute URI or not.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
		 // systemId : http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms764731%28VS.85%29.aspx"><linktext>MSDN - systemId Property (IXMLDOMEntity)</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms754668%28VS.85%29.aspx"><linktext>MSDN - systemId Property (IXMLDOMNotation)</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.systemId"><linktext>MDC - DocumentType.systemId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-systemId"><linktext>W3C - DocumentType.systemId</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:ExceptionCode"><apiName>ExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated.
	 
	 <p><b>Note:</b> Other numeric codes are reserved for W3C for possible future use.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:ExceptionCode:DOMSTRING_SIZE_ERR"><apiName>DOMSTRING_SIZE_ERR</apiName><shortdesc>
		 If the specified range of text does not fit into a DOMString.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the specified range of text does not fit into a DOMString.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:HIERARCHY_REQUEST_ERR"><apiName>HIERARCHY_REQUEST_ERR</apiName><shortdesc>
		 If any Node is inserted somewhere it doesn't belong.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If any Node is inserted somewhere it doesn't belong.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INDEX_SIZE_ERR"><apiName>INDEX_SIZE_ERR</apiName><shortdesc>
		 If index or size is negative, or greater than the allowed value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If index or size is negative, or greater than the allowed value.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INUSE_ATTRIBUTE_ERR"><apiName>INUSE_ATTRIBUTE_ERR</apiName><shortdesc>
		 If an attempt is made to add an attribute that is already in use elsewhere.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>10</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to add an attribute that is already in use elsewhere.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INVALID_ACCESS_ERR"><apiName>INVALID_ACCESS_ERR</apiName><shortdesc>
		 If a parameter or an operation is not supported by the underlying object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>15</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If a parameter or an operation is not supported by the underlying object.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INVALID_CHARACTER_ERR"><apiName>INVALID_CHARACTER_ERR</apiName><shortdesc>
		 If an invalid or illegal character is specified, such as in an XML name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an invalid or illegal character is specified, such as in an XML name.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INVALID_MODIFICATION_ERR"><apiName>INVALID_MODIFICATION_ERR</apiName><shortdesc>
		 If an attempt is made to modify the type of the underlying object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>13</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to modify the type of the underlying object.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INVALID_STATE_ERR"><apiName>INVALID_STATE_ERR</apiName><shortdesc>
		 If an attempt is made to use an object that is not, or is no longer, usable.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>11</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to use an object that is not, or is no longer, usable.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NAMESPACE_ERR"><apiName>NAMESPACE_ERR</apiName><shortdesc>
		 If an attempt is made to create or change an object in a way which is 
		 incorrect with regard to namespaces.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>14</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to create or change an object in a way which is 
		 incorrect with regard to namespaces.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NOT_FOUND_ERR"><apiName>NOT_FOUND_ERR</apiName><shortdesc>
		 If an attempt is made to reference a Node in a context where it does not exist.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to reference a Node in a context where it does not exist.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NOT_SUPPORTED_ERR"><apiName>NOT_SUPPORTED_ERR</apiName><shortdesc>
		 If the implementation does not support the requested type of object or operation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the implementation does not support the requested type of object or operation.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NO_DATA_ALLOWED_ERR"><apiName>NO_DATA_ALLOWED_ERR</apiName><shortdesc>
		 If data is specified for a Node which does not support data.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If data is specified for a Node which does not support data.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NO_MODIFICATION_ALLOWED_ERR"><apiName>NO_MODIFICATION_ALLOWED_ERR</apiName><shortdesc>
		 If an attempt is made to modify an object where modifications are not allowed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to modify an object where modifications are not allowed.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:SYNTAX_ERR"><apiName>SYNTAX_ERR</apiName><shortdesc>
		 If an invalid or illegal string is specified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>12</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an invalid or illegal string is specified.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:TYPE_MISMATCH_ERR"><apiName>TYPE_MISMATCH_ERR</apiName><shortdesc>
		 If the type of an object is incompatible with the expected type of the 
		 parameter associated to the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the type of an object is incompatible with the expected type of the 
		 parameter associated to the object.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:VALIDATION_ERR"><apiName>VALIDATION_ERR</apiName><shortdesc>
		 If a call to a method such as insertBefore or removeChild would make the 
		 Node invalid with respect to "partial validity", this exception would be 
		 raised and the operation would not be done.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If a call to a method such as insertBefore or removeChild would make the 
		 Node invalid with respect to "partial validity", this exception would be 
		 raised and the operation would not be done. This code is used in [DOM 
		 Level 3 Validation]. Refer to this specification for further information.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:WRONG_DOCUMENT_ERR"><apiName>WRONG_DOCUMENT_ERR</apiName><shortdesc>
		 If a Node is used in a different document than the one that created it (that doesn't support it).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If a Node is used in a different document than the one that created it (that doesn't support it).
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.core:NameList"><apiName>NameList</apiName><shortdesc>
	 The NameList interface provides the abstraction of an ordered collection 
	 of parallel pairs of name and namespace values (which could be null 
	 values), without defining or constraining how this collection is 
	 implemented.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The NameList interface provides the abstraction of an ordered collection 
	 of parallel pairs of name and namespace values (which could be null 
	 values), without defining or constraining how this collection is 
	 implemented. The items in the NameList are accessible via an integral 
	 index, starting from 0.
	 
	 <p><b>Note (Mozilla):</b> Although there is an XPCOM interface for it, this does not seem to be implemented in Mozilla</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:NameList:dom.core:NameList:length:get"><apiName>length</apiName><shortdesc>
		 The number of pairs (name and namespaceURI) in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of pairs (name and namespaceURI) in the list. The range 
		 of valid child node indices is 0 to length-1  inclusive. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NameList.length"><linktext>MDC - NameList.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-length"><linktext>W3C - NameList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:EntityReference"><apiName>EntityReference</apiName><shortdesc>
	 Read-only reference to an entity reference in the DOM tree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Read-only reference to an entity reference in the DOM tree.
	 
	 <p><b>Note:</b> Character references and references to predefined entities 
	 are considered to be expanded by the HTML or XML processor so that 
	 characters are represented by their Unicode equivalent rather than by an 
	 entity reference. Moreover, the XML processor may completely expand 
	 references to entities while building the Document, instead of providing 
	 EntityReference  nodes. If it does provide such nodes, then for an 
	 EntityReference node that represents a reference to a known entity an Entity 
	 exists, and the subtree of the EntityReference node is a copy of the Entity 
	 node subtree. However, the latter may not be true when an entity contains 
	 an unbound namespace prefix. In such a case, because the namespace prefix 
	 resolution depends on where the entity reference is, the descendants of the 
	 EntityReference node may be bound to different namespace URIs. When an 
	 EntityReference node represents a reference to an unknown entity, the node has 
	 no children and its replacement value, when used by Attr.value for example, 
	 is empty.</p>
	 
	 <p><b>Note:</b> As for Entity nodes, EntityReference nodes and all their descendants are readonly.</p>
	 
	 <p><b>Note:</b> EntityReference nodes may cause element content and attribute value normalization 
	 problems when, such as in XML 1.0 and XML Schema, the normalization is performed 
	 after entity reference are expanded.</p>
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core:DOMLocator"><apiName>DOMLocator</apiName><shortdesc>
	 Indicates a location such as where an error occurred.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Indicates a location such as where an error occurred. Returned by DOMError.location.
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:byteOffset:get"><apiName>byteOffset</apiName><shortdesc>
		 The byte offset into the input source this locator is pointing to or -1 
		 if there is no byte offset available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The byte offset into the input source this locator is pointing to or -1 
		 if there is no byte offset available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.byteOffset"><linktext>MDC - DOMLocator.byteOffset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-byteOffset"><linktext>W3C - DOMLocator.byteOffset</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:columnNumber:get"><apiName>columnNumber</apiName><shortdesc>
		 The column number this locator is pointing to, or -1 if there is no 
		 column number available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The column number this locator is pointing to, or -1 if there is no 
		 column number available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.columnNumber"><linktext>MDC - DOMLocator.columnNumber</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-column-number"><linktext>W3C - DOMLocator.columnNumber</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:lineNumber:get"><apiName>lineNumber</apiName><shortdesc>
		 The line number this locator is pointing to, or -1 if there is no 
		 column number available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The line number this locator is pointing to, or -1 if there is no 
		 column number available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.lineNumber"><linktext>MDC - DOMLocator.lineNumber</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-line-number"><linktext>W3C - DOMLocator.lineNumber</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:relatedNode:get"><apiName>relatedNode</apiName><shortdesc>
		 The node this locator is pointing to, or null if no node is available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 The node this locator is pointing to, or null if no node is available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.relatedNode"><linktext>MDC - DOMLocator.relatedNode</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-node"><linktext>W3C - DOMLocator.relatedNode</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:uri:get"><apiName>uri</apiName><shortdesc>
		 The URI this locator is pointing to, or null if no URI is available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI this locator is pointing to, or null if no URI is available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.uri"><linktext>MDC - DOMLocator.uri</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-uri"><linktext>W3C - DOMLocator.uri</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:utf16Offset:get"><apiName>utf16Offset</apiName><shortdesc>
		 The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646], 
		 offset into the input source this locator is pointing to or -1 if there 
		 is no UTF-16 offset available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646], 
		 offset into the input source this locator is pointing to or -1 if there 
		 is no UTF-16 offset available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.utf16Offset"><linktext>MDC - DOMLocator.utf16Offset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-utf16Offset"><linktext>W3C - DOMLocator.utf16Offset</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:Document"><apiName>Document</apiName><shortdesc>
	 In the DOM, the document object provides a general way to represent HTML, 
	 XHTML, and XML documents.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.style.css:DocumentCSS</apiBaseInterface><apiBaseInterface>dom.style.stylesheets:DocumentStyle</apiBaseInterface><apiBaseInterface>cssom.view:DocumentView</apiBaseInterface><apiBaseInterface>dom.views:DocumentView</apiBaseInterface><apiBaseInterface>dom.tr.range:DocumentRange</apiBaseInterface><apiBaseInterface>dom.events:DocumentEvent</apiBaseInterface><apiBaseInterface>dom.tr.traversal:DocumentTraversal</apiBaseInterface><apiBaseInterface>selectors:NodeSelector</apiBaseInterface><apiBaseInterface>dom.loadsave:DOMImplementationLS</apiBaseInterface><apiBaseInterface>dom.loadsave:DocumentLS</apiBaseInterface><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 In the DOM, the document object provides a general way to represent HTML, 
	 XHTML, and XML documents. Document objects implement the general DOM Core 
	 document interface (which itself implements the Node interface).
	 
	 <p>In addition to the generalized DOM Core document interface, HTML documents 
	 also implement the DOM HTMLDocument interface, which is a more specialized 
	 interface for dealing with HTML documents (e.g., document.cookie, 
	 document.alinkColor). Methods listed here that are part of this more 
	 specialized interface have an asterisk (~~) next to them.</p>
	 
	 <p>The document is contained by the window object and may contain any number 
	 of elements.</p>
	 
	 <p>The document interface provides access to things such as the document type, 
	 its color and formatting, plugins and applets, as well providing methods 
	 for creating and manipulating all of the document's child nodes, or elements, 
	 such as BODY and TABLE elements.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:Document:async:get"><apiName>async</apiName><shortdesc>
		 
		 Indicates whether the method load should be synchronous or asynchronous.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
		 Indicates whether the method load should be synchronous or asynchronous. When the async attribute is set 
		 to true the load method returns control to the caller before the document has completed loading.
		 
		 </apiDesc><example>
		 <codeblock>
		 function loadXMLData(e) {
		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string
		 }
		 
		 var xmlDoc = document.implementation.createDocument("", "test", null);
		 xmlDoc.async = false;
		 xmlDoc.onload = loadXMLData;
		 xmlDoc.load('querydata.xml');</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.async"><linktext>MDC - Document.async</linktext></link><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-async"><linktext>W3C - DocumentLS.async</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:defaultView:get"><apiName>defaultView</apiName><shortdesc>
		 
		 The default AbstractView for this Document, or null if none available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:AbstractView</apiValueClassifier></apiValueDef><apiDesc>
		 
		 The default AbstractView for this Document, or null if none available.
		 
		 <p><b>Note:</b> document.defaultView is generally a reference to the window object 
		 for the document, however that is not defined in the specification and can't be relied upon 
		 for all host environments, particularly as not all browsers implement it.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.defaultView"><linktext>MDC - Document.defaultView</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-DocumentView-defaultView"><linktext>W3C - DocumentView.defaultView</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:doctype:get"><apiName>doctype</apiName><shortdesc>
		 The Document Type Declaration (see DocumentType) associated with this 
		 document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DocumentType</apiValueClassifier></apiValueDef><apiDesc>
		 The Document Type Declaration (see DocumentType) associated with this 
		 document. For XML documents without a document type declaration this 
		 returns null. For HTML documents, a DocumentType object may be returned, 
		 independently of the presence or absence of document type declaration in 
		 the HTML document.
		 
		 <p>This provides direct access to the DocumentType node, child node of this 
		 Document. This node can be set at document creation time and later changed 
		 through the use of child nodes manipulation methods, such as 
		 Node.insertBefore, or Node.replaceChild. Note, however, that while some 
		 implementations may instantiate different types of Document objects 
		 supporting additional features than the "Core", such as "HTML", based on the DocumentType specified at creation time, changing it 
		 afterwards is very unlikely to result in a change of the features supported.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533737%28VS.85%29.aspx"><linktext>MSDN - doctype Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.doctype"><linktext>MDC - Document.doctype</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-B63ED1A31"><linktext>W3C - Document.doctype</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:documentElement:get"><apiName>documentElement</apiName><shortdesc>
		 This is a convenience  attribute that allows direct access to the child node 
		 that is the document element of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 This is a convenience  attribute that allows direct access to the child node 
		 that is the document element of the document.
		 
		 <p><b>Note:</b> HTML documents typically contain a single child node, &lt;html&gt;, perhaps 
		 with a DOCTYPE declaration before it. XML documents often contain multiple child nodes: the root 
		 element, the DOCTYPE declaration, and  processing instructions. </p>
		 
		 <p>That's why you should use document.documentElement rather than document.firstChild  to get the root element. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var rootElement = document.documentElement;
		 var firstTier = rootElement.childNodes;
		 // firstTier is the NodeList of the direct children of the root element
		 for (var i = 0; i &lt; firstTier.length; i++) {
		 	// do something with each direct kid of the root element
		 	// as firstTier[i]
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533739%28VS.85%29.aspx"><linktext>MSDN - documentElement Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.documentElement"><linktext>MDC - Document.documentElement</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-87CD092"><linktext>W3C - Document.documentElement</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:documentURI:get"><apiName>documentURI</apiName><shortdesc>
		 The location of the document or null if undefined or if the Document was 
		 created using DOMImplementation.createDocument.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The location of the document or null if undefined or if the Document was 
		 created using DOMImplementation.createDocument. No lexical checking is 
		 performed when setting this attribute; this could result in a null value 
		 returned when using Node.baseURI.
		 
		 <p>Beware that when the Document supports the feature "HTML", the href attribute 
		 of the HTML BASE element takes precedence over this attribute when computing Node.baseURI.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.documentURI"><linktext>MDC - Document.documentURI</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-documentURI"><linktext>W3C - Document.documentURI</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:domConfig:get"><apiName>domConfig</apiName><shortdesc>
		 The configuration used when Document.normalizeDocument() is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMConfiguration</apiValueClassifier></apiValueDef><apiDesc>
		 The configuration used when Document.normalizeDocument() is invoked. 
		 
		 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla at present.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document.domConfig"><linktext>MDC - Document.domConfig</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-domConfig"><linktext>W3C - Document.domConfig</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:implementation:get"><apiName>implementation</apiName><shortdesc>
		 The DOMImplementation object that handles this document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMImplementation</apiValueClassifier></apiValueDef><apiDesc>
		 The DOMImplementation object that handles this document. A DOM application 
		 may use objects from multiple implementations.
		 
		 </apiDesc><example>
		 <codeblock>
		 var modName = "HTML";
		 var modVer = "2.0";
		 var conformTest = document.implementation.hasFeature(modName, modVer);
		 
		 alert("DOM " + modName + " " + modVer + " supported?: " + conformTest);
		 
		 // alerts with: "DOM HTML 2.0 supported?: true" if DOM Level 2 HTML module is supported.</codeblock>
		 
		 <p>A list of module names (e.g., Core, HTML, XML, etc) is available in the DOM Level 2 Conformance Section</p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535865%28VS.85%29.aspx"><linktext>MSDN - implementation Object</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533884%28VS.85%29.aspx"><linktext>MSDN - implementation Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.implementation"><linktext>MDC - Document.implementation</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1B793EBA"><linktext>W3C - Document.implementation</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Core/introduction.html#ID-Conformance-h2"><linktext>W3C - Conformance Section</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:inputEncoding:get"><apiName>inputEncoding</apiName><shortdesc>
		 Returns a string representing the encoding under which the document was parsed (e.g.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representing the encoding under which the document was parsed (e.g. ISO-8859-1). 
		 This is null when it is not known, such as when the Document was created in memory.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.inputEncoding"><linktext>MDC - Document.inputEncoding</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-inputEncoding"><linktext>W3C - Document.inputEncoding</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:lastStyleSheetSet:get"><apiName>lastStyleSheetSet</apiName><shortdesc>
		 
		 This attribute must initially have the value null.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 
		 This attribute must initially have the value null. Its value changes when the selectedStyleSheetSet  attribute is set.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.lastStyleSheetSet"><linktext>MDC - Document.lastStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-lastStyleSheetSet"><linktext>W3C - DocumentStyle.lastStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:preferredStyleSheetSet:get"><apiName>preferredStyleSheetSet</apiName><shortdesc>
		 
		 This attribute must be the preferred style sheet set as set by the author.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 
		 This attribute must be the preferred style sheet set as set by the author. It is determined from the order 
		 of style sheet declarations and the Default-Style HTTP headers. If there is no preferred style sheet set, 
		 this attribute must  be the empty string. The case of this attribute must  exactly match the case given by 
		 the author where the preferred style sheet is specified or implied. This attribute must  never be null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.preferredStyleSheetSet"><linktext>MDC - Document.preferredStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-preferredStyleSheetSet"><linktext>W3C - DocumentStyle.preferredStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:selectedStyleSheetSet:get"><apiName>selectedStyleSheetSet</apiName><shortdesc>
		 
		 This attribute indicates which style sheet set is in use.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 
		 This attribute indicates which style sheet set is in use. This attribute is live; changing the disabled attribute 
		 on style sheets directly will change the value of this attribute.
		 
		 <p>If all the sheets that are enabled and have a title have the same title (by case-sensitive  comparisons) 
		 then the value of this attribute must be exactly equal to the title of the first enabled style sheet with a 
		 title in the styleSheets  list. Otherwise, if style sheets from different sets are enabled, then the return 
		 value must be null (there is no way to determine what the currently selected style sheet set is in those 
		 conditions). Otherwise, either all style sheets that have a title are disabled, or there are no alternative 
		 style sheets, and selectedStyleSheetSet  must return the empty string.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.selectedStyleSheetSet"><linktext>MDC - Document.selectedStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-selectedStyleSheetSet"><linktext>W3C - DocumentStyle.selectedStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:strictErrorChecking:get"><apiName>strictErrorChecking</apiName><shortdesc>
		 An attribute specifying whether error checking is enforced or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 An attribute specifying whether error checking is enforced or not. When set 
		 to false, the implementation is free to not test every possible error case 
		 normally defined on DOM operations, and not raise any DOMException on DOM 
		 operations or report errors while using Document.normalizeDocument(). In 
		 case of error, the behavior is undefined. This attribute is true by default.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.strictErrorChecking"><linktext>MDC - Document.strictErrorChecking</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-strictErrorChecking"><linktext>W3C - Document.strictErrorChecking</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:styleSheetSets:get"><apiName>styleSheetSets</apiName><shortdesc>
		 
		 This must be a live list of the currently available style sheet sets.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMStringList</apiValueClassifier></apiValueDef><apiDesc>
		 
		 This must be a live list of the currently available style sheet sets. This list is constructed by enumerating 
		 all the style sheets for this document available to the implementation, in the order they are listed in the 
		 styleSheets  attribute, adding the title of each style sheet with a title to the list, avoiding duplicates by 
		 dropping titles that match (case-sensitively) titles that have already been added to the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="htts.//developer.mozilla.org/En/DOM/document.styleSheetSets.xml"><linktext>MDC - Document.styleSheetSets</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-styleSheetSets"><linktext>W3C - DocumentStyle.styleSheetSets</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:styleSheets:get"><apiName>styleSheets</apiName><shortdesc>
		 
		 A list containing all the style sheets explicitly linked into or embedded in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:StyleSheetList</apiValueClassifier></apiValueDef><apiDesc>
		 
		 A list containing all the style sheets explicitly linked into or embedded in a document. For HTML 
		 documents, this includes external style sheets, included via the HTML LINK element, and inline 
		 STYLE elements. In XML, this includes external style sheets, included via style sheet 
		 processing instructions.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531200%28VS.85%29.aspx"><linktext>MSDN: styleSheets Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.styleSheets"><linktext>MDC - Document.styleSheets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle"><linktext>W3C - DOM Level 2 Style: DocumentStyle..styleSheets</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-stylesheets"><linktext>W3C - CSSOM: DocumentStyle.styleSheets</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:xmlEncoding:get"><apiName>xmlEncoding</apiName><shortdesc>
		 An attribute specifying, as part of the XML declaration, the encoding of 
		 this document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An attribute specifying, as part of the XML declaration, the encoding of 
		 this document. This is null when unspecified or when it is not known, such 
		 as when the Document was created in memory.
		 
		 <p>If the XML Declaration states:</p>
		 
		 <codeblock>&lt;?xml version="1.0" encoding="UTF-16"?&gt;</codeblock>
		 
		 <p>...the result should be "UTF-16".</p>
		 
		 <p><b>Note (Mozilla):</b> However, Firefox 3.0 includes information on endianness (e.g., UTF-16BE for big 
		 endian encoding), and while this extra information is removed as of Firefox 3.1b3, Firefox 3.1b3 is still 
		 consulting the file's encoding, rather than the XML Declaration as the spec defines it ("An attribute specifying, 
		 as part of the XML declaration, the encoding of this document.").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document.xmlEncoding"><linktext>MDC - Document.xmlEncoding</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-encoding"><linktext>W3C - Document.xmlEncoding</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:xmlStandalone:get"><apiName>xmlStandalone</apiName><shortdesc>
		 An attribute specifying, as part of the XML declaration, whether this 
		 document is standalone.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if this document 
		 does not support the "XML" feature. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 An attribute specifying, as part of the XML declaration, whether this 
		 document is standalone. This is false when unspecified.
		 
		 <p><b>Note:</b> No verification is done on the value when setting this attribute. 
		 Applications should use Document.normalizeDocument() with the "validate" 
		 parameter to verify if the value matches the validity constraint for 
		 standalone document declaration as defined in XML 1.0.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.xmlStandalone"><linktext>MDC - Document.xmlStandalone</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-standalone"><linktext>W3C - Document.xmlStandalone</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:xmlVersion:get"><apiName>xmlVersion</apiName><shortdesc>
		 An attribute specifying, as part of the XML declaration, the version 
		 number of this document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the version is set 
		 to a value that is not supported by this Document or if this document does 
		 not support the "XML" feature. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 An attribute specifying, as part of the XML declaration, the version 
		 number of this document. If there is no declaration and if this document 
		 supports the "XML" feature, the value is "1.0". If this document does not 
		 support the "XML" feature, the value is always null. Changing this 
		 attribute will affect methods that check for invalid characters in XML 
		 names. Application should invoke Document.normalizeDocument() in order to 
		 check for invalid characters in the Nodes that are already part of this Document.
		 
		 <p>DOM applications may use the DOMImplementation.hasFeature(feature, version) 
		 method with parameter values "XMLVersion" and "1.0" (respectively) to 
		 determine if an implementation supports XML 1.0. DOM applications may use 
		 the same method with parameter values "XMLVersion" and "1.1" (respectively) 
		 to determine if an implementation supports XML 1.1. In both cases, in 
		 order to support XML, an implementation must also support the "XML" feature 
		 defined in this specification. Document objects supporting a version of the 
		 "XMLVersion" feature must not raise a NOT_SUPPORTED_ERR exception for the 
		 same version number when using Document.xmlVersion.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.xmlVersion"><linktext>MDC - Document.xmlVersion</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-version"><linktext>W3C - Document.xmlVersion</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DocumentFragment"><apiName>DocumentFragment</apiName><shortdesc>
	 A DocumentFragment is a minimal document object that has no parent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>selectors:NodeSelector</apiBaseInterface><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DocumentFragment is a minimal document object that has no parent. 
	 
	 <p>It is used as a light-weight version of document to store well-formed 
	 or potentially non-well-formed fragments of XML.</p>
	 
	 <p>Various other methods can take a document fragment as an argument (e.g., 
	 any Node interface methods such as appendChild and insertBefore), in 
	 which case the children of the fragment are appended or inserted, not 
	 the fragment itself.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core:Comment"><apiName>Comment</apiName><shortdesc>
	 A comment is used to add notations within markup.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:CharacterData</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A comment is used to add notations within markup.
	 
	 <p>Although it is generally not displayed, it is still available to be read in 
	 the source view. These are represented in HTML and XML as content between 
	 &lt;!-- and  --&gt; . In XML, the character sequence "--" cannot be used within a comment.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core:Notation"><apiName>Notation</apiName><shortdesc>
	 This interface represents a notation declared in the DTD.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This interface represents a notation declared in the DTD. A notation 
	 either declares, by name, the format of an unparsed entity, or is used for formal 
	 declaration of processing instruction targets. The nodeName attribute inherited from 
	 Node is set to the declared name of the notation.
	 
	 <p><b>Note:</b> A Notation node does not have any parent.</p>
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:Notation:publicId:get"><apiName>publicId</apiName><shortdesc>
		 The public identifier of this notation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The public identifier of this notation. If the public identifier was not 
		 specified, this is null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms765397%28VS.85%29.aspx"><linktext>MSDN - publicId Property (IXMLDOMNotation)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Notation.publicId"><linktext>MDC - Notation.publicId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-54F2B4D0"><linktext>W3C - Notation.publicId</linktext></link></related-links></apiValue><apiValue id="dom.core:Notation:systemId:get"><apiName>systemId</apiName><shortdesc>
		 The system identifier of this notation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The system identifier of this notation. If the system identifier was not 
		 specified, this is null. This may be an absolute URI or not.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms754668%28VS.85%29.aspx"><linktext>MSDN - systemId Property (IXMLDOMNotation)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Notation.systemId"><linktext>MDC - Notation.systemId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-E8AAB1D0"><linktext>W3C - Notation.systemId</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:TypeInfo"><apiName>TypeInfo</apiName><shortdesc>
	 The TypeInfo interface represents a type referenced from Element or Attr 
	 nodes, specified in the schemas associated with the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The TypeInfo interface represents a type referenced from Element or Attr 
	 nodes, specified in the schemas associated with the document. The type 
	 is a pair of a namespace URI and name properties, and depends on the 
	 document's schema. 
	 
	 <p><b>Note:</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:TypeInfo:DERIVATION_EXTENSION"><apiName>DERIVATION_EXTENSION</apiName><shortdesc>
		 If the document's schema is an XML Schema, this constant represents the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the document's schema is an XML Schema, this constant represents the list.
		 
		 <p>
		 The reference type definition is derived by extension from the other 
		 type definition if the other type definition can be reached recursively
		 following the {base type definition} property from the reference type
		 definition, and at least one of the derivation methods involved is 
		 an extension.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:TypeInfo:DERIVATION_LIST"><apiName>DERIVATION_LIST</apiName><shortdesc>
		 If the document's schema is an XML Schema [XML Schema Part 1], this 
		 constant represents the union if simple types are involved.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the document's schema is an XML Schema [XML Schema Part 1], this 
		 constant represents the union if simple types are involved.
		 
		 <p>
		 The reference type definition is derived by list from the other type 
		 definition if there exists two type definitions T1 and T2 such as 
		 the reference type definition is derived from T1 by DERIVATION_RESTRICTION 
		 or DERIVATION_EXTENSION, T2 is derived from the other type definition 
		 by DERIVATION_RESTRICTION, T1 has {variety} list, and T2 is the {item 
		 type definition}. Note that T1 could be the same as the reference type 
		 definition, and T2 could be the same as the other type definition. </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:TypeInfo:DERIVATION_RESTRICTION"><apiName>DERIVATION_RESTRICTION</apiName><shortdesc>
		 If the document's schema is an XML Schema, this constant represents the derivation by extension.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the document's schema is an XML Schema, this constant represents the derivation by extension.
		 
		 <p>
		 The reference type definition is derived by restriction from the other type 
		 definition if the other type definition is the same as the reference type definition, 
		 or if the other type definition can be reached recursively following the {base type 
		 definition} property from the reference type definition, and all the derivation 
		 methods involved are restriction. </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:TypeInfo:DERIVATION_UNION"><apiName>DERIVATION_UNION</apiName><shortdesc>
		 If the document's schema is an XML Schema, this constant represents the derivation by 
		 restriction  if complex types are involved, or a restriction  if simple types are involved.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the document's schema is an XML Schema, this constant represents the derivation by 
		 restriction  if complex types are involved, or a restriction  if simple types are involved.
		 
		 <p>
		 The reference type definition is derived by union from the other 
		 type definition if there exists two type definitions T1 and T2 such 
		 as the reference type definition is derived from T1 by DERIVATION_RESTRICTION 
		 or DERIVATION_EXTENSION, T2 is derived from the other type definition 
		 by DERIVATION_RESTRICTION, T1 has {variety} union, and one of the {member 
		 type definitions} is T2. Note that T1 could be the same as the reference 
		 type definition, and T2 could be the same as the other type definition. </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:TypeInfo:typeName:get"><apiName>typeName</apiName><shortdesc>
		 The name of a type declared for the associated element or attribute, 
		 or null if unknown.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of a type declared for the associated element or attribute, 
		 or null if unknown. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/TypeInfo.typeName"><linktext>MDC - TypeInfo.typeName</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-typeName"><linktext>W3C - TypeInfo.typeName</linktext></link></related-links></apiValue><apiValue id="dom.core:TypeInfo:typeNamespace:get"><apiName>typeNamespace</apiName><shortdesc>
		 The namespace of the type declared for the associated element 
		 or attribute or null if the element does not have declaration or 
		 if no namespace information is available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The namespace of the type declared for the associated element 
		 or attribute or null if the element does not have declaration or 
		 if no namespace information is available. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/TypeInfo.typeNamespace"><linktext>MDC - TypeInfo.typeNamespace</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-typeNamespace"><linktext>W3C - TypeInfo.typeNamespace</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:Text"><apiName>Text</apiName><shortdesc>
	 The Text interface represents the textual content of an Element or Attr.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:CharacterData</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Text interface represents the textual content of an Element or Attr.  If an 
	 element has no markup within its content, it has a single child implementing Text 
	 that contains the element's text.  However, if the element contains markup, it is 
	 parsed into information items and Text nodes that form its children.
	 
	 <p>New documents have a single Text node for each block of text.  Over time, more 
	 Text nodes may be created as the document's content changes.  The Node.normalize() 
	 method merges adjacent Text objects back into a single node for each block of text.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:Text:isElementContentWhitespace:get"><apiName>isElementContentWhitespace</apiName><shortdesc>
		 Returns a Boolean value indicating whether or not the text node contains whitespace within its content.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a Boolean value indicating whether or not the text node contains whitespace within its content.  
		 This determination is made during the loading of the document, or if validation occurs when Document.normalizeDocument() is called.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Text.isElementContentWhitespace"><linktext>MDC - Text.isElementContentWhitespace</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Text3-isElementContentWhitespace"><linktext>W3C - Text.isElementContentWhitespace</linktext></link></related-links></apiValue><apiValue id="dom.core:Text:wholeText:get"><apiName>wholeText</apiName><shortdesc>
		 Returns all text of all Text nodes logically adjacent to this node, concatenated in document order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="Firefox" version="3.5+"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns all text of all Text nodes logically adjacent to this node, concatenated in document order.
		 
		 </apiDesc><example>
		 Suppose you have the following simple paragraph within your webpage (with 
		 some whitespace added to aid formatting throughout the code samples here), 
		 whose DOM node is stored in the variable para:
		 
		 <codeblock>
		 &lt;p&gt;Thru-hiking is great!  &lt;strong&gt;No insipid election coverage!&lt;/strong&gt;
		 However, &lt;a href="http://en.wikipedia.org/wiki/Absentee_ballot"&gt;casting a  
		 ballot&lt;/a&gt; is tricky.&lt;/p&gt;</codeblock>
		 
		 <p>You decide you don’t like the middle sentence, so you remove it:</p>
		 
		 <codeblock>para.removeChild(para.childNodes[1]);</codeblock>
		 
		 <p>Later, you decide to rephrase things to, “Thru-hiking is great, but casting a 
		 ballot is tricky.” while preserving the hyperlink. So you try this:</p>
		 
		 <codeblock>para.firstChild.data = "Thru-hiking is great, but ";</codeblock>
		 
		 <p>All set, right? Wrong! What happened was you removed the strong element, 
		 but the removed sentence’s element separated two text nodes, one for the 
		 first sentence and one for the first word of the last. Instead, you now 
		 effectively have this:</p>
		 
		 <codeblock>
		 &lt;p&gt;Thru-hiking is great, but However, &lt;a href="http://en.wikipedia.org/wiki/Absentee_ballot"&gt;
		 casting a ballot&lt;/a&gt; is tricky.&lt;/p&gt;</codeblock>
		 
		 <p>You’d really prefer to treat all those adjacent text nodes as a single one. 
		 That’s where wholeText comes in: if you have multiple adjacent text nodes, 
		 you can access the contents of all of them using wholeText. Let’s pretend 
		 you never made that last mistake. In that case, we have:</p>
		 
		 <codeblock>assert(para.firstChild.wholeText == "Thru-hiking is great!    However, ");</codeblock>
		 
		 <p>wholeText is just a property of text nodes that returns the string of data 
		 making up all the adjacent (i.e. not separated by an element boundary) 
		 text nodes together.</p>
		 
		 <p>Now let’s return to our original problem. What we want is to be able to 
		 replace the whole text with new text. That’s where replaceWholeText() 
		 comes in:</p>
		 
		 <codeblock>para.firstChild.replaceWholeText("Thru-hiking is great, but ");</codeblock>
		 
		 <p>We’re removing every adjacent text node (all the ones that constituted 
		 the whole text) but the one on which replaceWholeText() is called, and 
		 we’re changing the remaining one to the new text. What we have now is this:</p>
		 
		 <codeblock>
		 &lt;p&gt;Thru-hiking is great, but &lt;a href="http://en.wikipedia.org/wiki/Absentee_ballot"&gt;
		 casting a ballot&lt;/a&gt; is tricky.&lt;/p&gt;</codeblock>
		 
		 <p>Some uses of the whole-text functionality may be better served by using 
		 Node.textContent or the longstanding innerHTML; that’s fine and probably 
		 clearer in most circumstances. If you have to work with mixed content 
		 within an element as here, however, wholeText and replaceWholeText() may be useful.</p>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Text.wholeText"><linktext>MDC - Text.wholeText</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Text3-wholeText"><linktext>W3C - Text.wholeText</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:CDATASection"><apiName>CDATASection</apiName><shortdesc>
	 A CDATA Section can be used within XML to include extended portions of 
	 unescaped text, such that the symbols &amp;lt; and &amp;amp; do not need escaping as 
	 they normally do within XML when used as text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Text</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A CDATA Section can be used within XML to include extended portions of 
	 unescaped text, such that the symbols &lt; and &amp; do not need escaping as 
	 they normally do within XML when used as text.
	 
	 <p><b>Note:</b> CDATA sections should not be used (without hiding) within HTML.</p>
	 
	 </apiDesc><example>
	 For example:
	 <codeblock>&lt;foo&gt;Here is a CDATA section: &lt;![CDATA[  &lt; &gt; &amp; ]]&gt; with all kinds of unescaped text. &lt;/foo&gt;</codeblock>
	 The only sequence which is not allowed within a CDATA section is the closing sequence of a CDATA section itself:
	 <codeblock>&lt;![CDATA[  ]]&gt; will cause an error   ]]&gt;</codeblock>
	 
	 </example></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core:Node"><apiName>Node</apiName><shortdesc>
	 A Node is an interface from which a number of DOM types inherit, and 
	 allows these various types to be treated (or tested) similarly.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.events:EventTarget</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A Node is an interface from which a number of DOM types inherit, and 
	 allows these various types to be treated (or tested) similarly. The 
	 following all inherit this interface and its methods and properties 
	 (though they may return null in particular cases where not relevant 
	 (or throw an exception when adding children to a node type for which 
	 no children can exist)): Document, Element, Attr, CharacterData (which 
	 Text, Comment, and CDATASection inherit), ProcessingInstruction, 
	 DocumentFragment, DocumentType, Notation, Entity, EntityReference
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:Node:ATTRIBUTE_NODE"><apiName>ATTRIBUTE_NODE</apiName><shortdesc>
		 The node is an Attr.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is an Attr.
		 
		 <p>The node represents an attribute of an element. An attribute node can have the following child node 
		 types: Text and EntityReference. An attribute does not appear as the child node of any other node type; 
		 note that it is not considered a child node of an element. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ATTRIBUTE_NODE"><linktext>W3C - Node.ATTRIBUTE_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:CDATA_SECTION_NODE"><apiName>CDATA_SECTION_NODE</apiName><shortdesc>
		 The node is a CDATASection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a CDATASection.
		 
		 <p>The node represents a CDATA section in the XML source. CDATA sections are used to escape blocks of text that 
		 would otherwise be recognized as markup. A CDATA section node cannot have any child nodes. A CDATA section node 
		 can appear as the child of the DocumentFragment, EntityReference, and Element nodes.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-CDATA_SECTION_NODE"><linktext>W3C - Node.CDATA_SECTION_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:COMMENT_NODE"><apiName>COMMENT_NODE</apiName><shortdesc>
		 The node is a Comment.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a Comment.
		 
		 <p>The node represents a comment in the XML document. A comment node cannot have any child nodes. A comment node can 
		 appear as the child of Document, DocumentFragment, Element, and EntityReference nodes. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-COMMENT_NODE"><linktext>W3C - Node.COMMENT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_FRAGMENT_NODE"><apiName>DOCUMENT_FRAGMENT_NODE</apiName><shortdesc>
		 The node is a DocumentFragment.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>11</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a DocumentFragment.
		 
		 <p>The node represents a document fragment. A document fragment node associates a node or subtree with a document 
		 without actually being contained within the document. A document fragment node can have the following child node 
		 types: Element, ProcessingInstruction, Comment, Text, CDATASection, and EntityReference. A DocumentFragment node 
		 cannot appear as the child of any node types. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_FRAGMENT_NODE"><linktext>W3C - Node.DOCUMENT_FRAGMENT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_NODE"><apiName>DOCUMENT_NODE</apiName><shortdesc>
		 The node is a Document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a Document.
		 
		 <p>The node represents a document object, which, as the root of the document tree, 
		 provides access to the entire XML document. It is created using the progID 
		 "Msxml2.DOMDocument", or through a data island using &lt;XML&gt; or &lt;SCRIPT LANGUAGE=XML&gt;. A document node can 
		 have the following child node types: Element (maximum of one), ProcessingInstruction, 
		 Comment, and DocumentType. A document node cannot appear as the child of any node types.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_NODE"><linktext>W3C - Node.DOCUMENT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_CONTAINED_BY"><apiName>DOCUMENT_POSITION_CONTAINED_BY</apiName><shortdesc>
		 The node is contained by the reference node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is contained by the reference node. A node which is contained is always following, too.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_CONTAINED_BY"><linktext>W3C - Node.DOCUMENT_POSITION_CONTAINED_BY</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_CONTAINS"><apiName>DOCUMENT_POSITION_CONTAINS</apiName><shortdesc>
		 The node contains the reference node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node contains the reference node. A node which contains is always preceding, too.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_CONTAINS"><linktext>W3C - Node.DOCUMENT_POSITION_CONTAINS</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_DISCONNECTED"><apiName>DOCUMENT_POSITION_DISCONNECTED</apiName><shortdesc>
		 The two nodes are disconnected.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The two nodes are disconnected. Order between disconnected nodes is always implementation-specific.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_DISCONNECTED"><linktext>W3C - Node.DOCUMENT_POSITION_DISCONNECTED</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_FOLLOWING"><apiName>DOCUMENT_POSITION_FOLLOWING</apiName><shortdesc>
		 The node follows the reference node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node follows the reference node.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_FOLLOWING"><linktext>W3C - Node.DOCUMENT_POSITION_FOLLOWING</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"><apiName>DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</apiName><shortdesc>
		 The determination of preceding versus following is implementation-specific.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>32</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The determination of preceding versus following is implementation-specific.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"><linktext>W3C - Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_PRECEDING"><apiName>DOCUMENT_POSITION_PRECEDING</apiName><shortdesc>
		 The second node precedes the reference node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The second node precedes the reference node.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_PRECEDING"><linktext>W3C - Node.DOCUMENT_POSITION_PRECEDING</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_TYPE_NODE"><apiName>DOCUMENT_TYPE_NODE</apiName><shortdesc>
		 The node is a DocumentType.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>10</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a DocumentType.
		 
		 <p>The node represents the document type declaration, indicated by the &lt;!DOCTYPE &gt; tag. A document type 
		 node can have the following child node types: Notation and Entity. A document type node can appear as the child 
		 of the Document node. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_TYPE_NODE"><linktext>W3C - Node.DOCUMENT_TYPE_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:ELEMENT_NODE"><apiName>ELEMENT_NODE</apiName><shortdesc>
		 The node is an Element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is an Element.
		 
		 <p>The node represents an element. An element node can have the following child node types: Element, 
		 Text, Comment, ProcessingInstruction, CDATASection, and EntityReference. An element node can be the 
		 child of the Document, DocumentFragment, EntityReference, and Element nodes. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ELEMENT_NODE"><linktext>W3C - Node.ELEMENT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:ENTITY_NODE"><apiName>ENTITY_NODE</apiName><shortdesc>
		 The node is an Entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is an Entity.
		 
		 <p>The node represents an expanded entity. An entity node can have child nodes that represent the expanded entity
		 (for example, Text and EntityReference nodes). An entity node can appear as the child of the DocumentType node. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ENTITY_NODE"><linktext>W3C - Node.ENTITY_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:ENTITY_REFERENCE_NODE"><apiName>ENTITY_REFERENCE_NODE</apiName><shortdesc>
		 The node is an EntityReference.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is an EntityReference.
		 
		 <p>The node represents a reference to an entity in the XML document. This applies to all entities, including 
		 character entity references. An entity reference node can have the following child node types: Element, 
		 ProcessingInstruction, Comment, Text, CDATASection, and EntityReference. An entity reference node can appear 
		 as the child of the Attribute, DocumentFragment, Element, and EntityReference nodes.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ENTITY_REFERENCE_NODE"><linktext>W3C - Node.ENTITY_REFERENCE_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:NOTATION_NODE"><apiName>NOTATION_NODE</apiName><shortdesc>
		 The node is a Notation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>12</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a Notation.
		 
		 <p>A node represents a notation in the document type declaration. A notation node cannot have any child nodes. A notation 
		 node can appear as the child of the DocumentType node. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-NOTATION_NODE"><linktext>W3C - Node.NOTATION_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:PROCESSING_INSTRUCTION_NODE"><apiName>PROCESSING_INSTRUCTION_NODE</apiName><shortdesc>
		 The node is a ProcessingInstruction.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a ProcessingInstruction.
		 
		 <p>The node represents a processing instruction from the XML document. A processing instruction node cannot have any
		 child nodes. A processing instruction node can appear as the child of the Document, DocumentFragment, Element, and EntityReference nodes. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-PROCESSING_INSTRUCTION_NODE"><linktext>W3C - Node.PROCESSING_INSTRUCTION_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:TEXT_NODE"><apiName>TEXT_NODE</apiName><shortdesc>
		 The node is a Text node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a Text node.
		 
		 <p>The node represents the text content of a tag. A text node cannot have any child nodes. A text node can appear as 
		 the child node of the Attribute, DocumentFragment, Element, and EntityReference nodes. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-TEXT_NODE"><linktext>W3C - Node.TEXT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:attributes:get"><apiName>attributes</apiName><shortdesc>
		 Returns an unordered collection of Attr nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NamedNodeMap</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an unordered collection of Attr nodes. 
		 If the element has no specified attributes, then the returned object 
		 has a length of 0 (zero).
		 
		 <p><b>Note:</b> Trying to modify an Attribute Node that originated 
		 from an inline event assignment (e.g. onclick=) is something developers should 
		 avoid. If you want to use it, be aware that assigning values through the 
		 element.attributeName syntax will assign the JavaScript value for the element. 
		 When read through the same syntax, it will return the latest JavaScript value 
		 for the element attribute, or if it hasn't been assigned yet, the function 
		 generated by parsing the element's inline event assignment.</p>
		 
		 <p><b>Note:</b> Style isn't a "true" HTML attribute node, but a 
		 CCSStyleDeclaration. You can however use the above .attributes syntaxes and 
		 DOM functions to control its value, as well as the element.style.cssText 
		 syntax that returns all CSS attributes, or element.style.CSSattributeName (eg 
		 element.style.position) to control a single CSS attribute. In FireFox, all 
		 the above correctly update the CCSStyleDeclaration object, the element's 
		 attribute nodes and the .attributes collection. Consider quirksmode for 
		 compatibility issues in other browsers (see link below)</p>
		 
		 </apiDesc><example>
		 Numerical indexing is useful for going through all of an element's attributes. The following 
		 example runs through the attribute nodes for the element in the document with id "p1", and 
		 prints each attribute's value.
		 <codeblock>
		 &lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
		 "http://www.w3.org/TR/html4/strict.dtd"&gt;
		 
		 &lt;html&gt;
		 
		 	&lt;head&gt;
		 		&lt;title&gt;Attributes example&lt;/title&gt;
		 		&lt;script type="text/javascript"&gt;
		 
		 			function showFirstAttr() {
		 				var firstPara = document.getElementById("p1");
		 				var outputText = document.getElementById("result");
		 
		 				// First, let's verify that the paragraph has some attributes    
		 				if (firstPara.hasAttributes()) {
		 					var attrs = firstPara.attributes;
		 					var text = ""; 
		 					for(var i=attrs.length-1; i&gt;=0; i--) {
		 						text += attrs[i].name + "-&gt;" + attrs[i].value;
		 					}
		 					outputText.value = text;
		 				} else {
		 					outputText.value = "No attributes to show"
		 				};
		 			}
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body&gt;
		 		&lt;p id="p1" style="color: green;"&gt;Sample Paragraph&lt;/p&gt;
		 
		 		&lt;form action=""&gt;
		 			&lt;p&gt;&lt;input type="button" value="Show first attribute name and value"
		 				onclick="showFirstAttr();"&gt;
		 			&lt;input id="result" type="text" value=""&gt;&lt;/p&gt;
		 		&lt;/form&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa922712.aspx"><linktext>MSDN - attributes Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.attributes"><linktext>MDC - Node.attributes</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-84CF096"><linktext>W3C - Node.attributes</linktext></link><link href="http://www.quirksmode.org/dom/w3c_core.html#attributes"><linktext>Quirksmode - Attributes</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:baseName:get"><apiName>baseName</apiName><shortdesc>
		 Returns the base name for the name qualified with the namespace.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the base name for the name qualified with the namespace.
		 
		 <p>It returns the right-hand side of a namespace qualified name. 
		 For example, it returns yyy for the element &lt;xxx:yyy&gt;. It always 
		 returns a non-empty string.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924236.aspx"><linktext>MSDN - baseName Property</linktext></link><link href="dom.core.xml#Node/localName"><linktext>localName</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:baseURI:get"><apiName>baseURI</apiName><shortdesc>
		 The absolute base URI of this node or null if the implementation 
		 wasn't able to obtain an absolute URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The absolute base URI of this node or null if the implementation 
		 wasn't able to obtain an absolute URI. This value is computed as 
		 described in Base URIs. However, when the Document supports the 
		 feature "HTML" [DOM Level 2 HTML], the base URI is computed using 
		 first the value of the href attribute of the HTML BASE element if 
		 any, and the value of the documentURI  attribute from the Document 
		 interface otherwise.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.baseURI"><linktext>MDC - Node.baseURI</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-baseURI"><linktext>W3C - Node.baseURI</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:childNodes:get"><apiName>childNodes</apiName><shortdesc>
		 Returns an ordered collection of node objects that are children of 
		 the current element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NodeList</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an ordered collection of node objects that are children of 
		 the current element. If the element has no children, then the returned 
		 NodeList contains no node. 
		 
		 <p><b>Note:</b> The items in the collection of nodes are objects 
		 and not strings. To get data from those node objects, you must use their 
		 properties (e.g. elementNodeReference.childNodes[1].nodeName to get the name, etc.). </p>
		 
		 <p><b>Note:</b> The document object itself has 2 children: the 
		 Doctype declaration and the root element, typically referred to as documentElement. 
		 (In (X)HTML documents this is the HTML element.) </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // parg is an object reference to a &lt;p&gt; element
		 if (parg.hasChildNodes()) {
		 	// So, first we check if the object is not empty, if the object has child nodes
		 	var children = parg.childNodes;
		 	for (var i = 0; i &lt; children.length; i++) {
		 		// do something with each child as children[i]
		 		// NOTE: List is live, Adding or removing children will change the list
		 	};
		 };</codeblock>
		 
		 <codeblock>
		 // This is one way to remove all children from a node
		 // box is an object refrence to an element with children
		 while (box.firstChild) {
		 	//The list is LIVE so it will re-index each call
		 	box.removeChild(box.firstChild);
		 };</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923287.aspx"><linktext>MSDN - childNodes Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.childNodes"><linktext>MDC - Node.childNodes</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1451460987"><linktext>W3C - Node.childNodes</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:dataType:get"><apiName>dataType</apiName><shortdesc>
		 Specifies the data type for this node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc>
		 Specifies the data type for this node.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>NODE_ATTRIBUTE</entry>
		 		<entry>Contains the string representation of the data type specifier included in the schema, or Null if no data type is specified.</entry>
		 	</row><row>
		 		<entry>NODE_CDATA_SECTION, NODE_COMMENT, NODE_DOCUMENT, NODE_DOCUMENT_FRAGMENT, NODE_DOCUMENT_TYPE, NODE_ENTITY, NODE_NOTATION, NODE_PROCESSING_INSTRUCTION, NODE_TEXT</entry>
		 		<entry>Contains the constant string value "string." These node types do not have data types, so the dataType property cannot be set for these node types. Attempts to set this property are ignored. </entry>
		 	</row><row>
		 		<entry>NODE_ELEMENT</entry>
		 		<entry>Contains the string representation of the data type specifier included on the instance of the element or in the schema, or Null if no data type is specified.</entry>
		 	</row><row>
		 		<entry>NODE_ENTITY_REFERENCE</entry>
		 		<entry>Contains the string representation of the data type specifier for the referenced entity. This is limited to entities with a single data type on the root level element of the subtree corresponding to the entity. Contains Null if no data type is specified. It is not possible to set the data type of an entity reference. The data type must be set directly on the referenced element. Attempts to set the value of the dataType property are ignored. </entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924038.aspx"><linktext>MSDN - dataType Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:definition:get"><apiName>definition</apiName><shortdesc>
		 Returns the definition of the node in the document type definition (DTD) or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the definition of the node in the document type definition (DTD) or schema.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>NODE_ENTITY_REFERENCE</entry>
		 		<entry>Returns the node for the entity referenced; that is, the ENTITY element that was defined for a given ENTITYREF. Given the ENTITYREF &amp;x;, for example, the definition property returns the node in the DOCTYPE node's entity collection that defines the corresponding ENTITY: &lt;!ENTITY x "y"&gt;. </entry>
		 	</row><row>
		 		<entry>NODE_ENTITY</entry>
		 		<entry>For unparsed entities, returns the NOTATION definition from the DOCTYPE node's notation collection. For example, given the ENTITY &lt;!ENTITY networth SYSTEM "networth.xls" NDATA XLS&gt;, the definition property returns the node corresponding to the notation &lt;!NOTATION XLS PUBLIC "http://example.microsoft.com/office/excel"&gt;. For parsed entities, returns Null. </entry>
		 	</row><row>
		 		<entry>NODE_ATTRIBUTE</entry>
		 		<entry>Returns the XML-Data Schema AttributeType for a given ATTRIBUTE node. For example, the definition property for the attribute myAttribute="123" returns the node corresponding to the element &lt;AttributeType name= "myAttribute"&gt; in the schema. Returns Null when a DTD is used or when no schema is present. </entry>
		 	</row><row>
		 		<entry>NODE_ELEMENT</entry>
		 		<entry>Returns the XML-Data Schema ElementType for a given ELEMENT node. For example, given the element &lt;myelement&gt;, the definition property returns the node &lt;ElementType name="myelement"&gt; in the specified external schema. Returns Null when a DTD is used or when no schema is present. </entry>
		 	</row><row>
		 		<entry>NODE_CDATA_SECTION, NODE_COMMENT, NODE_DOCUMENT, NODE_DOCUMENT_FRAGMENT, NODE_DOCUMENT_TYPE, NODE_NOTATION, NODE_PROCESSING_INSTRUCTION, NODE_TEXT</entry>
		 		<entry>Returns Null.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa925478.aspx"><linktext>MSDN - definition Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:firstChild:get"><apiName>firstChild</apiName><shortdesc>
		 Returns the node's first child in the tree, or null if the node is 
		 childless.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node's first child in the tree, or null if the node is 
		 childless. If the node is a Document, it returns the first node in 
		 the list of its direct children.
		 
		 <p><b>Note:</b> When applied to a document node, the returned node is not 
		 necessarily the root element of the document; it can also be a 
		 processing instruction, for example. If you need the root element, 
		 use document.documentElement.</p>
		 
		 </apiDesc><example>
		 This example demonstrates the use of firstChild and how whitespace nodes might interfere with using this property.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.firstChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 <p>In the above, the alert will show '#text' because a text node is inserted to maintain 
		 the whitespace between the end of the opening &lt;p&gt; and &lt;span&gt; tags. Any whitespace will 
		 cause the #text node to be inserted, from a single space to any number of spaces, returns, 
		 tabs, and so on.</p>
		 
		 <p>Another #text node is inserted between the closing &lt;/span&gt; and &lt;/p&gt; tags.</p>
		 
		 <p>If this whitespace is removed from the source, the #text nodes are not inserted and 
		 the span element becomes the paragraph's first child.</p>
		 
		 <codeblock>
		 &lt;p id="para-01"&gt;&lt;span&gt;First span&lt;/span&gt;&lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.firstChild.nodeName)
		 &lt;/script&gt;</codeblock>
		 
		 <p>Now the alert will show 'SPAN'.</p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926506.aspx"><linktext>MSDN - firstChild Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.firstChild"><linktext>MDC - Node.firstChild</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-169727388"><linktext>W3C - Node.firstChild</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:lastChild:get"><apiName>lastChild</apiName><shortdesc>
		 Returns the last child of a node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the last child of a node. Returns null if there are no child elements. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var tr = document.getElementById("row1");
		 corner_td = tr.lastChild;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923308.aspx"><linktext>MSDN - lastChild Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.lastChild"><linktext>MDC - Node.lastChild</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-61AD09FB"><linktext>W3C - Node.lastChild</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:localName:get"><apiName>localName</apiName><shortdesc>
		 Returns the local part of the qualified name of this node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the local part of the qualified name of this node. 
		 
		 <p><b>Note:</b> The local name of a node is that part of the node's 
		 qualified name that comes after the colon. Qualified names are typically used 
		 in XML as part of the namespace(s) of the particular XML documents. For 
		 example, in the qualified name ecomm:partners, partners is the local name 
		 and ecomm is the prefix: 
		 
		 <codeblock>
		 &lt;ecomm:business id="soda_shop" type="brick_n_mortar"&gt;
		 &lt;ecomm:partners&gt;
		 &lt;ecomm:partner id="1001"&gt;Tony's Syrup Warehouse&lt;/ecomm:partner&gt;
		 &lt;/ecomm:partners&gt;
		 &lt;/ecomm:business&gt;</codeblock></p>
		 
		 <p>For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes 
		 created with a DOM Level 1 method, such as document.createElement, localName 
		 is always null.</p>
		 
		 </apiDesc><example>
		 (Must be served with XML content type, such as text/xml or application/xhtml+xml.) 
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"
		 	xmlns:svg="http://www.w3.org/2000/svg"&gt;
		 &lt;head&gt;
		 	&lt;script type="application/javascript"&gt;&lt;![CDATA[
		 	function test() {
		 		var text = document.getElementById('text');
		 		var circle = document.getElementById('circle');
		 
		 		text.value = "&lt;svg:circle&gt; has:\n" +
		 			"localName = '" + circle.localName + "'\n" +
		 			"namespaceURI = '" + circle.namespaceURI + "'";
		 		}
		 	]]&gt;&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onload="test()"&gt;
		 
		 	&lt;svg:svg version="1.1"
		 		width="100px" height="100px"
		 		viewBox="0 0 100 100"&gt;
		 		&lt;svg:circle cx="50" cy="50" r="30" style="fill:#aaa" id="circle"/&gt;
		 	&lt;/svg:svg&gt;
		 	&lt;textarea id="text" rows="4" cols="55"/&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.localName"><linktext>MDC - Node.localName</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSLocalN"><linktext>W3C - Node.localName</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:namespaceURI:get"><apiName>namespaceURI</apiName><shortdesc>
		 The namespace URI of the node, or null if it is unspecified (read-only).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The namespace URI of the node, or null if it is unspecified (read-only). 
		 When the node is a document, it returns the XML namespace for the 
		 current document.
		 
		 <p><b>Note:</b> This is not a computed value that is the result of a namespace lookup 
		 based on an examination of the namespace declarations in scope. It is 
		 merely the namespace URI given at creation time.</p>
		 
		 <p><b>Note:</b> For nodes of any nodeType other than ELEMENT_NODE and ATTRIBUTE_NODE, 
		 and nodes created with a DOM Level 1 method, such as document.createElement, 
		 the value of namespaceURI is always null.</p>
		 
		 <p><b>Note:</b> You can create an element with the specified namespaceURI using the DOM 
		 Level 2 method document.createElementNS.</p>
		 
		 <p><b>Note:</b> Per the Namespaces in XML specification, an attribute does not inherit 
		 its namespace from the element it is attached to. If an attribute is not 
		 explicitly given a namespace, it has no namespace.</p>
		 
		 <p><b>Note:</b> The DOM does not handle or enforce namespace validation per se. It is up 
		 to the DOM application to do any validation necessary. Note too that the 
		 namespace prefix, once it is associated with a particular node, cannot 
		 be changed.</p>
		 
		 </apiDesc><example>
		 In this snippet, a node is being examined for its localName and its namespaceURI. If the namespaceURI 
		 returns the XUL namespace and the localName returns "browser", then the node is understood to be a 
		 XUL <codeph>&lt;browser/&gt;</codeph>.
		 <codeblock>
		 if (node.localName == "browser" &amp;&amp; 
		 	node.namespaceURI == "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul") {
		 	// this is a XUL browser 
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923270.aspx"><linktext>MSDN - namespaceURI Property (IXMLDOMNode)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.namespaceURI"><linktext>MDC - Node.namespaceURI</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSname"><linktext>W3C - Node.namespaceURI</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nextSibling:get"><apiName>nextSibling</apiName><shortdesc>
		 Returns the node immediately following the specified one in its 
		 parent's childNodes list, or null if the specified node is the 
		 last node in that list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node immediately following the specified one in its 
		 parent's childNodes list, or null if the specified node is the 
		 last node in that list. 
		 
		 <p><b>Note (Mozilla):</b> Gecko-based browsers insert text nodes into a document to represent 
		 whitespace in the source markup. Therefore a node obtained for example via 
		 firstChild or previousSibling may refer to a whitespace text node, rather 
		 than the actual element the author intended to get. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-01').nextSibling;
		 	document.write('&lt;p&gt;Siblings of div-01&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.nextSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;
		 </codeblock>
		 
		 <codeblock>
		 /~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		 	The following is written to the page as it loads:
		 
		 		Siblings of div-01
		 
		 		1. #text
		 		2. DIV
		 		3. #text
		 		4. SCRIPT
		 		5. P
		 		6. OL
		 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
		 </codeblock>
		 
		 In the above example, it can be seen that #text nodes are inserted in the DOM where whitespace 
		 occurs in the markup between tags (i.e. after the closing tag of an element and before the 
		 opening tag of the next). No whitespace is created between the elements inserted by the 
		 document.write statement.
		 
		 <p>The possible inclusion of text nodes in the DOM must be allowed for when traversing the DOM 
		 using nextSibling. See the resources in the Notes section.</p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa922802.aspx"><linktext>MSDN - nextSibling Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.nextSibling"><linktext>MDC - Node.nextSibling</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6AC54C2F"><linktext>W3C - Node.nextSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeName:get"><apiName>nodeName</apiName><shortdesc>
		 Returns the name of the current node as a string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the name of the current node as a string. 
		 
		 <p><b>Note:</b> Here are the returned values for different types of nodes:
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Interface</entry><entry>nodeName</entry></row></thead><tbody><row>
		 		<entry>Attr</entry><entry>same as Attr.name</entry>
		 	</row><row>
		 		<entry>CDATASection</entry><entry>"#cdata-section"</entry>
		 	</row><row>
		 		<entry>Comment</entry><entry>"#comment"</entry>
		 	</row><row>
		 		<entry>Document</entry><entry>"#document"</entry>
		 	</row><row>
		 		<entry>DocumentFragment</entry><entry>"#document-fragment"</entry>
		 	</row><row>
		 		<entry>DocumentType</entry><entry>same as DocumentType.name</entry>
		 	</row><row>
		 		<entry>Element</entry><entry>same as Element.tagName</entry>
		 	</row><row>
		 		<entry>Entity</entry><entry>entity name</entry>
		 	</row><row>
		 		<entry>EntityReference</entry><entry>name of entity reference</entry>
		 	</row><row>
		 		<entry>Notation</entry><entry>notation name</entry>
		 	</row><row>
		 		<entry>ProcessingInstruction</entry><entry>same as ProcessingInstruction.target</entry>
		 	</row><row>
		 		<entry>text</entry><entry>"#text"</entry>
		 	</row></tbody></tgroup></adobetable>
		 </p>
		 
		 </apiDesc><example>
		 Given the following markup: 
		 <codeblock>
		 &lt;div id="d1"&gt;hello world&lt;/div&gt;
		 &lt;input type="text" id="t"/&gt;</codeblock>
		 
		 <p>and the following script: </p>
		 
		 <codeblock>
		 var div1 = document.getElementById("d1");
		 var text_field = document.getElementById("t"); 
		 text_field.value = div1.nodeName;</codeblock>
		 
		 <p>In XHTML (or any other XML format), text_field's value would read "div". However, in HTML, 
		 text_field's value would read "DIV". </p>
		 
		 <p>Note that tagName property could have been used instead, since nodeName has the same value 
		 as tagName for an element. Bear in mind, however, that nodeName will return #text for text 
		 nodes while tagName will return undefined. </p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924892.aspx"><linktext>MSDN - nodeName Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.nodeName"><linktext>MDC - Node.nodeName</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-F68D095"><linktext>W3C - Node.nodeName</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodePrincipal:get"><apiName>nodePrincipal</apiName><shortdesc>
		 Returns the nsIPrincipal  object representing current security 
		 context of the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIPrincipal</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the nsIPrincipal  object representing current security 
		 context of the node.
		 
		 <p><b>Note:</b> This property exists on all nodes (HTML, XUL, SVG, MathML, 
		 etc.), but only if the script trying to use it has UniversalXPConnect privileges.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.nodePrincipal"><linktext>MDC - Node.nodePrincipal</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeType:get"><apiName>nodeType</apiName><shortdesc>
		 Returns an integer code representing the type of the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns an integer code representing the type of the node. 
		 
		 </apiDesc><example>
		 This example checks if the first node inside the document element is a comment node, 
		 and if it is not, displays a message.
		 <codeblock>
		 var node = document.documentElement.firstChild;
		 if(node.nodeType != Node.COMMENT_NODE)
		 alert("You should comment your code well!");</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.nodeType"><linktext>MDC - Node.nodeType</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-111237558"><linktext>W3C - Node.nodeType</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeTypeString:get"><apiName>nodeTypeString</apiName><shortdesc>
		 Returns the node type in string form.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node type in string form.
		 
		 </apiDesc><example>
		 This value depends on the value of the nodeType property.
		 <codeblock>NODE_ATTRIBUTE == "attribute"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924285.aspx"><linktext>MSDN - nodeTypeString Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeTypedValue:get"><apiName>nodeTypedValue</apiName><shortdesc>
		 Contains the node value expressed in its defined data type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc>
		 Contains the node value expressed in its defined data type.
		 
		 <p><b>Note:</b> This value depends on the value of the  nodeType property of the IXMLDOMNode.</p>
		 
		 <p><b>Note:</b> The data type for this node is defined in its  dataType Property. 
		 This property also depends on the value of the node type, in the  nodeType property. </p>
		 
		 <p><b>Note:</b> Although you can explicitly set the nodeTypedValue property with a 
		 particular data type in the VARIANT, the set operation does not change the data type. The value 
		 in the VARIANT is coerced to the data type specified in the dataType property, and the set 
		 operation returns an error if the type coercion is not possible. </p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>NODE_ATTRIBUTE</entry>
		 		<entry>Returns the value in the data representation of the type specified in the schema for the attribute. (Data types are specified using the dt:dt attribute, and because attributes cannot be applied to attributes, the attribute's data type can be specified only in the schema.) If no type was specified, returns a string identical to the  nodeValue property. If the new value is not of the type specified in the schema or cannot be coerced to the type specified in the schema, then an error occurs. </entry>
		 	</row><row>
		 		<entry>NODE_CDATA_SECTION, NODE_COMMENT, NODE_DOCUMENT, NODE_DOCUMENT_FRAGMENT, NODE_DOCUMENT_TYPE, NODE_ENTITY, NODE_NOTATION, NODE_PROCESSING_INSTRUCTION</entry>
		 		<entry>Returns a string that is equal to the nodeValue property. These node types do not have data types. </entry>
		 	</row><row>
		 		<entry>NODE_ELEMENT</entry>
		 		<entry>eturns the value in the data representation of the type specified on the element instance (using the dt:dt attribute) or specified in the schema. If no type was specified on the instance or in the schema, returns a string identical to the  nodeValue property. If the element has an attribute data type, returns null.</entry>
		 	</row><row>
		 		<entry>NODE_ENTITY_REFERENCE</entry>
		 		<entry>Returns the value in the data representation of the type specified for the referenced entity. This is limited to entities with a single data type on the root level element of the subtree corresponding to the entity. If no data type was specified, returns a string identical to the  nodeValue property. </entry>
		 	</row><row>
		 		<entry>NODE_TEXT</entry>
		 		<entry>Returns the value in the data representation of the type of the containing element. If the containing element was not typed, returns a string identical to the  nodeValue property. </entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Data Type Mapping</b></p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 	
		 <tgroup cols="2"><thead><row><entry>VARIANT returned</entry><entry>Corresponding element data type</entry></row></thead><tbody><row>
		 		<entry>VT_BSTR</entry>
		 		<entry>string</entry>
		 	</row><row>
		 		<entry>VT_BSTR</entry>
		 		<entry>number</entry>
		 	</row><row>
		 		<entry>VT_I4</entry>
		 		<entry>Int</entry>
		 	</row><row>
		 		<entry>VT_CY</entry>
		 		<entry>Fixed.14.4</entry>
		 	</row><row>
		 		<entry>VT_BOOL</entry>
		 		<entry>Boolean</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>dateTime</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>dateTime.tz</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>Date</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>Time</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>Time.tz</entry>
		 	</row><row>
		 		<entry>VT_I1</entry>
		 		<entry>i1 byte</entry>
		 	</row><row>
		 		<entry>VT_I2</entry>
		 		<entry>i2</entry>
		 	</row><row>
		 		<entry>VT_I4</entry>
		 		<entry>i4, int</entry>
		 	</row><row>
		 		<entry>VT_UI1</entry>
		 		<entry>ui1</entry>
		 	</row><row>
		 		<entry>VT_UI2</entry>
		 		<entry>ui2</entry>
		 	</row><row>
		 		<entry>VT_UI4</entry>
		 		<entry>ui4</entry>
		 	</row><row>
		 		<entry>VT_FLOAT</entry>
		 		<entry>r4</entry>
		 	</row><row>
		 		<entry>VT_DOUBLE</entry>
		 		<entry>r8, float</entry>
		 	</row><row>
		 		<entry>VT_BSTR</entry>
		 		<entry>uuid</entry>
		 	</row><row>
		 		<entry>VT_ARRAY</entry>
		 		<entry>bin.hex</entry>
		 	</row><row>
		 		<entry>VT_ARRAY</entry>
		 		<entry>bin.base64</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923262.aspx"><linktext>MSDN - nodeTypedValue Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeValue:get"><apiName>nodeValue</apiName><shortdesc>
		 Returns or sets the value of the current node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised 
		 when the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>DOMSTRING_SIZE_ERR: Raised when it 
		 would return more characters than fit in a DOMString variable 
		 on the implementation platform.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Returns or sets the value of the current node.
		 
		 <p><b>Note:</b> For the document itself, nodeValue returns null. For text, comment, 
		 and CDATA nodes, nodeValue returns the content of the node. For 
		 attribute nodes, the value of the attribute is returned.</p>
		 
		 <p><b>Note:</b> The following table shows the return values for different elements:
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Interface</entry><entry>nodeValue</entry></row></thead><tbody><row>
		 		<entry>Attr</entry><entry>value of attribute</entry>
		 	</row><row>
		 		<entry>CDATASection</entry><entry>content of the CDATA Section</entry>
		 	</row><row>
		 		<entry>Comment</entry><entry>content of the comment</entry>
		 	</row><row>
		 		<entry>Document</entry><entry>null</entry>
		 	</row><row>
		 		<entry>DocumentFragment</entry><entry>null</entry>
		 	</row><row>
		 		<entry>DocumentType</entry><entry>null</entry>
		 	</row><row>
		 		<entry>Element</entry><entry>null</entry>
		 	</row><row>
		 		<entry>Entity</entry><entry>null</entry>
		 	</row><row>
		 		<entry>EntityReference</entry><entry>null</entry>
		 	</row><row>
		 		<entry>Notation</entry><entry>null</entry>
		 	</row><row>
		 		<entry>ProcessingInstruction</entry><entry>entire content excluding the target</entry>
		 	</row><row>
		 		<entry>text</entry><entry>content of the text node</entry>
		 	</row></tbody></tgroup></adobetable>
		 </p>
		 
		 <p><b>Note:</b> When nodeValue is defined to be null, setting it has no effect.</p> 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924151.aspx"><linktext>MSDN - nodeValue Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.nodeValue"><linktext>MDC - Node.nodeValue</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-F68D080"><linktext>W3C - Node.nodeValue</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:ownerDocument:get"><apiName>ownerDocument</apiName><shortdesc>
		 The Document object associated with this node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 The Document object associated with this node. This is also the 
		 Document object used to create new nodes. 
		 
		 <p><b>Note:</b> When this node is a 
		 Document or a DocumentType which is not used with any Document 
		 yet, this is null.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // given a node "p", get the top-level HTML child 
		 // of the document object
		 d = p.ownerDocument; 
		 html = d.documentElement;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa922810.aspx"><linktext>MSDN - ownerDocument Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.ownerDocument"><linktext>MDC - Node.ownerDocument</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#node-ownerDoc"><linktext>W3C - Node.ownerDocument</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:parentNode:get"><apiName>parentNode</apiName><shortdesc>
		 Returns the parent of the specified node in the DOM tree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the parent of the specified node in the DOM tree. 
		 
		 <p><b>Note:</b> parentNode returns null for the following node types: Attr, Document, DocumentFragment, Entity, and Notation. </p>
		 
		 <p><b>Note:</b> It also returns null if the node has just been created and is not yet attached to the tree. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if (node.parentNode) {
		 	// remove a node from the tree, unless it's not in the tree already
		 	node.parentNode.removeChild(node);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923284.aspx"><linktext>MSDN - parentNode Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.parentNode"><linktext>MDC - Node.parentNode</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1060184317"><linktext>W3C - Node.parentNode</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:parsed:get"><apiName>parsed</apiName><shortdesc>
		 Indicates the parsed status of the node and child nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates the parsed status of the node and child nodes.
		 
		 <p><b>Note:</b> During asynchronous access, not all of the document tree may be available. 
		 Before performing some operations, such as Extensible Stylesheet Language Transformations (XSLT) or 
		 pattern-matching operations, it is useful to know whether the entire tree below this node is available 
		 for processing. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926456.aspx"><linktext>MSDN - parsed Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:prefix:get"><apiName>prefix</apiName><shortdesc>
		 Returns the namespace prefix of the specified node, or null if no 
		 prefix is specified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified prefix contains an illegal character according to the XML 
		 version in use specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the specified 
		 prefix is malformed per the Namespaces in XML specification, if the 
		 namespaceURI of this node is null, if the specified prefix is "xml" 
		 and the namespaceURI of this node is different from 
		 "http://www.w3.org/XML/1998/namespace", if this node is an attribute 
		 and the specified prefix is "xmlns" and the namespaceURI of this node 
		 is different from "http://www.w3.org/2000/xmlns/", or if this node is 
		 an attribute and the qualifiedName of this node is "xmlns" 
		 [XML Namespaces].
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Returns the namespace prefix of the specified node, or null if no 
		 prefix is specified. 
		 
		 <p><b>Note:</b> This will only work when a namespace-aware parser 
		 is used, i.e. when a document is served with an XML mime-type. This will not 
		 work for HTML documents. </p>
		 
		 </apiDesc><example>
		 The following alerts "x". 
		 <codeblock>&lt;x:div onclick="alert(this.prefix)"/&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa922812.aspx"><linktext>MSDN - prefix Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.prefix"><linktext>MDC - Node.prefix</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSPrefix"><linktext>W3C - Node.prefix</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:previousSibling:get"><apiName>previousSibling</apiName><shortdesc>
		 Returns the node immediately preceding the specified one in its 
		 parent's childNodes list, null if the specified node is the first 
		 in that list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node immediately preceding the specified one in its 
		 parent's childNodes list, null if the specified node is the first 
		 in that list. 
		 
		 <p><b>Note (Mozilla):</b> Gecko-based browsers insert text nodes into a document to represent 
		 whitespace in the source markup. Therefore a node obtained for 
		 example via firstChild or previousSibling may refer to a whitespace 
		 text node, rather than the actual element the author intended to get.</p>
		 
		 <p><b>Note:</b> To navigate the opposite way through the child nodes list use element.nextSibling. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // &lt;a&gt;&lt;b1 id="b1"/&gt;&lt;b2 id="b2"/&gt;&lt;/a&gt;
		 alert(document.getElementById("b1").previousSibling); // null
		 alert(document.getElementById("b2").previousSibling.id); // "b1"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923340.aspx"><linktext>MSDN - previousSibling Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.previousSibling"><linktext>MDC - Node.previousSibling</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-640FB3C8"><linktext>W3C - Node.previousSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:specified:get"><apiName>specified</apiName><shortdesc>
		 Indicates whether the node (usually an attribute) is explicitly specified or derived 
		 from a default value in the document type definition (DTD) or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates whether the node (usually an attribute) is explicitly specified or derived 
		 from a default value in the document type definition (DTD) or schema.
		 
		 <p>Only returns true for attribute nodes if the attribute was specified directly on the element. 
		 Returns false for default attributes and all other node types.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924210.aspx"><linktext>MSDN - specified Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:text:get"><apiName>text</apiName><shortdesc>
		 Represents the text content of the node or the concatenated text representing the node and its descendants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the text content of the node or the concatenated text representing the node and its descendants.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>NODE_ATTRIBUTE, NODE_DOCUMENT, NODE_ENTITY</entry>
		 		<entry>Returns a string representing the value of the node. This is the concatenated text of all subnodes with entities expanded. </entry>
		 	</row><row>
		 		<entry>NODE_CDATA_SECTION, NODE_COMMENT, NODE_PROCESSING_INSTRUCTION, NODE_TEXT</entry>
		 		<entry>Returns the text contained in the node, which is the same as the  nodeValue property.</entry>
		 	</row><row>
		 		<entry>NODE_DOCUMENT_TYPE, NODE_NOTATION</entry>
		 		<entry>Returns the empty string (""). These node types do not have associated text. </entry>
		 	</row><row>
		 		<entry>NODE_DOCUMENT_FRAGMENT</entry>
		 		<entry>Returns the text comprised of the concatenation of all descendant nodes.</entry>
		 	</row><row>
		 		<entry>NODE_ELEMENT</entry>
		 		<entry>Contains a string that represents the element content. Note that this will also include the text content from all child elements, concatenated in document order. For example, consider the following XML: 
		 			<codeblock>&lt;count&gt;
  &lt;item&gt;one&lt;/item&gt;
  &lt;item&gt;two&lt;/item&gt;
  &lt;item&gt;three&lt;/item&gt;

  &lt;item&gt;four&lt;/item&gt;
&lt;/count&gt;
		 			</codeblock>
		 			The text property for the &lt;count&gt; element contains the value "one two three four".
		 		</entry>
		 	</row><row>
		 		<entry>NODE_ENTITY_REFERENCE</entry>
		 		<entry>Returns the string representation of the entity reference.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note:</b> When concatenated, the text represents the contents of text or CDATA nodes. All 
		 concatenated text nodes are normalized according to xml:space attributes and the value of the preserveWhiteSpace 
		 switch. Concatenated CDATA text is not normalized. (Child nodes that contain NODE_COMMENT and 
		 NODE_PROCESSING_INSTRUCTION nodes are not concatenated.) </p>
		 
		 <p><b>Note:</b> Retrieves and sets the string representing the text contents of this node or the 
		 concatenated text representing this node and its descendants.</p>
		 
		 <p><b>Note:</b> For more precise control over text manipulation in an XML document, use the lower-level 
		 nodeValue property, which returns the raw text associated with a NODE_TEXT node.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;root att="   123   a   &lt;   "&gt;
		 	&lt;a&gt;   a   a   &lt;/a&gt;
		 	&lt;!--   comment   b   --&gt;
		 	&lt;?pi   pi   c   ?&gt;
		 
		 	&lt;![CDATA[   cdata   d   ]]&gt;
		 	e   f
		 &lt;/root&gt;</codeblock>
		 
		 <p>The text property for the root element returns the following concatenated text.</p>
		 
		 <codeblock>"a a   cdata   d    e f"</codeblock>
		 
		 <p>Note that the white space within the CDATA node is preserved.</p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924259.aspx"><linktext>MSDN - text Property</linktext></link><link href="dom.core.xml#Node/textContent"><linktext>textContent</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:textContent:get"><apiName>textContent</apiName><shortdesc>
		 Gets or sets the text content of a node and its descendants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised 
		 when the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>DOMSTRING_SIZE_ERR: Raised when it 
		 would return more characters than fit in a DOMString variable on 
		 the implementation platform.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gets or sets the text content of a node and its descendants.
		 
		 <p><b>Note:</b> textContent returns null if the element is a document, a document 
		 type, or a notation. To grab all of the text and CDATA data for the 
		 whole document, one could usedocument.documentElement.textContent.</p>
		 
		 <p><b>Note:</b> If the node is a CDATA section, a comment, a processing instruction, 
		 or a text node, textContent returns the text inside this node (the nodeValue).</p>
		 
		 <p><b>Note:</b> For other node types, textContent returns the concatenation of the 
		 textContent attribute value of every child node, excluding comments 
		 and processing instruction nodes. This is an empty string if the node 
		 has no children.</p>
		 
		 <p><b>Note:</b> Setting this property on a node removes all of its children and replaces 
		 them with a single text node with the given value.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Given the following HTML fragment:
		 //   &lt;div id="divA"&gt;This is &lt;span&gt;some&lt;/span&gt; text&lt;/div&gt;
		 
		 // Get the text content:
		 var text = document.getElementById("divA").textContent;
		 // |text| is set to "This is some text".
		 
		 // Set the text content:
		 document.getElementById("divA").textContent = "This is some text";
		 // The HTML for divA is now:
		 //   &lt;div id="divA"&gt;This is some text&lt;/div&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent"><linktext>W3C - Node.textContent</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:xml:get"><apiName>xml</apiName><shortdesc>
		 Contains the XML representation of the node and all its descendants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Contains the XML representation of the node and all its descendants.
		 
		 <p><b>Note:</b> The xml property always returns a Unicode string. That is, the xml property 
		 for DOMDocument converts the document from its original encoding to Unicode. As a result, the original 
		 encoding attribute is removed. For example, &lt;?xml version="1.0" encoding="UTF-8"?&gt; appears in the xml 
		 property as follows.</p>
		 
		 <codeblock>&lt;?xml version="1.0"?&gt;</codeblock>
		 
		 <p>If the original encoding was not removed by the xml property, the following line returns an error indicating the parser cannot switch from Unicode to UTF-8 encoding.</p>
		 
		 <codeblock>xmlDoc.loadxml(xmlDoc.xml);</codeblock>
		 
		 <p>If you use the save Method, the original encoding is preserved. For example, if you load a document in Microsoft® Windows® 1252 encoding, it will be saved in that format. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923294.aspx"><linktext>MSDN - xml Property</linktext></link><link href="dom.core.xml#Document/save()"><linktext>dom.core.Document.save()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DOMError"><apiName>DOMError</apiName><shortdesc>
	 DOMError is an interface that describes an error.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 DOMError is an interface that describes an error.
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:DOMError:SEVERITY_ERROR"><apiName>SEVERITY_ERROR</apiName><shortdesc>
		 The severity of the error described by the DOMError is error.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The severity of the error described by the DOMError is error.
		 
		 <p>A SEVERITY_ERROR  may not cause the processing to stop if the error 
		 can be recovered, unless DOMErrorHandler.handleError()  returns false.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-error"><linktext>W3C - DOMError.SEVERITY_ERROR</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:SEVERITY_FATAL_ERROR"><apiName>SEVERITY_FATAL_ERROR</apiName><shortdesc>
		 The severity of the error described by the DOMError is fatal error.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The severity of the error described by the DOMError is fatal error.
		 
		 <p>A SEVERITY_FATAL_ERROR will cause the normal processing to stop. 
		 The return value of DOMErrorHandler.handleError() is ignored unless 
		 the implementation chooses to continue, in which case the behavior 
		 becomes undefined.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-fatal-error"><linktext>W3C - DOMError.SEVERITY_FATAL_ERROR</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:SEVERITY_WARNING"><apiName>SEVERITY_WARNING</apiName><shortdesc>
		 The severity of the error described by the DOMError is warning.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The severity of the error described by the DOMError is warning.
		 
		 <p>A SEVERITY_WARNING will not cause the processing to stop, unless 
		 DOMErrorHandler.handleError() returns false.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-warning"><linktext>W3C - DOMError.SEVERITY_WARNING</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:location:get"><apiName>location</apiName><shortdesc>
		 The location of the error.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMLocator</apiValueClassifier></apiValueDef><apiDesc>
		 The location of the error.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.location"><linktext>MDC - DOMError.location</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-location"><linktext>W3C - DOMError.location</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:message:get"><apiName>message</apiName><shortdesc>
		 An implementation specific string describing the error that occurred.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An implementation specific string describing the error that occurred.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.message"><linktext>MDC - DOMError.message</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-message"><linktext>W3C - DOMError.message</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:relatedData:get"><apiName>relatedData</apiName><shortdesc>
		 The related DOMError.type dependent data if any.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMObject</apiValueClassifier></apiValueDef><apiDesc>
		 The related DOMError.type dependent data if any. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.relatedData"><linktext>MDC - DOMError.relatedData</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-relatedData"><linktext>W3C - DOMError.relatedData</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:relatedException:get"><apiName>relatedException</apiName><shortdesc>
		 The related platform dependent exception if any.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMObject</apiValueClassifier></apiValueDef><apiDesc>
		 The related platform dependent exception if any.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.relatedException"><linktext>MDC - DOMError.relatedException</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-relatedException"><linktext>W3C - DOMError.relatedException</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:severity:get"><apiName>severity</apiName><shortdesc>
		 The severity of the error, either SEVERITY_WARNING, SEVERITY_ERROR, 
		 or SEVERITY_FATAL_ERROR.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The severity of the error, either SEVERITY_WARNING, SEVERITY_ERROR, 
		 or SEVERITY_FATAL_ERROR.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.severity"><linktext>MDC - DOMError.severity</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity"><linktext>W3C - DOMError.severity</linktext></link><link href="dom.core.xml#DOMError/SEVERITY_WARNING"><linktext>SEVERITY_WARNING</linktext></link><link href="dom.core.xml#DOMError/SEVERITY_ERROR"><linktext>SEVERITY_ERROR</linktext></link><link href="dom.core.xml#DOMError/SEVERITY_FATAL_ERROR"><linktext>SEVERITY_FATAL_ERROR</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:type:get"><apiName>type</apiName><shortdesc>
		 A DOMString indicating which related data is expected in relatedData.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A DOMString indicating which related data is expected in relatedData. 
		 Users should refer to the specification of the error in order to find 
		 its DOMString type and relatedData  definitions if any.
		 
		 <p><b>Note:</b> As an example, Document.normalizeDocument() does generate warnings 
		 when the "split-cdata-sections" parameter is in use. Therefore, the method 
		 generates a SEVERITY_WARNING with type "cdata-sections-splitted" and the 
		 first CDATASection node in document order resulting from the split is 
		 returned by the relatedData attribute.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.type"><linktext>MDC - DOMError.type</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-type"><linktext>W3C - DOMError.type</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:ProcessingInstruction"><apiName>ProcessingInstruction</apiName><shortdesc>
	 A processing instruction provides an opportunity for application-specific 
	 instructions to be embedded within XML and which can be ignored by XML 
	 processors which do not support processing their instructions (outside of 
	 their having a place in the DOM).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A processing instruction provides an opportunity for application-specific 
	 instructions to be embedded within XML and which can be ignored by XML 
	 processors which do not support processing their instructions (outside of 
	 their having a place in the DOM).
	 
	 <p>A Processing instruction is distinct from a XML Declaration which is used 
	 for other information about the document such as encoding and which appear 
	 (if it does) as the first item in the document.</p>
	 
	 <p>User-defined processing instructions cannot begin with 'xml', as these are 
	 reserved (e.g., as used in &lt;?xml-stylesheet ?&gt;).</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:ProcessingInstruction:data:get"><apiName>data</apiName><shortdesc>
		 First non-whitespace character after target and before ?&gt;
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 First non-whitespace character after target and before ?&gt;
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757835%28VS.85%29.aspx"><linktext>MSDN - data Property (IXMLDOMProcessingInstruction)</linktext></link><link href="http://developer.mozilla.org/en/DOM/ProcessingInstruction"><linktext>MDC - ProcessingInstruction</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-837822393"><linktext>W3C - ProcessingInstruction.data</linktext></link></related-links></apiValue><apiValue id="dom.core:ProcessingInstruction:target:get"><apiName>target</apiName><shortdesc>
		 After the &amp;lt;? and before whitespace delimiting it from data
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 After the &lt;? and before whitespace delimiting it from data
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757903%28VS.85%29.aspx"><linktext>MSDN - target Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/ProcessingInstruction"><linktext>MDC - ProcessingInstruction</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1478689192"><linktext>W3C - ProcessingInstruction.target</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DOMStringList"><apiName>DOMStringList</apiName><shortdesc>
	 The DOMStringList interface provides the abstraction of an ordered 
	 collection of DOMString values, without defining or constraining how 
	 this collection is implemented.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DOMStringList interface provides the abstraction of an ordered 
	 collection of DOMString values, without defining or constraining how 
	 this collection is implemented. The items in the DOMStringList are 
	 accessible via an integral index, starting from 0. 
	 
	 <p><b>Note (Mozilla):</b> This type is presently not available to Mozilla as DOMConfiguration is not implemented.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:DOMStringList:dom.core:DOMStringList:length:get"><apiName>length</apiName><shortdesc>
		 The number of DOMStrings in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of DOMStrings in the list. The range of valid child 
		 node indices is 0 to length-1  inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMStringList.length"><linktext>MDC - DOMStringList.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-length"><linktext>W3C - DOMStringList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:NodeList"><apiName>NodeList</apiName><shortdesc>
	 The NodeList interface provides the abstraction of an ordered collection
	 of nodes, without defining or constraining how this collection is 
	 implemented.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The NodeList interface provides the abstraction of an ordered collection
	 of nodes, without defining or constraining how this collection is 
	 implemented. NodeList objects in the DOM are live.
	 
	 <p>The items in the NodeList are accessible via an integral index, 
	 starting from 0. </p>
	 
	 <p><b>Note:</b> NodeList objects in the DOM are live.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:NodeList:dom.core:NodeList:length:get"><apiName>length</apiName><shortdesc>
		 The number of nodes in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of nodes in the list. The range of valid child node 
		 indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757044%28VS.85%29.aspx"><linktext>MSDN - length Property (IXMLDOMNodeList)</linktext></link><link href="http://developer.mozilla.org/En/DOM/NodeList.length"><linktext>MDC - NodeList.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-203510337"><linktext>W3C - NodeList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:Element"><apiName>Element</apiName><shortdesc>
	 The Element interface represents an element in an HTML or XML document.</shortdesc><prolog><asMetadata/><asCustoms><internal>
	 Sources:
	 http://msdn.microsoft.com/en-us/library/dd347058(VS.85).aspx#
	 http://developer.mozilla.org/en/DOM/element
	 http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-745549614
	 
	 ASDoc Help:
	 http://livedocs.adobe.com/flex/3/html/help.html?content=asdoc_6.html
	 http://livedocs.adobe.com/flex/3/html/help.html?content=asdoc_3.html
	 
	 http://www.aptana.com/reference/html/api/Element.html
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>cssom.view:ElementView</apiBaseInterface><apiBaseInterface>elementtraversal:ElementTraversal</apiBaseInterface><apiBaseInterface>selectors:NodeSelector</apiBaseInterface><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Element interface represents an element in an HTML or XML document. 
	 
	 <p>Elements may have attributes associated with them; since the Element 
	 interface inherits from Node, the generic Node interface attribute 
	 attributes may be used to retrieve the set of all attributes for an 
	 element. There are methods on the Element interface to retrieve either 
	 an Attr object by name or an attribute value by name. In XML, where an 
	 attribute value may contain entity references, an Attr object should be 
	 retrieved to examine the possibly fairly complex sub-tree representing 
	 the attribute value. On the other hand, in HTML, where all attributes 
	 have simple string values, methods to directly access an attribute value 
	 can safely be used as a convenience.</p>
	 
	 <p>Note: In DOM Level 2, the method normalize is inherited from the Node 
	 interface where it was moved.</p>
	 
	 <p>Includes the <xref href="http://www.w3.org/TR/2008/REC-ElementTraversal-20081222/">ElementTraversal Specification</xref></p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:Element:baseURIObject:get"><apiName>baseURIObject</apiName><shortdesc>
		 Non-Standard | FireFox 3+ 
		 
		 Returns the nsIURI  object representing the element's URI.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIURI</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | FireFox 3+</b> 
		 
		 Returns the nsIURI  object representing the element's URI.
		 
		 <p>Note: This property exists on all elements (HTML, XUL, SVG, MathML, 
		 etc.), but only if the script trying to use it has UniversalXPConnect 
		 privileges.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:Element:childElementCount:get"><apiName>childElementCount</apiName><shortdesc>
		 
		 Returns the current number of element nodes that are children of this 
		 element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the current number of element nodes that are children of this 
		 element. 0 if this element has no child nodes that are of nodeType 1.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.childElementCount"><linktext>MDC - Element: childElementCount Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-childElementCount"><linktext>W3C - Element Traversel: childElementCount Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/firstElementChild"><linktext>firstElementChild</linktext></link><link href="dom.core.xml#Element/lastElementChild"><linktext>lastElementChild</linktext></link><link href="dom.core.xml#Element/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="dom.core.xml#Element/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:children:get"><apiName>children</apiName><shortdesc>
		 ? | FireFox 3.5+ 
		 
		 Returns a collection of child elements of the given element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NodeList</apiValueClassifier></apiValueDef><apiDesc>
		 <b>? | FireFox 3.5+</b> 
		 
		 Returns a collection of child elements of the given element.
		 
		 <p>The list returned is an ordered collection of element objects that 
		 are children of the current element. If the element has no children, 
		 then list returned contains no elements.</p>
		 
		 <p>Note: The items in the collection of elements are objects and not 
		 strings. To get data from those node objects, you must use their 
		 properties (e.g. elementNodeReference.children[1].nodeName to get the 
		 name, etc.).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // parg is an object reference to a &lt;p&gt; element
		 if (parg.childElementCount()) {
		 	// So, first we check if the object is not empty, if the object has child nodes
		 	var children = parg.children;
		 	for (var i = 0; i &lt; children.length; i++) {
		 	// do something with each child element as children[i]
		 	// NOTE: List is live, Adding or removing children will change the list
		 	};
		 };
		 </codeblock>
		 </example></apiValueDetail></apiValue><apiValue id="dom.core:Element:clientHeight:get"><apiName>clientHeight</apiName><shortdesc>
		 
		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.
		 
		 <p>clientHeight can be calculated as CSS height + CSS padding - height of horizontal scrollbar (if present).</p>
		 
		 <p><b>Note:</b> offsetLeft returns the position the upper left edge of the element; not necessarily 
		 the 'real' left edge of the element. This is important for span elements in flowed text that wraps from one 
		 line to the next. The span may start in the middle of the page and wrap around to the beginning of the next 
		 line. The offsetLeft will refer to the left edge of the start of the span, not the left edge of text at the 
		 start of the second line. Therefore, a box with the left, top, width and height of offsetLeft, offsetTop, 
		 offsetWidth and offsetHeight will not be a bounding box for a span with wrapped text.</p>
		 
		 </apiDesc><example>
		 This example shows how the clientHeight property and the offsetHeight property measure document height differently. 
		 The height of the div is set to 100, and this is the value retrieved by the offsetHeight property, not the clientHeight property. 
		 
		 <codeblock>
		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientHeight)"&gt;client height&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetHeight)"&gt;offset heightY&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533563(VS.85).aspx"><linktext>MSDN: clientHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientHeight"><linktext>MDC - Element: clientHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:clientLeft:get"><apiName>clientLeft</apiName><shortdesc>
		 
		 The width of the left border of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 The width of the left border of an element in pixels. 
		 
		 <p>It includes the width of the vertical scrollbar if the text direction of the element is right–to–left and 
		 if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left 
		 margin or the left padding.</p>
		 
		 <p><b>Note:</b> The difference between the offsetLeft and clientLeft properties is the border of the object.</p>
		 
		 <p><b>Note:</b> When layout.scrollbar.side property is set to 1 or to 3 and when the text-direction is set to RTL, 
		 then the vertical scrollbar is positioned on the left and this impacts the way clientLeft is computed.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533564(VS.85).aspx"><linktext>MSDN: clientLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientLeft"><linktext>MDC - Element: clientLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:clientTop:get"><apiName>clientTop</apiName><shortdesc>
		 
		 The width of the top border of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 The width of the top border of an element in pixels. It does not include the top margin or padding.
		 
		 <p><b>Note:</b> The difference between the offsetTop and the clientTop properties is the border area of the object.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533565(VS.85).aspx"><linktext>MSDN: clientTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientTop"><linktext>MDC - Element: clientTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:clientWidth:get"><apiName>clientWidth</apiName><shortdesc>
		 
		 Returns the inner width of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the inner width of an element in pixels. It includes padding but not the vertical scrollbar (if present, if rendered), border or margin.
		 
		 </apiDesc><example>
		 This example shows how the clientWidth property and the offsetWidth property measure document width differently. The width of the div 
		 is set to 200, and this is the value retrieved by the offsetWidth property, not the clientWidth property. 
		 
		 <codeblock>
		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset widthY&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533566(VS.85).aspx"><linktext>MSDN: clientWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientWidth"><linktext>MDC - Element: clientWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:firstElementChild:get"><apiName>firstElementChild</apiName><shortdesc>
		 
		 Returns the first child element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns the first child element node of this element. null if this 
		 element has no child elements.
		 
		 </apiDesc><example>
		 In this example, the alert shows "SPAN", which is the name of the 
		 first child node of the paragraph element.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.firstElementChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.firstElementChild"><linktext>MDC - Element: firstElementChild Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-firstElementChild"><linktext>W3C - Element Traversel: firstElementChild Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/childElementCount"><linktext>childElementCount</linktext></link><link href="dom.core.xml#Element/lastElementChild"><linktext>lastElementChild</linktext></link><link href="dom.core.xml#Element/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="dom.core.xml#Element/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:innerHTML:get"><apiName>innerHTML</apiName><shortdesc>
		 DOM Level 0 | NS\FireFox\IE4+ 
		 
		 Sets or gets all of the markup and content within a given element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0 | NS\FireFox\IE4+</b> 
		 
		 Sets or gets all of the markup and content within a given element.
		 
		 <p>Note: As there is no public specification for this property, 
		 implementations differ widely. For example, when text is entered into 
		 a text input, IE will change the value attribute of the input's 
		 innerHTML property but Gecko browsers do not.</p>
		 
		 <p>Note: It should never be used to write parts of a table—W3C DOM methods 
		 should be used for that—though it can be used to write an entire table 
		 or the contents of a cell.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // HTML:
		 // &lt;div id="d"&gt;&lt;p&gt;Content&lt;/p&gt;
		 // &lt;p&gt;Further Elaborated&lt;/p&gt;
		 // &lt;/div&gt;
		 
		 d = document.getElementById("d");
		 dump(d.innerHTML);
		 
		 // the string "&lt;p&gt;Content&lt;/p&gt;&lt;p&gt;Further Elaborated&lt;/p&gt;"
		 // is dumped to the console window
		 </codeblock>
		 </example></apiValueDetail></apiValue><apiValue id="dom.core:Element:lastElementChild:get"><apiName>lastElementChild</apiName><shortdesc>
		 
		 Returns the last child element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns the last child element node of this element. null if this 
		 element has no child elements.
		 
		 </apiDesc><example>
		 In this example, the alert shows "B", which is the name of the 
		 last child node of the paragraph element.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 	&lt;b&gt;bold&lt;/b&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.lastElementChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.lastElementChild"><linktext>MDC - Element: lastElementChild Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-lastElementChild"><linktext>W3C - Element Traversel: lastElementChild Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/childElementCount"><linktext>childElementCount</linktext></link><link href="dom.core.xml#Element/firstElementChild"><linktext>firstElementChild</linktext></link><link href="dom.core.xml#Element/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="dom.core.xml#Element/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:nextElementSibling:get"><apiName>nextElementSibling</apiName><shortdesc>
		 
		 Returns the next sibling element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns the next sibling element node of this element. null if this 
		 element has no element sibling nodes that come after this one in the 
		 document tree.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-01').nextElementSibling;
		 	document.write('&lt;p&gt;Siblings of div-01&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.nextElementSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;</codeblock>
		 
		 <p>This example outputs the following into the page when it loads:</p>
		 
		 <p>Siblings of div-01</p>
		 <ol>
		 	<li>DIV</li>
		 	<li>SCRIPT</li>
		 	<li>P</li>
		 	<li>OL</li>
		 </ol>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.nextElementSibling"><linktext>MDC - Element: nextElementSibling Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-nextElementSibling"><linktext>W3C - Element Traversel: nextElementSibling Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/childElementCount"><linktext>childElementCount</linktext></link><link href="dom.core.xml#Element/firstElementChild"><linktext>firstElementChild</linktext></link><link href="dom.core.xml#Element/lastElementChild"><linktext>lastElementChild</linktext></link><link href="dom.core.xml#Element/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetHeight:get"><apiName>offsetHeight</apiName><shortdesc>
		 
		 Height of an element relative to the element's offsetParent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Height of an element relative to the element's offsetParent.
		 
		 <p>Typically, an element's offsetHeight is a measurement which includes 
		 the element borders, the element vertical padding, the element 
		 horizontal scrollbar (if present, if rendered) and the element CSS height.</p>
		 
		 <p>For the document body object, the measurement includes total linear 
		 content height instead of the element CSS height. Floated elements 
		 extending below other linear content are ignored.</p>
		 
		 <p><b>Note (IE6):</b> To comply with the <xref class="external" href="http://www.w3.org/TR/REC-CSS1/" rel="external nofollow">Cascading Style Sheets, Level 1 (CSS1)</xref> World Wide 
		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 
		 height of objects differently when you use the !DOCTYPE declaration in your 
		 document to switch on standards-compliant mode. This difference may affect 
		 the value of the offsetWidth propety. When standards-compliant mode is 
		 switched on, the width property specifies the distance between the left and 
		 right edges of the bounding box that surrounds the object's content. When 
		 standards-compliant mode is not switched on, and with earlier versions of 
		 Windows Internet Explorer, the width property also includes the border and 
		 padding belts that surround the object's bounding box.</p>
		 
		 </apiDesc><example>
		 This example adjusts the size of a clock's readout to fit the current width and height of the document body.
		 
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;A Simple Clock&lt;/title&gt;
		 &lt;script type="text/javascript"&gt;
		 	function startClock() {
		 		window.setInterval("Clock_Tick()", 1000);
		 		Clock_Tick();
		 	}
		 
		 	var iRatio = 4;
		 	function Clock_Tick() {
		 		var dToday = Date();
		 		var sTime = dToday.substring(11,19);
		 		var iDocHeight = document.body.offsetHeight;
		 		var iDocWidth = document.body.offsetWidth;
		 
		 		if ((iDocHeightRatio)&gt;iDocWidth)
		 		iDocHeight = iDocWidth / iRatio;
		 		document.all.MyTime.innerText = sTime;
		 		document.all.MyTime.style.fontSize = iDocHeight;
		 	}
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onload="startClock()"&gt;
		 &lt;p id="MyTime"&gt;&amp;nbsp;&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534199(VS.85).aspx"><linktext>MSDN: offsetHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetHeight"><linktext>MDC - Element: offsetHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetLeft:get"><apiName>offsetLeft</apiName><shortdesc>
		 
		 Returns the number of pixels that the upper left corner of the current 
		 element is offset to the left within the offsetParent node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the number of pixels that the upper left corner of the current 
		 element is offset to the left within the offsetParent node.
		 
		 <p><b>Note:</b> offsetLeft returns the position the upper left edge of the element; 
		 not necessarily the 'real' left edge of the element. This is important 
		 for inline elements (such as span) in flowed text that wraps from one 
		 line to the next. The span may start in the middle of the line and wrap 
		 around to the beginning of the next line. The offsetLeft will refer to 
		 the left edge of the start of the span, not the left edge of text at the 
		 start of the second line. Therefore, a box with the left, top, width and 
		 height of offsetLeft, offsetTop, offsetWidth and offsetHeight will not be 
		 a bounding box for a span with wrapped text.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var colorTable = document.getElementById("t1");
		 var tOLeft = colorTable.offsetLeft;
		 
		 if (tOLeft &gt; 5) {
		 	// large left offset: do something here
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534200(VS.85).aspx"><linktext>MSDN: offsetLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetLeft"><linktext>MDC - Element: offsetLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetParent:get"><apiName>offsetParent</apiName><shortdesc>
		 
		 The element from which all offset calculations are currently computed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 The element from which all offset calculations are currently computed.
		 
		 <p>offsetParent returns a reference to the object which is the closest 
		 (nearest in the containment hierarchy) positioned containing element. 
		 If the element is non-positioned, the root element (html in standards 
		 compliant mode; body in quirks rendering mode) is the offsetParent. 
		 offsetParent returns null when the element has style.display set 
		 to "none".</p>
		 
		 <p><b>Note (IE5):</b> In Microsoft Internet Explorer 5, the offsetParent property returns 
		 the table object for the td object.</p>
		 
		 <p><b>Note (IE4):</b> In Internet Explorer 4.0 it returns 
		 the tr object. You can use the parentElement property to retrieve the 
		 immediate container of the table cell.</p>
		 
		 </apiDesc><example>
		 This example shows how to determine the position of a td object. Although the td 
		 object appears to the far right in the document, its position is close to the x-axis and y-axis, 
		 because its offset parent is a table object rather than the document body. For Internet Explorer 4.0,
		 this same example returns a position of 0,0 because the offset parent is the table row.
		 
		 <codeblock>
		 &lt;table border='1' align='right'&gt;
		 	&lt;tr&gt;
		 		&lt;td id='oCell'&gt;This is a small table.&lt;/td&gt;
		 	&lt;/tr&gt;
		 &lt;/table&gt;</codeblock>
		 
		 <codeblock>
		 var oElement = document.getElementById("oCell");
		 
		 alert("The TD element is at (" + oElement.offsetLeft + 
		 "," + oElement.offsetTop + ")\n" + "The offset parent is " 
		 + oElement.offsetParent.tagName );</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534302(VS.85).aspx"><linktext>MSDN: offsetParent Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetParent"><linktext>MDC - Element: offsetParent Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetParent Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetTop:get"><apiName>offsetTop</apiName><shortdesc>
		 
		 Returns the distance of the current element relative to the 
		 top of the offsetParent node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the distance of the current element relative to the 
		 top of the offsetParent node.
		 
		 </apiDesc><example>
		 <codeblock>
		 d = document.getElementById("div1");
		 
		 topPos = d.offsetTop;
		 
		 if (topPos &gt; 10) {
		 	// object is offset more
		 	// than 10 pixels from its parent
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534303(VS.85).aspx"><linktext>MSDN: offsetTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetTop"><linktext>MDC - Element: offsetTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetWidth:get"><apiName>offsetWidth</apiName><shortdesc>
		 
		 The width of an element, relative to the layout.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 The width of an element, relative to the layout.
		 
		 <p>Typically, an element's offsetWidth is a measurement which includes 
		 the element borders, the element horizontal padding, the element 
		 vertical scrollbar (if present, if rendered) and the element CSS width.</p>
		 
		 <p><b>Note (IE6):</b> To comply with the <xref class="external" href="http://www.w3.org/TR/REC-CSS1/" rel="external nofollow">Cascading Style Sheets, Level 1 (CSS1)</xref> World Wide 
		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 
		 height of objects differently when you use the !DOCTYPE declaration in your 
		 document to switch on standards-compliant mode. This difference may affect 
		 the value of the offsetWidth propety. When standards-compliant mode is 
		 switched on, the width property specifies the distance between the left and 
		 right edges of the bounding box that surrounds the object's content. When 
		 standards-compliant mode is not switched on, and with earlier versions of 
		 Windows Internet Explorer, the width property also includes the border and 
		 padding belts that surround the object's bounding box.</p>
		 
		 </apiDesc><example>
		 This example adjusts the size of a clock's readout to fit the current width and height of the document.
		 
		 <codeblock>
		 &lt;div id=oDiv STYLE="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset width&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534304(VS.85).aspx"><linktext>MSDN: offsetWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetWidth"><linktext>MDC - Element: offsetWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:previousElementSibling:get"><apiName>previousElementSibling</apiName><shortdesc>
		 
		 Returns the previous sibling element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns the previous sibling element node of this element. null if 
		 this element has no element sibling nodes that come before this one 
		 in the document tree.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 &lt;li&gt;This is a list item&lt;/li&gt;
		 &lt;li&gt;This is another list item&lt;/li&gt;
		 &lt;div id="div-03"&gt;Here is div-03&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-03').previousElementSibling;
		 	document.write('&lt;p&gt;Siblings of div-03&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.previousElementSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;</codeblock>
		 
		 <p>This example outputs the following into the page when it loads:</p>
		 
		 <p>Siblings of div-03</p>
		 <ol>
		 	<li>LI</li>
		 	<li>LI</li>
		 	<li>DIV</li>
		 	<li>DIV</li>
		 </ol>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.previousElementSibling"><linktext>MDC - Element: previousElementSibling Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-previousElementSibling"><linktext>W3C - Element Traversel: previousElementSibling Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/childElementCount"><linktext>childElementCount</linktext></link><link href="dom.core.xml#Element/firstElementChild"><linktext>firstElementChild</linktext></link><link href="dom.core.xml#Element/lastElementChild"><linktext>lastElementChild</linktext></link><link href="dom.core.xml#Element/nextElementSibling"><linktext>nextElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:schemeTypeInfo:get"><apiName>schemeTypeInfo</apiName><shortdesc>
		 DOM Level 3 | None 
		 
		 The type information associated with this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:TypeInfo</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 3 | None</b> 
		 
		 The type information associated with this element. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:Element:scrollHeight:get"><apiName>scrollHeight</apiName><shortdesc>
		 
		 Height of the scroll view of an element; it includes the element padding but not its margin.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Height of the scroll view of an element; it includes the element padding but not its margin.
		 
		 <p>An element's scrollHeight is a measurement of the height of an element's content including 
		 content not visible on the screen due to overflow.</p>
		 
		 <p>If the element's content generated a vertical scrollbar, the scrollHeight value is equal to 
		 the minimum clientHeight the element would require in order to fit all the content in the viewpoint 
		 without using a vertical scrollbar. When an element's content does not generate a vertical scrollbar, 
		 then its scrollHeight property is equal to its clientHeight property.</p>
		 
		 </apiDesc><example>
		 This example uses the scrollHeight property to retrieve the height of the viewable content.
		 
		 <codeblock>
		 &lt;script type="text/javascript"&gt;
		 	function fnCheckScroll(){
		 		var iNewHeight = oDiv.scrollHeight;
		 		alert("The value of the scrollHeight property is: " 
		 		+ iNewHeight + "px"); 
		 	}
		 &lt;/script&gt;
		 ...
		 &lt;div id="oDiv" style="overflow: scroll; height= 100px; width= 250px; text-align: left"&gt;
		 	... 
		 &lt;/div&gt;
		 &lt;button onclick="fnCheckScroll()"&gt;Check scrollHeight&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534615(VS.85).aspx"><linktext>MSDN: scrollHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollHeight"><linktext>MDC - Element: scrollHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:scrollLeft:get"><apiName>scrollLeft</apiName><shortdesc>
		 
		 Gets or sets the number of pixels that an element's content is scrolled to the left.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Gets or sets the number of pixels that an element's content is scrolled to the left.
		 
		 </apiDesc><example>
		 <codeblock>
		 // Set the number of pixels scrolled
		 element.scrollLeft = 10;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534617(VS.85).aspx"><linktext>MSDN: scrollLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollLeft"><linktext>MDC - Element: scrollLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:scrollTop:get"><apiName>scrollTop</apiName><shortdesc>
		 
		 Gets or sets the number of pixels that the content of an element is scrolled upward.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Gets or sets the number of pixels that the content of an element is scrolled upward.
		 
		 <p>An element's scrollTop is a measurement of the distance of an element's top to its topmost visible content.</p>
		 
		 <p>When an element content does not generate a vertical scrollbar, then its scrollTop value defaults to 0.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Get the number of pixels scrolled
		 var  intElemScrollTop = element.scrollTop;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/workshop/author/dhtml/reference/properties/scrolltop.asp?frame=true"><linktext>MSDN: scrollTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollTop"><linktext>MDC - Element: scrollTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:scrollWidth:get"><apiName>scrollWidth</apiName><shortdesc>
		 
		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater. 
		 
		 <p>If the element is wider than its content area (for example, if there are scroll bars for scrolling through the content), the scrollWidth is larger than the clientWidth.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="aDiv" style="width: 100px; height: 200px; overflow: auto;"&gt;
		 	-FooBar-FooBar-FooBar
		 &lt;/div&gt;
		 &lt;br/&gt;
		 &lt;input type="button" value="Show scrollWidth"
		 onclick="alert(document.getElementById('aDiv').scrollWidth);"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534619(VS.85).aspx"><linktext>MSDN: scrollWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollWidth"><linktext>MDC - Element: scrollWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:tagName:get"><apiName>tagName</apiName><shortdesc>
		 The name of the element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="IE" version="5.0+"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiTool name="Safari" version="1.3+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the element. If Node.localName is different from null, 
		 this attribute is a qualified name.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.core:DOMImplementationSource"><apiName>DOMImplementationSource</apiName><shortdesc>
	 This interface permits a DOM implementer to supply one or more 
	 implementations, based upon requested features and versions, as specified 
	 in DOM Features.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface permits a DOM implementer to supply one or more 
	 implementations, based upon requested features and versions, as specified 
	 in DOM Features. Each implemented DOMImplementationSource object is listed 
	 in the binding-specific list of available sources so that its 
	 DOMImplementation objects are made available.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.core:Entity"><apiName>Entity</apiName><shortdesc>
	 This interface represents a known entity, either parsed or unparsed, in 
	 an XML document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This interface represents a known entity, either parsed or unparsed, in 
	 an XML document. Note that this models the entity itself not the entity 
	 declaration.
	 
	 <p>The nodeName attribute that is inherited from Node contains the name of 
	 the entity.</p>
	 
	 <p><b>Note:</b> An Entity node does not have any parent.</p>
	 
	 <p><b>Note:</b> If the entity contains an unbound namespace prefix, the namespaceURI of 
	 the corresponding node in the Entity node subtree is null. The same is true 
	 for EntityReference nodes that refer to this entity, when they are created 
	 using the createEntityReference method of the Document interface.</p>
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.core:Entity:inputEncoding:get"><apiName>inputEncoding</apiName><shortdesc>
		 An attribute specifying the encoding used for this entity at the time of 
		 parsing, when it is an external parsed entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An attribute specifying the encoding used for this entity at the time of 
		 parsing, when it is an external parsed entity. This is null if it an 
		 entity from the internal subset or if it is not known.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Entity.inputEncoding"><linktext>MDC - Entity.inputEncoding</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Entity3-inputEncoding"><linktext>W3C - Entity.inputEncoding</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:notationName:get"><apiName>notationName</apiName><shortdesc>
		 For unparsed entities, the name of the notation for the entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 For unparsed entities, the name of the notation for the entity. For parsed 
		 entities, this is null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757830%28VS.85%29.aspx"><linktext>MSDN - notationName Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Entity.notationName"><linktext>MDC - Entity.notationName</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6ABAEB38"><linktext>W3C - Entity.notationName</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:publicId:get"><apiName>publicId</apiName><shortdesc>
		 The public identifier associated with the entity if specified, and null otherwise.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The public identifier associated with the entity if specified, and null otherwise.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms760313%28VS.85%29.aspx"><linktext>MSDN - publicId Property (IXMLDOMEntity)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Entity.publicId"><linktext>MDC - Entity.publicId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D7303025"><linktext>W3C - Entity.publicId</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:systemId:get"><apiName>systemId</apiName><shortdesc>
		 The system identifier associated with the entity if specified, and null 
		 otherwise.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The system identifier associated with the entity if specified, and null 
		 otherwise. This may be an absolute URI or not.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms764731%28VS.85%29.aspx"><linktext>MSDN - systemId Property (IXMLDOMEntity)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Entity.systemId"><linktext>MDC - Entity.systemId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D7C29F3E"><linktext>W3C - Entity.systemId</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:xmlEncoding:get"><apiName>xmlEncoding</apiName><shortdesc>
		 An attribute specifying, as part of the text declaration, the encoding of 
		 this entity, when it is an external parsed entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An attribute specifying, as part of the text declaration, the encoding of 
		 this entity, when it is an external parsed entity. This is null otherwise.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Entity.xmlEncoding"><linktext>MDC - Entity.xmlEncoding</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Entity3-encoding"><linktext>W3C - Entity.xmlEncoding</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:xmlVersion:get"><apiName>xmlVersion</apiName><shortdesc>
		 An attribute specifying, as part of the text declaration, the version number 
		 of this entity, when it is an external parsed entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An attribute specifying, as part of the text declaration, the version number 
		 of this entity, when it is an external parsed entity. This is null otherwise.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Entity.xmlVersion"><linktext>MDC - Entity.xmlVersion</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Entity3-version"><linktext>W3C - Entity.xmlVersion</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.events"><apiName>dom.events</apiName><apiClassifier id="dom.events:KeyboardEvent"><apiName>KeyboardEvent</apiName><shortdesc>
	 The KeyboardEvent interface provides specific contextual information 
	 associated with keyboard devices.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:UIEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The KeyboardEvent interface provides specific contextual information 
	 associated with keyboard devices. Each keyboard event references a key 
	 using an identifier. Keyboard events are commonly directed at the 
	 element that has the focus.
	 
	 <p>The KeyboardEvent interface provides convenient attributes for some common 
	 modifiers keys: KeyboardEvent.ctrlKey, KeyboardEvent.shiftKey, 
	 KeyboardEvent.altKey, KeyboardEvent.metaKey. These attributes are equivalent 
	 to using the method KeyboardEvent.getModifierState(keyIdentifierArg) with 
	 "Control", "Shift", "Alt", or "Meta" respectively.</p>
	 
	 <p>To create an instance of the KeyboardEvent interface, use the 
	 DocumentEvent.createEvent("KeyboardEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:KeyboardEvent:DOM_KEY_LOCATION_LEFT"><apiName>DOM_KEY_LOCATION_LEFT</apiName><shortdesc>
		 The key activated is in the left key location (there is more than one 
		 possible location for this key).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The key activated is in the left key location (there is more than one 
		 possible location for this key). Example: the left Shift key on a PC 
		 101 Key US keyboard.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_LEFT"><linktext>W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_LEFT</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:DOM_KEY_LOCATION_NUMPAD"><apiName>DOM_KEY_LOCATION_NUMPAD</apiName><shortdesc>
		 The key activation originated on the numeric keypad or with a virtual key 
		 corresponding to the numeric keypad.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The key activation originated on the numeric keypad or with a virtual key 
		 corresponding to the numeric keypad. Example: the '1' key on a PC 101 Key 
		 US keyboard located on the numeric pad.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_NUMPAD"><linktext>W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_NUMPAD</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:DOM_KEY_LOCATION_RIGHT"><apiName>DOM_KEY_LOCATION_RIGHT</apiName><shortdesc>
		 The key activation is in the right key location (there is more than one 
		 possible location for this key).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The key activation is in the right key location (there is more than one 
		 possible location for this key). Example: the right Shift key on a PC 
		 101 Key US keyboard.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_RIGHT"><linktext>W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_RIGHT</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:DOM_KEY_LOCATION_STANDARD"><apiName>DOM_KEY_LOCATION_STANDARD</apiName><shortdesc>
		 The key activation is not distinguished as the left or right version 
		 of the key, and did not originate from the numeric keypad (or did 
		 not originate with a virtual key corresponding to the numeric keypad).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The key activation is not distinguished as the left or right version 
		 of the key, and did not originate from the numeric keypad (or did 
		 not originate with a virtual key corresponding to the numeric keypad). 
		 Example: the 'Q' key on a PC 101 Key US keyboard.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_STANDARD"><linktext>W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_STANDARD</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keydown"><apiName>keydown</apiName><shortdesc>
		 A key is pressed down.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>keydown</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A key is pressed down. 
		 
		 <p>This event type is device dependent and relies on the capabilities of the input devices 
		 and how they are mapped in the operating system. This event type is generated after the keyboard mapping but 
		 before the processing of an input method editor. This event should logically happen before the event keyup is 
		 produced. Whether a keydown contributes or not to the generation of a text event is implementation dependent.</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>UIEvent.view, KeyboardEvent.keyIdentifier, KeyboardEvent.keyLocation, 
		 KeyboardEvent.altKey, KeyboardEvent.shiftKey, KeyboardEvent.ctrlKey, and KeyboardEvent.metaKey are in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-keydown"><linktext>W3C - DOM 3 Events: KeyboardEvent.keydown</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keyup"><apiName>keyup</apiName><shortdesc>
		 A key is released.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>keyup</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A key is released. 
		 
		 <p>This event type is device dependent and relies on the capabilities of the input devices and 
		 how they are mapped in the operating system. This event type is generated after the keyboard mapping but before 
		 the processing of an input method editor. This event should logically happen after the event keydown is produced.
		 Whether a keyup contributes or not to the generation of a text event is implementation dependent.</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>UIEvent.view, KeyboardEvent.keyIdentifier, and KeyboardEvent.keyLocation are in use. 
		 KeyboardEvent.altKey, KeyboardEvent.shiftKey, KeyboardEvent.ctrlKey, and KeyboardEvent.metaKey are in use unless the 
		 KeyboardEvent.keyIdentifier corresponds to the key modifier itself.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-keyup"><linktext>W3C - DOM 3 Events: KeyboardEvent.keyup</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:altKey:get"><apiName>altKey</apiName><shortdesc>
		 If the alternative (Alt) key modifier is activated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If the alternative (Alt) key modifier is activated.
		 
		 <p><b>Note:</b> The Option key modifier on Macintosh systems must be represented 
		 using this key modifier.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;altKey example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showChar(e){
		 	alert(
		 		"Key Pressed: " + String.fromCharCode(e.charCode) + "\n"
		 		+ "charCode: " + e.charCode + "\n"
		 		+ "ALT key pressed: " + e.altKey + "\n"
		 	);
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="showChar(event);"&gt;
		 &lt;p&gt;
		 Press any character key,
		 with or without holding down the ALT key.&lt;br /&gt;
		 You can also use the SHIFT key together with the ALT key.
		 &lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.altKey"><linktext>MDC - event.altKey</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-altKey"><linktext>W3C - DOM 3 Events: KeyboardEvent.altKey</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:charCode:get"><apiName>charCode</apiName><shortdesc>
		 Returns the Unicode value of a character key pressed during a keypress event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns the Unicode value of a character key pressed during a keypress event.
		 
		 <p>For constants equivalent to these numeric codes, see KeyEvent.</p>
		 
		 <p><b>Note:</b> In a keypress event, the Unicode value of the key pressed is stored in either the 
		 keyCode or charCode property, never both. If the key pressed generates a character (e.g. 'a'), charCode is 
		 set to the code of that character, respecting the letter case. (i.e. charCode takes into account whether the 
		 shift key is held down). Otherwise, the code of the pressed key is stored in keyCode.</p>
		 
		 <p><b>Note:</b> charCode is never set in the keydown and keyup events. In these cases, keyCode is 
		 set instead.</p>
		 
		 <p><b>Note:</b> To get the code of the key regardless of whether it was stored in keyCode or 
		 charCode, query the which property.</p>
		 
		 <p><b>Note:</b> Characters entered through an IME do not register through keyCode or charCode. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;charCode example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showChar(e) {
		 	alert("Key Pressed: " + String.fromCharCode(e.charCode) + "\n"
		 	+ "charCode: " + e.charCode);
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="showChar(event);"&gt;
		 &lt;p&gt;Press any 'character' type key.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.charCode"><linktext>MDC - event.charCode</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:ctrlKey:get"><apiName>ctrlKey</apiName><shortdesc>
		 If the control (Ctrl) key modifier is activated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If the control (Ctrl) key modifier is activated.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;ctrlKey example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showChar(e) {
		 	alert(
		 		"Key Pressed: " + String.fromCharCode(e.charCode) + "\n"
		 		+ "charCode: " + e.charCode + "\n"
		 		+ "CTRL key pressed: " + e.ctrlKey + "\n"
		 	);
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="showChar(event);"&gt;
		 &lt;p&gt;Press any character key, with or without holding down the CTRL key.&lt;br /&gt;
		 You can also use the SHIFT key together with the CTRL key.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.ctrlKey"><linktext>MDC - event.ctrlKey</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-ctrlKey"><linktext>W3C - DOM 3 Events: KeyboardEvent.ctrlKey</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keyCode:get"><apiName>keyCode</apiName><shortdesc>
		 Returns the Unicode value of a non-character key in a keypress event or any key in any other type of keyboard event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the Unicode value of a non-character key in a keypress event or any key in any other type of keyboard event.
		 
		 <p>For constants equivalent to these numeric codes, see KeyEvent.</p>
		 
		 <p><b>Note:</b> In a keypress event, the Unicode value of the key pressed is stored in either the keyCode or 
		 charCode property, never both. If the key pressed generates a character (e.g. 'a'), charCode is set to the code of that 
		 character, respecting the letter case. (i.e. charCode takes into account whether the shift key is held down). Otherwise, 
		 the code of the pressed key is stored in keyCode.</p>
		 
		 <p><b>Note:</b> keyCode is always set in the keydown and keyup events. In these cases, charCode is never set.</p>
		 
		 <p><b>Note:</b> To get the code of the key regardless of whether it was stored in keyCode or charCode, query the which property.</p>
		 
		 <p><b>Note:</b> Characters entered through an IME do not register through keyCode or charCode. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;keyCode example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showKeyCode(e) {
		 	alert("keyCode for the key pressed: " + e.keyCode + "\n");
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeydown="showKeyCode(event);"&gt;
		 &lt;p&gt;Press any key.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.keyCode"><linktext>MDC - event.keyCode</linktext></link><link href="dom.events.xml#KeyEvent"><linktext>dom.events.KeyEvent</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keyIdentifier:get"><apiName>keyIdentifier</apiName><shortdesc>
		 Holds the identifier of the key.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Holds the identifier of the key. The key identifiers are defined in 
		 Appendix A.2 "Key identifiers set". Implementations that are unable 
		 to identify a key must use the key identifier "Unidentified".
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-keyIdentifier"><linktext>W3C - DOM 3 Events: KeyboardEvent.keyIdentifier</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/keyset.html#KeySet-Set"><linktext>Key identifiers set</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keyLocation:get"><apiName>keyLocation</apiName><shortdesc>
		 The keyLocation attribute contains an indication of the location of 
		 they key on the device, as described in Keyboard event types.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The keyLocation attribute contains an indication of the location of 
		 they key on the device, as described in Keyboard event types.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-keylocation"><linktext>W3C - DOM 3 Events: KeyboardEvent.keyLocation</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#ID-KeyboardEvent-KeyLocationCode"><linktext>Keyboard event types</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:metaKey:get"><apiName>metaKey</apiName><shortdesc>
		 If the meta (Meta) key modifier is activated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If the meta (Meta) key modifier is activated.
		 
		 <p><b>Note:</b> The Command key modifier on Macintosh systems must be represented 
		 using this key modifier.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-metaKey"><linktext>W3C - DOM 3 Events: KeyboardEvent.metaKey</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:shiftKey:get"><apiName>shiftKey</apiName><shortdesc>
		 If the shift (Shift) key modifier is activated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If the shift (Shift) key modifier is activated.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-shiftKey"><linktext>W3C - DOM 3 Events: KeyboardEvent.shiftKey</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:KeyEvent"><apiName>KeyEvent</apiName><shortdesc>
	 The KeyEvent interface provides specific contextual information associated with Key Events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:UIEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The KeyEvent interface provides specific contextual information associated with Key Events.
	 
	 The detail attribute inherited from UIEvent is used to indicated the number of keypresses 
	 which have occurred during key repetition. If this information is not available this value 
	 should be 0.
	 
	 <p><b>Note:</b> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:KeyEvent:DOM_VK_CAPS_LOCK"><apiName>DOM_VK_CAPS_LOCK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_DELETE"><apiName>DOM_VK_DELETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>10</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_DOWN"><apiName>DOM_VK_DOWN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>23</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_END"><apiName>DOM_VK_END</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>11</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_ENTER"><apiName>DOM_VK_ENTER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>12</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_ESCAPE"><apiName>DOM_VK_ESCAPE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>13</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F1"><apiName>DOM_VK_F1</apiName><shortdesc>
		 Constant for the F1 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>26</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F1 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F10"><apiName>DOM_VK_F10</apiName><shortdesc>
		 Constant for the F10 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>35</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F10 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F11"><apiName>DOM_VK_F11</apiName><shortdesc>
		 Constant for the F11 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>36</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F11 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F12"><apiName>DOM_VK_F12</apiName><shortdesc>
		 Constant for the F12 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>37</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F12 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F13"><apiName>DOM_VK_F13</apiName><shortdesc>
		 Constant for the F13 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>38</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F13 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F14"><apiName>DOM_VK_F14</apiName><shortdesc>
		 Constant for the F14 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>39</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F14 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F15"><apiName>DOM_VK_F15</apiName><shortdesc>
		 Constant for the F15 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>40</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F15 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F16"><apiName>DOM_VK_F16</apiName><shortdesc>
		 Constant for the F16 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>41</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F16 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F17"><apiName>DOM_VK_F17</apiName><shortdesc>
		 Constant for the F17 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>42</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F17 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F18"><apiName>DOM_VK_F18</apiName><shortdesc>
		 Constant for the F18 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>43</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F18 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F19"><apiName>DOM_VK_F19</apiName><shortdesc>
		 Constant for the F19 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>44</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F19 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F2"><apiName>DOM_VK_F2</apiName><shortdesc>
		 Constant for the F2 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>27</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F2 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F20"><apiName>DOM_VK_F20</apiName><shortdesc>
		 Constant for the F20 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>45</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F20 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F21"><apiName>DOM_VK_F21</apiName><shortdesc>
		 Constant for the F21 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>46</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F21 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F22"><apiName>DOM_VK_F22</apiName><shortdesc>
		 Constant for the F22 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>47</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F22 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F23"><apiName>DOM_VK_F23</apiName><shortdesc>
		 Constant for the F23 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>48</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F23 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F24"><apiName>DOM_VK_F24</apiName><shortdesc>
		 Constant for the F24 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>49</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F24 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F3"><apiName>DOM_VK_F3</apiName><shortdesc>
		 Constant for the F3 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>28</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F3 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F4"><apiName>DOM_VK_F4</apiName><shortdesc>
		 Constant for the F4 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>29</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F4 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F5"><apiName>DOM_VK_F5</apiName><shortdesc>
		 Constant for the F5 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>30</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F5 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F6"><apiName>DOM_VK_F6</apiName><shortdesc>
		 Constant for the F6 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>31</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F6 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F7"><apiName>DOM_VK_F7</apiName><shortdesc>
		 Constant for the F7 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>32</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F7 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F8"><apiName>DOM_VK_F8</apiName><shortdesc>
		 Constant for the F8 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>33</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F8 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F9"><apiName>DOM_VK_F9</apiName><shortdesc>
		 Constant for the F9 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>34</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F9 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_HOME"><apiName>DOM_VK_HOME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>14</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_INSERT"><apiName>DOM_VK_INSERT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>15</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT"><apiName>DOM_VK_LEFT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>20</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT_ALT"><apiName>DOM_VK_LEFT_ALT</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT_CONTROL"><apiName>DOM_VK_LEFT_CONTROL</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT_META"><apiName>DOM_VK_LEFT_META</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT_SHIFT"><apiName>DOM_VK_LEFT_SHIFT</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_NUM_LOCK"><apiName>DOM_VK_NUM_LOCK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_PAGE_DOWN"><apiName>DOM_VK_PAGE_DOWN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>24</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_PAGE_UP"><apiName>DOM_VK_PAGE_UP</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>25</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_PAUSE"><apiName>DOM_VK_PAUSE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_PRINTSCREEN"><apiName>DOM_VK_PRINTSCREEN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>18</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT"><apiName>DOM_VK_RIGHT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>21</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT_ALT"><apiName>DOM_VK_RIGHT_ALT</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT_CONTROL"><apiName>DOM_VK_RIGHT_CONTROL</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT_META"><apiName>DOM_VK_RIGHT_META</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT_SHIFT"><apiName>DOM_VK_RIGHT_SHIFT</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_SCROLL_LOCK"><apiName>DOM_VK_SCROLL_LOCK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>19</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_UNDEFINED"><apiName>DOM_VK_UNDEFINED</apiName><shortdesc>
		 Used for key events which do not have a virtual key code available.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Used for key events which do not have a virtual key code available.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_UP"><apiName>DOM_VK_UP</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>22</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:inputGenerated:get"><apiName>inputGenerated</apiName><shortdesc>
		 The inputGenerated attribute indicates whether the key event will normally cause visible output.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The inputGenerated attribute indicates whether the key event will normally cause visible output. If 
		 the key event does not generate any visible output, such as the use of a function key or the 
		 combination of certain modifier keys used in conjunction with another key, then the value will be 
		 false. If visible output is normally generated by the key event then the value will be true.
		 
		 <p>The value of inputGenerated does not guarantee the creation of a character. If a key event causing 
		 visible output is cancelable it may be prevented from causing output. This attribute is intended 
		 primarily to differentiate between keys events which may or may not produce visible output depending 
		 on the system state.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-inputGenerated"><linktext>W3C - DOM 3 Events: KeyEvent.inputGenerated</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyEvent:keyVal:get"><apiName>keyVal</apiName><shortdesc>
		 The value of keyVal holds the value of the Unicode character associated with the depressed key.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The value of keyVal holds the value of the Unicode character associated with the depressed key. 
		 If the key has no Unicode representation or no Unicode character is available the value is 0.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-UIEvent-keyVal"><linktext>W3C - DOM 3 Events: KeyEvent.keyVal</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyEvent:numPad:get"><apiName>numPad</apiName><shortdesc>
		 The numPad attribute indicates whether or not the key event was generated on the number pad section 
		 of the keyboard.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The numPad attribute indicates whether or not the key event was generated on the number pad section 
		 of the keyboard. If the number pad was used to generate the key event the value is true, otherwise the value is false.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-numPad"><linktext>W3C - DOM 3 Events: KeyEvent.numPad</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyEvent:outputString:get"><apiName>outputString</apiName><shortdesc>
		 outputString holds the value of the output generated by the key event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 outputString holds the value of the output generated by the key event. This may be a single Unicode 
		 character or it may be a string. It may also be null in the case where no output was generated by the key event.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-UIEvent-outputString"><linktext>W3C - DOM 3 Events: KeyEvent.outputString</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyEvent:virtKeyVal:get"><apiName>virtKeyVal</apiName><shortdesc>
		 When the key associated with a key event is not representable via a Unicode character virtKeyVale holds 
		 the virtual key code associated with the depressed key.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 When the key associated with a key event is not representable via a Unicode character virtKeyVale holds 
		 the virtual key code associated with the depressed key. If the key has a Unicode representation or no 
		 virtual code is available the value is DOM_VK_UNDEFINED.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-virtKeyVal"><linktext>W3C - DOM 3 Events: KeyEvent.virtKeyVal</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:UIEvent"><apiName>UIEvent</apiName><shortdesc>
	 The UIEvent interface provides specific contextual information 
	 associated with User Interface events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The UIEvent interface provides specific contextual information 
	 associated with User Interface events.
	 
	 <p>To create an instance of the UIEvent interface, use the 
	 DocumentEvent.createEvent("UIEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:UIEvent:DOMActivate"><apiName>DOMActivate</apiName><shortdesc>
		 Refer to Activation requests and behavior.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Refer to Activation requests and behavior.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>UIEvent.view is in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-flow-activation"><linktext>W3C - Activation requests and behavior</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMActivate"><linktext>W3C - UIEvent.DOMActivate</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:DOMFocusIn"><apiName>DOMFocusIn</apiName><shortdesc>
		 An event target receives focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMFocusIn</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 An event target receives focus. The focus is given to the element before the dispatch of this event type. This event type is dispatched after the event type focus.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMFocusIn"><linktext>W3C - UIEvent.DOMFocusIn</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:DOMFocusOut"><apiName>DOMFocusOut</apiName><shortdesc>
		 An event target loses focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMFocusOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 An event target loses focus. The focus is taken from the element before the dispatch of this event type. This event type is dispatched after the event type blur.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMFocusOut"><linktext>W3C - UIEvent.DOMFocusOut</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:abort"><apiName>abort</apiName><shortdesc>
		 Loading of a resource has been aborted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>abort</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Loading of a resource has been aborted.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-abort"><linktext>W3C - DOM 3 Events: UIEvent.abort / Event.abort</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:blur"><apiName>blur</apiName><shortdesc>
		 An event target loses focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>blur</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 An event target loses focus. The focus is taken from the element before the dispatch of this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-blur"><linktext>W3C - UIEvent.blur</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:change"><apiName>change</apiName><shortdesc>
		 A control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A control loses the input focus and its value has been modified since gaining focus. This event type is dispatched before the event type blur.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-change"><linktext>W3C - DOM 3 Events: UIEvent.change / Event.change</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:error"><apiName>error</apiName><shortdesc>
		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 
		 such as an invalid image, a script execution error, or non-well-formed XML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 
		 such as an invalid image, a script execution error, or non-well-formed XML.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-error"><linktext>W3C - DOM 3 Events: UIEvent.error / Event.error</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:focus"><apiName>focus</apiName><shortdesc>
		 An event target receives focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>focus</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 An event target receives focus. The focus is given to the element before the dispatch of this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-focus"><linktext>W3C - UIEvent.focus</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:load"><apiName>load</apiName><shortdesc>
		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 
		 (such as images, style sheets, or scripts).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>load</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 
		 (such as images, style sheets, or scripts). Dependent resources that fail to load will not prevent this 
		 event from firing if the resource that loaded them is still accessible via the DOM. If this event type 
		 is dispatched, implementations are required to dispatch this event at least on the Document node.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-load"><linktext>W3C - DOM 3 Events: UIEvent.load / Event.load</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:reset"><apiName>reset</apiName><shortdesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reset</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-reset"><linktext>W3C - DOM 3 Events: UIEvent.reset / Event.reset</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:resize"><apiName>resize</apiName><shortdesc>
		 A document view or an element has been resized.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resize</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A document view or an element has been resized. The resize occured before the dispatch of this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent"><linktext>W3C - DOM 3 Events: UIEvent.resize</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:scroll"><apiName>scroll</apiName><shortdesc>
		 A document view or an element has been scrolled.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A document view or an element has been scrolled. The scroll occured before the dispatch of this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-scroll"><linktext>W3C - DOM 3 Events: UIEvent.scroll</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:select"><apiName>select</apiName><shortdesc>
		 A user selects some text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>select</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A user selects some text. DOM Level 3 Events does not provide contextual information to access 
		 the selected text. The selection occured before the dispatch of this event type.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-select"><linktext>W3C - DOM 3 Events: UIEvent.select / Event.select</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:submit"><apiName>submit</apiName><shortdesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>submit</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-submit"><linktext>W3C - DOM 3 Events: UIEvent.submit / Event.submit</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:unload"><apiName>unload</apiName><shortdesc>
		 The DOM implementation removes from the environment the resource (such as the document) or any dependent
		 resources (such as images, style sheets, scripts).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unload</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The DOM implementation removes from the environment the resource (such as the document) or any dependent
		 resources (such as images, style sheets, scripts). The document is unloaded after the dispatch of this event 
		 type. If this event type is dispatched, implementations are required to dispatch this event at least on the 
		 Document node.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-unload"><linktext>W3C - DOM 3 Events: UIEvent.unload / Event.unload</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:detail:get"><apiName>detail</apiName><shortdesc>
		 Specifies some detail information about the Event, depending 
		 on the type of event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Specifies some detail information about the Event, depending 
		 on the type of event.
		 
		 <p><b>Note:</b> For mouse events, such as click, dblclick, mousedown, or mouseup, the detail 
		 property indicates how many times the mouse has been clicked in the same location for this event.</p>
		 
		 <p><b>Note:</b> For a dblclick event the value of detail is always 2.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;title&gt;event.detail example&lt;/title&gt;
		 	&lt;script type="text/javascript"&gt;
		 	function giveDetails(e) {
		 		var text = document.getElementById("t");
		 		text.value = e.detail;
		 	}
		 	function init() {
		 		var b1 = document.getElementById("b");
		 		b1.onclick = giveDetails;   
		 	}
		 	&lt;/script&gt;
		 
		 &lt;/head&gt;
		 &lt;body onload="init();"&gt;
		 &lt;form&gt;
		 	&lt;input id="b" type="button" value="details"&gt;
		 	&lt;input id="t" type="text" value=""&gt;&lt;br&gt;
		 	&lt;input type="reset"&gt;
		 &lt;/form&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.detail"><linktext>MDC - event.detail</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-detail"><linktext>W3C - UIEvent.detail</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:isChar:get"><apiName>isChar</apiName><shortdesc>
		 Returns a boolean indicating whether the event produced a key character or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether the event produced a key character or not. 
		 
		 <p><b>Note:</b> Some key combos may raise events but not produce any character (example: ctrl + alt ?). 
		 When this is the case, isChar returns false. isChar is used when event handlers need to do something like echo 
		 the input on the screen. </p>
		 
		 <p><b>Note:</b> There is currently a known bug affecting the return result, which is always false and 
		 never true. Please see the discussion link in the sidebar for more details. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if e.isChar {
		 	echoInput(e.type);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.isChar"><linktext>MDC - event.isChar</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:layerX:get"><apiName>layerX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event relative to the current layer.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event relative to the current layer. 
		 
		 <p><b>Note:</b> layerX takes scrolling of the page into account, and returns a value relative to the 
		 whole of the document, unless the event occurs inside a positioned element, where the returned value is 
		 relative to the top left of the positioned element. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		&lt;head&gt;
		&lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;

		&lt;script type="text/javascript"&gt;

		function showCoords(evt){
		  var form = document.forms.form_coords;
		  var parent_id = evt.target.parentNode.id;
		  form.parentId.value = parent_id;
		  form.pageXCoords.value = evt.pageX;
		  form.pageYCoords.value = evt.pageY;
		  form.layerXCoords.value = evt.layerX;
		  form.layerYCoords.value = evt.layerY;
		}
		&lt;/script&gt;

		&lt;style type="text/css"&gt;

		 #d1 {
		  border: solid blue 1px;
		  padding: 20px;
		 }

		 #d2 {
		  position: absolute;
		  top: 180px;
		  left: 80%;
		  right:auto;
		  width: 40%;
		  border: solid blue 1px;
		  padding: 20px;
		 }

		 #d3 {
		  position: absolute;
		  top: 240px;
		  left: 20%;
		  width: 50%;
		  border: solid blue 1px;
		  padding: 10px;
		 }

		&lt;/style&gt;
		&lt;/head&gt;

		&lt;body onmousedown="showCoords(event)"&gt;

		&lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;

		&lt;div id="d1"&gt;
		&lt;span&gt;This is an un-positioned div so clicking it will return
		layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		&lt;/div&gt;

		&lt;div id="d2"&gt;

		&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		values that are relative to the top-left corner of this positioned
		element. Note the pageX\pageY properties still return the
		absolute position in the document, including page scrolling.&lt;/span&gt;

		&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		will return layerX/layerY values that are relative to the top-left
		corner of this positioned element. Note the pageX\pageY properties still
		return the absolute position in the document, including page
		scrolling.&lt;/span&gt;

		&lt;/div&gt;

		&lt;div id="d3"&gt;
		&lt;form name="form_coords" id="form1"&gt;
		 Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;

		 pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;

		&lt;/form&gt;
		&lt;/div&gt;

		&lt;/body&gt;
		&lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.layerX"><linktext>MDC - event.layerX</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:layerY:get"><apiName>layerY</apiName><shortdesc>
		 Returns the vertical coordinate of the event relative to the current layer.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event relative to the current layer. 
		 
		 <p><b>Note:</b> layerY takes scrolling of the page into account, and returns a value relative to the 
		 whole of the document, unless the event occurs inside a positioned element, where the returned value is relative 
		 to the top left of the positioned element. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		&lt;head&gt;
		&lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;

		&lt;script type="text/javascript"&gt;

		function showCoords(evt){
		  var form = document.forms.form_coords;
		  var parent_id = evt.target.parentNode.id;
		  form.parentId.value = parent_id;
		  form.pageXCoords.value = evt.pageX;
		  form.pageYCoords.value = evt.pageY;
		  form.layerXCoords.value = evt.layerX;
		  form.layerYCoords.value = evt.layerY;
		}
		&lt;/script&gt;

		&lt;style type="text/css"&gt;

		 #d1 {
		  border: solid blue 1px;
		  padding: 20px;
		 }

		 #d2 {
		  position: absolute;
		  top: 180px;
		  left: 80%;
		  right:auto;
		  width: 40%;
		  border: solid blue 1px;
		  padding: 20px;
		 }

		 #d3 {
		  position: absolute;
		  top: 240px;
		  left: 20%;
		  width: 50%;
		  border: solid blue 1px;
		  padding: 10px;
		 }

		&lt;/style&gt;
		&lt;/head&gt;

		&lt;body onmousedown="showCoords(event)"&gt;

		&lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;

		&lt;div id="d1"&gt;
		&lt;span&gt;This is an un-positioned div so clicking it will return
		layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		&lt;/div&gt;

		&lt;div id="d2"&gt;

		&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		values that are relative to the top-left corner of this positioned
		element. Note the pageX\pageY properties still return the
		absolute position in the document, including page scrolling.&lt;/span&gt;

		&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		will return layerX/layerY values that are relative to the top-left
		corner of this positioned element. Note the pageX\pageY properties still
		return the absolute position in the document, including page
		scrolling.&lt;/span&gt;

		&lt;/div&gt;

		&lt;div id="d3"&gt;
		&lt;form name="form_coords" id="form1"&gt;
		 Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;

		 pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;

		&lt;/form&gt;
		&lt;/div&gt;

		&lt;/body&gt;
		&lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.layerY"><linktext>MDC - event.layerY</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:pageX:get"><apiName>pageX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event relative to whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event relative to whole document. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageX"><linktext>MDC - event.pageX</linktext></link><link href="dom.events.xml#MouseEvent/pageX"><linktext>dom.events.MouseEvent.pageX</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:pageY:get"><apiName>pageY</apiName><shortdesc>
		 Returns the vertical coordinate of the event relative to the whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event relative to the whole document. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageY"><linktext>MDC - event.pageY</linktext></link><link href="dom.events.xml#MouseEvent/pageY"><linktext>dom.events.MouseEvent.pageY</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:view:get"><apiName>view</apiName><shortdesc>
		 Returns the AbstractView object from which the event was generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:AbstractView</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the AbstractView object from which the event was generated. In browsers, this is the window object the event happened in. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.view"><linktext>MDC - event.view</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-view"><linktext>W3C - UIEvent.view</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:which:get"><apiName>which</apiName><shortdesc>
		 Returns the numeric keyCode of the key pressed, or the character code (charCode) for 
		 an alphanumeric key pressed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the numeric keyCode of the key pressed, or the character code (charCode) for 
		 an alphanumeric key pressed. 
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;charCode/keyCode/which example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showKeyPress(evt) {
		 	alert("onkeypress handler: \n"
		 		+ "keyCode property: " + evt.keyCode + "\n"
		 		+ "which property: " + evt.which + "\n"
		 		+ "charCode property: " + evt.charCode + "\n"
		 		+ "Character Key Pressed: "
		 		+ String.fromCharCode(evt.charCode) + "\n"
		 	);
		 }
		 
		 
		 function keyDown(evt) {
		 	alert("onkeydown handler: \n"
		 		+ "keyCode property: " + evt.keyCode + "\n"
		 		+ "which property: " + evt.which + "\n"
		 	);
		 }
		 
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body
		   onkeypress="showKeyPress(event);"
		   onkeydown="keyDown(event);"
		 &gt;
		 
		 &lt;p&gt;Please press any key.&lt;/p&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.which"><linktext>MDC - event.which</linktext></link><link href="dom.events.xml#UIEvent/keyCode"><linktext>keyCode</linktext></link><link href="dom.events.xml#UIEvent/charCode"><linktext>charCode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:Event"><apiName>Event</apiName><shortdesc>
	 The Event interface is used to provide contextual information about an 
	 event to the listener processing the event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Event interface is used to provide contextual information about an 
	 event to the listener processing the event. An object which implements 
	 the Event interface is passed as the parameter to an EventListener. The 
	 object passed to the event listener may also implement derived interfaces 
	 that provide access to information directly relating to the type of event 
	 they represent.
	 
	 <p>To create an instance of the Event interface, use the 
	 DocumentEvent.createEvent("Event") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:Event:AT_TARGET"><apiName>AT_TARGET</apiName><shortdesc>
		 The current event is in the target phase, i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The current event is in the target phase, i.e. it is being evaluated at the event target.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#AT_TARGET"><linktext>W3C - DOM 3 Events: Event.AT_TARGET</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:BUBBLING_PHASE"><apiName>BUBBLING_PHASE</apiName><shortdesc>
		 The current event phase is the bubbling phase.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The current event phase is the bubbling phase.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#BUBBLING_PHASE"><linktext>W3C - DOM 3 Events: Event.BUBBLING_PHASE</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:CAPTURING_PHASE"><apiName>CAPTURING_PHASE</apiName><shortdesc>
		 The current event phase is the capture phase.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The current event phase is the capture phase.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#CAPTURING_PHASE"><linktext>W3C - DOM 3 Events: Event.CAPTURING_PHASE</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:abort"><apiName>abort</apiName><shortdesc>
		 Loading of a resource has been aborted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>abort</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Loading of a resource has been aborted.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-abort"><linktext>W3C - DOM 3 Events: UIEvent.abort / Event.abort</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:change"><apiName>change</apiName><shortdesc>
		 A control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A control loses the input focus and its value has been modified since gaining focus. This event type is dispatched before the event type blur.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-change"><linktext>W3C - DOM 3 Events: UIEvent.change / Event.change</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:error"><apiName>error</apiName><shortdesc>
		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 
		 such as an invalid image, a script execution error, or non-well-formed XML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 
		 such as an invalid image, a script execution error, or non-well-formed XML.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-error"><linktext>W3C - DOM 3 Events: UIEvent.error / Event.error</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:load"><apiName>load</apiName><shortdesc>
		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 
		 (such as images, style sheets, or scripts).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>load</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 
		 (such as images, style sheets, or scripts). Dependent resources that fail to load will not prevent this 
		 event from firing if the resource that loaded them is still accessible via the DOM. If this event type 
		 is dispatched, implementations are required to dispatch this event at least on the Document node.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-load"><linktext>W3C - DOM 3 Events: UIEvent.load / Event.load</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:reset"><apiName>reset</apiName><shortdesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reset</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-reset"><linktext>W3C - DOM 3 Events: UIEvent.reset / Event.reset</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:select"><apiName>select</apiName><shortdesc>
		 A user selects some text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>select</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A user selects some text. DOM Level 3 Events does not provide contextual information to access 
		 the selected text. The selection occured before the dispatch of this event type.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-select"><linktext>W3C - DOM 3 Events: UIEvent.select / Event.select</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:submit"><apiName>submit</apiName><shortdesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>submit</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-submit"><linktext>W3C - DOM 3 Events: UIEvent.submit / Event.submit</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:unload"><apiName>unload</apiName><shortdesc>
		 The DOM implementation removes from the environment the resource (such as the document) or any dependent
		 resources (such as images, style sheets, scripts).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unload</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The DOM implementation removes from the environment the resource (such as the document) or any dependent
		 resources (such as images, style sheets, scripts). The document is unloaded after the dispatch of this event 
		 type. If this event type is dispatched, implementations are required to dispatch this event at least on the 
		 Document node.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-unload"><linktext>W3C - DOM 3 Events: UIEvent.unload / Event.unload</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:bubbles:get"><apiName>bubbles</apiName><shortdesc>
		 Used to indicate whether or not an event is a bubbling event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Used to indicate whether or not an event is a bubbling event. If the 
		 event can bubble the value is true, otherwise the value is false.
		 
		 </apiDesc><example>
		 <codeblock>
		 function goInput(e) {
		 	// checks bubbles and
		 	if not e.bubbles {
		 		// passes event along if it's not
		 		passItOn(e); 
		 	}
		 	// already bubbling
		 	doOutput(e)
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.altKey"><linktext>MDC - event.bubbles</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-canBubble"><linktext>W3C - DOM 3 Events: Event.bubbles</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:cancelable:get"><apiName>cancelable</apiName><shortdesc>
		 Indicates whether the event is cancelable or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates whether the event is cancelable or not.
		 
		 <p><b>Note:</b> Whether an event can be canceled or not 
		 is something that's determined when that event is initialized. </p>
		 
		 <p><b>Note:</b> To cancel an event, call the preventDefault method on the event. This keeps 
		 the implementation from executing the default action that is associated with the event. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.cancelable"><linktext>MDC - event.cancelable</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-canCancel"><linktext>W3C - DOM 3 Events: Event.cancelable</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:currentTarget:get"><apiName>currentTarget</apiName><shortdesc>
		 Identifies the current target for the event, as the event traverses the DOM.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.events:EventTarget</apiValueClassifier></apiValueDef><apiDesc>
		 Identifies the current target for the event, as the event traverses the DOM.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.currentTarget"><linktext>MDC - event.currentTarget</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-currentTarget"><linktext>W3C - DOM 3 Events: Event.currentTarget</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:defaulPrevented:get"><apiName>defaulPrevented</apiName><shortdesc>
		 Used to indicate whether Event.preventDefault() has been called for 
		 this event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Used to indicate whether Event.preventDefault() has been called for 
		 this event.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-defaultPrevented"><linktext>W3C - DOM 3 Events: Event.defaulPrevented</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:eventPhase:get"><apiName>eventPhase</apiName><shortdesc>
		 Used to indicate which phase of event flow is currently being accomplished.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Used to indicate which phase of event flow is currently being accomplished.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.eventPhase"><linktext>MDC - event.eventPhase</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-eventPhase"><linktext>W3C - DOM 3 Events: Event.eventPhase</linktext></link><link href="dom.events.xml#Event/CAPTURING_PHASE"><linktext>CAPTURING_PHASE</linktext></link><link href="dom.events.xml#Event/AT_TARGET"><linktext>AT_TARGET</linktext></link><link href="dom.events.xml#Event/BUBBLING_PHASE"><linktext>BUBBLING_PHASE</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:explicitOriginalTarget:get"><apiName>explicitOriginalTarget</apiName><shortdesc>
		 The explicit original target of the event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko.events:nsIDOMEventTarget</apiValueClassifier></apiValueDef><apiDesc>
		 The explicit original target of the event.
		 
		 <p>If the event was retargeted for some reason other than an anonymous boundary crossing, this 
		 will be set to the target before the retargeting occurs. For example, mouse events are retargeted 
		 to their parent node when they happen over text nodes (see bug 185889), and in that case 
		 currentTarget will show the parent and explicitOriginalTarget will show the text node. </p>
		 
		 <p>explicitOriginalTarget differs from originalTarget in that it will never contain anonymous content. </p>
		 
		 </apiDesc><example>
		 This property can be used with &lt;command&gt; to get the event details of the original object calling the command.
		 <codeblock>
		 function myCommand(ev) {
		 	alert(ev.explicitOriginalTarget.nodeName); // returns 'menuitem'
		 }
		 
		 
		 &lt;command id="my-cmd-anAction" oncommand="myCommand(event);"/&gt;
		 
		 &lt;menulist&gt;&lt;menupopup&gt;
		 	&lt;menuitem label="Get my element name!" command="my-cmd-anAction"/&gt;
		 &lt;/menupopup&gt;&lt;/menulist&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMNSEvent.idl"><linktext>Mozilla Central - nsIDOMNSEvent.idl</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:isTrusted:get"><apiName>isTrusted</apiName><shortdesc>
		 Determines if the event was from the user or script generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Determines if the event was from the user or script generated. Returns
		 true if the user caused the event to be dispatched.
		 
		 <p><b>Note:</b> Can't find any more information on this property</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://osdir.com/ml/w3c.webapi/2006-06/msg00080.html"><linktext>W3C WebAPI Forum - [DOM3EV] introduce Event.trusted?</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:namespaceURI:get"><apiName>namespaceURI</apiName><shortdesc>
		 The namespace URI associated with this event at initialization time, or 
		 null if it is unspecified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The namespace URI associated with this event at initialization time, or 
		 null if it is unspecified.
		 DOM Level 2 Events initialization methods, such as Event.initEvent(), set 
		 the value to null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-namespaceURI"><linktext>W3C - DOM 3 Events: Event.namespaceURI</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:originalTarget:get"><apiName>originalTarget</apiName><shortdesc>
		 The original target of the event before any retargetings.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/></apiValueDef><apiDesc>
		 The original target of the event before any retargetings.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMNSEvent.idl"><linktext>Mozilla Central - nsIDOMNSEvent.idl</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:target:get"><apiName>target</apiName><shortdesc>
		 Used to indicate the event target.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.events:EventTarget</apiValueClassifier></apiValueDef><apiDesc>
		 Used to indicate the event target. This attribute contains the target node 
		 when used with the Event dispatch and DOM event flow.
		 
		 </apiDesc><example>
		 <codeblock>&lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;target example&lt;/title&gt;
		 &lt;script type="text/javascript"&gt;
		 
		 function highlightTarget(evt) {
		 	evt.target.style.backgroundColor = 'blue';
		 }
		 
		 function resetTarget(evt) {
  		 	evt.target.style.backgroundColor = 'silver';
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="highlightTarget(event)" onmouseup="resetTarget(event)"&gt;
		 
		 &lt;p&gt;This example demonstrates how, by using event propagation, two event
		 handler functions in the body element can use the &lt;i&gt;target&lt;/i&gt; property
		 to distinguish between, and process, all other bubbleable events occuring
		 lower down the DOM. Note: not all events can bubble up the DOM.&lt;/p&gt;
		 
		 &lt;p&gt;As an event lower down the DOM bubbles up and reaches the body
		 object, the &lt;i&gt;target&lt;/i&gt; property contains the object reference of the
		 original event target. In this case which element in the document
		 received an onmousedown or onmouseup event.&lt;/p&gt;
		 
		 &lt;p&gt;This allows the event handlers of the body object to process bubbleable
		 events occuring lower down the DOM structure, which means there is no need
		 to attach the event handlers to every button &amp; para element of the page.&lt;/p&gt;
		 
		 &lt;button&gt;button 1&lt;/button&gt;&lt;br /&gt;
		 &lt;button&gt;button 2&lt;/button&gt;&lt;br /&gt;
		 
		 &lt;button&gt;button 3&lt;/button&gt;&lt;br /&gt;
		 &lt;button&gt;button 4&lt;/button&gt;&lt;br /&gt;
		 &lt;button&gt;button 5&lt;/button&gt;&lt;br /&gt;
		 &lt;button&gt;button 6&lt;/button&gt;&lt;br /&gt;
		 
		 &lt;button&gt;button 7&lt;/button&gt;&lt;br /&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.target"><linktext>MDC - event.target</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-target"><linktext>W3C - DOM 3 Events: Event.target</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:timeStamp:get"><apiName>timeStamp</apiName><shortdesc>
		 Used to specify the time at which the event was created in milliseconds 
		 relative to 1970-01-01T00:00:00Z.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMTimeStamp</apiValueClassifier></apiValueDef><apiDesc>
		 Used to specify the time at which the event was created in milliseconds 
		 relative to 1970-01-01T00:00:00Z. Due to the fact that some systems may not 
		 provide this information the value of timeStamp may be not available for all 
		 events. When not available, the value is 0.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 
		 &lt;title&gt;timeStamp example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 function getTime(event) {
		 	document.getElementById("time").firstChild.nodeValue = event.timeStamp;
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="getTime(event)"&gt;
		 
		 &lt;p&gt;Press any key to get the current timestamp
		 for the onkeypress event.&lt;/p&gt;
		 &lt;p&gt;timeStamp: &lt;span id="time"&gt;-&lt;/span&gt;&lt;/p&gt;
		 
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.timeStamp"><linktext>MDC - event.timeStamp</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-timeStamp"><linktext>W3C - DOM 3 Events: Event.timeStamp</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:type:get"><apiName>type</apiName><shortdesc>
		 The local name of the event type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The local name of the event type. The name must be an NCName as defined in 
		 [XML Namespaces 1.1] and is case-sensitive.
		 
		 <p><b>Note:</b> The type must be an XML name.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 
		 &lt;title&gt;type example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 var currEvent = null;
		 
		 function getEvtType(evt) {
		 	currEvent = evt.type;
		 	document.getElementById("Etype").firstChild.nodeValue = currEvent;
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body
		   onkeydown="getEvtType(event)"
		   onkeyup="getEvtType(event)"
		   onmousedown="getEvtType(event)"
		   onmouseup="getEvtType(event)"&gt;
		 
		 &lt;p&gt;Press any key or click the mouse to get the event type.&lt;/p&gt;
		 &lt;p&gt;Event type: &lt;span id="Etype"&gt;-&lt;/span&gt;&lt;/p&gt;
		 
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.type"><linktext>MDC - event.type</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-type"><linktext>W3C - DOM 3 Events: Event.type</linktext></link><link href="http://www.w3.org/TR/2006/REC-xml-names11-20060816/"><linktext>W3C - XML Namespaces 1.1</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:TextEvent"><apiName>TextEvent</apiName><shortdesc>
	 The TextEvent interface provides specific contextual information 
	 associated with Text Events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:UIEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The TextEvent interface provides specific contextual information 
	 associated with Text Events.
	 
	 <p>To create an instance of the TextEvent interface, use the 
	 DocumentEvent.createEvent("TextEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:TextEvent:textInput"><apiName>textInput</apiName><shortdesc>
		 One or more characters have been entered.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>textInput</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 One or more characters have been entered. 
		 
		 <p>The characters can originate from a variety of sources. For example, it could be characters resulting 
		 from a key being pressed or released on a keyboard device, characters resulting from the processing of an 
		 input method editor, or resulting from a voice command. Where a "paste" operation generates a simple 
		 sequence of characters, i.e. a text without any structure or style information, this event type should 
		 be generated as well.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view and TextEvent.data are in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-textInput"><linktext>W3C - TextEvent.textInput</linktext></link></related-links></apiValue><apiValue id="dom.events:TextEvent:data:get"><apiName>data</apiName><shortdesc>
		 Holds the value of the characters generated by the character device.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Holds the value of the characters generated by the character device. 
		 This may be a single Unicode character or a non-empty sequence of 
		 Unicode characters [Unicode]. Characters should be normalized as 
		 defined by the Unicode normalization form NFC, defined in [UAX #15]. 
		 This attribute cannot be null or contain the empty string.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-data"><linktext>W3C - TextEvent.data</linktext></link><link href="http://www.unicode.org/versions/Unicode5.0.0/"><linktext>Unicode</linktext></link><link href="http://www.unicode.org/reports/tr15/"><linktext>UAX #15</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MouseEvent"><apiName>MouseEvent</apiName><shortdesc>
	 The MouseEvent interface provides specific contextual information 
	 associated with Mouse events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>cssom.view:MouseEventView</apiBaseInterface><apiBaseClassifier>dom.events:UIEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MouseEvent interface provides specific contextual information 
	 associated with Mouse events.
	 
	 <p>In the case of nested elements mouse events are always targeted at the 
	 most deeply nested element. Ancestors of the targeted element may use 
	 bubbling to obtain notification of mouse events which occur within their 
	 descendent elements.</p>
	 
	 <p>To create an instance of the MouseEvent interface, use the 
	 DocumentEvent.createEvent("MouseEvent") method call.</p>
	 
	 <p><b>Note:</b> When initializing MouseEvent objects using initMouseEvent or 
	 initMouseEventNS, implementations should use the client coordinates clientX 
	 and clientY for calculation of other coordinates (such as target coordinates 
	 exposed by DOM Level 0 implementations).</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:MouseEvent:click"><apiName>click</apiName><shortdesc>
		 A pointing device button is clicked over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>click</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device button is clicked over an element. 
		 
		 <p>The definition of a click depends on the environment configuration; i.e. it may depend on the screen location or 
		 the delay between the press and release of the pointing device button. In any case, the event target must be the 
		 same between the mousedown, mouseup, and click. The sequence of these events is: mousedown, mouseup, and click. It 
		 depends on the environment configuration whether the event type click can occur if one or more of the event types 
		 mouseover, mousemove, and mouseout occur between the press and release of the pointing device button. In addition, 
		 the event type is dispatched as described in Activation requests and behavior.</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, MouseEvent.button, and UIEvent.view 
		 are in use. The UIEvent.detail attribute indicates the current click count. The attribute value is 1 when the user 
		 begins this action and increments by 1 for each click.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-click"><linktext>W3C - MouseEvent.click</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:dblclick"><apiName>dblclick</apiName><shortdesc>
		 A pointing device button is clicked twice over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dblclick</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device button is clicked twice over an element. 
		 
		 <p>The definition of a double click depends on the environment configuration, except that the event target 
		 must be the same between mousedown, mouseup, and dblclick. This event type is dispatched after the event 
		 type click if a click and double click occur simultaneously, and after the event type mouseup otherwise.</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, MouseEvent.altKey, 
		 MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, MouseEvent.button, and UIEvent.view are in use. The UIEvent.detail 
		 attribute indicates the current click count.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-dblclick"><linktext>W3C - MouseEvent.dblclick</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mousedown"><apiName>mousedown</apiName><shortdesc>
		 A pointing device button is pressed over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mousedown</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device button is pressed over an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, MouseEvent.button, and UIEvent.view 
		 are in use. The UIEvent.detail attribute indicates the current click count incremented by one. For example, if no 
		 click happened before the mousedown, UIEvent.detail will contain the value 1.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousedown"><linktext>W3C - MouseEvent.mousedown</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mousemove"><apiName>mousemove</apiName><shortdesc>
		 A pointing device is moved while it is over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mousemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device is moved while it is over an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousemove"><linktext>W3C - MouseEvent.mousemove</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mouseout"><apiName>mouseout</apiName><shortdesc>
		 A pointing device is moved away from an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseout</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device is moved away from an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use. 
		 MouseEvent.relatedTarget indicates the event target a pointing device is entering, if any.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mouseout"><linktext>W3C - MouseEvent.mouseout</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mouseover"><apiName>mouseover</apiName><shortdesc>
		 A pointing device is moved onto an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseover</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device is moved onto an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use. 
		 MouseEvent.relatedTarget indicates the event target a pointing device is exiting, if any.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mouseover"><linktext>W3C - MouseEvent.mouseover</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mouseup"><apiName>mouseup</apiName><shortdesc>
		 A pointing device button is released over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseup</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device button is released over an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, 
		 MouseEvent.button, and UIEvent.view are in use. The UIEvent.detail attribute indicates the current click count incremented by one.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mouseup"><linktext>W3C - MouseEvent.mouseup</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:altKey:get"><apiName>altKey</apiName><shortdesc>
		 Refer to the KeyboardEvent.altKey attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Refer to the KeyboardEvent.altKey attribute.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-altKey"><linktext>W3C - MouseEvent.altKey</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:button:get"><apiName>button</apiName><shortdesc>
		 Returns an integer value indicating the button that changed state.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns an integer value indicating the button that changed state. 
		 Some mice may provide or simulate more buttons, and values higher than 2 
		 can be used to represent such buttons.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry><codeph>0</codeph></entry><entry>Standard 'click', usually left button </entry>
		 	</row><row>
		 		<entry><codeph>1</codeph></entry><entry>Middle button, usually wheel-click </entry>
		 	</row><row>
		 		<entry><codeph>2</codeph></entry><entry>Right button, usually right-click </entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, 
		 MouseEvent.button, and UIEvent.view are in use. The UIEvent.detail attribute indicates the current click count incremented by one.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note:</b> Because mouse clicks are frequently intercepted by the user 
		 interface, it may be difficult to detect buttons other than those for a standard mouse 
		 click (usually the left button) in some circumstances. </p>
		 
		 <p><b>Note:</b> Users may change the configuration of buttons on their pointing 
		 device so that if an event's button property is zero, it may not have been caused by 
		 the button that is physically left–most on the pointing device; however, it should 
		 behave as if the left button was clicked in the standard button layout. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script type="text/javascript"&gt;
		 
		 function whichButton(e) {
		 	// Handle different event models
		 	var e = e || window.event;
		 	var btnCode;
		 
		 	if ('object' == typeof e) {
		 		btnCode = e.button;
		 
		 		switch (btnCode) {
		 			case 0 : alert('Left button clicked');
		 			break;
		 			case 1 : alert('Middle button clicked');
		 			break;
		 			case 2 : alert('Right button clicked');
		 			break;
		 			default: alert('Unexpected code: ' + btnCode);
		 		}
		 	}
		 }
		 
		 &lt;/script&gt;
		 
		 &lt;p onmouseup="whichButton(event);" oncontextmenu="event.preventDefault();"&gt;Click with mouse...&lt;/p&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.button"><linktext>MDC - event.button</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-button"><linktext>W3C - MouseEvent.button</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:clientX:get"><apiName>clientX</apiName><shortdesc>
		 
		 Returns the horizontal coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the horizontal coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page). 
		 
		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 
		 event with a clientX value of 0, regardless of whether the page is scrolled horizontally.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;title&gt;clientX\clientY example&lt;/title&gt;
		 
		 	&lt;script type="text/javascript"&gt;
		 		function showCoords(evt) {
		 			alert(
		 			"clientX value: " + evt.clientX + "\n"
		 			+ "clientY value: " + evt.clientY + "\n"
		 		);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 	&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533567(VS.85).aspx"><linktext>MSDN: clientX Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.clientX"><linktext>MDC - Event: clientX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: clientX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/clientY"><linktext>clientY</linktext></link><link href="dom.events.xml#MouseEvent/screenX"><linktext>screenX</linktext></link><link href="dom.events.xml#MouseEvent/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:clientY:get"><apiName>clientY</apiName><shortdesc>
		 
		 Returns the vertical coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the vertical coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).
		 
		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 
		 event with a clientY value of 0, regardless of whether the page is scrolled vertically.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;clientX\clientY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"clientX value: " + evt.clientX + "\n"
		 				+ "clientY value: " + evt.clientY + "\n"
		 			);
		 			}
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533568(VS.85).aspx"><linktext>MSDN: clientY Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.clientY"><linktext>MDC - Event: clientY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: clientY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/clientX"><linktext>clientX</linktext></link><link href="dom.events.xml#MouseEvent/screenX"><linktext>screenX</linktext></link><link href="dom.events.xml#MouseEvent/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:ctrlKey:get"><apiName>ctrlKey</apiName><shortdesc>
		 Refer to the KeyboardEvent.ctrlKey attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Refer to the KeyboardEvent.ctrlKey attribute.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-ctrlKey"><linktext>W3C - MouseEvent.ctrlKey</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:metaKey:get"><apiName>metaKey</apiName><shortdesc>
		 Refer to the KeyboardEvent.metaKey attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Refer to the KeyboardEvent.metaKey attribute.
		 
		 </apiDesc><example>
		 <codeblock>
		 function goInput(e) {
		 	// checks metaKey and
		 	if (e.metaKey) {
		 		// passes event along
		 		superSizeOutput(e);
		 	} else {
		 		doOutput(e);
		 	}
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.metaKey"><linktext>MDC - event.metaKey</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-metaKey"><linktext>W3C - MouseEvent.metaKey</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:offsetX:get"><apiName>offsetX</apiName><shortdesc>
		 
		 Returns the horizontal coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_incorrect"/><apiTool name="Safari" version="3.1_incorrect"/><apiTool name="Safari" version="4.0b_incorrect"/><apiTool name="Chrome" version="1.0_incorrect"/><apiTool name="Chrome" version="2.0_incorrect"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the horizontal coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.
		 
		 <p>In IE the coordinates are calculated relative to the target element when that element is 
		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 
		 relative to the target's offsetParent.</p>
		 
		 <p><b>Note (Safari/Chrome):</b> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the
		 border box.</p>
		 
		 <p><b>Note (Opera):</b> Opera calculates the position from the content box instead of the padding box.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;head&gt;
		 	&lt;script&gt;
		 		function offsetCoords() {
		 			var offsetInfo = ""
		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"
		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"
		 			alert(offsetInfo);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 
		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;
		 	...
		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;
		 	...
		 	&lt;/div&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534305(VS.85).aspx"><linktext>MSDN: offsetX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: offsetX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/offsetY"><linktext>offsetY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:offsetY:get"><apiName>offsetY</apiName><shortdesc>
		 
		 Returns the vertical coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_incorrect"/><apiTool name="Safari" version="3.1_incorrect"/><apiTool name="Safari" version="4.0b_incorrect"/><apiTool name="Chrome" version="1.0_incorrect"/><apiTool name="Chrome" version="2.0_incorrect"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the vertical coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.
		 
		 <p>In IE the coordinates are calculated relative to the target element when that element is 
		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 
		 relative to the target's offsetParent.</p>
		 
		 <p><b>Note (Safari/Chrome):</b> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the
		 border box.</p>
		 
		 <p><b>Note (Opera):</b> Opera calculates the position from the content box instead of the padding box.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;head&gt;
		 	&lt;script&gt;
		 		function offsetCoords() {
		 			var offsetInfo = ""
		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"
		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"
		 			alert(offsetInfo);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 
		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;
		 	...
		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;
		 	...
		 	&lt;/div&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534306(VS.85).aspx"><linktext>MSDN: offsetY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: offsetY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/offsetX"><linktext>offsetX</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:pageX:get"><apiName>pageX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event relative to whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event relative to whole document. 
		 
		 <p><b>Note (IE):</b> In order to get it in IE, too, add the scrolling offset of the 
		 document to clientX/Y.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	function showCoords(evt){
		 		var form = document.forms.form_coords;
		 		var parent_id = evt.target.parentNode.id;
		 		form.parentId.value = parent_id;
		 		form.pageXCoords.value = evt.pageX;
		 		form.pageYCoords.value = evt.pageY;
		 		form.layerXCoords.value = evt.layerX;
		 		form.layerYCoords.value = evt.layerY;
		 	}
		 &lt;/script&gt;
		 
		 &lt;style type="text/css"&gt;
		 
		 #d1 {
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d2 {
		 	position: absolute;
		 	top: 180px;
		 	left: 80%;
		 	right:auto;
		 	width: 40%;
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d3 {
		 	position: absolute;
		 	top: 240px;
		 	left: 20%;
		 	width: 50%;
		 	border: solid blue 1px;
		 	padding: 10px;
		 }
		 
		 &lt;/style&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 
		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;
		 
		 &lt;div id="d1"&gt;
		 	&lt;span&gt;This is an un-positioned div so clicking it will return
		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d2"&gt;
		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		 	values that are relative to the top-left corner of this positioned
		 	element. Note the pageX\pageY properties still return the
		 	absolute position in the document, including page scrolling.&lt;/span&gt;
		 
		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		 	will return layerX/layerY values that are relative to the top-left
		 	corner of this positioned element. Note the pageX\pageY properties still
		 	return the absolute position in the document, including page
		 	scrolling.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d3"&gt;
		 	&lt;form name="form_coords"&gt;
		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;
		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;
		 	&lt;/form&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageX"><linktext>MDC - Event: pageX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: pageX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/pageY"><linktext>pageY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:pageY:get"><apiName>pageY</apiName><shortdesc>
		 Returns the vertical coordinate of the event relative to the whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event relative to the whole document.
		 
		 <p><b>Note (IE):</b> In order to get it in IE, too, add the scrolling offset of the 
		 document to clientX/Y.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	function showCoords(evt){
		 		var form = document.forms.form_coords;
		 		var parent_id = evt.target.parentNode.id;
		 		form.parentId.value = parent_id;
		 		form.pageXCoords.value = evt.pageX;
		 		form.pageYCoords.value = evt.pageY;
		 		form.layerXCoords.value = evt.layerX;
		 		form.layerYCoords.value = evt.layerY;
		 	}
		 &lt;/script&gt;
		 
		 &lt;style type="text/css"&gt;
		 
		 #d1 {
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d2 {
		 	position: absolute;
		 	top: 180px;
		 	left: 80%;
		 	right:auto;
		 	width: 40%;
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d3 {
		 	position: absolute;
		 	top: 240px;
		 	left: 20%;
		 	width: 50%;
		 	border: solid blue 1px;
		 	padding: 10px;
		 }
		 
		 &lt;/style&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 
		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;
		 
		 &lt;div id="d1"&gt;
		 	&lt;span&gt;This is an un-positioned div so clicking it will return
		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d2"&gt;
		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		 	values that are relative to the top-left corner of this positioned
		 	element. Note the pageX\pageY properties still return the
		 	absolute position in the document, including page scrolling.&lt;/span&gt;
		 
		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		 	will return layerX/layerY values that are relative to the top-left
		 	corner of this positioned element. Note the pageX\pageY properties still
		 	return the absolute position in the document, including page
		 	scrolling.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d3"&gt;
		 	&lt;form name="form_coords"&gt;
		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;
		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;
		 	&lt;/form&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageY"><linktext>MDC - Event: pageY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: pageY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/pageX"><linktext>pageX</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:relatedTarget:get"><apiName>relatedTarget</apiName><shortdesc>
		 Used to identify a secondary EventTarget related to a UI event, depending 
		 on the type of event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.events:EventTarget</apiValueClassifier></apiValueDef><apiDesc>
		 Used to identify a secondary EventTarget related to a UI event, depending 
		 on the type of event.
		 
		 <p><b>Note:</b> The relatedTarget property is used to find the other element, if any, involved 
		 in an event. Events like mouseover are oriented around a certain target, but also involve a secondary target, 
		 such as the target that is exited as the mouseover event fires for the primary target. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var rel = event.relatedTarget;
		 // dump("LEAVING " + (rel ? rel.localName : "null") + "\n");
		 // relatedTarget is null when the titletip is first shown:
		 // a mouseout event fires because the mouse is exiting 
		 // the main window and entering the titletip "window".
		 // relatedTarget is also null when the mouse exits the main 
		 // window completely, so count how many times relatedTarget 
		 // was null after titletip is first shown and hide popup
		 // the 2nd time
		 if (!rel) {
		 	if (++this._mouseOutCount &gt; 1)
		 	this.hidePopup();
		 	return;
		 }
		 // find out if the node we are entering is one of our 
		 // anonymous children
		 while (rel) {
		 	if (rel == this) {
		 		break;
		 	}
		 	rel = rel.parentNode;
		 }
		 // if the entered node is not a descendant of ours, hide 
		 // the tooltip
		 if (rel != this &amp;&amp; this._isMouseOver) {
		 	this.hidePopup();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.relatedTarget"><linktext>MDC - event.relatedTarget</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-relatedTarget"><linktext>W3C - MouseEvent.relatedTarget</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:screenX:get"><apiName>screenX</apiName><shortdesc>
		 
		 Returns the horizontal coordinate of the event within the screen as a whole.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the horizontal coordinate of the event within the screen as a whole. 
		 
		 <p><b>Note:</b> When you trap events on the window, document, or other roomy elements, you can get the 
		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"screenX value: " + evt.screenX + "\n"
		 				+ "screenY value: " + evt.screenY + "\n"
		 			);
		 		}
		 
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 <codeblock>
		 function checkClickMap(e) {
		 	if (e.screenX &lt; 50) doRedButton();
		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();
		 	if (e.screenX &gt;= 100) doRedButton();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534391(VS.85).aspx"><linktext>MSDN: screenX Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.screenX"><linktext>MDC - Event: screenX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: screenX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/clientX"><linktext>clientX</linktext></link><link href="dom.events.xml#MouseEvent/clientY"><linktext>clientY</linktext></link><link href="dom.events.xml#MouseEvent/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:screenY:get"><apiName>screenY</apiName><shortdesc>
		 
		 Returns the vertical coordinate of the event within the screen as a whole.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the vertical coordinate of the event within the screen as a whole.
		 
		 <p><b>Note:</b> When you trap events on the window, document, or other roomy elements, you can get the 
		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"screenX value: " + evt.screenX + "\n"
		 				+ "screenY value: " + evt.screenY + "\n"
		 			);
		 		}
		 
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 <codeblock>
		 function checkClickMap(e) {
		 	if (e.screenX &lt; 50) doRedButton();
		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();
		 	if (e.screenX &gt;= 100) doRedButton();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534392(VS.85).aspx"><linktext>MSDN: screenY Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.screenY"><linktext>MDC - Event: screenY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: screenY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/clientX"><linktext>clientX</linktext></link><link href="dom.events.xml#MouseEvent/clientY"><linktext>clientY</linktext></link><link href="dom.events.xml#MouseEvent/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:shiftKey:get"><apiName>shiftKey</apiName><shortdesc>
		 Refer to the KeyboardEvent.shiftKey attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Refer to the KeyboardEvent.shiftKey attribute.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;shiftKey example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showChar(e){
		 	alert(
		 		"Key Pressed: " + String.fromCharCode(e.charCode) + "\n"
		 		+ "charCode: " + e.charCode + "\n"
		 		+ "SHIFT key pressed: " + e.shiftKey + "\n"
		 		+ "ALT key pressed: " + e.altKey + "\n"
		 	);
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="showChar(event);"&gt;
		 &lt;p&gt;Press any character key, with or without holding down
		 the SHIFT key.&lt;br /&gt;
		 You can also use the SHIFT key together with the ALT key.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.shiftKey"><linktext>MDC - event.shiftKey</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-shiftKey"><linktext>W3C - MouseEvent.shiftKey</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:x:get"><apiName>x</apiName><shortdesc>
		 
		 Returns the value of pageX.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_alternative"/><apiTool name="IE" version="6.0_alternative"/><apiTool name="IE" version="7.0_alternative"/><apiTool name="IE" version="8.0_as_IE7_alternative"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_alternative"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the value of pageX. 
		 
		 </apiDesc><example>
		 <codeblock>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535154(VS.85).aspx"><linktext>MSDN: x Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: x Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/y"><linktext>y</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:y:get"><apiName>y</apiName><shortdesc>
		 
		 Returns the value of pageY.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_alternative"/><apiTool name="IE" version="6.0_alternative"/><apiTool name="IE" version="7.0_alternative"/><apiTool name="IE" version="8.0_as_IE7_alternative"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_alternative"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the value of pageY. 
		 
		 </apiDesc><example>
		 <codeblock>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535164(VS.85).aspx"><linktext>MSDN: y Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: y Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/x"><linktext>x</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:DocumentEvent"><apiName>DocumentEvent</apiName><shortdesc>
	 The DocumentEvent interface provides a mechanism by which the user can 
	 create an Event object of a type supported by the implementation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentEvent interface provides a mechanism by which the user can 
	 create an Event object of a type supported by the implementation. If 
	 the feature "Events" is supported by the Document object, the 
	 DocumentEvent interface must be implemented on the same object. If the 
	 feature "+Events" is supported by the Document object, an object that 
	 supports the DocumentEvent interface must be returned by invoking the 
	 method Node.getFeature("+Events", "3.0") on the Document object.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.events:DocumentEventGroup"><apiName>DocumentEventGroup</apiName><shortdesc>
	 The DocumentEventGroup interface provides a mechanism by which the user can create an EventGroup of a type supported by 
	 the implementation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentEventGroup interface provides a mechanism by which the user can create an EventGroup of a type supported by 
	 the implementation. It is expected that the DocumentEvent interface will be implemented on the same object which implements 
	 the Documentinterface in an implementation which supports the EventGroupextension.
	 
	 <p><b>Note:</b> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.events:EventExceptionCode"><apiName>EventExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:EventExceptionCode:DISPATCH_REQUEST_ERR"><apiName>DISPATCH_REQUEST_ERR</apiName><shortdesc>
		 If the Event object is already dispatched in the tree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the Event object is already dispatched in the tree.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DISPATCH_REQUEST_ERR"><linktext>W3C - DOM 3 Events: EventExceptionCode.DISPATCH_REQUEST_ERR</linktext></link></related-links></apiValue><apiValue id="dom.events:EventExceptionCode:UNSPECIFIED_EVENT_TYPE_ERR"><apiName>UNSPECIFIED_EVENT_TYPE_ERR</apiName><shortdesc>
		 If the Event.type was not specified by initializing the event 
		 before the method was called.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the Event.type was not specified by initializing the event 
		 before the method was called. Specification of the Event.type 
		 as null or an empty string will also trigger this exception.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#UNSPECIFIED_EVENT_TYPE_ERR"><linktext>W3C - DOM 3 Events: EventExceptionCode.UNSPECIFIED_EVENT_TYPE_ERR</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MouseWheelEvent"><apiName>MouseWheelEvent</apiName><shortdesc>
	 The MouseWheelEvent interface provides specific contextual information 
	 associated with mouse wheel events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MouseWheelEvent interface provides specific contextual information 
	 associated with mouse wheel events.
	 
	 <p>To create an instance of the MouseWheelEvent interface, use the 
	 DocumentEvent.createEvent("MouseWheelEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:MouseWheelEvent:mousewheel"><apiName>mousewheel</apiName><shortdesc>
		 Refer to Activation requests and behavior.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mousewheel</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Refer to Activation requests and behavior.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Document, Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseWheelEvent.wheelDelta, MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, 
		 MouseEvent.metaKey, and UIEvent.view are in use. MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, 
		 MouseEvent.clientY, and MouseEvent.button are in use if the wheel is associated to a pointing device. MouseEvent.relatedTarget 
		 indicates the event target the pointing device is pointing at, if any. UIEvent.detail is not in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousewheel"><linktext>W3C - MouseWheelEvent.mousewheel</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseWheelEvent:wheelDelta:get"><apiName>wheelDelta</apiName><shortdesc>
		 The distance the wheel has rotated around the y-axis.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The distance the wheel has rotated around the y-axis.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseWheelEvent-wheelDelta"><linktext>W3C - MouseWheelEvent.wheelDelta</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MessageEvent"><apiName>MessageEvent</apiName><shortdesc>
	 Messages in server-sent events, Web sockets, cross-document messaging, and channel messaging use the message event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Messages in server-sent events, Web sockets, cross-document messaging, and channel messaging use the message event.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:MessageEvent:data:get"><apiName>data</apiName><shortdesc>
		 A string holding the message passed from the other window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/></apiValueDef><apiDesc>
		 A string holding the message passed from the other window. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-data"><linktext>HTML 5: MessageEvent.data</linktext></link></related-links></apiValue><apiValue id="dom.events:MessageEvent:lastEventId:get"><apiName>lastEventId</apiName><shortdesc>
		 Returns the last event ID, for server-sent events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the last event ID, for server-sent events.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-lasteventid"><linktext>HTML 5: MessageEvent.lastEventId</linktext></link></related-links></apiValue><apiValue id="dom.events:MessageEvent:origin:get"><apiName>origin</apiName><shortdesc>
		 Returns the origin of the message, for server-sent events and cross-document messaging.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the origin of the message, for server-sent events and cross-document messaging.
		 
		 <p>The origin of the window that sent the message at the time postMessage was called. This string is 
		 the concatenation of the protocol and "://", the host name if one exists, and ":" followed by a port 
		 number if a port is present and differs from the default port for the given protocol. Examples of 
		 typical origins are http://example.org (implying port 443), http://example.net (implying port 80), 
		 and http://example.com:8080. Note that this origin is not guaranteed to be the current or future origin 
		 of that window, which might have been navigated to a different location since postMessage was called. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-origin"><linktext>HTML 5: MessageEvent.origin</linktext></link></related-links></apiValue><apiValue id="dom.events:MessageEvent:ports:get"><apiName>ports</apiName><shortdesc>
		 Returns the MessagePortArray sent with the message, for cross-document messaging and channel messaging.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:MessagePortArray</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the MessagePortArray sent with the message, for cross-document messaging and channel messaging.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-ports"><linktext>HTML 5: MessageEvent.ports</linktext></link></related-links></apiValue><apiValue id="dom.events:MessageEvent:source:get"><apiName>source</apiName><shortdesc>
		 Returns the WindowProxy of the source window, for cross-document messaging.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the WindowProxy of the source window, for cross-document messaging.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-source"><linktext>HTML 5: MessageEvent.source</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MouseMultiWheelEvent"><apiName>MouseMultiWheelEvent</apiName><shortdesc>
	 The MouseMultiWheelEvent interface provides specific contextual 
	 information associated with mouse multi wheel events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MouseMultiWheelEvent interface provides specific contextual 
	 information associated with mouse multi wheel events.
	 
	 <p>To create an instance of the MouseMultiWheelEvent interface, use the 
	 DocumentEvent.createEvent("MouseMultiWheelEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:MouseMultiWheelEvent:mousemultiwheel"><apiName>mousemultiwheel</apiName><shortdesc>
		 A mouse wheel has been rotated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mousemultiwheel</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A mouse wheel has been rotated. A default action of user agent generated event objects of this type causes 
		 implementations to dispatch a mousewheel event iff it supports that event type and MouseMultiWheelEvent.wheelDeltaY is non-zero.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Document, Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseMultiWheelEvent.wheelDeltaX, MouseMultiWheelEvent.wheelDeltaY, MouseMultiWheelEvent.wheelDeltaZ, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use. MouseEvent.screenX, 
		 MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, and MouseEvent.button are in use if the wheel is associated to a 
		 pointing device. MouseEvent.relatedTarget indicates the event target the pointing device is pointing at, if any. UIEvent.detail 
		 is not in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousewheel"><linktext>W3C - MouseWheelEvent.mousewheel</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseMultiWheelEvent:wheelDeltaX:get"><apiName>wheelDeltaX</apiName><shortdesc>
		 The distance the wheel has rotated around the x-axis.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The distance the wheel has rotated around the x-axis.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent-wheelDeltaX"><linktext>W3C - MouseWheelEvent.wheelDeltaX</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseMultiWheelEvent:wheelDeltaY:get"><apiName>wheelDeltaY</apiName><shortdesc>
		 The distance the wheel has rotated around the y-axis.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The distance the wheel has rotated around the y-axis.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent-wheelDeltaY"><linktext>W3C - MouseWheelEvent.wheelDeltaY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseMultiWheelEvent:wheelDeltaZ:get"><apiName>wheelDeltaZ</apiName><shortdesc>
		 The distance the wheel has rotated around the z-axis.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The distance the wheel has rotated around the z-axis.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent-wheelDeltaZ"><linktext>W3C - MouseWheelEvent.wheelDeltaZ</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MutationEvent"><apiName>MutationEvent</apiName><shortdesc>
	 The MutationEvent interface provides specific contextual information 
	 associated with Mutation events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MutationEvent interface provides specific contextual information 
	 associated with Mutation events.
	 
	 <p>To create an instance of the MutationEvent interface, use the 
	 DocumentEvent.createEvent("MutationEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:MutationEvent:ADDITION"><apiName>ADDITION</apiName><shortdesc>
		 The Attr was just added.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The Attr was just added.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#ADDITION"><linktext>W3C - MutationEvent.ADDITION</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMAttrModified"><apiName>DOMAttrModified</apiName><shortdesc>
		 Occurs after Attr.value has been modified and after an Attr node has been added to or removed from an Element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMAttrModified</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Occurs after Attr.value has been modified and after an Attr node has been added to or removed from an Element. 
		 The target node of this event is the Element node where the change occured. It is implementation dependent whether 
		 this event type occurs when the children of the Attr node are changed in ways that do not affect the value of Attr.value.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationEvent.attrName and MutationEvent.attrChange are in use. The value of MutationEvent.relatedNode indicates the Attr 
		 node that has been modified, added, or removed. If the Attr node has been added, MutationEvent.newValue is in use. If the Attr 
		 node has been removed, MutationEvent.prevValue is in use. If the Attr node has been modified, MutationEvent.newValue and 
		 MutationEvent.prevValue are in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMAttrModified"><linktext>W3C - MutationEvent.DOMAttrModified</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMCharacterDataModified"><apiName>DOMCharacterDataModified</apiName><shortdesc>
		 Occurs after CharacterData.data or ProcessingInstruction.data have been modified but the node itself has not been 
		 inserted or deleted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMCharacterDataModified</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Occurs after CharacterData.data or ProcessingInstruction.data have been modified but the node itself has not been 
		 inserted or deleted. The target node of this event is the CharacterData node or the ProcessingInstruction node.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Text, Comment, CDATASection, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationEvent.prevValue, and MutationEvent.newValue are in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMCharacterDataModified"><linktext>W3C - MutationEvent.DOMCharacterDataModified</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMNodeInserted"><apiName>DOMNodeInserted</apiName><shortdesc>
		 A node has been added as a child of another node or, in case of Attr nodes, has been added to an Element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMNodeInserted</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A node has been added as a child of another node or, in case of Attr nodes, has been added to an Element. 
		 This event is dispatched after the insertion has taken place. The target node of this event is the node being inserted.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationEvent.relatedNode holds the parent node of the node that has been inserted or, in case of Attr nodes, the ownerElement of the Attr node.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeInserted"><linktext>W3C - MutationEvent.DOMNodeInserted</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMNodeInsertedIntoDocument"><apiName>DOMNodeInsertedIntoDocument</apiName><shortdesc>
		 A node has been inserted into a document, either through direct insertion of the node or insertion of a subtree in which 
		 it is contained; Attr nodes are considered part of an Element's subtree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMNodeInsertedIntoDocument</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A node has been inserted into a document, either through direct insertion of the node or insertion of a subtree in which 
		 it is contained; Attr nodes are considered part of an Element's subtree. This event is dispatched after the insertion has 
		 taken place. The target node of this event is the node being inserted. If the node is being directly inserted, the event 
		 type DOMNodeInserted occurs before this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>None</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeInsertedIntoDocument"><linktext>W3C - MutationEvent.DOMNodeInsertedIntoDocument</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMNodeRemoved"><apiName>DOMNodeRemoved</apiName><shortdesc>
		 A node is being removed from its parent node or, in case of Attr nodes, removed from its ownerElement.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMNodeRemoved</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A node is being removed from its parent node or, in case of Attr nodes, removed from its ownerElement. 
		 This event is dispatched before the removal takes place. The target node of this event is the node being removed.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationEvent.relatedNode holds the parent node of the node being removed or, in case of Attr nodes, the ownerElement of the Attr node.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeRemoved"><linktext>W3C - MutationEvent.DOMNodeRemoved</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMNodeRemovedFromDocument"><apiName>DOMNodeRemovedFromDocument</apiName><shortdesc>
		 A node is being removed from a document, either through direct removal of the node or removal of a subtree in which 
		 it is contained; Attr nodes are considered part of an Element's subtree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMNodeRemovedFromDocument</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A node is being removed from a document, either through direct removal of the node or removal of a subtree in which 
		 it is contained; Attr nodes are considered part of an Element's subtree. This event is dispatched before the removal 
		 takes place. The target node of this event type is the node being removed. If the node is being directly removed, 
		 the event type DOMNodeRemoved occurs before this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>None</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeRemovedFromDocument"><linktext>W3C - MutationEvent.DOMNodeRemovedFromDocument</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMSubtreeModified"><apiName>DOMSubtreeModified</apiName><shortdesc>
		 This is a general event for notification of all changes to the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMSubtreeModified</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 This is a general event for notification of all changes to the document. 
		 
		 <p>It can be used instead 
		 of the more specific mutation and mutation name events listed below. It may be dispatched after 
		 a single modification to the document or, at the implementation's discretion, after multiple 
		 changes have occurred. The latter use should generally be used to accommodate multiple changes 
		 which occur either simultaneously or in rapid succession. The target of this event is the lowest 
		 common parent of the changes which have taken place. This event is dispatched after any other 
		 events caused by the mutation(s) have occurred.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, DocumentFragment, Element, Attr</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>None</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMSubtreeModified"><linktext>W3C - MutationEvent.DOMSubtreeModified</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:MODIFICATION"><apiName>MODIFICATION</apiName><shortdesc>
		 The Attr was modified in place.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The Attr was modified in place.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#MODIFICATION"><linktext>W3C - MutationEvent.MODIFICATION</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:REMOVAL"><apiName>REMOVAL</apiName><shortdesc>
		 The Attr was just removed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The Attr was just removed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#REMOVAL"><linktext>W3C - MutationEvent.REMOVAL</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:attrChange:get"><apiName>attrChange</apiName><shortdesc>
		 Indicates the type of change which triggered the DOMAttrModified event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Indicates the type of change which triggered the DOMAttrModified event. 
		 The values can be MODIFICATION, ADDITION, or REMOVAL.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-attrChange"><linktext>W3C - MutationEvent.attrChange</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:attrName:get"><apiName>attrName</apiName><shortdesc>
		 Indicates the name of the changed Attr node in a DOMAttrModified event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Indicates the name of the changed Attr node in a DOMAttrModified event.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-attrName"><linktext>W3C - MutationEvent.attrName</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:newValue:get"><apiName>newValue</apiName><shortdesc>
		 Indicates the new value of the Attr node in DOMAttrModified events, and 
		 of the CharacterData node in DOMCharacterDataModified events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Indicates the new value of the Attr node in DOMAttrModified events, and 
		 of the CharacterData node in DOMCharacterDataModified events.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-newValue"><linktext>W3C - MutationEvent.newValue</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:prevValue:get"><apiName>prevValue</apiName><shortdesc>
		 Indicates the previous value of the Attr node in DOMAttrModified events, 
		 and of the CharacterData node in DOMCharacterDataModified events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Indicates the previous value of the Attr node in DOMAttrModified events, 
		 and of the CharacterData node in DOMCharacterDataModified events.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-prevValue"><linktext>W3C - MutationEvent.prevValue</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:relatedNode:get"><apiName>relatedNode</apiName><shortdesc>
		 is used to identify a secondary node related to a mutation event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 is used to identify a secondary node related to a mutation event. For 
		 example, if a mutation event is dispatched to a node indicating that 
		 its parent has changed, the relatedNode is the changed parent. If an 
		 event is instead dispatched to a subtree indicating a node was changed 
		 within it, the relatedNode is the changed node. In the case of the 
		 DOMAttrModified event it indicates the Attr node which was modified, 
		 added, or removed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-relatedNode"><linktext>W3C - MutationEvent.relatedNode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MutationNameEvent"><apiName>MutationNameEvent</apiName><shortdesc>
	 The MutationNameEvent interface provides specific contextual information 
	 associated with Mutation name event types.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:MutationEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MutationNameEvent interface provides specific contextual information 
	 associated with Mutation name event types.
	 
	 To create an instance of the MutationNameEvent interface, use the 
	 Document.createEvent("MutationNameEvent") method call.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:MutationNameEvent:DOMAttributeNameChanged"><apiName>DOMAttributeNameChanged</apiName><shortdesc>
		 Occurs after the namespaceURI and/or the nodeName of a Attr node have been modified (e.g., the attribute was 
		 renamed using Document.renameNode()).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMAttributeNameChanged</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Occurs after the namespaceURI and/or the nodeName of a Attr node have been modified (e.g., the attribute was 
		 renamed using Document.renameNode()). The target node of this event is the Element node whose Attr has been renamed.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationNameEvent.prevNamespaceURI, and MutationNameEvent.prevNodeName are in use. The value of MutationEvent.relatedNode contains the renamed Attr node.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMAttributeNameChanged"><linktext>W3C - MutationNameEvent.DOMAttributeNameChanged</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationNameEvent:DOMElementNameChanged"><apiName>DOMElementNameChanged</apiName><shortdesc>
		 Occurs after the namespaceURI and/or the nodeName of an Element node have been modified (e.g., the element was 
		 renamed using Document.renameNode()).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMElementNameChanged</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Occurs after the namespaceURI and/or the nodeName of an Element node have been modified (e.g., the element was 
		 renamed using Document.renameNode()). The target node of this event is the renamed Element node.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationNameEvent.prevNamespaceURI, and MutationNameEvent.prevNodeName are in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMElementNameChanged"><linktext>W3C - MutationNameEvent.DOMElementNameChanged</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationNameEvent:prevNamespaceURI:get"><apiName>prevNamespaceURI</apiName><shortdesc>
		 The previous value of the relatedNode's namespaceURI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The previous value of the relatedNode's namespaceURI.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationNameEvent-prevNamespaceURI"><linktext>W3C - MutationNameEvent.prevNamespaceURI</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationNameEvent:prevNodeName:get"><apiName>prevNodeName</apiName><shortdesc>
		 The previous value of the relatedNode's nodeName.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The previous value of the relatedNode's nodeName.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationNameEvent-prevNodeName"><linktext>W3C - MutationNameEvent.prevNodeName</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:EventTargetGroup"><apiName>EventTargetGroup</apiName><shortdesc>
	 The EventTargetGroup interface is implemented by the same set of objects that implement the EventTarget 
	 interface, namely all EventTargets in in implementation which supports the Event model and the EventGroup extension.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The EventTargetGroup interface is implemented by the same set of objects that implement the EventTarget 
	 interface, namely all EventTargets in in implementation which supports the Event model and the EventGroup extension.
	 
	 <p><b>Note:</b> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.events:CustomEvent"><apiName>CustomEvent</apiName><shortdesc>
	 The CustomEvent interface is the recommended interface for 
	 application-specific event types.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CustomEvent interface is the recommended interface for 
	 application-specific event types. Unlike the Event interface, it allows 
	 applications to provide contextual information about the event type. 
	 Application-specific event types should have an associated namespace to 
	 avoid clashes with future general-purpose event types.
	 
	 <p>To create an instance of the CustomEvent interface, use the 
	 DocumentEvent.createEvent("CustomEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:CustomEvent:detail:get"><apiName>detail</apiName><shortdesc>
		 Specifies some detail information about the Event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMObject</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies some detail information about the Event.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-CustomEvent-detail"><linktext>W3C - DOM 3 Events: CustomEvent.detail</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:EventListener"><apiName>EventListener</apiName><shortdesc>
	 The EventListener interface is the primary way for handling events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The EventListener interface is the primary way for handling events. Users 
	 implement the EventListener interface and register their event listener on 
	 an EventTarget. The users should also remove their EventListener from its 
	 EventTarget after they have completed using the listener.
	 
	 <p>Copying a Node, with methods such as Node.cloneNode or Range.cloneContents, 
	 does not copy the event listeners attached to it. Event listeners must be 
	 attached to the newly created Node afterwards if so desired.</p>
	 
	 <p>Moving a Node, with methods Document.adoptNode, Node.appendChild, or 
	 Range.extractContents, does not affect the event listeners attached to it.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.events:EventTarget"><apiName>EventTarget</apiName><shortdesc>
	 The EventTarget interface is implemented by all the objects which could be 
	 event targets in an implementation which supports an event flow.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The EventTarget interface is implemented by all the objects which could be 
	 event targets in an implementation which supports an event flow. The 
	 interface allows registration and removal of event listeners, and dispatch 
	 of events to an event target.
	 
	 <p>When used with the DOM event flow, this interface is implemented by all 
	 target nodes and target ancestors, i.e. all DOM Nodes of the tree support 
	 this interface when the implementation conforms to DOM Level 3 Events and, 
	 therefore, this interface can be obtained by using binding-specific casting 
	 methods on an instance of the Node interface.</p>
	 
	 <p>Invoking addEventListener or addEventListenerNS repeatedly on the same 
	 EventTarget with the same values for the parameters namespaceURI, type, 
	 listener, and useCapture has no effect. Doing so does not cause the 
	 EventListener to be called more than once and does not cause a change in the 
	 triggering order.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.events:EventException"><apiName>EventException</apiName><shortdesc>
	 Event operations may throw an EventException as specified in their method descriptions.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Event operations may throw an EventException as specified in their method descriptions.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.events:EventException:dom.events:EventException:code:get"><apiName>code</apiName><shortdesc>
		 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 An integer indicating the type of error generated.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventException"><linktext>W3C - DOM 3 Events: EventException.code</linktext></link><link href="dom.events.xml#EventExceptionCode"><linktext>dom.events.EventExceptionCode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:EventGroup"><apiName>EventGroup</apiName><shortdesc>
	 The EventGroup interface functions primarily as a placeholder for separating the event flows when there 
	 are multiple groups of listeners for a DOM tree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The EventGroup interface functions primarily as a placeholder for separating the event flows when there 
	 are multiple groups of listeners for a DOM tree.
	 
	 <p>EventListeners can be registered without an EventGroup using the existing EventTarget interface, or with 
	 an associated EventGroup using the new EventTargetGroup interface. When an event is dispatched, it is 
	 dispatched independently to each EventGroup. In particular, the stopPropagation method of the Event interface 
	 only stops propagation within an EventListener's associated EventGroup.</p>
	 
	 <p><b>Note:</b> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="dom.html.objects"><apiName>dom.html.objects</apiName><apiClassifier id="dom.html.objects:HTMLCollection"><apiName>HTMLCollection</apiName><shortdesc>
	 An HTMLCollection is a list of nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An HTMLCollection is a list of nodes. 
	 
	 <p>An individual node may be accessed by either ordinal index or the node's name or id attributes.</p>
	 
	 <p><b>Note:</b> Collections in the HTML DOM are assumed to be live meaning that they 
	 are automatically updated when the underlying document is changed.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html.objects:HTMLCollection:length:get"><apiName>length</apiName><shortdesc>
		 This attribute specifies the length or size of the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 This attribute specifies the length or size of the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/HTMLCollection"><linktext>MDC: HTMLCollection</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534101%28VS.85%29.aspx"><linktext>MSDN: length Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-40057551"><linktext>W3C - DOM HTML: HTMLCollection.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.html.objects:HTMLOptionsCollection"><apiName>HTMLOptionsCollection</apiName><shortdesc>
	 An HTMLOptionsCollection is a list of nodes representing HTML option element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An HTMLOptionsCollection is a list of nodes representing HTML option element. 
	 An individual node may be accessed by either ordinal index or the node's 
	 name or id attributes.
	 
	 <p><b>Note:</b> Collections in the HTML DOM are assumed to be live meaning that they 
	 are automatically updated when the underlying document is changed.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html.objects:HTMLOptionsCollection:length:get"><apiName>length</apiName><shortdesc>
		 This attribute specifies the length or size of the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiException><apiDesc>NOT_SUPPORTED_ERR: if setting the length 
		 is not allowed by the implementation.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 This attribute specifies the length or size of the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/HTMLOptionsCollection"><linktext>MDC: HTMLOptionsCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-length"><linktext>W3C DOM HTML Specification: HTMLOptionsCollection.length</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.html"><apiName>dom.html</apiName><apiClassifier id="dom.html:HTMLDirectoryElement"><apiName>HTMLDirectoryElement</apiName><shortdesc>
	 Directory list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Directory list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDirectoryElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLScriptElement"><apiName>HTMLScriptElement</apiName><shortdesc>
	 Script statements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Script statements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLScriptElement:charset:get"><apiName>charset</apiName><shortdesc>
		 The character encoding of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The character encoding of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:defer:get"><apiName>defer</apiName><shortdesc>
		 Indicates that the user agent can defer processing of the script.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates that the user agent can defer processing of the script.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:event:get"><apiName>event</apiName><shortdesc>
		 Reserved for future use.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reserved for future use.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:htmlFor:get"><apiName>htmlFor</apiName><shortdesc>
		 Reserved for future use.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reserved for future use.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:src:get"><apiName>src</apiName><shortdesc>
		 URI designating an external script.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating an external script.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:text:get"><apiName>text</apiName><shortdesc>
		 The script content of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The script content of the element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:type:get"><apiName>type</apiName><shortdesc>
		 The content type of the script language.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The content type of the script language.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHtmlElement"><apiName>HTMLHtmlElement</apiName><shortdesc>
	 Root of an HTML document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Root of an HTML document. See the HTML element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHtmlElement:version:get"><apiName>version</apiName><shortdesc>
		 Version information about the document's DTD.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Version information about the document's DTD. This attribute is deprecated 
		 in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHeadElement"><apiName>HTMLHeadElement</apiName><shortdesc>
	 Document head information.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Document head information. See the HEAD element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHeadElement:profile:get"><apiName>profile</apiName><shortdesc>
		 URI designating a metadata profile.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a metadata profile. See the profile 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTitleElement"><apiName>HTMLTitleElement</apiName><shortdesc>
	 The document title.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The document title. See the TITLE element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTitleElement:text:get"><apiName>text</apiName><shortdesc>
		 The specified title as a string.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The specified title as a string.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFieldSetElement"><apiName>HTMLFieldSetElement</apiName><shortdesc>
	 Organizes form controls into logical groups.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Organizes form controls into logical groups.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFieldSetElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLButtonElement"><apiName>HTMLButtonElement</apiName><shortdesc>
	 Push button.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Push button.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLButtonElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of button (all lower case).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of button (all lower case).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:value:get"><apiName>value</apiName><shortdesc>
		 The current form control value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The current form control value.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLParamElement"><apiName>HTMLParamElement</apiName><shortdesc>
	 Parameters fed to the OBJECT element.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Parameters fed to the OBJECT element.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLParamElement:name:get"><apiName>name</apiName><shortdesc>
		 The name of a run-time parameter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of a run-time parameter.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLParamElement:type:get"><apiName>type</apiName><shortdesc>
		 Content type for the value attribute when valuetype has the value "ref".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Content type for the value attribute when valuetype has the value "ref".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLParamElement:value:get"><apiName>value</apiName><shortdesc>
		 The value of a run-time parameter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The value of a run-time parameter.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLParamElement:valueType:get"><apiName>valueType</apiName><shortdesc>
		 Information about the meaning of the value attribute value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Information about the meaning of the value attribute value.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBaseElement"><apiName>HTMLBaseElement</apiName><shortdesc>
	 Document base URI [IETF RFC 2396].</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Document base URI [IETF RFC 2396]. See the BASE element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBaseElement:href:get"><apiName>href</apiName><shortdesc>
		 The base URI [IETF RFC 2396].</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The base URI [IETF RFC 2396]. See the href attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBaseElement:target:get"><apiName>target</apiName><shortdesc>
		 The default target frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The default target frame. See the target attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableSectionElement"><apiName>HTMLTableSectionElement</apiName><shortdesc>
	 The THEAD, TFOOT, and TBODY elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The THEAD, TFOOT, and TBODY elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableSectionElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of data in cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of data in cells. See the align attribute for HTMLTheadElement for details.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:rows:get"><apiName>rows</apiName><shortdesc>
		 The collection of rows in this table section.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 The collection of rows in this table section.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:vAlign:get"><apiName>vAlign</apiName><shortdesc>
		 Vertical alignment of data in cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Vertical alignment of data in cells. See the valign attribute for HTMLTheadElement for details.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLParagraphElement"><apiName>HTMLParagraphElement</apiName><shortdesc>
	 Paragraphs.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Paragraphs.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLParagraphElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal text alignment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLSelectElement"><apiName>HTMLSelectElement</apiName><shortdesc>
	 The select element allows the selection of an option.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The select element allows the selection of an option. The contained options 
	 can be directly accessed through the select element as a collection. See 
	 the SELECT element definition in HTML 4.01.
	 
	 http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-40676705
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLSelectElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context. See the disabled attribute 
		 definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this 
		 control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:length:get"><apiName>length</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The number of options in this SELECT.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiException><apiDesc>NOT_SUPPORTED_ERR: if setting the length 
		 is not allowed by the implementation.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The number of options in this SELECT.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:multiple:get"><apiName>multiple</apiName><shortdesc>
		 If true, multiple OPTION elements may be selected in this SELECT.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If true, multiple OPTION elements may be selected in this SELECT. See 
		 the multiple attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form. See the name 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:onchange:get"><apiName>onchange</apiName><shortdesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:options:get"><apiName>options</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The collection of OPTION elements contained by this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLOptionsCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The collection of OPTION elements contained by this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
		 The ordinal index of the selected option, starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The ordinal index of the selected option, starting from 0. The value 
		 -1 is returned if no element is selected. If multiple options are 
		 selected, the index of the first selected option is returned.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:size:get"><apiName>size</apiName><shortdesc>
		 Number of visible rows.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Number of visible rows. See the size attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Gets/sets the tab order of the current element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets/sets the tab order of the current element. 
		 
		 </apiDesc><example>
		 b1 = document.getElementById("button1"); 
		 b1.tabIndex = 1;
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of this form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of this form control. This is the string "select-multiple" when 
		 the multiple attribute is true and the string "select-one" when false.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:value:get"><apiName>value</apiName><shortdesc>
		 The current form control value (i.e.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The current form control value (i.e. the value of the currently selected 
		 option), if multiple options are selected this is the value of the first 
		 selected option.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLOListElement"><apiName>HTMLOListElement</apiName><shortdesc>
	 Ordered list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Ordered list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLOListElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOListElement:start:get"><apiName>start</apiName><shortdesc>
		 Starting sequence number.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Starting sequence number. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOListElement:type:get"><apiName>type</apiName><shortdesc>
		 Bullet style.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Bullet style. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLAnchorElement"><apiName>HTMLAnchorElement</apiName><shortdesc>
	 The anchor element.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The anchor element.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLAnchorElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:charset:get"><apiName>charset</apiName><shortdesc>
		 The character encoding of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The character encoding of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:coords:get"><apiName>coords</apiName><shortdesc>
		 Comma-separated list of lengths, defining an active region geometry.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Comma-separated list of lengths, defining an active region geometry.
		 
		 <p>This attribute specifies the position and shape on the screen. The 
		 number and order of values depends on the shape being defined. Possible combinations:
		 
		 <adobetable class="innertable">
		 
		 <tgroup cols="4"><thead><row><row>
		 		<entry><p>Shape</p></entry>
		 		<entry><p>Values</p></entry>
		 	</row><row>
		 		<entry><codeph>rect</codeph></entry>
		 		<entry>left-x, top-y, right-x, bottom-y.</entry>
		 	</row><row>
		 		<entry><codeph>circle</codeph></entry>
		 		<entry>center-x, center-y, radius. <b>Note:</b> When the radius value is a percentage value, 
		 user agents should calculate the final radius value based on the associated object's width 
		 and height. The radius should be the smaller value of the two.</entry>
		 	</row><row>
		 		<entry><codeph>poly</codeph></entry>
		 		<entry>x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should 
		 be the same to close the polygon. When these coordinate values are not the same, user agents 
		 should infer an additional coordinate pair to close the polygon.</entry>
		 	</row></row></thead><tbody/></tgroup></adobetable>
		 </p>
		 
		 <p>Coordinates are relative to the top, left corner of the object. All values are lengths. 
		 All values are separated by commas.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:href:get"><apiName>href</apiName><shortdesc>
		 The absolute URI of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The absolute URI of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:hreflang:get"><apiName>hreflang</apiName><shortdesc>
		 Language code of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Language code of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:name:get"><apiName>name</apiName><shortdesc>
		 Anchor name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Anchor name.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:rel:get"><apiName>rel</apiName><shortdesc>
		 Forward link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Forward link type.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:rev:get"><apiName>rev</apiName><shortdesc>
		 Reverse link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reverse link type.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:shape:get"><apiName>shape</apiName><shortdesc>
		 The shape of the active area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The shape of the active area. The coordinates are given by coords. 
		 
		 <p>Possible values can be:
		 <ul>
		 <li>default: Specifies the entire region</li>
		 <li>rect: Define a rectangular region</li>
		 <li>circle: Define a circular region</li>
		 <li>poly: Define a polygonal region</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:type:get"><apiName>type</apiName><shortdesc>
		 Advisory content type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Advisory content type.
		 
		 <p>This attribute gives an advisory hint as to the content type of 
		 the content available at the link target address. It allows user agents 
		 to opt to use a fallback mechanism rather than fetch the content if 
		 they are advised that they will get content in a content type they do 
		 not support.</p>
		 
		 <p>Authors who use this attribute take responsibility to manage the risk 
		 that it may become inconsistent with the content available at the link 
		 target address.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHeadingElement"><apiName>HTMLHeadingElement</apiName><shortdesc>
	 For the H1 to H6 elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 For the H1 to H6 elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHeadingElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal text alignment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTextAreaElement"><apiName>HTMLTextAreaElement</apiName><shortdesc>
	 Multi-line text field.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Multi-line text field.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTextAreaElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:cols:get"><apiName>cols</apiName><shortdesc>
		 Width of control (in characters).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Width of control (in characters).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:defaultValue:get"><apiName>defaultValue</apiName><shortdesc>
		 Represents the contents of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the contents of the element. The value of this attribute does 
		 not change if the contents of the corresponding form control, in an 
		 interactive user agent, changes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this 
		 control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onchange:get"><apiName>onchange</apiName><shortdesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onselect:get"><apiName>onselect</apiName><shortdesc>
		 The onselect event occurs when a user selects some text in a text field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onselect event occurs when a user selects some text in a text field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:readOnly:get"><apiName>readOnly</apiName><shortdesc>
		 This control is read-only.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 This control is read-only.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:rows:get"><apiName>rows</apiName><shortdesc>
		 Number of text rows.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Number of text rows.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of this form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of this form control. This the string "textarea".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:value:get"><apiName>value</apiName><shortdesc>
		 Represents the current contents of the corresponding form control, in an 
		 interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the current contents of the corresponding form control, in an 
		 interactive user agent. Changing this attribute changes the contents of the 
		 form control, but does not change the contents of the element. If the entirety 
		 of the data can not fit into a single DOMString, the implementation may 
		 truncate the data.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLModElement"><apiName>HTMLModElement</apiName><shortdesc>
	 Notice of modification to part of a document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Notice of modification to part of a document.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLModElement:cite:get"><apiName>cite</apiName><shortdesc>
		 A URI designating a document that describes the reason for the change.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating a document that describes the reason for the change.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLModElement:dateTime:get"><apiName>dateTime</apiName><shortdesc>
		 The date and time of the change.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The date and time of the change.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBaseFontElement"><apiName>HTMLBaseFontElement</apiName><shortdesc>
	 Base font.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Base font. This element is deprecated in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBaseFontElement:color:get"><apiName>color</apiName><shortdesc>
		 Font color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBaseFontElement:face:get"><apiName>face</apiName><shortdesc>
		 Font face identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font face identifier. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBaseFontElement:size:get"><apiName>size</apiName><shortdesc>
		 Computed font size.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Computed font size. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLIElement"><apiName>HTMLLIElement</apiName><shortdesc>
	 List item.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 List item.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLIElement:type:get"><apiName>type</apiName><shortdesc>
		 List item bullet style.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 List item bullet style. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLIElement:value:get"><apiName>value</apiName><shortdesc>
		 Reset sequence number when used in OL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Reset sequence number when used in OL. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLElement"><apiName>HTMLElement</apiName><shortdesc>
	 All HTML element interfaces derive from this class.</shortdesc><prolog><asMetadata/><asCustoms><internal>http://www.whatwg.org/specs/web-apps/current-work/#htmlelement
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.style.css:ElementCSSInlineStyle</apiBaseInterface><apiBaseClassifier>dom.core:Element</apiBaseClassifier></apiClassifierDef><apiDesc>
	 All HTML element interfaces derive from this class. Elements that only 
	 expose the HTML core attributes are represented by the base 
	 HTMLElement interface. These elements are as follows:
	 
	 <ul>
	 <li>special: SUB, SUP, SPAN, BDO</li>
	 <li>font: TT, I, B, U, S, STRIKE, BIG, SMALL</li>
	 <li>phrase: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ACRONYM, ABBR</li>
	 <li>list: DD, DT</li>
	 <li>NOFRAMES, NOSCRIPT</li>
	 <li>ADDRESS, CENTER</li>
	 </ul>
	 
	 DOM Level 2
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLElement:className:get"><apiName>className</apiName><shortdesc>
		 The class attribute of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The class attribute of the element. This attribute has been renamed 
		 due to conflicts with the "class" keyword exposed by many languages. 
		 See the class attribute definition in HTML 4.01.
		 
		 </apiDesc><example>
		 var elementNodeReference = document.getElementById("div1");
		 if (elementNodeReference.className == "fixed") {
		 // skip a particular class of element
		 goNextElement();
		 };
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:dir:get"><apiName>dir</apiName><shortdesc>
		 The dir attribute gets or sets the text writing directionality of 
		 the content of the current element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The dir attribute gets or sets the text writing directionality of 
		 the content of the current element. 
		 
		 Possible values for dir are ltr, for Left-to-right, and rtl, for Right-to-left. 
		 
		 Note: The text writing directionality of an element is which direction 
		 that text goes (for support of different language systems). Arabic 
		 languages and Hebrew are typical languages using the rtl directionality.
		 
		 Note: An image can have its dir attribute set to rtl in which case the 
		 HTML attributes title and alt will be formatted and defined as rtl.
		 
		 Note: When a table has its dir set to rtl, the column order are arranged 
		 from right to left. 
		 
		 </apiDesc><example>
		 var parg = document.getElementById("para1");
		 parg.dir = "rtl"; 
		 // change the text direction on a paragraph identified as "para1"
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:id:get"><apiName>id</apiName><shortdesc>
		 Gets or sets the element's identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets or sets the element's identifier. 
		 
		 Note: The ID must be unique in a document, and is often used to 
		 retrieve the element using document.getElementById. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:lang:get"><apiName>lang</apiName><shortdesc>
		 This property gets or sets the base language of an element's attribute 
		 values and text content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This property gets or sets the base language of an element's attribute 
		 values and text content. 
		 
		 Note: The language code returned by this property is defined in 
		 RFC 1766. Common examples include "en" for English, "ja" for 
		 Japanese, "es" for Spanish and so on. The default value of this 
		 attribute is unknown. Note that this attribute, though valid at the 
		 individual element level described here, is most often specified for 
		 the root element of the document.
		 
		 Note: This also only works with the deprecated lang attribute and not 
		 with xml:lang.
		 
		 </apiDesc><example>
		 // this snippet compares the base language and 
		 // redirects to another url based on language
		 if (document.documentElement.lang == "en") {
		 window.location.href = "Some_document.html.en";
		 } else if(document.documentElement.lang == "ru") {
		 window.location.href = "Some_document.html.ru";
		 };
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onclick:get"><apiName>onclick</apiName><shortdesc>
		 a pointer button was clicked
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was clicked
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:oncopy:get"><apiName>oncopy</apiName><shortdesc>
		 Non-Standard | Firefox 3+
		 
		 This event is sent when the user attempts to copy text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b>
		 
		 This event is sent when the user attempts to copy text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:oncut:get"><apiName>oncut</apiName><shortdesc>
		 Non-Standard | Firefox 3+
		 
		 This event is sent when the user attempts to cut text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b>
		 
		 This event is sent when the user attempts to cut text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:ondblclick:get"><apiName>ondblclick</apiName><shortdesc>
		 a pointer button was double clicked
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was double clicked
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onkeydown:get"><apiName>onkeydown</apiName><shortdesc>
		 a key was pressed down
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a key was pressed down
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onkeypress:get"><apiName>onkeypress</apiName><shortdesc>
		 a key was pressed and released
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a key was pressed and released
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onkeyup:get"><apiName>onkeyup</apiName><shortdesc>
		 a key was released
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a key was released
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmousedown:get"><apiName>onmousedown</apiName><shortdesc>
		 a pointer button was pressed down
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was pressed down
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmousemove:get"><apiName>onmousemove</apiName><shortdesc>
		 a pointer was moved within
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer was moved within
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmouseout:get"><apiName>onmouseout</apiName><shortdesc>
		 a pointer was moved away
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer was moved away
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmouseover:get"><apiName>onmouseover</apiName><shortdesc>
		 a pointer was moved onto
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer was moved onto
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmouseup:get"><apiName>onmouseup</apiName><shortdesc>
		 a pointer button was released
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was released
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onpaste:get"><apiName>onpaste</apiName><shortdesc>
		 Non-Standard | Firefox 3+
		 
		 This event is sent when the user attempts to paste text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b>
		 
		 This event is sent when the user attempts to paste text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:style:get"><apiName>style</apiName><shortdesc>
		 
		 Returns an object that represents the element's style attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns an object that represents the element's style attribute.
		 
		 <p>Note: Since the style property has the same (and highest) priority 
		 in the CSS cascade as an inline style declaration via the style 
		 attribute, it is useful for setting style on one specific element.</p>
		 
		 <p>Note: However, it is not useful for learning about the element's 
		 style in general, since it represents only the CSS declarations set 
		 in the element's inline style attribute, not those that come from 
		 style rules elsewhere, such as style rules in the &lt;head&gt; section, or
		 external style sheets.</p>
		 
		 <p><b>Note:</b> To get the values of all CSS properties for an element you 
		 should use window.getComputedStyle instead.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:title:get"><apiName>title</apiName><shortdesc>
		 Establishes the text to be displayed in a 'tool tip' popup when the 
		 mouse is over the displayed node.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Establishes the text to be displayed in a 'tool tip' popup when the 
		 mouse is over the displayed node.
		 
		 If a node does not have a title attribute, then the default action 
		 is to inherit it from its parent node, which in turn may inherit it 
		 from its parent node, etc. 
		 
		 </apiDesc><example>
		 button1.title = "click to refresh";
		 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLMapElement"><apiName>HTMLMapElement</apiName><shortdesc>
	 Client-side image map.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Client-side image map.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLMapElement:areas:get"><apiName>areas</apiName><shortdesc>
		 The list of areas defined for the image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 The list of areas defined for the image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMapElement:name:get"><apiName>name</apiName><shortdesc>
		 Names the map (for use with usemap).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Names the map (for use with usemap).
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLOptGroupElement"><apiName>HTMLOptGroupElement</apiName><shortdesc>
	 Group options together in logical subdivisions.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Group options together in logical subdivisions. See the OPTGROUP element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLOptGroupElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptGroupElement:label:get"><apiName>label</apiName><shortdesc>
		 Assigns a label to this option group.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Assigns a label to this option group. See the label attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLDivElement"><apiName>HTMLDivElement</apiName><shortdesc>
	 Generic block container.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Generic block container.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDivElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal text alignment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHRElement"><apiName>HTMLHRElement</apiName><shortdesc>
	 Create a horizontal rule.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Create a horizontal rule.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHRElement:align:get"><apiName>align</apiName><shortdesc>
		 Align the rule on the page.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Align the rule on the page. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>left</li>
		 <li>center</li>
		 <li>right</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLHRElement:noShade:get"><apiName>noShade</apiName><shortdesc>
		 Indicates to the user agent that there should be no shading in the rendering of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates to the user agent that there should be no shading in the rendering of this element. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLHRElement:size:get"><apiName>size</apiName><shortdesc>
		 The height of the rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The height of the rule. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLHRElement:width:get"><apiName>width</apiName><shortdesc>
		 The width of the rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The width of the rule. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableColElement"><apiName>HTMLTableColElement</apiName><shortdesc>
	 Regroups the COL and COLGROUP elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Regroups the COL and COLGROUP elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableColElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of cell data in column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of cell data in column.
		 <p>Valid values are: 
		 <ul>
		 <li>left: Left-flush data/Left-justify text. This is the default value for table data.</li>
		 <li>center: Center data/Center-justify text. This is the default value for table headers.</li>
		 <li>right: Right-flush data/Right-justify text.</li>
		 <li>justify: Double-justify text.</li>
		 <li>char: Align text around a specific character. If a user agent doesn't support character alignment, behavior in the presence of this value is unspecified.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:span:get"><apiName>span</apiName><shortdesc>
		 Indicates the number of columns in a group or affected by a grouping.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Indicates the number of columns in a group or affected by a grouping.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:vAlign:get"><apiName>vAlign</apiName><shortdesc>
		 Vertical alignment of cell data in column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Vertical alignment of cell data in column.
		 <p>Valid values are: 
		 <ul>
		 <li>top: Cell data is flush with the top of the cell.</li>
		 <li>middle: Cell data is centered vertically within the cell. This is the default value.</li>
		 <li>bottom: Cell data is flush with the bottom of the cell.</li>
		 <li>baseline: All cells in the same row as a cell whose valign attribute has this value should have their textual data positioned so that the first text line occurs on a baseline common to all cells in the row. This constraint does not apply to subsequent text lines in these cells.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:width:get"><apiName>width</apiName><shortdesc>
		 Default column width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Default column width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLDocument"><apiName>HTMLDocument</apiName><shortdesc>
	 An HTMLDocument is the root of the HTML hierarchy and holds the entire content.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.xpath:XPathEvaluator</apiBaseInterface><apiBaseClassifier>dom.core:Document</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An HTMLDocument is the root of the HTML hierarchy and holds the entire content.
	 
	 <p>Besides providing access to the hierarchy, it also provides some convenience 
	 methods for accessing certain sets of information from the document.</p>
	 
	 <p>The following properties have been deprecated in favor of the 
	 corresponding ones for the BODY element:
	 <ul>
	 <li>alinkColor</li>
	 <li>background</li>
	 <li>bgColor</li>
	 <li>fgColor</li>
	 <li>linkColor</li>
	 <li>vlinkColor</li>
	 </ul>
	 </p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDocument:URL:get"><apiName>URL</apiName><shortdesc>
		 Returns the URL of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URL of the current document. 
		 
		 <p><b>Note:</b> URL is a replacement for the DOM Level 0 document.location.href property. 
		 However document.URL is not settable, unlike document.location.href. </p>
		 
		 </apiDesc><example>
		 <codeblock>var currentURL = document.URL; alert(currentURL);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534708%28VS.85%29.aspx"><linktext>MSDN - URL Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.URL"><linktext>MDC - Document.URL</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-46183437"><linktext>W3C - HTMLDocument.URL</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:URLUnencoded:get"><apiName>URLUnencoded</apiName><shortdesc>
		 Gets the URL for the  document, stripped of any character encoding.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets the URL for the  document, stripped of any character encoding.
		 
		 </apiDesc><example>
		 The following illustrates the difference between the value returned by the URLUnencoded property and the value returned by the  URL property of the document.
		 <codeblock>
		 &lt;script&gt;
		 function window.onload() {
		 	oURL.innerText = document.URL;
		 	oURL2.innerText = document.URLUnencoded;
		 }			
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534709%28VS.85%29.aspx"><linktext>MSDN - URLUnencoded Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:XSLDocument:get"><apiName>XSLDocument</apiName><shortdesc>
		 Retrieves a reference to the top-level node of the Extensible Stylesheet Language (XSL) document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMObject</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a reference to the top-level node of the Extensible Stylesheet Language (XSL) document.
		 
		 <p><b>Note (IE):</b> You can use the XSLDocument property to access the Document Object Model (DOM) for the 
		 XSL style sheet. For more information, refer to the  XML DOM overview. </p>
		 
		 </apiDesc><example>
		 This example uses the XSLDocument property to access the DOM for the XSL and change attributes representing sort keys.
		 <codeblock>
		 function sort(key) {
		 	// Find the "order-by" attributes in the style sheet.
		 	var s = document.XSLDocument.selectNodes("~~/xsl:template[&amp;64;match='menu']
		 	                                          //xsl:apply-templates/&amp;64;order-by");
		 
		 	// Replace the values with the new sort key.
		 	for (var i = s.nextNode(); i != null; i = s.nextNode()) {
		 		i.value = key;
		 	}
		 
		 	// Find the subset of the document we need to update.
		 	var d = document.XMLDocument.selectSingleNode("story/menu");
		 
		 	// Apply the style sheet to the subset, and update the display.
		 	menu.innerHTML = d.transformNode(document.XSLDocument);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535163%28VS.85%29.aspx"><linktext>MSDN - XSLDocument Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:activeElement:get"><apiName>activeElement</apiName><shortdesc>
		 Returns the currently focused element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the currently focused element.
		 
		 <p>If no element in the Document is focused, this will return the body element.</p>
		 
		 <p><b>Note:</b> This attribute is part of the in-development HTML 5 specification.</p>
		 
		 <p><b>Note (IE):</b> For versions of Microsoft Internet Explorer 5 and later, the activeElement 
		 property is not defined until a document is loaded. A value of null is given for this property, if it 
		 is accessed inline during the loading of a document. This property can be accessed in the  onload event 
		 handler function. </p>
		 
		 <p><b>Note (IE):</b> Internet Explorer 4.0 returns  body as the activeElement when it is accessed 
		 inline during the loading of a document.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533065%28VS.85%29.aspx"><linktext>MSDN - activeElement Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.activeElement"><linktext>MDC - Document.activeElement</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-activeelement"><linktext>WHATWG - HTMLDocument.activeElement</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:alinkColor:get"><apiName>alinkColor</apiName><shortdesc>
		 Returns or sets the color of an active link in the document body.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#0000FF" for IE / "#EE0000" for Mozilla
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Returns or sets the color of an active link in the document body. A link is active during 
		 the time between mousedown and mouseup events. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 <p><b>Note:</b> Gecko supports both alinkColor/:active and :focus . Internet Explorer 6 
		 and 7 support alinkColor/:active only for  HTML anchor (&lt;a&gt;) links and the behavior is the same as 
		 :focus under Gecko. There is no support for :focus in IE. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533071(VS.85).aspx"><linktext>MSDN - alinkColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.alinkColor"><linktext>MDC - Document.alinkColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:all:get"><apiName>all</apiName><shortdesc>
		 Returns a reference to the collection of elements contained by the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a reference to the collection of elements contained by the object.
		 
		 <p><b>Note:</b> The all collection includes one element object for each valid HTML tag. If a valid tag has a 
		 matching end tag, both tags are represented by the same element object.</p>
		 
		 <p><b>Note:</b> The collection returned by the document's all collection always includes a reference to 
		 the  HTML,  HEAD, and  TITLE objects regardless of whether the tags are present in the document. If the  BODY tag 
		 is not present, but other HTML tags are, a BODY object is added to the all collection.</p>
		 
		 <p><b>Note:</b> If the document contains invalid or unknown tags, the collection includes one element object 
		 for each. Unlike valid end tags, unknown end tags are represented by their own element objects. The order of the element 
		 objects is the HTML source order. Although the collection indicates the order of tags, it does not indicate hierarchy.</p>
		 
		 <p><b>Note:</b> The  name property only applies to some elements such as  form elements. If the vIndex is set to 
		 a string matching the value of a name property in an element that the name property does not apply, then that element will 
		 not be added to the collection.</p>
		 
		 </apiDesc><example>
		 This example, in Microsoft JScript (compatible with ECMA 262 language specification), shows how to display the names of all tags in the document in the order the tags appear in the document.
		 <codeblock>
		 for(i = 0; i &lt; document.all.length; i++) {
		 	alert(document.all(i).tagName);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537434%28VS.85%29.aspx"><linktext>MSDN - all Collection</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:anchors:get"><apiName>anchors</apiName><shortdesc>
		 A collection of all the anchor (A) elements in a document with a 
		 value for the name attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the anchor (A) elements in a document with a 
		 value for the name attribute.
		 
		 <p><b>Note:</b> For reasons of backwards compatibility, the returned 
		 set of anchors only contains those anchors created with the name attribute, not 
		 those created with the id attribute. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( document.anchors.length &gt;= 5 ) {
		 	dump("dump found too many anchors");
		 	window.location = "http://www.google.com";
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537435%28VS.85%29.aspx"><linktext>MSDN - anchors Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.anchors"><linktext>MDC - Document.anchors</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7577272"><linktext>W3C - HTMLDocument.anchors</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:applets:get"><apiName>applets</apiName><shortdesc>
		 A collection of all the OBJECT elements that include applets and 
		 APPLET (deprecated) elements in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the OBJECT elements that include applets and 
		 APPLET (deprecated) elements in a document.
		 
		 </apiDesc><example>
		 <codeblock>
		 // ( When you know the second applet is the one you want ) 
		 my_java_app = document.applets[1];</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537436%28VS.85%29.aspx"><linktext>MSDN - applets Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.appletsMDC"><linktext>- Document.applets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-85113862"><linktext>W3C - HTMLDocument.applets</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:background:get"><apiName>background</apiName><shortdesc>
		 URI of the background texture tile image.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI of the background texture tile image.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLDocument:baseURIObject:get"><apiName>baseURIObject</apiName><shortdesc>
		 baseURIObject returns the nsIURI object representing the document's URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIURI</apiValueClassifier></apiValueDef><apiDesc>
		 baseURIObject returns the nsIURI object representing the document's URI. 
		 
		 <p><b>Note (Mozilla):</b> This property exists on all nodes (HTML, XUL, SVG, MathML, etc.), 
		 but only if the script trying to use it has UniversalXPConnect privileges.</p>
		 
		 <p><b>Note (Mozilla):</b> This property may only be accessed from privileged code. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.baseURIObject"><linktext>MDC - Document.baseURIObject</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Gets/sets the background color of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#ffffff"
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the background color of the current document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533506%28VS.85%29.aspx"><linktext>MSDN - bgColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.bgColor"><linktext>MDC - Document.bgColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:body:get"><apiName>body</apiName><shortdesc>
		 The element that contains the content for the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLElement</apiValueClassifier></apiValueDef><apiDesc>
		 The element that contains the content for the document. In documents 
		 with BODY contents, returns the BODY element. In frameset documents, 
		 this returns the outermost FRAMESET element.
		 
		 <p><b>Note:</b> Though body is settable, setting a new body on a document 
		 will effectively remove all the current children of the existing &lt;/body&gt; element. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // in HTML: &lt;body id="oldBodyElement"&gt;&lt;/body&gt;
		 alert(document.body.id); // "oldBodyElement"
		 var aNewBodyElement = document.createElement("body");
		 aNewBodyElement.id = "newBodyElement";
		 document.body = aNewBodyElement;
		 alert(document.body.id); // "newBodyElement"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.body"><linktext>MDC - Document.body</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-56360201"><linktext>W3C - HTMLDocument.body</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:characterSet:get"><apiName>characterSet</apiName><shortdesc>
		 Returns the character encoding of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the character encoding of the current document. 
		 
		 <p><b>Note:</b> The character encoding is the character set used for rendering the document, which may be different 
		 from the encoding specified by the page (the user can override the encoding). </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.characterSet"><linktext>MDC - Document.characterSet</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:charset:get"><apiName>charset</apiName><shortdesc>
		 Sets or retrieves the character set used to encode the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves the character set used to encode the object.
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 6, This property now applies to the  
		 a,  link, and  script objects. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533553%28VS.85%29.aspx"><linktext>MSDN - charset Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:compatMode:get"><apiName>compatMode</apiName><shortdesc>
		 Indicates whether the document is rendered in Quirks mode or Strict mode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft/Mozilla"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Indicates whether the document is rendered in Quirks mode or Strict mode. 
		 
		 <p><b>Note:</b> Can either be "BackCompat" for Quirks mode or "CSS1Compat" for Strict mode.</p>
		 
		 <p><b>Note:</b> There is a third mode, Gecko's "Almost_Standards" Mode, which only differs from 
		 Strict mode in the layout of images inside table cells. This third mode is reported the same way as 
		 Strict mode: "CSS1Compat". </p>
		 
		 <p><b>Note (IE):</b> The compatMode property is deprecated in Internet Explorer 8 in favor of the  documentMode property.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if (document.compatMode == "BackCompat") {
		 	// use some quirky stuff
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533687%28VS.85%29.aspx"><linktext>MSDN - compatMode Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.compatMode"><linktext>MDC - Document.compatMode</linktext></link><link href="http://developer.mozilla.org/en/Gecko%27s_%22Almost_Standards%22_Mode"><linktext>MDC - Gecko's "Almost Standards" Mode</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:compatible:get"><apiName>compatible</apiName><shortdesc>
		 Retrieves the collection of user agents and versions declared in the X-UA-Compatible  meta tag.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the collection of user agents and versions declared in the X-UA-Compatible  meta tag. 
		 
		 <p><b>Note (IE):</b> This method is available in all compatibility modes. </p>
		 
		 </apiDesc><example>
		 The following script iterates through the collection of compatible user agents, and displays each on a separate line. 
		 <codeblock>
		 &lt;meta http-equiv="X-UA-Compatible" content="IE=8;FF=3;OtherUA=4" /&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 window.attachEvent('onload',function(e) {
		 var a = [];
		 var compat = document.compatible;
		 for (var i=0; i&lt;compat.length; i++) {
		 a.push(compat[i].userAgent + '=' + compat[i].version);
		 }
		 var o = document.getElementById('output');
		 o.innerHTML = a.join('&lt;br/&gt;');
		 });
		 &lt;/script&gt;
		 
		 &lt;div id="output"&gt;&lt;/div&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc196984%28VS.85%29.aspx"><linktext>MSDN - compatible Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:contentType:get"><apiName>contentType</apiName><shortdesc>
		 Returns the Content-Type from the HTTP headers of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the Content-Type from the HTTP headers of the document. 
		 
		 <p><b>Note (Mozilla):</b> The property returns the MIME property "Content-Type" set in the HTTP Header and not 
		 the META property set in the HEAD section of the document. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.contentType"><linktext>MDC - Document.contentType</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:cookie:get"><apiName>cookie</apiName><shortdesc>
		 Get and set the cookies associated with the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMHTML 1
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: If the new value does not adhere to the cookie syntax.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Get and set the cookies associated with the current document. 
		 
		 <codeblock>allCookies = document.cookie;</codeblock>
		 
		 <p><codeph>allCookies</codeph> is a string containing a semicolon-separated list of cookies (i.e. key=value pairs)</p>
		 
		 <codeblock>document.cookie = updatedCookie;</codeblock>
		 
		 <p><codeph>updatedCookie</codeph> is a string of form key=value. Note that you can only set/update a single cookie at a time using this method.</p>
		 
		 <p>Any of the following cookie attribute values can optionally follow the key-value pair, specifying 
		 the cookie to set/update, and preceded by a semi-colon separator: 
		 <ul>
		 	<li><codeph>;path=<i>path</i></codeph> (e.g., '/', '/mydir') If not specified, defaults to the current path of the current document location.</li>
		 	<li><codeph>;domain=<i>domain</i></codeph> (e.g., 'example.com', '.example.com' (includes all subdomains), 'subdomain.example.com') If not specified, defaults to the host portion of the current document location.</li>
		 	<li><codeph>;max-age=<i>max-age-in-seconds</i></codeph> (e.g., 600465 for a year)</li>
		 	<li><codeph>;expires=<i>date-in-GMTString-format</i></codeph> (could use Date.toGMTString; now obsolete) If not specified it wil expire at the end of session.</li>
		 	<li><codeph>;secure</codeph> (cookie to only be transmitted over secure protocol as http)</li>
		 </ul>
		 </p>
		 
		 <p><b>Note:</b> The cookie value string can use encodeURIComponent() to ensure that the string 
		 does not contain any commas, semicolons, or whitespace (which are disallowed in cookie values).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 document.cookie = "name=oeschger";
		 document.cookie = "favorite_food=tripe";
		 alert(document.cookie);
		 // displays: name=oeschger;favorite_food=tripe</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533693%28VS.85%29.aspx"><linktext>MSDN - cookie Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.cookie"><linktext>MDC - Document.cookie</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-8747038"><linktext>W3C - HTMLDocument.cookie</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:defaultCharset:get"><apiName>defaultCharset</apiName><shortdesc>
		 Gets the default character set from the current regional language settings.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets the default character set from the current regional language settings.
		 
		 <p><b>Note (Microsoft):</b> The value depends on the current regional language settings. 
		 For typical settings in North America, the value is windows-1252.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533553%28VS.85%29.aspx"><linktext>MSDN - defaultCharset Property</linktext></link><link href="http://msdn.microsoft.com/en-us/library/aa752010(VS.85).aspx"><linktext>MSDN - Charsets in Microsoft Internet Explorer 5</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:designMode:get"><apiName>designMode</apiName><shortdesc>
		 Sets or gets a value that indicates whether the document can be edited.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or gets a value that indicates whether the document can be edited.
		 
		 <p>Values can be:
		 <ul>
		 <li>On : Document can be edited. </li>
		 <li>Off|Inherit : Default. Document cannot be edited. </li>
		 </ul>
		 </p>
		 
		 <p><b>Note (Mozilla):</b> Gets/sets WYSYWIG editing capability of Midas. It can only be used for HTML documents.</p>
		 
		 <p><b>Note (Mozilla):</b> Midas is the code name for Gecko's built-in rich text editor. Midas can be enabled via 
		 JavaScript on an HTML document. When Midas is enabled, the document becomes editable by the user. Scripting for Midas is based 
		 on the DHTML commands supported by Internet Explorer.</p>
		 
		 <p><b>Note (Microsoft):</b> You can use the designMode property to put Windows Internet 
		 Explorer into a mode so that you can edit the current document.</p>
		 
		 <p><b>Note (Microsoft):</b> While the browser is in design mode, objects enter a UI-activated state when 
		 the user presses ENTER, clicks an object that has focus, or double-clicks the object. Objects that are
		 UI-activated have their own window in the document. You can modify the UI only when the object is in a 
		 UI-activated state.</p>
		 
		 <p><b>Note (Microsoft):</b> You cannot execute script when the value of the designMode property is set to On.</p>
		 
		 <p><b>Note:</b> Since an entire document becomes editable, authors often load the editable document into an 
		 IFRAME and do the bulk of the scripting in the parent document.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Simple Edit Box&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;iframe
		 			id="MidasForm"
		 			src="about:blank"
		 			onload="this.contentDocument.designMode='on';"
		 		&gt;&lt;/iframe&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533720%28VS.85%29.aspx"><linktext>MSDN - designMode Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.designMode"><linktext>MDC - Document.designMode</linktext></link><link href="http://developer.mozilla.org/en/Midas"><linktext>MDC - Midas</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:dir:get"><apiName>dir</apiName><shortdesc>
		 Sets or retrieves a value that indicates the reading order of the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves a value that indicates the reading order of the object. 
		 
		 <p>Values can be:
		 <ul>
		 <li>ltr : Default. Content flows from left to right.</li>
		 <li>rtl : Content flows from right to left.</li>
		 </ul>
		 </p>
		 
		 <p><b>Note:</b> The dir property does not affect alphanumeric characters in Latin documents. 
		 These characters always render ltr. However, the property does affect punctuation characters in Latin 
		 documents. For example, punctuation marks such as periods and question marks will render to the left 
		 of a sentence when the dir property is set to rtl.</p>
		 
		 <p><b>Note:</b> The value of dir property has no effect on the orientation of coordinates for 
		 an object's positioning properties. For example, the  left property and the  right property perform the 
		 same placement in both cases. However, when both the left and right properties are specified, the left 
		 property takes precedence when the dir property is set to ltr. Likewise, the right property takes precedence 
		 when the dir property is set to rtl.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533731%28VS.85%29.aspx"><linktext>MSDN - dir Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Document.dir"><linktext>MDC - Document.dir</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:documentMode:get"><apiName>documentMode</apiName><shortdesc>
		 Retrieves the document compatibility mode of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Retrieves the document compatibility mode of the document.
		 
		 <p>Possible Values:
		 <ul>
		 	<li>5 - Microsoft Internet Explorer 5 mode (also known as "quirks mode").</li>
		 	<li>7 - Internet Explorer 7 Standards mode.</li>
		 	<li>8 - Internet Explorer 8 Standards mode.</li>
		 </ul>
		 </p>
		 
		 <p><b>Note (IE):</b> The document compatibility mode of a Web page determines how Internet Explorer 8 
		 interprets and renders the page. Page authors generally use  meta elements to specify X-UA-Compatible  
		 HTTP-EQUIV headers that specify the document compatibility mode. For more information, see  Defining Document 
		 Compatibility. In versions of Internet Explorer previous to Internet Explorer 8,  compatMode was solely 
		 determined by  DOCTYPE. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc196988%28VS.85%29.aspx"><linktext>MSDN - documentMode Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:documentURIObject:get"><apiName>documentURIObject</apiName><shortdesc>
		 Returns an nsIURI object representing the URI of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIURI</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an nsIURI object representing the URI of the document. 
		 
		 <p>This only works for privileged (UniversalXPConnect) scripts, including extension code. For web content this 
		 property doesn't have any special meaning and can be used just like any other custom property. </p>
		 
		 <p>Privileged code must be careful not to try getting or setting this property on a non-wrapped content object 
		 (e.g. on a wrappedJSObject of an XPCNativeWrapper). See bug 324464's comments for details. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Check that the URI scheme of the current tab in Firefox is 'http',
		 // assuming this code runs in context of browser.xul
		 var uriObj = content.document.documentURIObject;
		 var uriPort = uriObj.port;
		 
		 if (uriObj.schemeIs('http')) {
		 	...
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.documentURIObject"><linktext>MDC - Document.documentURIObject</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=324464"><linktext>bug 324464</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:domain:get"><apiName>domain</apiName><shortdesc>
		 Gets/sets the domain of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets/sets the domain of the current document.
		 
		 <p><b>Note:</b> This property returns null if the domain of the document cannot be identified.</p>
		 
		 <p><b>Note:</b> In the DOM HTML specification, this property is listed as being read-only. However, 
		 all common browsers including Mozilla will let you set it to a superdomain of the current value. For example, 
		 on developer.mozilla.org it is possible to set it to "mozilla.org" but not "mozilla.com".</p>
		 
		 <p><b>Note:</b> It is not universally possible in all browsers to set document.domain to a top-level 
		 domain (such as "com" or "org") or to a subdomain of a domain on which registrations are restricted (e.g. "co.uk", 
		 as registrations on the "uk" domain are restricted).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // for document www.love.com/good.html,
		 // this script closes the window
		 var badDomain = "www.love.com";
		 if (document.domain == badDomain) {
		 	window.close();
		 }</codeblock>
		 
		 <codeblock>
		 // For the URI http://developer.mozilla.org/en/docs/DOM the
		 // following sets domain to the string "developer.mozilla.org"
		 var domain = document.domain;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533740%28VS.85%29.aspx"><linktext>MSDN - domain Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.domain"><linktext>MDC - Document.domain</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-2250147"><linktext>W3C - HTMLDocument.domain</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:embeds:get"><apiName>embeds</apiName><shortdesc>
		 Retrieves a collection of all  embed objects in the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of all  embed objects in the document.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537450(VS.85).aspx"><linktext>MSDN - embeds Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.embeds"><linktext>MDC - Document.embeds</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:expando:get"><apiName>expando</apiName><shortdesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.
		 
		 <p><b>Note:</b> You can extend the properties on an object by creating arbitrary properties 
		 with values. You should be careful, however, because you can unintentionally set a property value when 
		 scripting in a case-sensitive language such as Microsoft JScript. For example, if the property value 
		 is borderColor and you type the value "bordercolor = 'blue'", you have, in fact, created another property 
		 on the style object called bordercolor with the value 'blue'. If you query the value of the property, 
		 the value "blue" is returned. However, the borders for the element do not turn blue.</p>
		 
		 <p><b>Note:</b> Setting the  expando property of the  document object to false precludes the 
		 functionality of all expandos within the document.</p>
		 
		 </apiDesc><example>
		 The following example demonstrates that, by setting the expando property of the document object to false, 
		 the document ignores the  UNSELECTABLE expando on the  span and allows you to select the text.
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 &lt;script type="text/javascript"&gt;
		 	//Set the expando property to false.
		 	document.expando = false;
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 
		 &lt;div&gt;
		 &lt;span id="oSpan" unselectable="on"&gt;This text should be selectable.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533747%28VS.85%29.aspx"><linktext>MSDN - expando Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fgColor:get"><apiName>fgColor</apiName><shortdesc>
		 Gets/sets the foreground color, or text color, of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#000000"
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the foreground color, or text color, of the current document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533749%28VS.85%29.aspx"><linktext>MSDN - fgColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.fgColor"><linktext>MDC - Document.fgColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fileCreatedDate:get"><apiName>fileCreatedDate</apiName><shortdesc>
		 Retrieves the date the file was created.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the date the file was created. For example, Monday, December 08, 1997.
		 
		 </apiDesc><example>
		 This example implements the fileCreatedDate property to count the number of days since the document was created.
		 <codeblock>
		 // Date document was created
		 var oCreated=new Date(document.fileCreatedDate);
		 
		 // Today's Date
		 var oToday=new Date();
		 
		 //There are 86400000 milliseconds in a day
		 var iMilliSeconds=86400000;
		 var iDaysBetween=(oToday.getTime() - oCreated.getTime()) / iMilliSeconds;	
		 
		 alert("Created: " + oCreated + "\nDays since created: " + parseInt(iDaysBetween));</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533750%28VS.85%29.aspx"><linktext>MSDN - fileCreatedDate Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fileModifiedDate:get"><apiName>fileModifiedDate</apiName><shortdesc>
		 Retrieves the date the file was last modified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the date the file was last modified. For example, Monday, December 08, 1997.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533751%28VS.85%29.aspx"><linktext>MSDN - fileModifiedDate Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fileSize:get"><apiName>fileSize</apiName><shortdesc>
		 Retrieves the file size.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the file size. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533752%28VS.85%29.aspx"><linktext>MSDN - fileSize Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:forms:get"><apiName>forms</apiName><shortdesc>
		 A collection of all the forms of a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the forms of a document.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 	&lt;title&gt; document.forms example&lt;/title&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 &lt;form id="robby"&gt;
		 	&lt;input type="button" onclick="alert(document.forms[0].id);" value="robby's form" /&gt;
		 &lt;/form&gt;
		 
		 &lt;form id="dave"&gt;
		 	&lt;input type="button" onclick="alert(document.forms[1].id);" value="dave's form" /&gt;
		 &lt;/form&gt;
		 
		 &lt;form id="paul"&gt;
		 	&lt;input type="button" onclick="alert(document.forms[2].id);" value="paul's form" /&gt;
		 &lt;/form&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537457%28VS.85%29.aspx"><linktext>MSDN - forms Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.forms"><linktext>MDC - Document.forms</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-1689064"><linktext>W3C - HTMLDocument.forms</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:frames:get"><apiName>frames</apiName><shortdesc>
		 Retrieves a collection of all  window objects defined by the given document or defined by 
		 the document associated with the given window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of all  window objects defined by the given document or defined by 
		 the document associated with the given window.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537459%28VS.85%29.aspx"><linktext>MSDN - frames Collection</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:height:get"><apiName>height</apiName><shortdesc>
		 Returns the height of the body element of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the height of the body element of the current document. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // alert document height
		 alert(document.height);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.height"><linktext>MDC - Document.height</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:images:get"><apiName>images</apiName><shortdesc>
		 A collection of all the IMG elements in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the IMG elements in a document. The behavior is 
		 limited to IMG elements for backwards compatibility.
		 
		 <p><b>Note:</b> As suggested by HTML 4.01, to include images, authors may use 
		 the OBJECT element or the IMG element. Therefore, it is recommended 
		 not to use this attribute to find the images in the document but 
		 getElementsByTagName with HTML 4.01 or getElementsByTagNameNS with 
		 XHTML 1.0.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var ilist = document.images;
		 for(var i = 0; i &lt; ilist.length; i++) {
		 	if(ilist[i] == "banner.gif") {
         		// found the banner
		 	}
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537461%28VS.85%29.aspx"><linktext>MSDN - images Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.images"><linktext>MDC - Document.images</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-90379117"><linktext>W3C - HTMLDocument.images</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:lastModified:get"><apiName>lastModified</apiName><shortdesc>
		 Returns a string containing the date and time on which the current document was last modified, in the form "MM/DD/YY hh:mm:ss".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string containing the date and time on which the current document was last modified, in the form "MM/DD/YY hh:mm:ss".
		 
		 <p><b>Note:</b> As a string, lastModified cannot easily be used for comparisions between the modified dates of documents. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(document.lastModified); 
		 // returns: Tuesday, July 10, 2001 10:19:42</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533946%28VS.85%29.aspx"><linktext>MSDN - lastModified Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.lastModified"><linktext>MDC - Document.lastModified</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:linkColor:get"><apiName>linkColor</apiName><shortdesc>
		 Gets/sets the color of links within the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#0000FF" for IE / "#0000EE" for Mozilla
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the color of links within the document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534117%28VS.85%29.aspx"><linktext>MSDN - linkColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.linkColor"><linktext>MDC - Document.linkColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:links:get"><apiName>links</apiName><shortdesc>
		 A collection of all AREA elements and anchor (A) elements in a document 
		 with a value for the href attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all AREA elements and anchor (A) elements in a document 
		 with a value for the href attribute.
		 
		 </apiDesc><example>
		 <codeblock>
		 var links = document.links;
		 for(var i = 0; i &lt; links.length; i++) {
		 	var linkHref = document.createTextNode(links[i].href);
		 	var lineBreak = document.createElement("br");
		 	document.body.appendChild(linkHref);
		 	document.body.appendChild(lineBreak);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537465%28VS.85%29.aspx"><linktext>MSDN - links Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.links"><linktext>MDC - Document.links</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7068919"><linktext>W3C - HTMLDocument.links</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:location:get"><apiName>location</apiName><shortdesc>
		 Returns a Location object, which contains information about the URL of the document and provides 
		 methods for changing that URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Location</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a Location object, which contains information about the URL of the document and provides 
		 methods for changing that URL. In Gecko browsers you can also assign to this property to load another URL. 
		 
		 <p><b>Note:</b> Location objects have a toString method returning the current URL. You can also 
		 assign a string to document.location. This means that you can work with document.location as if it were a 
		 string in most cases. Sometimes, for example when you need to call a String method on it, you have to 
		 explicitly call toString: 
		 
		 <codeblock>alert(document.location.toString().charAt(17))</codeblock>
		 </p>
		 
		 <p><b>Note:</b> document.location was originally a read-only property, although Gecko browsers allow 
		 you to assign to it as well. For cross-browser safety, use window.location instead. </p>
		 
		 <p><b>Note:</b> To retrieve just the URL as a string, the read-only document.URL property can be used. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(document.location); 
		 // Prints a string like
		 // "http://www.example.com/juicybits.html" to the console</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535866%28VS.85%29.aspx"><linktext>MSDN - location Object</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.location"><linktext>MDC - Document.location</linktext></link><link href="dom.html.Window#location()"><linktext>dom.html.Window#location()</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:namespaces:get"><apiName>namespaces</apiName><shortdesc>
		 Retrieves a collection of namespace objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of namespace objects.
		 
		 INCOMPLETE
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537470%28VS.85%29.aspx"><linktext>MSDN - namespaces Collection</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:parentWindow:get"><apiName>parentWindow</apiName><shortdesc>
		 Gets a reference to the container object of the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:Window</apiValueClassifier></apiValueDef><apiDesc>
		 Gets a reference to the container object of the window.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534331%28VS.85%29.aspx"><linktext>MSDN - parentWindow Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:plugins:get"><apiName>plugins</apiName><shortdesc>
		 Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the &amp;lt;embed&amp;gt; elements in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the &lt;embed&gt; elements in the current document. 
		 
		 <p><b>Note:</b> For a list of installed plugins, use navigator.plugins instead.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537477%28VS.85%29.aspx"><linktext>MSDN - plugins Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.plugins"><linktext>MDC - Document.plugins</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:protocol:get"><apiName>protocol</apiName><shortdesc>
		 Sets or retrieves the protocol portion of a URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves the protocol portion of a URL. 
		 
		 <p><b>Note:</b> The protocol property specifies how to transfer information from the host to the 
		 client. Windows Internet Explorer supports several  predefined protocols, including  http and  ftp.</p>
		 
		 <p><b>Note:</b> The  document,  img, and  location objects expose the protocol property as read-only. 
		 location.protocol property returns the initial substring of a URL, including the first colon (for example, 
		 http:). However, document.protocol returns the expanded text of the protocol acronym. For example, it returns 
		 the http protocol as Hypertext Transfer Protocol.</p>
		 
		 </apiDesc><example>
		 This example function returns the protocol property of the current page location.
		 <codeblock>
		 function getProtocol() {
		 	return document.location.protocol;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534353%28VS.85%29.aspx"><linktext>MSDN - protocol Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:readyState:get"><apiName>readyState</apiName><shortdesc>
		 Retrieves a value that indicates the current state of the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a value that indicates the current state of the object.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>State</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>uninitialized</entry><entry>Object is not initialized with data.</entry>
		 	</row><row>
		 		<entry>loading</entry><entry>Object is loading its data.</entry>
		 	</row><row>
		 		<entry>loaded</entry><entry>Object has finished loading its data.</entry>
		 	</row><row>
		 		<entry>interactive</entry><entry>User can interact with the object even though it is not fully loaded.</entry>
		 	</row><row>
		 		<entry>complete</entry><entry>Object is completely initialized.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note:</b> An object's state is initially set to uninitialized, and then to loading. When data 
		 loading is complete, the state of the link object passes through the loaded and interactive states to reach the 
		 complete state. </p>
		 
		 <p><b>Note:</b> The states through which an object passes are determined by that object; an object 
		 can skip certain states (for example, interactive) if the state does not apply to that object.</p>
		 
		 <p><b>Note:</b> Data source objects and databound elements are normally populated asynchronously, and 
		 certain programmatic operations can only be performed reliably on databound objects when they are ready for use.
		 Therefore, the appropriate code should be written to confirm the readyState of objects prior to performing 
		 certain operations on them. For example, walking the rows of a  table should not be attempted until after the 
		 table has reached the complete state.</p>
		 
		 <p><b>Note:</b> The readyState property enables the status of an object to be tested. The correct place 
		 to test the readyState property is in the event handler for  onreadystatechange. Similarly, a data source object 
		 (DSO) fires the  ondatasetcomplete event to notify the Web page that the dataset is ready for programmatic operation.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534359%28VS.85%29.aspx"><linktext>MSDN - readyState Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.readyState"><linktext>MDC - Document.readyState</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-readystate"><linktext>WHATWG - HTMLDocument.readyState</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:referrer:get"><apiName>referrer</apiName><shortdesc>
		 Returns the URI of the page that linked to this page.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URI of the page that linked to this page. 
		 The value is an empty string if the user navigated to the page directly 
		 (not through a link, but, for example, via a bookmark).
		 
		 <p><b>Note:</b> This property returns a value only when the user reaches the current page through a 
		 link from the previous page. Otherwise, document. referrer returns an empty string; it also returns an empty 
		 string when the link is from a secure site.</p>
		 
		 <p><b>Note:</b> For example, if PageA.htm includes a link to PageB.htm, and the user clicks that 
		 link, the document.referrer on PageB.htm returns "PageA.htm." However, if the user is on PageA.htm and types 
		 PageB.htm into the address line or chooses the Open command from the File menu to get to PageB.htm, the 
		 document.referrer returns an empty string.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534365%28VS.85%29.aspx"><linktext>MSDN - referrer Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.referrer"><linktext>MDC - Document.referrer</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-95229140"><linktext>W3C - HTMLDocument.referrer</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:scripts:get"><apiName>scripts</apiName><shortdesc>
		 Returns an HTMLCollection object containing one or more HTMLScriptElements or null which represent the &amp;lt;script&amp;gt; elements in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an HTMLCollection object containing one or more HTMLScriptElements or null which represent the &lt;script&gt; elements in the current document. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537487%28VS.85%29.aspx"><linktext>MSDN - scripts Collection</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-scripts"><linktext>WHATWG - HTMLDocument.scripts</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:selection:get"><apiName>selection</apiName><shortdesc>
		 Represents the active selection, which is a highlighted block of text or other elements in the document 
		 that a user or a script can carry out some action on.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Selection</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the active selection, which is a highlighted block of text or other elements in the document 
		 that a user or a script can carry out some action on.
		 
		 <p><b>Note (IE):</b> You can use the selection object as input from the user to identify which portion 
		 of the document to act on, or as output to the user to show the results of an action.</p>
		 
		 <p><b>Note (IE):</b> Users and scripts can create selections. Users create selections by dragging the 
		 mouse over a portion of the document. Scripts create selections by calling the  select method on a text range 
		 or similar object. To get the active selection, apply the selection keyword to the document object. To carry 
		 out work on a selection, create a text range object from the selection using the  createRange method. </p>
		 
		 <p><b>Note:</b> A document can have only one selection at a time. The selection has a type that 
		 determines whether it is empty or contains a block of text or elements. Although an empty selection contains 
		 nothing, you can use it to mark a position in the document.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535869%28VS.85%29.aspx"><linktext>MSDN - selection Object</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:title:get"><apiName>title</apiName><shortdesc>
		 Gets or sets the title of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets or sets the title of the document. 
		 
		 <p><b>Note:</b> The initial value of document.title is the text content of the &lt;title&gt; element.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;title&gt;Hello World!&lt;/title&gt; 
		 &lt;/head&gt;
		 &lt;body&gt;
		 	&lt;script&gt;
		 		alert(document.title); // displays "Hello World!"
		 		document.title = "Goodbye World!";
		 		alert(document.title); // displays "Goodbye World!"
		 	&lt;/script&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.title"><linktext>MDC - Document.title</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-18446827"><linktext>W3C - HTMLDocument.title</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:uniqueID:get"><apiName>uniqueID</apiName><shortdesc>
		 Retrieves an autogenerated, unique identifier for the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves an autogenerated, unique identifier for the object. 
		 
		 <p><b>Note (IE):</b> When you apply this property to the  document object, the browser automatically 
		 generates a new ID that you can assign to an element's  id property.</p>
		 
		 <p><b>Note (IE):</b> A new ID is generated and assigned to the element the first time the property is retrieved. 
		 Every subsequent access to the property on the same element returns the same ID.</p>
		 
		 <p><b>Note (IE):</b> The unique ID generated is not guaranteed to be the same every time the page is loaded.</p>
		 
		 </apiDesc><example>
		 This example uses the uniqueID property to show how the browser can autogenerate a unique ID for an element inserted into the page by a behavior.
		 <codeblock>
		 // Specifying an ID=document.uniqueID ensures that a unique identifier
		 // will be assigned to the element being inserted into the page by
		 // the behavior.
		 newTextAreaID = element.document.uniqueID;
		 element.document.body.insertAdjacentHTML ("beforeEnd",
		 "<P><TEXTAREA ID=" + newTextAreaID + " STYLE="height: 200 ;&#34;+     &#34;width: 350"/></P>");</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534704%28VS.85%29.aspx"><linktext>MSDN - uniqueID Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:vlinkColor:get"><apiName>vlinkColor</apiName><shortdesc>
		 Gets/sets the color of links that the user has visited in the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#800080" for IE / "#551A8B" for Mozilla
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the color of links that the user has visited in the document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535139%28VS.85%29.aspx"><linktext>MSDN - vlinkColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.vlinkColor"><linktext>MDC - Document.vlinkColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:width:get"><apiName>width</apiName><shortdesc>
		 Returns the width of the body element of the current document in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the width of the body element of the current document in pixels. 
		 
		 <p><b>Note:</b> Not supported by IE.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 function init() {
		 	alert("The width of the document is " + document.width + " pixels.");
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.width"><linktext>MDC - Document.width</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLabelElement"><apiName>HTMLLabelElement</apiName><shortdesc>
	 Form field label text.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Form field label text.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLabelElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:htmlFor:get"><apiName>htmlFor</apiName><shortdesc>
		 This attribute links this label with another form control by id attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute links this label with another form control by id attribute. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLOptionElement"><apiName>HTMLOptionElement</apiName><shortdesc>
	 A selectable choice.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A selectable choice. See the OPTION element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLOptionElement:defaultSelected:get"><apiName>defaultSelected</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Represents the value of the HTML selected attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Represents the value of the HTML selected attribute. The value of this attribute 
		 does not change if the state of the corresponding form control, in an interactive 
		 user agent, changes. See the selected attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:index:get"><apiName>index</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The index of this OPTION in its parent SELECT, starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The index of this OPTION in its parent SELECT, starting from 0.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:label:get"><apiName>label</apiName><shortdesc>
		 Option label for use in hierarchical menus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Option label for use in hierarchical menus. See the label attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:selected:get"><apiName>selected</apiName><shortdesc>
		 Represents the current state of the corresponding form control, in an interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Represents the current state of the corresponding form control, in an interactive user agent. 
		 Changing this attribute changes the state of the form control, but does not change the value 
		 of the HTML selected attribute of the element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:text:get"><apiName>text</apiName><shortdesc>
		 The text contained within the option element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The text contained within the option element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:value:get"><apiName>value</apiName><shortdesc>
		 The current form control value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The current form control value. See the value attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLMenuElement"><apiName>HTMLMenuElement</apiName><shortdesc>
	 Menu list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Menu list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLMenuElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBRElement"><apiName>HTMLBRElement</apiName><shortdesc>
	 Force a line break.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Force a line break.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBRElement:clear:get"><apiName>clear</apiName><shortdesc>
		 Control flow of text around floats.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Control flow of text around floats. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>none</li>
		 <li>left</li>
		 <li>right</li>
		 <li>all</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLegendElement"><apiName>HTMLLegendElement</apiName><shortdesc>
	 Provides a caption for a FIELDSET grouping.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Provides a caption for a FIELDSET grouping.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLegendElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLegendElement:align:get"><apiName>align</apiName><shortdesc>
		 Text alignment relative to FIELDSET.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Text alignment relative to FIELDSET. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLegendElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLImageElement"><apiName>HTMLImageElement</apiName><shortdesc>
	 Embedded image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Embedded image.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLImageElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:border:get"><apiName>border</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Width of border around image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Width of border around image. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:height:get"><apiName>height</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The height of the image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The height of the image in pixels. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:hspace:get"><apiName>hspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Horizontal space to the left and right of this image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Horizontal space to the left and right of this image in pixels. This attribute is deprecated in HTML 4.01. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:isMap:get"><apiName>isMap</apiName><shortdesc>
		 Use server-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Use server-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:longDesc:get"><apiName>longDesc</apiName><shortdesc>
		 URI designating a long description of this image or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a long description of this image or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:name:get"><apiName>name</apiName><shortdesc>
		 The name of the element (for backwards compatibility).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the element (for backwards compatibility).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:src:get"><apiName>src</apiName><shortdesc>
		 URI designating the source of this image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating the source of this image.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:useMap:get"><apiName>useMap</apiName><shortdesc>
		 Use client-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Use client-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:vspace:get"><apiName>vspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Vertical space above and below this image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Vertical space above and below this image in pixels. This attribute is deprecated in HTML 4.01. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:width:get"><apiName>width</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The width of the image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The width of the image in pixels. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableCellElement"><apiName>HTMLTableCellElement</apiName><shortdesc>
	 The object used to represent the TH and TD elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The object used to represent the TH and TD elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableCellElement:abbr:get"><apiName>abbr</apiName><shortdesc>
		 Abbreviation for header cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Abbreviation for header cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of data in cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of data in cell.
		 <p>Valid values are: 
		 <ul>
		 <li>left: Left-flush data/Left-justify text. This is the default value for table data.</li>
		 <li>center: Center data/Center-justify text. This is the default value for table headers.</li>
		 <li>right: Right-flush data/Right-justify text.</li>
		 <li>justify: Double-justify text.</li>
		 <li>char: Align text around a specific character. If a user agent doesn't support character alignment, behavior in the presence of this value is unspecified.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:axis:get"><apiName>axis</apiName><shortdesc>
		 Names group of related headers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Names group of related headers.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Cell background color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell background color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:cellIndex:get"><apiName>cellIndex</apiName><shortdesc>
		 The index of this cell in the row, starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The index of this cell in the row, starting from 0. This index is in document tree order and not display order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:colSpan:get"><apiName>colSpan</apiName><shortdesc>
		 Number of columns spanned by cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Number of columns spanned by cell.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:headers:get"><apiName>headers</apiName><shortdesc>
		 List of id attribute values for header cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 List of id attribute values for header cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:height:get"><apiName>height</apiName><shortdesc>
		 Cell height.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell height. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:noWrap:get"><apiName>noWrap</apiName><shortdesc>
		 Suppress word wrapping.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Suppress word wrapping. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:rowSpan:get"><apiName>rowSpan</apiName><shortdesc>
		 Number of rows spanned by cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Number of rows spanned by cell.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:scope:get"><apiName>scope</apiName><shortdesc>
		 Scope covered by header cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Scope covered by header cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:vAlign:get"><apiName>vAlign</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:width:get"><apiName>width</apiName><shortdesc>
		 Cell width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell width. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLQuoteElement"><apiName>HTMLQuoteElement</apiName><shortdesc>
	 For the Q and BLOCKQUOTE elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 For the Q and BLOCKQUOTE elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLQuoteElement:cite:get"><apiName>cite</apiName><shortdesc>
		 A URI designating a source document or message.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating a source document or message.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLAreaElement"><apiName>HTMLAreaElement</apiName><shortdesc>
	 Client-side image map area definition.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Client-side image map area definition.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLAreaElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:coords:get"><apiName>coords</apiName><shortdesc>
		 Comma-separated list of lengths, defining an active region geometry.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Comma-separated list of lengths, defining an active region geometry.
		 
		 <p>This attribute specifies the position and shape on the screen. The 
		 number and order of values depends on the shape being defined. Possible combinations:
		 
		 <adobetable class="innertable">
		 
		 <tgroup cols="4"><thead><row><row>
		 		<entry><p>Shape</p></entry>
		 		<entry><p>Values</p></entry>
		 	</row><row>
		 		<entry><codeph>rect</codeph></entry>
		 		<entry>left-x, top-y, right-x, bottom-y.</entry>
		 	</row><row>
		 		<entry><codeph>circle</codeph></entry>
		 		<entry>center-x, center-y, radius. <b>Note:</b> When the radius value is a percentage value, 
		 user agents should calculate the final radius value based on the associated object's width 
		 and height. The radius should be the smaller value of the two.</entry>
		 	</row><row>
		 		<entry><codeph>poly</codeph></entry>
		 		<entry>x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should 
		 be the same to close the polygon. When these coordinate values are not the same, user agents 
		 should infer an additional coordinate pair to close the polygon.</entry>
		 	</row></row></thead><tbody/></tgroup></adobetable>
		 </p>
		 
		 <p>Coordinates are relative to the top, left corner of the object. All values 
		 are lengths. All values are separated by commas.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.html.xml#HTMLAreaElement/shape"><linktext>shape</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLAreaElement:href:get"><apiName>href</apiName><shortdesc>
		 The URI of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:noHref:get"><apiName>noHref</apiName><shortdesc>
		 Specifies that this area is inactive, i.e., has no associated action.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Specifies that this area is inactive, i.e., has no associated action.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:shape:get"><apiName>shape</apiName><shortdesc>
		 The shape of the active area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The shape of the active area. The coordinates are given by coords.
		 
		 <p>Possible values can be:
		 <ul>
		 <li>default: Specifies the entire region</li>
		 <li>rect: Define a rectangular region</li>
		 <li>circle: Define a circular region</li>
		 <li>poly: Define a polygonal region</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLinkElement"><apiName>HTMLLinkElement</apiName><shortdesc>
	 The LINK element specifies a link to an external resource, and defines this 
	 document's relationship to that resource (or vice versa).</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The LINK element specifies a link to an external resource, and defines this 
	 document's relationship to that resource (or vice versa). See the LINK 
	 element definition in HTML 4.01 (see also the LinkStyle interface in the 
	 StyleSheet module [DOM Level 2 Style Sheets and CSS]).
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLinkElement:charset:get"><apiName>charset</apiName><shortdesc>
		 The character encoding of the resource being linked to.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The character encoding of the resource being linked to. See the 
		 charset attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 Enables/disables the link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Enables/disables the link. This is currently only used for style 
		 sheet links, and may be used to activate or deactivate style sheets.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:href:get"><apiName>href</apiName><shortdesc>
		 The URI of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI of the linked resource. See the href 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:hreflang:get"><apiName>hreflang</apiName><shortdesc>
		 Language code of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Language code of the linked resource. See the hreflang attribute 
		 definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:media:get"><apiName>media</apiName><shortdesc>
		 Designed for use with one or more target media.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Designed for use with one or more target media. See the media 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:rel:get"><apiName>rel</apiName><shortdesc>
		 Forward link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Forward link type. See the rel attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:rev:get"><apiName>rev</apiName><shortdesc>
		 Reverse link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reverse link type. See the rev attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in. See the target attribute definition 
		 in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:type:get"><apiName>type</apiName><shortdesc>
		 Advisory content type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Advisory content type. See the type attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFormElement"><apiName>HTMLFormElement</apiName><shortdesc>
	 The FORM element encompasses behavior similar to a collection and an 
	 element.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The FORM element encompasses behavior similar to a collection and an 
	 element. It provides direct access to the contained form controls as well 
	 as the attributes of the form element.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFormElement:acceptCharset:get"><apiName>acceptCharset</apiName><shortdesc>
		 List of character sets supported by the server.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 List of character sets supported by the server. See the accept-charset 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:action:get"><apiName>action</apiName><shortdesc>
		 Server-side form handler.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Server-side form handler. See the action attribute definition in 
		 HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:elements:get"><apiName>elements</apiName><shortdesc>
		 Returns a collection of all form control elements in the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a collection of all form control elements in the form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:enctype:get"><apiName>enctype</apiName><shortdesc>
		 The content type of the submitted form, generally 
		 "application/x-www-form-urlencoded".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The content type of the submitted form, generally 
		 "application/x-www-form-urlencoded". See the enctype attribute 
		 definition in HTML 4.01.
		 
		 Note: The onsubmit even handler is not guaranteed to be triggered when 
		 invoking this method. The behavior is inconsistent for historical 
		 reasons and authors should not rely on a particular one.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:length:get"><apiName>length</apiName><shortdesc>
		 The number of form controls in the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of form controls in the form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:method:get"><apiName>method</apiName><shortdesc>
		 HTTP method [IETF RFC 2616] used to submit form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 HTTP method [IETF RFC 2616] used to submit form. See the method attribute 
		 definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:name:get"><apiName>name</apiName><shortdesc>
		 Names the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Names the form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:onreset:get"><apiName>onreset</apiName><shortdesc>
		 The onreset event occurs when a form is reset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onreset event occurs when a form is reset.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:onsubmit:get"><apiName>onsubmit</apiName><shortdesc>
		 The onsubmit event occurs when a form is submitted.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onsubmit event occurs when a form is submitted.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in. See the target attribute definition 
		 in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFrameElement"><apiName>HTMLFrameElement</apiName><shortdesc>
	 Create a frame.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Create a frame.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFrameElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:frameBorder:get"><apiName>frameBorder</apiName><shortdesc>
		 Request frame borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Request frame borders.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:longDesc:get"><apiName>longDesc</apiName><shortdesc>
		 URI designating a long description of this image or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a long description of this image or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:marginHeight:get"><apiName>marginHeight</apiName><shortdesc>
		 Frame margin height, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin height, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:marginWidth:get"><apiName>marginWidth</apiName><shortdesc>
		 Frame margin width, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin width, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:name:get"><apiName>name</apiName><shortdesc>
		 The frame name (object of the target attribute).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The frame name (object of the target attribute).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:noResize:get"><apiName>noResize</apiName><shortdesc>
		 When true, forbid user from resizing frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When true, forbid user from resizing frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:scrolling:get"><apiName>scrolling</apiName><shortdesc>
		 Specify whether or not the frame should have scrollbars.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specify whether or not the frame should have scrollbars. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:src:get"><apiName>src</apiName><shortdesc>
		 A URI designating the initial frame contents.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating the initial frame contents.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLIsIndexElement"><apiName>HTMLIsIndexElement</apiName><shortdesc>
	 This element is used for single-line text input.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This element is used for single-line text input. See the ISINDEX element 
	 definition in HTML 4.01. This element is deprecated in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLIsIndexElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this 
		 control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIsIndexElement:prompt:get"><apiName>prompt</apiName><shortdesc>
		 The prompt message.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The prompt message. See the prompt attribute definition in HTML 4.01. 
		 This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLInputElement"><apiName>HTMLInputElement</apiName><shortdesc>
	 Form control.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Form control.
	 
	 <p>Note: Depending upon the environment in which the page is being viewed, the value 
	 property may be read-only for the file upload input type. For the "password" input 
	 type, the actual value returned may be masked to prevent unauthorized use. See the 
	 INPUT element definition in [HTML 4.01].</p>
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLInputElement:accept:get"><apiName>accept</apiName><shortdesc>
		 A comma-separated list of content types that a server processing this form will handle correctly.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A comma-separated list of content types that a server processing this form will handle correctly.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:checked:get"><apiName>checked</apiName><shortdesc>
		 When the type attribute of the element has the value "radio" or "checkbox", this represents 
		 the current state of the form control, in an interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When the type attribute of the element has the value "radio" or "checkbox", this represents 
		 the current state of the form control, in an interactive user agent. Changes to this attribute 
		 change the state of the form control, but do not change the value of the HTML checked 
		 attribute of the INPUT element.
		 
		 <p>Note: During the handling of a click event on an input element with a type attribute that 
		 has the value "radio" or "checkbox", some implementations may change the value of this property 
		 before the event is being dispatched in the document. If the default action of the event is 
		 canceled, the value of the property may be changed back to its original value. This means that 
		 the value of this property during the handling of click events is implementation dependent.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:defaultChecked:get"><apiName>defaultChecked</apiName><shortdesc>
		 When type has the value "radio" or "checkbox", this represents the HTML checked attribute 
		 of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When type has the value "radio" or "checkbox", this represents the HTML checked attribute 
		 of the element. The value of this attribute does not change if the state of the 
		 corresponding form control, in an interactive user agent, changes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:defaultValue:get"><apiName>defaultValue</apiName><shortdesc>
		 When the type attribute of the element has the value "text", "file" or "password", this 
		 represents the HTML value attribute of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 When the type attribute of the element has the value "text", "file" or "password", this 
		 represents the HTML value attribute of the element. The value of this attribute does not 
		 change if the contents of the corresponding form control, in an interactive user 
		 agent, changes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not 
		 within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:maxLength:get"><apiName>maxLength</apiName><shortdesc>
		 Maximum number of characters for text fields, when type has the value "text" or "password".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Maximum number of characters for text fields, when type has the value "text" or "password".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onchange:get"><apiName>onchange</apiName><shortdesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onselect:get"><apiName>onselect</apiName><shortdesc>
		 The onselect event occurs when a user selects some text in a text field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onselect event occurs when a user selects some text in a text field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:readOnly:get"><apiName>readOnly</apiName><shortdesc>
		 This control is read-only.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 This control is read-only. Relevant only when type has the value "text" or "password".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:size:get"><apiName>size</apiName><shortdesc>
		 Size information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Size information. The precise meaning is specific to each type of field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:src:get"><apiName>src</apiName><shortdesc>
		 When the type attribute has the value "image", this attribute specifies the 
		 location of the image to be used to decorate the graphical submit button.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 When the type attribute has the value "image", this attribute specifies the 
		 location of the image to be used to decorate the graphical submit button.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of control created (all lower case).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of control created (all lower case).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:useMap:get"><apiName>useMap</apiName><shortdesc>
		 Use client-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Use client-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:value:get"><apiName>value</apiName><shortdesc>
		 When the type attribute of the element has the value "text", "file" or 
		 "password", this represents the current contents of the corresponding form 
		 control, in an interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 When the type attribute of the element has the value "text", "file" or 
		 "password", this represents the current contents of the corresponding form 
		 control, in an interactive user agent. Changing this attribute changes the 
		 contents of the form control, but does not change the value of the HTML 
		 value attribute of the element. When the type attribute of the element has 
		 the value "button", "hidden", "submit", "reset", "image", "checkbox" or 
		 "radio", this represents the HTML value attribute of the element.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBodyElement"><apiName>HTMLBodyElement</apiName><shortdesc>
	 The HTML document body.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The HTML document body. This element is always present in the DOM 
	 API, even if the tags are not present in the source document.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBodyElement:aLink:get"><apiName>aLink</apiName><shortdesc>
		 Color of active links (after mouse-button down, but before 
		 mouse-button up).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Color of active links (after mouse-button down, but before 
		 mouse-button up). This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:background:get"><apiName>background</apiName><shortdesc>
		 URI of the background texture tile image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI of the background texture tile image. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Document background color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Document background color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:link:get"><apiName>link</apiName><shortdesc>
		 Color of links that are not active and unvisited.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Color of links that are not active and unvisited. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:onload:get"><apiName>onload</apiName><shortdesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:onoffline:get"><apiName>onoffline</apiName><shortdesc>
		 WHATWG Web Applications 1.0 specification | Firefox 3+ 
		 
		 Returns the event handling code for the offline event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>WHATWG Web Applications 1.0 specification | Firefox 3+</b> 
		 
		 Returns the event handling code for the offline event.
		 
		 <p>Note: The events bubble up from document.body, to document, ending at window. Both events are 
		 non-cancellable (you can't prevent the user from coming online, or going offline).</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:ononline:get"><apiName>ononline</apiName><shortdesc>
		 WHATWG Web Applications 1.0 specification | Firefox 3+ 
		 
		 Returns the event handling code for the online event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>WHATWG Web Applications 1.0 specification | Firefox 3+</b> 
		 
		 Returns the event handling code for the online event.
		 
		 <p>Note: The events bubble up from document.body, to document, ending at window. Both events are 
		 non-cancellable (you can't prevent the user from coming online, or going offline).</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:onunload:get"><apiName>onunload</apiName><shortdesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:text:get"><apiName>text</apiName><shortdesc>
		 Document text color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Document text color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:vLink:get"><apiName>vLink</apiName><shortdesc>
		 Color of links that have been visited by the user.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Color of links that have been visited by the user. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFontElement"><apiName>HTMLFontElement</apiName><shortdesc>
	 Local change to font.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Local change to font. This element is deprecated in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFontElement:color:get"><apiName>color</apiName><shortdesc>
		 Font color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFontElement:face:get"><apiName>face</apiName><shortdesc>
		 Font face identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font face identifier. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFontElement:size:get"><apiName>size</apiName><shortdesc>
		 Computed font size.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Computed font size. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLIFrameElement"><apiName>HTMLIFrameElement</apiName><shortdesc>
	 Inline subwindows.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Inline subwindows.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLIFrameElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:frameBorder:get"><apiName>frameBorder</apiName><shortdesc>
		 Request frame borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Request frame borders.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:height:get"><apiName>height</apiName><shortdesc>
		 Frame height.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame height.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:longDesc:get"><apiName>longDesc</apiName><shortdesc>
		 URI designating a long description of this image or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a long description of this image or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:marginHeight:get"><apiName>marginHeight</apiName><shortdesc>
		 Frame margin height, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin height, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:marginWidth:get"><apiName>marginWidth</apiName><shortdesc>
		 Frame margin width, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin width, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:name:get"><apiName>name</apiName><shortdesc>
		 The frame name (object of the target attribute).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The frame name (object of the target attribute).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:scrolling:get"><apiName>scrolling</apiName><shortdesc>
		 Specify whether or not the frame should have scrollbars.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specify whether or not the frame should have scrollbars. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:src:get"><apiName>src</apiName><shortdesc>
		 A URI designating the initial frame contents.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating the initial frame contents.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:width:get"><apiName>width</apiName><shortdesc>
		 Frame width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLObjectElement"><apiName>HTMLObjectElement</apiName><shortdesc>
	 Generic embedded object.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Generic embedded object.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLObjectElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:archive:get"><apiName>archive</apiName><shortdesc>
		 Space-separated list of archives.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Space-separated list of archives.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:border:get"><apiName>border</apiName><shortdesc>
		 Width of border around the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Width of border around the object. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:code:get"><apiName>code</apiName><shortdesc>
		 Applet class file.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Applet class file.
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.html.xml#HTMLAppletElement/code"><linktext>HTMLAppletElement.code</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLObjectElement:codeBase:get"><apiName>codeBase</apiName><shortdesc>
		 Base URI for classid, data, and archive attributes.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Base URI for classid, data, and archive attributes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:codeType:get"><apiName>codeType</apiName><shortdesc>
		 Content type for data downloaded via classid attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Content type for data downloaded via classid attribute.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc>
		 DOM Level 2
		 
		 The document this object contains, if there is any and it is available, or null otherwise.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 DOM Level 2
		 
		 The document this object contains, if there is any and it is available, or null otherwise.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:data:get"><apiName>data</apiName><shortdesc>
		 A URI [IETF RFC 2396] specifying the location of the object's data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI [IETF RFC 2396] specifying the location of the object's data.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:declare:get"><apiName>declare</apiName><shortdesc>
		 Declare (for future reference), but do not instantiate, this object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Declare (for future reference), but do not instantiate, this object.
		 
		 <p>When present, this boolean attribute makes the current OBJECT definition 
		 a declaration only. The object must be instantiated by a subsequent OBJECT 
		 definition referring to this declaration.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:height:get"><apiName>height</apiName><shortdesc>
		 Override height.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override height.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:hspace:get"><apiName>hspace</apiName><shortdesc>
		 Horizontal space, in pixels, to the left and right of this image, applet, or object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Horizontal space, in pixels, to the left and right of this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:standby:get"><apiName>standby</apiName><shortdesc>
		 Message to render while loading the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Message to render while loading the object.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:type:get"><apiName>type</apiName><shortdesc>
		 Content type for data downloaded via data attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Content type for data downloaded via data attribute.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:useMap:get"><apiName>useMap</apiName><shortdesc>
		 Use client-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Use client-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:vspace:get"><apiName>vspace</apiName><shortdesc>
		 Vertical space, in pixels, above and below this image, applet, or object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Vertical space, in pixels, above and below this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:width:get"><apiName>width</apiName><shortdesc>
		 Override width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLMetaElement"><apiName>HTMLMetaElement</apiName><shortdesc>
	 This contains generic meta-information about the document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This contains generic meta-information about the document. See the META element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLMetaElement:content:get"><apiName>content</apiName><shortdesc>
		 Associated information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Associated information. See the content attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMetaElement:httpEquiv:get"><apiName>httpEquiv</apiName><shortdesc>
		 HTTP response header name [IETF RFC 2616].</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 HTTP response header name [IETF RFC 2616]. See the http-equiv attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMetaElement:name:get"><apiName>name</apiName><shortdesc>
		 Meta information name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Meta information name. See the name attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMetaElement:scheme:get"><apiName>scheme</apiName><shortdesc>
		 Select form of content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Select form of content. See the scheme attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLAppletElement"><apiName>HTMLAppletElement</apiName><shortdesc>
	 An embedded Java applet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
	 </as-of></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An embedded Java applet. This element is deprecated in HTML 4.01.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLAppletElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:archive:get"><apiName>archive</apiName><shortdesc>
		 Comma-separated archive list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Comma-separated archive list. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:code:get"><apiName>code</apiName><shortdesc>
		 Applet class file.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Applet class file. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:codeBase:get"><apiName>codeBase</apiName><shortdesc>
		 Optional base URI for applet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Optional base URI for applet. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:height:get"><apiName>height</apiName><shortdesc>
		 Override height.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override height. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:hspace:get"><apiName>hspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Horizontal space, in pixels, to the left and right of this image, applet, or object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Horizontal space, in pixels, to the left and right of this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:name:get"><apiName>name</apiName><shortdesc>
		 The name of the applet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the applet. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:object:get"><apiName>object</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The value of the "object" attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The value of the "object" attribute. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:vspace:get"><apiName>vspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Vertical space, in pixels, above and below this image, applet, or object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Vertical space, in pixels, above and below this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:width:get"><apiName>width</apiName><shortdesc>
		 Override width.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override width. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableElement"><apiName>HTMLTableElement</apiName><shortdesc>
	 The createand deletemethods on the table allow authors to construct 
	 and modify tables.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The createand deletemethods on the table allow authors to construct 
	 and modify tables. [HTML 4.01] specifies that only one of each of the 
	 CAPTION, THEAD, and TFOOT elements may exist in a table. Therefore, if 
	 one exists, and the createTHead() or createTFoot() method is called, 
	 the method returns the existing THead or TFoot element.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableElement:align:get"><apiName>align</apiName><shortdesc>
		 Specifies the table's position with respect to the rest of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the table's position with respect to the rest of the document. 
		 This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>left: The table is to the left of the document.</li>
		 <li>center: The table is to the center of the document.</li>
		 <li>right: The table is to the right of the document.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Cell background color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell background color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:border:get"><apiName>border</apiName><shortdesc>
		 The width of the border around the table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The width of the border around the table.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:caption:get"><apiName>caption</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Returns the table's CAPTION, or void if none exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLTableCaptionElement</apiValueClassifier><apiException><apiDesc>HIERARCHY_REQUEST_ERR: if the element is not a CAPTION. 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Returns the table's CAPTION, or void if none exists.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:cellPadding:get"><apiName>cellPadding</apiName><shortdesc>
		 Specifies the horizontal and vertical space between cell content and cell borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the horizontal and vertical space between cell content and cell borders.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:cellSpacing:get"><apiName>cellSpacing</apiName><shortdesc>
		 Specifies the horizontal and vertical separation between cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the horizontal and vertical separation between cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:frame:get"><apiName>frame</apiName><shortdesc>
		 Specifies which external table borders to render.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies which external table borders to render.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:rows:get"><apiName>rows</apiName><shortdesc>
		 Returns a collection of all the rows in the table, including all in THEAD, TFOOT, all TBODY elements.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a collection of all the rows in the table, including all in THEAD, TFOOT, all TBODY elements.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:rules:get"><apiName>rules</apiName><shortdesc>
		 Specifies which internal table borders to render.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies which internal table borders to render.
		 <p>Valid values are: 
		 <ul>
		 <li>none: No rules. This is the default value.</li>
		 <li>groups: Rules will appear between row groups (see THEAD, TFOOT, and TBODY) and column groups (see COLGROUP and COL) only.</li>
		 <li>rows: Rules will appear between rows only.</li>
		 <li>cols: Rules will appear between columns only.</li>
		 <li>all: Rules will appear between all rows and columns.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:summary:get"><apiName>summary</apiName><shortdesc>
		 Description about the purpose or structure of a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Description about the purpose or structure of a table.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:tBodies:get"><apiName>tBodies</apiName><shortdesc>
		 Returns a collection of the table bodies (including implicit ones).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a collection of the table bodies (including implicit ones).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:tFoot:get"><apiName>tFoot</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Returns the table's TFOOT, or null if none exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLTableSectionElement</apiValueClassifier><apiException><apiDesc>HIERARCHY_REQUEST_ERR: if the element is not a TFOOT. 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Returns the table's TFOOT, or null if none exists.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:tHead:get"><apiName>tHead</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Returns the table's THEAD, or null if none exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLTableSectionElement</apiValueClassifier><apiException><apiDesc>HIERARCHY_REQUEST_ERR: if the element is not a THEAD. 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Returns the table's THEAD, or null if none exists.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:width:get"><apiName>width</apiName><shortdesc>
		 Specifies the desired table width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the desired table width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLPreElement"><apiName>HTMLPreElement</apiName><shortdesc>
	 Preformatted text.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Preformatted text.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLPreElement:width:get"><apiName>width</apiName><shortdesc>
		 Fixed width for content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Fixed width for content. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableCaptionElement"><apiName>HTMLTableCaptionElement</apiName><shortdesc>
	 Table caption.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Table caption.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableCaptionElement:align:get"><apiName>align</apiName><shortdesc>
		 Caption alignment with respect to the table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Caption alignment with respect to the table.
		 
		 <p>Valid values are: 
		 <ul>
		 <li>top: The caption is at the top of the table. This is the default value.</li>
		 <li>bottom: The caption is at the bottom of the table.</li>
		 <li>left: The caption is at the left of the table.</li>
		 <li>right: The caption is at the right of the table.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFrameSetElement"><apiName>HTMLFrameSetElement</apiName><shortdesc>
	 Create a grid of frames.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Create a grid of frames.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFrameSetElement:cols:get"><apiName>cols</apiName><shortdesc>
		 The number of columns of frames in the frameset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The number of columns of frames in the frameset.
		 
		 <p>It is a comma-separated list of pixels, percentages, and 
		 relative lengths. The default value is 100%, meaning one column.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameSetElement:onload:get"><apiName>onload</apiName><shortdesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameSetElement:onunload:get"><apiName>onunload</apiName><shortdesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameSetElement:rows:get"><apiName>rows</apiName><shortdesc>
		 The number of rows of frames in the frameset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The number of rows of frames in the frameset.
		 
		 <p>It is a comma-separated list of pixels, percentages, and 
		 relative lengths. The default value is 100%, meaning one column.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableRowElement"><apiName>HTMLTableRowElement</apiName><shortdesc>
	 A row in a table.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A row in a table.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableRowElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of data within cells of this row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of data within cells of this row.
		 <p>Valid values are: 
		 <ul>
		 <li>left: The table is to the left of the document.</li>
		 <li>center: The table is to the center of the document.</li>
		 <li>right: The table is to the right of the document.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Background color for rows.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Background color for rows. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:cells:get"><apiName>cells</apiName><shortdesc>
		  Modified in DOM Level 2
		 
		 The collection of cells in this row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		  Modified in DOM Level 2
		 
		 The collection of cells in this row.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:rowIndex:get"><apiName>rowIndex</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 This is in logical order and not in document order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 This is in logical order and not in document order. The rowIndex does take into 
		 account sections (THEAD, TFOOT, or TBODY) within the table, placing THEAD rows 
		 first in the index, followed by TBODY rows, followed by TFOOT rows.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:sectionRowIndex:get"><apiName>sectionRowIndex</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The index of this row, relative to the current section (THEAD, TFOOT, or TBODY), starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The index of this row, relative to the current section (THEAD, TFOOT, or TBODY), starting from 0.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:vAlign:get"><apiName>vAlign</apiName><shortdesc>
		 Vertical alignment of data within cells of this row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Vertical alignment of data within cells of this row.
		 <p>Valid values are: 
		 <ul>
		 <li>top: Cell data is flush with the top of the cell.</li>
		 <li>middle: Cell data is centered vertically within the cell. This is the default value.</li>
		 <li>bottom: Cell data is flush with the bottom of the cell.</li>
		 <li>baseline: All cells in the same row as a cell whose valign attribute has this value should have their textual data positioned so that the first text line occurs on a baseline common to all cells in the row. This constraint does not apply to subsequent text lines in these cells.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLDListElement"><apiName>HTMLDListElement</apiName><shortdesc>
	 Definition list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Definition list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDListElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLUListElement"><apiName>HTMLUListElement</apiName><shortdesc>
	 Unordered list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Unordered list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLUListElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLUListElement:type:get"><apiName>type</apiName><shortdesc>
		 Bullet style.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Bullet style. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLStyleElement"><apiName>HTMLStyleElement</apiName><shortdesc>
	 Style information.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Style information. See the STYLE element definition in HTML 4.01, the CSS 
	 module [DOM Level 2 Style Sheets and CSS] and the LinkStyle interface in 
	 the StyleSheets module [DOM Level 2 Style Sheets and CSS].
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLStyleElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 Enables/disables the style sheet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Enables/disables the style sheet.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLStyleElement:media:get"><apiName>media</apiName><shortdesc>
		 Designed for use with one or more target media.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Designed for use with one or more target media. See the media attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLStyleElement:type:get"><apiName>type</apiName><shortdesc>
		 The content type of the style sheet language.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The content type of the style sheet language. See the type attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="dom.loadsave.types"><apiName>dom.loadsave.types</apiName><apiClassifier id="dom.loadsave.types:LSOutputStream"><apiName>LSOutputStream</apiName><shortdesc>
	 A LSOutputStream represents a byte stream destination for the XML output.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A LSOutputStream represents a byte stream destination for the XML output. 
	 
	 <p><b>Note:</b> For Java, LSInputStream is bound to the java.io.InputStream 
	 type. For ECMAScript, LSInputStream is bound to Object.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.loadsave.types:LSWriter"><apiName>LSWriter</apiName><shortdesc>
	 A LSWriter represents a character stream for the XML output.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A LSWriter represents a character stream for the XML output. 
	 
	 <p><b>Note:</b> For Java, LSInputStream is bound to the java.io.InputStream 
	 type. For ECMAScript, LSInputStream is bound to Object.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.loadsave.types:LSInputStream"><apiName>LSInputStream</apiName><shortdesc>
	 A LSInputStream represents a reference to a byte stream source of an XML input.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A LSInputStream represents a reference to a byte stream source of an XML input. 
	 
	 <p><b>Note:</b> For Java, LSInputStream is bound to the java.io.InputStream 
	 type. For ECMAScript, LSInputStream is bound to Object.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.loadsave.types:LSReader"><apiName>LSReader</apiName><shortdesc>
	 A LSReader represents a character stream for the XML input.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A LSReader represents a character stream for the XML input. 
	 
	 <p><b>Note:</b> For Java, LSInputStream is bound to the java.io.InputStream 
	 type. For ECMAScript, LSInputStream is bound to Object.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="dom.loadsave"><apiName>dom.loadsave</apiName><apiClassifier id="dom.loadsave:LSExceptionCode"><apiName>LSExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:LSExceptionCode:PARSE_ERR"><apiName>PARSE_ERR</apiName><shortdesc>
		 If an attempt was made to load a document, or an XML Fragment, using LSParser and the processing has been stopped.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>81</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt was made to load a document, or an XML Fragment, using LSParser and the processing has been stopped. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#PARSE_ERR"><linktext>W3C - LSExceptionCode.PARSE_ERR</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSExceptionCode:SERIALIZE_ERR"><apiName>SERIALIZE_ERR</apiName><shortdesc>
		 If an attempt was made to serialize a Node using LSSerializer and the processing has been stopped.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>82</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt was made to serialize a Node using LSSerializer and the processing has been stopped. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#SERIALIZE_ERR"><linktext>W3C - LSExceptionCode.SERIALIZE_ERR</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSInput"><apiName>LSInput</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:baseURI:get"><apiName>baseURI</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-baseURI"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-baseURI</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:byteStream:get"><apiName>byteStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave.types:LSInputStream</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-byteStream"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-byteStream</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:certifiedText:get"><apiName>certifiedText</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-certifiedText"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-certifiedText</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:characterStream:get"><apiName>characterStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave.types:LSReader</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-characterStream"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-characterStream</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:encoding:get"><apiName>encoding</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-encoding"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-encoding</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:publicId:get"><apiName>publicId</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-publicId"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-publicId</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:stringData:get"><apiName>stringData</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-stringData"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-stringData</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:systemId:get"><apiName>systemId</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-systemId"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-systemId</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:DocumentLS"><apiName>DocumentLS</apiName><shortdesc>
	 The DocumentLS interface provides a mechanism by which the content of a document can be replaced with the 
	 DOM tree produced when loading a URI, or parsing a string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentLS interface provides a mechanism by which the content of a document can be replaced with the 
	 DOM tree produced when loading a URI, or parsing a string. The expectation is that an instance of the 
	 DocumentLS interface can be obtained by using binding-specific casting methods on an instance of the 
	 Document interface.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:DocumentLS:dom.loadsave:DocumentLS:async:get"><apiName>async</apiName><shortdesc>
		 Indicates whether the method load should be synchronous or asynchronous.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the implementation doesn't support the mode the attribute is being set to.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>false
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Indicates whether the method load should be synchronous or asynchronous. When the async attribute is set 
		 to true the load method returns control to the caller before the document has completed loading.
		 
		 </apiDesc><example>
		 <codeblock>
		 function loadXMLData(e) {
		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string
		 }
		 
		 var xmlDoc = document.implementation.createDocument("", "test", null);
		 xmlDoc.async = false;
		 xmlDoc.onload = loadXMLData;
		 xmlDoc.load('querydata.xml');</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.async"><linktext>MDC - Document.async</linktext></link><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-async"><linktext>W3C - DocumentLS.async</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSLoadEvent"><apiName>LSLoadEvent</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:LSLoadEvent:input:get"><apiName>input</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.loadsave:LSInput</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-input"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-input</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSLoadEvent:newDocument:get"><apiName>newDocument</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-document"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-document</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSSerializer"><apiName>LSSerializer</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:LSSerializer:dom.loadsave:LSSerializer:domConfig:get"><apiName>domConfig</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMConfiguration</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-config"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-config</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSSerializer:dom.loadsave:LSSerializer:filter:get"><apiName>filter</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave:LSSerializerFilter</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-LSSerializerFilter"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-LSSerializerFilter</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSSerializer:dom.loadsave:LSSerializer:newLine:get"><apiName>newLine</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-newLine"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-newLine</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSOutput"><apiName>LSOutput</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:LSOutput:dom.loadsave:LSOutput:byteStream:get"><apiName>byteStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave.types:LSInputStream</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-byteStream"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-byteStream</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSOutput:dom.loadsave:LSOutput:characterStream:get"><apiName>characterStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave.types:LSReader</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-characterStream"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-characterStream</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSOutput:dom.loadsave:LSOutput:encoding:get"><apiName>encoding</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-encoding"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-encoding</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSOutput:dom.loadsave:LSOutput:systemId:get"><apiName>systemId</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-systemId"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-systemId</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:DOMImplementationLS"><apiName>DOMImplementationLS</apiName><shortdesc>
	 DOMImplementationLS contains the factory methods for creating Load and Save objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 DOMImplementationLS contains the factory methods for creating Load and Save objects. 
	 
	 The expectation is that an instance of the DOMImplementationLS interface can be obtained by using 
	 binding-specific casting methods on an instance of the DOMImplementation interface or, if the Document 
	 supports the feature "Core"  version "3.0" defined in DOM Level 3 Core, by using the method 
	 DOMImplementation.getFeature with parameter values "LS" (or "LS-Async") and "3.0" (respectively). 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.loadsave:LSParser"><apiName>LSParser</apiName><shortdesc>
	 An interface to an object that is able to build, or augment, a DOM tree from various input sources.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An interface to an object that is able to build, or augment, a DOM tree from various input sources. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:LSParser:ACTION_APPEND_AS_CHILDREN"><apiName>ACTION_APPEND_AS_CHILDREN</apiName><shortdesc>
		 Append the result of the parse operation as children of the context node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Append the result of the parse operation as children of the context node. For this action to work, 
		 the context node must be an Element or a DocumentFragment. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_APPEND_AS_CHILDREN"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_APPEND_AS_CHILDREN</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:ACTION_INSERT_AFTER"><apiName>ACTION_INSERT_AFTER</apiName><shortdesc>
		 Insert the result of the parse operation as the immediately following sibling of the context node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Insert the result of the parse operation as the immediately following sibling of the context node. 
		 For this action to work the context node's parent must be an Element or a DocumentFragment. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_AFTER"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_AFTER</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:ACTION_INSERT_BEFORE"><apiName>ACTION_INSERT_BEFORE</apiName><shortdesc>
		 Insert the result of the parse operation as the immediately preceding sibling of the context node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Insert the result of the parse operation as the immediately preceding sibling of the context node. 
		 For this action to work the context node's parent must be an Element or a DocumentFragment.  
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_BEFORE"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_BEFORE</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:ACTION_REPLACE"><apiName>ACTION_REPLACE</apiName><shortdesc>
		 Replace the context node with the result of the parse operation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Replace the context node with the result of the parse operation. For this action to work, the 
		 context node must have a parent, and the parent must be an Element or a DocumentFragment.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:ACTION_REPLACE_CHILDREN"><apiName>ACTION_REPLACE_CHILDREN</apiName><shortdesc>
		 Replace all the children of the context node with the result of the parse operation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Replace all the children of the context node with the result of the parse operation. For this 
		 action to work, the context node must be an Element, a Document, or a DocumentFragment. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE_CHILDREN"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE_CHILDREN</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:async:get"><apiName>async</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-async"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-async</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:busy:get"><apiName>busy</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-busy"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-busy</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:domConfig:get"><apiName>domConfig</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMConfiguration</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-config"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-config</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:filter:get"><apiName>filter</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.loadsave:LSParserFilter</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-filter"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-filter</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:DOMImplementationLSMode"><apiName>DOMImplementationLSMode</apiName><shortdesc>
	 Integer parser mode constants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Integer parser mode constants.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:DOMImplementationLSMode:MODE_ASYNCHRONOUS"><apiName>MODE_ASYNCHRONOUS</apiName><shortdesc>
		 Create an asynchronous LSParser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Create an asynchronous LSParser.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-MODE_ASYNCH"><linktext>W3C - DOMImplementationLSMode.MODE_ASYNCHRONOUS</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:DOMImplementationLSMode:MODE_SYNCHRONOUS"><apiName>MODE_SYNCHRONOUS</apiName><shortdesc>
		 Create a synchronous LSParser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Create a synchronous LSParser.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-MODE_SYNC"><linktext>W3C - DOMImplementationLSMode.MODE_SYNCHRONOUS</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSSerializerFilter"><apiName>LSSerializerFilter</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.tr.traversal:NodeFilter</apiBaseClassifier></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:LSSerializerFilter:whatToShow:get"><apiName>whatToShow</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializerFilter-whatToShow"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializerFilter-whatToShow</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSResourceResolver"><apiName>LSResourceResolver</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.loadsave:LSParserFilter"><apiName>LSParserFilter</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:LSParserFilter:FILTER_ACCEPT"><apiName>FILTER_ACCEPT</apiName><shortdesc>
		 Accept the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Accept the node.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_ACCEPT"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_ACCEPT</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParserFilter:FILTER_INTERRUPT"><apiName>FILTER_INTERRUPT</apiName><shortdesc>
		 Interrupt the normal processing of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Interrupt the normal processing of the document. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_INTERRUPT"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_INTERRUPT</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParserFilter:FILTER_REJECT"><apiName>FILTER_REJECT</apiName><shortdesc>
		 Reject the node and its children.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Reject the node and its children.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_REJECT"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_REJECT</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParserFilter:FILTER_SKIP"><apiName>FILTER_SKIP</apiName><shortdesc>
		 Skip this single node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Skip this single node. The children of this node will still be considered. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_SKIP"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_SKIP</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParserFilter:whatToShow:get"><apiName>whatToShow</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-whatToShow"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-whatToShow</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSProgressEvent"><apiName>LSProgressEvent</apiName><shortdesc>
	 This interface represents a progress event object that notifies the application about progress as a document is parsed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This interface represents a progress event object that notifies the application about progress as a document is parsed.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.loadsave:LSProgressEvent:input:get"><apiName>input</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.loadsave:LSInput</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-input"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-input</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSProgressEvent:position:get"><apiName>position</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-position"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-position</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSProgressEvent:totalSize:get"><apiName>totalSize</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-totalSize"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-totalSize</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.objects"><apiName>dom.objects</apiName><apiClassifier id="dom.objects:NavigatorOnLine"><apiName>NavigatorOnLine</apiName><shortdesc>
	 Objects implementing the Navigator interface must also implement the NavigatorOnLine interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the Navigator interface must also implement the NavigatorOnLine interface. This interface is defined separately so 
	 that other specifications can re-use parts of the Navigator interface.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:NavigatorOnLine:dom.objects:NavigatorOnLine:onLine:get"><apiName>onLine</apiName><shortdesc>
		 Returns a boolean indicating whether the browser is working online.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether the browser is working online. 
		 
		 <p><b>Note (IE):</b>  In Windows Internet Explorer 8 and later, the onLine property returns true if both of the 
		 following conditions are true: 
		 <ul>
		 <li>the system is able to communicate with the network</li>
		 <li>the system is not in global offline mode (Users can modify the global offline state by choosing Work Offline on the File menu.)</li>
		 </ul>
		 If either of these conditions is false, the onLine property returns false.
		 </p>
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 4.0 through Internet Explorer 7, the onLine property indicates whether the 
		 system is in global offline mode. It does not indicate whether the system can communicate with the network.</p>
		 
		 </apiDesc><example>
		 <codeblock>alert(navigator.onLine ? "You're online" : "You're offline");</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534307%28VS.85%29.aspx"><linktext>MSDN - onLine Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.navigator.onLine"><linktext>MDC - window.navigator.onLine</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:MessagePortArray"><apiName>MessagePortArray</apiName><shortdesc>
	 A typed array containing only MessagePorts
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A typed array containing only MessagePorts
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.objects:MimeType"><apiName>MimeType</apiName><shortdesc>
	 A MIME type (Multipart Internet Mail Extension) supported by the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A MIME type (Multipart Internet Mail Extension) supported by the client.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:MimeType:description:get"><apiName>description</apiName><shortdesc>
		 A description of the MIME type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A description of the MIME type.
		 
		 </apiDesc><example><codeblock>"Adobe Flash movie"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue><apiValue id="dom.objects:MimeType:enabledPlugin:get"><apiName>enabledPlugin</apiName><shortdesc>
		 Reference to the Plugin object configured for the MIME type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Plugin</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the Plugin object configured for the MIME type.
		 
		 </apiDesc><example>
		 <codeblock>
		 // Can we display Shockwave movies?
		 var mimetype = navigator.mimeTypes["application/x-director"];
		 if (mimetype) {
		 	// Yes, so can we display with a plug-in?
		 	var plugin = mimetype.enabledPlugin;
		 	if (plugin) {
		 		// Yes, so show the data in-line
		 		document.writeln("Here's a movie: &lt;EMBED SRC=mymovie.dir HEIGHT=100 WIDTH=100&gt;");
		 	} else {
		 		// No, so provide a link to the data
		 		document.writeln("&lt;A HREF='mymovie.dir'&gt;Click here&lt;/A&gt; to see a movie.");
		 	}
		 } else {
		 	// No, so tell them so
		 	document.writeln("Sorry, can't show you this cool movie.");
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue><apiValue id="dom.objects:MimeType:suffixes:get"><apiName>suffixes</apiName><shortdesc>
		 A string listing possible filename extensions for the MIME type, for example "mpeg, mpg, mpe, mpv, vbs, mpegv".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A string listing possible filename extensions for the MIME type, for example "mpeg, mpg, mpe, mpv, vbs, mpegv".
		 
		 </apiDesc><example><codeblock>"swf"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue><apiValue id="dom.objects:MimeType:type:get"><apiName>type</apiName><shortdesc>
		 The name of the MIME type, for example "video/mpeg" or "audio/x-wav".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the MIME type, for example "video/mpeg" or "audio/x-wav".
		 
		 </apiDesc><example><codeblock>"application/x-shockwave-flash"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:Location"><apiName>Location</apiName><shortdesc>
	 Contains information about the URL of the document and provides methods for changing that URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains information about the URL of the document and provides methods for changing that URL.
	 
	 </apiDesc><example>
	 Replace the current document with the one at the given URL: 
	 <codeblock>
	 function goMoz() {
	 	window.location = "http://www.mozilla.org";
	 } 
	 
	 // in html: &lt;button onclick="goMoz();"&gt;Mozilla&lt;/button&gt;</codeblock>
	 
	 </example></apiClassifierDetail><apiValue id="dom.objects:Location:hash:get"><apiName>hash</apiName><shortdesc>
		 The part of the URL that follows the # symbol, including the # symbol.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The part of the URL that follows the # symbol, including the # symbol.
		 
		 <p><b>Note:</b> If there is no number sign, this property returns an empty string.</p>
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>hash: <codeph>#test</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533775%28VS.85%29.aspx"><linktext>MSDN - hash Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:host:get"><apiName>host</apiName><shortdesc>
		 The host name (without the port number or square brackets).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The host name (without the port number or square brackets).
		 
		 <p><b>Note:</b> The host property is the concatenation of the hostname and port properties, separated by a colon (hostname:port). When the port property is null, the host property is the same as the hostname property. </p>
		 
		 <p><b>Note:</b> The host property may be set at any time, although it is safer to set the href property to change a location. If the specified host cannot be found, an error is returned. </p>
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>host: <codeph>[www.google.com]:80</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533784%28VS.85%29.aspx"><linktext>MSDN - host Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:hostname:get"><apiName>hostname</apiName><shortdesc>
		 This attribute represents the name or IP address of the network location without any port number.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute represents the name or IP address of the network location without any port number.
		 
		 <p><b>Note:</b> If no host name is available, this property returns an empty string. </p>
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>hostname: <codeph>www.google.com</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533785%28VS.85%29.aspx"><linktext>MSDN - hostname Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:href:get"><apiName>href</apiName><shortdesc>
		 Sets or retrieves the entire URL as a string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves the entire URL as a string.
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>href: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph></p>
		 
		 <p>This example shows a URL list. The user is taken to the URL selected from the options, if the selection is different from the list's default value.</p>
		 <codeblock>
		 &lt;SELECT onchange="window.location.href=this.options[this.selectedIndex].value"&gt;
		 	&lt;OPTION VALUE="http://www.microsoft.com/ie"&gt;Internet Explorer&lt;/OPTION&gt;
		 	&lt;OPTION VALUE="http://www.microsoft.com"&gt;Microsoft Home&lt;/OPTION&gt;
		 	&lt;OPTION VALUE="http://msdn.microsoft.com"&gt;Developer Network&lt;/OPTION&gt;
		 &lt;/SELECT&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533867%28VS.85%29.aspx"><linktext>MSDN - href Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:pathname:get"><apiName>pathname</apiName><shortdesc>
		 The path (relative to the host).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The path (relative to the host).
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>pathname: <codeph>/search</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534332%28VS.85%29.aspx"><linktext>MSDN - pathname Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:port:get"><apiName>port</apiName><shortdesc>
		 This attribute represents the port number of the network location.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute represents the port number of the network location.
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>port: <codeph>80</codeph></p>
		 
		 <p>This example function returns the port property of two <codeph>a</codeph> elements.</p>
		 <codeblock>
		 &lt;script&gt;
		 function getPort() {
		 	alert ("FTP: " + oFtp.port + "\n" + "HTTP: " + oHttp.port);
		 }
		 &lt;/script&gt;
		 
		 &lt;a href="ftp://www.microsoft.com" onclick="getPort();" id=oFtp&gt;ftp&lt;/a&gt;
		 &lt;a href="http://www.microsoft.com" onclick="getPort();" id=oHttp&gt;http&lt;/a&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534342%28VS.85%29.aspx"><linktext>MDC - port Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:protocol:get"><apiName>protocol</apiName><shortdesc>
		 This attribute represents the scheme of the URI including the trailing colon (:).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute represents the scheme of the URI including the trailing colon (:).
		 
		 <p><b>Note (IE):</b> The protocol property specifies how to transfer information from the host to the client. Windows Internet Explorer supports several predefined protocols, including http and ftp.</p>
		 
		 <p><b>Note (IE):</b> The document, img, and location objects expose the protocol property as read-only.
		 location.protocol property returns the initial substring of a URL, including the first colon (for example, http:).
		 However, document.protocol returns the expanded text of the protocol acronym. For example, it returns the http 
		 protocol as Hypertext Transfer Protocol.</p>
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>protocol: <codeph>http:</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534353%28VS.85%29.aspx"><linktext>MSDN - protocol Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:search:get"><apiName>search</apiName><shortdesc>
		 The part of the URL that follows the ? symbol, including the ? symbol.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The part of the URL that follows the ? symbol, including the ? symbol.
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>search: <codeph>?q=devmo</codeph></p>
		 
		 <p>Send a string of data to the server by modifying the search property: </p>
		 <codeblock>
		 function sendData(dat) {
		 	window.location.search = dat;
		 }
		 
		 // in html: &lt;button onclick="sendData('Some data');"&gt;Send data&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534620%28VS.85%29.aspx"><linktext>MSDN - search Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:NavigatorID"><apiName>NavigatorID</apiName><shortdesc>
	 Objects implementing the Navigator interface must also implement the NavigatorID interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the Navigator interface must also implement the NavigatorID interface. This interface is defined separately so 
	 that other specifications can re-use parts of the Navigator interface.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:NavigatorID:dom.objects:NavigatorID:appName:get"><apiName>appName</apiName><shortdesc>
		 Returns the official name of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the official name of the browser. 
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(window.navigator.appName);
		 // prints "Navigator" to the console for NS6</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533079%28VS.85%29.aspx"><linktext>MSDN - appName Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appName"><linktext>MDC - window.navigator.appName</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:NavigatorID:dom.objects:NavigatorID:appVersion:get"><apiName>appVersion</apiName><shortdesc>
		 Returns the version of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the version of the browser.
		 
		 <p><b>Note:</b> The window.navigator.userAgent property also contains the version number 
		 (example: "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape 6/6.1"), but you 
		 should be aware of how easy it is to change the user agent string and "spoof" other browsers, platforms, 
		 or user agents, and also how cavalier the browser vendor themselves are with these properties. 
		 The window.navigator.appVersion and window.navigator.userAgent properties are quite often used in 
		 "browser sniffing" code: scripts that attempt to find out what kind of browser you are using and 
		 adjust pages accordingly.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( navigator.appVersion.charAt(0) == "5" ) { 
		 	// browser is putatively a v5 browser
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533080%28VS.85%29.aspx"><linktext>MSDN - appVersion Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appVersion"><linktext>MDC - window.navigator.appVersion</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:NavigatorID:dom.objects:NavigatorID:platform:get"><apiName>platform</apiName><shortdesc>
		 Returns a string representing the platform of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representing the platform of the browser.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Platform Code</entry><entry>Platform Name</entry></row></thead><tbody><row>
		 		<entry>HP-UX</entry><entry><codeph>HP UNIX-based computers.</codeph></entry>
		 	</row><row>
		 		<entry>MacPPC</entry><entry>Macintosh PowerPC-based computers.</entry>
		 	</row><row>
		 		<entry>Mac68K</entry><entry>Macintosh 68K-based computers.</entry>
		 	</row><row>
		 		<entry>MacIntel</entry><entry>Macintosh Intel-based computers.</entry>
		 	</row><row>
		 		<entry>Win32</entry><entry><codeph>Microsoft Windows 32-bit platform.</codeph></entry>
		 	</row><row>
		 		<entry>Win16</entry><entry>Windows 16-bit platform.</entry>
		 	</row><row>
		 		<entry>WinCE</entry><entry>Windows CE platform.</entry>
		 	</row><row>
		 		<entry>Linux i686</entry><entry>Linux i686</entry>
		 	</row><row>
		 		<entry>Other</entry><entry>Other</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note (Mozilla):</b> Unless your code is privileged (chrome or at least has the UniversalBrowserRead 
		 privilege), it may get the value of the general.platform.override preference instead of the true platform. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534340%28VS.85%29.aspx"><linktext>MSDN - platform Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.platform"><linktext>MDC - window.navigator.platform</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:NavigatorID:dom.objects:NavigatorID:userAgent:get"><apiName>userAgent</apiName><shortdesc>
		 Returns the user agent string for the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the user agent string for the current browser. 
		 
		 <p><b>Note:</b> Browser identification based on detecting the user agent string is 
		 <b>unreliable</b> and <b>is not recommended</b>, as the user agent string is user configurable.
		 
		 <ul>
		 <li>Mozilla Suite and Firefox can use the preference "general.useragent.override" in about:config. Some Firefox extensions or multi-bar do that. </li>
		 <li>Opera 6+ allows users to set the browser identification string via a menu </li>
		 <li>Microsoft Internet Explorer uses the Windows registry </li>
		 <li>Safari and iCab allow users to change the browser user agent string to predefined Internet Explorer or Netscape strings via a menu. </li>
		 </ul>
		 
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 alert(window.navigator.userAgent);
		 // alerts "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape6/6.1"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534712%28VS.85%29.aspx"><linktext>MSDN - userAgent Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.userAgent"><linktext>MDC - window.navigator.userAgent</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:CRMFRequest"><apiName>CRMFRequest</apiName><shortdesc>
	 RFC 4211, the Internet X.509 Public Key Infrastructure Certificate Request Message 
	 Format (CRMF), defines a certReqMessage.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 RFC 4211, the Internet X.509 Public Key Infrastructure Certificate Request Message 
	 Format (CRMF), defines a certReqMessage. The object returned by generateCRMFRequest() 
	 contains one of those.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:CRMFRequest:request:get"><apiName>request</apiName><shortdesc>
		 Returns a encrypted string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a encrypted string.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.objects:MimeTypeArray"><apiName>MimeTypeArray</apiName><shortdesc>
	 Contains a list of MimeType objects representing the MIME types recognized by the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains a list of MimeType objects representing the MIME types recognized by the browser. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:MimeTypeArray:length:get"><apiName>length</apiName><shortdesc>
		 The number of MimeTypes in the array.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of MimeTypes in the array.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:BarProp"><apiName>BarProp</apiName><shortdesc>
	 To allow Web pages to integrate with Web browsers, certain Web browser interface elements are exposed in a limited way to scripts in Web pages.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 To allow Web pages to integrate with Web browsers, certain Web browser interface elements are exposed in a limited way to scripts in Web pages.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:BarProp:visible:get"><apiName>visible</apiName><shortdesc>
		 The visible attribute, on getting, must return either true or a value determined by the user agent to most accurately 
		 represent the visibility state of the user interface element that the object represents, 
		 as described below.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The visible attribute, on getting, must return either true or a value determined by the user agent to most accurately 
		 represent the visibility state of the user interface element that the object represents, 
		 as described below. On setting, the new value must be discarded.
		 
		 <p>The following BarProp objects exist for each Document object in a browsing context. Some of the user interface elements represented 
		 by these objects might have no equivalent in some user agents; for those user agents, unless otherwise specified, the object must 
		 act as if it was present and visible (i.e. its visible attribute must return true).</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>window.locationbar</entry><entry>Represents the user interface element that contains a control that displays the URL of the
		 active document, or some similar interface concept.</entry>
		 	</row><row>
		 		<entry>window.menubar</entry><entry>Represents the user interface element that contains a list of commands in menu form, or some 
		 similar interface concept.</entry>
		 	</row><row>
		 		<entry>window.personalbar</entry><entry>Represents the user interface element that contains links to the user's favorite pages, or 
		 some similar interface concept.</entry>
		 	</row><row>
		 		<entry>window.scrollbars</entry><entry>Represents the user interface element that contains links to the user's favorite pages, 
		 or some similar interface concept.</entry>
		 	</row><row>
		 		<entry>window.statusbar</entry><entry>Represents a user interface element found immediately below or after the document, as appropriate 
		 for the default view's media. If the user agent has no such user interface element, then the object may act as if the corresponding
		 user interface element was absent (i.e. its visible attribute may return false).</entry>
		 	</row><row>
		 		<entry>window.toolbar</entry><entry>Represents the user interface element found immediately above or before the document, as appropriate 
		 for the default view's media. If the user agent has no such user interface element, then the object may act as if the corresponding 
		 user interface element was absent (i.e. its visible attribute may return false).</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/html5/browsers.html#barprop"><linktext>W3C HTML 5: BarProp.visible</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:PluginArray"><apiName>PluginArray</apiName><shortdesc>
	 Contains a list of Plugins objects loaded in the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains a list of Plugins objects loaded in the browser. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:PluginArray:length:get"><apiName>length</apiName><shortdesc>
		 The number of Plugins in the array.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of Plugins in the array.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534101%28VS.85%29.aspx"><linktext>MSDN - length Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:History"><apiName>History</apiName><shortdesc>
	 Contains information about the URLs visited by the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains information about the URLs visited by the client.
	 
	 <p><b>Note:</b> For security reasons, the history object does not expose the actual 
	 URLs in the browser history. It does allow navigation through the browser history by exposing 
	 the back, forward, and go methods. A particular document in the browser history can be 
	 identified as an index relative to the current page. For example, specifying -1 as a parameter 
	 for the go method is the equivalent of clicking the Back button.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:History:current:get"><apiName>current</apiName><shortdesc>
		 Returns the URL of the active item of the session history.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URL of the active item of the session history.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiValue><apiValue id="dom.objects:History:length:get"><apiName>length</apiName><shortdesc>
		 Returns the number of elements in the session history, including the currently loaded page.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of elements in the session history, including the currently loaded page.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534105%28VS.85%29.aspx"><linktext>MSDN - length Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiValue><apiValue id="dom.objects:History:next:get"><apiName>next</apiName><shortdesc>
		 Returns the URL of the next item in the session history
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URL of the next item in the session history
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiValue><apiValue id="dom.objects:History:previous:get"><apiName>previous</apiName><shortdesc>
		 Returns the URL of the previous item in the session history
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URL of the previous item in the session history
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:MessagePort"><apiName>MessagePort</apiName><shortdesc>
	 Each channel has two message ports.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Each channel has two message ports. Data sent through one port is received by the other port, and vice versa.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:MessagePort:dom.objects:MessagePort:active:get"><apiName>active</apiName><shortdesc>
		 Returns true if the port is still active; otherwise, returns false.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns true if the port is still active; otherwise, returns false.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/html5/comms.html#dom-messageport-active"><linktext>W3C - HTML5: MessagePort.active</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:Crypto"><apiName>Crypto</apiName><shortdesc>
	 Mozilla defines a special JavaScript object to allow web pages access to certain cryptographic related services.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Mozilla defines a special JavaScript object to allow web pages access to certain cryptographic related services. 
	 These services are a balance between the functionality web pages need, and the requirement to protect users from 
	 malicious web sites. Most of these services are available via the JavaScript window object as window.crypto.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:Crypto:enableSmartCardEvents:get"><apiName>enableSmartCardEvents</apiName><shortdesc> 
		 To enable your document to receive these events, you must first tell the crypto system you are interested.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		 To enable your document to receive these events, you must first tell the crypto system you are interested. You 
		 can do this by setting <codeph>window.crypto.enableSmartCardEvents</codeph> to <codeph>true</codeph>. This tells the 
		 crypto system that you are interested in listening for these events. You can then register event handlers for 
		 these events with the document.addEventListener. 
		 
		 </apiDesc><example>
		 With this example, your website will automatically reload anytime a SmartCard is inserted or removed. This 
		 allows the page to automatically login and logout based on the presence of the SmartCard. 
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;
		 &lt;html&gt;&lt;head&gt; 
		 ....
		 &lt;script language="javascript"&gt;
		 
		 function onSmartCardChange() {
		 	window.location.reload();
		 }
		 function register() {
		 window.crypto.enableSmartCardEvents=true;
		 	document.addEventListener("smartcard-insert",onSmartCardChange,false);
		 	document.addEventListener("smartcard-remove",onSmartCardChange,false);
		 };
		 function deregister() {
		 	document.removeEventListener("smartcard-insert",onSmartCardChange,false);
		 	document.removeEventListener("smartcard-remove",onSmartCardChange,false);
		 };
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body .... onload=register() onunload=deregister()&gt;
		 
		 .....
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiValue><apiValue id="dom.objects:Crypto:version:get"><apiName>version</apiName><shortdesc> 
		 Undocumented
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc> 
		 Undocumented
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:Plugin"><apiName>Plugin</apiName><shortdesc>
	 A plug-in module installed on the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A plug-in module installed on the client.
	 
	 <p>A plug-in is a software module that the browser can invoke to display specialized types of 
	 embedded data within the browser. The user can obtain a list of installed plug-ins by choosing 
	 About Plug-ins from the Help menu.</p>
	 
	 <p>Each Plugin object is itself array containing one element for each MIME type supported by the 
	 plug-in. Each element of the array is a MimeType object. For example, the following code displays 
	 the type and description properties of the first Plugin object's first MimeType object.</p>
	 
	 <codeblock>
	 myPlugin=navigator.plugins[0]
	 myMimeType=myPlugin[0]
	 document.writeln('myMimeType.type is ',myMimeType.type,"&lt;BR&gt;")
	 document.writeln('myMimeType.description is ',myMimeType.description</codeblock>
	 
	 <p>The preceding code displays output similar to the following:</p>
	 
	 <codeblock>
	 myMimeType.type is video/quicktime
	 myMimeType.description is QuickTime for Windows </codeblock>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:Plugin:description:get"><apiName>description</apiName><shortdesc>
		 A description of the plug-in.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A description of the plug-in.
		 
		 </apiDesc><example><codeblock>3.0.40624.0</codeblock>
		 
		 </example></apiValueDetail></apiValue><apiValue id="dom.objects:Plugin:filename:get"><apiName>filename</apiName><shortdesc>
		 Name of the plug-in file on disk.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Name of the plug-in file on disk.
		 
		 </apiDesc><example><codeblock>npctrl.dll</codeblock>
		 
		 </example></apiValueDetail></apiValue><apiValue id="dom.objects:Plugin:length:get"><apiName>length</apiName><shortdesc>
		 Number of elements in the plug-in's array of MimeType objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Number of elements in the plug-in's array of MimeType objects.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.objects:Plugin:name:get"><apiName>name</apiName><shortdesc>
		 	Name of the plug-in.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 	Name of the plug-in.
		 
		 </apiDesc><example><codeblock>Silverlight Plug-In</codeblock>
		 
		 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.objects:UserProfile"><apiName>UserProfile</apiName><shortdesc>
	 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiPlatform description="" name="Obsolete" version="IE7"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.objects:Navigator"><apiName>Navigator</apiName><shortdesc>
	 Contains information about the application running the script.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.objects:NavigatorID</apiBaseInterface><apiBaseInterface>dom.objects:NavigatorOnLine</apiBaseInterface><apiBaseInterface>dom.objects:NavigatorAbilities</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains information about the application running the script. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.objects:Navigator:appCodeName:get"><apiName>appCodeName</apiName><shortdesc>
		 Returns the internal "code" name of the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the internal "code" name of the current browser. 
		 
		 <p><b>Note:</b> Mozilla, Netscape 6, and IE5 all use the internal name "Mozilla."</p>
		 
		 </apiDesc><example>Mozilla
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533077%28VS.85%29.aspx"><linktext>MSDN - appCodeName Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appCodeName"><linktext>MDC - window.navigator.appCodeName</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:appMinorVersion:get"><apiName>appMinorVersion</apiName><shortdesc>
		 Retrieves the application's minor version value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the application's minor version value. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533077%28VS.85%29.aspx"><linktext>MSDN - appMinorVersion Property</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:appName:get"><apiName>appName</apiName><shortdesc>
		 Returns the official name of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the official name of the browser. 
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(window.navigator.appName);
		 // prints "Navigator" to the console for NS6</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533079%28VS.85%29.aspx"><linktext>MSDN - appName Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appName"><linktext>MDC - window.navigator.appName</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:appVersion:get"><apiName>appVersion</apiName><shortdesc>
		 Returns the version of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the version of the browser.
		 
		 <p><b>Note:</b> The window.navigator.userAgent property also contains the version number 
		 (example: "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape 6/6.1"), but you 
		 should be aware of how easy it is to change the user agent string and "spoof" other browsers, platforms, 
		 or user agents, and also how cavalier the browser vendor themselves are with these properties. 
		 The window.navigator.appVersion and window.navigator.userAgent properties are quite often used in 
		 "browser sniffing" code: scripts that attempt to find out what kind of browser you are using and 
		 adjust pages accordingly.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( navigator.appVersion.charAt(0) == "5" ) { 
		 	// browser is putatively a v5 browser
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533080%28VS.85%29.aspx"><linktext>MSDN - appVersion Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appVersion"><linktext>MDC - window.navigator.appVersion</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:browserLanguage:get"><apiName>browserLanguage</apiName><shortdesc>
		 Retrieves the current browser language.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the current browser language. 
		 
		 <p><b>Note (IE):</b> This property does not indicate the language or languages set by the user in Language 
		 Preferences, located in the Internet Options dialog box.</p>
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 4.0 and earlier, the browserLanguage property reflects 
		 the language of the installed browser's user interface. For example, if you install a Japanese version of Windows 
		 Internet Explorer on an English operating system, browserLanguage would be ja.</p>
		 
		 <p><b>Note (IE):</b> In Internet Explorer 5 and later, however, the browserLanguage property reflects the language 
		 of the operating system regardless of the installed language version of Internet Explorer. However, if Microsoft Windows 
		 2000 MultiLanguage version is installed, the browserLanguage property indicates the language set in the operating system's 
		 current menus and dialogs, as found in the Regional Options of the Control Panel. For example, if you install a 
		 Japanese version of Internet Explorer 5 on an English (United Kingdom) operating system, browserLanguage would be en-gb. 
		 If you install Windows 2000 MultiLanguage version and set the language of the menus and dialogs to French, browserLanguage 
		 would be fr, even though you have a Japanese version of Internet Explorer.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533542%28VS.85%29.aspx"><linktext>MSDN - browserLanguage Property</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:buildID:get"><apiName>buildID</apiName><shortdesc>
		 Returns the build identifier of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the build identifier of the browser. The build ID is in form YYYYMMDDHH.
		 
		 <p><b>Note:</b> Available in Firefox 2 (Gecko 1.8.1) and later.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(window.navigator.buildID); 
		 // prints "2006090803" to the console</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.buildID"><linktext>window.navigator.buildID MDC - window.navigator.buildID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:cookieEnabled:get"><apiName>cookieEnabled</apiName><shortdesc>
		 Returns a boolean indicating whether cookies are enabled in the browser or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether cookies are enabled in the browser or not. 
		 
		 <p><b>Note (IE):</b> CookieEnabled does not check the status of session cookies.</p>
		 
		 <p><b>Note (Mozilla):</b> Due to bug 230350, cookieEnabled may return the wrong result in Gecko-based applications. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if (!navigator.cookieEnabled) { 
		 	// let the user know that enabling cookies makes the web page much more useful
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533694%28VS.85%29.aspx"><linktext>MSDn - cookieEnabled Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.cookieEnabled"><linktext>MDC - window.navigator.cookieEnabled</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=230350"><linktext>bug 230350</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:cpuClass:get"><apiName>cpuClass</apiName><shortdesc>
		 Retrieves a string denoting the CPU class.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a string denoting the CPU class. 
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>CPU Class</entry><entry>CPU Name</entry></row></thead><tbody><row>
		 		<entry>x86</entry><entry><codeph>Intel processor.</codeph></entry>
		 	</row><row>
		 		<entry>68K</entry><entry>Motorola processor.</entry>
		 	</row><row>
		 		<entry>Alpha</entry><entry>Digital processor.</entry>
		 	</row><row>
		 		<entry>PPC</entry><entry><codeph>Motorola processor.</codeph></entry>
		 	</row><row>
		 		<entry>Other</entry><entry>Other CPU classes, including Sun SPARC.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533697%28VS.85%29.aspx"><linktext>MSDN - cpuClass Property</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:language:get"><apiName>language</apiName><shortdesc>
		 Returns a string representing the language version of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representing the language version of the browser. Examples 
		 of valid language codes include "en", "en-US", "fr", "es-ES", etc. 
		 
		 <p><b>Note:</b> This property also shows up as part of the navigator.userAgent string.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( window.navigator.language != "en" ) {       
		 	doLangSelect(window.navigator.language); 
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.language"><linktext>MDC - window.navigator.language</linktext></link><link href="dom.objects.xml#Navigator/systemLanguage"><linktext>systemLanguage</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:mimeTypes:get"><apiName>mimeTypes</apiName><shortdesc>
		 Returns a MimeTypeArray object, which contains a list of MimeType objects representing the MIME types recognized by the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:MimeTypeArray</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a MimeTypeArray object, which contains a list of MimeType objects representing the MIME types recognized by the browser. 
		 
		 <p><b>Note:</b> The zeroth element in mimeTypes (the "Mozilla Default Plug-in" MimeType object) has a type property of 
		 instead of a typical MIME format like "image/x-macpaint"</p>
		 
		 </apiDesc><example>
		 <codeblock>alert(window.navigator.mimeTypes.item(0).description); // alerts "Mozilla Default Plug-in"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:onLine:get"><apiName>onLine</apiName><shortdesc>
		 Returns a boolean indicating whether the browser is working online.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether the browser is working online. 
		 
		 <p><b>Note (IE):</b>  In Windows Internet Explorer 8 and later, the onLine property returns true if both of the 
		 following conditions are true: 
		 <ul>
		 <li>the system is able to communicate with the network</li>
		 <li>the system is not in global offline mode (Users can modify the global offline state by choosing Work Offline on the File menu.)</li>
		 </ul>
		 If either of these conditions is false, the onLine property returns false.
		 </p>
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 4.0 through Internet Explorer 7, the onLine property indicates whether the 
		 system is in global offline mode. It does not indicate whether the system can communicate with the network.</p>
		 
		 </apiDesc><example>
		 <codeblock>alert(navigator.onLine ? "You're online" : "You're offline");</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534307%28VS.85%29.aspx"><linktext>MSDN - onLine Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.navigator.onLine"><linktext>MDC - window.navigator.onLine</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:oscpu:get"><apiName>oscpu</apiName><shortdesc>
		 Returns a string that represents the current operating system.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string that represents the current operating system. 
		 
		 </apiDesc><example>
		 <codeblock>
		 function osInfo() { 
		 	alert(window.navigator.oscpu); 
		 }
		 // returns: Windows NT 6.0</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.oscpu"><linktext>MDC - window.navigator.oscpu</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:platform:get"><apiName>platform</apiName><shortdesc>
		 Returns a string representing the platform of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representing the platform of the browser.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Platform Code</entry><entry>Platform Name</entry></row></thead><tbody><row>
		 		<entry>HP-UX</entry><entry><codeph>HP UNIX-based computers.</codeph></entry>
		 	</row><row>
		 		<entry>MacPPC</entry><entry>Macintosh PowerPC-based computers.</entry>
		 	</row><row>
		 		<entry>Mac68K</entry><entry>Macintosh 68K-based computers.</entry>
		 	</row><row>
		 		<entry>MacIntel</entry><entry>Macintosh Intel-based computers.</entry>
		 	</row><row>
		 		<entry>Win32</entry><entry><codeph>Microsoft Windows 32-bit platform.</codeph></entry>
		 	</row><row>
		 		<entry>Win16</entry><entry>Windows 16-bit platform.</entry>
		 	</row><row>
		 		<entry>WinCE</entry><entry>Windows CE platform.</entry>
		 	</row><row>
		 		<entry>Linux i686</entry><entry>Linux i686</entry>
		 	</row><row>
		 		<entry>Other</entry><entry>Other</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note (Mozilla):</b> Unless your code is privileged (chrome or at least has the UniversalBrowserRead 
		 privilege), it may get the value of the general.platform.override preference instead of the true platform. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534340%28VS.85%29.aspx"><linktext>MSDN - platform Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.platform"><linktext>MDC - window.navigator.platform</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:plugins:get"><apiName>plugins</apiName><shortdesc>
		 Returns an PluginArray object, listing the plugins installed in the application.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:PluginArray</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an PluginArray object, listing the plugins installed in the application. 
		 
		 <b>IE:</b> Retrieves a collection of all embed objects within the document.
		 
		 <p><b>Note (IE):</b> The collection is an alias for the embeds collection on the document. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script type="text/javascript"&gt;
		 	var L = navigator.plugins.length;
		 	document.write(L.toString().bold() + " Plugin(s)".bold());
		 	document.write("&lt;br&gt;");
		 	document.write("Name | Filename | description".bold());
		 	document.write("&lt;br&gt;");
		 	for(var i=0; i&lt;L; i++) {
		 		document.write(navigator.plugins[i].name);
		 		document.write(" | ");
		 		document.write(navigator.plugins[i].filename);
		 		document.write(" | ");
		 		document.write(navigator.plugins[i].description);
		 		document.write("&lt;br&gt;");
		 	}
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537477%28VS.85%29.aspx"><linktext>MSDN - plugins Collection</linktext></link><link href="http://developer.mozilla.org/en/Navigator.plugins"><linktext>MDC - window.navigator.plugins</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:product:get"><apiName>product</apiName><shortdesc>
		 Returns the product name of the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the product name of the current browser.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function prod() { 
		 	dt = document.getElementById("d"); 
		 	dt.innerHTML = window.navigator.product; 
		 }
		 &lt;/script&gt; 
		 &lt;button onclick="prod();"&gt;product&lt;/button&gt; 
		 &lt;div id="d"&gt; &lt;/div&gt; 
		 // returns "Gecko"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.product"><linktext>MDC - window.navigator.product</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:productSub:get"><apiName>productSub</apiName><shortdesc>
		 Returns the build number of the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the build number of the current browser.
		 
		 <p><b>Note:</b> On IE, this property returns undefined. </p>
		 
		 <p><b>Note:</b> On Apple Safari this property always returns 20030107.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt; 
		 function prodsub() {
		 	dt = document.getElementById("d").childNodes[0];
		 	dt.data = window.navigator.productSub;
		 } 
		 &lt;/script&gt; 
		 &lt;button onclick="prodsub();"&gt;productSub&lt;/button&gt;
		 // returns: 20010725</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.productSub"><linktext>MDC - window.navigator.productSub</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:securityPolicy:get"><apiName>securityPolicy</apiName><shortdesc>
		 Returns an empty string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an empty string. In Netscape 4.7x, returns "US &amp; CA domestic policy" or "Export policy". 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.navigator.securityPolicy"><linktext>MDC - window.navigator.securityPolicy</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:systemLanguage:get"><apiName>systemLanguage</apiName><shortdesc>
		 Retrieves the default language used by the operating system.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the default language used by the operating system. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534653%28VS.85%29.aspx"><linktext>MSDN - systemLanguage Property</linktext></link><link href="dom.objects.xml#Navigator/language"><linktext>language</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:userAgent:get"><apiName>userAgent</apiName><shortdesc>
		 Returns the user agent string for the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the user agent string for the current browser. 
		 
		 <p><b>Note:</b> Browser identification based on detecting the user agent string is 
		 <b>unreliable</b> and <b>is not recommended</b>, as the user agent string is user configurable.
		 
		 <ul>
		 <li>Mozilla Suite and Firefox can use the preference "general.useragent.override" in about:config. Some Firefox extensions or multi-bar do that. </li>
		 <li>Opera 6+ allows users to set the browser identification string via a menu </li>
		 <li>Microsoft Internet Explorer uses the Windows registry </li>
		 <li>Safari and iCab allow users to change the browser user agent string to predefined Internet Explorer or Netscape strings via a menu. </li>
		 </ul>
		 
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 alert(window.navigator.userAgent);
		 // alerts "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape6/6.1"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534712%28VS.85%29.aspx"><linktext>MSDN - userAgent Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.userAgent"><linktext>MDC - window.navigator.userAgent</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:userLanguage:get"><apiName>userLanguage</apiName><shortdesc>
		 Retrieves the operating system's natural language setting.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the operating system's natural language setting.
		 
		 <p><b>Note (IE):</b> This property reflects the setting in the "Your locale (location)" 
		 box in the Regional Options of Control Panel&#151;for example, "English (United States).</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534713%28VS.85%29.aspx"><linktext>MSDN - userLanguage Property</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533052(VS.85).aspx"><linktext>MSDN - Language Codes</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:userProfile:get"><apiName>userProfile</apiName><shortdesc>
		 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiPlatform description="" name="Obsolete" version="IE7"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:UserProfile</apiValueClassifier></apiValueDef><apiDesc>
		 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.
		 
		 <p><b>Note (IE):</b> As of Windows Internet Explorer 7, this object is obsolete and should not be used.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Queue a request for read access to multiple profile attributes.
		 navigator.userProfile.addReadRequest("vcard.displayname");
		 navigator.userProfile.addReadRequest("vcard.gender");
		 
		 // Request access to the information.
		 navigator.userProfile.doReadRequest(usage-code, "Acme Corporation");
		 
		 // Now perform read operations to access the information.
		 name = navigator.userProfile.getAttribute("vcard.displayname");
		 gender = navigator.userProfile.getAttribute("vcard.gender");
		 
		 // The script can now use the 'name' and 'gender' variables
		 // to personalize content or to send information back to the server.
		 
		 // Clear the request queue to prepare for later information requests.
		 navigator.userProfile.clearRequest();</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535915%28VS.85%29.aspx"><linktext>MSDN - userProfile Object</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:vendor:get"><apiName>vendor</apiName><shortdesc>
		 Returns the vendor name of the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the vendor name of the current browser.
		 
		 </apiDesc><example>
		 <codeblock>
		 window.navigator.vendor 
		 // returns "Netscape6"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.vendor"><linktext>MDC - window.navigator.vendor</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:vendorSub:get"><apiName>vendorSub</apiName><shortdesc>
		 Returns the vendor version number.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the vendor version number.
		 
		 </apiDesc><example>
		 <codeblock>
		 window.navigator.vendorSub 
		 // returns "6.1" where the vendor part of userAgent is 
		 // Netscape6/6.1</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.vendor"><linktext>MDC - window.navigator.vendorSub</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:NavigatorAbilities"><apiName>NavigatorAbilities</apiName><shortdesc>
	 Objects implementing the Navigator interface must also implement the NavigatorAbilities interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the Navigator interface must also implement the NavigatorAbilities interface. This interface is defined separately so 
	 that other specifications can re-use parts of the Navigator interface.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.objects:Pkcs11"><apiName>Pkcs11</apiName><shortdesc>
	 PKCS11 modules are external modules which provide access to smart-card readers, biometric security 
	 devices, or external certificate stores.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 PKCS11 modules are external modules which provide access to smart-card readers, biometric security 
	 devices, or external certificate stores. There are two methods for installing PKCS11 modules into 
	 Firefox. Users can use the preferences dialog to install or remove PKCS11 module. Extensions can 
	 programmatically manage PKCS11 modules using the nsIPKCS11 programming interface.
	 
	 <p><b>Note (Mozilla):</b> The information in this article is specific to Firefox 3.5 and 
	 newer, support for window.pkcs11 property was disabled due to security concerns.</p>
	 
	 <p><b>Mechanism Flag Definitions</b></p>
	 
	 <p>In general, most tokens should not set any of the cipher flags. Setting these flags means you want 
	 your token to supply the default implementation for these functions. Normally Mozilla uses its own 
	 internal module to supply these functions. These flags override that preference. If you choose to 
	 implement these flags, your module must supply the following additional functions for each flag: </p>
	 
	 <ul>
		<li>PKCS11_MECH_FLAG: must support CKM_RSA_PKCS and CKM_RSA_X_509 and the following functions: C_WRAPKEY, C_ENCRYPT, C_SIGN, C_DECRYPT, C_UNWRAPKEY, C_VERIFYRECOVER, C_VERIFY, C_GENERATEKEYPAIR (2048, 1024, 512) size
		</li>
		<li>PKCS11_MECH_DSA_FLAG: must support CKM_DSA and the following functions: C_SIGN, C_VERIFY, C_GENERATEKEYPAIR
		</li>
		<li>PKCS11_MECH_RC2_FLAG: must support CKM_RC2_CBC and CKM_RC2_ECB and the following functions: C_GENERATEKEY, C_ENCRYPT, C_DECRYPT, C_WRAPKEY, C_UNWRAPKEY
		</li>
		<li>PKCS11_MECH_RC4_FLAG: must support CKM_RC4_CBC and CKM_RC4_ECB and the following functions: C_GENERATEKEY, C_ENCRYPT, C_DECRYPT, C_WRAPKEY, C_UNWRAPKEY
		</li>
		<li>PKCS11_MECH_DES_FLAG: must support CKM_CPMF_CBC, CKM_DES_CBC, CKM_DES3_CBC, CKM_CPMF_ECB, CKM_DES_ECB, CKM_DES3_ECB and the following functions: C_GENERATEKEY, C_ENCRYPT, C_DECRYPT, C_WRAPKEY, C_UNWRAPKEY
		</li>
		<li>PKCS11_MECH_DH_FLAG: must support CKM_DH_PKCS_DERIVE and CKM_DH_KEY_PAIR_GEN and the following functions: C_DERIVEKEY, C_GENERATEKEYPAIR
		</li>
		<li>PKCS11_MECH_MD5_FLAG: Hashing must be able to function without authentication.
		</li>
		<li>PKCS11_MECH_SHA1_FLAG: Hashing must be able to function without authentication.
		</li>
		<li>PKCS11_MECH_MD2_FLAG: Hashing must be able to function without authentication.
		</li>
		<li>PKCS11_RANDOM_FLAG: Use token's Random Number Generator.
			<ul>
				<li>Warning: Must be able to use without authentication. Many hardware random number generators are not as secure as the Netscape internal one. Do not select this value unless you can show that your random number generator is secure. Even so, it's highly discouraged.
				</li>
			</ul>
		</li>
		<li>PKCS11_PUB_READABLE_CERT_FLAG: This is the only flag most smart tokens should turn on. You can turn this flag on if:
			<ul>
				<li> the certs on your token can be read without authentication and,
				</li>
				<li> the public key on your token can be found by ID, MODULUS, or VALUE and all your private keys have the associated public key.

					<ul>
						<li>Turning this flag on will illuminate a large number of password prompts for your token when looking up certs in Communicator. </li>
					</ul>
				</li>
			</ul>
		</li>
		</ul>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.objects:Selection"><apiName>Selection</apiName><shortdesc>
	 Selection is the class of the object returned by window.getSelection() and other methods.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Selection is the class of the object returned by window.getSelection() and other methods. A 
	 selection object represents the ranges that the user has selected.
	 
	 <p><b>Note (IE):</b> Internet Explorer uses the document.selection.createRange() to create a TextRange,
	 which is fundamentally different from Mozilla's Selection and W3C's Range objects.</p>
	 
	 </apiDesc><example>
	 Note the order of the branches: the Mozilla Selection should come first! The reason is that Opera 
	 supports both objects; if you use window.getSelection() to read out the user selection, Opera 
	 creates a Selection object, while if you use document.selection it creates a Text Range object.
	 <codeblock>
	 var userSelection;
	 if (window.getSelection) {
	 	userSelection = window.getSelection();
	 } else if (document.selection) { // should come last; Opera!
	 	userSelection = document.selection.createRange();
	 }</codeblock>
	 
	 </example></apiClassifierDetail><apiValue id="dom.objects:Selection:anchorNode:get"><apiName>anchorNode</apiName><shortdesc>
		 Returns the node in which the selection begins.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node in which the selection begins. 
		 
		 <p><b>Note:</b> A user may make a selection from left to right (in document order) or right to left (reverse of 
		 document order). The anchor is where the user began the selection. This can be visualized by holding the 
		 Shift key and pressing the arrow keys on your keyboard. The selection's anchor does not move, but the 
		 selection's focus, the other end of the selection, does move.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/anchorNode"><linktext>MDC - Selection.anchorNode</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:anchorOffset:get"><apiName>anchorOffset</apiName><shortdesc>
		 Returns the number of characters that the selection's anchor is offset within the anchorNode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of characters that the selection's anchor is offset within the anchorNode. 
		 
		 <p><b>Note:</b> This number is zero-based. If the selection begins with the first character in the anchorNode, 
		 0 is returned.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/anchorOffset"><linktext>MDC - Selection.anchorOffset</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:focusNode:get"><apiName>focusNode</apiName><shortdesc>
		 Returns the node in which the selection ends.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node in which the selection ends. 
		 
		 <p><b>Note:</b> A user may make a selection from left to right (in document order) or right to left (reverse of 
		 document order). The focus is where the user ended the selection. This can be visualized by holding the 
		 Shift key and pressing the arrow keys on your keyboard to modify the current selection. The selection's 
		 focus moves, but the selection's anchor, the other end of the selection, does not move. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/focusNode"><linktext>MDC - Selection.focusNode</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:focusOffset:get"><apiName>focusOffset</apiName><shortdesc>
		 Returns the number of characters that the selection's focus is offset within the focusNode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of characters that the selection's focus is offset within the focusNode. 
		 
		 <p><b>Note:</b> This number is zero-based. If the selection ends with the first character in the focusNode, 
		 0 is returned. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/focusOffset"><linktext>MDC - Selection.focusOffset</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:isCollapsed:get"><apiName>isCollapsed</apiName><shortdesc>
		 Returns a boolean indicating whether the selection's start and end points are at the same position.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether the selection's start and end points are at the same position. 
		 
		 <p><b>Note:</b> Even a collapsed selection may have a rangeCount greater than 0. sel.getRangeAt(0) may return 
		 a range that is also collapsed. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/isCollapsed"><linktext>MDC - Selection.isCollapsed</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:rangeCount:get"><apiName>rangeCount</apiName><shortdesc>
		 Returns the number of ranges in the selection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of ranges in the selection. 
		 
		 <p><b>Note:</b> Before the user has clicked a freshly loaded page, the rangeCount is 0. A user can normally 
		 only select one range at a time, so the rangeCount will usually be 1. Scripting can be use to make 
		 the selection contain more than 1 range. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/rangeCount"><linktext>MDC - Selection.rangeCount</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.style.css"><apiName>dom.style.css</apiName><apiClassifier id="dom.style.css:CSSRule"><apiName>CSSRule</apiName><shortdesc>
	 The CSSRule interface is the abstract base interface for any type of CSS statement.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSRule interface is the abstract base interface for any type of CSS statement. 
	 
	 <p>This includes both rule sets and at-rules. An implementation is expected to preserve 
	 all rules specified in a CSS style sheet, even if the rule is not recognized by the 
	 parser. Unrecognized rules are represented using the CSSUnknownRule interface.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSRule:CHARSET_RULE"><apiName>CHARSET_RULE</apiName><shortdesc>
		 The rule is a CSSCharsetRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSCharsetRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSCharsetRule"><linktext>dom.style.css.CSSCharsetRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:FONT_FACE_RULE"><apiName>FONT_FACE_RULE</apiName><shortdesc>
		 The rule is a CSSFontFaceRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSFontFaceRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSFontFaceRule"><linktext>dom.style.css.CSSFontFaceRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:IMPORT_RULE"><apiName>IMPORT_RULE</apiName><shortdesc>
		 The rule is a CSSImportRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSImportRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSImportRule"><linktext>dom.style.css.CSSImportRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:MEDIA_RULE"><apiName>MEDIA_RULE</apiName><shortdesc>
		 The rule is a CSSMediaRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSMediaRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSMediaRule"><linktext>dom.style.css.CSSMediaRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:PAGE_RULE"><apiName>PAGE_RULE</apiName><shortdesc>
		 The rule is a CSSPageRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSPageRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSPageRule"><linktext>dom.style.css.CSSPageRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:STYLE_RULE"><apiName>STYLE_RULE</apiName><shortdesc>
		 The rule is a CSSStyleRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSStyleRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSStyleRule"><linktext>dom.style.css.CSSStyleRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:UNKNOWN_RULE"><apiName>UNKNOWN_RULE</apiName><shortdesc>
		 The rule is a CSSUnknownRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSUnknownRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSUnknownRule"><linktext>dom.style.css.CSSUnknownRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:cssText:get"><apiName>cssText</apiName><shortdesc>
		 The parsable textual representation of the rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_MODIFICATION_ERR: Raised if the specified CSS string 
		 value represents a different type of rule than the current one.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted 
		 at this point in the style sheet.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if the rule is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The parsable textual representation of the rule. This reflects the current state of the 
		 rule and not its initial value.
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( myRule.cssText.indexOf("background-color") != -1 ) {
		 	bgRule = myRule;
		 } </codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule.cssText"><linktext>MDC - cssRule.cssText</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-cssText"><linktext>W3C - DOM Level 2 Style: CSSRule.cssText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:parentRule:get"><apiName>parentRule</apiName><shortdesc>
		 If this rule is contained inside another rule (e.g.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRule</apiValueClassifier></apiValueDef><apiDesc>
		 If this rule is contained inside another rule (e.g. a style rule inside an @media block), 
		 this is the containing rule. If this rule is not nested inside any other rules, this returns null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule.parentRule"><linktext>MDC - cssRule.parentRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-parentRule"><linktext>W3C - DOM Level 2 Style: CSSRule.parentRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:parentStyleSheet:get"><apiName>parentStyleSheet</apiName><shortdesc>
		 The style sheet that contains this rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleSheet</apiValueClassifier></apiValueDef><apiDesc>
		 The style sheet that contains this rule.
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( bgRule.parentStyleSheet != mySheet ) {
		 	// alien style rule!
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule.parentStyleSheet"><linktext>MDC - cssRule.parentStyleSheet</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-sheet"><linktext>W3C - DOM Level 2 Style: CSSRule.parentStyleSheet</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:type:get"><apiName>type</apiName><shortdesc>
		 The type of the rule, as defined above.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The type of the rule, as defined above. 
		 
		 <p>The expectation is that binding-specific casting 
		 methods can be used to cast down from an instance of the CSSRule interface to the 
		 specific derived interface implied by the type.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule.type"><linktext>MDC - cssRule.type</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-type"><linktext>W3C - DOM Level 2 Style: CSSRule.type</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSCharsetRule"><apiName>CSSCharsetRule</apiName><shortdesc>
	 The CSSCharsetRule interface represents a &amp;#64;charset rule in a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSCharsetRule interface represents a @charset rule in a CSS style sheet.
	 
	 <p>The value of the 
	 encoding attribute does not affect the encoding of text data in the DOM objects; this encoding 
	 is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value 
	 found in the @charset rule. If there was no @charset in the original document, then no 
	 CSSCharsetRule is created. The value of the encoding attribute may also be used as a hint for 
	 the encoding used on serialization of the style sheet.</p>
	 
	 <p>The value of the @charset rule (and therefore of the CSSCharsetRule) may not correspond to the 
	 encoding the document actually came in; character encoding information e.g. in an HTTP header, 
	 has priority but this is not reflected in the CSSCharsetRule.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSCharsetRule:encoding:get"><apiName>encoding</apiName><shortdesc>
		 The encoding information used in this &amp;#64;charset rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this 
		 declaration is readonly or a property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The encoding information used in this @charset rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSCharsetRule"><linktext>MDC - cssRule: CSSCharsetRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSCharsetRule-encoding"><linktext>W3C - DOM Level 2 Style: CSSCharsetRule.encoding</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:RGBColor"><apiName>RGBColor</apiName><shortdesc>
	 The RGBColor interface is used to represent any RGB color value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The RGBColor interface is used to represent any RGB color value. 
	 
	 <p>This interface reflects the values 
	 in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify 
	 the style property.</p>
	 
	 <p>A specified RGB color is not clipped (even if the number is outside the range 0-255 or 0%-100%). A 
	 computed RGB color is clipped depending on the device.</p>
	 
	 <p>Even if a style sheet can only contain an integer for a color value, the internal storage of this 
	 integer is a float, and this can be used as a float in the specified or the computed style.</p>
	 
	 <p>A color percentage value can always be converted to a number and vice versa.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:RGBColor:blue:get"><apiName>blue</apiName><shortdesc>
		 This attribute is used for the blue value of the RGB color.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the blue value of the RGB color.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-blue"><linktext>W3C - DOM Level 2 Style: RGBColor.blue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:RGBColor:green:get"><apiName>green</apiName><shortdesc>
		 This attribute is used for the green value of the RGB color.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the green value of the RGB color.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-green"><linktext>W3C - DOM Level 2 Style: RGBColor.green</linktext></link></related-links></apiValue><apiValue id="dom.style.css:RGBColor:red:get"><apiName>red</apiName><shortdesc>
		 This attribute is used for the red value of the RGB color.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the red value of the RGB color.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-red"><linktext>W3C - DOM Level 2 Style: RGBColor.red</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSUnknownRule"><apiName>CSSUnknownRule</apiName><shortdesc>
	 The CSSUnknownRule interface represents an at-rule not supported by this user agent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSUnknownRule interface represents an at-rule not supported by this user agent.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.style.css:CSS2Properties"><apiName>CSS2Properties</apiName><shortdesc>
	 INCOMPLETE
	 
	 The CSS2Properties interface represents a convenience mechanism for retrieving and setting properties within a 
	 CSSStyleDeclaration.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="CSS 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 INCOMPLETE
	 
	 The CSS2Properties interface represents a convenience mechanism for retrieving and setting properties within a 
	 CSSStyleDeclaration. 
	 
	 <p>The attributes of this interface correspond to all the properties specified in CSS2. 
	 Getting an attribute of this interface is equivalent to calling the getPropertyValue method of the 
	 CSSStyleDeclaration interface. Setting an attribute of this interface is equivalent to calling the 
	 setProperty method of the CSSStyleDeclaration interface.</p>
	 
	 <p><b>Note:</b> When the margin property is set, for example, the marginTop, marginRight, marginBottom and marginLeft 
	 properties are actually being set.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:azimuth:get"><apiName>azimuth</apiName><shortdesc>
		 In combination with elevation, azimuth enables different audio sources to be positioned spatially for aural presentation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>center
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 In combination with elevation, azimuth enables different audio sources to be positioned spatially for aural presentation. 
		 
		 <p>This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate 
		 at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and 
		 multi-speaker setups allow for a fully three-dimensional stage.</p>
		 
		 <codeblock>azimuth: angle | [[ left-side | far-left | left | center-left | center | center-right | 
		 right | far-right | right-side ] || behind ] | leftwards | rightwards | inherit</codeblock>
		 
		 <b>angle</b>
		 <p>Audible source position is described as an angle within the range <codeph>-360deg</codeph> to <codeph>360deg</codeph>. 
		 The value <codeph>0deg</codeph> means directly ahead in the center of the sound stage (this is the default value). 
		 <codeph>90deg</codeph> is to the right, <codeph>180deg</codeph> is behind, and <codeph>270deg</codeph> or <codeph>-90deg</codeph> is to the left.</p>
		 
		 <b>Positional keywords</b>
		 <p>
		 <ul><li> <b>left-side</b>: Same as <codeph>270deg</codeph>.
		 </li><li> <b>left-side behind</b>: Same as <codeph>270deg</codeph>.
		 </li><li> <b>far-left</b>: Same as <codeph>300deg</codeph>.
		 
		 </li><li> <b>far-left behind</b>: Same as <codeph>240deg</codeph>.
		 </li><li> <b>left</b>: Same as <codeph>320deg</codeph>.
		 </li><li> <b>left behind</b>: Same as <codeph>220deg</codeph>.
		 </li><li> <b>center-left</b>: Same as <codeph>340deg</codeph>.
		 
		 </li><li> <b>center-left behind</b>: Same as <codeph>200deg</codeph>.
		 </li><li> <b>center</b>: Same as <codeph>0deg</codeph>.
		 </li><li> <b>center behind</b>: Same as <codeph>180deg</codeph>.
		 </li><li> <b>center-right</b>: Same as <codeph>20deg</codeph>.
		 
		 </li><li> <b>center-right behind</b>: Same as <codeph>160deg</codeph>.
		 </li><li> <b>right</b>: Same as <codeph>40deg</codeph>.
		 </li><li> <b>right behind</b>: Same as <codeph>140deg</codeph>.
		 </li><li> <b>far-right</b>: Same as <codeph>60deg</codeph>.
		 
		 </li><li> <b>far-right behind</b>: Same as <codeph>120deg</codeph>.
		 </li><li> <b>right-side</b>: Same as <codeph>90deg</codeph>.
		 </li><li> <b>right-side behind</b>: Same as <codeph>90deg</codeph>.
		 </li><li> <b>behind</b>: Same as <codeph>180deg</codeph>. Also used as a modifier for other positional keyword values, as above.
		 
		 </li><li> <b>leftwards</b>: Moves the sound counter-clockwise by 20 degrees, relative to the current angle.
		 </li><li> <b>rightwards</b>: Moves the sound clockwise by 20 degrees, relative to the current angle.
		 </li></ul>
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 h1   { azimuth: 30deg }
		 td.a { azimuth: far-right }          /~~  60deg ~~/
		 #12  { azimuth: behind far-right }   /~~ 120deg ~~/
		 p.comment { azimuth: behind }        /~~ 180deg ~~/</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/azimuth"><linktext>MDC - CSS: azimuth</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-azimuth"><linktext>W3C - DOM Level 2 Style: CSS2Properties.azimuth</linktext></link><link href="dom.style.css.xml#CSS2Properties/elevation"><linktext>elevation</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:background:get"><apiName>background</apiName><shortdesc>
		 The background property is a shorthand property for setting the individual background property values in a 
		 single place in the style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The background property is a shorthand property for setting the individual background property values in a 
		 single place in the style sheet. background can be used to set the values for one or more of: background-attachment, 
		 background-color, background-image, background-position, background-repeat.
		 
		 <codeblock>background: [ &lt;background-color&gt; || &lt;background-image&gt; || &lt;background-repeat&gt; 
		 || &lt;background-attachment&gt; || &lt;background-position&gt; ] | inherit;</codeblock>
		 
		 <p><b>Note:</b> Given a valid declaration, the background property first sets the individual background 
		 properties to their initial values, then assigns the explicit values specified in the declaration. You do not have 
		 to define a value for each of the individual properties, only those you want to change from their initial defaults. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 body { 
		 	background: red;
		 }
		 
		 .topbanner {
		 	background: url("topbanner.png") #00D repeat fixed;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background"><linktext>MDC - CSS: background</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-background"><linktext>W3C - DOM Level 2 Style: CSS2Properties.background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundAttachment:get"><apiName>backgroundAttachment</apiName><shortdesc>
		 If a background-image is specified, background-attachment determines whether that image's position is 
		 fixed within the viewport, or scrolls along with its containing block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>scroll
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 If a background-image is specified, background-attachment determines whether that image's position is 
		 fixed within the viewport, or scrolls along with its containing block.
		 
		 <codeblock>background-attachment:  scroll | fixed | inherit</codeblock>
		 
		 <b>scroll</b>
		 <p>If scroll is specified, the background image will scroll within the viewport along with the block the image is contained within. </p>
		 
		 <b>inherit</b>
		 <p>If fixed is specified, the background image will not scroll with its containing element, instead remaining stationary within the viewport.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 body {
		 	background-image: url("images/cartooncat.png");
		 	background-attachment: fixed;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-attachment"><linktext>MDC - CSS: background-attachment</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundAttachment"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc>
		 background-color sets the background color of an element, either through a color value or the keyword transparent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>transparent
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 background-color sets the background color of an element, either through a color value or the keyword transparent. 
		 
		 <codeblock>background-color: color | transparent | inherit</codeblock>
		 
		 <b>color</b>
		 <p>The color can be specified as a hexidecimal RGB value, a regular RGB value, or by using one of the pre-defined color keywords.</p>
		 
		 <b>transparent</b>
		 <p>The default value for background-color is transparent meaning the element has no color of its own, instead showing the color of the element behind it.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 .exampleone {
		 	background-color: teal;
		 	color: white;
		 }
		 
		 .exampletwo {
		 	background-color: rgb(153,102,153);
		 	color: rgb(255,255,204);
		 }
		 
		 .examplethree {
		 	background-color: #666699;
		 	color: #FFFFFF;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-color"><linktext>MDC - CSS: background-color</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundColor"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundImage:get"><apiName>backgroundImage</apiName><shortdesc>
		 The background-image property sets the background image for an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>none
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 The background-image property sets the background image for an element.
		 
		 <codeblock>background-image: uri | none | inherit</codeblock>
		 
		 <p><b>Note:</b> Developers should ensure that they specify a background-color to be used if an image is not available. Background images are rendered on top of the background color.</p>
		 
		 <b>uri</b>
		 <p>The location of the image resource to be used as a background image.</p>
		 
		 <b>none</b>
		 <p>Used to specify that an element is to have no background image.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 body { background-image: url("images/darkpattern.png"); }
		 
		 p { background-image: none; }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-image"><linktext>MDC - CSS: background-image</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundImage"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundPosition:get"><apiName>backgroundPosition</apiName><shortdesc>
		 background-position sets the initial position of any background image that has been set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>0% 0%
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 background-position sets the initial position of any background image that has been set. 
		 
		 <codeblock>background-position: [ &lt;percentage&gt; | &lt;length&gt; | left | center | right  ] 
		 [ &lt;percentage&gt; | &lt;length&gt; | top  | center | bottom ] ? ;</codeblock>
		 
		 <codeblock>background-position: [ top | center | bottom ];</codeblock>
		 
		 <codeblock>background-position: inherit;</codeblock>
		 
		 <b>&lt;percentage&gt;</b>
		 <p>With a value pair of '0% 0%', the upper left corner of the image is aligned with the upper left corner of the box's padding edge. A value pair of '100% 100%' places the lower right corner of the image in the lower right corner of padding area. With a value pair of '14% 84%', the point 14% across and 84% down the image is to be placed at the point 14% across and 84% down the padding area.</p>
		 
		 <b>&lt;length&gt;</b>
		 <p>With a value pair of '2cm 1cm', the upper left corner of the image is placed 2cm to the right and 1cm below the upper left corner of the padding area.</p>
		 
		 <b>top left and left top</b>
		 <p> Same as '0% 0%'. </p>
		 
		 <b>top, top center, and center top</b>
		 <p> Same as '50% 0%'. </p>
		 
		 <b>right top and top right</b>
		 <p>Same as '100% 0%'. </p>
		 
		 <b>left, left center, and center left</b>
		 <p>Same as '0% 50%'. </p>
		 
		 <b>center and center center</b>
		 <p>Same as '50% 50%'. </p>
		 
		 <b>right, right center, and center right</b>
		 <p>Same as '100% 50%'. </p>
		 
		 <b>bottom left and left bottom</b>
		 <p>Same as '0% 100%'. </p>
		 
		 <b>bottom, bottom center, and center bottom</b>
		 <p>Same as '50% 100%'. </p>
		 
		 <b>bottom right and right bottom</b>
		 <p>Same as '100% 100%'. </p>
		 
		 <p>If only one value is specified, then it sets the horizontal position, with the vertical position at 50%. Otherwise, 
		 the first value specifies the horizontal position. Combinations are allowed of keyword, length, or percentage values, 
		 but if keywords are mixed with other values, 'left' and 'right' may only be used as the first value, and 'top' and 
		 'bottom' may only be used as the second value. Negative positions are allowed.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 .exampleone {
		 	background-image: url("logo.png");
		 	background-position: top center;
		 }
		 
		 .exampletwo {
		 	background-image: url("logo.png");
		 	background-position: 25% 75%;
		 }
		 
		 .examplethree {
		 	background-image: url("logo.png");
		 	background-position: 2cm bottom;
		 }
		 
		 .examplefour {
		 	background-image: url("logo.png");
		 	background-position: center 10%;
		 }
		 
		 .examplefive {
		 	background-image: url("logo.png");
		 	background-position: 2cm 50%;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-position"><linktext>MDC - CSS: background-position</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundPosition"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundRepeat:get"><apiName>backgroundRepeat</apiName><shortdesc>
		 background-repeat specifies whether the image is repeated (tiled), and how.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>repeat
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 background-repeat specifies whether the image is repeated (tiled), and how. 
		 
		 <codeblock>background-repeat: repeat | repeat-x | repeat-y | no-repeat | inherit</codeblock>
		 
		 <b> repeat</b>
		 <p> The image is repeated both horizontally and vertically.</p>
		 
		 <b> repeat-x</b>
		 <p> The image is repeated horizontally only.</p>
		 
		 <b> repeat-y</b>
		 <p> The image is repeated vertically only.</p>
		 
		 <b> no-repeat</b>
		 <p> The image is not repeated: only one copy of the image is drawn.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 .exampleone {
		 	background-image: url("logo.png");
		 	background-repeat: repeat-x;
		 }
		 
		 .exampletwo {
		 	background-image: url("logo.png");
		 	background-repeat: no-repeat;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-repeat"><linktext>MDC - CSS: background-repeat</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundRepeat"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundRepeat</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:border:get"><apiName>border</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderBottom:get"><apiName>borderBottom</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderBottomColor:get"><apiName>borderBottomColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderBottomStyle:get"><apiName>borderBottomStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderBottomWidth:get"><apiName>borderBottomWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderCollapse:get"><apiName>borderCollapse</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderColor:get"><apiName>borderColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderLeft:get"><apiName>borderLeft</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderLeftColor:get"><apiName>borderLeftColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderLeftStyle:get"><apiName>borderLeftStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderLeftWidth:get"><apiName>borderLeftWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderRight:get"><apiName>borderRight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderRightColor:get"><apiName>borderRightColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderRightStyle:get"><apiName>borderRightStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderRightWidth:get"><apiName>borderRightWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderSpacing:get"><apiName>borderSpacing</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderStyle:get"><apiName>borderStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderTop:get"><apiName>borderTop</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderTopColor:get"><apiName>borderTopColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderTopStyle:get"><apiName>borderTopStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderTopWidth:get"><apiName>borderTopWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderWidth:get"><apiName>borderWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:bottom:get"><apiName>bottom</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:captionSide:get"><apiName>captionSide</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:clear:get"><apiName>clear</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:clip:get"><apiName>clip</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:color:get"><apiName>color</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:content:get"><apiName>content</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:counterIncrement:get"><apiName>counterIncrement</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:counterReset:get"><apiName>counterReset</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cssFloat:get"><apiName>cssFloat</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cue:get"><apiName>cue</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cueAfter:get"><apiName>cueAfter</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cueBefore:get"><apiName>cueBefore</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cursor:get"><apiName>cursor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:direction:get"><apiName>direction</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:display:get"><apiName>display</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:elevation:get"><apiName>elevation</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:emptyCells:get"><apiName>emptyCells</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:font:get"><apiName>font</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontFamily:get"><apiName>fontFamily</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontSize:get"><apiName>fontSize</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontSizeAdjust:get"><apiName>fontSizeAdjust</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontStretch:get"><apiName>fontStretch</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontStyle:get"><apiName>fontStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontVariant:get"><apiName>fontVariant</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontWeight:get"><apiName>fontWeight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:height:get"><apiName>height</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:left:get"><apiName>left</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:letterSpacing:get"><apiName>letterSpacing</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:lineHeight:get"><apiName>lineHeight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:listStyle:get"><apiName>listStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:listStyleImage:get"><apiName>listStyleImage</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:listStylePosition:get"><apiName>listStylePosition</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:listStyleType:get"><apiName>listStyleType</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:margin:get"><apiName>margin</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marginBottom:get"><apiName>marginBottom</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marginLeft:get"><apiName>marginLeft</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marginRight:get"><apiName>marginRight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marginTop:get"><apiName>marginTop</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:markerOffset:get"><apiName>markerOffset</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marks:get"><apiName>marks</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:maxHeight:get"><apiName>maxHeight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:maxWidth:get"><apiName>maxWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:minHeight:get"><apiName>minHeight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:minWidth:get"><apiName>minWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:orphans:get"><apiName>orphans</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:outline:get"><apiName>outline</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:outlineColor:get"><apiName>outlineColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:outlineStyle:get"><apiName>outlineStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:outlineWidth:get"><apiName>outlineWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:overflow:get"><apiName>overflow</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:padding:get"><apiName>padding</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:paddingRight:get"><apiName>paddingRight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:paddingTop:get"><apiName>paddingTop</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:page:get"><apiName>page</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pageBreakAfter:get"><apiName>pageBreakAfter</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pageBreakBefore:get"><apiName>pageBreakBefore</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pageBreakInside:get"><apiName>pageBreakInside</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pause:get"><apiName>pause</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pauseAfter:get"><apiName>pauseAfter</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pauseBefore:get"><apiName>pauseBefore</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pitch:get"><apiName>pitch</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pitchRange:get"><apiName>pitchRange</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:playDuring:get"><apiName>playDuring</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:position:get"><apiName>position</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:quotes:get"><apiName>quotes</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:richness:get"><apiName>richness</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:right:get"><apiName>right</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:size:get"><apiName>size</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speak:get"><apiName>speak</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speakHeader:get"><apiName>speakHeader</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speakNumeral:get"><apiName>speakNumeral</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speakPunctuation:get"><apiName>speakPunctuation</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speechRate:get"><apiName>speechRate</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:stress:get"><apiName>stress</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:tableLayout:get"><apiName>tableLayout</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textAlign:get"><apiName>textAlign</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textDecoration:get"><apiName>textDecoration</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textIndent:get"><apiName>textIndent</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textShadow:get"><apiName>textShadow</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textTransform:get"><apiName>textTransform</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:top:get"><apiName>top</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:unicodeBidi:get"><apiName>unicodeBidi</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:visibility:get"><apiName>visibility</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:voiceFamily:get"><apiName>voiceFamily</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:volume:get"><apiName>volume</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:whiteSpace:get"><apiName>whiteSpace</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:widows:get"><apiName>widows</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:width:get"><apiName>width</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:wordSpacing:get"><apiName>wordSpacing</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:zIndex:get"><apiName>zIndex</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSImportRule"><apiName>CSSImportRule</apiName><shortdesc>
	 The CSSImportRule interface represents a &amp;#64;import rule within a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSImportRule interface represents a @import rule within a CSS style sheet. The @import 
	 rule is used to import style rules from other style sheets.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSImportRule:href:get"><apiName>href</apiName><shortdesc>
		 The location of the style sheet to be imported.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The location of the style sheet to be imported. The attribute will not contain the "url(...)" 
		 specifier around the URI.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule"><linktext>MDC - cssRule: CSSImportRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-href"><linktext>W3C - DOM Level 2 Style: CSSImportRule.href</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSImportRule:media:get"><apiName>media</apiName><shortdesc>
		 A list of media types for which this style sheet may be used.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:MediaList</apiValueClassifier></apiValueDef><apiDesc>
		 A list of media types for which this style sheet may be used.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule"><linktext>MDC - cssRule: CSSImportRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-media"><linktext>W3C - DOM Level 2 Style: CSSImportRule.media</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSImportRule:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
		 The style sheet referred to by this rule, if it has been loaded.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleSheet</apiValueClassifier></apiValueDef><apiDesc>
		 The style sheet referred to by this rule, if it has been loaded. The value of this attribute is 
		 null if the style sheet has not yet been loaded or if it will not be loaded.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule"><linktext>MDC - cssRule: CSSImportRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-styleSheet"><linktext>W3C - DOM Level 2 Style: CSSImportRule.styleSheet</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSMediaRule"><apiName>CSSMediaRule</apiName><shortdesc>
	 The CSSMediaRule interface represents a &amp;#64;media rule in a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSMediaRule interface represents a @media rule in a CSS style sheet. A @media 
	 rule can be used to delimit style rules for specific media types.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSMediaRule:cssRules:get"><apiName>cssRules</apiName><shortdesc>
		 A list of all CSS rules contained within the media block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRuleList</apiValueClassifier></apiValueDef><apiDesc>
		 A list of all CSS rules contained within the media block.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule"><linktext>MDC - cssRule: CSSMediaRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-cssRules"><linktext>W3C - DOM Level 2 Style: CSSMediaRule.cssRules</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSMediaRule:media:get"><apiName>media</apiName><shortdesc>
		 A list of media types for this rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:MediaList</apiValueClassifier></apiValueDef><apiDesc>
		 A list of media types for this rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule"><linktext>MDC - cssRule: CSSMediaRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-mediaTypes"><linktext>W3C - DOM Level 2 Style: CSSMediaRule.media</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/media.html#media-types"><linktext>W3C - Recognized media types</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:Counter"><apiName>Counter</apiName><shortdesc>
	 The Counter interface is used to represent any counter or counters function value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Counter interface is used to represent any counter or counters function value. This interface reflects the values in 
	 the underlying style property.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:Counter:identifier:get"><apiName>identifier</apiName><shortdesc>
		 This attribute is used for the identifier of the counter.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the identifier of the counter.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-identifier"><linktext>W3C - DOM Level 2 Style: Counter.identifier</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Counter:listStyle:get"><apiName>listStyle</apiName><shortdesc>
		 This attribute is used for the style of the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the style of the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-listStyle"><linktext>W3C - DOM Level 2 Style: Counter.listStyle</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Counter:separator:get"><apiName>separator</apiName><shortdesc>
		 This attribute is used for the separator of the nested counters.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the separator of the nested counters.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-separator"><linktext>W3C - DOM Level 2 Style: Counter.separator</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:DocumentCSS"><apiName>DocumentCSS</apiName><shortdesc>
	 This interface represents a document with a CSS view.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.style.stylesheets:DocumentStyle</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface represents a document with a CSS view.
	 
	 <p>The getOverrideStyle method provides a mechanism through which a DOM author could effect immediate change 
	 to the style of an element without modifying the explicitly linked style sheets of a document or the inline 
	 style of elements in the style sheets. This style sheet comes after the author style sheet in the cascade 
	 algorithm and is called override style sheet. The override style sheet takes precedence over author style 
	 sheets. An "!important" declaration still takes precedence over a normal declaration. Override, author, 
	 and user style sheets all may contain "!important" declarations. User "!important" rules take precedence 
	 over both override and author "!important" rules, and override "!important" rules take precedence over 
	 author "!important" rules.</p>
	 
	 <p>The expectation is that an instance of the DocumentCSS interface can be obtained by using binding-specific 
	 casting methods on an instance of the Document interface.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.style.css:CSSFontFaceRule"><apiName>CSSFontFaceRule</apiName><shortdesc>
	 The CSSFontFaceRule interface represents a &amp;#64;font-face rule in a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSFontFaceRule interface represents a @font-face rule in a CSS style sheet. The 
	 @font-face rule is used to hold a set of font descriptions.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSFontFaceRule:style:get"><apiName>style</apiName><shortdesc>
		 The declaration-block of this rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 The declaration-block of this rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSFontFaceRule"><linktext>MDC - cssRule: CSSFontFaceRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSFontFaceRule-style"><linktext>W3C - DOM Level 2 Style: CSSFontFaceRule.style</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSRuleList"><apiName>CSSRuleList</apiName><shortdesc>
	 The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules.
	 
	 <p>The items in the CSSRuleList are accessible via an integral index, starting from 0.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSRuleList:length:get"><apiName>length</apiName><shortdesc>
		 The number of CSSRules in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of CSSRules in the list. The range of valid child rule indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc304101%28VS.85%29.aspx"><linktext>MSDN - length Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList-length"><linktext>W3C - DOM Level 2 Style: CSSRuleList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:Rect"><apiName>Rect</apiName><shortdesc>
	 The Rect interface is used to represent any rect value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Rect interface is used to represent any rect value. 
	 
	 <p>This interface reflects the values in 
	 the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects 
	 modify the style property.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:Rect:bottom:get"><apiName>bottom</apiName><shortdesc>
		 This attribute is used for the bottom of the rect.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the bottom of the rect.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-bottom"><linktext>W3C - DOM Level 2 Style: Rect.bottom</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Rect:left:get"><apiName>left</apiName><shortdesc>
		 This attribute is used for the left of the rect.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the left of the rect.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-left"><linktext>W3C - DOM Level 2 Style: Rect.left</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Rect:right:get"><apiName>right</apiName><shortdesc>
		 This attribute is used for the right of the rect.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the right of the rect.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-right"><linktext>W3C - DOM Level 2 Style: Rect.right</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Rect:top:get"><apiName>top</apiName><shortdesc>
		 This attribute is used for the top of the rect.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the top of the rect.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-top"><linktext>W3C - DOM Level 2 Style: Rect.top</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:DOMImplementationCSS"><apiName>DOMImplementationCSS</apiName><shortdesc>
	 This interface allows the DOM user to create a CSSStyleSheet outside the context of a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.core:DOMImplementation</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface allows the DOM user to create a CSSStyleSheet outside the context of a document. 
	 
	 <p>There is no way to associate the new CSSStyleSheet with a document in DOM Level 2.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.style.css:CSSStyleSheet"><apiName>CSSStyleSheet</apiName><shortdesc>
	 The CSSStyleSheet interface is a concrete interface used to represent a CSS style 
	 sheet i.e., a style sheet whose content type is "text/css".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.stylesheets:StyleSheet</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSStyleSheet interface is a concrete interface used to represent a CSS style 
	 sheet i.e., a style sheet whose content type is "text/css".
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSStyleSheet:cssRules:get"><apiName>cssRules</apiName><shortdesc>
		 The list of all CSS rules contained within the style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRuleList</apiValueClassifier></apiValueDef><apiDesc>
		 The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules.
		 
		 </apiDesc><example>
		 <codeblock>
		 // get the first style sheet’s first rule
		 first_rule = document.styleSheets[0].cssRules[0];</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/stylesheet.cssRules"><linktext>MDC - stylesheet: cssRules Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet"><linktext>W3C - DOM Level 2 Style: CSSStyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link><link href="dom.style.css.xml#CSSStyleSheet/rules"><linktext>rules</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleSheet:ownerRule:get"><apiName>ownerRule</apiName><shortdesc>
		 If this style sheet comes from an &amp;#64;import rule, the ownerRule attribute will contain 
		 the CSSImportRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRule</apiValueClassifier></apiValueDef><apiDesc>
		 If this style sheet comes from an @import rule, the ownerRule attribute will contain 
		 the CSSImportRule. In that case, the ownerNode attribute in the StyleSheet interface 
		 will be null. If the style sheet comes from an element or a processing instruction, 
		 the ownerRule attribute will be null and the ownerNode attribute will contain the Node.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/stylesheet.ownerRule"><linktext>MDC - stylesheet: ownerRule Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet"><linktext>W3C - DOM Level 2 Style: CSSStyleSheet</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleSheet:rules:get"><apiName>rules</apiName><shortdesc>
		 Retrieves a collection of rules defined in a style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8_incorrect"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5_no"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRuleList</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of rules defined in a style sheet.
		 
		 <p><b>Note (IE):</b> IE doesn't count @imports as rules, but splits up selectors like p#test, ul  into two rules.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;script&gt;
		 			function ruleColor(ruleIndex) {
		 				alert("The color of rule " + ruleIndex + " is " +
		 				document.styleSheets[0].rules.item(ruleIndex).style.color + ".");
		 			}
		 		&lt;/script&gt;
		 
		 		&lt;style&gt;
		 			.rule0 {color:"red"}
		 			.rule1 {color:"blue"} 
		 		&lt;/style&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body&gt;
		 		&lt;p class="rule0" id="oRule0Span"&gt;
		 			Rule 0 is applied to this line.
		 		&lt;/p&gt;
		 		&lt;p class="rule1" id="oRule1Span"&gt;
		 			Rule 1 is applied to this line.
		 		&lt;/p&gt;
		 
		 		&lt;button onclick="ruleColor(0)"&gt;Color of Rule 0&lt;/button&gt; 
		 
		 		&lt;button onclick="ruleColor(1)"&gt;Color of Rule 1&lt;/button&gt;
		 
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531199%28VS.85%29.aspx"><linktext>MSDN: rules Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link><link href="dom.style.css.xml#CSSStyleSheet/cssRules"><linktext>cssRules</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSStyleRule"><apiName>CSSStyleRule</apiName><shortdesc>
	 The CSSStyleRule interface represents a single rule set in a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSStyleRule interface represents a single rule set in a CSS style sheet.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSStyleRule:readOnly:get"><apiName>readOnly</apiName><shortdesc>
		 Retrieves whether the rule or style sheet is defined on the page or is imported.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false. Rule or style sheet is obtained through a link object or the &amp;#64;import rule.
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Retrieves whether the rule or style sheet is defined on the page or is imported.
		 
		 <p><b>Note (IE):</b> You cannot modify style sheets obtained through a link object or the @import rule while the designMode property is enabled.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534356%28VS.85%29.aspx"><linktext>MSDN - readOnly Property</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleRule:selectorText:get"><apiName>selectorText</apiName><shortdesc>
		 The textual representation of the selector for the rule set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string value 
		 has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this rule 
		 is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The textual representation of the selector for the rule set.
		 
		 <p><b>Note:</b> The implementation may have stripped out insignificant whitespace while parsing the selector. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // for cssrule: body { background-color: darkblue; }
		 cssrule = document.styleSheets[1];
		 !!TODO!! 
		 selector = cssrule.selectorText; 
		 // selector is now "body"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534626%28VS.85%29.aspx"><linktext>MSDN - selectorText Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule.selectorText"><linktext>MDC - cssRule.selectorText</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule-selectorText"><linktext>W3C - DOM Level 2 Style: CSSStyleRule.selectorText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleRule:style:get"><apiName>style</apiName><shortdesc>
		 The declaration-block of this rule set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 The declaration-block of this rule set.
		 
		 <p><b>Note:</b> The declaration block is that part of the style rule that appears within the braces 
		 and that actually provides the style definitions (for the selector, the part that comes before the braces).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 function stilo() {
		 	alert(document.styleSheets[0].cssRules[0].style.cssText);
		 }
		 // displays "background-color: gray;"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534651%28VS.85%29.aspx"><linktext>MSDN - STYLE Attribute</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule.style"><linktext>MDC - cssRule.style</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule-style"><linktext>W3C - DOM Level 2 Style: CSSStyleRule.style</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSPageRule"><apiName>CSSPageRule</apiName><shortdesc>
	 The CSSPageRule interface represents a &amp;#64;page rule within a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to 
	 specify the dimensions, orientation, margins, etc. of a page box for paged media.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSPageRule:selectorText:get"><apiName>selectorText</apiName><shortdesc>
		 The parsable textual representation of the page selector for the rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The parsable textual representation of the page selector for the rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSPageRule"><linktext>MDC - cssRule: CSSPageRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule-name"><linktext>W3C - DOM Level 2 Style: CSSPageRule.selectorText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPageRule:style:get"><apiName>style</apiName><shortdesc>
		 The declaration-block of this rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 The declaration-block of this rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSPageRule"><linktext>MDC - cssRule: CSSPageRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule-style"><linktext>W3C - DOM Level 2 Style: CSSPageRule.style</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:ElementCSSInlineStyle"><apiName>ElementCSSInlineStyle</apiName><shortdesc>
	 Inline style information attached to elements is exposed through the style attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Inline style information attached to elements is exposed through the style attribute. 
	 
	 <p>This represents 
	 the contents of the STYLE attribute for HTML elements (or elements in other schemas or DTDs which use 
	 the STYLE attribute in the same way). The expectation is that an instance of the ElementCSSInlineStyle 
	 interface can be obtained by using binding-specific casting methods on an instance of the Element 
	 interface when the element supports inline CSS style informations.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:ElementCSSInlineStyle:dom.style.css:ElementCSSInlineStyle:style:get"><apiName>style</apiName><shortdesc>
		 Returns an object that represents the element's style attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an object that represents the element's style attribute.
		 
		 <p>Note: Since the style property has the same (and highest) priority 
		 in the CSS cascade as an inline style declaration via the style 
		 attribute, it is useful for setting style on one specific element.</p>
		 
		 <p>Note: However, it is not useful for learning about the element's 
		 style in general, since it represents only the CSS declarations set 
		 in the element's inline style attribute, not those that come from 
		 style rules elsewhere, such as style rules in the &lt;head&gt; section, or
		 external style sheets.</p>
		 
		 <p><b>Note:</b> To get the values of all CSS properties for an element you 
		 should use window.getComputedStyle instead.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var div = document.getElementById("div1");
		 div.style.marginTop = ".25in";</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534651%28VS.85%29.aspx"><linktext>MSDN - STYLE Attribute</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.style"><linktext>MDC - element.style</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ElementCSSInlineStyle-style"><linktext>W3C - DOM Level 2 Style: ElementCSSInlineStyle.style</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSPrimitiveValue"><apiName>CSSPrimitiveValue</apiName><shortdesc>
	 The CSSPrimitiveValue interface represents a single CSS value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSValue</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSPrimitiveValue interface represents a single CSS value. 
	 
	 <p>This interface may be used to determine 
	 the value of a specific style property currently set in a block or to set a specific style property 
	 explicitly within the block. An instance of this interface might be obtained from the getPropertyCSSValue 
	 method of the CSSStyleDeclaration interface. A CSSPrimitiveValue object only occurs in a context of 
	 a CSS property.</p>
	 
	 <p>Conversions are allowed between absolute values (from millimeters to centimeters, from degrees to radians, 
	 and so on) but not between relative values. (For example, a pixel value cannot be converted to a 
	 centimeter value.) Percentage values can't be converted since they are relative to the parent value (or 
	 another property value). There is one exception for color percentage values: since a color percentage value 
	 is relative to the range 0-255, a color percentage value can be converted to a number; (see also the 
	 RGBColor interface).</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_ATTR"><apiName>CSS_ATTR</apiName><shortdesc>
		 The value is a attribute function.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>22</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a attribute function. The value can be obtained by using the getStringValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/generate.html#x16"><linktext>W3C - CSS2: The 'content' property</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_CM"><apiName>CSS_CM</apiName><shortdesc>
		 The value is a length (cm).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (cm). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_COUNTER"><apiName>CSS_COUNTER</apiName><shortdesc>
		 The value is a counter or counters function.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>23</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a counter or counters function. The value can be obtained by using the getCounterValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#counter"><linktext>W3C - CSS2: Counters</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_DEG"><apiName>CSS_DEG</apiName><shortdesc>
		 The value is an angle (deg).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>11</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is an angle (deg). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q19"><linktext>W3C - CSS2: Angles</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_DIMENSION"><apiName>CSS_DIMENSION</apiName><shortdesc>
		 The value is a number with an unknown dimension.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>18</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a number with an unknown dimension. The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_EMS"><apiName>CSS_EMS</apiName><shortdesc>
		 The value is a length (ems).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (ems). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_EXS"><apiName>CSS_EXS</apiName><shortdesc>
		 The value is a length (exs).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (exs). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_GRAD"><apiName>CSS_GRAD</apiName><shortdesc>
		 The value is an angle (grad).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>13</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is an angle (grad). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q19"><linktext>W3C - CSS2: Angles</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_HZ"><apiName>CSS_HZ</apiName><shortdesc>
		 The value is a frequency (Hz).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>16</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a frequency (Hz). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q21"><linktext>W3C - CSS2: Frequencies</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_IDENT"><apiName>CSS_IDENT</apiName><shortdesc>
		 The value is an identifier.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>21</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is an identifier. The value can be obtained by using the getStringValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#value-def-identifier"><linktext>W3C - CSS2: Characters and case</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_IN"><apiName>CSS_IN</apiName><shortdesc>
		 The value is a length (in).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (in). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_KHZ"><apiName>CSS_KHZ</apiName><shortdesc>
		 The value is a frequency (kHz).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>17</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a frequency (kHz). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q21"><linktext>W3C - CSS2: Frequencies</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_MM"><apiName>CSS_MM</apiName><shortdesc>
		 The value is a length (mm).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (mm). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_MS"><apiName>CSS_MS</apiName><shortdesc>
		 The value is a time (ms).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>14</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a time (ms). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q20"><linktext>W3C - CSS2: Times</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_NUMBER"><apiName>CSS_NUMBER</apiName><shortdesc>
		 The value is a simple number.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a simple number. The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q13"><linktext>W3C - CSS2: Integers and real numbers</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_PC"><apiName>CSS_PC</apiName><shortdesc>
		 The value is a length (pc).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>10</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (pc). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_PERCENTAGE"><apiName>CSS_PERCENTAGE</apiName><shortdesc>
		 The value is a percentage.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a percentage. The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#percentage-units"><linktext>W3C - CSS2: Percentages</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_PT"><apiName>CSS_PT</apiName><shortdesc>
		 The value is a length (pt).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>9</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (pt). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_PX"><apiName>CSS_PX</apiName><shortdesc>
		 The value is a length (px).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (px). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_RAD"><apiName>CSS_RAD</apiName><shortdesc>
		 The value is an angle (rad).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>12</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is an angle (rad). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q19"><linktext>W3C - CSS2: Angles</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_RECT"><apiName>CSS_RECT</apiName><shortdesc>
		 The value is a rect function.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>24</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a rect function. The value can be obtained by using the getRectValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/visufx.html#value-def-shape"><linktext>W3C - CSS2: Clipping: the 'clip' property</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_RGBCOLOR"><apiName>CSS_RGBCOLOR</apiName><shortdesc>
		 The value is a RGB color.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>25</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a RGB color. The value can be obtained by using the getRGBColorValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#color-units"><linktext>W3C - CSS2: Colors</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_S"><apiName>CSS_S</apiName><shortdesc>
		 The value is a time (s).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>15</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a time (s). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q20"><linktext>W3C - CSS2: Times</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_STRING"><apiName>CSS_STRING</apiName><shortdesc>
		 The value is a STRING.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>19</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a STRING. The value can be obtained by using the getStringValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#strings"><linktext>W3C - CSS2: Strings</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_UNKNOWN"><apiName>CSS_UNKNOWN</apiName><shortdesc>
		 The value is not a recognized CSS2 value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is not a recognized CSS2 value. The value can only be obtained by using the cssText attribute.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_URI"><apiName>CSS_URI</apiName><shortdesc>
		 The value is a URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>20</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a URI. The value can be obtained by using the getStringValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#uri"><linktext>W3C - CSS2: URL + URN = URI</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:primitiveType:get"><apiName>primitiveType</apiName><shortdesc>
		 The type of the value as defined by the constants specified above.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The type of the value as defined by the constants specified above.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-primitiveType"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue.primitiveType</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSValue"><apiName>CSSValue</apiName><shortdesc>
	 The CSSValue interface represents a simple or a complex value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSValue interface represents a simple or a complex value. A CSSValue 
	 object only occurs in a context of a CSS property.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSValue:CSS_CUSTOM"><apiName>CSS_CUSTOM</apiName><shortdesc>
		 The value is a custom value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a custom value.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue"><linktext>W3C - DOM Level 2 Style: CSSValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:CSS_INHERIT"><apiName>CSS_INHERIT</apiName><shortdesc>
		 The value is inherited and the cssText contains "inherit".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is inherited and the cssText contains "inherit".
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue"><linktext>W3C - DOM Level 2 Style: CSSValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:CSS_PRIMITIVE_VALUE"><apiName>CSS_PRIMITIVE_VALUE</apiName><shortdesc>
		 The value is a primitive value and an instance of the CSSPrimitiveValue 
		 interface can be obtained by using binding-specific casting methods on 
		 this instance of the CSSValue interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a primitive value and an instance of the CSSPrimitiveValue 
		 interface can be obtained by using binding-specific casting methods on 
		 this instance of the CSSValue interface.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue"><linktext>W3C - DOM Level 2 Style: CSSValue</linktext></link><link href="dom.style.css.xml#CSSPrimitiveValue"><linktext>dom.style.css.CSSPrimitiveValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:CSS_VALUE_LIST"><apiName>CSS_VALUE_LIST</apiName><shortdesc>
		 The value is a CSSValue list and an instance of the CSSValueList interface 
		 can be obtained by using binding-specific casting methods on this instance 
		 of the CSSValue interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a CSSValue list and an instance of the CSSValueList interface 
		 can be obtained by using binding-specific casting methods on this instance 
		 of the CSSValue interface.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue"><linktext>W3C - DOM Level 2 Style: CSSValue</linktext></link><link href="dom.style.css.xml#CSSValueList"><linktext>dom.style.css.CSSValueList</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:cssText:get"><apiName>cssText</apiName><shortdesc>
		 A string representation of the current value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_MODIFICATION_ERR: Raised if the 
		 specified CSS string value represents a different type of values than the 
		 values allowed by the CSS property.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this 
		 declaration is readonly or a property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 A string representation of the current value.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-cssText"><linktext>W3C - DOM Level 2 Style: CSSValue.cssText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:cssValueType:get"><apiName>cssValueType</apiName><shortdesc>
		 A code defining the type of the value as defined above.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 A code defining the type of the value as defined above.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-cssValueType"><linktext>W3C - DOM Level 2 Style: CSSValue.cssValueType</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:ViewCSS"><apiName>ViewCSS</apiName><shortdesc>
	 This interface represents a CSS view.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.views:AbstractView</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface represents a CSS view. The getComputedStyle method provides a read only access to the computed 
	 values of an element.
	 
	 <p>The expectation is that an instance of the ViewCSS interface can be obtained by using binding-specific casting 
	 methods on an instance of the AbstractView interface.</p>
	 
	 <p>Since a computed style is related to an Element node, if this element is removed from the document, the associated 
	 CSSStyleDeclaration and CSSValue related to this declaration are no longer valid.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.style.css:CSSStyleDeclaration"><apiName>CSSStyleDeclaration</apiName><shortdesc>
	 The CSSStyleDeclaration interface represents a single CSS declaration block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSStyleDeclaration interface represents a single CSS declaration block.
	 
	 <p class="style1">TODO: Add MS proprietary methods</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSStyleDeclaration:cssText:get"><apiName>cssText</apiName><shortdesc>
		 The parsable textual representation of the declaration block (excluding the 
		 surrounding curly braces).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this 
		 declaration is readonly or a property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The parsable textual representation of the declaration block (excluding the 
		 surrounding curly braces). 
		 
		 <p>Setting this attribute will result in the parsing 
		 of the new value and resetting of all the properties in the declaration block 
		 including the removal or addition of properties.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-cssText"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.cssText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleDeclaration:length:get"><apiName>length</apiName><shortdesc>
		 The number of properties that have been explicitly set in this declaration block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of properties that have been explicitly set in this declaration block. 
		 The range of valid indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-length"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.length</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleDeclaration:parentRule:get"><apiName>parentRule</apiName><shortdesc>
		 The CSS rule that contains this declaration block or null if this CSSStyleDeclaration 
		 is not attached to a CSSRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRule</apiValueClassifier></apiValueDef><apiDesc>
		 The CSS rule that contains this declaration block or null if this CSSStyleDeclaration 
		 is not attached to a CSSRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-parentRule"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.parentRule</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSValueList"><apiName>CSSValueList</apiName><shortdesc>
	 The CSSValueList interface provides the abstraction of an ordered collection of CSS values.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSValue</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSValueList interface provides the abstraction of an ordered collection of CSS values.
	 
	 <p>Some properties allow an empty list into their syntax. In that case, these properties take the 
	 none identifier. So, an empty list means that the property has the value none.</p>
	 
	 <p>The items in the CSSValueList are accessible via an integral index, starting from 0.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.css:CSSValueList:length:get"><apiName>length</apiName><shortdesc>
		 The number of CSSValues in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of CSSValues in the list. The range of valid values of the indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList-length"><linktext>W3C - DOM Level 2 Style: CSSValueList.length</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.style.stylesheets"><apiName>dom.style.stylesheets</apiName><apiClassifier id="dom.style.stylesheets:DocumentStyle"><apiName>DocumentStyle</apiName><shortdesc>
	 The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document 
	 can be retrieved.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document 
	 can be retrieved. The expectation is that an instance of the DocumentStyle interface can be obtained 
	 by using binding-specific casting methods on an instance of the Document interface.
	 
	 <p><b>Note:</b> CSSOM is in its very early stages. The intention is that this specification will in due course supersede DOM Level 2 Style. </p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:lastStyleSheetSet:get"><apiName>lastStyleSheetSet</apiName><shortdesc>
		 This attribute must initially have the value null.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute must initially have the value null. Its value changes when the selectedStyleSheetSet  attribute is set.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.lastStyleSheetSet"><linktext>MDC - Document.lastStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-lastStyleSheetSet"><linktext>W3C - DocumentStyle.lastStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:preferredStyleSheetSet:get"><apiName>preferredStyleSheetSet</apiName><shortdesc>
		 This attribute must be the preferred style sheet set as set by the author.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute must be the preferred style sheet set as set by the author. It is determined from the order 
		 of style sheet declarations and the Default-Style HTTP headers. If there is no preferred style sheet set, 
		 this attribute must  be the empty string. The case of this attribute must  exactly match the case given by 
		 the author where the preferred style sheet is specified or implied. This attribute must  never be null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.preferredStyleSheetSet"><linktext>MDC - Document.preferredStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-preferredStyleSheetSet"><linktext>W3C - DocumentStyle.preferredStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:selectedStyleSheetSet:get"><apiName>selectedStyleSheetSet</apiName><shortdesc>
		 This attribute indicates which style sheet set is in use.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute indicates which style sheet set is in use. This attribute is live; changing the disabled attribute 
		 on style sheets directly will change the value of this attribute.
		 
		 <p>If all the sheets that are enabled and have a title have the same title (by case-sensitive  comparisons) 
		 then the value of this attribute must be exactly equal to the title of the first enabled style sheet with a 
		 title in the styleSheets  list. Otherwise, if style sheets from different sets are enabled, then the return 
		 value must be null (there is no way to determine what the currently selected style sheet set is in those 
		 conditions). Otherwise, either all style sheets that have a title are disabled, or there are no alternative 
		 style sheets, and selectedStyleSheetSet  must return the empty string.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.selectedStyleSheetSet"><linktext>MDC - Document.selectedStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-selectedStyleSheetSet"><linktext>W3C - DocumentStyle.selectedStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:styleSheetSets:get"><apiName>styleSheetSets</apiName><shortdesc>
		 This must be a live list of the currently available style sheet sets.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMStringList</apiValueClassifier></apiValueDef><apiDesc>
		 This must be a live list of the currently available style sheet sets. This list is constructed by enumerating 
		 all the style sheets for this document available to the implementation, in the order they are listed in the 
		 styleSheets  attribute, adding the title of each style sheet with a title to the list, avoiding duplicates by 
		 dropping titles that match (case-sensitively) titles that have already been added to the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.styleSheetSets"><linktext>MDC - Document.styleSheetSets</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-styleSheetSets"><linktext>W3C - DocumentStyle.styleSheetSets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:styleSheets:get"><apiName>styleSheets</apiName><shortdesc>
		 A list containing all the style sheets explicitly linked into or embedded in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:StyleSheetList</apiValueClassifier></apiValueDef><apiDesc>
		 A list containing all the style sheets explicitly linked into or embedded in a document. For HTML 
		 documents, this includes external style sheets, included via the HTML LINK element, and inline 
		 STYLE elements. In XML, this includes external style sheets, included via style sheet 
		 processing instructions.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531200%28VS.85%29.aspx"><linktext>MSDN: styleSheets Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.styleSheets"><linktext>MDC - Document.styleSheets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle"><linktext>W3C - DOM Level 2 Style: DocumentStyle..styleSheets</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-stylesheets"><linktext>W3C - CSSOM: DocumentStyle.styleSheets</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.stylesheets:MediaList"><apiName>MediaList</apiName><shortdesc>
	 The MediaList interface provides the abstraction of an ordered collection of media, without 
	 defining or constraining how this collection is implemented.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MediaList interface provides the abstraction of an ordered collection of media, without 
	 defining or constraining how this collection is implemented. An empty list is the same as 
	 a list that contains the medium "all".
	 
	 The items in the MediaList are accessible via an integral index, starting from 0.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.stylesheets:MediaList:length:get"><apiName>length</apiName><shortdesc>
		 The number of media in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of media in the list. The range of valid media is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList"><linktext>W3C - DOM Level 2 Style: length Property</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:MediaList:mediaText:get"><apiName>mediaText</apiName><shortdesc>
		 The parsable textual representation of the media list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified string value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The parsable textual representation of the media list. This is a comma-separated list of media.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList"><linktext>W3C - DOM Level 2 Style: mediaText Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.stylesheets:LinkStyle"><apiName>LinkStyle</apiName><shortdesc>
	 The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible 
	 for linking it into a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible 
	 for linking it into a document. An instance of the LinkStyle interface can be obtained using binding-specific 
	 casting methods on an instance of a linking node.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.stylesheets:LinkStyle:sheet:get"><apiName>sheet</apiName><shortdesc>
		 The style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:StyleSheet</apiValueClassifier></apiValueDef><apiDesc>
		 The style sheet.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-LinkStyle"><linktext>W3C - DOM Level 2 Style: sheet Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.stylesheets:StyleSheet"><apiName>StyleSheet</apiName><shortdesc>
	 The StyleSheet interface is the abstract base interface for any type of style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The StyleSheet interface is the abstract base interface for any type of style sheet. It represents 
	 a single style sheet associated with a structured document. In HTML, the StyleSheet interface 
	 represents either an external style sheet, included via the HTML LINK element, or an inline STYLE 
	 element. In XML, this interface represents an external style sheet, included via a style sheet 
	 processing instruction.
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.stylesheets:StyleSheet:disabled:get"><apiName>disabled</apiName><shortdesc>
		 This property indicates whether the current stylesheet is applied or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 This property indicates whether the current stylesheet is applied or not.
		 
		 </apiDesc><example>
		 <codeblock>
		 // if the stylesheet is disabled... 
		 if (stylesheet.disabled) {
		 	// apply style in-line 
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533732%28VS.85%29.aspx"><linktext>MSDN: disabled Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.disabled"><linktext>MDC - stylesheet: disabled Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:href:get"><apiName>href</apiName><shortdesc>
		 If the style sheet is a linked style sheet, the value of its attribute is its location.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 If the style sheet is a linked style sheet, the value of its attribute is its location. For inline 
		 style sheets, the value of this attribute is null.
		 
		 </apiDesc><example>
		 <codeblock>
		 // on a local machine: 
		 &lt;html&gt; 
		 	&lt;head&gt; 
		 		&lt;link rel="StyleSheet" href="example.css" type="text/css" /&gt; 
		 		&lt;script&gt; 
		 			function sref() { 
		 				alert(document.styleSheets[0].href); 
		 			}
		 		&lt;/script&gt; 
		 	&lt;/head&gt; 
		 	&lt;body&gt; 
		 		&lt;div class="thunder"&gt;Thunder&lt;/div&gt;
		 
		 		&lt;button onclick="sref()"&gt;ss&lt;/button&gt;
		 	&lt;/body&gt; 
		 &lt;/html&gt;
		 // returns "file:////C:/Windows/Desktop/example.css</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533860%28VS.85%29.aspx"><linktext>MSDN: href Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.href"><linktext>MDC - stylesheet: href Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:media:get"><apiName>media</apiName><shortdesc>
		 Specifies the intended destination medium for style information.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"screen" for Firefox and "all" for Internet Explorer
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Specifies the intended destination medium for style information. 
		 
		 <b>DOM 1 Spec</b>
		 <p>A string describing a single medium or a comma-separated list.</p>
		 
		 <b>DOM Level 2 Style Spec</b>
		 <p>The intended destination media for style information. The media is often specified in the ownerNode. 
		 If no media has been specified, the MediaList will be empty.</p>
		 
		 <p><b>Note:</b> According to DOM Level 2 Style specification, the Media property is supposed to be Read-Only and return an 
		 instance of the MediaList object. Most browsers handle this property as it was specified in DOM Level 1.</p>
		 
		 <p><b>Note:</b> Acceptable values are as listed:</p>
		 <ul>
		 	<li>screen - Intended for non-paged computer screens.</li>
		 	<li>tty - Intended for media using a fixed-pitch character grid, such as teletypes, terminals, or portable devices with limited display capabilities.</li>
		 	<li>tv - Intended for television-type devices (low resolution, color, limited scrollability).</li>
		 	<li>projection - Intended for projectors.</li>
		 	<li>handheld - Intended for handheld devices (small screen, monochrome, bitmapped graphics, limited bandwilih).</li>
		 	<li>print - Intended for paged, opaque material and for documents viewed on screen in print preview mode.</li>
		 	<li>braille - Intended for braille tactile feedback devices.</li>
		 	<li>aural - Intended for speech synthesizers.</li>
		 	<li>all - Suitable for all devices. </li>
		 </ul>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534161%28VS.85%29.aspx"><linktext>MSDN: media Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.media"><linktext>MDC - stylesheet: media Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.w3.org/TR/1998/REC-html40-19980424/types.html#type-media-descriptors"><linktext>W3C - Media descriptors</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:ownerNode:get"><apiName>ownerNode</apiName><shortdesc>
		 The node that associates this style sheet with the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 The node that associates this style sheet with the document. For HTML, this may be the corresponding 
		 LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that 
		 are included by other style sheets, the value of this attribute is null.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;link rel="StyleSheet" href="example.css" type="text/css" /&gt;
		 		&lt;script&gt;
		 			function stilo() {
		 				alert(document.styleSheets[0].ownerNode);
		 			}
		 		&lt;/script&gt; 
		 	&lt;/head&gt;
		 
		 	&lt;body&gt; 
		 		&lt;div class="thunder"&gt;Thunder&lt;/div&gt;
		 
		 		&lt;button onclick="sref()"&gt;ss&lt;/button&gt;
		 	&lt;/body&gt; 
		 	// displays "object HTMLLinkElement"
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/stylesheet.ownerNode"><linktext>MDC - stylesheet: ownerNode Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:parentStyleSheet:get"><apiName>parentStyleSheet</apiName><shortdesc>
		 For style sheet languages that support the concept of style sheet inclusion, this attribute represents 
		 the including style sheet, if one exists.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:StyleSheet</apiValueClassifier></apiValueDef><apiDesc>
		 For style sheet languages that support the concept of style sheet inclusion, this attribute represents 
		 the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style 
		 sheet language does not support inclusion, the value of this attribute is null.
		 
		 </apiDesc><example>
		 <codeblock>
		 // find the top level stylesheet
		 if (stylesheet.parentStyleSheet) {
		 	sheet = stylesheet.parentStyleSheet;
		 } else {
		 	sheet = stylesheet;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534329%28VS.85%29.aspx"><linktext>MSDN: parentStyleSheet Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.parentStyleSheet"><linktext>MDC - stylesheet: parentStyleSheet Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:title:get"><apiName>title</apiName><shortdesc>
		 The advisory title.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The advisory title.
		 
		 <p><b>Note:</b> The title is often specified in the ownerNode.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534682%28VS.85%29.aspx"><linktext>MSDN: title Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.title"><linktext>MDC - stylesheet: title Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:type:get"><apiName>type</apiName><shortdesc>
		 This specifies the style sheet language for this style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This specifies the style sheet language for this style sheet. The style sheet language is 
		 specified as a content type. The content type is often specified in the ownerNode.
		 
		 </apiDesc><example>
		 <codeblock>ss.type = "text/css";</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534699%28VS.85%29.aspx"><linktext>MSDN: type Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.type"><linktext>MDC - stylesheet: type Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.stylesheets:StyleSheetList"><apiName>StyleSheetList</apiName><shortdesc>
	 The StyleSheetList interface provides the abstraction of an ordered collection of style sheets.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The StyleSheetList interface provides the abstraction of an ordered collection of style sheets.
	 
	 <p>The items in the StyleSheetList are accessible via an integral index, starting from 0.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.style.stylesheets:StyleSheetList:length:get"><apiName>length</apiName><shortdesc>
		 The number of StyleSheets in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.styleSheets"><linktext>MDC - Document.styleSheets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList-length"><linktext>W3C - DOM Level 2 Style: StyleSheetList.length</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.tr.range"><apiName>dom.tr.range</apiName><apiClassifier id="dom.tr.range:RangeExceptionCode"><apiName>RangeExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.tr.range:RangeExceptionCode:BAD_BOUNDARYPOINTS_ERR"><apiName>BAD_BOUNDARYPOINTS_ERR</apiName><shortdesc>
		 If the boundary-points of a Range do not meet specific requirements.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the boundary-points of a Range do not meet specific requirements.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:RangeExceptionCode:INVALID_NODE_TYPE_ERR"><apiName>INVALID_NODE_TYPE_ERR</apiName><shortdesc>
		 If the container of an boundary-point of a Range is being set to either a node of an invalid type or a node with an ancestor of an invalid type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the container of an boundary-point of a Range is being set to either a node of an invalid type or a node with an ancestor of an invalid type.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.tr.range:Range"><apiName>Range</apiName><shortdesc>
	 The Range object represents a fragment of a document that can contain nodes and parts of text nodes in a given document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>cssom.view:RangeView</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Range object represents a fragment of a document that can contain nodes and parts of text nodes in a given document. 
	 
	 <p>A range can be created using the createRange method of the Document object. Range objects can also be retrieved by using 
	 the getRangeAt method of the selection object. </p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.tr.range:Range:END_TO_END"><apiName>END_TO_END</apiName><shortdesc>
		 Compare end boundary-point of sourceRange to end boundary-point of Range on which 
		 compareBoundaryPoints is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Compare end boundary-point of sourceRange to end boundary-point of Range on which 
		 compareBoundaryPoints is invoked.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:Range:END_TO_START"><apiName>END_TO_START</apiName><shortdesc>
		 Compare end boundary-point of sourceRange to start boundary-point of Range on which 
		 compareBoundaryPoints is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Compare end boundary-point of sourceRange to start boundary-point of Range on which 
		 compareBoundaryPoints is invoked.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:Range:NODE_AFTER"><apiName>NODE_AFTER</apiName><shortdesc>
		 Node ends after the Range 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Node ends after the Range 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.tr.range.xml#Range/compareNode()"><linktext>dom.tr.range.Range.compareNode()</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:NODE_BEFORE"><apiName>NODE_BEFORE</apiName><shortdesc>
		 Node starts before the Range 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Node starts before the Range 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.tr.range.xml#Range/compareNode()"><linktext>dom.tr.range.Range.compareNode()</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:NODE_BEFORE_AND_AFTER"><apiName>NODE_BEFORE_AND_AFTER</apiName><shortdesc>
		 Node starts before and ends after the Range 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Node starts before and ends after the Range 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.tr.range.xml#Range/compareNode()"><linktext>dom.tr.range.Range.compareNode()</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:NODE_INSIDE"><apiName>NODE_INSIDE</apiName><shortdesc>
		 Node starts after and ends before the Range, i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata><asCustoms><as-of>Gecko 1.9
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Node starts after and ends before the Range, i.e. the Node is completely selected by the Range. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.tr.range.xml#Range/compareNode()"><linktext>dom.tr.range.Range.compareNode()</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:START_TO_END"><apiName>START_TO_END</apiName><shortdesc>
		 Compare start boundary-point of sourceRange to end boundary-point of Range on which 
		 compareBoundaryPoints is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Compare start boundary-point of sourceRange to end boundary-point of Range on which 
		 compareBoundaryPoints is invoked.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:Range:START_TO_START"><apiName>START_TO_START</apiName><shortdesc>
		 Compare start boundary-point of sourceRange to start boundary-point of Range on which 
		 compareBoundaryPoints is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Compare start boundary-point of sourceRange to start boundary-point of Range on which 
		 compareBoundaryPoints is invoked.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:Range:collapsed:get"><apiName>collapsed</apiName><shortdesc>
		 Returns a boolean of true if the start and end boundary points of the Range are the same point in the DOM, false if not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Returns a boolean of true if the start and end boundary points of the Range are the same point in the DOM, false if not.
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode, startOffset); 
		 range.setEnd(endNode, endOffset);
		 isCollapsed = range.collapsed;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.collapsed"><linktext>MDC - range.collapsed</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-collapsed"><linktext>W3C - DOM Level 2 Range: Range.collapsed</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:commonAncestorContainer:get"><apiName>commonAncestorContainer</apiName><shortdesc>
		 The deepest common ancestor container of the Range's two boundary-points.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The deepest common ancestor container of the Range's two boundary-points.
		 
		 <p><b>Note:</b> Returns the deepest, or further down the document tree, Node that contains both the startContainer and 
		 endContainer nodes. Since a Range need not be continuous, and may also partially select Nodes, this is a convenient way to find 
		 a Node which encloses a Range. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset);
		 range.setEnd(endNode,endOffset);
		 rangeAncestor = range.commonAncestorContainer;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.commonAncestorContainer"><linktext>MDC - range.commonAncestorContainer</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-commonParent"><linktext>W3C - DOM Level 2 Range: Range.commonAncestorContainer</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:endContainer:get"><apiName>endContainer</apiName><shortdesc>
		 Node within which the Range ends
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Node within which the Range ends
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset); 
		 range.setEnd(endNode,endOffset);
		 endRangeNode = range.endContainer;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.endContainer"><linktext>MDC - range.endContainer</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-endParent"><linktext>W3C - DOM Level 2 Range: Range.endContainer</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:endOffset:get"><apiName>endOffset</apiName><shortdesc>
		 Offset within the ending node of the Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Offset within the ending node of the Range.
		 
		 <p><b>Note:</b> endOffset has two meanings. If the endContainer is a Node of type Text, Comment, or CDATASection, 
		 then the offset is the number of characters from the start of the endContainer to the boundary point of the Range. For other 
		 Node types, the endOffset is the number of child nodes between the start of the endContainer and the boundary point of the Range.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset);
		 range.setEnd(endNode,endOffset);
		 endRangeOffset = range.endOffset;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.endOffset"><linktext>MDC - range.endOffset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-endOffset"><linktext>W3C - DOM Level 2 Range: Range.endOffset</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:startContainer:get"><apiName>startContainer</apiName><shortdesc>
		 Node within which the Range begins.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Node within which the Range begins.
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset);
		 range.setEnd(endNode,endOffset);
		 startRangeNode = range.startContainer;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.startContainer"><linktext>MDC - range.startContainer</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-startParent"><linktext>W3C - DOM Level 2 Range: Range.startContainer</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:startOffset:get"><apiName>startOffset</apiName><shortdesc>
		 Offset within the starting node of the Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Offset within the starting node of the Range.
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset);
		 range.setEnd(endNode,endOffset);
		 startRangeOffset = range.startOffset;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.startOffset"><linktext>MDC - range.startOffset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-startOffset"><linktext>W3C - DOM Level 2 Range: Range.startOffset</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.tr.range:RangeException"><apiName>RangeException</apiName><shortdesc>
	 Range operations may throw a RangeException as specified in their method descriptions.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Range operations may throw a RangeException as specified in their method descriptions.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.tr.range:RangeException:code:get"><apiName>code</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.tr.range:DocumentRange"><apiName>DocumentRange</apiName><shortdesc>
	 Contains a method to create a range object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Contains a method to create a range object.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="dom.tr.traversal"><apiName>dom.tr.traversal</apiName><apiClassifier id="dom.tr.traversal:DocumentTraversal"><apiName>DocumentTraversal</apiName><shortdesc>
	 Contains methods that create iterators and tree-walkers to traverse a node and its children in document order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Contains methods that create iterators and tree-walkers to traverse a node and its children in document order.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.tr.traversal:TreeWalker"><apiName>TreeWalker</apiName><shortdesc>
	 Represents the nodes of a document subtree and a position within them.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Represents the nodes of a document subtree and a position within them.
	 
	 <p>A <codeph>TreeWalker</codeph> can be created using the createTreeWalker()<codeph/> method of the <codeph>Document</codeph> object.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:currentNode:get"><apiName>currentNode</apiName><shortdesc>
		 The node at which the TreeWalker is currently positioned.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if an attempt is made to set currentNode to <codeph>null</codeph>.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The node at which the <codeph>TreeWalker</codeph> is currently positioned.
		 
		 <p>Alterations to the DOM tree may cause the current node to no longer be accepted by the <codeph>TreeWalker</codeph>'s 
		 associated filter. currentNode may also be explicitly set to any node, whether or not it is within the 
		 subtree specified by the root node or would be accepted by the filter and <codeph>whatToShow</codeph> flags. Further 
		 traversal occurs relative to currentNode even if it is not part of the current view, by applying the 
		 filters in the requested direction; if no traversal is possible, currentNode is not changed.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.currentNode"><linktext>MDC - treeWalker: currentNode Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: currentNode Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:expandEntityReferences:get"><apiName>expandEntityReferences</apiName><shortdesc>
		 The value of this flag determines whether the children of entity reference nodes are visible to the TreeWalker.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The value of this flag determines whether the children of entity reference nodes are visible to the <codeph>TreeWalker</codeph>. 
		 If false, they and their descendants will be rejected. Note that this rejection takes precedence over <codeph>whatToShow</codeph> 
		 and the filter, if any.
		 
		 <p>To produce a view of the document that has entity references expanded and does not expose the entity reference 
		 node itself, use the <codeph>whatToShow</codeph> flags to hide the entity reference node and set <codeph>expandEntityReferences</codeph> to true 
		 when creating the <codeph>TreeWalker</codeph>. To produce a view of the document that has entity reference nodes but no entity 
		 expansion, use the <codeph>whatToShow</codeph> flags to show the entity reference node and set <codeph>expandEntityReferences</codeph> to false.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.ExpandEntityReferences"><linktext>MDC - treeWalker: ExpandEntityReferences Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: ExpandEntityReferences Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:filter:get"><apiName>filter</apiName><shortdesc>
		 The filter used to screen nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.tr.traversal:NodeFilter</apiValueClassifier></apiValueDef><apiDesc>
		 The filter used to screen nodes.
		 
		 <p>Note: When creating the TreeWalker, the filter object is passed in as the third parameter, and the object 
		 method acceptNode(node) is called on every single node to determine whether or not to accept it. This function 
		 should return the constant NodeFilter.FILTER_ACCEPT for cases when the node should be accepted and 
		 NodeFilter.FILTER_REJECT for cases when the node should be rejected.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var treeWalker = document.createTreeWalker(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 nodeFilter = treeWalker.filter; // document.body in this case</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.filter"><linktext>MDC - treeWalker: filter Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: filter Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:root:get"><apiName>root</apiName><shortdesc>
		 The root node of the TreeWalker, as specified when it was created.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 The root node of the <codeph>TreeWalker</codeph>, as specified when it was created.
		 
		 </apiDesc><example>
		 <codeblock>
		 var treeWalker = document.createTreeWalker(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 root = treeWalker.root; // document.body in this case</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.root"><linktext>MDC - treeWalker: root Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: root Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:whatToShow:get"><apiName>whatToShow</apiName><shortdesc>
		 This attribute determines which node types are presented via the TreeWalker.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 This attribute determines which node types are presented via the <codeph>TreeWalker</codeph>. The available set of constants is 
		 defined in the NodeFilter interface. Nodes not accepted by <codeph>whatToShow</codeph> will be skipped, but their children may 
		 still be considered. Note that this skip takes precedence over the filter, if any.
		 
		 </apiDesc><example>
		 <codeblock>
		 var treeWalker = document.createTreeWalker(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 if((treeWalker.whatToShow == NodeFilter.SHOW_ALL) || 
		 	(treeWalker.whatToShow % (NodeFilter.SHOW_COMMENT)) &gt;= NodeFilter.SHOW_COMMENT) {
		 	// treeWalker will show comments
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="dom.tr.traversal.xml#NodeFilter"><linktext>NodeFilter</linktext></link><link href="http://developer.mozilla.org/en/DOM/treeWalker.whatToShow"><linktext>MDC - treeWalker: whatToShow Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: whatToShow Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.tr.traversal:NodeIterator"><apiName>NodeIterator</apiName><shortdesc>
	 Allows you to iterate over the members of a list of the nodes in a subtree of the DOM, in document order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Allows you to iterate over the members of a list of the nodes in a subtree of the DOM, in document order.
	 
	 A <codeph>NodeIterator</codeph> can be created using the createNodeIterator()<codeph/> method of the <codeph>Document</codeph> object, as follows:
	 
	 <codeblock>var nodeIterator = document.createNodeIterator();</codeblock>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:expandEntityReferences:get"><apiName>expandEntityReferences</apiName><shortdesc>
		 Returns a flag indicating whether or not the children of entity reference nodes are visible to the NodeIterator.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a flag indicating whether or not the children of entity reference nodes are visible to the NodeIterator.
		 
		 <p>If this value is false, the children of entity reference nodes (as well as all of their descendants) are rejected.  
		 This takes precedence over the whatToShow value and the filter.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 expand = nodeIterator.expandEntityReferences;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.expandEntityReferences"><linktext>MDC - NodeIterator: expandEntityReferences Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: expandEntityReferences Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:filter:get"><apiName>filter</apiName><shortdesc>
		 Returns an object with a method acceptNode(node).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.tr.traversal:NodeFilter</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an object with a method acceptNode(node). This is the NodeFilter used to screen nodes.
		 
		 <p>Note: When creating the NodeIterator, the filter object is passed in as the third parameter, and the 
		 object method acceptNode(node) is called on every single node to determine whether or not to accept it. 
		 This function should return the constant NodeFilter.FILTER_ACCEPT for cases when the node should be 
		 accepted and NodeFilter.FILTER_REJECT for cases when the node should be rejected.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 nodeFilter = nodeIterator.filter</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.filter"><linktext>MDC - NodeIterator: filter Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: filter Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:pointerBeforeReferenceNode:get"><apiName>pointerBeforeReferenceNode</apiName><shortdesc>
		 A Boolean value that indicates whether the NodeIterator is anchored before (if this value is true) or after (if this value is false) the anchor node indicated by the referenceNode property.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 A Boolean value that indicates whether the NodeIterator is anchored before (if this value is true) or after (if this value is false) the anchor node indicated by the referenceNode property.
		 
		 <p>Note: This property was introduced by WebKit and is used for testing; it can also be used by debuggers.  It is not part of the DOM specification.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 flag = nodeIterator.pointerBeforeReferenceNode;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.pointerBeforeReferenceNode"><linktext>MDC - NodeIterator: pointerBeforeReferenceNode Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:referenceNode:get"><apiName>referenceNode</apiName><shortdesc>
		 Returns the node to which the iterator is anchored; as new nodes are inserted, the iterator remains anchored to the reference node as specified by this property.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node to which the iterator is anchored; as new nodes are inserted, the iterator remains anchored to the reference node as specified by this property.
		 
		 <p>Note: This property was introduced by WebKit and is used for testing; it can also be used by debuggers.  It is not part of the DOM specification.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 node = nodeIterator.referenceNode;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.referenceNode"><linktext>MDC - NodeIterator: referenceNode Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:root:get"><apiName>root</apiName><shortdesc>
		 Returns the node that is the root of what the NodeIterator traverses.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node that is the root of what the NodeIterator traverses.
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 root = nodeIterator.root; // document.body in this case</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.root"><linktext>MDC - NodeIterator: root Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: root Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:whatToShow:get"><apiName>whatToShow</apiName><shortdesc>
		 Returns a number signifying what types of nodes should be returned by the NodeIterator.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns a number signifying what types of nodes should be returned by the NodeIterator.
		 
		 <p>The available set of constants is defined in the NodeFilter interface. Nodes not accepted 
		 by whatToShow will be skipped, but their children may still be considered. Note that this 
		 skip takes precedence over the filter, if any.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 if((nodeIterator.whatToShow == NodeFilter.SHOW_ALL) || 
		 	(nodeIterator.whatToShow % (NodeFilter.SHOW_COMMENT)) &gt;= NodeFilter.SHOW_COMMENT) {
		 	// nodeIterator will show comments
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.whatToShow"><linktext>MDC - NodeIterator: whatToShow Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: whatToShow Property</linktext></link><link href="dom.tr.traversal.xml#NodeFilter"><linktext>NodeFilter</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.tr.traversal:NodeFilter"><apiName>NodeFilter</apiName><shortdesc>
	 Filters are objects that know how to "filter out" nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Filters are objects that know how to "filter out" nodes. 
	 
	 <p>If a <codeph>NodeIterator</codeph> or <codeph>TreeWalker</codeph> is given a <codeph>NodeFilter</codeph>, it 
	 applies the filter before it returns the next node. If the filter says to accept the node, the traversal logic 
	 returns it; otherwise, traversal looks for the next node and pretends that the node that was rejected was not there.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.tr.traversal:NodeFilter:FILTER_ACCEPT"><apiName>FILTER_ACCEPT</apiName><shortdesc>
		 Accept the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Accept the node. Navigation methods defined for NodeIterator or TreeWalker will return this node.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:FILTER_REJECT"><apiName>FILTER_REJECT</apiName><shortdesc>
		 Reject the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Reject the node. Navigation methods defined for NodeIterator or TreeWalker will not return this node. For 
		 TreeWalker, the children of this node will also be rejected. NodeIterators treat this as a synonym for 
		 FILTER_SKIP.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:FILTER_SKIP"><apiName>FILTER_SKIP</apiName><shortdesc>
		 Skip this single node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Skip this single node. Navigation methods defined for NodeIterator or TreeWalker will not return this node. 
		 For both NodeIterator and TreeWalker, the children of this node will still be considered.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ALL"><apiName>SHOW_ALL</apiName><shortdesc>
		 Show all Nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>-1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show all <codeph>Nodes</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ATTRIBUTE"><apiName>SHOW_ATTRIBUTE</apiName><shortdesc>
		 Show Attr nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Attr</codeph> nodes. This is meaningful only when creating an iterator or tree-walker with an attribute node as 
		 its <codeph>root</codeph>; in this case, it means that the attribute node will appear in the first position of the iteration 
		 or traversal. Since attributes are never children of other nodes, they do not appear when traversing over 
		 the document tree.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_CDATA_SECTION"><apiName>SHOW_CDATA_SECTION</apiName><shortdesc>
		 Show CDATASection nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>CDATASection</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_COMMENT"><apiName>SHOW_COMMENT</apiName><shortdesc>
		 Show Comment nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>128</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Comment</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_DOCUMENT"><apiName>SHOW_DOCUMENT</apiName><shortdesc>
		 Show Document nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>256</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Document</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_DOCUMENT_FRAGMENT"><apiName>SHOW_DOCUMENT_FRAGMENT</apiName><shortdesc>
		 Show DocumentFragment nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1024</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>DocumentFragment</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_DOCUMENT_TYPE"><apiName>SHOW_DOCUMENT_TYPE</apiName><shortdesc>
		 Show DocumentType nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>512</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>DocumentType</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ELEMENT"><apiName>SHOW_ELEMENT</apiName><shortdesc>
		 Show Element nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show Element nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ENTITY"><apiName>SHOW_ENTITY</apiName><shortdesc>
		 Show Entity nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>32</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Entity</codeph> nodes. This is meaningful only when creating an iterator or tree-walker with an <codeph>Entity</codeph> node as 
		 its <codeph>root</codeph>; in this case, it means that the <codeph>Entity</codeph> node will appear in the first position of the traversal. 
		 Since entities are not part of the document tree, they do not appear when traversing over the document tree.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ENTITY_REFERENCE"><apiName>SHOW_ENTITY_REFERENCE</apiName><shortdesc>
		 Show EntityReference nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>EntityReference</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_NOTATION"><apiName>SHOW_NOTATION</apiName><shortdesc>
		 Show Notation nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2048</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Notation</codeph> nodes. This is meaningful only when creating an iterator or tree-walker with a <codeph>Notation</codeph> node as 
		 its <codeph>root</codeph>; in this case, it means that the <codeph>Notation</codeph> node will appear in the first position of the traversal. 
		 Since notations are not part of the document tree, they do not appear when traversing over the document tree.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_PROCESSING_INSTRUCTION"><apiName>SHOW_PROCESSING_INSTRUCTION</apiName><shortdesc>
		 Show ProcessingInstruction nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>64</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>ProcessingInstruction</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_TEXT"><apiName>SHOW_TEXT</apiName><shortdesc>
		 Show Text nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Text</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="dom.validation"><apiName>dom.validation</apiName><apiClassifier id="dom.validation:ExceptionVAL"><apiName>ExceptionVAL</apiName><shortdesc>
	 Some Validation operations may throw an ExceptionVAL as described in their descriptions.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Some Validation operations may throw an ExceptionVAL as described in their descriptions. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.validation:ExceptionVAL:dom.validation:ExceptionVAL:code:get"><apiName>code</apiName><shortdesc>
		 The specific exception code.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The specific exception code.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL"><linktext>W3C - ExceptionVAL</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:CharacterDataEditVAL"><apiName>CharacterDataEditVAL</apiName><shortdesc>
	 When validating CharacterData nodes, the NodeEditVAL.nodeValidity  operation must find the nearest parent node 
	 in order to do this; if no parent node is found, VAL_UNKNOWN  is returned.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.validation:NodeEditVAL</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 When validating CharacterData nodes, the NodeEditVAL.nodeValidity  operation must find the nearest parent node 
	 in order to do this; if no parent node is found, VAL_UNKNOWN  is returned. In addition, when VAL_INCOMPLETE  
	 is passed in as an argument to the NodeEditVAL.nodeValidity operation to operate on such nodes, the operation 
	 considers all the text and not just some of it. 
	 
	 <p>An object implementing this interface must also implement CharacterData interface.</p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.validation:ElementEditVAL"><apiName>ElementEditVAL</apiName><shortdesc>
	 This interface also has attributes that are a NameList of elements or attributes which can appear in the specified context.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.validation:NodeEditVAL</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface also has attributes that are a NameList of elements or attributes which can appear in the specified context. 
	 Some schema languages, i.e., W3C XML schema, define wildcards which provide for validation of attribute and element information 
	 items dependent on their namespace names but independent of their local names. 
	 
	 <p>To expose wildcards, the NameList returns the values that represent the  namespace constraint: 
	 <ul>
	 <li><codeph>{namespaceURI, name}</codeph> is <codeph>{null, ##any}</codeph> if any;</li>
	 <li><codeph>{namespaceURI, name}</codeph> is <codeph>{namespace_a, ##other}</codeph> if not and a namespace name (namespace_a);</li>
	 <li><codeph>{namespaceURI, name}</codeph> is <codeph>{null, ##other}</codeph> if not and absent;</li>
	 <li>Pairs of <codeph>{namespaceURI, name}</codeph> with values <codeph>{a_namespaceURI | null, null}</codeph> if a set whose members are either namespace names or absent.</li>
	 </ul>
	 </p>
	 
	 <p>An object implementing this interface must also implement the Element interface. </p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedAttributes:get"><apiName>allowedAttributes</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible attribute information items or wildcards  that can appear as attributes 
		 of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible attribute information items or wildcards  that can appear as attributes 
		 of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedAttributes"><linktext>W3C - ElementEditVAL.allowedAttributes</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedChildren:get"><apiName>allowedChildren</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as children 
		 of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as children 
		 of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedChildren"><linktext>W3C - ElementEditVAL.allowedChildren</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedFirstChildren:get"><apiName>allowedFirstChildren</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as a first 
		 child of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as a first 
		 child of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedFirstChildren"><linktext>W3C - ElementEditVAL.allowedFirstChildren</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedNextSiblings:get"><apiName>allowedNextSiblings</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a next 
		 sibling of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a next 
		 sibling of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedNextSiblings"><linktext>W3C - ElementEditVAL.allowedNextSiblings</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedParents:get"><apiName>allowedParents</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items that can appear as a parent this 
		 element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items that can appear as a parent this 
		 element, or null  if this element has no context or schema. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedParents"><linktext>W3C - ElementEditVAL.allowedParents</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedPreviousSiblings:get"><apiName>allowedPreviousSiblings</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a previous 
		 sibling of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a previous 
		 sibling of this element, or null  if this element has no context or schema. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedNextSiblings"><linktext>W3C - ElementEditVAL.allowedNextSiblings</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:contentType:get"><apiName>contentType</apiName><shortdesc>
		 The content type of an element as defined above.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The content type of an element as defined above.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-ElementEditVAL-contentType"><linktext>W3C - ElementEditVAL.contentType</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:requiredAttributes:get"><apiName>requiredAttributes</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of required attribute information items that must appear on this element, or null  
		 if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of required attribute information items that must appear on this element, or null  
		 if this element has no context or schema. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-requiredAttributes"><linktext>W3C - ElementEditVAL.requiredAttributes</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:ValidationState"><apiName>ValidationState</apiName><shortdesc>
	 Validation state constants stored in NodeEditVAL.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Validation state constants stored in NodeEditVAL.
	 
	 <p><b>Note:</b> Moved to ValidationState specifically for this documentation. Constants are not allowed in an interface.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.validation:ValidationState:VAL_FALSE"><apiName>VAL_FALSE</apiName><shortdesc>
		 False if the node is invalid with regards to the operation, or if the operation cannot be done.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 False if the node is invalid with regards to the operation, or if the operation cannot be done. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_FALSE"><linktext>W3C - NodeEditVAL.VAL_FALSE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationState:VAL_TRUE"><apiName>VAL_TRUE</apiName><shortdesc>
		 True if the node is valid with regards to the operation, or if the operation can be done.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 True if the node is valid with regards to the operation, or if the operation can be done. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_TRUE"><linktext>W3C - NodeEditVAL.VAL_TRUE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationState:VAL_UNKNOWN"><apiName>VAL_UNKNOWN</apiName><shortdesc>
		 The validity of the node is unknown.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The validity of the node is unknown. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_UNKNOWN"><linktext>W3C - NodeEditVAL.VAL_UNKNOWN</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:ValidationType"><apiName>ValidationType</apiName><shortdesc>
	 Validation type constants stored in NodeEditVAL.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Validation type constants stored in NodeEditVAL.
	 
	 <p><b>Note:</b> Moved to ValidationType specifically for this documentation. Constants are not allowed in an interface.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.validation:ValidationType:VAL_INCOMPLETE"><apiName>VAL_INCOMPLETE</apiName><shortdesc>
		 Check if the node's immediate children are those expected by the content model.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Check if the node's immediate children are those expected by the content model. This node's trailing required 
		 children could be missing. It includes VAL_NS_WF. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_INCOMPLETE"><linktext>W3C - NodeEditVAL.VAL_INCOMPLETE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationType:VAL_NS_WF"><apiName>VAL_NS_WF</apiName><shortdesc>
		 Check if the node is namespace well-formed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Check if the node is namespace well-formed. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_NS_WF"><linktext>W3C - NodeEditVAL.VAL_NS_WF</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationType:VAL_SCHEMA"><apiName>VAL_SCHEMA</apiName><shortdesc>
		 Check if the node's entire subtree are those expected by the content model.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Check if the node's entire subtree are those expected by the content model. It includes VAL_NS_WF. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_SCHEMA"><linktext>W3C - NodeEditVAL.VAL_SCHEMA</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationType:VAL_WF"><apiName>VAL_WF</apiName><shortdesc>
		 Check if the node is  well-formed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Check if the node is  well-formed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_WF"><linktext>W3C - NodeEditVAL.VAL_WF</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:ContentTypeVAL"><apiName>ContentTypeVAL</apiName><shortdesc>
	 Content type constants stored in ElementEditVAL.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Content type constants stored in ElementEditVAL.
	 
	 <p><b>Note:</b> Moved to ContentTypeVAL specifically for this documentation. Constants are not allowed in an interface.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.validation:ContentTypeVAL:VAL_ANY_CONTENTTYPE"><apiName>VAL_ANY_CONTENTTYPE</apiName><shortdesc>
		 The content model contains unordered child information item(s), i.e., element, processing instruction, unexpanded entity reference, character, and 
		 comment information items as defined in the XML Information Set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model contains unordered child information item(s), i.e., element, processing instruction, unexpanded entity reference, character, and 
		 comment information items as defined in the XML Information Set. If the schema is a DTD, this corresponds to the ANY content model. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_ANY_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_ANY_CONTENTTYPE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ContentTypeVAL:VAL_ELEMENTS_CONTENTTYPE"><apiName>VAL_ELEMENTS_CONTENTTYPE</apiName><shortdesc>
		 The content model contains a sequence of element information items  optionally separated by whitespace.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model contains a sequence of element information items  optionally separated by whitespace. If the schema is a DTD, this is the element 
		 content content model; and if the schema is a W3C XML schema, this is the element-only content type. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_ELEMENTS_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_ELEMENTS_CONTENTTYPE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ContentTypeVAL:VAL_EMPTY_CONTENTTYPE"><apiName>VAL_EMPTY_CONTENTTYPE</apiName><shortdesc>
		 The content model does not allow any content.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model does not allow any content. If the schema is a W3C XML schema, this 
		 corresponds to the empty content type; and if the schema is a DTD, this corresponds to the EMPTY content model. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_EMPTY_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_EMPTY_CONTENTTYPE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ContentTypeVAL:VAL_MIXED_CONTENTTYPE"><apiName>VAL_MIXED_CONTENTTYPE</apiName><shortdesc>
		 The content model contains a sequence of ordered element information items  optionally interspersed with character data.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model contains a sequence of ordered element information items  optionally interspersed with character data. If the schema is a W3C XML 
		 schema, this corresponds to the mixed  content type. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_MIXED_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_MIXED_CONTENTTYPE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ContentTypeVAL:VAL_SIMPLE_CONTENTTYPE"><apiName>VAL_SIMPLE_CONTENTTYPE</apiName><shortdesc>
		 The content model contains  character information items.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model contains  character information items. If the schema is a W3C XML schema, then the element has a content type of VAL_SIMPLE_CONTENTTYPE  
		 if the type of the element is a simple type definition, or the type of the element is a complexType whose {content type} is a simple type definition. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_SIMPLE_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_SIMPLE_CONTENTTYPE</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:DocumentEditVAL"><apiName>DocumentEditVAL</apiName><shortdesc>
	 An object implementing this interface must also implement the Document interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.validation:NodeEditVAL</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 An object implementing this interface must also implement the Document interface. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.validation:DocumentEditVAL:dom.validation:DocumentEditVAL:continuousValidityChecking:get"><apiName>continuousValidityChecking</apiName><shortdesc>
		 An attribute specifying whether the validity of the document is continuously enforced.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the implementation does not support setting this attribute to true.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_SCHEMA_AVAILABLE_ERR: Raised if this attribute is set to true  and a schema is unavailable. 
		 
		 </apiDesc><apiItemName>ExceptionVAL</apiItemName><apiOperationClassifier>dom.validation:ExceptionVAL</apiOperationClassifier></apiException><apiException><apiDesc>VALIDATION_ERR: Raised if an operation makes this document not compliant with the VAL_INCOMPLETE 
		 validity type or the document is invalid, and this attribute is set to true. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>false
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 An attribute specifying whether the validity of the document is continuously enforced. When the attribute 
		 is set to true, the implementation may raise certain exceptions, depending on the situation (see the following).
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-continuousValidityChecking"><linktext>W3C - DocumentEditVAL.continuousValidityChecking</linktext></link></related-links></apiValue><apiValue id="dom.validation:DocumentEditVAL:dom.validation:DocumentEditVAL:domConfig:get"><apiName>domConfig</apiName><shortdesc>
		 This allows the setting of the error handler, as described in the [DOM Level 3 Core] DOMConfiguration interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMConfiguration</apiValueClassifier></apiValueDef><apiDesc>
		 This allows the setting of the error handler, as described in the [DOM Level 3 Core] DOMConfiguration interface. An object implementing 
		 this DocumentEditVAL interface and the DOM Level 3 Core Document interface, which also has a domConfig attribute, needs to only implement 
		 this attribute once. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-domConfig"><linktext>W3C - DocumentEditVAL.domConfig</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:NodeEditVAL"><apiName>NodeEditVAL</apiName><shortdesc>
	 This interface is similar to the DOM Level 3 Core Node interface, with methods for guided document editing.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface is similar to the DOM Level 3 Core Node interface, with methods for guided document editing. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.validation:NodeEditVAL:dom.validation:NodeEditVAL:defaultValue:get"><apiName>defaultValue</apiName><shortdesc>
		 The default value specified in an attribute or an element declaration or null if unspecified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The default value specified in an attribute or an element declaration or null if unspecified. If the schema is a 
		 W3C XML schema, this is the canonical lexical representation of the default value. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#NodeEditVAL-defaultValue"><linktext>W3C - NodeEditVAL.defaultValue</linktext></link></related-links></apiValue><apiValue id="dom.validation:NodeEditVAL:dom.validation:NodeEditVAL:enumeratedValues:get"><apiName>enumeratedValues</apiName><shortdesc>
		 A DOMStringList, as described in DOM Level 3 Core, of distinct values for an attribute or an element declaration or 
		 null  if unspecified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMStringList</apiValueClassifier></apiValueDef><apiDesc>
		 A DOMStringList, as described in DOM Level 3 Core, of distinct values for an attribute or an element declaration or 
		 null  if unspecified. If the schema is a W3C XML schema, this is a list of strings which are lexical representations 
		 corresponding to the values in the [value] property of the enumeration component for the type of the attribute or element. 
		 It is recommended that the canonical lexical representations of the values be used. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#NodeEditVAL-enumeratedValues"><linktext>W3C - NodeEditVAL.enumeratedValues</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:ExceptionVALCode"><apiName>ExceptionVALCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.validation:ExceptionVALCode:NO_SCHEMA_AVAILABLE_ERR"><apiName>NO_SCHEMA_AVAILABLE_ERR</apiName><shortdesc>
		 This error occurs when the operation cannot complete due to an unavailable schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>71</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This error occurs when the operation cannot complete due to an unavailable schema. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL-NO_SCHEMA_AVAILABLE_ERR"><linktext>W3C - ExceptionVALCode.NO_SCHEMA_AVAILABLE_ERR</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.views"><apiName>dom.views</apiName><apiClassifier id="dom.views:DocumentView"><apiName>DocumentView</apiName><shortdesc>
	 The DocumentView interface is implemented by Document objects in DOM 
	 implementations supporting DOM Views.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentView interface is implemented by Document objects in DOM 
	 implementations supporting DOM Views. It provides an attribute to 
	 retrieve the default view of a document.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.views:DocumentView:dom.views:DocumentView:defaultView:get"><apiName>defaultView</apiName><shortdesc>
		 The default AbstractView for this Document, or null if none available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:AbstractView</apiValueClassifier></apiValueDef><apiDesc>
		 The default AbstractView for this Document, or null if none available.
		 
		 <p><b>Note:</b> document.defaultView is generally a reference to the window object 
		 for the document, however that is not defined in the specification and can't be relied upon 
		 for all host environments, particularly as not all browsers implement it.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.defaultView"><linktext>MDC - Document.defaultView</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-DocumentView-defaultView"><linktext>W3C - DocumentView.defaultView</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.views:AbstractView"><apiName>AbstractView</apiName><shortdesc>
	 A base interface that all views shall derive from.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A base interface that all views shall derive from.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.views:AbstractView:dom.views:AbstractView:document:get"><apiName>document</apiName><shortdesc>
		 The source DocumentView of which this is an AbstractView.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:DocumentView</apiValueClassifier></apiValueDef><apiDesc>
		 The source DocumentView of which this is an AbstractView.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="dom"><apiName>dom</apiName><apiClassifier id="dom:WindowProxy"><apiName>WindowProxy</apiName><shortdesc>
	 Must proxy all operations to the Window object of the browsing context's active document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom:Window</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Must proxy all operations to the Window object of the browsing context's active document.
	 
	 It is indistinguishable from that Window object in every way, except that it is not equal to it.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom:Window"><apiName>Window</apiName><shortdesc>
	 INCOMPLETE
	 
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>
	 
	 http://opensource.adobe.com/svn/opensource/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/asdoc/ClassTable.java
	 
	 http://www.w3.org/TR/Window/
	 
	 http://developer.mozilla.org/en/DOM/window
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.style.css:ViewCSS</apiBaseInterface><apiBaseInterface>dom.views:AbstractView</apiBaseInterface><apiBaseInterface>cssom.view:WindowView</apiBaseInterface><apiBaseInterface>dom.events:EventTarget</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 INCOMPLETE
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom:Window:Components:get"><apiName>Components</apiName><shortdesc>
		 Non-Standard | Firefox 
		 
		 The Components object is the object through which XPConnect functionality is reflected into JavaScript.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIXPCComponents</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox</b> 
		 
		 The Components object is the object through which XPConnect functionality is reflected into JavaScript.
		 
		 Some properties of Components require advanced privileges and may not work in web pages. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:applicationCache:get"><apiName>applicationCache</apiName><shortdesc>
		 Non-Standard | Firefox 3+ 
		 
		 Returns a reference to the application cache object for the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIDOMOfflineResourceList</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b> 
		 
		 Returns a reference to the application cache object for the window. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/#applicationcache"><linktext>http://www.whatwg.org/specs/web-apps/current-work/#applicationcache</linktext></link></related-links></apiValue><apiValue id="dom:Window:closed:get"><apiName>closed</apiName><shortdesc>
		 DOM Level 0 
		 
		 This property indicates whether the referenced window is closed or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 This property indicates whether the referenced window is closed or not. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:content:get"><apiName>content</apiName><shortdesc>
		 Non-Standard | Firefox 
		 
		 Returns a Window object for the primary content window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:Window</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox</b> 
		 
		 Returns a Window object for the primary content window.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:crypto:get"><apiName>crypto</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the browser crypto object, which can then be used to manipulate various 
		 browser security features.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Crypto</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the browser crypto object, which can then be used to manipulate various 
		 browser security features. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:defaultStatus:get"><apiName>defaultStatus</apiName><shortdesc>
		 DOM Level 0
		 
		 Gets/sets the status bar text for the given window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Gets/sets the status bar text for the given window.
		 
		 Note: To set the status once the window has been opened, use window.status.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:directories:get"><apiName>directories</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the window directories toolbar object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the window directories toolbar object. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:document:get"><apiName>document</apiName><shortdesc>
		 
		 The source DocumentView of which this is an AbstractView.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:DocumentView</apiValueClassifier></apiValueDef><apiDesc>
		 
		 The source DocumentView of which this is an AbstractView.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:frameElement:get"><apiName>frameElement</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns the element (such as &amp;lt;iframe&amp;gt; or &amp;lt;object&amp;gt;) in which the window is embedded, 
		 or null if the window is top-level.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns the element (such as &lt;iframe&gt; or &lt;object&gt;) in which the window is embedded, 
		 or null if the window is top-level.
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/parent"><linktext>parent</linktext></link><link href="dom.xml#Window/frames"><linktext>frames</linktext></link></related-links></apiValue><apiValue id="dom:Window:frames:get"><apiName>frames</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns an array-like object, listing the direct sub-frames of the current window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns an array-like object, listing the direct sub-frames of the current window.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:fullScreen:get"><apiName>fullScreen</apiName><shortdesc>
		 DOM Level 0 | Firefox 3+
		 
		 This property indicates whether the window is displayed in full screen mode or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 <b>DOM Level 0 | Firefox 3+</b>
		 
		 This property indicates whether the window is displayed in full screen mode or not.
		 
		 Note: This property is only reliable in Mozilla 1.9 (Firefox 3) and later. Mozilla 1.8 
		 and earlier do have this property, but it always returns false, even when the window 
		 is in full screen mode.
		 
		 Note: Switching between regular window and full screen will fire the "resize" event 
		 on the corresponding window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:globalStorage:get"><apiName>globalStorage</apiName><shortdesc>
		 Non-Standard | Firefox 2 
		 
		 This is a global object (globalStorage) that maintains multiple private storage areas 
		 that can be used to hold data over a long period of time (e.g.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 2</b> 
		 
		 This is a global object (globalStorage) that maintains multiple private storage areas 
		 that can be used to hold data over a long period of time (e.g. over multiple pages 
		 and browser sessions).
		 
		 Note: Firefox 2 permitted access to storage objects higher in the domain hierarchy 
		 than the current document. This is no longer allowed in Firefox 3, for security 
		 reasons. In addition, this proposed addition to HTML 5 has been removed from the 
		 HTML 5 specification in favor of localStorage, which is implemented in Firefox 3.5.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:history:get"><apiName>history</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns a reference to the History object, which provides an interface for manipulating 
		 the browser session history (pages visited in the tab or frame that the current page is loaded in).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:History</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns a reference to the History object, which provides an interface for manipulating 
		 the browser session history (pages visited in the tab or frame that the current page is loaded in).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:innerHeight:get"><apiName>innerHeight</apiName><shortdesc>
		 
		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.
		 
		 <p><b>Note:</b> The innerHeight property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>
		 
		 </apiDesc><example>
		 Assuming a frameset
		 <codeblock>
		 var intFrameHeight = window.innerHeight; // or
		 var intFrameHeight = self.innerHeight; // will return the height of the frame viewport within the frameset
		 var intFramesetHeight = parent.innerHeight; // will return the height of the viewport of the closest frameset
		 var intOuterFramesetHeight = top.innerHeight; // will return the height of the viewport of the outermost frameset</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.innerHeight"><linktext>MDC - Window: innerHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: innerHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/outerWidth"><linktext>outerWidth</linktext></link><link href="dom.xml#Window/innerWidth"><linktext>innerWidth</linktext></link><link href="dom.xml#Window/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="dom:Window:innerWidth:get"><apiName>innerWidth</apiName><shortdesc>
		 
		 Width of the browser window viewport including, if rendered, the vertical scrollbar.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Width of the browser window viewport including, if rendered, the vertical scrollbar.
		 
		 <p><b>Note:</b> The innerWidth property does not include the sidebar. So when the sidebar is expanded, the innerWidth property value diminishes.</p>
		 
		 <p><b>Note:</b> The innerWidth property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>
		 
		 </apiDesc><example>
		 Assuming a frameset
		 <codeblock>
		 var intFrameWidth = window.innerWidth; // or
		 var intFrameWidth = self.innerWidth; // will return the width of the frame viewport within the frameset
		 var intFramesetWidth = parent.innerWidth; // will return the width of the viewport of the closest frameset
		 var intOuterFramesetWidth = top.innerWidth; // will return the width of the viewport of the outermost frameset</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.innerWidth"><linktext>MDC - Window: innerWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: innerWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/outerWidth"><linktext>outerWidth</linktext></link><link href="dom.xml#Window/innerHeight"><linktext>innerHeight</linktext></link><link href="dom.xml#Window/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="dom:Window:length:get"><apiName>length</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the number of frames (either frame or iframe elements) in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the number of frames (either frame or iframe elements) in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:localStorage:get"><apiName>localStorage</apiName><shortdesc>
		 Web Storage
		 
		 This is a global object that maintains multiple private storage areas 
		 that can be used to hold data over a long period of time (e.g.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>webstorage:Storage</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Web Storage</b>
		 
		 This is a global object that maintains multiple private storage areas 
		 that can be used to hold data over a long period of time (e.g. over multiple pages 
		 and browser sessions).
		 
		 Note Firefox 3.5: When the browser goes into private browsing mode, a new, temporary database 
		 is created to store local storage data; this database is empty, and is thrown away 
		 when private browsing mode is turned off.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/"><linktext>http://www.w3.org/TR/webstorage/</linktext></link></related-links></apiValue><apiValue id="dom:Window:location:get"><apiName>location</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns a  Location object, which contains information about the URL 
		 of the document and provides methods for changing that URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Location</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns a  Location object, which contains information about the URL 
		 of the document and provides methods for changing that URL.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:locationbar:get"><apiName>locationbar</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the locationbar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the locationbar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:media:get"><apiName>media</apiName><shortdesc>
		 
		 Returns an Media object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>cssom.view:Media</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns an Media object.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: media Property</linktext></link></related-links></apiValue><apiValue id="dom:Window:menubar:get"><apiName>menubar</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the menubar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the menubar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:name:get"><apiName>name</apiName><shortdesc>
		 DOM Level 0
		 
		 Gets/sets the name of the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Gets/sets the name of the window.
		 
		 Note: The name of the window is used primarily for setting targets for hyperlinks 
		 and forms. Windows do not need to have names.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:navigator:get"><apiName>navigator</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns a reference to the navigator object, which can be queried for information 
		 about the application running the script.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Navigator</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns a reference to the navigator object, which can be queried for information 
		 about the application running the script. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onabort:get"><apiName>onabort</apiName><shortdesc>
		 An event handler for abort events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for abort events sent to the window. (Not available with Firefox 2 or Safari) 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onbeforeunload:get"><apiName>onbeforeunload</apiName><shortdesc>
		 An event that fires before the unload event when the page is unloaded.</shortdesc><prolog><asCustoms><exampleText>The function should assign a string value to the returnValue property of the Event object and return the same string/
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event that fires before the unload event when the page is unloaded. 
		 
		 <p>Note: There is no public specification. onbeforeunload was introduced by Microsoft IE 4 and has subsequently been copied by other browsers. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 window.onbeforeunload = function (e) {
		 		var e = e || window.event;
		 
		 		// For IE and Firefox
		 		if (e) {
		 			e.returnValue = 'Any string';
		 		}
		 
		 		// For Safari
		 		return 'Any string';
		 };</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536907(VS.85).aspx"><linktext>MSDN—onbeforeunload Event</linktext></link></related-links></apiValue><apiValue id="dom:Window:onblur:get"><apiName>onblur</apiName><shortdesc>
		 DOM Level 0
		 
		 The onblur property can be used to set the blur handler on the window, which is triggered when the window loses focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 The onblur property can be used to set the blur handler on the window, which is triggered when the window loses focus. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onchange:get"><apiName>onchange</apiName><shortdesc>
		 An event handler for change events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for change events sent to the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onclick:get"><apiName>onclick</apiName><shortdesc>
		 Called when the user clicks the mouse button while the cursor is in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 Called when the user clicks the mouse button while the cursor is in the window. This event is fired for any mouse button 
		 pressed; you can look at the event properties to find out which button was pressed and where. 
		 
		 <p>Note: The click event is raised when the user clicks on the window.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onclose:get"><apiName>onclose</apiName><shortdesc>
		 An event handler for close events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for close events sent to the window. (Not available with Firefox 2 or Safari) 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:oncontextmenu:get"><apiName>oncontextmenu</apiName><shortdesc>
		 An event handler property for right-click events on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler property for right-click events on the window. 
		 
		 </apiDesc><example>
		 <codeblock>
		 window.oncontextmenu = function () {
		 		return false;
		 }
		 //this will disable right click on the page</codeblock>
		 </example></apiValueDetail></apiValue><apiValue id="dom:Window:ondragdrop:get"><apiName>ondragdrop</apiName><shortdesc>
		 An event handler for drag and drop events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for drag and drop events sent to the window. 
		 
		 <p>Note: The window.ondragdrop property and the ondragdrop attribute are not implemented in Gecko, 
		 you have to use addEventListener.</p>
		 
		 <p>Note: The event.data array available in NN4 seems to be unavailable in Gecko [1].</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/addEventListener()"><linktext>addEventListener()</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=112288"><linktext>bug 112288</linktext></link><link href="http://forums.mozillazine.org/viewtopic.php?p=863806"><linktext>[1]</linktext></link></related-links></apiValue><apiValue id="dom:Window:onerror:get"><apiName>onerror</apiName><shortdesc>
		 An event handler for error events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for error events sent to the window. 
		 
		 <p>Note: When the function returns true, this prevents the firing of the default event handler. Function parameters: 
		 <ul>
		 <li>Error message (string) </li>
		 <li>Url where error was raised (string) </li>
		 <li>Error code (number) </li>
		 </ul>
		 </p>
		 
		 <p>Note: The error event is raised when an error occurs in the script. The example above prevents error 
		 dialogs from displaying-which is the window's normal behavior-by overriding the default event handler for error events that go to the window. </p>
		 
		 <p>Note: When using the inline html markup (&lt;body onerror="alert('an error occurred')&gt;...), the arguments 
		 are not named. They can be referenced by arguments[0] through arguments[2]. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 An event handler for focus events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for focus events sent to the window. 
		 
		 <p>Note: The focus event is raised when the user sets focus on the current window. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onkeydown:get"><apiName>onkeydown</apiName><shortdesc>
		 An event handler for the keydown event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the keydown event on the window. 
		 
		 <p>Note: The keydown event is raised when the user presses any key. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onkeypress:get"><apiName>onkeypress</apiName><shortdesc>
		 An event handler for the keypress event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the keypress event on the window. 
		 
		 <p>Note: The keypress event is raised when the user presses and releases any key on the keyboard. </p>
		 
		 <p>Note: Under FF 1.0.5.4 this event fires before the keyup event is detected, i.e. it appears to work exactly like onkeydown. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onkeyup:get"><apiName>onkeyup</apiName><shortdesc>
		 An event handler for the keyup event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the keyup event on the window. 
		 
		 <p>Note: The keyup event is raised when a key that has been pressed is released. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onload:get"><apiName>onload</apiName><shortdesc>
		 DOM Level 0
		 
		 An event handler for the load event of a window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 An event handler for the load event of a window. 
		 
		 <p>Note: The load event fires at the end of the document loading process. At this point, all of the objects in the document 
		 are in the DOM, and all the images and sub-frames have finished loading. </p>
		 
		 <p>Note: There is also Gecko-Specific DOM Events like DOMContentLoaded and DOMFrameContentLoaded events (which can be handled 
		 using addEventListener) which are fired after the DOM for the page has been constructed, but don't wait for other resources 
		 to finish loading. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmousedown:get"><apiName>onmousedown</apiName><shortdesc>
		 An event handler for the mousedown event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mousedown event on the window.
		 
		 <p>Note: The mousedown event is raised when the user clicks the mouse button anywhere in the document.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmousemove:get"><apiName>onmousemove</apiName><shortdesc>
		 An event handler for the mousemove event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mousemove event on the window. 
		 
		 <p>Note: The mousemove event fires when the user moves the mouse pointer by 1 pixel or more in any direction in the browser window. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmouseout:get"><apiName>onmouseout</apiName><shortdesc>
		 An event handler for the mouseout event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mouseout event on the window. 
		 
		 <p>Note: The mouseout event is raised when the mouse leaves the area of the specified element (in this case the window itself). </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmouseover:get"><apiName>onmouseover</apiName><shortdesc>
		 An event handler for the mouseover event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mouseover event on the window. 
		 
		 <p>Note: The mouseover event is raised when the mouse pointer moves over the current element (in this case the window itself). </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmouseup:get"><apiName>onmouseup</apiName><shortdesc>
		 An event handler for the mouseup event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mouseup event on the window.
		 
		 <p>Note: The mouseup event is raised when the user unclicks the mouse button anywhere in the document.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onpaint:get"><apiName>onpaint</apiName><shortdesc>
		 DOM Level 0
		 
		 An event handler for the paint event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 An event handler for the paint event on the window.
		 
		 <p>Note: <codeph>onpaint</codeph> doesn't work currently, and it is questionable whether this event is going to work at all.</p>
		 
		 <p>Note: The paint event is raised when the window is rendered. This event occurs after the load event for a window, and 
		 reoccurs each time the window needs to be re-rendered, as when another window obscures it and is then cleared away. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=239074"><linktext>bug 239074</linktext></link></related-links></apiValue><apiValue id="dom:Window:onreset:get"><apiName>onreset</apiName><shortdesc>
		 An event handler for the reset event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the reset event on the window. 
		 
		 <p>Note: The reset event is raised when the user clicks a reset button in a form (<input type="reset"/>). </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onresize:get"><apiName>onresize</apiName><shortdesc>
		 An event handler for the resize event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the resize event on the window. 
		 
		 <p>Note: The resize event is fired after the window has been resized. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onscroll:get"><apiName>onscroll</apiName><shortdesc>
		 Specifies the function to be called when the window is scrolled.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 Specifies the function to be called when the window is scrolled. 
		 
		 <p>Note: When the window.scrollX/scrollY isn't 0 -- meaning that some scrolling occurred by either script or 
		 manual action -- reloading the current page will trigger the onscroll event immediately. </p>
		 
		 <p>Note: In older versions of Gecko caused onscroll to be fired only when dragging the scroll bar, not when 
		 using cursor keys or mousewheel. This was fixed in Gecko 1.8/Firefox 1.5.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onselect:get"><apiName>onselect</apiName><shortdesc>
		 An event handler for the select event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the select event on the window. 
		 
		 <p>Note: The select event only fires when text inside a text input or textarea is selected. The event is fired after the text has been selected. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onsubmit:get"><apiName>onsubmit</apiName><shortdesc>
		 An event handler for the submit event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the submit event on the window. 
		 
		 <p>Note: The submit event is raised when the user clicks a submit button in a form (<input type="submit"/>). </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onunload:get"><apiName>onunload</apiName><shortdesc>
		 DOM Level 0
		 
		 The unload event is raised when the document is unloaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 The unload event is raised when the document is unloaded. 
		 
		 <p>Note: Using this event handler in your page prevents Firefox 1.5 from caching the page in the in-memory bfcache.</p>
		 
		 <p>Note: Browsers equipped with pop-up window blockers will ignore all window.open() method calls in onunload event handler functions.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:opener:get"><apiName>opener</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns a reference to the window that opened this current window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns a reference to the window that opened this current window. 
		 
		 Note: When a window is opened from another window, it maintains a reference to that first window 
		 as window.opener. If the current window has no opener, this method returns NULL. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:outerHeight:get"><apiName>outerHeight</apiName><shortdesc>
		 
		 Gets the height of the outside of the browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Gets the height of the outside of the browser window. window.outerHeight represents the height of 
		 the whole browser window including toolbars and window chrome.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.outerHeight"><linktext>MDC - Window: outerHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: outerHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/innerWidth"><linktext>innerWidth</linktext></link><link href="dom.xml#Window/innerHeight"><linktext>innerHeight</linktext></link><link href="dom.xml#Window/outerWidth"><linktext>outerWidth</linktext></link></related-links></apiValue><apiValue id="dom:Window:outerWidth:get"><apiName>outerWidth</apiName><shortdesc>
		 
		 Gets the width of the outside of the browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Gets the width of the outside of the browser window. window.outerWidth represents the width of 
		 the whole browser window including sidebar (if expanded), window chrome and window [re-]sizing borders/handles.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.outerWidth"><linktext>MDC - Window: outerWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: outerWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/innerWidth"><linktext>innerWidth</linktext></link><link href="dom.xml#Window/innerHeight"><linktext>innerHeight</linktext></link><link href="dom.xml#Window/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="dom:Window:pageXOffset:get"><apiName>pageXOffset</apiName><shortdesc>
		 
		 Returns the number of pixels that the document has already been scrolled horizontally.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the number of pixels that the document has already been scrolled horizontally. 
		 
		 <p><b>Note:</b> <codeph>window.pageXOffset == window.scrollX; // always true</codeph></p>
		 
		  </apiDesc><example>
		 <codeblock>
		 // make sure and go over to the second horizontal page
		 if (window.scrollX) {
		 	scroll(0,0);
		 }
		 scrollBy(400, 0);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.pageXOffset"><linktext>MDC - Window: pageXOffset Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: pageXOffset Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/pageYOffset"><linktext>pageYOffset</linktext></link></related-links></apiValue><apiValue id="dom:Window:pageYOffset:get"><apiName>pageYOffset</apiName><shortdesc>
		 
		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport. 
		 
		 <p><b>Note:</b> <codeph>window.pageYOffset == window.scrollY; // always true</codeph></p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // make sure and go over to the second horizontal page
		 if (window.scrollY) {
		 	scroll(0,0);
		 }
		 scrollByPages(1);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.pageYOffset"><linktext>MDC - Window: pageYOffset Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: pageYOffset Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="" invalidHref="dom.pageXOffset.xml"><linktext>pageXOffset</linktext></link></related-links></apiValue><apiValue id="dom:Window:parent:get"><apiName>parent</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns a reference to the parent of the current window or subframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:Window</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns a reference to the parent of the current window or subframe.
		 
		 If a window does not have a parent, its parent property is a reference to itself.
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/top"><linktext>top</linktext></link><link href="dom.xml#Window/frameElement"><linktext>frameElement</linktext></link></related-links></apiValue><apiValue id="dom:Window:personalbar:get"><apiName>personalbar</apiName><shortdesc>
		 Returns the personalbar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the personalbar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:pkcs11:get"><apiName>pkcs11</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the pkcs11 object , which can be used to install drivers and other software 
		 associated with the pkcs11 protocol.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Pkcs11</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the pkcs11 object , which can be used to install drivers and other software 
		 associated with the pkcs11 protocol. 
		 
		 <p><b>Note (Mozilla):</b> The window.pkcs11 property has been removed in newer 
		 versions of Firefox (3.5+) for security reasons. For more information on installing PKCS11 
		 modules, see <xref href="http://developer.mozilla.org/en/PKCS11_Jar_Install" rel="external nofollow" scope="external">installing PKCS11 modules</xref>. See 
		 <xref href="http://bugzilla.mozilla.org/show_bug.cgi?id=326628" rel="external nofollow" scope="external">bug 
		 326628</xref> for details on why the property was removed.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:returnValue:get"><apiName>returnValue</apiName><shortdesc>
		 Non-Standard? | Firefox 3+
		 
		 The return value to be returned to the function that called window.showModalDialog() 
		 to display the window as a modal dialog.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/></apiValueDef><apiDesc>
		 <b>Non-Standard? | Firefox 3+</b>
		 
		 The return value to be returned to the function that called window.showModalDialog() 
		 to display the window as a modal dialog. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:screen:get"><apiName>screen</apiName><shortdesc>
		 
		 Returns a reference to the screen object associated with the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>cssom.view:Screen</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns a reference to the screen object associated with the window. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (screen.pixelDepth &lt; 8) {
		 	// use low-color version of page
		 } else { 
		 	// use regular, colorful page
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screen"><linktext>MDC - Window: screen Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screen Property</linktext></link><link href="http://www.aptana.com/reference/html/api/Window.html#Window.screen"><linktext>Aptana: Window.screen Property</linktext></link></related-links></apiValue><apiValue id="dom:Window:screenX:get"><apiName>screenX</apiName><shortdesc>
		 
		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen. 
		 
		 <p><b>Note (Opera):</b> Opera calculates the coordinates of the specific tab window relative to 
		 the encompassing browser window. This is understandable given its way of working with 
		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 
		 browser window relative to the screen.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screenX"><linktext>MDC - Window: screenX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screenX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom:Window:screenY:get"><apiName>screenY</apiName><shortdesc>
		 
		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen. 
		 
		 <p><b>Note (Opera):</b> Opera calculates the coordinates of the specific tab window relative to 
		 the encompassing browser window. This is understandable given its way of working with 
		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 
		 browser window relative to the screen.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screenY"><linktext>MDC - Window: screenY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screenY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/screenX"><linktext>screenX</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollMaxX:get"><apiName>scrollMaxX</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the maximum number of pixels that the document can be scrolled horizontally.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the maximum number of pixels that the document can be scrolled horizontally. 
		 
		 Note: Use this property to get the total document width, which is equivalent to 
		 window.innerWidth + window.scrollMaxX. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/scrollMaxY"><linktext>dom.Window.scrollMaxY</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollMaxY:get"><apiName>scrollMaxY</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the maximum number of pixels that the document can be scrolled vertically.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the maximum number of pixels that the document can be scrolled vertically. 
		 
		 Note: Use this property to get the total document height, which is equivalent to 
		 window.innerHeight + window.scrollMaxY. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/scrollMaxX"><linktext>dom.Window.scrollMaxX</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollX:get"><apiName>scrollX</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the number of pixels that the document has already been scrolled horizontally.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the number of pixels that the document has already been scrolled horizontally. 
		 
		 Note: Use this property to check that the document hasn't already been scrolled some if 
		 you are using relative scroll functions such as window.scrollBy, window.scrollByLines, 
		 or window.scrollByPages. 
		 
		 Note: The pageXOffset property is an alias for the scrollX property.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="dom.xml#window/pageXOffset"><linktext>dom.window.pageXOffset</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollY:get"><apiName>scrollY</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the number of pixels that the document has already been scrolled vertically.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the number of pixels that the document has already been scrolled vertically. 
		 
		 Note: Use this property to check that the document hasn't already been scrolled some if 
		 you are using relative scroll functions such as window.scrollBy, window.scrollByLines, 
		 or window.scrollByPages. 
		 
		 Note: The pageYOffset property is an alias for the scrollY property.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="dom.xml#window/pageYOffset"><linktext>dom.window.pageYOffset</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollbars:get"><apiName>scrollbars</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the scrollbars object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the scrollbars object, whose visibility can be toggled in the window. 
		 
		 Note: Note that scrollbars is not an array of the scrollbars. The visibility of these 
		 objects can only be controlled as a group. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:self:get"><apiName>self</apiName><shortdesc>
		 Returns a self-reference.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a self-reference.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:sessionStorage:get"><apiName>sessionStorage</apiName><shortdesc>
		 HTML5 | Firefox 3+
		 
		 This is a global object (sessionStorage) that maintains a storage area that's available 
		 for the duration of the page session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>webstorage:Storage</apiValueClassifier></apiValueDef><apiDesc>
		 <b>HTML5 | Firefox 3+</b>
		 
		 This is a global object (sessionStorage) that maintains a storage area that's available 
		 for the duration of the page session. A page session lasts for as long as the browser is 
		 open and survives over page reloads and restores. Opening a page in a new tab or window 
		 will cause a new session to be initiated.
		 
		 The sessionStorage object is most useful for hanging on to temporary data that should be
		 saved and restored if the browser is accidentally refreshed.
		 
		 Note: Prior to Firefox 3.5, sessionStorage data was not restored automatically after 
		 recovering from a browser crash. Starting in Firefox 3.5, this works as per the specification.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:sidebar:get"><apiName>sidebar</apiName><shortdesc>
		 Non-Standard | Firefox
		 
		 Returns a reference to the window object of the sidebar.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko.dom.objects:Sidebar</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox</b>
		 
		 Returns a reference to the window object of the sidebar. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:status:get"><apiName>status</apiName><shortdesc>
		 DOM Level 0
		 
		 Sets the text in the status bar at the bottom of the browser or returns the previously set text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Sets the text in the status bar at the bottom of the browser or returns the previously set text. 
		 
		 Note Firefox: This property does not work in default configuration of Firefox and some 
		 other browsers: setting window.status has no effect on the text displayed in the status 
		 bar. To allow scripts change the the status bar text, the user must set the 
		 dom.disable_window_status_change preference to false in the about:config screen. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:statusbar:get"><apiName>statusbar</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the statusbar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the statusbar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:toolbar:get"><apiName>toolbar</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the toolbar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the toolbar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:top:get"><apiName>top</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns a reference to the topmost window in the window hierarchy.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns a reference to the topmost window in the window hierarchy. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:window:get"><apiName>window</apiName><shortdesc>
		 Returns a self-reference.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a self-reference.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="dom.xpath"><apiName>dom.xpath</apiName><apiClassifier id="dom.xpath:XPathEvaluator"><apiName>XPathEvaluator</apiName><shortdesc>
	 The evaluation of XPath expressions is provided by XPathEvaluator.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The evaluation of XPath expressions is provided by XPathEvaluator. In a DOM implementation 
	 which supports the XPath 3.0 feature, as described above, the XPathEvaluator interface will 
	 be implemented on the same object which implements the Document interface permitting it to 
	 be obtained by the usual binding-specific method such as casting or by using the DOM Level 3 
	 getInterface method. In this case the implementation obtained from the Document supports the 
	 XPath DOM module and is compatible with the XPath 1.0 specification.
	 
	 <p>Evaluation of expressions with specialized extension functions or variables may not work 
	 in all implementations and is, therefore, not portable. XPathEvaluator implementations may be 
	 available from other sources that could provide specific support for specialized extension 
	 functions or variables as would be defined by other specifications. </p>
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.xpath:XPathResult"><apiName>XPathResult</apiName><shortdesc>
	 The XPathResult interface represents the result of the evaluation of an XPath 1.0 expression 
	 within the context of a particular node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The XPathResult interface represents the result of the evaluation of an XPath 1.0 expression 
	 within the context of a particular node. Since evaluation of an XPath expression can result in 
	 various result types, this object makes it possible to discover and manipulate the type and 
	 value of the result. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.xpath:XPathResult:ANY_TYPE"><apiName>ANY_TYPE</apiName><shortdesc>
		 This code does not represent a specific type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This code does not represent a specific type. An evaluation of an XPath expression will never 
		 produce this type. If this type is requested, then the evaluation returns whatever type naturally 
		 results from evaluation of the expression. If the natural result is a node set when ANY_TYPE was 
		 requested, then UNORDERED_NODE_ITERATOR_TYPE is always the resulting type. Any other representation 
		 of a node set must be explicitly requested.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ANY-TYPE"><linktext>W3C - XPathResult.ANY_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:ANY_UNORDERED_NODE_TYPE"><apiName>ANY_UNORDERED_NODE_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be 
		 null if the node set is empty.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be 
		 null if the node set is empty. Document modification does not invalidate the node, but may mean that the 
		 result node no longer corresponds to the current document. This is a convenience that permits optimization 
		 since the implementation can stop once any node in the resulting set has been found. If there is more than 
		 one node in the actual result, the single node returned might not be the first in document order.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ANY-UNORDERED-NODE-TYPE"><linktext>W3C - XPathResult.ANY_UNORDERED_NODE_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:BOOLEAN_TYPE"><apiName>BOOLEAN_TYPE</apiName><shortdesc>
		 The result is a boolean as defined by [XPath 1.0].</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a boolean as defined by [XPath 1.0]. Document modification does not invalidate the boolean, 
		 but may mean that reevaluation would not yield the same boolean.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-BOOLEAN-TYPE"><linktext>W3C - XPathResult.BOOLEAN_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:FIRST_ORDERED_NODE_TYPE"><apiName>FIRST_ORDERED_NODE_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be null if the 
		 node set is empty.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be null if the 
		 node set is empty. Document modification does not invalidate the node, but may mean that the result node no longer 
		 corresponds to the current document. This is a convenience that permits optimization since the implementation can 
		 stop once the first node in document order of the resulting set has been found. If there are more than one node in
		 the actual result, the single node returned will be the first in document order.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-FIRST-ORDERED-NODE-TYPE"><linktext>W3C - XPathResult.FIRST_ORDERED_NODE_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:NUMBER_TYPE"><apiName>NUMBER_TYPE</apiName><shortdesc>
		 The result is a number as defined by [XPath 1.0].</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a number as defined by [XPath 1.0]. Document modification does not invalidate the number, 
		 but may mean that reevaluation would not yield the same number.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-NUMBER-TYPE"><linktext>W3C - XPathResult.NUMBER_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:ORDERED_NODE_ITERATOR_TYPE"><apiName>ORDERED_NODE_ITERATOR_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which will produce 
		 document-ordered nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which will produce 
		 document-ordered nodes. Document modification invalidates the iteration.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ORDERED-NODE-ITERATOR-TYPE"><linktext>W3C - XPathResult.ORDERED_NODE_ITERATOR_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:ORDERED_NODE_SNAPSHOT_TYPE"><apiName>ORDERED_NODE_SNAPSHOT_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that will be 
		 in original document order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that will be 
		 in original document order. Document modification does not invalidate the snapshot but may mean that reevaluation 
		 would not yield the same snapshot and nodes in the snapshot may have been altered, moved, or removed from the document.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ORDERED-NODE-SNAPSHOT-TYPE"><linktext>W3C - XPathResult.ORDERED_NODE_SNAPSHOT_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:STRING_TYPE"><apiName>STRING_TYPE</apiName><shortdesc>
		 The result is a string as defined by [XPath 1.0].</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a string as defined by [XPath 1.0]. Document modification does not invalidate the string, but 
		 may mean that the string no longer corresponds to the current document.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-STRING-TYPE"><linktext>W3C - XPathResult.STRING_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:UNORDERED_NODE_ITERATOR_TYPE"><apiName>UNORDERED_NODE_ITERATOR_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which may not produce nodes 
		 in a particular order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which may not produce nodes 
		 in a particular order. Document modification invalidates the iteration. This is the default type returned if the 
		 result is a node set and ANY_TYPE is requested.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-UNORDERED-NODE-ITERATOR-TYPE"><linktext>W3C - XPathResult.UNORDERED_NODE_ITERATOR_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:UNORDERED_NODE_SNAPSHOT_TYPE"><apiName>UNORDERED_NODE_SNAPSHOT_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that may 
		 not be in a particular order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that may 
		 not be in a particular order. Document modification does not invalidate the snapshot but may mean that reevaluation 
		 would not yield the same snapshot and nodes in the snapshot may have been altered, moved, or removed from the document.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-UNORDERED-NODE-SNAPSHOT-TYPE"><linktext>W3C - XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:booleanValue:get"><apiName>booleanValue</apiName><shortdesc>
		 The value of this boolean result.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiException><apiDesc>TYPE_ERR: Raised if resultType is not BOOLEAN_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The value of this boolean result.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-booleanValue"><linktext>W3C - XPathResult.booleanValue</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:invalideIteratorState:get"><apiName>invalideIteratorState</apiName><shortdesc>
		 Signifies that the iterator has become invalid.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Signifies that the iterator has become invalid. True if resultType is UNORDERED_NODE_ITERATOR_TYPE or ORDERED_NODE_ITERATOR_TYPE 
		 and the document has been modified since this result was returned.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-invalid-iterator-state"><linktext>W3C - XPathResult.invalideIteratorState</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:numberValue:get"><apiName>numberValue</apiName><shortdesc>
		 The value of this number result.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiException><apiDesc>TYPE_ERR: Raised if resultType is not NUMBER_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The value of this number result. If the native double type of the DOM binding does not directly support the exact IEEE 754 result 
		 of the XPath expression, then it is up to the definition of the binding to specify how the XPath number is converted to the native binding number.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-numberValue"><linktext>W3C - XPathResult.numberValue</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:resultType:get"><apiName>resultType</apiName><shortdesc>
		 A code representing the type of this result, as defined by the type constants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 A code representing the type of this result, as defined by the type constants.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-resultType"><linktext>W3C - XPathResult.resultType</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:singleNodeValue:get"><apiName>singleNodeValue</apiName><shortdesc>
		 The value of this single node result, which may be null.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>TYPE_ERR: Raised if resultType is not ANY_UNORDERED_NODE_TYPE or FIRST_ORDERED_NODE_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The value of this single node result, which may be null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-singleNodeValue"><linktext>W3C - XPathResult.singleNodeValue</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:snapshotLength:get"><apiName>snapshotLength</apiName><shortdesc>
		 The number of nodes in the result snapshot.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiException><apiDesc>TYPE_ERR: Raised if resultType is not UNORDERED_NODE_SNAPSHOT_TYPE or ORDERED_NODE_SNAPSHOT_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The number of nodes in the result snapshot. Valid values for snapshotItem indices are 0 to snapshotLength-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-snapshot-length"><linktext>W3C - XPathResult.snapshotLength</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:stringValue:get"><apiName>stringValue</apiName><shortdesc>
		 The value of this string result.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>TYPE_ERR: Raised if resultType is not STRING_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The value of this string result.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-stringValue"><linktext>W3C - XPathResult.stringValue</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.xpath:XPathException"><apiName>XPathException</apiName><shortdesc>
	 A new exception has been created for exceptions specific to these XPath interfaces.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A new exception has been created for exceptions specific to these XPath interfaces. 
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.xpath:XPathException:dom.xpath:XPathException:code:get"><apiName>code</apiName><shortdesc>
		 The specific exception code.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The specific exception code.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathException"><linktext>W3C - XPathException</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.xpath:XPathExpression"><apiName>XPathExpression</apiName><shortdesc>
	 The XPathExpression interface represents a parsed and resolved XPath expression.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The XPathExpression interface represents a parsed and resolved XPath expression. 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.xpath:XPathNSResolver"><apiName>XPathNSResolver</apiName><shortdesc>
	 The XPathNSResolver interface permit prefix strings in the expression to be properly bound to 
	 namespaceURI strings.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The XPathNSResolver interface permit prefix strings in the expression to be properly bound to 
	 namespaceURI strings. XPathEvaluator can construct an implementation of XPathNSResolver from a 
	 node, or the interface may be implemented by any application. 
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="dom.xpath:XPathNamespace"><apiName>XPathNamespace</apiName><shortdesc>
	 The XPathNamespace interface is returned by XPathResult interfaces to represent the XPath namespace node type 
	 that DOM lacks.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The XPathNamespace interface is returned by XPathResult interfaces to represent the XPath namespace node type 
	 that DOM lacks. There is no public constructor for this node type. Attempts to place it into a hierarchy or a 
	 NamedNodeMap result in a DOMException with the code HIERARCHY_REQUEST_ERR. This node is read only, so methods 
	 or setting of attributes that would mutate the node result in a DOMException with the code NO_MODIFICATION_ALLOWED_ERR.
	 
	 <p>The core specification describes attributes of the Node interface that are different for different node 
	 types but does not describe XPATH_NAMESPACE_NODE, so here is a description of those attributes for this node 
	 type. All attributes of Node not described in this section have a null or false value.</p>
	 
	 <p>ownerDocument matches the ownerDocument of the ownerElement even if the element is later adopted.</p>
	 
	 <p>nodeName is always the string "#namespace".</p>
	 
	 <p>prefix is the prefix of the namespace represented by the node.</p>
	 
	 <p>localName is the same as prefix.</p>
	 
	 <p>nodeType is equal to XPATH_NAMESPACE_NODE.</p>
	 
	 <p>namespaceURI is the namespace URI of the namespace represented by the node.</p>
	 
	 <p>nodeValue is the same as namespaceURI.</p>
	 
	 <p>adoptNode, cloneNode, and importNode fail on this node type by raising a DOMException with the code NOT_SUPPORTED_ERR.</p>
	 
	 <p><b>Note:</b> In future versions of the XPath specification, the definition of a namespace node may be changed 
	 incomatibly, in which case incompatible changes to field values may be required to implement versions beyond XPath 1.0.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.xpath:XPathNamespace:XPATH_NAMESPACE_NODE"><apiName>XPATH_NAMESPACE_NODE</apiName><shortdesc>
		 An integer indicating which type of node this is.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>13</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 An integer indicating which type of node this is.
		 
		 <p><b>Note:</b> There is currently only one type of node which is specific to XPath. The numbers 
		 in this list must not collide with the values assigned to core node types.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPATH_NAMESPACE_NODE"><linktext>W3C - XPathNamespace.XPATH_NAMESPACE_NODE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathNamespace:ownerElement:get"><apiName>ownerElement</apiName><shortdesc>
		 The Element on which the namespace was in scope when it was requested.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 The Element on which the namespace was in scope when it was requested. This does not change 
		 on a returned namespace node even if the document changes such that the namespace goes out of 
		 scope on that element and this node is no longer found there by XPath.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNamespace-ownerElement"><linktext>W3C - XPathNamespace.ownerElement()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.xpath:XPathExceptionCode"><apiName>XPathExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.xpath:XPathExceptionCode:INVALID_EXPRESSION_ERR"><apiName>INVALID_EXPRESSION_ERR</apiName><shortdesc>
		 If the expression has a syntax error or otherwise is not a legal expression according to the rules 
		 of the specific XPathEvaluator or contains specialized extension functions or variables not 
		 supported by this implementation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>51</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the expression has a syntax error or otherwise is not a legal expression according to the rules 
		 of the specific XPathEvaluator or contains specialized extension functions or variables not 
		 supported by this implementation.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#INVALID_EXPRESSION_ERR"><linktext>W3C - XPathExceptionCode.INVALID_EXPRESSION_ERR</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathExceptionCode:TYPE_ERR"><apiName>TYPE_ERR</apiName><shortdesc>
		 If the expression cannot be converted to return the specified type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>52</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the expression cannot be converted to return the specified type.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#TYPE_ERR"><linktext>W3C - XPathExceptionCode.TYPE_ERR</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="elementtraversal"><apiName>elementtraversal</apiName><apiClassifier id="elementtraversal:ElementTraversal"><apiName>ElementTraversal</apiName><shortdesc>
	 Allows script navigation of the elements of a DOM tree, excluding all other nodes in the DOM, such 
	 as text nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Allows script navigation of the elements of a DOM tree, excluding all other nodes in the DOM, such 
	 as text nodes. It also provides an attribute to expose the number of child elements of an element. 
	 It is intended to provide a more convenient alternative to existing DOM navigation interfaces, with 
	 a low implementation footprint.
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:childElementCount:get"><apiName>childElementCount</apiName><shortdesc>
		 Returns the current number of element nodes that are children of this 
		 element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the current number of element nodes that are children of this 
		 element. 0 if this element has no child nodes that are of nodeType 1.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.childElementCount"><linktext>MDC - Element: childElementCount Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-childElementCount"><linktext>W3C - Element Traversel: childElementCount Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/firstElementChild"><linktext>firstElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/lastElementChild"><linktext>lastElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="elementtraversal.xml#ElementTraversal/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:firstElementChild:get"><apiName>firstElementChild</apiName><shortdesc>
		 Returns the first child element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the first child element node of this element. null if this 
		 element has no child elements.
		 
		 </apiDesc><example>
		 In this example, the alert shows "SPAN", which is the name of the 
		 first child node of the paragraph element.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.firstElementChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.firstElementChild"><linktext>MDC - Element: firstElementChild Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-firstElementChild"><linktext>W3C - Element Traversel: firstElementChild Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/childElementCount"><linktext>childElementCount</linktext></link><link href="elementtraversal.xml#ElementTraversal/lastElementChild"><linktext>lastElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="elementtraversal.xml#ElementTraversal/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:lastElementChild:get"><apiName>lastElementChild</apiName><shortdesc>
		 Returns the last child element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the last child element node of this element. null if this 
		 element has no child elements.
		 
		 </apiDesc><example>
		 In this example, the alert shows "B", which is the name of the 
		 last child node of the paragraph element.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 	&lt;b&gt;bold&lt;/b&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.lastElementChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.lastElementChild"><linktext>MDC - Element: lastElementChild Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-lastElementChild"><linktext>W3C - Element Traversel: lastElementChild Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/childElementCount"><linktext>childElementCount</linktext></link><link href="elementtraversal.xml#ElementTraversal/firstElementChild"><linktext>firstElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="elementtraversal.xml#ElementTraversal/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:nextElementSibling:get"><apiName>nextElementSibling</apiName><shortdesc>
		 Returns the next sibling element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the next sibling element node of this element. null if this 
		 element has no element sibling nodes that come after this one in the 
		 document tree.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-01').nextElementSibling;
		 	document.write('&lt;p&gt;Siblings of div-01&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.nextElementSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;</codeblock>
		 
		 <p>This example outputs the following into the page when it loads:</p>
		 
		 <p>Siblings of div-01</p>
		 <ol>
		 	<li>DIV</li>
		 	<li>SCRIPT</li>
		 	<li>P</li>
		 	<li>OL</li>
		 </ol>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.nextElementSibling"><linktext>MDC - Element: nextElementSibling Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-nextElementSibling"><linktext>W3C - Element Traversel: nextElementSibling Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/childElementCount"><linktext>childElementCount</linktext></link><link href="elementtraversal.xml#ElementTraversal/firstElementChild"><linktext>firstElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/lastElementChild"><linktext>lastElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:previousElementSibling:get"><apiName>previousElementSibling</apiName><shortdesc>
		 Returns the previous sibling element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the previous sibling element node of this element. null if 
		 this element has no element sibling nodes that come before this one 
		 in the document tree.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 &lt;li&gt;This is a list item&lt;/li&gt;
		 &lt;li&gt;This is another list item&lt;/li&gt;
		 &lt;div id="div-03"&gt;Here is div-03&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-03').previousElementSibling;
		 	document.write('&lt;p&gt;Siblings of div-03&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.previousElementSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;</codeblock>
		 
		 <p>This example outputs the following into the page when it loads:</p>
		 
		 <p>Siblings of div-03</p>
		 <ol>
		 	<li>LI</li>
		 	<li>LI</li>
		 	<li>DIV</li>
		 	<li>DIV</li>
		 </ol>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.previousElementSibling"><linktext>MDC - Element: previousElementSibling Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-previousElementSibling"><linktext>W3C - Element Traversel: previousElementSibling Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/childElementCount"><linktext>childElementCount</linktext></link><link href="elementtraversal.xml#ElementTraversal/firstElementChild"><linktext>firstElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/lastElementChild"><linktext>lastElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/nextElementSibling"><linktext>nextElementSibling</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="gecko.dom.objects"><apiName>gecko.dom.objects</apiName><apiClassifier id="gecko.dom.objects:Sidebar"><apiName>Sidebar</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>http://developer.mozilla.org/en/DOM/window.sidebar
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="gecko.events"><apiName>gecko.events</apiName><apiClassifier id="gecko.events:nsIDOMEventTarget"><apiName>nsIDOMEventTarget</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMEventTarget.idl
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="gecko.events:MouseEvent"><apiName>MouseEvent</apiName><shortdesc>
	 The DOMMouseScroll event is sent when the mouse wheel is moved.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The DOMMouseScroll event is sent when the mouse wheel is moved. The target of 
	 this event is the element that was under the mouse pointer when the mouse wheel 
	 was scrolled, similar to the click event.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="gecko.events:MouseEvent:HORIZONTAL_AXIS"><apiName>HORIZONTAL_AXIS</apiName><shortdesc>
		 Unknown value
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Unknown value
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko.events:MouseEvent:VERTICAL_AXIS"><apiName>VERTICAL_AXIS</apiName><shortdesc>
		 Unknown value
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Unknown value
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko.events:MouseEvent:axis:get"><apiName>axis</apiName><shortdesc>
		 Specifies the axis of the scroll gesture (horizontal or vertical).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Specifies the axis of the scroll gesture (horizontal or vertical). 
		 This attribute was added in Firefox 3.5
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=378028"><linktext>bug 378028</linktext></link></related-links></apiValue><apiValue id="gecko.events:MouseEvent:detail:get"><apiName>detail</apiName><shortdesc>
		 Specifies the number of “ticks” that the mouse wheel moved.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Specifies the number of “ticks” that the mouse wheel moved. 
		 Positive values mean “down” / “right”, negative “up” / “left”.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="gecko"><apiName>gecko</apiName><apiClassifier id="gecko:nsIBoxObject"><apiName>nsIBoxObject</apiName><shortdesc>
	 Where possible, element.getClientRects and element.getBoundingClientRect should 
	 be used instead.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Where possible, element.getClientRects and element.getBoundingClientRect should 
	 be used instead.  nsIBoxObject is subject to change.
	 
	 INCOMPLETE
	 
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="gecko:nsIURI"><apiName>nsIURI</apiName><shortdesc>
	 nsIURI is an interface for an uniform resource identifier with 
	 internationalization support, offering attributes that allow setting 
	 and querying the basic components of a URI, and methods for 
	 performing basic operations on URIs.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 nsIURI is an interface for an uniform resource identifier with 
	 internationalization support, offering attributes that allow setting 
	 and querying the basic components of a URI, and methods for 
	 performing basic operations on URIs.
	 </apiDesc></apiClassifierDetail><apiValue id="gecko:nsIURI:asciiHost:get"><apiName>asciiHost</apiName><shortdesc>
		 The URI host with an ASCII compatible encoding.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI host with an ASCII compatible encoding. Follows the IDNA 
		 draft spec for converting internationalized domain names (UTF-8) 
		 to ASCII for compatibility with existing Internet infrasture.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:asciiSpec:get"><apiName>asciiSpec</apiName><shortdesc>
		 The URI spec with an ASCII compatible encoding.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI spec with an ASCII compatible encoding. The host portion 
		 follows the IDNA draft spec. Other parts are URL-escaped per the 
		 rules of RFC2396. The result is strictly ASCII.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:host:get"><apiName>host</apiName><shortdesc>
		 The host is the Internet domain name to which this URI refers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The host is the Internet domain name to which this URI refers. It 
		 could be an IPv4 (or IPv6) address literal. If supported, it could 
		 be a non-ASCII internationalized domain name.
		 
		 Note: Characters are not escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:hostPort:get"><apiName>hostPort</apiName><shortdesc>
		 The "host : port" part of the URI (or simply the host, if port is -1).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The "host : port" part of the URI (or simply the host, if port is -1).
		 
		 Note: Characters are not escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:originCharset:get"><apiName>originCharset</apiName><shortdesc>
		 The charset of the document from which this URI originated.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The charset of the document from which this URI originated. An 
		 empty value implies UTF-8.
		 
		 If this value is something other than UTF-8 then the URI components 
		 (e.g., spec, prePath, username, etc.) are all fully URL-escaped. 
		 Otherwise, the URI components may contain unescaped multibyte 
		 UTF-8 characters.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:password:get"><apiName>password</apiName><shortdesc>
		 The optional password, assuming the preHost consists of 
		 "username:password".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The optional password, assuming the preHost consists of 
		 "username:password".
		 
		 Note: Some characters may be escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:path:get"><apiName>path</apiName><shortdesc>
		 The path, typically including at least a leading '/' (but may also 
		 be empty, depending on the protocol).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The path, typically including at least a leading '/' (but may also 
		 be empty, depending on the protocol).
		 
		 Note: Some characters may be escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:port:get"><apiName>port</apiName><shortdesc>
		 The URI's port.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The URI's port. A port value of -1 corresponds to the protocol's 
		 default port (eg. -1 implies port 80 for HTTP URIs).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:prePath:get"><apiName>prePath</apiName><shortdesc>
		 The prePath returns the string before the path (such as 
		 "scheme://user:password</shortdesc><prolog><asCustoms><host>: port"). This is useful for authentication 
		 or managing sessions.
		 
		 Note: Some characters may be escaped.
		 </host></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The prePath returns the string before the path (such as 
		 "scheme://user:password</apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:scheme:get"><apiName>scheme</apiName><shortdesc>
		 The scheme is the protocol to which this URI refers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The scheme is the protocol to which this URI refers. The scheme is 
		 restricted to the US-ASCII charset per RFC2396.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:spec:get"><apiName>spec</apiName><shortdesc>
		 Returns a string representation of the URI.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representation of the URI. Setting the spec causes 
		 the new spec to be parsed using the rules for the scheme the URI 
		 currently has. If the string cannot be parsed as a URI, 
		 NS_ERROR_MALFORMED_URI thrown.
		 
		 If the URI stores information from the nsIIOService  interface's 
		 newURI()  call that created it, other than just the parsed string, 
		 the behavior of this information when setting the spec attribute 
		 is undefined.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:userPass:get"><apiName>userPass</apiName><shortdesc>
		 The "username:password" (or username only if the value doesn't 
		 contain a ':').</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The "username:password" (or username only if the value doesn't 
		 contain a ':').
		 
		 Note: Some characters may be escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:username:get"><apiName>username</apiName><shortdesc>
		 The optional username, assuming the preHost consists of 
		 "username:password".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The optional username, assuming the preHost consists of 
		 "username:password".
		 
		 Note: Some characters may be escaped.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="gecko:nsIDOMOfflineResourceList"><apiName>nsIDOMOfflineResourceList</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>http://developer.mozilla.org/en/nsIDOMOfflineResourceList
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="gecko:nsIPrincipal"><apiName>nsIPrincipal</apiName><shortdesc>
	 http://developer.mozilla.org/en/nsIPrincipal
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 http://developer.mozilla.org/en/nsIPrincipal
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="gecko:nsIXPCComponents"><apiName>nsIXPCComponents</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>
	 
	 http://mxr.mozilla.org/mozilla-central/source/js/src/xpconnect/idl/xpccomponents.idl
	 
	 http://developer.mozilla.org/en/Components_object
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="selectors"><apiName>selectors</apiName><apiClassifier id="selectors:NodeSelector"><apiName>NodeSelector</apiName><shortdesc>
	 Objects implementing any of the Document, DocumentFragment or Element interfaces, as defined in DOM Level 3 Core, must also implement the NodeSelector interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing any of the Document, DocumentFragment or Element interfaces, as defined in DOM Level 3 Core, must also implement the NodeSelector interface.
	 
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="webstorage"><apiName>webstorage</apiName><apiClassifier id="webstorage:Storage"><apiName>Storage</apiName><shortdesc>
	 The DOM Storage mechanism is a means through which string key/value pairs can be securely stored and later 
	 retrieved for use.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DOM Storage mechanism is a means through which string key/value pairs can be securely stored and later 
	 retrieved for use. The goal of this addition is to provide a comprehensive means through which interactive 
	 applications can be built (including advanced abilities, such as being able to work "offline" for extended 
	 periods of time).
	 
	 <p><codeph>sessionStorage</codeph> sets fields on the window. When the window is closed, the session fields 
	 are lost, even if the site remains open in another window.</p>
	 
	 <p><codeph>localStorage</codeph> sets fields on the domain. Even when you close the browser, reopen it, and 
	 go back to the site, it remembers all fields in localStorage.</p>
	 
	 </apiDesc></apiClassifierDetail><apiValue id="webstorage:Storage:webstorage:Storage:length:get"><apiName>length</apiName><shortdesc>
		 Returns the number of key/value pairs currently present in the list associated with the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of key/value pairs currently present in the list associated with the object.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc304101%28VS.85%29.aspx"><linktext>MSDN: length Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/Storage"><linktext>MDC - DOM Storage</linktext></link><link href="http://www.w3.org/TR/webstorage/#the-storage-interface"><linktext>W3C - Web Storage: length Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:Storage:webstorage:Storage:remainingSpace:get"><apiName>remainingSpace</apiName><shortdesc>
		 Retrieves the remaining memory space, in bytes, for the storage object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Retrieves the remaining memory space, in bytes, for the storage object.
		 
		 <p>The current size of the storage area is calculated as the sum of the length of all key names and values.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc197016%28VS.85%29.aspx"><linktext>MSDN: remainingSpace Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="webstorage:StorageEvent"><apiName>StorageEvent</apiName><shortdesc>
	 Is fired when a storage area changes
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Is fired when a storage area changes
	 
	 </apiDesc></apiClassifierDetail><apiValue id="webstorage:StorageEvent:domain:get"><apiName>domain</apiName><shortdesc>
		 The domain the field is stored in.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The domain the field is stored in.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:key:get"><apiName>key</apiName><shortdesc>
		 The key being changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The key being changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: key Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:newValue:get"><apiName>newValue</apiName><shortdesc>
		 The new value of the key being changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The new value of the key being changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: newValue Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:oldValue:get"><apiName>oldValue</apiName><shortdesc>
		 The old value of the key being changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The old value of the key being changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: oldValue Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:source:get"><apiName>source</apiName><shortdesc>
		 The WindowProxy object of the browsing context of the document whose key changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 The WindowProxy object of the browsing context of the document whose key changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: source Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:storageArea:get"><apiName>storageArea</apiName><shortdesc>
		 The Storage object that was affected.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>webstorage:Storage</apiValueClassifier></apiValueDef><apiDesc>
		 The Storage object that was affected.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: storageArea Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:uri:get"><apiName>uri</apiName><shortdesc>
		 The URL of the page that changed the field.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Apple"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URL of the page that changed the field.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:url:get"><apiName>url</apiName><shortdesc>
		 The address of the document whose key changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The address of the document whose key changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: url Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue></apiClassifier></apiPackage></allClasses>