<?xml version="1.0" encoding="UTF-8"?><allClasses><apiPackage id="cssom.view"><apiName>cssom.view</apiName><apiDetail/><apiClassifier id="cssom.view:Screen"><apiName>Screen</apiName><shortdesc>
	 Has properties that hold information about the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has properties that hold information about the screen.
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C CSSOM Views Specification: Screen</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html"><linktext>Quirksmode: W3C DOM Compatibility - CSS Object Model View</linktext></link></related-links><apiValue id="cssom.view:Screen:cssom.view:Screen:availHeight:get"><apiName>availHeight</apiName><shortdesc>
		 Returns the amount of vertical space available to the window on the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the amount of vertical space available to the window on the screen. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (window.screen.availHeight != window.screen.height) {
		 	// something's in the way!
		 	// use available to size window
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533487(VS.85).aspx"><linktext>MSDN: availHeight Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.availHeight"><linktext>MDC - Window: availHeight Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: availHeight Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:availWidth:get"><apiName>availWidth</apiName><shortdesc>
		 Returns the amount of horizontal space in pixels available to the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the amount of horizontal space in pixels available to the window. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (window.screen.availHeight != window.screen.height) {
		 	// something's in the way!
		 	// use available to size window
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533488(VS.85).aspx"><linktext>MSDN: availWidth Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.availWidth"><linktext>MDC - Window: availWidth Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: availWidth Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:colorDepth:get"><apiName>colorDepth</apiName><shortdesc>
		 Returns the lowest number of bits from the color components of the output device.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the lowest number of bits from the color components of the output device.
		 
		 </apiDesc><example>
		 Check the color depth of the screen
		 <codeblock>
		 if ( window.screen.colorDepth &lt; 8) {
		 	// use low-color version of page
		 } else { 
		 	// use regular, colorful page
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533578(VS.85).aspx"><linktext>MSDN: colorDepth Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.colorDepth"><linktext>MDC - Window: colorDepth Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: colorDepth Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:height:get"><apiName>height</apiName><shortdesc>
		 Returns the height of the screen in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the height of the screen in pixels. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (window.screen.availHeight != window.screen.height) {
		 	// something is occupying some screen real estate!
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533779(VS.85).aspx"><linktext>MSDN: height Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.height"><linktext>MDC - Window: height Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: height Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:pixelDepth:get"><apiName>pixelDepth</apiName><shortdesc>
		 Returns the lowest number of bits from the color components of the output device.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the lowest number of bits from the color components of the output device.
		 
		 </apiDesc><example>
		 <codeblock>
		 // if there is not adequate bit depth choose a simpler color
		 if ( window.screen.pixelDepth &gt; 8 ) {
		 	document.style.color = "#FAEBD7";
		 } else {
		 	document.style.color = "#FFFFFF";
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screen.pixelDepth"><linktext>MDC - Window: pixelDepth Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: pixelDepth Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:Screen:cssom.view:Screen:width:get"><apiName>width</apiName><shortdesc>
		 Returns the width of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the width of the screen. 
		 
		 </apiDesc><example>
		 Crude way to check that the screen is at 1024x768
		 <codeblock>
		 if (window.screen.width &gt; 1000) {
		 	// resolution is below 10 x 7
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535144(VS.85).aspx"><linktext>MSDN: width Propety</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.screen.width"><linktext>MDC - Window: width Propety</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-screen-interface"><linktext>W3C - CSSOM View: width Propety</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#screenview"><linktext>Quirksmode: ScreenView properties</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:DocumentView"><apiName>DocumentView</apiName><shortdesc>
	 Has a method that gives position information about an Element node relative to the Document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has a method that gives position information about an Element node relative to the Document.
	 
	 <p>DocumentView contains many properties and a few methods that were previously not part of any specification. They originated as part of 
	 MSIE's DHTML object model. They are now all part of the CSSOM Views specification which should be implemented on any browser supporting
	 DOM 3 Core.</p>
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 <p><b>Note:</b> This conflicts with an interface in DOM 2 Views. Maybe this specification
	 combined with HTML 5 (for AbstractView) can obsolete that one as it is completely useless in practice.</p> 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-documentview-interface"><linktext>W3C CSSOM Views Specification: DocumentView</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html"><linktext>Quirksmode: W3C DOM Compatibility - CSS Object Model View</linktext></link></related-links><apiOperation id="cssom.view:DocumentView:cssom.view:DocumentView:elementFromPoint"><apiName>elementFromPoint</apiName><shortdesc>
		 Returns the element from the document whose elementFromPoint method is being called which is the 
		 topmost element which lies under the given point.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The element at x,y in the viewport
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>The X coordinate to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>The Y coordinate to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the element from the document whose elementFromPoint method is being called which is the 
		 topmost element which lies under the given point. 
		 
		 <p>The point is specified via coordinates, in CSS pixels, relative to the upper-left-most point 
		 in the window or frame containing the document.</p>
		 
		 <p><b>Note:</b> If the element at the specified point belongs to another document (for example, 
		 an iframe's subdocument), the element in the DOM of the document the method is called on (in the iframe 
		 case, the iframe itself) is returned. If the element at the given point is anonymous or XBL generated 
		 content, such as a textbox's scroll bars, then the first non-anonymous ancestor element (for example, 
		 the textbox) is returned.</p>
		 
		 <p><b>Note:</b> If the specified point is outside the visible bounds of the document or either 
		 coordinate is negative, the result is null.</p>
		 
		 <p><b>Note:</b> The browsers do not entirely agree which mouse coordinates this method needs. 
		 IE and Firefox 3 need clientX/Y (relative to the viewport), while Opera and Safari need pageX/Y (relative 
		 to the document).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;elementFromPoint example&lt;/title&gt;
		 		&lt;script type="text/javascript"&gt;
		 			function changeColor(newColor) {
		 				elem = document.elementFromPoint(2, 2);
		 				elem.style.color = newColor;
		 			}
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body&gt;
		 		&lt;p id="para1"&gt;Some text here&lt;/p&gt;
		 		&lt;button onclick="changeColor('blue');"&gt;blue&lt;/button&gt;
		 		&lt;button onclick="changeColor('red');"&gt;red&lt;/button&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;
		 </codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536417(VS.85).aspx"><linktext>MSDN: elementFromPoint Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.elementFromPoint"><linktext>MDC - Document: elementFromPoint Method</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-documentview-interface"><linktext>W3C - CSSOM View: elementFromPoint Method</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#documentview"><linktext>Quirksmode: DocumentView and ElementView methods</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="cssom.view:WindowView"><apiName>WindowView</apiName><shortdesc>
	 Has properties that hold the dimensions of the entire browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has properties that hold the dimensions of the entire browser window.
	 
	 <p>Some browser compatibility information was obtained via Quirksmode.</p>
	 
	 <p>Some browser compatibility information was obtained via Aptana.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C CSSOM Views Specification: WindowView</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html"><linktext>Quirksmode: W3C DOM Compatibility - CSS Object Model View</linktext></link></related-links><apiValue id="cssom.view:WindowView:cssom.view:WindowView:innerHeight:get"><apiName>innerHeight</apiName><shortdesc>
		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.
		 
		 <p><b>Note:</b> The innerHeight property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>
		 
		 </apiDesc><example>
		 Assuming a frameset
		 <codeblock>
		 var intFrameHeight = window.innerHeight; // or
		 var intFrameHeight = self.innerHeight; // will return the height of the frame viewport within the frameset
		 var intFramesetHeight = parent.innerHeight; // will return the height of the viewport of the closest frameset
		 var intOuterFramesetHeight = top.innerHeight; // will return the height of the viewport of the outermost frameset</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.innerHeight"><linktext>MDC - Window: innerHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: innerHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/outerWidth"><linktext>outerWidth</linktext></link><link href="cssom.view.xml#WindowView/innerWidth"><linktext>innerWidth</linktext></link><link href="cssom.view.xml#WindowView/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:innerWidth:get"><apiName>innerWidth</apiName><shortdesc>
		 Width of the browser window viewport including, if rendered, the vertical scrollbar.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Width of the browser window viewport including, if rendered, the vertical scrollbar.
		 
		 <p><b>Note:</b> The innerWidth property does not include the sidebar. So when the sidebar is expanded, the innerWidth property value diminishes.</p>
		 
		 <p><b>Note:</b> The innerWidth property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>
		 
		 </apiDesc><example>
		 Assuming a frameset
		 <codeblock>
		 var intFrameWidth = window.innerWidth; // or
		 var intFrameWidth = self.innerWidth; // will return the width of the frame viewport within the frameset
		 var intFramesetWidth = parent.innerWidth; // will return the width of the viewport of the closest frameset
		 var intOuterFramesetWidth = top.innerWidth; // will return the width of the viewport of the outermost frameset</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.innerWidth"><linktext>MDC - Window: innerWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: innerWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/outerWidth"><linktext>outerWidth</linktext></link><link href="cssom.view.xml#WindowView/innerHeight"><linktext>innerHeight</linktext></link><link href="cssom.view.xml#WindowView/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:media:get"><apiName>media</apiName><shortdesc>
		 Returns an Media object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>cssom.view:Media</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an Media object.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: media Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:outerHeight:get"><apiName>outerHeight</apiName><shortdesc>
		 Gets the height of the outside of the browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets the height of the outside of the browser window. window.outerHeight represents the height of 
		 the whole browser window including toolbars and window chrome.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.outerHeight"><linktext>MDC - Window: outerHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: outerHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/innerWidth"><linktext>innerWidth</linktext></link><link href="cssom.view.xml#WindowView/innerHeight"><linktext>innerHeight</linktext></link><link href="cssom.view.xml#WindowView/outerWidth"><linktext>outerWidth</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:outerWidth:get"><apiName>outerWidth</apiName><shortdesc>
		 Gets the width of the outside of the browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets the width of the outside of the browser window. window.outerWidth represents the width of 
		 the whole browser window including sidebar (if expanded), window chrome and window [re-]sizing borders/handles.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.outerWidth"><linktext>MDC - Window: outerWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: outerWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/innerWidth"><linktext>innerWidth</linktext></link><link href="cssom.view.xml#WindowView/innerHeight"><linktext>innerHeight</linktext></link><link href="cssom.view.xml#WindowView/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:pageXOffset:get"><apiName>pageXOffset</apiName><shortdesc>
		 Returns the number of pixels that the document has already been scrolled horizontally.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of pixels that the document has already been scrolled horizontally. 
		 
		 <p><b>Note:</b> <codeph>window.pageXOffset == window.scrollX; // always true</codeph></p>
		 
		  </apiDesc><example>
		 <codeblock>
		 // make sure and go over to the second horizontal page
		 if (window.scrollX) {
		 	scroll(0,0);
		 }
		 scrollBy(400, 0);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.pageXOffset"><linktext>MDC - Window: pageXOffset Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: pageXOffset Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/pageYOffset"><linktext>pageYOffset</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:pageYOffset:get"><apiName>pageYOffset</apiName><shortdesc>
		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport. 
		 
		 <p><b>Note:</b> <codeph>window.pageYOffset == window.scrollY; // always true</codeph></p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // make sure and go over to the second horizontal page
		 if (window.scrollY) {
		 	scroll(0,0);
		 }
		 scrollByPages(1);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.pageYOffset"><linktext>MDC - Window: pageYOffset Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: pageYOffset Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="" invalidHref="cssom.view.pageXOffset.xml"><linktext>pageXOffset</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:screen:get"><apiName>screen</apiName><shortdesc>
		 Returns a reference to the screen object associated with the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>cssom.view:Screen</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a reference to the screen object associated with the window. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (screen.pixelDepth &lt; 8) {
		 	// use low-color version of page
		 } else { 
		 	// use regular, colorful page
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screen"><linktext>MDC - Window: screen Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screen Property</linktext></link><link href="http://www.aptana.com/reference/html/api/Window.html#Window.screen"><linktext>Aptana: Window.screen Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:screenX:get"><apiName>screenX</apiName><shortdesc>
		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen. 
		 
		 <p><b>Note (Opera):</b> Opera calculates the coordinates of the specific tab window relative to 
		 the encompassing browser window. This is understandable given its way of working with 
		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 
		 browser window relative to the screen.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screenX"><linktext>MDC - Window: screenX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screenX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:WindowView:cssom.view:WindowView:screenY:get"><apiName>screenY</apiName><shortdesc>
		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen. 
		 
		 <p><b>Note (Opera):</b> Opera calculates the coordinates of the specific tab window relative to 
		 the encompassing browser window. This is understandable given its way of working with 
		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 
		 browser window relative to the screen.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screenY"><linktext>MDC - Window: screenY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screenY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="cssom.view.xml#WindowView/screenX"><linktext>screenX</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:Media"><apiName>Media</apiName><shortdesc>
	 Should be an object returned by the Window.media property, although I haven't found any
	 browsers that support this.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Should be an object returned by the Window.media property, although I haven't found any
	 browsers that support this.
	 
	 </apiDesc><example>
	 <codeblock>var m = window.media;</codeblock>
	 
	 </example></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-media-interface"><linktext>W3C CSSOM Views Specification: Media</linktext></link></related-links><apiOperation id="cssom.view:Media:cssom.view:Media:query"><apiName>query</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the mediaquery matches the state of the current view.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>mediaquery</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#media-query"><linktext>W3C CSSOM Views Specification: Media.query()</linktext></link></related-links></apiOperation><apiValue id="cssom.view:Media:cssom.view:Media:type:get"><apiName>type</apiName><shortdesc>
		 Returns the string that represents the canvas' current rendering mode in canonical form.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the string that represents the canvas' current rendering mode in canonical form.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#media-type"><linktext>W3C CSSOM Views Specification: Media.type</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:ElementView"><apiName>ElementView</apiName><shortdesc>
	 Has properties and methods that give information about the dimensions of an Element node (HTML tag).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has properties and methods that give information about the dimensions of an Element node (HTML tag).
	 
	 <p>ElementView contains many properties and a few methods that were previously not part of any specification. They originated as part of 
	 MSIE's DHTML object model. They are now all part of the CSSOM Views specification which should be implemented on any browser supporting
	 DOM 3 Core.</p>
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-elementview"><linktext>W3C CSSOM Views Specification: ElementView</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html"><linktext>Quirksmode: W3C DOM Compatibility - CSS Object Model View</linktext></link></related-links><apiOperation id="cssom.view:ElementView:cssom.view:ElementView:getBoundingClientRect"><apiName>getBoundingClientRect</apiName><shortdesc>
		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_almost"/><apiTool name="Firefox" version="3.1b_almost"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The returned value is a TextRectangle object which is the union 
		 of the rectangles returned by getClientRects() for the element, i.e., 
		 the CSS border-boxes associated with the element.
		 
		 </apiDesc><apiOperationClassifier>cssom.view:TextRectangle</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.
		 
		 <p><b>Note (IE8):</b> In IE8 mode, the bounding rectangle is the same as the client rectangle.</p>
		 
		 <p><b>Note (IE5):</b> In Microsoft Internet Explorer 5, the window's upper-left is at 
		 2,2 (pixels) with respect to the true client.</p>
		 
		 <p><b>Note (Firefox 3.5):</b> Firefox 3.5 adds width and height properties to the TextRectangle object.</p>
		 
		 <p><b>Note (Firefox):</b> Firefox doesn't round the top/bottom coordinates.</p>
		 
		 </apiDesc><example>
		 <codeblock>var rect = obj.getBoundingClientRect();</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536433(VS.85).aspx"><linktext>MSDN: getBoundingClientRect Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.getBoundingClientRect"><linktext>MDC - Element: getBoundingClientRect Method</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-getclientrects"><linktext>W3C - CSSOM View: getBoundingClientRect Method</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#documentview"><linktext>Quirksmode: DocumentView and ElementView methods</linktext></link></related-links></apiOperation><apiOperation id="cssom.view:ElementView:cssom.view:ElementView:getClientRects"><apiName>getClientRects</apiName><shortdesc>
		 Retrieves a collection of rectangles that describes the layout of the 
		 contents of an object or range within the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_almost"/><apiTool name="Firefox" version="3.1b_almost"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>cssom.view:TextRectangleList</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Retrieves a collection of rectangles that describes the layout of the 
		 contents of an object or range within the client. Each rectangle 
		 describes a single line.
		 
		 <p><b>Note (IE8):</b> In IE8 mode, getClientRects always returns 
		 a collection of one rectangle—the same rectangle as getBoundingClientRect.</p>
		 
		 <p><b>Note (IE):</b> In IE5-7, split up a block-level element such as a &lt;p&gt; into one rectangle per line.
		 This is incorrect: a block-level element should be reported as one rectangle.</p>
		 
		 <p><b>Note (IE):</b> In IE5-7, the rectangles are off by about two pixels. According to John Resig this is caused by the 
		 (invisible, but nonetheless present) borders of the &lt;html&gt; element.</p>
		 
		 <p><b>Note (Firefox 3.5):</b> Firefox 3.5 adds width and height properties to the TextRectangle object.</p>
		 
		 <p><b>Note (Firefox):</b> Firefox doesn't round the top/bottom coordinates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var rects = obj.getClientRects();
		 var numLines = rects.length;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536435(VS.85).aspx"><linktext>MSDN: getClientRects Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.getClientRects"><linktext>MDC - Element: getClientRects Method</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-getclientrects"><linktext>W3C - CSSOM View: getClientRects Method</linktext></link><link href="http://ejohn.org/blog/getboundingclientrect-is-awesome/"><linktext>John Resig</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#documentview"><linktext>Quirksmode: DocumentView and ElementView methods</linktext></link></related-links></apiOperation><apiValue id="cssom.view:ElementView:cssom.view:ElementView:clientHeight:get"><apiName>clientHeight</apiName><shortdesc>
		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.
		 
		 <p>clientHeight can be calculated as CSS height + CSS padding - height of horizontal scrollbar (if present).</p>
		 
		 <p><b>Note:</b> offsetLeft returns the position the upper left edge of the element; not necessarily 
		 the 'real' left edge of the element. This is important for span elements in flowed text that wraps from one 
		 line to the next. The span may start in the middle of the page and wrap around to the beginning of the next 
		 line. The offsetLeft will refer to the left edge of the start of the span, not the left edge of text at the 
		 start of the second line. Therefore, a box with the left, top, width and height of offsetLeft, offsetTop, 
		 offsetWidth and offsetHeight will not be a bounding box for a span with wrapped text.</p>
		 
		 </apiDesc><example>
		 This example shows how the clientHeight property and the offsetHeight property measure document height differently. 
		 The height of the div is set to 100, and this is the value retrieved by the offsetHeight property, not the clientHeight property. 
		 
		 <codeblock>
		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientHeight)"&gt;client height&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetHeight)"&gt;offset heightY&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533563(VS.85).aspx"><linktext>MSDN: clientHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientHeight"><linktext>MDC - Element: clientHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:clientLeft:get"><apiName>clientLeft</apiName><shortdesc>
		 The width of the left border of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The width of the left border of an element in pixels. 
		 
		 <p>It includes the width of the vertical scrollbar if the text direction of the element is right–to–left and 
		 if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left 
		 margin or the left padding.</p>
		 
		 <p><b>Note:</b> The difference between the offsetLeft and clientLeft properties is the border of the object.</p>
		 
		 <p><b>Note:</b> When layout.scrollbar.side property is set to 1 or to 3 and when the text-direction is set to RTL, 
		 then the vertical scrollbar is positioned on the left and this impacts the way clientLeft is computed.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533564(VS.85).aspx"><linktext>MSDN: clientLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientLeft"><linktext>MDC - Element: clientLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:clientTop:get"><apiName>clientTop</apiName><shortdesc>
		 The width of the top border of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The width of the top border of an element in pixels. It does not include the top margin or padding.
		 
		 <p><b>Note:</b> The difference between the offsetTop and the clientTop properties is the border area of the object.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533565(VS.85).aspx"><linktext>MSDN: clientTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientTop"><linktext>MDC - Element: clientTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:clientWidth:get"><apiName>clientWidth</apiName><shortdesc>
		 Returns the inner width of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the inner width of an element in pixels. It includes padding but not the vertical scrollbar (if present, if rendered), border or margin.
		 
		 </apiDesc><example>
		 This example shows how the clientWidth property and the offsetWidth property measure document width differently. The width of the div 
		 is set to 200, and this is the value retrieved by the offsetWidth property, not the clientWidth property. 
		 
		 <codeblock>
		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset widthY&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533566(VS.85).aspx"><linktext>MSDN: clientWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientWidth"><linktext>MDC - Element: clientWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetHeight:get"><apiName>offsetHeight</apiName><shortdesc>
		 Height of an element relative to the element's offsetParent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Height of an element relative to the element's offsetParent.
		 
		 <p>Typically, an element's offsetHeight is a measurement which includes 
		 the element borders, the element vertical padding, the element 
		 horizontal scrollbar (if present, if rendered) and the element CSS height.</p>
		 
		 <p>For the document body object, the measurement includes total linear 
		 content height instead of the element CSS height. Floated elements 
		 extending below other linear content are ignored.</p>
		 
		 <p><b>Note (IE6):</b> To comply with the <xref class="external" href="http://www.w3.org/TR/REC-CSS1/" rel="external nofollow">Cascading Style Sheets, Level 1 (CSS1)</xref> World Wide 
		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 
		 height of objects differently when you use the !DOCTYPE declaration in your 
		 document to switch on standards-compliant mode. This difference may affect 
		 the value of the offsetWidth propety. When standards-compliant mode is 
		 switched on, the width property specifies the distance between the left and 
		 right edges of the bounding box that surrounds the object's content. When 
		 standards-compliant mode is not switched on, and with earlier versions of 
		 Windows Internet Explorer, the width property also includes the border and 
		 padding belts that surround the object's bounding box.</p>
		 
		 </apiDesc><example>
		 This example adjusts the size of a clock's readout to fit the current width and height of the document body.
		 
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;A Simple Clock&lt;/title&gt;
		 &lt;script type="text/javascript"&gt;
		 	function startClock() {
		 		window.setInterval("Clock_Tick()", 1000);
		 		Clock_Tick();
		 	}
		 
		 	var iRatio = 4;
		 	function Clock_Tick() {
		 		var dToday = Date();
		 		var sTime = dToday.substring(11,19);
		 		var iDocHeight = document.body.offsetHeight;
		 		var iDocWidth = document.body.offsetWidth;
		 
		 		if ((iDocHeightRatio)&gt;iDocWidth)
		 		iDocHeight = iDocWidth / iRatio;
		 		document.all.MyTime.innerText = sTime;
		 		document.all.MyTime.style.fontSize = iDocHeight;
		 	}
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onload="startClock()"&gt;
		 &lt;p id="MyTime"&gt;&amp;nbsp;&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534199(VS.85).aspx"><linktext>MSDN: offsetHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetHeight"><linktext>MDC - Element: offsetHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetLeft:get"><apiName>offsetLeft</apiName><shortdesc>
		 Returns the number of pixels that the upper left corner of the current 
		 element is offset to the left within the offsetParent node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of pixels that the upper left corner of the current 
		 element is offset to the left within the offsetParent node.
		 
		 <p><b>Note:</b> offsetLeft returns the position the upper left edge of the element; 
		 not necessarily the 'real' left edge of the element. This is important 
		 for inline elements (such as span) in flowed text that wraps from one 
		 line to the next. The span may start in the middle of the line and wrap 
		 around to the beginning of the next line. The offsetLeft will refer to 
		 the left edge of the start of the span, not the left edge of text at the 
		 start of the second line. Therefore, a box with the left, top, width and 
		 height of offsetLeft, offsetTop, offsetWidth and offsetHeight will not be 
		 a bounding box for a span with wrapped text.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var colorTable = document.getElementById("t1");
		 var tOLeft = colorTable.offsetLeft;
		 
		 if (tOLeft &gt; 5) {
		 	// large left offset: do something here
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534200(VS.85).aspx"><linktext>MSDN: offsetLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetLeft"><linktext>MDC - Element: offsetLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetParent:get"><apiName>offsetParent</apiName><shortdesc>
		 The element from which all offset calculations are currently computed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 The element from which all offset calculations are currently computed.
		 
		 <p>offsetParent returns a reference to the object which is the closest 
		 (nearest in the containment hierarchy) positioned containing element. 
		 If the element is non-positioned, the root element (html in standards 
		 compliant mode; body in quirks rendering mode) is the offsetParent. 
		 offsetParent returns null when the element has style.display set 
		 to "none".</p>
		 
		 <p><b>Note (IE5):</b> In Microsoft Internet Explorer 5, the offsetParent property returns 
		 the table object for the td object.</p>
		 
		 <p><b>Note (IE4):</b> In Internet Explorer 4.0 it returns 
		 the tr object. You can use the parentElement property to retrieve the 
		 immediate container of the table cell.</p>
		 
		 </apiDesc><example>
		 This example shows how to determine the position of a td object. Although the td 
		 object appears to the far right in the document, its position is close to the x-axis and y-axis, 
		 because its offset parent is a table object rather than the document body. For Internet Explorer 4.0,
		 this same example returns a position of 0,0 because the offset parent is the table row.
		 
		 <codeblock>
		 &lt;table border='1' align='right'&gt;
		 	&lt;tr&gt;
		 		&lt;td id='oCell'&gt;This is a small table.&lt;/td&gt;
		 	&lt;/tr&gt;
		 &lt;/table&gt;</codeblock>
		 
		 <codeblock>
		 var oElement = document.getElementById("oCell");
		 
		 alert("The TD element is at (" + oElement.offsetLeft + 
		 "," + oElement.offsetTop + ")\n" + "The offset parent is " 
		 + oElement.offsetParent.tagName );</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534302(VS.85).aspx"><linktext>MSDN: offsetParent Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetParent"><linktext>MDC - Element: offsetParent Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetParent Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetTop:get"><apiName>offsetTop</apiName><shortdesc>
		 Returns the distance of the current element relative to the 
		 top of the offsetParent node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance of the current element relative to the 
		 top of the offsetParent node.
		 
		 </apiDesc><example>
		 <codeblock>
		 d = document.getElementById("div1");
		 
		 topPos = d.offsetTop;
		 
		 if (topPos &gt; 10) {
		 	// object is offset more
		 	// than 10 pixels from its parent
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534303(VS.85).aspx"><linktext>MSDN: offsetTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetTop"><linktext>MDC - Element: offsetTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:offsetWidth:get"><apiName>offsetWidth</apiName><shortdesc>
		 The width of an element, relative to the layout.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The width of an element, relative to the layout.
		 
		 <p>Typically, an element's offsetWidth is a measurement which includes 
		 the element borders, the element horizontal padding, the element 
		 vertical scrollbar (if present, if rendered) and the element CSS width.</p>
		 
		 <p><b>Note (IE6):</b> To comply with the <xref class="external" href="http://www.w3.org/TR/REC-CSS1/" rel="external nofollow">Cascading Style Sheets, Level 1 (CSS1)</xref> World Wide 
		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 
		 height of objects differently when you use the !DOCTYPE declaration in your 
		 document to switch on standards-compliant mode. This difference may affect 
		 the value of the offsetWidth propety. When standards-compliant mode is 
		 switched on, the width property specifies the distance between the left and 
		 right edges of the bounding box that surrounds the object's content. When 
		 standards-compliant mode is not switched on, and with earlier versions of 
		 Windows Internet Explorer, the width property also includes the border and 
		 padding belts that surround the object's bounding box.</p>
		 
		 </apiDesc><example>
		 This example adjusts the size of a clock's readout to fit the current width and height of the document.
		 
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;A Simple Clock&lt;/title&gt;
		 &lt;script type="text/javascript"&gt;
		 	function startClock() {
		 		window.setInterval("Clock_Tick()", 1000);
		 		Clock_Tick();
		 	}
		 
		 	var iRatio = 4;
		 	function Clock_Tick() {
		 		var dToday = Date();
		 		var sTime = dToday.substring(11,19);
		 		var iDocHeight = document.body.offsetHeight;
		 		var iDocWidth = document.body.offsetWidth;
		 
		 		if ((iDocHeightRatio)&gt;iDocWidth)
		 		iDocHeight = iDocWidth / iRatio;
		 		document.all.MyTime.innerText = sTime;
		 		document.all.MyTime.style.fontSize = iDocHeight;
		 	}
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onload="startClock()"&gt;
		 &lt;p id="MyTime"&gt;&amp;nbsp;&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534304(VS.85).aspx"><linktext>MSDN: offsetWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetWidth"><linktext>MDC - Element: offsetWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:scrollHeight:get"><apiName>scrollHeight</apiName><shortdesc>
		 Height of the scroll view of an element; it includes the element padding but not its margin.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Height of the scroll view of an element; it includes the element padding but not its margin.
		 
		 <p>An element's scrollHeight is a measurement of the height of an element's content including 
		 content not visible on the screen due to overflow.</p>
		 
		 <p>If the element's content generated a vertical scrollbar, the scrollHeight value is equal to 
		 the minimum clientHeight the element would require in order to fit all the content in the viewpoint 
		 without using a vertical scrollbar. When an element's content does not generate a vertical scrollbar, 
		 then its scrollHeight property is equal to its clientHeight property.</p>
		 
		 </apiDesc><example>
		 This example uses the scrollHeight property to retrieve the height of the viewable content.
		 
		 <codeblock>
		 &lt;script type="text/javascript"&gt;
		 	function fnCheckScroll(){
		 		var iNewHeight = oDiv.scrollHeight;
		 		alert("The value of the scrollHeight property is: " 
		 		+ iNewHeight + "px"); 
		 	}
		 &lt;/script&gt;
		 ...
		 &lt;div id="oDiv" style="overflow: scroll; height= 100px; width= 250px; text-align: left"&gt;
		 	... 
		 &lt;/div&gt;
		 &lt;button onclick="fnCheckScroll()"&gt;Check scrollHeight&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534615(VS.85).aspx"><linktext>MSDN: scrollHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollHeight"><linktext>MDC - Element: scrollHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:scrollLeft:get"><apiName>scrollLeft</apiName><shortdesc>
		 Gets or sets the number of pixels that an element's content is scrolled to the left.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets or sets the number of pixels that an element's content is scrolled to the left.
		 
		 </apiDesc><example>
		 <codeblock>
		 // Set the number of pixels scrolled
		 element.scrollLeft = 10;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534617(VS.85).aspx"><linktext>MSDN: scrollLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollLeft"><linktext>MDC - Element: scrollLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:scrollTop:get"><apiName>scrollTop</apiName><shortdesc>
		 Gets or sets the number of pixels that the content of an element is scrolled upward.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets or sets the number of pixels that the content of an element is scrolled upward.
		 
		 <p>An element's scrollTop is a measurement of the distance of an element's top to its topmost visible content.</p>
		 
		 <p>When an element content does not generate a vertical scrollbar, then its scrollTop value defaults to 0.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Get the number of pixels scrolled
		 var  intElemScrollTop = element.scrollTop;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/workshop/author/dhtml/reference/properties/scrolltop.asp?frame=true"><linktext>MSDN: scrollTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollTop"><linktext>MDC - Element: scrollTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="cssom.view:ElementView:cssom.view:ElementView:scrollWidth:get"><apiName>scrollWidth</apiName><shortdesc>
		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater. 
		 
		 <p>If the element is wider than its content area (for example, if there are scroll bars for scrolling through the content), the scrollWidth is larger than the clientWidth.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="aDiv" style="width: 100px; height: 200px; overflow: auto;"&gt;
		 	-FooBar-FooBar-FooBar
		 &lt;/div&gt;
		 &lt;br/&gt;
		 &lt;input type="button" value="Show scrollWidth"
		 onclick="alert(document.getElementById('aDiv').scrollWidth);"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534619(VS.85).aspx"><linktext>MSDN: scrollWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollWidth"><linktext>MDC - Element: scrollWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:TextRectangleList"><apiName>TextRectangleList</apiName><shortdesc>
	 A collection of TextRectangle objects returned by the getClientRects method.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A collection of TextRectangle objects returned by the getClientRects method.
	 
	 </apiDesc><example>
	 This example shows how to use the getClientRects method and the TextRectangle collection to iterate through the lines of text in an object.
	 
	 <codeblock>
	 &lt;script&gt;
	 function newHighlite(obj) {            
	 	oRcts = obj.getClientRects();
	 	iLength = oRcts.length;
	 	for (i = 0;i &lt; iLength; i++) {	
	 		alert("Line number " + (i + 1) + " is " + (oRcts(i).right - oRcts(i).left) + " pixels wide.");
	 	}
	 }
	 &lt;/script&gt;</codeblock>
	 
	 </example></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537494(VS.85).aspx"><linktext>MSDN: TextRectangle Collection</linktext></link><link href="http://www.w3.org/TR/cssom-view/#textrectanglelist"><linktext>W3C CSSOM Views Specification: TextRectangleList</linktext></link></related-links><apiOperation id="cssom.view:TextRectangleList:cssom.view:TextRectangleList:item"><apiName>item</apiName><shortdesc>
		 Retrieves an object from a TextRectangle collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: May be raised if the index 
		 is negative or greater than the number of TextRectangle objects 
		 associated with the object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The TextRectangle object at that index
		 
		 </apiDesc><apiOperationClassifier>cssom.view:TextRectangle</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves an object from a TextRectangle collection.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/dd347037(VS.85).aspx"><linktext>MSDN: item Method</linktext></link><link href="http://www.w3.org/TR/cssom-view/#textrectanglelist"><linktext>W3C - CSSOM View: item Method</linktext></link></related-links></apiOperation><apiOperation id="cssom.view:TextRectangleList:cssom.view:TextRectangleList:namedItem"><apiName>namedItem</apiName><shortdesc>
		 Retrieves an object or a collection from a specified collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns an object or a collection of objects if successful, or null otherwise.
		 
		 </apiDesc><apiOperationClassifier>cssom.view:TextRectangle</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name or id property of the object to retrieve. A collection is returned if more than one match is made.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves an object or a collection from a specified collection.
		 
		 <p><b>Note (IE8):</b> In IE8 mode, the namedItem method does not return collections if more than one named item is found; instead, it returns the first case-insensitive matched element.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="oDIV1"&gt;This text will not change.&lt;/div&gt;
		 &lt;div id="oDIV2"&gt;This text will change.&lt;/div&gt;
		 &lt;button onclick="document.all.namedItem('oDIV2').innerHTML='Changed!';"&gt;
		 Change Option
		 &lt;/button&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536634(VS.85).aspx"><linktext>MSDN: namedItem Method</linktext></link></related-links></apiOperation><apiValue id="cssom.view:TextRectangleList:cssom.view:TextRectangleList:length:get"><apiName>length</apiName><shortdesc>
		 Returns the total number of TextRectangle objects associated with the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the total number of TextRectangle objects associated with the object.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534101(VS.85).aspx"><linktext>MSDN: length Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#textrectanglelist"><linktext>W3C - CSSOM View: length Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:MouseEventView"><apiName>MouseEventView</apiName><shortdesc>
	 Used to calculate the mouse position relative to the page or screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Used to calculate the mouse position relative to the page or screen.
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C CSSOM Views Specification: MouseEventView</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html"><linktext>Quirksmode: W3C DOM Compatibility - CSS Object Model View</linktext></link></related-links><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:clientX:get"><apiName>clientX</apiName><shortdesc>
		 Returns the horizontal coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page). 
		 
		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 
		 event with a clientX value of 0, regardless of whether the page is scrolled horizontally.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;title&gt;clientX\clientY example&lt;/title&gt;
		 
		 	&lt;script type="text/javascript"&gt;
		 		function showCoords(evt) {
		 			alert(
		 			"clientX value: " + evt.clientX + "\n"
		 			+ "clientY value: " + evt.clientY + "\n"
		 		);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 	&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533567(VS.85).aspx"><linktext>MSDN: clientX Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.clientX"><linktext>MDC - Event: clientX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: clientX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/clientY"><linktext>clientY</linktext></link><link href="cssom.view.xml#MouseEventView/screenX"><linktext>screenX</linktext></link><link href="cssom.view.xml#MouseEventView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:clientY:get"><apiName>clientY</apiName><shortdesc>
		 Returns the vertical coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).
		 
		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 
		 event with a clientY value of 0, regardless of whether the page is scrolled vertically.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;clientX\clientY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"clientX value: " + evt.clientX + "\n"
		 				+ "clientY value: " + evt.clientY + "\n"
		 			);
		 			}
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533568(VS.85).aspx"><linktext>MSDN: clientY Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.clientY"><linktext>MDC - Event: clientY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: clientY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/clientX"><linktext>clientX</linktext></link><link href="cssom.view.xml#MouseEventView/screenX"><linktext>screenX</linktext></link><link href="cssom.view.xml#MouseEventView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:offsetX:get"><apiName>offsetX</apiName><shortdesc>
		 Returns the horizontal coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_incorrect"/><apiTool name="Safari" version="3.1_incorrect"/><apiTool name="Safari" version="4.0b_incorrect"/><apiTool name="Chrome" version="1.0_incorrect"/><apiTool name="Chrome" version="2.0_incorrect"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.
		 
		 <p>In IE the coordinates are calculated relative to the target element when that element is 
		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 
		 relative to the target's offsetParent.</p>
		 
		 <p><b>Note (Safari/Chrome):</b> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the
		 border box.</p>
		 
		 <p><b>Note (Opera):</b> Opera calculates the position from the content box instead of the padding box.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;head&gt;
		 	&lt;script&gt;
		 		function offsetCoords() {
		 			var offsetInfo = ""
		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"
		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"
		 			alert(offsetInfo);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 
		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;
		 	...
		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;
		 	...
		 	&lt;/div&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534305(VS.85).aspx"><linktext>MSDN: offsetX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: offsetX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/offsetY"><linktext>offsetY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:offsetY:get"><apiName>offsetY</apiName><shortdesc>
		 Returns the vertical coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_incorrect"/><apiTool name="Safari" version="3.1_incorrect"/><apiTool name="Safari" version="4.0b_incorrect"/><apiTool name="Chrome" version="1.0_incorrect"/><apiTool name="Chrome" version="2.0_incorrect"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.
		 
		 <p>In IE the coordinates are calculated relative to the target element when that element is 
		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 
		 relative to the target's offsetParent.</p>
		 
		 <p><b>Note (Safari/Chrome):</b> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the
		 border box.</p>
		 
		 <p><b>Note (Opera):</b> Opera calculates the position from the content box instead of the padding box.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;head&gt;
		 	&lt;script&gt;
		 		function offsetCoords() {
		 			var offsetInfo = ""
		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"
		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"
		 			alert(offsetInfo);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 
		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;
		 	...
		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;
		 	...
		 	&lt;/div&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534306(VS.85).aspx"><linktext>MSDN: offsetY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: offsetY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/offsetX"><linktext>offsetX</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:pageX:get"><apiName>pageX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event relative to whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event relative to whole document. 
		 
		 <p><b>Note (IE):</b> In order to get it in IE, too, add the scrolling offset of the 
		 document to clientX/Y.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	function showCoords(evt){
		 		var form = document.forms.form_coords;
		 		var parent_id = evt.target.parentNode.id;
		 		form.parentId.value = parent_id;
		 		form.pageXCoords.value = evt.pageX;
		 		form.pageYCoords.value = evt.pageY;
		 		form.layerXCoords.value = evt.layerX;
		 		form.layerYCoords.value = evt.layerY;
		 	}
		 &lt;/script&gt;
		 
		 &lt;style type="text/css"&gt;
		 
		 #d1 {
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d2 {
		 	position: absolute;
		 	top: 180px;
		 	left: 80%;
		 	right:auto;
		 	width: 40%;
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d3 {
		 	position: absolute;
		 	top: 240px;
		 	left: 20%;
		 	width: 50%;
		 	border: solid blue 1px;
		 	padding: 10px;
		 }
		 
		 &lt;/style&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 
		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;
		 
		 &lt;div id="d1"&gt;
		 	&lt;span&gt;This is an un-positioned div so clicking it will return
		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d2"&gt;
		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		 	values that are relative to the top-left corner of this positioned
		 	element. Note the pageX\pageY properties still return the
		 	absolute position in the document, including page scrolling.&lt;/span&gt;
		 
		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		 	will return layerX/layerY values that are relative to the top-left
		 	corner of this positioned element. Note the pageX\pageY properties still
		 	return the absolute position in the document, including page
		 	scrolling.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d3"&gt;
		 	&lt;form name="form_coords"&gt;
		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;
		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;
		 	&lt;/form&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageX"><linktext>MDC - Event: pageX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: pageX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/pageY"><linktext>pageY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:pageY:get"><apiName>pageY</apiName><shortdesc>
		 Returns the vertical coordinate of the event relative to the whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event relative to the whole document.
		 
		 <p><b>Note (IE):</b> In order to get it in IE, too, add the scrolling offset of the 
		 document to clientX/Y.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	function showCoords(evt){
		 		var form = document.forms.form_coords;
		 		var parent_id = evt.target.parentNode.id;
		 		form.parentId.value = parent_id;
		 		form.pageXCoords.value = evt.pageX;
		 		form.pageYCoords.value = evt.pageY;
		 		form.layerXCoords.value = evt.layerX;
		 		form.layerYCoords.value = evt.layerY;
		 	}
		 &lt;/script&gt;
		 
		 &lt;style type="text/css"&gt;
		 
		 #d1 {
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d2 {
		 	position: absolute;
		 	top: 180px;
		 	left: 80%;
		 	right:auto;
		 	width: 40%;
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d3 {
		 	position: absolute;
		 	top: 240px;
		 	left: 20%;
		 	width: 50%;
		 	border: solid blue 1px;
		 	padding: 10px;
		 }
		 
		 &lt;/style&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 
		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;
		 
		 &lt;div id="d1"&gt;
		 	&lt;span&gt;This is an un-positioned div so clicking it will return
		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d2"&gt;
		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		 	values that are relative to the top-left corner of this positioned
		 	element. Note the pageX\pageY properties still return the
		 	absolute position in the document, including page scrolling.&lt;/span&gt;
		 
		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		 	will return layerX/layerY values that are relative to the top-left
		 	corner of this positioned element. Note the pageX\pageY properties still
		 	return the absolute position in the document, including page
		 	scrolling.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d3"&gt;
		 	&lt;form name="form_coords"&gt;
		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;
		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;
		 	&lt;/form&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageY"><linktext>MDC - Event: pageY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: pageY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/pageX"><linktext>pageX</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:screenX:get"><apiName>screenX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event within the screen as a whole.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event within the screen as a whole. 
		 
		 <p><b>Note:</b> When you trap events on the window, document, or other roomy elements, you can get the 
		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"screenX value: " + evt.screenX + "\n"
		 				+ "screenY value: " + evt.screenY + "\n"
		 			);
		 		}
		 
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 <codeblock>
		 function checkClickMap(e) {
		 	if (e.screenX &lt; 50) doRedButton();
		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();
		 	if (e.screenX &gt;= 100) doRedButton();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534391(VS.85).aspx"><linktext>MSDN: screenX Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.screenX"><linktext>MDC - Event: screenX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: screenX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/clientX"><linktext>clientX</linktext></link><link href="cssom.view.xml#MouseEventView/clientY"><linktext>clientY</linktext></link><link href="cssom.view.xml#MouseEventView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:screenY:get"><apiName>screenY</apiName><shortdesc>
		 Returns the vertical coordinate of the event within the screen as a whole.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event within the screen as a whole.
		 
		 <p><b>Note:</b> When you trap events on the window, document, or other roomy elements, you can get the 
		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"screenX value: " + evt.screenX + "\n"
		 				+ "screenY value: " + evt.screenY + "\n"
		 			);
		 		}
		 
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 <codeblock>
		 function checkClickMap(e) {
		 	if (e.screenX &lt; 50) doRedButton();
		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();
		 	if (e.screenX &gt;= 100) doRedButton();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534392(VS.85).aspx"><linktext>MSDN: screenY Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.screenY"><linktext>MDC - Event: screenY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: screenY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/clientX"><linktext>clientX</linktext></link><link href="cssom.view.xml#MouseEventView/clientY"><linktext>clientY</linktext></link><link href="cssom.view.xml#MouseEventView/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:x:get"><apiName>x</apiName><shortdesc>
		 Returns the value of pageX.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_alternative"/><apiTool name="IE" version="6.0_alternative"/><apiTool name="IE" version="7.0_alternative"/><apiTool name="IE" version="8.0_as_IE7_alternative"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_alternative"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the value of pageX. 
		 
		 </apiDesc><example>
		 <codeblock>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535154(VS.85).aspx"><linktext>MSDN: x Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: x Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/y"><linktext>y</linktext></link></related-links></apiValue><apiValue id="cssom.view:MouseEventView:cssom.view:MouseEventView:y:get"><apiName>y</apiName><shortdesc>
		 Returns the value of pageY.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_alternative"/><apiTool name="IE" version="6.0_alternative"/><apiTool name="IE" version="7.0_alternative"/><apiTool name="IE" version="8.0_as_IE7_alternative"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_alternative"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the value of pageY. 
		 
		 </apiDesc><example>
		 <codeblock>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535164(VS.85).aspx"><linktext>MSDN: y Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: y Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="cssom.view.xml#MouseEventView/x"><linktext>x</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:TextRectangle"><apiName>TextRectangle</apiName><shortdesc>
	 Objects implementing the TextRectangle interface represent a rectangular box.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the TextRectangle interface represent a rectangular box.
	 
	 </apiDesc><example>
	 In the following excerpt from the Gettysburg Address, four TextRectangle objects are contained in the b element (bold text).
	 
	 <codeblock>
	 &lt;p&gt;Four score and seven years ago &lt;b&gt;our fathers&lt;br&gt;
	 brought forth . . . a new nation, conceived in liberty&lt;br&gt;
	 and dedicated to the proposition that all men are&lt;br&gt;
	 created equal.&lt;/b&gt; Now we are engaged in a great civil war . . . 
	 &lt;/p&gt;
	 </codeblock>
	 
	 <p>
	 The four TextRectangle objects are: 
	 <ol>
	 <li>"our fathers"</li>
	 <li>"brought forth . . . a new nation, conceived in liberty"</li>
	 <li>"and dedicated to the proposition that all men are"</li>
	 <li>"created equal"</li>
	 </ol>
	 </p>
	 
	 <p>If you resize the window containing this text, the TextRectangle objects do not update. Because the objects are a 
	 snapshot of the layout, the objects should update after an onresize event occurs.</p>
	 
	 <p>The width of the TextRectangle may not be identical to the width of the TextRange it contains. A TextRange is only 
	 as wide as the text, but a TextRectangle is as wide as the element containing that text.</p>
	 
	 </example></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535906(VS.85).aspx"><linktext>MSDN: TextRectangle Object</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-textrectangle-interface"><linktext>W3C CSSOM Views Specification: TextRectangle</linktext></link></related-links><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:bottom:get"><apiName>bottom</apiName><shortdesc>
		 Returns the distance between the top of the viewport and the bottom 
		 of the rectangle box as number of CSS pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance between the top of the viewport and the bottom 
		 of the rectangle box as number of CSS pixels. 
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function getCoords(oObject) {
		 	oBndRct = oObject.getBoundingClientRect();
		 	alert("Bounding rectangle = \nUpper left coordinates: "
		 	+ oBndRct.left + " " + oBndRct.top +
		 	"\nLower right coordinates: "
		 	+ oBndRct.right + " " + oBndRct.bottom);
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;	
		 &lt;body&gt;
		 &lt;p id=oPara onclick="getCoords(this)"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533535(VS.85).aspx"><linktext>MSDN: bottom Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-textrectangle-interface"><linktext>W3C - CSSOM View: bottom Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:height:get"><apiName>height</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/element.getClientRects"><linktext>MDC - Element: getClientRects Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.getBoundingClientRect"><linktext>MDC - Element: getBoundingClientRect Method</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:left:get"><apiName>left</apiName><shortdesc>
		 Returns the distance between the left of the viewport and the left 
		 of the rectangle box as number of CSS pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance between the left of the viewport and the left 
		 of the rectangle box as number of CSS pixels.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function getCoords(oObject) {
		 	oBndRct = oObject.getBoundingClientRect();
		 	alert("Bounding rectangle = \nUpper left coordinates: "
		 	+ oBndRct.left + " " + oBndRct.top +
		 	"\nLower right coordinates: "
		 	+ oBndRct.right + " " + oBndRct.bottom);
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;	
		 &lt;body&gt;
		 &lt;p id=oPara onclick="getCoords(this)"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534099(VS.85).aspx"><linktext>MSDN: left Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-textrectangle-interface"><linktext>W3C - CSSOM View: left Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:right:get"><apiName>right</apiName><shortdesc>
		 Returns the distance between the left of the viewport and the right 
		 of the rectangle box as number of CSS pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance between the left of the viewport and the right 
		 of the rectangle box as number of CSS pixels. 
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function getCoords(oObject) {
		 	oBndRct = oObject.getBoundingClientRect();
		 	alert("Bounding rectangle = \nUpper left coordinates: "
		 	+ oBndRct.left + " " + oBndRct.top +
		 	"\nLower right coordinates: "
		 	+ oBndRct.right + " " + oBndRct.bottom);
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;	
		 &lt;body&gt;
		 &lt;p id=oPara onclick="getCoords(this)"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534374(VS.85).aspx"><linktext>MSDN: right Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-textrectangle-interface"><linktext>W3C - CSSOM View: right Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:top:get"><apiName>top</apiName><shortdesc>
		 Returns the distance between the top of the viewport and the top of 
		 the rectangle box as number of CSS pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the distance between the top of the viewport and the top of 
		 the rectangle box as number of CSS pixels. 
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function getCoords(oObject) {
		 	oBndRct = oObject.getBoundingClientRect();
		 	alert("Bounding rectangle = \nUpper left coordinates: "
		 	+ oBndRct.left + " " + oBndRct.top +
		 	"\nLower right coordinates: "
		 	+ oBndRct.right + " " + oBndRct.bottom);
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;	
		 &lt;body&gt;
		 &lt;p id=oPara onclick="getCoords(this)"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534688(VS.85).aspx"><linktext>MSDN: top Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-textrectangle-interface"><linktext>W3C - CSSOM View: top Property</linktext></link></related-links></apiValue><apiValue id="cssom.view:TextRectangle:cssom.view:TextRectangle:width:get"><apiName>width</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/element.getClientRects"><linktext>MDC - Element: getClientRects Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.getBoundingClientRect"><linktext>MDC - Element: getBoundingClientRect Method</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="cssom.view:RangeView"><apiName>RangeView</apiName><shortdesc>
	 Has properties and methods that give information about the dimensions of a Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiSince version="DOMTR 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Has properties and methods that give information about the dimensions of a Range.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-rangeview-interface"><linktext>W3C CSSOM Views Specification: RangeView</linktext></link></related-links><apiOperation id="cssom.view:RangeView:cssom.view:RangeView:getBoundingClientRect"><apiName>getBoundingClientRect</apiName><shortdesc>
		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.1b_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMTR 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The returned value is a TextRectangle object which is the union 
		 of the rectangles returned by getClientRects() for the element, i.e., 
		 the CSS border-boxes associated with the element.
		 
		 </apiDesc><apiOperationClassifier>cssom.view:TextRectangle</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#rangeview-getboundingclientrect"><linktext>W3C - CSSOM View: RangeView.getBoundingClientRect()</linktext></link><link href="cssom.view.xml#ElementView/getBoundingClientRect()"><linktext>ElementView.getBoundingClientRect()</linktext></link></related-links></apiOperation><apiOperation id="cssom.view:RangeView:cssom.view:RangeView:getClientRects"><apiName>getClientRects</apiName><shortdesc>
		 Retrieves a collection of rectangles that describes the layout of the 
		 contents of an object or range within the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.1b_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMTR 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>cssom.view:TextRectangleList</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Retrieves a collection of rectangles that describes the layout of the 
		 contents of an object or range within the client. Each rectangle 
		 describes a single line.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#rangeview-getclientrects"><linktext>W3C - CSSOM View: RangeView.getClientRects()</linktext></link><link href="cssom.view.xml#ElementView/getClientRects()"><linktext>ElementView.getClientRects()</linktext></link></related-links></apiOperation></apiClassifier></apiPackage><apiPackage id="dom.core.types"><apiName>dom.core.types</apiName><apiDetail/><apiClassifier id="dom.core.types:DOMUserData"><apiName>DOMUserData</apiName><shortdesc>
	 A DOMUserData represents a reference to application data.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DOMUserData represents a reference to application data.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMUserData"><linktext>W3C - DOM 3 Core: DOMUserData</linktext></link></related-links></apiClassifier><apiClassifier id="dom.core.types:DOMTimeStamp"><apiName>DOMTimeStamp</apiName><shortdesc>
	 A DOMTimeStamp represents a number of milliseconds.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DOMTimeStamp represents a number of milliseconds. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMTimeStamp"><linktext>W3C - DOM 3 Core: DOMTimeStamp</linktext></link></related-links></apiClassifier><apiClassifier id="dom.core.types:DOMObject"><apiName>DOMObject</apiName><shortdesc>
	 A DOMObject represents an object reference.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DOMObject represents an object reference. 
	 
	 <p><b>Note:</b> For Java and ECMAScript, DOMObject is bound to the Object type.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMObject"><linktext>W3C - DOM 3 Core: DOMObject</linktext></link></related-links></apiClassifier><apiClassifier id="dom.core.types:DOMString"><apiName>DOMString</apiName><shortdesc>
	 A DOMString is a sequence of 16-bit units.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DOMString is a sequence of 16-bit units.
	 
	 The UTF-16 encoding was chosen because of its widespread industry practice. 
	 Note that for both HTML and XML, the document character set (and therefore 
	 the notation of numeric character references) is based on UCS [ISO/IEC 
	 10646]. A single numeric character reference in a source document may therefore 
	 in some cases correspond to two 16-bit units in a DOMString (a high surrogate 
	 and a low surrogate). For issues related to string comparisons, refer to String 
	 Comparisons in the DOM.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMString"><linktext>W3C - DOM 3 Core: DOMString</linktext></link></related-links></apiClassifier></apiPackage><apiPackage id="dom.core"><apiName>dom.core</apiName><apiDetail/><apiClassifier id="dom.core:CharacterData"><apiName>CharacterData</apiName><shortdesc>
	 Provides text manipulation methods that are used by several objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Provides text manipulation methods that are used by several objects.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms767515%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMCharacterData</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData"><linktext>MDC - CharacterData</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-FF21A306"><linktext>W3C - CharacterData</linktext></link></related-links><adobeApiEvent id="dom.core:CharacterData_DOMCharacterDataModified_DOMCharacterDataModified"><apiName>DOMCharacterDataModified</apiName><shortdesc>
	 Occurs after CharacterData.data or ProcessingInstruction.data have been
	 modified but the node itself has not been inserted or deleted.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMCharacterDataModified</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Occurs after CharacterData.data or ProcessingInstruction.data have been
	 modified but the node itself has not been inserted or deleted. The target 
	 node of this event is the CharacterData node or the 
	 ProcessingInstruction node.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:CharacterData_DOMNodeInsertedIntoDocument_DOMNodeInsertedIntoDocument"><apiName>DOMNodeInsertedIntoDocument</apiName><shortdesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInsertedIntoDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 after the insertion has taken place. The target node of this event is the 
	 node being inserted. If the node is being directly inserted, the event type 
	 DOMNodeInserted occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:CharacterData_DOMNodeRemovedFromDocument_DOMNodeRemovedFromDocument"><apiName>DOMNodeRemovedFromDocument</apiName><shortdesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemovedFromDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 before the removal takes place. The target node of this event type is 
	 the node being removed. If the node is being directly removed, the event 
	 type DOMNodeRemoved occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:CharacterData_DOMNodeRemoved_DOMNodeRemoved"><apiName>DOMNodeRemoved</apiName><shortdesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemoved</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement. This event is dispatched before the 
	 removal takes place. The target node of this event is the node 
	 being removed.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:CharacterData_DOMNodeInserted_DOMNodeInserted"><apiName>DOMNodeInserted</apiName><shortdesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInserted</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element. This event is dispatched after 
	 the insertion has taken place. The target node of this event is the 
	 node being inserted.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="dom.core:CharacterData:appendData"><apiName>appendData</apiName><shortdesc>
		 Append the string to the end of the character data of the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The DOMString to append.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Append the string to the end of the character data of the node. 
		 Upon success, data provides access to the concatenation of data and 
		 the DOMString specified.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms756985%28VS.85%29.aspx"><linktext>MSDN - appendData Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData.appendData"><linktext>MDC - CharacterData.appendData()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-32791A2F"><linktext>W3C - CharacterData.appendData()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:CharacterData:deleteData"><apiName>deleteData</apiName><shortdesc>
		 Remove a range of 16-bit units  from the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified 
		 offset is negative or greater than the number of 16-bit units in data,
		 or if the specified count is negative.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>The offset from which to start removing.
		 </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="Number"/><apiDesc>The number of 16-bit units to delete. If the sum of offset 
		 and count exceeds length then all 16-bit units from offset  to the end of 
		 the data are deleted.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove a range of 16-bit units  from the node. Upon success, data and 
		 length reflect the change.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms754600%28VS.85%29.aspx"><linktext>MSDN - deleteData Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData.deleteData"><linktext>MDC - CharacterData.deleteData()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-7C603781"><linktext>W3C - CharacterData.deleteData()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:CharacterData:insertData"><apiName>insertData</apiName><shortdesc>
		 Insert a string at the specified 16-bit unit offset.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified 
		 offset is negative or greater than the number of 16-bit units in data.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>The character offset at which to insert.
		 </apiDesc></apiParam><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The DOMString to insert.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Insert a string at the specified 16-bit unit offset.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms762794%28VS.85%29.aspx"><linktext>MSDN - insertData Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData.insertData"><linktext>MDC - CharacterData.insertData()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-3EDB695F"><linktext>W3C - CharacterData.insertData()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:CharacterData:replaceData"><apiName>replaceData</apiName><shortdesc>
		 Replace the characters starting at the specified 16-bit unit offset 
		 with the specified string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified 
		 offset is negative or greater than the number of 16-bit units in data, 
		 or if the specified count is negative.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>The offset from which to start replacing.
		 </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="Number"/><apiDesc>The number of 16-bit units to replace. If the sum of 
		 offset and count exceeds length, then all 16-bit units to the end of 
		 the data are replaced; (i.e., the effect is the same as a remove 
		 method call with the same range, followed by an append method invocation).
		 </apiDesc></apiParam><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The DOMString with which the range must be replaced.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replace the characters starting at the specified 16-bit unit offset 
		 with the specified string.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms766416%28VS.85%29.aspx"><linktext>MSDN - replaceData Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData.replaceData"><linktext>MDC - CharacterData.replaceData()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-E5CBA7FB"><linktext>W3C - CharacterData.replaceData()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:CharacterData:substringData"><apiName>substringData</apiName><shortdesc>
		 Extracts a range of data from the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified 
		 offset is negative or greater than the number of 16-bit units in data, 
		 or if the specified count is negative.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>DOMSTRING_SIZE_ERR: Raised if the specified 
		 range of text does not fit into a DOMString.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The specified substring. If the sum of offset and count exceeds 
		 the length, then all 16-bit units to the end of the data are returned.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>Start offset of substring to extract.
		 </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="Number"/><apiDesc>The number of 16-bit units to extract.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Extracts a range of data from the node.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms755744%28VS.85%29.aspx"><linktext>MSDN - substringData Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData.substringData"><linktext>MDC - CharacterData.substringData()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6531BCCF"><linktext>W3C - CharacterData.substringData()</linktext></link></related-links></apiOperation><apiValue id="dom.core:CharacterData:data:get"><apiName>data</apiName><shortdesc>
		 The character data of the node that implements this interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised when 
		 the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>DOMSTRING_SIZE_ERR: Raised when it would 
		 return more characters than fit in a DOMString variable on the 
		 implementation platform.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The character data of the node that implements this interface.
		 
		 <p>The DOM implementation may not put arbitrary limits on the amount of data 
		 that may be stored in a CharacterData node. However, implementation 
		 limits may mean that the entirety of a node's data may not fit into 
		 a single DOMString. In such cases, the user may call substringData 
		 to retrieve the data in appropriately sized pieces.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms765506%28VS.85%29.aspx"><linktext>MSDN - data Property (IXMLDOMCharacterData)</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData.data"><linktext>MDC - CharacterData.data</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-72AB8359"><linktext>W3C - CharacterData.data</linktext></link></related-links></apiValue><apiValue id="dom.core:CharacterData:length:get"><apiName>length</apiName><shortdesc>
		 The number of 16-bit units that are available through data and the 
		 substringData method below.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of 16-bit units that are available through data and the 
		 substringData method below. This may have the value zero, i.e., 
		 CharacterData nodes may be empty.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms760351%28VS.85%29.aspx"><linktext>MSDN - length Property (IXMLDOMCharacterData)</linktext></link><link href="http://developer.mozilla.org/En/DOM/CharacterData.length"><linktext>MDC - CharacterData.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-7D61178C"><linktext>W3C - CharacterData.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DOMConfiguration"><apiName>DOMConfiguration</apiName><shortdesc>
	 Used by Document.normalizeDocument(), and DOM Level 3 DOMParser() and DOMSerializer.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Used by Document.normalizeDocument(), and DOM Level 3 DOMParser() and DOMSerializer.
	 
	 <p>Using the configuration, it is possible to change Document.normalizeDocument() 
	 behavior, such as replacing the CDATASection nodes with Text nodes 
	 or specifying the type of the schema that must be used when the 
	 validation of the Document is requested. DOMConfiguration objects are 
	 also used in [DOM Level 3 Load and Save] in the DOMParser and 
	 DOMSerializer interfaces.</p>
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla.</p>
	 
	 <p>The following list of parameters defined in the DOM: 
	 <adobetable class="innertable">
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 	
	 <tgroup cols="3"><thead><row><entry>Parameter</entry><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
	 		<entry>"canonical-form"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Canonicalize the document according to the rules 
	 specified in [Canonical XML], such as removing the DocumentType node (if any) from the tree, or removing 
	 superfluous namespace declarations from each element. Note that this is limited to what can be represented 
	 in the DOM; in particular, there is no way to specify the order of the attributes in the DOM. In addition, 
	 Setting this parameter to true will also set the state of the parameters listed below. Later changes to the 
	 state of one of those parameters will revert "canonical-form" back to false. Parameters set to false: 
	 "entities", "normalize-characters", "cdata-sections". Parameters set to true: "namespaces", 
	 "namespace-declarations", "well-formed", "element-content-whitespace". Other parameters are not changed unless 
	 explicitly specified in the description of the parameters.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not canonicalize the document.</entry>
	 	</row><row>
	 		<entry>"cdata-sections"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Keep CDATASection nodes in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Transform CDATASection nodes in the document into Text nodes. The new Text  node is then combined with any adjacent Text  node.</entry>
	 	</row><row>
	 		<entry>"check-character-normalization"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Check if the characters in the document are fully normalized, as defined in appendix B of XML 1.1. When a sequence of characters is encountered that fails normalization checking, an error with the DOMError.type equals to "check-character-normalization-failure" is issued. </entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not check if characters are normalized.</entry>
	 	</row><row>
	 		<entry>"comments"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Keep Comment nodes in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Discard Comment nodes in the document.</entry>
	 	</row><row>
	 		<entry>"datatype-normalization"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Expose schema normalized values in the tree, such as XML Schema normalized values in the case of XML Schema. Since this parameter requires to have schema information, the "validate" parameter will also be set to true. Having this parameter activated when "validate" is false has no effect and no schema-normalization will happen. </entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not perform schema normalization on the tree. </entry>
	 	</row><row>
	 		<entry>"element-content-whitespace"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Keep all whitespaces in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [optional]</entry><entry>Discard all Text nodes that contain whitespaces in element content, as described in [element content whitespace]. The implementation is expected to use the attribute Text.isElementContentWhitespace to determine if a Text node should be discarded or not.</entry>
	 	</row><row>
	 		<entry>"entities"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Keep EntityReference nodes in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Remove all EntityReference nodes from the document, putting the entity expansions directly in their place. Text nodes are normalized, as defined in Node.normalize. Only unexpanded entity references are kept in the document.<p><b>Note:</b> This parameter does not affect Entity nodes.</p></entry>
	 	</row><row>
	 		<entry>"error-handler"</entry><entry>[required]</entry><entry>Contains a DOMErrorHandler object. If an error is encountered in the document, the implementation will call back the DOMErrorHandler registered using this parameter. The implementation may provide a default DOMErrorHandler object. When called, DOMError.relatedData will contain the closest node to where the error occurred. If the implementation is unable to determine the node where the error occurs, DOMError.relatedData will contain the Document node. Mutations to the document from within an error handler will result in implementation dependent behavior. </entry>
	 	</row><row>
	 		<entry>"infoset"</entry><entry><codeph>true</codeph> [required]</entry><entry>Keep in the document the information defined in the XML Information Set. This forces the following parameters to false: "validate-if-schema", "entities", "datatype-normalization", "cdata-sections". This forces the following parameters to true: "namespace-declarations", "well-formed", "element-content-whitespace", "comments", "namespaces". Other parameters are not changed unless explicitly specified in the description of the parameters. Note that querying this parameter with getParameter returns true only if the individual parameters specified above are appropriately set.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph></entry><entry>Setting infoset to false  has no effect.</entry>
	 	</row><row>
	 		<entry>"namespaces"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Perform the namespace processing as defined in Namespace Normalization. </entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [optional]</entry><entry>Do not perform the namespace processing. </entry>
	 	</row><row>
	 		<entry>"namespace-declarations"</entry><entry/><entry>This parameter has no effect if the parameter "namespaces" is set to false. </entry>
	 	</row><row>
	 		<entry/><entry><codeph>true</codeph> [required] (default)</entry><entry>Include namespace declaration attributes, specified or defaulted from the schema, in the document.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Discard all namespace declaration attributes. The namespace prefixes (Node.prefix) are retained even if this parameter is set to false.</entry>
	 	</row><row>
	 		<entry>"normalize-characters"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Fully normalized the characters in the document as defined in appendix B of [XML 1.1].</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not perform character normalization.</entry>
	 	</row><row>
	 		<entry>"schema-location"</entry><entry>[optional]</entry><entry>Represent a DOMString object containing a list of URIs, separated by whitespaces (characters matching the nonterminal production S defined in section 2.3 [XML 1.0]), that represents the schemas against which validation should occur, i.e. the current schema. The types of schemas referenced in this list must match the type specified with schema-type, otherwise the behavior of an implementation is undefined. The schemas specified using this property take precedence to the schema information specified in the document itself. For namespace aware schema, if a schema specified using this property and a schema specified in the document instance (i.e. using the schemaLocation attribute) in a schema document (i.e. using schema import mechanisms) share the same targetNamespace, the schema specified by the user using this property will be used. If two schemas specified using this property share the same targetNamespace or have no namespace, the behavior is implementation dependent. If no location has been provided, this parameter is null.<p><b>Note:</b> The "schema-location" parameter is ignored unless the "schema-type" parameter value is set. It is strongly recommended that Document.documentURI will be set so that an implementation can successfully resolve any external entities referenced.</p></entry>
	 	</row><row>
	 		<entry>"schema-type"</entry><entry>[optional]</entry><entry>Represent a DOMString object containing an absolute URI and representing the type of the schema language used to validate a document against. Note that no lexical checking is done on the absolute URI. If this parameter is not set, a default value may be provided by the implementation, based on the schema languages supported and on the schema language used at load time. If no value is provided, this parameter is null.<p><b>Note:</b> For XML Schema, applications must use the value "http://www.w3.org/2001/XMLSchema". For XML DTD, applications must use the value "http://www.w3.org/TR/REC-xml". Other schema languages are outside the scope of the W3C and therefore should recommend an absolute URI in order to use this method.</p></entry>
	 	</row><row>
	 		<entry>"split-cdata-sections"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Split CDATA sections containing the CDATA section termination marker ']]&gt;'. When a CDATA section is split a warning is issued with a DOMError.type equals to "cdata-sections-splitted" and DOMError.relatedData equals to the first CDATASection node in document order resulting from the split.</entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required]</entry><entry>Signal an error if a CDATASection contains an unrepresentable character.</entry>
	 	</row><row>
	 		<entry>"validate"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Require the validation against a schema (i.e. XML schema, DTD, any other type or representation of schema) of the document as it is being normalized as defined by [XML 1.0]. If validation errors are found, or no schema was found, the error handler is notified. Schema-normalized values will not be exposed according to the schema in used unless the parameter "datatype-normalization" is true. This parameter will reevaluate:<ul><li>Attribute nodes with Attr.specified equals to false, as specified in the description of the Attr interface;</li><li>The value of the attribute Text.isElementContentWhitespace for all Text nodes;</li><li>The value of the attribute Attr.isId for all Attr nodes;</li><li>The attributes Element.schemaTypeInfo and Attr.schemaTypeInfo.</li></ul><p><b>Note:</b> "validate-if-schema" and "validate" are mutually exclusive, setting one of them to true will set the other one to false. Applications should also consider setting the parameter "well-formed" to true, which is the default for that option, when validating the document.</p></entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>Do not accomplish schema processing, including the internal subset processing. Default attribute values information are kept. Note that validation might still happen if "validate-if-schema" is true. </entry>
	 	</row><row>
	 		<entry>"validate-if-schema"</entry><entry><codeph>true</codeph> [optional]</entry><entry>Enable validation only if a declaration for the document element can be found in a schema (independently of where it is found, i.e. XML schema, DTD, or any other type or representation of schema). If validation is enabled, this parameter has the same behavior as the parameter "validate" set to true.<p><b>Note:</b> "validate-if-schema" and "validate" are mutually exclusive, setting one of them to true will set the other one to false.</p></entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [required] (default)</entry><entry>No schema processing should be performed if the document has a schema, including internal subset processing. Default attribute values information are kept. Note that validation must still happen if "validate" is true. </entry>
	 	</row><row>
	 		<entry>"well-formed"</entry><entry><codeph>true</codeph> [required] (default)</entry><entry>Check if all nodes are XML well formed according to the XML version in use in Document.xmlVersion: <ul><li>check if the attribute Node.nodeName contains invalid characters according to its node type and generate a DOMError of type "wf-invalid-character-in-node-name", with a DOMError.SEVERITY_ERROR severity, if necessary;</li><li>check if the text content inside Attr, Element, Comment, Text, CDATASection nodes for invalid characters and generate a DOMError of type "wf-invalid-character", with a DOMError.SEVERITY_ERROR severity, if necessary;</li><li>check if the data inside ProcessingInstruction nodes for invalid characters and generate a DOMError of type "wf-invalid-character", with a DOMError.SEVERITY_ERROR severity, if necessary;</li></ul></entry>
	 	</row><row>
	 		<entry/><entry><codeph>false</codeph> [optional]</entry><entry>Do not check for XML well-formedness. </entry>
	 	</row></tbody></tgroup></adobetable>
	 </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMConfiguration"><linktext>MDC - DOMConfiguration</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration"><linktext>W3C - DOMConfiguration</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-LS/"><linktext>W3C - DOM 3 Load and Save Specification</linktext></link><link href="http://www.w3.org/TR/2004/REC-xml-infoset-20040204#infoitem.character"><linktext>W3C - [element content whitespace]</linktext></link><link href="http://www.w3.org/TR/xml11/"><linktext>W3C - [XML 1.1]</linktext></link><link href="http://www.w3.org/TR/REC-xml/"><linktext>W3C - [XML 1.0]</linktext></link><link href="http://www.w3.org/TR/xml-c14n"><linktext>W3C - [Canonical XML]</linktext></link></related-links><apiOperation id="dom.core:DOMConfiguration:dom.core:DOMConfiguration:canSetParameter"><apiName>canSetParameter</apiName><shortdesc>
		 Check if setting a parameter to a specific value is supported.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the parameter could be successfully set to the specified value
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the parameter to check.
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiOperationClassifier>dom.core.types:DOMUserData</apiOperationClassifier><apiDesc>An object. if null, the returned value is true. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Check if setting a parameter to a specific value is supported.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMConfiguration.canSetParameter"><linktext>MDC - DOMConfiguration.canSetParameter()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration-canSetParameter"><linktext>W3C - DOMConfiguration.canSetParameter()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:DOMConfiguration:dom.core:DOMConfiguration:getParameter"><apiName>getParameter</apiName><shortdesc>
		 Return the value of a parameter if known.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_FOUND_ERR: Raised when the parameter 
		 name is not recognized. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The current object associated with the specified parameter or n
		 ull if no object has been associated or if the parameter is not supported. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMUserData</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the parameter. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Return the value of a parameter if known. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMConfiguration.getParameter"><linktext>MDC - DOMConfiguration.getParameter()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration-getParameter"><linktext>W3C - DOMConfiguration.getParameter()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:DOMConfiguration:dom.core:DOMConfiguration:setParameter"><apiName>setParameter</apiName><shortdesc>
		 Set the value of a parameter.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_FOUND_ERR: Raised when the parameter 
		 name is not recognized. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised when the 
		 parameter name is recognized but the requested value cannot be set. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>TYPE_MISMATCH_ERR: Raised if the value 
		 type for this parameter name is incompatible with the expected 
		 value type. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the parameter to set.
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiOperationClassifier>dom.core.types:DOMUserData</apiOperationClassifier><apiDesc>The new value or null if the user wishes to unset the 
		 parameter. While the type of the value parameter is defined as 
		 DOMUserData, the object type must match the type defined by the definition 
		 of the parameter. For example, if the parameter is "error-handler", the 
		 value must be of type DOMErrorHandler. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Set the value of a parameter.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMConfiguration.setParameter"><linktext>MDC - DOMConfiguration.setParameter()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration-property"><linktext>W3C - DOMConfiguration.setParameter()</linktext></link></related-links></apiOperation><apiValue id="dom.core:DOMConfiguration:dom.core:DOMConfiguration:parameterNames:get"><apiName>parameterNames</apiName><shortdesc>
		 The list of the parameters supported by this DOMConfiguration object 
		 and for which at least one value can be set by the application.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMStringList</apiValueClassifier></apiValueDef><apiDesc>
		 The list of the parameters supported by this DOMConfiguration object 
		 and for which at least one value can be set by the application. Note 
		 that this list can also contain parameter names defined outside 
		 this specification. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMConfiguration.parameterNames"><linktext>MDC - DOMConfiguration.parameterNames</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMConfiguration-parameterNames"><linktext>W3C - DOMConfiguration.parameterNames</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:Attr"><apiName>Attr</apiName><shortdesc>
	 This type represents a DOM element's attribute as an object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This type represents a DOM element's attribute as an object. In most DOM methods, you 
	 will probably directly retrieve the attribute as a string (e.g., getAttribute), but 
	 certain functions (e.g., getAttributeNode()) or means of iterating give Attr types.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/dd347043%28VS.85%29.aspx"><linktext>MSDN - Attr Prototype</linktext></link><link href="http://developer.mozilla.org/En/DOM/Attr"><linktext>MDC - Attr</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-637646024"><linktext>W3C - Attr</linktext></link></related-links><adobeApiEvent id="dom.core:Attr_DOMNodeInsertedIntoDocument_DOMNodeInsertedIntoDocument"><apiName>DOMNodeInsertedIntoDocument</apiName><shortdesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInsertedIntoDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 after the insertion has taken place. The target node of this event is the 
	 node being inserted. If the node is being directly inserted, the event type 
	 DOMNodeInserted occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Attr_DOMNodeRemovedFromDocument_DOMNodeRemovedFromDocument"><apiName>DOMNodeRemovedFromDocument</apiName><shortdesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemovedFromDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 before the removal takes place. The target node of this event type is 
	 the node being removed. If the node is being directly removed, the event 
	 type DOMNodeRemoved occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Attr_DOMNodeRemoved_DOMNodeRemoved"><apiName>DOMNodeRemoved</apiName><shortdesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemoved</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement. This event is dispatched before the 
	 removal takes place. The target node of this event is the node 
	 being removed.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Attr_DOMNodeInserted_DOMNodeInserted"><apiName>DOMNodeInserted</apiName><shortdesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInserted</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element. This event is dispatched after 
	 the insertion has taken place. The target node of this event is the 
	 node being inserted.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Attr_DOMSubtreeModified_DOMSubtreeModified"><apiName>DOMSubtreeModified</apiName><shortdesc>
	 This is a general event for notification of all changes to the 
	 document.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMSubtreeModified</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 This is a general event for notification of all changes to the 
	 document. It can be used instead of the more specific mutation and 
	 mutation name events listed below. It may be dispatched after a 
	 single modification to the document or, at the implementation's 
	 discretion, after multiple changes have occurred. The latter use 
	 should generally be used to accommodate multiple changes which occur 
	 either simultaneously or in rapid succession. The target of this 
	 event is the lowest common parent of the changes which have taken 
	 place. This event is dispatched after any other events caused by the 
	 mutation(s) have occurred.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiValue id="dom.core:Attr:expando:get"><apiName>expando</apiName><shortdesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.
		 
		 <p><b>Note:</b> You can extend the properties on an object by creating arbitrary properties 
		 with values. You should be careful, however, because you can unintentionally set a property value when 
		 scripting in a case-sensitive language such as Microsoft JScript. For example, if the property value 
		 is borderColor and you type the value "bordercolor = 'blue'", you have, in fact, created another property 
		 on the style object called bordercolor with the value 'blue'. If you query the value of the property, 
		 the value "blue" is returned. However, the borders for the element do not turn blue.</p>
		 
		 <p><b>Note:</b> Setting the  expando property of the  document object to false precludes the 
		 functionality of all expandos within the document.</p>
		 
		 </apiDesc><example>
		 The following example demonstrates that, by setting the expando property of the document object to false, 
		 the document ignores the  UNSELECTABLE expando on the  span and allows you to select the text.
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 &lt;script type="text/javascript"&gt;
		 	//Set the expando property to false.
		 	document.expando = false;
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 
		 &lt;div&gt;
		 &lt;span id="oSpan" unselectable="on"&gt;This text should be selectable.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533747%28VS.85%29.aspx"><linktext>MSDN - expando Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:isId:get"><apiName>isId</apiName><shortdesc>
		 Returns whether this attribute is known to be of type ID (i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns whether this attribute is known to be of type ID (i.e. to 
		 contain an identifier for its owner element) or not. 
		 
		 <p>When it is and its value is unique, the ownerElement of this 
		 attribute can be retrieved using the method Document.getElementById.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Attr.isId"><linktext>MDC - Attr.isId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-isId"><linktext>W3C - Attr.isId</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:name:get"><apiName>name</apiName><shortdesc>
		 Returns the name of this attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the name of this attribute. If Node.localName is different 
		 from null, this attribute is a qualified name.
		 
		 <p><b>Note (IE8):</b>  Internet Explorer 8 and later. In IE8 mode, dynamically setting the name attribute on an input type=radio button correctly applies that button to the same named group.</p>
		 
		 <p><b>Note (IE):</b> When submitting a form, use the name property to bind the value of the control. The name is not the value displayed for the input type=button, input type=reset, and input type=submit input types. The internally stored value is submitted with the form, not the displayed value.</p>
		 
		 <p><b>Note (IE):</b> Microsoft JScript allows the name to be changed at run time. This does not cause the name in the programming model to change in the collection of elements, but it does change the name used for submitting elements.</p>
		 
		 <p><b>Note (IE8):</b>  Internet Explorer 8 and later can set the NAME attribute at run time on elements dynamically created with the createElement method. To create an element with a NAME attribute in earlier versions of Internet Explorer, include the attribute and its value when using the createElement method.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var inp = document.createElement('input');
		 inp.setAttribute('type',  'radio');
		 inp.setAttribute('name',  'Q'+count);
		 inp.setAttribute('value', answers[i]);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534184%28VS.85%29.aspx"><linktext>MSDN - NAME Attribute | name Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Attr.name"><linktext>MDC - Attr.name</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1112119403"><linktext>W3C - Attr.name</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:ownerElement:get"><apiName>ownerElement</apiName><shortdesc>
		 The Element node this attribute is attached to or null if this 
		 attribute is not in use.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 The Element node this attribute is attached to or null if this 
		 attribute is not in use.
		 
		 <p><b>Note (IE8):</b> This property is new as of Internet Explorer 8. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/dd347028%28VS.85%29.aspx"><linktext>MSDN - ownerElement Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Attr.ownerElement"><linktext>MDC - Attr.ownerElement</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-ownerElement"><linktext>W3C - Attr.ownerElement</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:schemeTypeInfo:get"><apiName>schemeTypeInfo</apiName><shortdesc>
		 The type information associated with this attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:TypeInfo</apiValueClassifier></apiValueDef><apiDesc>
		 The type information associated with this attribute.
		 
		 <p>While the type 
		 information contained in this attribute is guarantee to be correct 
		 after loading the document or invoking Document.normalizeDocument(), 
		 schemaTypeInfo may not be reliable if the node was moved. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Attr.schemaTypeInfo"><linktext>MDC - Attr.schemeTypeInfo</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Attr-schemaTypeInfo"><linktext>W3C - Attr.schemeTypeInfo</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:specified:get"><apiName>specified</apiName><shortdesc>
		 True if this attribute was explicitly given a value in the instance 
		 document, false otherwise.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 True if this attribute was explicitly given a value in the instance 
		 document, false otherwise. 
		 
		 <p>If the application changed the value of 
		 this attribute node (even if it ends up having the same value as the 
		 default value) then it is set to true. The implementation may handle 
		 attributes with default values from other schemas similarly but 
		 applications should use Document.normalizeDocument() to guarantee 
		 this information is up-to-date.</p>
		 
		 </apiDesc><example>
		 his example uses the specified property to determine the attributes set for an object. 
		 The function checks each attribute, and lists all of the attributes of the object and the 
		 value of each attribute. In addition, each attribute that is set is displayed.
		 <codeblock>
		 &lt;script&gt;
		 function fnFindSpecified(){
		 	var oAttributes=oList.attributes;
		 	alert(oAttributes(0).nodeName);
		 	for(var i=0;i&lt;oAttributes.length;i++){
		 		var oNode=document.createElement("LI");
		 		var oNodeValue=document.createTextNode(i + " "
		 			+ oAttributes(i).nodeName + " = "
		 			+ oAttributes(i).nodeValue);
		 		oList.appendChild(oNode);
		 		oNode.appendChild(oNodeValue);
		 		if(oAttributes(i).nodeValue!=null){
         			alert(oAttributes(i).nodeName
         			+ " specified: " + oAttributes(i).specified);
		 		}
		 	}
		 }
		 &lt;/script&gt;
		 
		 &lt;ul id=oList onclick="fnFindSpecified()"&gt;
		 &lt;li&gt;Click to Find Specified Attributes&lt;/li&gt;
		 &lt;/ul&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534637%28VS.85%29.aspx"><linktext>MSDN - specified Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Attr.specified"><linktext>MDC - Attr.specified</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-862529273"><linktext>W3C - Attr.specified</linktext></link></related-links></apiValue><apiValue id="dom.core:Attr:value:get"><apiName>value</apiName><shortdesc>
		 On retrieval, the value of the attribute is returned as a string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised when 
		 the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 On retrieval, the value of the attribute is returned as a string. 
		 Character and general entity references are replaced with their 
		 values.
		 
		 <p>On setting, this creates a Text node with the unparsed contents of 
		 the string, i.e. any characters that an XML processor would 
		 recognize as markup are instead treated as literal text.</p>
		 
		 <p><b>Note (IE8):</b>  Internet Explorer 8 or later. In IE8 mode, the value property 
		 is correctly reported as a canonical attribute name. For example, &lt;input type="text" readonly&gt; 
		 and &lt;input type="text" readonly="readonly"&gt; would both set the input text field to read-only. 
		 In IE8 mode, the value is evaluated as a cannonical value, "readonly". In earlier document 
		 compatibility modes, it is evaluated as a Boolean value, true.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535129%28VS.85%29.aspx"><linktext>MSDN - value Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Attr.value"><linktext>MDC - Attr.value</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-221662474"><linktext>W3C - Attr.value</linktext></link><link href="dom.core.xml#Element/getAttribute"><linktext>dom.core.Element.getAttribute</linktext></link><link href="dom.core.xml#Element/setAttribute"><linktext>dom.core.Element.setAttribute</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DOMImplementationList"><apiName>DOMImplementationList</apiName><shortdesc>
	 Returned by DOMImplementationSource.getDOMImplementationList() and 
	 DOMImplementationRegistry.getDOMImplementationList().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Returned by DOMImplementationSource.getDOMImplementationList() and 
	 DOMImplementationRegistry.getDOMImplementationList(). Can be iterated with 0-based index.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationList"><linktext>MDC - DOMImplementationList</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList"><linktext>W3C - DOMImplementationList</linktext></link><link href="dom.core.xml#DOMImplementationSource/getDOMImplementationList()"><linktext>dom.core.DOMImplementationSource.getDOMImplementationList()</linktext></link></related-links><apiOperation id="dom.core:DOMImplementationList:dom.core:DOMImplementationList:item"><apiName>item</apiName><shortdesc>
		 Returns the indexth item in the collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The DOMImplementation at the indexth position in the 
		 DOMImplementationList, or null if that is not a valid index. 
		 
		 </apiDesc><apiOperationClassifier>dom.core:DOMImplementation</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into the collection.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the indexth item in the collection.
		 
		 <p>If index is greater than 
		 or equal to the number of DOMImplementations in the list, this 
		 returns null. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationList.item"><linktext>MDC - DOMImplementationList.item()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList-item"><linktext>W3C - DOMImplementationList.item()</linktext></link></related-links></apiOperation><apiValue id="dom.core:DOMImplementationList:dom.core:DOMImplementationList:length:get"><apiName>length</apiName><shortdesc>
		 The number of DOMImplementations in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of DOMImplementations in the list. 
		 
		 <p>The range of valid child node indices is 0 to length-1  inclusive.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationList.length"><linktext>MDC - DOMImplementationList.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationList-length"><linktext>W3C - DOMImplementationList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:NamedNodeMap"><apiName>NamedNodeMap</apiName><shortdesc>
	 Objects implementing the NamedNodeMap interface are used to represent 
	 collections of nodes that can be accessed by name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 2
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the NamedNodeMap interface are used to represent 
	 collections of nodes that can be accessed by name. Note that NamedNodeMap 
	 does not inherit from NodeList; NamedNodeMaps are not maintained in 
	 any particular order. Objects contained in an object implementing 
	 NamedNodeMap may also be accessed by an ordinal index, but this is simply 
	 to allow convenient enumeration of the contents of a NamedNodeMap, and 
	 does not imply that the DOM specifies an order to these Nodes. 
	 
	 <p><b>Note:</b> NamedNodeMap objects in the DOM are live.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms763824%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMNamedNodeMap</linktext></link><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap"><linktext>MDC - NamedNodeMap</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1780488922"><linktext>W3C - NamedNodeMap</linktext></link></related-links><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:getNamedItem"><apiName>getNamedItem</apiName><shortdesc>
		 Gets a node by name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A Node (of any type) with the specified nodeName, or null 
		 if it does not identify any node in this map.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The nodeName of a node to retrieve.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gets a node by name.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms767592%28VS.85%29.aspx"><linktext>MSDN - getNamedItem Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap"><linktext>MDC - NamedNodeMap</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1074577549"><linktext>W3C - NamedNodeMap.getNamedItem()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:getNamedItemNS"><apiName>getNamedItemNS</apiName><shortdesc>
		 Gets a node by namespace and localName.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the 
		 implementation does not support the feature "XML" and the language 
		 exposed through the Document does not support XML Namespaces. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A Node (of any type) with the specified local name and namespace 
		 URI, or null if they do not identify any node in this map.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>nameSpaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI of the node to retrieve.
		 </apiDesc></apiParam><apiParam><apiItemName>localName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The local name of the node to retrieve.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Gets a node by namespace and localName.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap"><linktext>MDC - NamedNodeMap</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getNamedItemNS"><linktext>W3C - NamedNodeMap.getNamedItemNS()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:getQualifiedItem"><apiName>getQualifiedItem</apiName><shortdesc>
		 Returns the attribute with the specified namespace and attribute name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>An object. Returns the attribute node specified by the baseName and namespaceURI parameters. 
		 Returns Null if the attribute is not in the collection or if the item is not an attribute.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>baseName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The string specifying the base name of the attribute, without namespace qualification.
		 </apiDesc></apiParam><apiParam><apiItemName>nameSpaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The string specifying the namespace prefix that qualifies the attribute name.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the attribute with the specified namespace and attribute name.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757075%28VS.85%29.aspx"><linktext>MSDN - getQualifiedItem Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:item"><apiName>item</apiName><shortdesc>
		 Returns the item at the given index (or null if the index is higher or equal to the number of nodes).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The node at the index position in the map, or null if that 
		 is not a valid index.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into this map.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the item at the given index (or null if the index is higher or equal to the number of nodes).
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms759220%28VS.85%29.aspx"><linktext>MSDN - item Method (IXMLDOMNamedNodeMap)</linktext></link><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap"><linktext>MDC - NamedNodeMap</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-349467F9"><linktext>W3C - NamedNodeMap.item()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:nextNode"><apiName>nextNode</apiName><shortdesc>
		 Returns the next node in the collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>An IXMLDOMNode, which refers to the next node in the collection. Returns Null if there is no next node.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Returns the next node in the collection.
		 
		 <p><b>Note:</b> The iterator initially points before the first node in the list so that the first call 
		 to the nextNode method returns the first node in the list.</p>
		 
		 <p><b>Note:</b> This method returns Null when the current node is the last node or there are no items 
		 in the list. When the current node is removed from the list, subsequent calls to nextNode return Null. The 
		 iterator must be reset by calling the reset method.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757847%28VS.85%29.aspx"><linktext>MSDN - nextNode Method (IXMLDOMNamedNodeMap)</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:removeNamedItem"><apiName>removeNamedItem</apiName><shortdesc>
		 Removes a node (or if an attribute, may reveal a default if present).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_FOUND_ERR: Raised if there is no node 
		 named name  in this map.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this map is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The node removed from this map if a node with such a name exists.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The nodeName of the node to remove.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes a node (or if an attribute, may reveal a default if present).
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms762291%28VS.85%29.aspx"><linktext>MSDN - removeNamedItem Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap"><linktext>MDC - NamedNodeMap</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D58B193"><linktext>W3C - NamedNodeMap.removeNamedItem()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:removeNamedItemNS"><apiName>removeNamedItemNS</apiName><shortdesc>
		 Removes a node (or if an attribute, may reveal a default if present).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_FOUND_ERR: Raised if there is no 
		 node with the specified namespaceURI and localName in this map.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised 
		 if this map is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if 
		 the implementation does not support the feature "XML" and the 
		 language exposed through the Document does not support XML Namespaces. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The node removed from this map if a node with such a local 
		 name and namespace URI exists.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>nameSpaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI of the node to remove.
		 </apiDesc></apiParam><apiParam><apiItemName>localName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The local name of the node to remove.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes a node (or if an attribute, may reveal a default if present).
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap"><linktext>MDC - NamedNodeMap</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-removeNamedItemNS"><linktext>W3C - NamedNodeMap.removeNamedItemNS()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:reset"><apiName>reset</apiName><shortdesc>
		 Resets the iterator.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Resets the iterator.
		 
		 <p><b>Note:</b> Implemented in: MSXML 3.0 and later.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms762655%28VS.85%29.aspx"><linktext>MSDN - reset Method (IXMLDOMNamedNodeMap)</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:setNamedItem"><apiName>setNamedItem</apiName><shortdesc>
		 Adds (or replaces) a node by its nodeName.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if arg was 
		 created from a different document than the one that created this map.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if
		 this map is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INUSE_ATTRIBUTE_ERR: Raised if arg is 
		 an Attr that is already an attribute of another Element object. The 
		 DOM user must explicitly clone Attr nodes to re-use them in 
		 other elements.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if an 
		 attempt is made to add a node doesn't belong in this NamedNodeMap. 
		 Examples would include trying to insert something other than an Attr 
		 node into an Element's map of attributes, or a non-Entity node into 
		 the DocumentType's map of Entities.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>If the new Node replaces an existing node the replaced 
		 Node is returned, otherwise null is returned.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>A node to store in this map. The node will later be 
		 accessible using the value of its nodeName attribute.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds (or replaces) a node by its nodeName.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms764702%28VS.85%29.aspx"><linktext>MSDN - setNamedItem Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap"><linktext>MDC - NamedNodeMap</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1025163788"><linktext>W3C - NamedNodeMap.setNamedItem()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:setNamedItemNS"><apiName>setNamedItemNS</apiName><shortdesc>
		 Adds (or replaces) a node by its localName and namespaceURI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if arg was 
		 created from a different document than the one that created this map.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this map is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INUSE_ATTRIBUTE_ERR: Raised if arg is an 
		 Attr that is already an attribute of another Element object. The DOM 
		 user must explicitly clone Attr nodes to re-use them in other elements.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if an 
		 attempt is made to add a node doesn't belong in this NamedNodeMap. 
		 Examples would include trying to insert something other than an Attr 
		 node into an Element's map of attributes, or a non-Entity node into 
		 the DocumentType's map of Entities.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the 
		 implementation does not support the feature "XML" and the language 
		 exposed through the Document does not support XML Namespaces. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>If the new Node replaces an existing node the replaced Node 
		 is returned, otherwise null is returned.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>A node to store in this map. The node will later be 
		 accessible using the value of its namespaceURI and localName attributes.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds (or replaces) a node by its localName and namespaceURI.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap"><linktext>MDC - NamedNodeMap</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-setNamedItemNS"><linktext>W3C - NamedNodeMap.setNamedItemNS()</linktext></link></related-links></apiOperation><apiValue id="dom.core:NamedNodeMap:dom.core:NamedNodeMap:length:get"><apiName>length</apiName><shortdesc>
		 The number of nodes in this map.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of nodes in this map. The range of valid child node 
		 indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms753799%28VS.85%29.aspx"><linktext>MSDN - length Property (IXMLDOMNamedNodeMap)</linktext></link><link href="http://developer.mozilla.org/En/DOM/NamedNodeMap.length"><linktext>MDC - NamedNodeMap.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6D0FB19E"><linktext>W3C - NamedNodeMap.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:UserDataHandler"><apiName>UserDataHandler</apiName><shortdesc>
	 When associating user data with a key on a node, Node.setUserData()
	 can also accept, in its third argument, a handler which will be 
	 called when the object is cloned, imported, deleted, renamed, or 
	 adopted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 When associating user data with a key on a node, Node.setUserData()
	 can also accept, in its third argument, a handler which will be 
	 called when the object is cloned, imported, deleted, renamed, or 
	 adopted. Per the specification, exceptions should not be thrown in 
	 a UserDataHandler. In both document.importNode() and Node.cloneNode(), 
	 although user data is not copied over, the handler will be called. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/UserDataHandler"><linktext>MDC - UserDataHandler</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#UserDataHandler"><linktext>W3C - UserDataHandler</linktext></link></related-links><apiOperation id="dom.core:UserDataHandler:handle"><apiName>handle</apiName><shortdesc>
		 This method is called whenever the node for which this handler is 
		 registered is imported or cloned.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>operation</apiItemName><apiType value="Number"/><apiDesc>Specifies the type of operation that is being performed on the node.
		 </apiDesc></apiParam><apiParam><apiItemName>key</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the key for which this handler is being called. 
		 </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiType value="Object"/><apiDesc>Specifies the data for which this handler is being called. 
		 </apiDesc></apiParam><apiParam><apiItemName>src</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the node being cloned, adopted, imported, or renamed. This is null when the node is being deleted.
		 </apiDesc></apiParam><apiParam><apiItemName>dst</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the node newly created if any, or null.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method is called whenever the node for which this handler is 
		 registered is imported or cloned.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/UserDataHandler.handle"><linktext>MDC - UserDataHandler.handle()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-handleUserDataEvent"><linktext>W3C - UserDataHandler.handle()</linktext></link></related-links></apiOperation><apiValue id="dom.core:UserDataHandler:NODE_ADOPTED"><apiName>NODE_ADOPTED</apiName><shortdesc>
		 The node is adopted, using Document.adoptNode().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is adopted, using Document.adoptNode().
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:UserDataHandler:NODE_CLONED"><apiName>NODE_CLONED</apiName><shortdesc>
		 The node is cloned, using Node.cloneNode().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is cloned, using Node.cloneNode().
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:UserDataHandler:NODE_DELETED"><apiName>NODE_DELETED</apiName><shortdesc>
		 The node is deleted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is deleted.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:UserDataHandler:NODE_IMPORTED"><apiName>NODE_IMPORTED</apiName><shortdesc>
		 The node is imported, using Document.importNode().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is imported, using Document.importNode().
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:UserDataHandler:NODE_RENAMED"><apiName>NODE_RENAMED</apiName><shortdesc>
		 The node is renamed, using Document.renameNode().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is renamed, using Document.renameNode().
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.core:DOMErrorHandler"><apiName>DOMErrorHandler</apiName><shortdesc>
	 DOMErrorHandler is a callback interface that the DOM implementation can
	 call when reporting errors that happens while processing XML data, or 
	 when doing some other processing (e.g.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 DOMErrorHandler is a callback interface that the DOM implementation can
	 call when reporting errors that happens while processing XML data, or 
	 when doing some other processing (e.g. validating a document). A 
	 DOMErrorHandler  object can be attached to a Document using the 
	 "error-handler" on the DOMConfiguration interface. If more than one error 
	 needs to be reported during an operation, the sequence and numbers of 
	 the errors passed to the error handler are implementation dependent. 
	 
	 <p><b>Note:</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMErrorHandler"><linktext>MDC - DOMErrorHandler</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-Interfaces-DOMErrorHandler"><linktext>W3C - DOMErrorHandler</linktext></link></related-links><apiOperation id="dom.core:DOMErrorHandler:dom.core:DOMErrorHandler:handleError"><apiName>handleError</apiName><shortdesc>
		 This method is called on the error handler when an error occurs.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the handleError method returns false, the DOM implementation should stop
		 the current processing when possible. If the method returns true, the 
		 processing may continue depending on DOMError.severity. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>error</apiItemName><apiOperationClassifier>dom.core:DOMError</apiOperationClassifier><apiDesc>The error object that describes the error. This object may be reused 
		 by the DOM implementation across multiple calls to the handleError method. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method is called on the error handler when an error occurs.
		 If an exception is thrown from this method, it is considered to be 
		 equivalent of returning true. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMErrorHandler.handleError"><linktext>MDC - DOMErrorHandler.handleError()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-ERRORS-DOMErrorHandler-handleError"><linktext>W3C - DOMErrorHandler.handleError()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.core:DOMImplementationRegistry"><apiName>DOMImplementationRegistry</apiName><shortdesc>
	 This is a global variable used to get a single DOMImplementation or DOMImplementationList 
	 depending on the registered objects with the specified features.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This is a global variable used to get a single DOMImplementation or DOMImplementationList 
	 depending on the registered objects with the specified features.
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationRegistry"><linktext>MDC - DOMImplementationRegistry</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Bootstrap"><linktext>W3C - Bootstrapping</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/ecma-script-binding.html#Level-3-ECMAScript-Binding-Extension-h2"><linktext>W3C - ECMAScript Binding Extension</linktext></link></related-links><apiOperation id="dom.core:DOMImplementationRegistry:dom.core:DOMImplementationRegistry:getDOMImplementation"><apiName>getDOMImplementation</apiName><shortdesc conref="dom.core.DOMImplementationSource#getDOMImplementation()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.core:DOMImplementation</apiOperationClassifier><apiDesc>The first DOM implementation that support the desired features, or 
		 null if this source has none.
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>feature</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string that specifies which features and versions are 
		 required. This is a space separated list in which each feature is specified 
		 by its name optionally followed by a space and a version number.
		 This method returns the first item of the list returned by getDOMImplementationList.
		 As an example, the string "XML 3.0 Traversal +Events 2.0" will request a DOM 
		 implementation that supports the module "XML" for its 3.0 version, a module 
		 that support of the "Traversal" module for any version, and the module 
		 "Events" for its 2.0 version. The module "Events" must be accessible using the 
		 method Node.getFeature() and DOMImplementation.getFeature(). 
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="dom.core.DOMImplementationSource#getDOMImplementation()">
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationRegistry.getDOMImplementation"><linktext>MDC - DOMImplementationRegistry.getDOMImplementation()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Bootstrap"><linktext>W3C - Bootstrapping</linktext></link></related-links></apiOperation><apiOperation id="dom.core:DOMImplementationRegistry:dom.core:DOMImplementationRegistry:getDOMImplementationList"><apiName>getDOMImplementationList</apiName><shortdesc conref="dom.core.DOMImplementationSource#getDOMImplementationList()">
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.core:DOMImplementationList</apiOperationClassifier><apiDesc>A list of DOM implementations that support the desired features.
		 
		 </apiDesc></apiReturn><apiParam><apiItemName>feature</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string that specifies which features and versions are required. 
		 This is a space separated list in which each feature is specified by its name 
		 optionally followed by a space and a version number. This is something like: 
		 "XML 3.0 Traversal +Events 2.0"
		 </apiDesc></apiParam></apiOperationDef><apiDesc conref="dom.core.DOMImplementationSource#getDOMImplementationList()">
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationRegistry.getDOMImplementationList"><linktext>MDC - DOMImplementationRegistry.getDOMImplementationList()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Bootstrap"><linktext>W3C - Bootstrapping</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.core:DOMImplementation"><apiName>DOMImplementation</apiName><shortdesc>
	 The DOMImplementation interface provides a number of methods for 
	 performing operations that are independent of any particular 
	 instance of the document object model.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DOMImplementation interface provides a number of methods for 
	 performing operations that are independent of any particular 
	 instance of the document object model. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/dd347056(VS.85).aspx"><linktext>MSDN - DOMImplementation Prototype</linktext></link><link href="http://developer.mozilla.org/En/DOM/DOMImplementation"><linktext>MDC - DOMImplementation</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-102161490"><linktext>W3C - DOMImplementation</linktext></link></related-links><apiOperation id="dom.core:DOMImplementation:dom.core:DOMImplementation:createDocument"><apiName>createDocument</apiName><shortdesc>
		 This method creates a DOM document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified qualified name is not an XML name according to [XML 1.0].
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the 
		 qualifiedName is malformed, if the qualifiedName has a prefix and the 
		 namespaceURI is null, or if the qualifiedName is null and the 
		 namespaceURI is different from null, or if the qualifiedName has a 
		 prefix that is "xml" and the namespaceURI is different from 
		 "http://www.w3.org/XML/1998/namespace" [XML Namespaces], or if the DOM 
		 implementation does not support the "XML" feature but a non-null 
		 namespace URI was provided, since namespaces were defined by XML.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if doctype has 
		 already been used with a different document or was created from a 
		 different implementation.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the 
		 implementation does not support the feature "XML" and the language 
		 exposed through the Document does not support XML Namespaces. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A new Document object with its document element. If the NamespaceURI, 
		 qualifiedName, and doctype are null, the returned Document is empty with 
		 no document element.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Document</apiOperationClassifier></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI of the document element to 
		 create or null.
		 </apiDesc></apiParam><apiParam><apiItemName>qualifiedName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The qualified name of the document element to 
		 be created or null.
		 </apiDesc></apiParam><apiParam><apiItemName>doctype</apiItemName><apiOperationClassifier>dom.core:DocumentType</apiOperationClassifier><apiDesc>The type of document to be created or null.
		 When doctype is not null, its Node.ownerDocument attribute is set to 
		 the document being created.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method creates a DOM document.
		 
		 </apiDesc><example>
		 <codeblock>
		 var doc = document.implementation.createDocument ('http://www.w3.org/1999/xhtml', 'html', null);
		 var body = document.createElementNS('http://www.w3.org/1999/xhtml', 'body');
		 body.setAttribute('id', 'abc');
		 doc.documentElement.appendChild(body);
		 alert(doc.getElementById('abc')); // [object HTMLBodyElement]</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementation.createDocument"><linktext>MDC - DOMImplementation.createDocument()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-DOM-createDocument"><linktext>W3C - DOMImplementation.createDocument()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:DOMImplementation:dom.core:DOMImplementation:createDocumentType"><apiName>createDocumentType</apiName><shortdesc>
		 Creates an empty DocumentType node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified qualified name is not an XML name according to [XML 1.0].
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the 
		 qualifiedName is malformed.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if 
		 the implementation does not support the feature "XML" and the 
		 language exposed through the Document does not support XML Namespaces. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A new DocumentType node with Node.ownerDocument set to null.
		 
		 </apiDesc><apiOperationClassifier>dom.core:DocumentType</apiOperationClassifier></apiReturn><apiParam><apiItemName>qualifiedName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The qualified name  of the document type to be created.
		 </apiDesc></apiParam><apiParam><apiItemName>publicId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The external subset public identifier.
		 </apiDesc></apiParam><apiParam><apiItemName>systemId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The external subset system identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates an empty DocumentType node.
		 
		 <p>Entity declarations and notations 
		 are not made available. Entity reference expansions and default 
		 attribute additions do not occur.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var dt = document.implementation.createDocumentType('svg:svg', '-//W3C//DTD SVG 1.1//EN', 'http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd');
		 var d = document.implementation.createDocument('http://www.w3.org/2000/svg', 'svg:svg', dt);
		 alert(d.doctype.publicId); // -//W3C//DTD SVG 1.1//EN</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementation.createDocumentType"><linktext>MDC - DOMImplementation.createDocumentType()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-DOM-createDocType"><linktext>W3C - DOMImplementation.createDocumentType()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:DOMImplementation:dom.core:DOMImplementation:getFeature"><apiName>getFeature</apiName><shortdesc>
		 This method returns a specialized object which implements the 
		 specialized APIs of the specified feature and version, as specified 
		 in DOM Features.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns an object which implements the specialized APIs of the 
		 specified feature and version, if any, or null if there is no object 
		 which implements interfaces associated with that feature. If the DOMObject 
		 returned by this method implements the DOMImplementation  interface, it 
		 must delegate to the primary core DOMImplementation and not return results 
		 inconsistent with the primary core DOMImplementation such as hasFeature, 
		 getFeature, etc. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>feature</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the feature requested. Note that any plus 
		 sign "+" prepended to the name of the feature will be ignored since it 
		 is not significant in the context of this method. 
		 </apiDesc></apiParam><apiParam><apiItemName>version</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This is the version number of the feature to test. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method returns a specialized object which implements the 
		 specialized APIs of the specified feature and version, as specified 
		 in DOM Features. 
		 
		 <p>The specialized object may also be obtained by using 
		 binding-specific casting methods but is not necessarily expected to, 
		 as discussed in Mixed DOM Implementations. This method also allow 
		 the implementation to provide specialized objects which do not support 
		 the DOMImplementation interface. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if (myNode.isSupported("+Events", "3.0")) {
		 	// (the plus sign "+" is irrelevant for the getFeature method itself and is ignored by this method anyway)
		 	EventTarget evt = (EventTarget) myNode.getFeature("Events", "3.0");
		 	// ...
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementation.getFeature"><linktext>MDC - DOMImplementation.getFeature()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementation3-getFeature"><linktext>W3C - DOMImplementation.getFeature()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMFeatures"><linktext>W3C - DOM Features</linktext></link></related-links></apiOperation><apiOperation id="dom.core:DOMImplementation:dom.core:DOMImplementation:hasFeature"><apiName>hasFeature</apiName><shortdesc>
		 Test if the DOM implementation implements a specific feature and version, 
		 as specified in DOM Features.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the feature is implemented in the specified version.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>feature</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the feature to test. 
		 </apiDesc></apiParam><apiParam><apiItemName>version</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This is the version number of the feature to test. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Test if the DOM implementation implements a specific feature and version, 
		 as specified in DOM Features.
		 
		 </apiDesc><example>
		 The following example uses the hasFeature method to test whether the object implements the DOM HTML standard.
		 <codeblock>var bSupported = document.implementation.hasFeature("HTML","1.0");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536446(VS.85).aspx"><linktext>MSDN - hasFeature Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/DOMImplementation.hasFeature"><linktext>MDC - DOMImplementation.hasFeature()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5CED94D7"><linktext>W3C - DOMImplementation.hasFeature()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMFeatures"><linktext>W3C - DOM Features</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.core:DOMException"><apiName>DOMException</apiName><shortdesc>
	 DOM operations only raise exceptions in "exceptional" circumstances.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 DOM operations only raise exceptions in "exceptional" circumstances. For example,
	 when an operation is impossible to perform (either for logical reasons, 
	 because data is lost, or because the implementation has become unstable). 
	 In general, DOM methods return specific error values in ordinary processing 
	 situations, such as out-of-bound errors when using NodeList.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMException"><linktext>MDC - DOMException</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-17189187"><linktext>W3C - DOMException</linktext></link></related-links><apiValue id="dom.core:DOMException:dom.core:DOMException:code:get"><apiName>code</apiName><shortdesc>
		 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 An integer indicating the type of error generated.
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.core.xml#ExceptionCode"><linktext>dom.core.ExceptionCode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DocumentType"><apiName>DocumentType</apiName><shortdesc>
	 Each Document has a doctype attribute whose value is either null or a 
	 DocumentType  object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 2
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Each Document has a doctype attribute whose value is either null or a 
	 DocumentType  object. The DocumentType interface in the DOM Core provides 
	 an interface to the list of entities that are defined for the document, 
	 and little else because the effect of namespaces and the various XML schema 
	 efforts on DTD representation are not clearly understood as of this writing.
	 
	 <p><b>Note:</b> DOM Level 3 doesn't support editing DocumentType nodes. DocumentType nodes 
	 are read-only.</p>
	 
	 <p><b>Note (Mozilla):</b> This interface is not fully supported in Mozilla at present, 
	 including for indicating internalSubset information which Gecko generally does otherwise support.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms762752%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMDocumentType</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType"><linktext>MDC - DocumentType</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-412266927"><linktext>W3C - DocumentType</linktext></link></related-links><adobeApiEvent id="dom.core:DocumentType_DOMNodeInsertedIntoDocument_DOMNodeInsertedIntoDocument"><apiName>DOMNodeInsertedIntoDocument</apiName><shortdesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInsertedIntoDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 after the insertion has taken place. The target node of this event is the 
	 node being inserted. If the node is being directly inserted, the event type 
	 DOMNodeInserted occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:DocumentType_DOMNodeRemovedFromDocument_DOMNodeRemovedFromDocument"><apiName>DOMNodeRemovedFromDocument</apiName><shortdesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemovedFromDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 before the removal takes place. The target node of this event type is 
	 the node being removed. If the node is being directly removed, the event 
	 type DOMNodeRemoved occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:DocumentType_DOMNodeRemoved_DOMNodeRemoved"><apiName>DOMNodeRemoved</apiName><shortdesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemoved</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement. This event is dispatched before the 
	 removal takes place. The target node of this event is the node 
	 being removed.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:DocumentType_DOMNodeInserted_DOMNodeInserted"><apiName>DOMNodeInserted</apiName><shortdesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInserted</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element. This event is dispatched after 
	 the insertion has taken place. The target node of this event is the 
	 node being inserted.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiValue id="dom.core:DocumentType:entities:get"><apiName>entities</apiName><shortdesc>
		 A NamedNodeMap containing the general entities, both external and internal, 
		 declared in the DTD.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NamedNodeMap</apiValueClassifier></apiValueDef><apiDesc>
		 A NamedNodeMap containing the general entities, both external and internal, 
		 declared in the DTD. Parameter entities are not contained. Duplicates 
		 are discarded.
		 
		 <p>Internal (Parsed) Entities define entity references in order to replace certain strings by a replacement text. The content of the entity is given in the declaration.</p>
		 
		 <p>External (Parsed) Entities refer to external storage objects.</p>
		 
		 <p><b>Note:</b> The DOM Level 2 does not support editing entities, therefore entities 
		 cannot be altered in any way.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE ex SYSTEM "ex.dtd" [
		 	&lt;!ENTITY bat "bat"&gt;       
		 	&lt;!ENTITY bar "bar"&gt;       
		 ]&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757817%28VS.85%29.aspx"><linktext>MSDN - entities Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.entities"><linktext>MDC - DocumentType.entities</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1788794630"><linktext>W3C - DocumentType.entities</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:internalSubset:get"><apiName>internalSubset</apiName><shortdesc>
		 The internal subset as a string, or null if there is none.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The internal subset as a string, or null if there is none. This is does 
		 not contain the delimiting square brackets.
		 
		 <p><b>Note:</b> The actual content returned depends on how much information is 
		 available to the implementation. This may vary depending on various 
		 parameters, including the XML processor used to build the document.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Strict//EN"
		 	"http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd"
		 	[
		 	&lt;!ATTLIST input validate CDATA #IMPLIED&gt;
		 	&lt;!ATTLIST input range CDATA #IMPLIED&gt;
		 ]&gt;
		 // internalSubset : &lt;!ATTLIST input validate CDATA #IMPLIED&gt;&lt;!ATTLIST input range CDATA #IMPLIED&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DocumentType.internalSubset"><linktext>MDC - DocumentType.internalSubset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-internalSubset"><linktext>W3C - DocumentType.internalSubset</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:name:get"><apiName>name</apiName><shortdesc>
		 The name of DTD; i.e., the name immediately following the DOCTYPE keyword.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of DTD; i.e., the name immediately following the DOCTYPE keyword.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
		 // name : html</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms754603%28VS.85%29.aspx"><linktext>MSDN - name Property (IXMLDOMDocumentType)</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.name"><linktext>MDC - DocumentType.name</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1844763134"><linktext>W3C - DocumentType.name</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:notations:get"><apiName>notations</apiName><shortdesc>
		 A NamedNodeMap containing the notations declared in the DTD.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NamedNodeMap</apiValueClassifier></apiValueDef><apiDesc>
		 A NamedNodeMap containing the notations declared in the DTD. Duplicates 
		 are discarded. Every node in this map also implements the Notation interface.
		 
		 <p><b>Note:</b> The DOM Level 2 does not support editing notations, therefore notations 
		 cannot be altered in any way.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE ex SYSTEM "ex.dtd" [
		 	&lt;!NOTATION GIF system "image/gif"&gt;    
		 ]&gt;
		 </codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms762714%28VS.85%29.aspx"><linktext>MSDN - notations Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.notations"><linktext>MDC - DocumentType.notations</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D46829EF"><linktext>W3C - DocumentType.notations</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:publicId:get"><apiName>publicId</apiName><shortdesc>
		 The public identifier of the external subset.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The public identifier of the external subset.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
		 // publicId : -//W3C//DTD XHTML 1.0 Transitional//EN</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms760313%28VS.85%29.aspx"><linktext>MSDN - publicId Property (IXMLDOMEntity)</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms765397%28VS.85%29.aspx"><linktext>MSDN - publicId Property (IXMLDOMNotation)</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.publicId"><linktext>MDC - DocumentType.publicId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-publicId"><linktext>W3C - DocumentType.publicId</linktext></link></related-links></apiValue><apiValue id="dom.core:DocumentType:systemId:get"><apiName>systemId</apiName><shortdesc>
		 The system identifier of the external subset.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The system identifier of the external subset. This may be an absolute URI or not.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"&gt;
		 // systemId : http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms764731%28VS.85%29.aspx"><linktext>MSDN - systemId Property (IXMLDOMEntity)</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms754668%28VS.85%29.aspx"><linktext>MSDN - systemId Property (IXMLDOMNotation)</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentType.systemId"><linktext>MDC - DocumentType.systemId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-Core-DocType-systemId"><linktext>W3C - DocumentType.systemId</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:ExceptionCode"><apiName>ExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated.
	 
	 <p><b>Note:</b> Other numeric codes are reserved for W3C for possible future use.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-258A00AF"><linktext>W3C - DOM 3 Core: ExceptionCode</linktext></link></related-links><apiValue id="dom.core:ExceptionCode:DOMSTRING_SIZE_ERR"><apiName>DOMSTRING_SIZE_ERR</apiName><shortdesc>
		 If the specified range of text does not fit into a DOMString.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the specified range of text does not fit into a DOMString.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:HIERARCHY_REQUEST_ERR"><apiName>HIERARCHY_REQUEST_ERR</apiName><shortdesc>
		 If any Node is inserted somewhere it doesn't belong.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If any Node is inserted somewhere it doesn't belong.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INDEX_SIZE_ERR"><apiName>INDEX_SIZE_ERR</apiName><shortdesc>
		 If index or size is negative, or greater than the allowed value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If index or size is negative, or greater than the allowed value.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INUSE_ATTRIBUTE_ERR"><apiName>INUSE_ATTRIBUTE_ERR</apiName><shortdesc>
		 If an attempt is made to add an attribute that is already in use elsewhere.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>10</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to add an attribute that is already in use elsewhere.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INVALID_ACCESS_ERR"><apiName>INVALID_ACCESS_ERR</apiName><shortdesc>
		 If a parameter or an operation is not supported by the underlying object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>15</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If a parameter or an operation is not supported by the underlying object.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INVALID_CHARACTER_ERR"><apiName>INVALID_CHARACTER_ERR</apiName><shortdesc>
		 If an invalid or illegal character is specified, such as in an XML name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an invalid or illegal character is specified, such as in an XML name.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INVALID_MODIFICATION_ERR"><apiName>INVALID_MODIFICATION_ERR</apiName><shortdesc>
		 If an attempt is made to modify the type of the underlying object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>13</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to modify the type of the underlying object.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:INVALID_STATE_ERR"><apiName>INVALID_STATE_ERR</apiName><shortdesc>
		 If an attempt is made to use an object that is not, or is no longer, usable.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>11</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to use an object that is not, or is no longer, usable.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NAMESPACE_ERR"><apiName>NAMESPACE_ERR</apiName><shortdesc>
		 If an attempt is made to create or change an object in a way which is 
		 incorrect with regard to namespaces.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>14</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to create or change an object in a way which is 
		 incorrect with regard to namespaces.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NOT_FOUND_ERR"><apiName>NOT_FOUND_ERR</apiName><shortdesc>
		 If an attempt is made to reference a Node in a context where it does not exist.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to reference a Node in a context where it does not exist.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NOT_SUPPORTED_ERR"><apiName>NOT_SUPPORTED_ERR</apiName><shortdesc>
		 If the implementation does not support the requested type of object or operation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the implementation does not support the requested type of object or operation.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NO_DATA_ALLOWED_ERR"><apiName>NO_DATA_ALLOWED_ERR</apiName><shortdesc>
		 If data is specified for a Node which does not support data.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If data is specified for a Node which does not support data.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:NO_MODIFICATION_ALLOWED_ERR"><apiName>NO_MODIFICATION_ALLOWED_ERR</apiName><shortdesc>
		 If an attempt is made to modify an object where modifications are not allowed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt is made to modify an object where modifications are not allowed.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:SYNTAX_ERR"><apiName>SYNTAX_ERR</apiName><shortdesc>
		 If an invalid or illegal string is specified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>12</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an invalid or illegal string is specified.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:TYPE_MISMATCH_ERR"><apiName>TYPE_MISMATCH_ERR</apiName><shortdesc>
		 If the type of an object is incompatible with the expected type of the 
		 parameter associated to the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the type of an object is incompatible with the expected type of the 
		 parameter associated to the object.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:VALIDATION_ERR"><apiName>VALIDATION_ERR</apiName><shortdesc>
		 If a call to a method such as insertBefore or removeChild would make the 
		 Node invalid with respect to "partial validity", this exception would be 
		 raised and the operation would not be done.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If a call to a method such as insertBefore or removeChild would make the 
		 Node invalid with respect to "partial validity", this exception would be 
		 raised and the operation would not be done. This code is used in [DOM 
		 Level 3 Validation]. Refer to this specification for further information.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:ExceptionCode:WRONG_DOCUMENT_ERR"><apiName>WRONG_DOCUMENT_ERR</apiName><shortdesc>
		 If a Node is used in a different document than the one that created it (that doesn't support it).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If a Node is used in a different document than the one that created it (that doesn't support it).
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.core:NameList"><apiName>NameList</apiName><shortdesc>
	 The NameList interface provides the abstraction of an ordered collection 
	 of parallel pairs of name and namespace values (which could be null 
	 values), without defining or constraining how this collection is 
	 implemented.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The NameList interface provides the abstraction of an ordered collection 
	 of parallel pairs of name and namespace values (which could be null 
	 values), without defining or constraining how this collection is 
	 implemented. The items in the NameList are accessible via an integral 
	 index, starting from 0.
	 
	 <p><b>Note (Mozilla):</b> Although there is an XPCOM interface for it, this does not seem to be implemented in Mozilla</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NameList"><linktext>MDC - NameList</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList"><linktext>W3C - NameList</linktext></link></related-links><apiOperation id="dom.core:NameList:dom.core:NameList:contains"><apiName>contains</apiName><shortdesc>
		 Test if a name is part of this NameList.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the name has been found.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>str</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name to look for. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Test if a name is part of this NameList. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NameList.contains"><linktext>MDC - NameList.contains()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-contains"><linktext>W3C - NameList.contains()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NameList:dom.core:NameList:containsNS"><apiName>containsNS</apiName><shortdesc>
		 Test if the pair namespaceURI/name is part of this NameList.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the pair namespaceURI/name has been found.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI to look for. 
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name to look for. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Test if the pair namespaceURI/name is part of this NameList. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NameList.containsNS"><linktext>MDC - NameList.containsNS()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-containsNS"><linktext>W3C - NameList.containsNS()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NameList:dom.core:NameList:getName"><apiName>getName</apiName><shortdesc>
		 Returns the indexth name item in the collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The name at the indexth position in the NameList, or null if 
		 there is no name for the specified index or if the index is out of range. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into the collection.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the indexth name item in the collection. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NameList.getName"><linktext>MDC - NameList.getName()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-getName"><linktext>W3C - NameList.getName()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NameList:dom.core:NameList:getNamespaceURI"><apiName>getNamespaceURI</apiName><shortdesc>
		 Returns the indexth namespaceURI item in the collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The namespace URI at the indexth position in the NameList, or null 
		 if there is no name for the specified index or if the index is out of range. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into the collection.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the indexth namespaceURI item in the collection. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NameList.getNamespaceURI"><linktext>MDC - NameList.getNamespaceURI()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-getNamespaceURI"><linktext>W3C - NameList.getNamespaceURI()</linktext></link></related-links></apiOperation><apiValue id="dom.core:NameList:dom.core:NameList:length:get"><apiName>length</apiName><shortdesc>
		 The number of pairs (name and namespaceURI) in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of pairs (name and namespaceURI) in the list. The range 
		 of valid child node indices is 0 to length-1  inclusive. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NameList.length"><linktext>MDC - NameList.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#NameList-length"><linktext>W3C - NameList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:EntityReference"><apiName>EntityReference</apiName><shortdesc>
	 Read-only reference to an entity reference in the DOM tree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Read-only reference to an entity reference in the DOM tree.
	 
	 <p><b>Note:</b> Character references and references to predefined entities 
	 are considered to be expanded by the HTML or XML processor so that 
	 characters are represented by their Unicode equivalent rather than by an 
	 entity reference. Moreover, the XML processor may completely expand 
	 references to entities while building the Document, instead of providing 
	 EntityReference  nodes. If it does provide such nodes, then for an 
	 EntityReference node that represents a reference to a known entity an Entity 
	 exists, and the subtree of the EntityReference node is a copy of the Entity 
	 node subtree. However, the latter may not be true when an entity contains 
	 an unbound namespace prefix. In such a case, because the namespace prefix 
	 resolution depends on where the entity reference is, the descendants of the 
	 EntityReference node may be bound to different namespace URIs. When an 
	 EntityReference node represents a reference to an unknown entity, the node has 
	 no children and its replacement value, when used by Attr.value for example, 
	 is empty.</p>
	 
	 <p><b>Note:</b> As for Entity nodes, EntityReference nodes and all their descendants are readonly.</p>
	 
	 <p><b>Note:</b> EntityReference nodes may cause element content and attribute value normalization 
	 problems when, such as in XML 1.0 and XML Schema, the normalization is performed 
	 after entity reference are expanded.</p>
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms755427%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMEntityReference</linktext></link><link href="http://developer.mozilla.org/En/DOM/EntityReference"><linktext>MDC - EntityReference</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-11C98490"><linktext>W3C - EntityReference</linktext></link></related-links><adobeApiEvent id="dom.core:EntityReference_DOMNodeInsertedIntoDocument_DOMNodeInsertedIntoDocument"><apiName>DOMNodeInsertedIntoDocument</apiName><shortdesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInsertedIntoDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 after the insertion has taken place. The target node of this event is the 
	 node being inserted. If the node is being directly inserted, the event type 
	 DOMNodeInserted occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:EntityReference_DOMNodeRemovedFromDocument_DOMNodeRemovedFromDocument"><apiName>DOMNodeRemovedFromDocument</apiName><shortdesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemovedFromDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 before the removal takes place. The target node of this event type is 
	 the node being removed. If the node is being directly removed, the event 
	 type DOMNodeRemoved occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:EntityReference_DOMNodeRemoved_DOMNodeRemoved"><apiName>DOMNodeRemoved</apiName><shortdesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemoved</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement. This event is dispatched before the 
	 removal takes place. The target node of this event is the node 
	 being removed.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:EntityReference_DOMNodeInserted_DOMNodeInserted"><apiName>DOMNodeInserted</apiName><shortdesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInserted</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element. This event is dispatched after 
	 the insertion has taken place. The target node of this event is the 
	 node being inserted.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent></apiClassifier><apiClassifier id="dom.core:DOMLocator"><apiName>DOMLocator</apiName><shortdesc>
	 Indicates a location such as where an error occurred.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Indicates a location such as where an error occurred. Returned by DOMError.location.
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator"><linktext>MDC - DOMLocator</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Interfaces-DOMLocator"><linktext>W3C - DOMLocator</linktext></link><link href="dom.core.xml#DOMError/location"><linktext>dom.core.DOMError.location</linktext></link></related-links><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:byteOffset:get"><apiName>byteOffset</apiName><shortdesc>
		 The byte offset into the input source this locator is pointing to or -1 
		 if there is no byte offset available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The byte offset into the input source this locator is pointing to or -1 
		 if there is no byte offset available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.byteOffset"><linktext>MDC - DOMLocator.byteOffset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-byteOffset"><linktext>W3C - DOMLocator.byteOffset</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:columnNumber:get"><apiName>columnNumber</apiName><shortdesc>
		 The column number this locator is pointing to, or -1 if there is no 
		 column number available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The column number this locator is pointing to, or -1 if there is no 
		 column number available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.columnNumber"><linktext>MDC - DOMLocator.columnNumber</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-column-number"><linktext>W3C - DOMLocator.columnNumber</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:lineNumber:get"><apiName>lineNumber</apiName><shortdesc>
		 The line number this locator is pointing to, or -1 if there is no 
		 column number available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The line number this locator is pointing to, or -1 if there is no 
		 column number available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.lineNumber"><linktext>MDC - DOMLocator.lineNumber</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-line-number"><linktext>W3C - DOMLocator.lineNumber</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:relatedNode:get"><apiName>relatedNode</apiName><shortdesc>
		 The node this locator is pointing to, or null if no node is available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 The node this locator is pointing to, or null if no node is available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.relatedNode"><linktext>MDC - DOMLocator.relatedNode</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-node"><linktext>W3C - DOMLocator.relatedNode</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:uri:get"><apiName>uri</apiName><shortdesc>
		 The URI this locator is pointing to, or null if no URI is available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI this locator is pointing to, or null if no URI is available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.uri"><linktext>MDC - DOMLocator.uri</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-uri"><linktext>W3C - DOMLocator.uri</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMLocator:dom.core:DOMLocator:utf16Offset:get"><apiName>utf16Offset</apiName><shortdesc>
		 The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646], 
		 offset into the input source this locator is pointing to or -1 if there 
		 is no UTF-16 offset available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The UTF-16, as defined in [Unicode] and Amendment 1 of [ISO/IEC 10646], 
		 offset into the input source this locator is pointing to or -1 if there 
		 is no UTF-16 offset available.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMLocator.utf16Offset"><linktext>MDC - DOMLocator.utf16Offset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMLocator-utf16Offset"><linktext>W3C - DOMLocator.utf16Offset</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:Document"><apiName>Document</apiName><shortdesc>
	 In the DOM, the document object provides a general way to represent HTML, 
	 XHTML, and XML documents.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.style.css:DocumentCSS</apiBaseInterface><apiBaseInterface>dom.style.stylesheets:DocumentStyle</apiBaseInterface><apiBaseInterface>cssom.view:DocumentView</apiBaseInterface><apiBaseInterface>dom.views:DocumentView</apiBaseInterface><apiBaseInterface>dom.tr.range:DocumentRange</apiBaseInterface><apiBaseInterface>dom.events:DocumentEvent</apiBaseInterface><apiBaseInterface>dom.tr.traversal:DocumentTraversal</apiBaseInterface><apiBaseInterface>selectors:NodeSelector</apiBaseInterface><apiBaseInterface>dom.loadsave:DOMImplementationLS</apiBaseInterface><apiBaseInterface>dom.loadsave:DocumentLS</apiBaseInterface><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 In the DOM, the document object provides a general way to represent HTML, 
	 XHTML, and XML documents. Document objects implement the general DOM Core 
	 document interface (which itself implements the Node interface).
	 
	 <p>In addition to the generalized DOM Core document interface, HTML documents 
	 also implement the DOM HTMLDocument interface, which is a more specialized 
	 interface for dealing with HTML documents (e.g., document.cookie, 
	 document.alinkColor). Methods listed here that are part of this more 
	 specialized interface have an asterisk (~~) next to them.</p>
	 
	 <p>The document is contained by the window object and may contain any number 
	 of elements.</p>
	 
	 <p>The document interface provides access to things such as the document type, 
	 its color and formatting, plugins and applets, as well providing methods 
	 for creating and manipulating all of the document's child nodes, or elements, 
	 such as BODY and TABLE elements.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531073%28VS.85%29.aspx"><linktext>MSDN - document Object</linktext></link><link href="http://developer.mozilla.org/en/DOM/document"><linktext>MDC - Document</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#i-Document"><linktext>W3C - Document</linktext></link></related-links><adobeApiEvent id="dom.core:Document_offline_offline"><apiName>offline</apiName><shortdesc>
	 Is fired when the browser switches between online and offline mode.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>offline</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Is fired when the browser switches between online and offline mode.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Document_online_online"><apiName>online</apiName><shortdesc>
	 Is fired when the browser switches between online and offline mode.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>online</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Is fired when the browser switches between online and offline mode.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Document_scroll_scroll"><apiName>scroll</apiName><shortdesc>
	 A document view or an element has been scrolled.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>scroll</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A document view or an element has been scrolled. The scroll occured before 
	 the dispatch of this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Document_resize_resize"><apiName>resize</apiName><shortdesc>
	 A document view or an element has been resized.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>resize</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A document view or an element has been resized. The resize occured before 
	 the dispatch of this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Document_unload_unload"><apiName>unload</apiName><shortdesc>
	 The DOM implementation removes from the environment the resource 
	 (such as the document) or any dependent resources (such as images, 
	 style sheets, scripts).</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>unload</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 The DOM implementation removes from the environment the resource 
	 (such as the document) or any dependent resources (such as images, 
	 style sheets, scripts). The document is unloaded after the dispatch 
	 of this event type. If this event type is dispatched, implementations 
	 are required to dispatch this event at least on the Document node.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Document_load_load"><apiName>load</apiName><shortdesc>
	 The DOM Implementation finishes loading the resource (such as the 
	 document) and any dependent resources (such as images, style sheets, 
	 or scripts).</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>load</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 The DOM Implementation finishes loading the resource (such as the 
	 document) and any dependent resources (such as images, style sheets, 
	 or scripts). Dependent resources that fail to load will not prevent 
	 this event from firing if the resource that loaded them is still 
	 accessible via the DOM. If this event type is dispatched, 
	 implementations are required to dispatch this event at least on the 
	 Document node.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Document_DOMSubtreeModified_DOMSubtreeModified"><apiName>DOMSubtreeModified</apiName><shortdesc>
	 This is a general event for notification of all changes to the 
	 document.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMSubtreeModified</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 This is a general event for notification of all changes to the 
	 document. It can be used instead of the more specific mutation and 
	 mutation name events listed below. It may be dispatched after a 
	 single modification to the document or, at the implementation's 
	 discretion, after multiple changes have occurred. The latter use 
	 should generally be used to accommodate multiple changes which occur 
	 either simultaneously or in rapid succession. The target of this 
	 event is the lowest common parent of the changes which have taken 
	 place. This event is dispatched after any other events caused by the 
	 mutation(s) have occurred.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Document_mousewheel_mousewheel"><apiName>mousewheel</apiName><shortdesc>
	 A mouse wheel has been rotated around the y-axis.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mousewheel</apiEventType><adobeApiEventClassifier>dom.events.MouseWheelEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A mouse wheel has been rotated around the y-axis.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Document_mousemultiwheel_mousemultiwheel"><apiName>mousemultiwheel</apiName><shortdesc>
	 A mouse wheel has been rotated.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mousemultiwheel</apiEventType><adobeApiEventClassifier>dom.events.MouseMultiWheelEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A mouse wheel has been rotated. A default action of user agent 
	 generated event objects of this type causes implementations to 
	 dispatch a mousewheel event iff it supports that event type and 
	 MouseMultiWheelEvent.wheelDeltaY is non-zero.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="dom.core:Document:abort"><apiName>abort</apiName><shortdesc>
		 
		 If the document is currently being loaded as a result of the method load being invoked the loading and parsing is immediately 
		 aborted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 
		 If the document is currently being loaded as a result of the method load being invoked the loading and parsing is immediately 
		 aborted. The possibly partial result of parsing the document is discarded and the document is cleared. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-abort"><linktext>W3C - DocumentLS.abort()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:adoptNode"><apiName>adoptNode</apiName><shortdesc>
		 Attempts to adopt a node from another document to this document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the source 
		 node is of type DOCUMENT, DOCUMENT_TYPE.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised when 
		 the source node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The adopted node, or null if this operation fails, such as when 
		 the source node comes from a different implementation.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>source</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to move into this document.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Attempts to adopt a node from another document to this document. If supported, 
		 it changes the ownerDocument of the source node, its children, as well as the 
		 attached attribute nodes if there are any. If the source node has a parent it 
		 is first removed from the child list of its parent. This effectively allows 
		 moving a subtree from one document to another (unlike importNode() which create 
		 a copy of the source node instead of moving it). When it fails, applications 
		 should use Document.importNode() instead. Note that if the adopted node is 
		 already part of this document (i.e. the source and target document are the same), 
		 this method still has the effect of removing the source node from the child 
		 list of its parent, if any. The following list describes the specifics for 
		 each type of node.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Attribute</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>ATTRIBUTE_NODE</entry>
		 		<entry>The ownerElement attribute is set to null and the specified flag is set to true on the adopted Attr. The descendants of the source Attr are recursively adopted.</entry>
		 	</row><row>
		 		<entry>DOCUMENT_FRAGMENT_NODE</entry>
		 		<entry>The descendants of the source node are recursively adopted.</entry>
		 	</row><row>
		 		<entry>DOCUMENT_NODE</entry>
		 		<entry>Document nodes cannot be adopted.</entry>
		 	</row><row>
		 		<entry>DOCUMENT_TYPE_NODE</entry>
		 		<entry>DocumentType nodes cannot be adopted.</entry>
		 	</row><row>
		 		<entry>ELEMENT_NODE</entry>
		 		<entry>Specified attribute nodes of the source element are adopted. Default attributes are discarded, though if the document being adopted into defines default attributes for this element name, those are assigned. The descendants of the source element are recursively adopted.</entry>
		 	</row><row>
		 		<entry>ENTITY_NODE</entry>
		 		<entry>Entity nodes cannot be adopted.</entry>
		 	</row><row>
		 		<entry>ENTITY_REFERENCE_NODE</entry>
		 		<entry>Only the EntityReference node itself is adopted, the descendants are discarded, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.</entry>
		 	</row><row>
		 		<entry>NOTATION_NODE</entry>
		 		<entry>Notation nodes cannot be adopted.</entry>
		 	</row><row>
		 		<entry>PROCESSING_INSTRUCTION_NODE, TEXT_NODE, CDATA_SECTION_NODE, COMMENT_NODE</entry>
		 		<entry>These 
		 nodes can all be adopted. No specifics.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note:</b> Since it does not create new nodes unlike the Document.importNode() method, 
		 this method does not raise an INVALID_CHARACTER_ERR exception, and applications 
		 should use the Document.normalizeDocument() method to check if an imported name 
		 is not an XML name according to the XML version in use.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.adoptNode"><linktext>MDC - Document.adoptNode()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-adoptNode"><linktext>W3C - Document.adoptNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:attachEvent"><apiName>attachEvent</apiName><shortdesc>
		 Binds the specified function to an event, so that the function gets called whenever 
		 the event fires on the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true (successful) or false (failed).
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The event string should include the "on" prefix (ie: "onload", "onclick" etc).
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>The function or method to associate with the event.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Binds the specified function to an event, so that the function gets called whenever 
		 the event fires on the object.
		 
		 </apiDesc><example>
		 <codeblock>if (window.attachEvent) window.attachEvent("onload", statusreport); //invoke function</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536343%28VS.85%29.aspx"><linktext>MSDN - attachEvent Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:canDispatch"><apiName>canDispatch</apiName><shortdesc>
		 
		 Tests if the implementation can generate events of a specified type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the implementation can generate and dispatch this event type
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.namespaceURI of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.type of the event.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Tests if the implementation can generate events of a specified type. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent-canDispatch"><linktext>W3C - DOM 3 Events: DocumentEvent.canDispatch()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createAttribute"><apiName>createAttribute</apiName><shortdesc>
		 Creates an Attr of the given name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified name is not an XML name according to the XML version 
		 in use specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A new Attr object with the nodeName  attribute set to name, 
		 and localName, prefix, and namespaceURI set to null. The value of 
		 the attribute is the empty string.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Attr</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the attribute.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates an Attr of the given name. Note that the Attr instance can 
		 then be set on an Element  using the setAttributeNode method.
		 To create an attribute with a qualified name and namespace URI, use 
		 the createAttributeNS method.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 &lt;title&gt; create/set/get Attribute example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function doAttrib() {
		 	var node = document.getElementById("div1");
		 	var a = document.createAttribute("my_attrib");
		 	a.nodeValue = "newVal";
		 	node.setAttributeNode(a);
		 	alert(node.getAttribute("my_attrib")); // "newVal"
		 }
		 
		 // alternative form not actually using createAttribute
		 //function doAttrib() {
		 //var node = document.getElementById("div1");
		 //node.setAttribute("my_attrib", "newVal");
		 //alert(node.getAttribute("my_attrib")); // "newVal"
		 //}
		 
		 &lt;/script&gt;
		 
		 &lt;/head&gt;
		 
		 &lt;body onload="doAttrib();"&gt;
		 	&lt;div id="div1"&gt;
		 		&lt;p&gt;Some content here&lt;/p&gt;
		 	&lt;/div&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536379%28VS.85%29.aspx"><linktext>MSDN - createAttribute Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.createAttribute"><linktext>MDC - Document.createAttribute()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1084891198"><linktext>W3C - Document.createAttribute()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createAttributeNS"><apiName>createAttributeNS</apiName><shortdesc>
		 Creates an attribute of the given qualified name and namespace URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified qualifiedName  is not an XML name according to the XML 
		 version in use specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the qualifiedName 
		 is a malformed qualified name, if the qualifiedName has a prefix and 
		 the namespaceURI is null, if the qualifiedName has a prefix that is 
		 "xml" and the namespaceURI is different from 
		 "http://www.w3.org/XML/1998/namespace", if the qualifiedName or its 
		 prefix is "xmlns" and the namespaceURI is different from 
		 "http://www.w3.org/2000/xmlns/", or if the namespaceURI is 
		 "http://www.w3.org/2000/xmlns/" and neither the qualifiedName nor its 
		 prefix is "xmlns".
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: Always thrown if the 
		 current document does not support the "XML" feature, since namespaces 
		 were defined by XML.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A new Attr object with the following attributes:
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Attribute</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry><codeph>Node.nodeName</codeph></entry>
		 		<entry>qualifiedName</entry>
		 	</row><row>
		 		<entry><codeph>Node.namespaceURI</codeph></entry>
		 		<entry><codeph>namespaceURI</codeph></entry>
		 	</row><row>
		 		<entry><codeph>Node.prefix</codeph></entry>
		 		<entry>prefix, extracted from <codeph>qualifiedName</codeph>, or <codeph>null</codeph> if there is no	prefix</entry>
		 	</row><row>
		 		<entry><codeph>Node.localName</codeph></entry>
		 		<entry>local name, extracted from <codeph>qualifiedName</codeph></entry>
		 	</row><row>
		 		<entry><codeph>Attr.name</codeph></entry>
		 		<entry>qualifiedName</entry>
		 	</row><row>
		 		<entry><codeph>Node.nodeValue</codeph></entry>
		 		<entry>the empty string</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc><apiOperationClassifier>dom.core:Attr</apiOperationClassifier></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI of the attribute to create.
		 </apiDesc></apiParam><apiParam><apiItemName>qualifiedName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The qualified name of the attribute to instantiate.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates an attribute of the given qualified name and namespace URI.
		 Per XML Namespaces, applications must use the value null as the 
		 namespaceURI parameter for methods if they wish to have no namespace.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createAttributeNS"><linktext>MDC - Document.createAttributeNS()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-DocCrAttrNS"><linktext>W3C - Document.createAttributeNS()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createCDATASection"><apiName>createCDATASection</apiName><shortdesc>
		 Creates a CDATASection node whose value is the specified string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if this 
		 document is an HTML document.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The new CDATASection object.
		 
		 </apiDesc><apiOperationClassifier>dom.core:CDATASection</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The data for the CDATASection contents.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a CDATASection node whose value is the specified string.
		 
		 <p><b>Note (Mozilla):</b> Will throw a NS_ERROR_DOM_INVALID_CHARACTER_ERR exception if one tries to 
		 submit the closing CDATA sequence ("]]&gt;") as part of the data, so unescaped user-provided data cannot 
		 be safely used without with this method getting this exception (createTextNode() can often be used in 
		 its place). </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var docu = new DOMParser().parseFromString('&lt;xml&gt;&lt;/xml&gt;',  "application/xml");
		 
		 var cdata = docu.createCDATASection('Some &lt;CDATA&gt; data &amp; then some');
		 
		 docu.getElementsByTagName('xml')[0].appendChild(cdata);
		 
		 alert(new XMLSerializer().serializeToString(docu));
		 // Displays: &lt;xml&gt;&lt;![CDATA[Some &lt;CDATA&gt; data &amp; then some]]&gt;&lt;/xml&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createCDATASection"><linktext>MDC - Document.createCDATASection()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D26C0AF8"><linktext>W3C - Document.createCDATASection()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createComment"><apiName>createComment</apiName><shortdesc>
		 Creates a Comment node given the specified string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The new Comment object.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Comment</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The data for the node.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a Comment node given the specified string.
		 
		 <p><b>Note (Mozilla):</b> Will throw a NS_ERROR_DOM_INVALID_CHARACTER_ERR exception if one tries to 
		 include the "--" sequence as part of the data, so if based on user data, this potential string would 
		 need to be escaped or have its exception caught. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var docu = new DOMParser().parseFromString('&lt;xml&gt;&lt;/xml&gt;',  "application/xml");
		 
		 var comment = docu.createComment('This is a not-so-secret comment in your document');
		 
		 docu.getElementsByTagName('xml')[0].appendChild(comment);
		 
		 alert(new XMLSerializer().serializeToString(docu));
		 // Displays: &lt;xml&gt;&lt;!--This is a not-so-secret comment in your document--&gt;&lt;/xml&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536383%28VS.85%29.aspx"><linktext>MSDN - createComment Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.createComment"><linktext>MDC - Document.createComment()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1334481328"><linktext>W3C - Document.createComment()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createDocumentFragment"><apiName>createDocumentFragment</apiName><shortdesc>
		 Creates an empty DocumentFragment object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A new DocumentFragment.
		 
		 </apiDesc><apiOperationClassifier>dom.core:DocumentFragment</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Creates an empty DocumentFragment object. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var frag = document.createDocumentFragment();
		 frag.appendChild(document.createTextNode('Ipsum Lorem'));
		 document.body.appendChild(frag);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536387%28VS.85%29.aspx"><linktext>MSDN - createDocumentFragment Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.createDocumentFragment"><linktext>MDC - Document.createDocumentFragment()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-35CB04B5"><linktext>W3C - Document.createDocumentFragment()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createElement"><apiName>createElement</apiName><shortdesc>
		 Creates an element of the type specified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified name is not an XML name according to the XML version in 
		 use specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A new Element object with the nodeName attribute set to tagName, 
		 and localName, prefix, and namespaceURI set to null.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>tagName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the element type to instantiate. For XML, 
		 this is case-sensitive, otherwise it depends on the case-sensitivity 
		 of the markup language in use. In that case, the name is mapped to 
		 the canonical form of that markup by the DOM implementation.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates an element of the type specified. Note that the instance
		 returned implements the Element interface, so attributes can be 
		 specified directly on the returned object.
		 In addition, if there are known attributes with default values, 
		 Attr nodes representing them are automatically created and attached 
		 to the element.
		 To create an element with a qualified name and namespace URI, use 
		 the createElementNS method.
		 
		 <p><b>Note (Mozilla):</b> Gecko implementation of createElement doesn't conform 
		 to the DOM spec for XUL and XHTML documents: localName and namespaceURI are not set 
		 to null on the created element. See bug 280692 for details.</p>
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 4.0, the only new elements you can create are  img,  area, and  
		 option. As of Internet Explorer 5, you can create all elements programmatically, except  frame and  
		 iframe. The properties of these created elements are read/write and can be accessed programmatically.
		 Before you use new objects, you must explicitly add them to their respective collections or to the 
		 document. To insert new elements into the current document, use the  insertBefore method or the  
		 appendChild method. </p>
		 
		 <p><b>Note (IE):</b> You must perform a second step when you use createElement to create the  
		 input element. The createElement method generates an input text box, because that is the default input 
		 type property. To insert any other kind of input element, first invoke createElement for input, and then 
		 set the type property to the appropriate value in the next line of code. </p>
		 
		 <p><b>Note (IE):</b> Attributes can be included with the tagName as long as the entire string is valid 
		 HTML. To include the  NAME attribute at run time on objects created with the createElement method, use the tagName.</p>
		 
		 <p><b>Note (IE):</b> Use the tagName to include attributes when form elements are created that will be reset 
		 using the  reset method or a  BUTTON with a  TYPE attribute value of reset.</p>
		 
		 </apiDesc><example>
		 This creates a new &lt;div&gt; and inserts it before the element with id "org_div1":
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;||Working with elements||&lt;/title&gt;
		 &lt;/head&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 var my_div = null;
		 var newDiv = null;
		 
		 function addElement() {
		 // create a new div element
		 // and give it some content
		 newDiv = document.createElement("div");
		 newDiv.innerHTML = "&lt;h1&gt;Hi there and greetings!&lt;/h1&gt;";
		 
		 // add the newly created element and it's content into the DOM
		 my_div = document.getElementById("org_div1");
		 document.body.insertBefore(newDiv, my_div);
		 }
		 
		 
		 &lt;/script&gt;
		 
		 &lt;body onload="addElement()"&gt;
		 	&lt;div id='org_div1'&gt; The text above has been created dynamically.&lt;/div&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536389%28VS.85%29.aspx"><linktext>MSDN - createElement Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.createElement"><linktext>MDC - Document.createElement()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-2141741547"><linktext>W3C - Document.createElement()</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=280692"><linktext>bug 280692</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createElementNS"><apiName>createElementNS</apiName><shortdesc>
		 Creates an element of the given qualified name and namespace URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified qualifiedName is not an XML name according to the XML 
		 version in use specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the qualifiedName 
		 is a malformed qualified name, if the qualifiedName has a prefix and the 
		 namespaceURI is null, or if the qualifiedName has a prefix that is "xml" 
		 and the namespaceURI is different from 
		 "http://www.w3.org/XML/1998/namespace" [XML Namespaces], or if the 
		 qualifiedName or its prefix is "xmlns" and the namespaceURI is different 
		 from "http://www.w3.org/2000/xmlns/", or if the namespaceURI is 
		 "http://www.w3.org/2000/xmlns/" and neither the qualifiedName nor its 
		 prefix is "xmlns".
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: Always thrown if the 
		 current document does not support the "XML" feature, since namespaces 
		 were defined by XML.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A new Element object with the following attributes:
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Attribute</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry><codeph>Node.nodeName</codeph></entry>
		 		<entry>qualifiedName</entry>
		 	</row><row>
		 		<entry><codeph>Node.namespaceURI</codeph></entry>
		 		<entry><codeph>namespaceURI</codeph></entry>
		 	</row><row>
		 		<entry><codeph>Node.prefix</codeph></entry>
		 		<entry>prefix, extracted from <codeph>qualifiedName</codeph>, or <codeph>null</codeph> if there is no	prefix</entry>
		 	</row><row>
		 		<entry><codeph>Node.localName</codeph></entry>
		 		<entry>local name, extracted from <codeph>qualifiedName</codeph></entry>
		 	</row><row>
		 		<entry><codeph>Element.tagName</codeph></entry>
		 		<entry>qualifiedName</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI of the element to create.
		 </apiDesc></apiParam><apiParam><apiItemName>qualifiedName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The qualified name of the element type to instantiate.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates an element of the given qualified name and namespace URI.
		 Per XML Namespaces, applications must use the value null as the 
		 namespaceURI parameter for methods if they wish to have no namespace.
		 
		 </apiDesc><example>
		 This creates a new &lt;div&gt; element in the XHTML namespace and appends it to the vbox element. Although 
		 this is not an extremely useful XUL document, it does demonstrate the use of elements from two different 
		 namespaces within a single document:
		 <codeblock>
		 &lt;?xml version="1.0"?&gt;
		 &lt;page xmlns="http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul"
		 		xmlns:html="http://www.w3.org/1999/xhtml"
		 		title="||Working with elements||"
		 		onload="init()"&gt;
		 
		 &lt;script type="text/javascript"&gt;&lt;![CDATA[
		 var container;
		 var newdiv;
		 var txtnode;
		 
		 function init(){
		 	container = document.getElementById("ContainerBox");
		 	newdiv = document.createElementNS("http://www.w3.org/1999/xhtml","html:div");
		 	txtnode = document.createTextNode("This is text that was constructed dynamically with createElementNS and createTextNode then inserted into the document using appendChild.");
		 	newdiv.appendChild(txtnode);
		 	container.appendChild(newdiv);
		 }
		 
		 ]]&gt;&lt;/script&gt;
		 
		 	&lt;vbox id='ContainerBox' flex='1'&gt;
		 		&lt;html:div&gt;
		 			The script on this page will add dynamic content below:
		 		&lt;/html:div&gt;
		 	&lt;/vbox&gt;
		 &lt;/page&gt;</codeblock>
		 
		 <p>The example given above uses inline script which is not recommended in XHTML documents. This particular 
		 example is actually an XUL document with embedded XHTML, however, the recommendation still applies. Inline 
		 script does not cause any problems for this short example, however, for any serious work you should learn 
		 about Properly Using CSS and JavaScript in XHTML Documents. </p>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createElementNS"><linktext>MDC - Document.createElementNS()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-DocCrElNS"><linktext>W3C - Document.createElementNS()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createEntityReference"><apiName>createEntityReference</apiName><shortdesc>
		 Creates an EntityReference object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified name is not an XML name according to the XML version in 
		 use specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if this document 
		 is an HTML document.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The new EntityReference object.
		 
		 </apiDesc><apiOperationClassifier>dom.core:EntityReference</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the entity to reference.
		 Unlike Document.createElementNS or Document.createAttributeNS, no 
		 namespace well-formed checking is done on the entity name. Applications 
		 should invoke Document.normalizeDocument() with the parameter "namespaces" 
		 set to true in order to ensure that the entity name is namespace well-formed. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates an EntityReference object. In addition, if the referenced 
		 entity is known, the child list of the EntityReference node is made 
		 the same as that of the corresponding Entity node.
		 
		 <p><b>Note:</b> If any descendant of the Entity node has an unbound namespace 
		 prefix, the corresponding descendant of the created EntityReference 
		 node is also unbound; (its namespaceURI is null). The DOM Level 2 and 
		 3 do not support any mechanism to resolve namespace prefixes in this case.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createEntityReference"><linktext>MDC - Document.createEntityReference()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-392B75AE"><linktext>W3C - Document.createEntityReference()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createEvent"><apiName>createEvent</apiName><shortdesc>
		 
		 Creates an event object of the type specified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created event object.
		 
		 </apiDesc><apiOperationClassifier>dom.events:Event</apiOperationClassifier></apiReturn><apiParam><apiItemName>eventType</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The eventType parameter specifies the name of the 
		 DOM Events interface to be supported by the created event object, 
		 e.g. "Event", "MouseEvent", "MutationEvent" and so on. If the Event 
		 is to be dispatched via the EventTarget.dispatchEvent() method the 
		 appropriate event initialization method must be called after creation 
		 in order to initialize the Event's values.
		 
		 As an example, a user wishing to synthesize some kind of UIEvent would 
		 invoke DocumentEvent.createEvent("UIEvent"). The UIEvent.initUIEventNS() 
		 ethod could then be called on the newly created UIEvent object to 
		 set the specific type of user interface event to be dispatched, DOMActivate 
		 for example, and set its context information, e.g. UIEvent.detail in 
		 this example.
		 
		 For backward compatibility reason, "UIEvents", "MouseEvents", "MutationEvents", 
		 and "HTMLEvents" feature names are valid values for the parameter eventType 
		 and represent respectively the interfaces "UIEvent", "MouseEvent", 
		 "MutationEvent", and "Event", and the characters 'a'..'z' are considered 
		 equivalent to the characters 'A'..'Z'.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Creates an event object of the type specified. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent-createEvent"><linktext>W3C - DOM 3 Events: DocumentEvent.createEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createEventObject"><apiName>createEventObject</apiName><shortdesc>
		 Generates an  event object to pass event context information when you use the  fireEvent method.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns an event object.
		 
		 </apiDesc><apiOperationClassifier>dom.events:Event</apiOperationClassifier></apiReturn><apiParam><apiItemName>existingEvent</apiItemName><apiOperationClassifier>dom.events:Event</apiOperationClassifier><apiData>null</apiData><apiDesc>A object that specifies an existing event object on which to base the new object.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Generates an  event object to pass event context information when you use the  fireEvent method.
		 
		 </apiDesc><example>
		 The following sample shows how to use the createEventObject method with the fireEvent method.
		 <codeblock>
		 &lt;html&gt;
		 &lt;body&gt;
		 &lt;script&gt;
		 	function OuterClick() {
		 		if(event.expando == "from_inner") {
		 			alert("Event actually fired by clicking on inner DIV!")
		 		} else {
		 			alert("Event fired by clicking on outer DIV!")
		 		}
		 	}
		 	function InnerClick() {
		 		var eventObj = document.createEventObject();
		 		// Set an expando property on the event object. This will be used by the 
		 		// event handler to determine what element was clicked on.
		 		eventObj.expando = "from_inner";
		 		parent.document.all.Outer.fireEvent("onclick",eventObj);
		 		event.cancelBubble = true;
		 	}
		 &lt;/script&gt;
		 &lt;div id="Outer" onclick="OuterClick()" style="height:200;width:200;padding:50;background-color:mistyrose"&gt;
		 	&lt;div id="Inner" onclick="InnerClick()" style="height:100;width:100;padding:25;background-color:lavender"&gt;&lt;/div&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536390%28VS.85%29.aspx"><linktext>MSDN - createEventObject Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createLSInput"><apiName>createLSInput</apiName><shortdesc>
		 
		 Create a new empty input source object where LSInput.characterStream, LSInput.byteStream, LSInput.stringData  
		 LSInput.systemId, LSInput.publicId, LSInput.baseURI, and LSInput.encoding are null, and LSInput.certifiedText is false.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created input object. 
		 
		 </apiDesc><apiOperationClassifier>dom.loadsave:LSInput</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 
		 Create a new empty input source object where LSInput.characterStream, LSInput.byteStream, LSInput.stringData  
		 LSInput.systemId, LSInput.publicId, LSInput.baseURI, and LSInput.encoding are null, and LSInput.certifiedText is false. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSInput"><linktext>W3C - DOMImplementationLS.createLSInput()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createLSOutput"><apiName>createLSOutput</apiName><shortdesc>
		 
		 Create a new empty output destination object where LSOutput.characterStream, LSOutput.byteStream, LSOutput.systemId, 
		 LSOutput.encoding are null.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created output object. 
		 
		 </apiDesc><apiOperationClassifier>dom.loadsave:LSOutput</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 
		 Create a new empty output destination object where LSOutput.characterStream, LSOutput.byteStream, LSOutput.systemId, 
		 LSOutput.encoding are null. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSOutput"><linktext>W3C - DOMImplementationLS.createLSOutput()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createLSParser"><apiName>createLSParser</apiName><shortdesc>
		 
		 Create a new LSParser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created LSParser object. This LSParser is either synchronous or asynchronous depending on the value of the mode argument. 
		 
		 <p><b>Note:</b> By default, the newly created LSParser does not contain a DOMErrorHandler, 
		 i.e. the value of the "error-handler" configuration parameter is null. However, implementations may provide 
		 a default error handler at creation time. In that case, the initial value of the "error-handler" configuration 
		 parameter on the new LSParser object contains a reference to the default error handler. </p>
		 
		 </apiDesc><apiOperationClassifier>dom.loadsave:LSParser</apiOperationClassifier></apiReturn><apiParam><apiItemName>mode</apiItemName><apiType value="Number"/><apiDesc>The mode argument is either MODE_SYNCHRONOUS or MODE_ASYNCHRONOUS, if mode is 
		 MODE_SYNCHRONOUS then the LSParser that is created will operate in synchronous mode, if it's 
		 MODE_ASYNCHRONOUS then the LSParser that is created will operate in asynchronous mode. 
		 </apiDesc></apiParam><apiParam><apiItemName>schemaType</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>An absolute URI representing the type of the schema language used during 
		 the load of a Document using the newly created LSParser. Note that no lexical checking is done 
		 on the absolute URI. In order to create a LSParser for any kind of schema types (i.e. the LSParser 
		 will be free to use any schema found), use the value null. 
		 
		 <p><b>Note:</b> For W3C XML Schema [XML Schema Part 1], applications must use the value 
		 "http://www.w3.org/2001/XMLSchema". For XML DTD [XML 1.0], applications must use the value 
		 "http://www.w3.org/TR/REC-xml". Other Schema languages are outside the scope of the W3C and therefore 
		 should recommend an absolute URI in order to use this method. </p>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Create a new LSParser. The newly constructed parser may then be configured by means of its 
		 DOMConfiguration object, and used to parse documents by means of its parse method. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSParser"><linktext>W3C - DOMImplementationLS.createLSParser()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createLSSerializer"><apiName>createLSSerializer</apiName><shortdesc>
		 
		 Create a new LSSerializer object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created LSSerializer object.
		 
		 <p><b>Note:</b> By default, the newly created LSSerializer  has no DOMErrorHandler, i.e. the value of the 
		 "error-handler" configuration parameter is null. However, implementations may provide a default error handler at creation time. 
		 In that case, the initial value of the "error-handler"  configuration parameter on the new LSSerializer object contains a 
		 reference to the default error handler. </p>
		 
		 </apiDesc><apiOperationClassifier>dom.loadsave:LSSerializer</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 
		 Create a new LSSerializer object. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSSerializer"><linktext>W3C - DOMImplementationLS.createLSSerializer()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createNodeIterator"><apiName>createNodeIterator</apiName><shortdesc>
		 
		 Create a new NodeIterator over the subtree rooted at the specified node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created NodeIterator.
		 
		 </apiDesc><apiOperationClassifier>dom.tr.traversal:NodeIterator</apiOperationClassifier></apiReturn><apiParam><apiItemName>root</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node which will be iterated together with its children. The iterator is initially positioned 
		 just before this node. The <codeph>whatToShow</codeph> flags and the filter, if any, are not considered when setting this position. The <codeph>root</codeph> must not be <codeph>null</codeph>.
		 </apiDesc></apiParam><apiParam><apiItemName>whatToShow</apiItemName><apiType value="Number"/><apiDesc>This flag specifies which node types may appear in the logical view of the tree presented 
		 by the iterator. These flags can be combined using OR.
		 </apiDesc></apiParam><apiParam><apiItemName>filter</apiItemName><apiOperationClassifier>dom.tr.traversal:NodeFilter</apiOperationClassifier><apiDesc>The <codeph>NodeFilter</codeph> to be used with this <codeph>TreeWalker</codeph>, or <codeph>null</codeph> to indicate no filter.
		 </apiDesc></apiParam><apiParam><apiItemName>entityReferenceExpansion</apiItemName><apiType value="Boolean"/><apiDesc>The value of this flag determines whether entity reference nodes are expanded.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Create a new NodeIterator over the subtree rooted at the specified node. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 var nodeList = new Array();
		 var currentNode;
		 
		 while (currentNode = nodeIterator.nextNode()) {
		 	nodeList.push(currentNode);
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document.createNodeIterator"><linktext>MDC - Document: createNodeIterator Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document"><linktext>W3C - DOM Level 2 Traversal: createNodeIterator Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createProcessingInstruction"><apiName>createProcessingInstruction</apiName><shortdesc>
		 Creates a ProcessingInstruction node given the specified name and 
		 data strings.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the specified
		 target is not an XML name according to the XML version in use specified in 
		 the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if this document is 
		 an HTML document.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The new ProcessingInstruction object.
		 
		 </apiDesc><apiOperationClassifier>dom.core:ProcessingInstruction</apiOperationClassifier></apiReturn><apiParam><apiItemName>target</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The target part of the processing instruction.
		 Unlike Document.createElementNS or Document.createAttributeNS, no namespace 
		 well-formed checking is done on the target name. Applications should invoke 
		 Document.normalizeDocument() with the parameter "namespaces" set to true in 
		 order to ensure that the target name is namespace well-formed. 
		 </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The data for the node.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a ProcessingInstruction node given the specified name and 
		 data strings.
		 
		 </apiDesc><example>
		 <codeblock>
		 var docu = new DOMParser().parseFromString('&lt;xml&gt;&lt;/xml&gt;',  "application/xml");
		 
		 var pi = docu.createProcessingInstruction('xml-stylesheet', 'href="mycss.css" type="text/css"');
		 
		 docu.getElementsByTagName('xml')[0].appendChild(pi);
		 
		 alert(new XMLSerializer().serializeToString(docu));
		 // Displays: &lt;xml&gt;&lt;?xml-stylsheet href="mycss.css" type="text/css"?&gt;&lt;/xml&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createProcessingInstruction"><linktext>MDC - Document.createProcessingInstruction()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-135944439"><linktext>W3C - Document.createProcessingInstruction()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createRange"><apiName>createRange</apiName><shortdesc>
		 
		 This interface can be obtained from the object implementing the Document interface using binding-specific 
		 casting methods.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The initial state of the Range returned from this method is such that both of its boundary-points 
		 are positioned at the beginning of the corresponding Document, before any content. The Range returned can 
		 only be used to select content associated with this Document, or with DocumentFragments and Attrs for which 
		 this Document is the ownerDocument.
		 
		 </apiDesc><apiOperationClassifier>dom.tr.range:Range</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 
		 This interface can be obtained from the object implementing the Document interface using binding-specific 
		 casting methods. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var range = document.createRange();
		 range.setStart(startNode, startOffset);
		 range.setEnd(endNode, endOffset);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536394%28VS.85%29.aspx"><linktext>MSDN: createRange Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.createRange"><linktext>MDC - Document: createRange Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-DocumentRange-idl"><linktext>W3C - DOM Level 2 Range: DocumentRange</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createStyleSheet"><apiName>createStyleSheet</apiName><shortdesc>
		 Creates a style sheet for the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a  styleSheet object. 
		 
		 </apiDesc><apiOperationClassifier>dom.style.stylesheets:StyleSheet</apiOperationClassifier></apiReturn><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiData>null</apiData><apiDesc>Specifies how to add the style sheet to the document. If a file name is specified for the URL, the style information is added as a  link object. If the URL contains style information, it is added to the  style object.
		 </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiData>unknown</apiData><apiDesc>The index that indicates where the new style sheet is inserted in the  styleSheets collection. The default is to insert the new style sheet at the end of the collection.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a style sheet for the document. 
		 
		 <p><b>Note (IE):</b> You can create up to 31 styleSheet objects with the createStyleSheet method. After 
		 that, the method returns an "Invalid Argument" exception. To create additional objects, use  createElement and 
		 append them to the  HEAD of the document as follows: 
		 
		 <codeblock>
		 var styleSheet = document.createElement('STYLE');
		 document.documentElement.firstChild.appendChild(styleSheet);</codeblock>
		 </p>
		 
		 </apiDesc><example>
		 This example uses the createStyleSheet method to create a link to a style sheet.
		 <codeblock>document.createStyleSheet('styles.css');</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531194%28VS.85%29.aspx"><linktext>MSDN - createStyleSheet Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createTextNode"><apiName>createTextNode</apiName><shortdesc>
		 Creates a Text node given the specified string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The new Text object.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Text</apiOperationClassifier></apiReturn><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The data for the node.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a Text node given the specified string.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;createTextNode example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function addTextNode() {
		 	var newtext = document.createTextNode(" Some text added dynamically. ");
		 	var para = document.getElementById("p1");
		 	para.appendChild(newtext);
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 &lt;div style="border: 1px solid red"&gt;
		 &lt;p id="p1"&gt;First line of paragraph.&lt;br /&gt;&lt;/p&gt;
		 &lt;/div&gt;&lt;br /&gt;
		 
		 &lt;button onclick="addTextNode();"&gt;add another textNode.&lt;/button&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536400%28VS.85%29.aspx"><linktext>MSDN - createTextNode Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.createTextNode"><linktext>MDC - Document.createTextNode()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1975348127"><linktext>W3C - Document.createTextNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:createTreeWalker"><apiName>createTreeWalker</apiName><shortdesc>
		 
		 Create a new TreeWalker over the subtree rooted at the specified node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created <codeph>TreeWalker</codeph>.
		 
		 </apiDesc><apiOperationClassifier>dom.tr.traversal:TreeWalker</apiOperationClassifier></apiReturn><apiParam><apiItemName>root</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node which will serve as the <codeph>root</codeph> for the TreeWalker. The whatToShow flags and the NodeFilter 
		 are not considered when setting this value; any node type will be accepted as the <codeph>root</codeph>. The <codeph>currentNode</codeph> of the 
		 TreeWalker is initialized to this node, whether or not it is visible. The <codeph>root</codeph> functions as a stopping point for 
		 traversal methods that look upward in the document structure, such as <codeph>parentNode</codeph> and nextNode. The <codeph>root</codeph> must not 
		 be <codeph>null</codeph>.
		 </apiDesc></apiParam><apiParam><apiItemName>whatToShow</apiItemName><apiType value="Number"/><apiDesc>This flag specifies which node types may appear in the logical view of the tree presented by 
		 the tree-walker. These flags can be combined using OR.
		 </apiDesc></apiParam><apiParam><apiItemName>filter</apiItemName><apiOperationClassifier>dom.tr.traversal:NodeFilter</apiOperationClassifier><apiDesc>The <codeph>NodeFilter</codeph> to be used with this <codeph>TreeWalker</codeph>, or <codeph>null</codeph> to indicate no filter.
		 </apiDesc></apiParam><apiParam><apiItemName>entityReferenceExpansion</apiItemName><apiType value="Boolean"/><apiDesc>If this flag is false, the contents of <codeph>EntityReference</codeph> nodes are not presented in the logical view.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Create a new TreeWalker over the subtree rooted at the specified node. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var treeWalker = document.createTreeWalker(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 var nodeList = new Array();
		 while(treeWalker.nextNode()) nodeList.push(treeWalker.currentNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document.createNodeIterator"><linktext>MDC - Document: createNodeIterator Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document"><linktext>W3C - DOM Level 2 Traversal: createNodeIterator Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:detachEvent"><apiName>detachEvent</apiName><shortdesc>
		 Unbinds the specified function from the event, so that the function stops receiving notifications when the event fires.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies any of the standard  DHTML Events.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Specifies the function previously set using the attachEvent method.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Unbinds the specified function from the event, so that the function stops receiving notifications when the event fires.
		 
		 <p><b>Note (IE):</b> Behaviors that attach to events using the attachEvent method must explicitly call 
		 the detachEvent method to stop receiving notifications from the page when the  ondetach event fires. 
		 Behaviors that attach to events using the  PUBLIC:ATTACH element automatically stop receiving notifications 
		 when the behavior detaches from the element, and thus do not need to call the detachEvent method.</p>
		 
		 </apiDesc><example>
		 This example calls the detachEvent method from an HTML Component (HTC) when the highlighting effect is 
		 removed from the page, causing the ondetach event to fire.
		 <codeblock>
		 &lt;PUBLIC:ATTACH EVENT="ondetach" ONEVENT="cleanup()" /&gt;
		 
		 &lt;script language="JScript"&gt;
		 attachEvent ('onmouseover', Hilite);
		 attachEvent ('onmouseout', Restore);
		 
		 function cleanup() {
		 	detachEvent ('onmouseover', Hilite);
		 	detachEvent ('onmouseout', Restore);
		 }
		 
		 function Hilite() {
		 	if (event.srcElement == element) { 
		 		normalColor = style.color;  
		 		runtimeStyle.color  = "red";
		 		runtimeStyle.cursor = "hand";
		 	}
		 }
		 
		 function Restore() {
		 	if (event.srcElement == element) {
		 		runtimeStyle.color  = normalColor;
		 		runtimeStyle.cursor = "";
		 	}
		 }
		 &lt;/script&gt;</codeblock>
		 
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536411%28VS.85%29.aspx"><linktext>MSDN - detachEvent Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:elementFromPoint"><apiName>elementFromPoint</apiName><shortdesc>
		 
		 Returns the element from the document whose elementFromPoint method is being called which is the 
		 topmost element which lies under the given point.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The element at x,y in the viewport
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>The X coordinate to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>The Y coordinate to check, in CSS pixels relative to the upper-left corner of the document's containing window or frame.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Returns the element from the document whose elementFromPoint method is being called which is the 
		 topmost element which lies under the given point. 
		 
		 <p>The point is specified via coordinates, in CSS pixels, relative to the upper-left-most point 
		 in the window or frame containing the document.</p>
		 
		 <p><b>Note:</b> If the element at the specified point belongs to another document (for example, 
		 an iframe's subdocument), the element in the DOM of the document the method is called on (in the iframe 
		 case, the iframe itself) is returned. If the element at the given point is anonymous or XBL generated 
		 content, such as a textbox's scroll bars, then the first non-anonymous ancestor element (for example, 
		 the textbox) is returned.</p>
		 
		 <p><b>Note:</b> If the specified point is outside the visible bounds of the document or either 
		 coordinate is negative, the result is null.</p>
		 
		 <p><b>Note:</b> The browsers do not entirely agree which mouse coordinates this method needs. 
		 IE and Firefox 3 need clientX/Y (relative to the viewport), while Opera and Safari need pageX/Y (relative 
		 to the document).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;elementFromPoint example&lt;/title&gt;
		 		&lt;script type="text/javascript"&gt;
		 			function changeColor(newColor) {
		 				elem = document.elementFromPoint(2, 2);
		 				elem.style.color = newColor;
		 			}
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body&gt;
		 		&lt;p id="para1"&gt;Some text here&lt;/p&gt;
		 		&lt;button onclick="changeColor('blue');"&gt;blue&lt;/button&gt;
		 		&lt;button onclick="changeColor('red');"&gt;red&lt;/button&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;
		 </codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536417(VS.85).aspx"><linktext>MSDN: elementFromPoint Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.elementFromPoint"><linktext>MDC - Document: elementFromPoint Method</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-documentview-interface"><linktext>W3C - CSSOM View: elementFromPoint Method</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#documentview"><linktext>Quirksmode: DocumentView and ElementView methods</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:enableStylesheetsForSet"><apiName>enableStylesheetsForSet</apiName><shortdesc>
		 
		 Invoking this method must change the disabled attribute on each StyleSheet object with a title in the 
		 styleSheets attribute, so that all those whose title matches the name argument are enabled, and all others 
		 are disabled.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Invoking this method must change the disabled attribute on each StyleSheet object with a title in the 
		 styleSheets attribute, so that all those whose title matches the name argument are enabled, and all others 
		 are disabled. Title matches must be case-sensitive.
		 
		 <p>Invoking this method with the empty string value must disable all alternative and preferred style sheets
		 (but does not change the state of persistent style sheets).</p>
		 
		 <p>Invoking this method with the null value must have no effect.</p>
		 
		 <p>Style sheets that do not have a title are never affected by this method. This method does not change the 
		 values of the lastStyleSheetSet or preferredStyleSheetSet  attributes.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.enableStyleSheetsForSet"><linktext>MDC - Document.enableStylesheetsForSet()</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-enablestylesheetsforset"><linktext>W3C - DocumentStyle.enableStylesheetsForSet()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:getElementsByTagName"><apiName>getElementsByTagName</apiName><shortdesc>
		 Returns a NodeList of all the Elements in document order with a 
		 given tag name and are contained in the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A new NodeList object containing all the matched Elements.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>tagname</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the tag to match on. The special 
		 value "~~" matches all tags. For XML, the tagname  parameter is 
		 case-sensitive, otherwise it depends on the case-sensitivity of 
		 the markup language in use. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a NodeList of all the Elements in document order with a 
		 given tag name and are contained in the document.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536439%28VS.85%29.aspx"><linktext>MSDN - getElementsByTagName Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.getElementsByTagName"><linktext>MDC - Document.getElementsByTagName()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-A6C9094"><linktext>W3C - Document.getElementsByTagName()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:getElementsByTagNameNS"><apiName>getElementsByTagNameNS</apiName><shortdesc>
		 Returns a NodeList of all the Elements with a given local name and 
		 namespace URI in document order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A new NodeList object containing all the matched Elements.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI of the elements to match on. 
		 The special value "~~" matches all namespaces.
		 </apiDesc></apiParam><apiParam><apiItemName>localName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The local name of the elements to match on. The 
		 special value "~~" matches all local names.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a NodeList of all the Elements with a given local name and 
		 namespace URI in document order.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.getElementsByTagNameNS"><linktext>MDC - Document.getElementsByTagNameNS()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getElBTNNS"><linktext>W3C - Document.getElementsByTagNameNS()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:getElemenyById"><apiName>getElemenyById</apiName><shortdesc>
		 Returns the Element that has an ID attribute with the given value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 2
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The matching element or null if there is none.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>elementId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The unique id value for an element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the Element that has an ID attribute with the given value. 
		 If no such element exists, this returns null. If more than one 
		 element has an ID attribute with that value, what is returned is undefined.
		 
		 <p><b>Note:</b> Attributes with the name "ID" or "id" are not of type ID 
		 unless so defined.</p>
		 
		 <p><b>Note:</b> Simply creating an element and assigning an ID will not make 
		 the element accessible by getElementById. Instead one needs to insert the element first 
		 into the document tree with insertBefore or a similar method, probably into a hidden div. 
		 
		 <codeblock>var element = document.createElement("div");
		 element.id = 'testqq';
		 var el = document.getElementById('testqq'); // el will be null!</codeblock>
		 
		 New users should note that the capitalization of 'Id' must be correct for the code to function 
		 - 'getElementByID' does not work, however natural it may seem. 
		 </p>
		 
		 <p><b>Note (IE):</b> In IE8 mode, getElementById performs a case-sensitive match on the 
		 ID attribute only. In IE7 mode and previous modes, this method performs a case-insensitive match 
		 on both the ID and NAME attributes, which might produce unexpected results.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;getElementById example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 function changeColor(newColor) {
		 	elem = document.getElementById("para1");
		 	elem.style.color = newColor;
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 &lt;p id="para1"&gt;Some text here&lt;/p&gt;
		 &lt;button onclick="changeColor('blue');"&gt;blue&lt;/button&gt;
		 &lt;button onclick="changeColor('red');"&gt;red&lt;/button&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536437%28VS.85%29.aspx"><linktext>MSDN - getElementById Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.getElementById"><linktext>MDC - Document.getElemenyById()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getElBId"><linktext>W3C - Document.getElemenyById()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:getOverrideStyle"><apiName>getOverrideStyle</apiName><shortdesc>
		 
		 This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The override style declaration.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:CSSStyleDeclaration</apiOperationClassifier></apiReturn><apiParam><apiItemName>elt</apiItemName><apiOperationClassifier>dom.core:Element</apiOperationClassifier><apiDesc>The element whose style is to be modified. This parameter cannot be null.
		 </apiDesc></apiParam><apiParam><apiItemName>pseudoElt</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The pseudo-element or null if none.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DocumentCSS-getOverrideStyle"><linktext>W3C - DOM Level 2 Style: DocumentCSS.getOverrideStyle()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:importNode"><apiName>importNode</apiName><shortdesc>
		 Imports a node from another document to this document, without altering or removing the source 
		 node from the original document; this method creates a new copy of the source node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the type of node being imported is not supported.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if one of the imported names is not an XML name 
		 according to the XML version in use specified in the Document.xmlVersion attribute. This may happen when 
		 importing an XML 1.1 element into an XML 1.0 document, for instance.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The imported node that belongs to this Document.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>importedNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to import.
		 </apiDesc></apiParam><apiParam><apiItemName>deep</apiItemName><apiType value="Boolean"/><apiDesc>If true, recursively import the subtree under the specified node; if false, import only 
		 the node itself, as explained above. This has no effect on nodes that cannot have any children, and on 
		 Attr, and EntityReference nodes.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Imports a node from another document to this document, without altering or removing the source 
		 node from the original document; this method creates a new copy of the source node. The returned 
		 node has no parent; (parentNode is null).
		 
		 <p>For all nodes, importing a node creates a node object owned by the importing document, with attribute 
		 values identical to the source node's nodeName and nodeType, plus the attributes related to 
		 namespaces (prefix, localName, and namespaceURI). As in the cloneNode operation, the source node is 
		 not altered. User data associated to the imported node is not carried over. However, if any 
		 UserDataHandlers has been specified along with the associated data these handlers will be called with 
		 the appropriate parameters before this method returns.</p>
		 
		 <p>Additional information is copied as appropriate to the nodeType, attempting to mirror the behavior 
		 expected if a fragment of XML or HTML source was copied from one document to another, recognizing that 
		 the two documents may have different DTDs in the XML case. The following list describes the specifics
		 for each type of node.</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Node Type</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>ATTRIBUTE_NODE</entry>
		 		<entry>The ownerElement attribute is set to null and the specified flag is set to true on the generated 
		 Attr. The descendants of the source Attr are recursively imported and the resulting nodes reassembled to 
		 form the corresponding subtree. Note that the deep parameter has no effect on Attr nodes; they always 
		 carry their children with them when imported.</entry>
		 	</row><row>
		 		<entry>DOCUMENT_FRAGMENT_NODE</entry>
		 		<entry>If the deep option was set to true, the descendants of the source DocumentFragment are recursively imported and the resulting nodes reassembled under the imported DocumentFragment to form the corresponding subtree. Otherwise, this simply generates an empty DocumentFragment.</entry>
		 	</row><row>
		 		<entry>DOCUMENT_NODE</entry>
		 		<entry>Document nodes cannot be imported.</entry>
		 	</row><row>
		 		<entry>DOCUMENT_TYPE_NODE</entry>
		 		<entry>DocumentType nodes cannot be imported.</entry>
		 	</row><row>
		 		<entry>ELEMENT_NODE</entry>
		 		<entry>Specified attribute nodes of the source element are imported, and the generated Attr nodes are attached to the generated Element. Default attributes are not copied, though if the document being imported into defines default attributes for this element name, those are assigned. If the importNode  deep parameter was set to true, the descendants of the source element are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</entry>
		 	</row><row>
		 		<entry>ENTITY_NODE</entry>
		 		<entry>Entity nodes can be imported, however in the current release of the DOM the DocumentType is readonly. Ability to add these imported nodes to a DocumentType will be considered for addition to a future release of the DOM. On import, the publicId, systemId, and notationName attributes are copied. If a deep import is requested, the descendants of the the source Entity are recursively imported and the resulting nodes reassembled to form the corresponding subtree.</entry>
		 	</row><row>
		 		<entry>ENTITY_REFERENCE_NODE</entry>
		 		<entry>Only the EntityReference itself is copied, even if a deep import is requested, since the source and destination documents might have defined the entity differently. If the document being imported into provides a definition for this entity name, its value is assigned.</entry>
		 	</row><row>
		 		<entry>NOTATION_NODE</entry>
		 		<entry>Notation nodes can be imported, however in the current release of the DOM the DocumentType is readonly. Ability to add these imported nodes to a DocumentType will be considered for addition to a future release of the DOM. On import, the publicId and systemId attributes are copied. Note that the deep parameter has no effect on this type of nodes since they cannot have any children.</entry>
		 	</row><row>
		 		<entry>PROCESSING_INSTRUCTION_NODE</entry>
		 		<entry>The imported node copies its target and data values from those of the source node. Note that the deep parameter has no effect on this type of nodes since they cannot have any children.</entry>
		 	</row><row>
		 		<entry>TEXT_NODE, CDATA_SECTION_NODE, COMMENT_NODE</entry>
		 		<entry>These three types of nodes inheriting from CharacterData copy their data and length attributes from those of the source node. Note that the deep parameter has no effect on these types of nodes since they cannot have any children.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note:</b> The original node is not removed from the original document. The imported node is a clone of the original.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var iframe = document.getElementsByTagName("iframe")[0];
		 var oldNode = iframe.contentDocument.getElementById("myNode");
		 var newNode = document.importNode(oldNode,true);
		 document.getElementById("container").appendChild(newNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.importNode"><linktext>MDC - Document.importNode()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Core-Document-importNode"><linktext>W3C - Document.importNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:load"><apiName>load</apiName><shortdesc>
		 
		 Replaces the content of the document with the result of parsing the given URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If async is set to true load returns true if the document load was successfully initiated. If an 
		 error occurred when initiating the document load load returns false. If async is set to false load returns 
		 true if the document was successfully loaded and parsed. If an error occurred when either loading or parsing 
		 the URI load returns false.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>uri</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The URI reference for the XML file to be loaded. If this is a relative URI, the base URI used by the implementation is implementation dependent.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Replaces the content of the document with the result of parsing the given URI. Invoking this method 
		 will either block the caller or return to the caller immediately depending on the value of the async 
		 attribute. Once the document is fully loaded the document will fire a "load" event that the caller can 
		 register as a listener for. If an error occurs the document will fire an "error" event so that the caller 
		 knows that the load failed (see ParseErrorEvent). If this method is called on a document that is currently 
		 loading, the current load is interrupted and the new URI load is initiated. 
		 
		 <p><b>Note (Mozilla):</b> As of at least Gecko 1.9, this no longer supports cross-site loading 
		 of documents (Use XMLHttpRequest instead).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var xmlDoc = document.implementation.createDocument("", "test", null);
		 function documentLoaded (e) {
		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string
		 }
		 xmlDoc.addEventListener("load", documentLoaded, false);
		 xmlDoc.load('querydata.xml');</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.load"><linktext>MDC - Document.load()</linktext></link><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-load"><linktext>W3C - DocumentLS.load()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:loadXML"><apiName>loadXML</apiName><shortdesc>
		 
		 Replace the content of the document with the result of parsing the input string, this method is always synchronous.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if parsing the input string succeeded without errors, otherwise false.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>source</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string containing an XML document.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Replace the content of the document with the result of parsing the input string, this method is always synchronous. 
		 This method always parses from a DOMString, which means the data is always UTF16. All other encoding information is ignored. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-loadXML"><linktext>W3C - DocumentLS.loadXML()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:normalizeDocument"><apiName>normalizeDocument</apiName><shortdesc>
		 This method acts as if the document was going through a save and load 
		 cycle, putting the document in a "normal" form.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 This method acts as if the document was going through a save and load 
		 cycle, putting the document in a "normal" form. As a consequence, this 
		 method updates the replacement tree of EntityReference nodes and 
		 normalizes Text nodes, as defined in the method Node.normalize().
		 Otherwise, the actual result depends on the features being set on the 
		 Document.domConfig object and governing what operations actually take 
		 place. Noticeably this method could also make the document namespace 
		 well-formed according to the algorithm described in Namespace Normalization, 
		 check the character normalization, remove the CDATASection nodes, etc. See 
		 DOMConfiguration for details.
		 
		 <codeblock>
		 // Keep in the document the information defined
		 // in the XML Information Set (Java example)
		 DOMConfiguration docConfig = myDocument.getDomConfig();
		 docConfig.setParameter("infoset", Boolean.TRUE);
		 myDocument.normalizeDocument();</codeblock>
		 
		 <p>Mutation events, when supported, are generated to reflect the changes 
		 occurring on the document.
		 If errors occur during the invocation of this method, such as an attempt 
		 to update a read-only node or a Node.nodeName contains an invalid 
		 character according to the XML version in use, errors or warnings 
		 (DOMError.SEVERITY_ERROR or DOMError.SEVERITY_WARNING) will be reported 
		 using the DOMErrorHandler object associated with the "error-handler" parameter. 
		 Note this method might also report fatal errors (DOMError.SEVERITY_FATAL_ERROR) 
		 if an implementation cannot recover from an error.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document"><linktext>MDC - Document.normalizeDocument()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-normalizeDocument"><linktext>W3C - Document.normalizeDocument()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:querySelector"><apiName>querySelector</apiName><shortdesc>
		 
		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The first matching Element node within the node’s subtree. If there is no such node, returns null. 
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>selectors</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>One or more selectors
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Selectors API Example&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;div id="foo"&gt;
		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;
		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;
		 		&lt;/div&gt;
		 		&lt;div id="bar"&gt;
		 			&lt;p&gt;...&lt;/p&gt;
		 		&lt;/div&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 x would contain the first element in the document with an ID of either foo or bar (or both). In the sample document above, it would select the div element with the ID of foo because it is first in document order.
		 <codeblock>var x = document.querySelector("#foo, #bar");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc288169%28VS.85%29.aspx"><linktext>MSDN - querySelector Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Document.querySelector"><linktext>MDC - Document.querySelector()</linktext></link><link href="http://www.w3.org/TR/selectors-api/#nodeselector"><linktext>W3C - NodeSelector.querySelector()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:querySelectorAll"><apiName>querySelectorAll</apiName><shortdesc>
		 
		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A NodeList containing all of the matching Element nodes within the node’s subtree, in document order. If there are no such nodes, returns an empty NodeList.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>selectors</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>One or more selectors
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Selectors API Example&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;div id="foo"&gt;
		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;
		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;
		 		&lt;/div&gt;
		 		&lt;div id="bar"&gt;
		 			&lt;p&gt;...&lt;/p&gt;
		 		&lt;/div&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 The following example would select all p elements in the document that have a class of either "error" or "warning".
		 <codeblock>var alerts = document.querySelectorAll("p.warning, p.error");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc304115%28VS.85%29.aspx"><linktext>MSDN - querySelectorAll Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Document.querySelectorAll"><linktext>MDC - Document.querySelectorAll()</linktext></link><link href="http://www.w3.org/TR/selectors-api/#nodeselector"><linktext>W3C - NodeSelector.querySelectorAll()</linktext></link><link href="http://www.quirksmode.org/dom/w3c_core.html#gettingelements"><linktext>Quirksmode: Getting elements</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:renameNode"><apiName>renameNode</apiName><shortdesc>
		 Rename an existing node of type ELEMENT_NODE or ATTRIBUTE_NODE.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised when the type of 
		 the specified node is neither ELEMENT_NODE nor ATTRIBUTE_NODE, or if the 
		 implementation does not support the renaming of the document element.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the new 
		 qualified name is not an XML name according to the XML version in use 
		 specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised when the specified 
		 node was created from a different document than this document.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the qualifiedName is 
		 a malformed qualified name, if the qualifiedName has a prefix and the 
		 namespaceURI is null, or if the qualifiedName has a prefix that is "xml" 
		 and the namespaceURI is different from "http://www.w3.org/XML/1998/namespace" 
		 XML Namespaces. Also raised, when the node being renamed is an attribute, 
		 if the qualifiedName, or its prefix, is "xmlns" and the namespaceURI is 
		 different from "http://www.w3.org/2000/xmlns/".
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The renamed node. This is either the specified node or the new 
		 node that was created to replace the specified node.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>n</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to rename.
		 </apiDesc></apiParam><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The new namespace URI.
		 </apiDesc></apiParam><apiParam><apiItemName>qualifiedName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The new qualified name.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Rename an existing node of type ELEMENT_NODE or ATTRIBUTE_NODE.
		 When possible this simply changes the name of the given node, 
		 otherwise this creates a new node with the specified name and 
		 replaces the existing node with the new node as described below.
		 If simply changing the name of the given node is not possible, the 
		 following operations are performed: a new node is created, any 
		 registered event listener is registered on the new node, any user 
		 data attached to the old node is removed from that node, the old 
		 node is removed from its parent if it has one, the children are moved 
		 to the new node, if the renamed node is an Element its attributes are 
		 moved to the new node, the new node is inserted at the position the 
		 old node used to have in its parent's child nodes list if it has one, 
		 the user data that was attached to the old node is attached to the 
		 new node.
		 
		 <p>When the node being renamed is an Element only the specified attributes 
		 are moved, default attributes originated from the DTD are updated 
		 according to the new element name. In addition, the implementation 
		 may update default attributes from other schemas. Applications should 
		 use Document.normalizeDocument() to guarantee these attributes are 
		 up-to-date.</p>
		 
		 <p>When the node being renamed is an Attr that is attached to an Element, 
		 the node is first removed from the Element attributes map. Then, once 
		 renamed, either by modifying the existing node or creating a new one as 
		 described above, it is put back. In addition,
		 <ul>
		 <li>a user data event NODE_RENAMED is fired,</li>
		 <li>when the implementation supports the feature "MutationNameEvents", 
		 each mutation operation involved in this method fires the appropriate 
		 event, and in the end the event {http://www.w3.org/2001/xml-events, 
		 DOMElementNameChanged} or {http://www.w3.org/2001/xml-events, 
		 DOMAttributeNameChanged} is fired.</li>
		 </ul></p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.renameNode"><linktext>MDC - Document.renameNode()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-renameNode"><linktext>W3C - Document.renameNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:saveXML"><apiName>saveXML</apiName><shortdesc>
		 
		 Save the document or the given node to a string (i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The serialized document or null.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>snode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies what to serialize, if this parameter is null the whole document is serialized, if it's non-null the given node is serialized.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Save the document or the given node to a string (i.e. serialize the document or node). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-saveXML"><linktext>W3C - DocumentLS.saveXML()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Document:updateSettings"><apiName>updateSettings</apiName><shortdesc>
		 Allows updating the print settings for the page.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Allows updating the print settings for the page.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc848923%28VS.85%29.aspx"><linktext>MSDN - updateSettings Method</linktext></link></related-links></apiOperation><apiValue id="dom.core:Document:async:get"><apiName>async</apiName><shortdesc>
		 
		 Indicates whether the method load should be synchronous or asynchronous.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 
		 Indicates whether the method load should be synchronous or asynchronous. When the async attribute is set 
		 to true the load method returns control to the caller before the document has completed loading.
		 
		 </apiDesc><example>
		 <codeblock>
		 function loadXMLData(e) {
		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string
		 }
		 
		 var xmlDoc = document.implementation.createDocument("", "test", null);
		 xmlDoc.async = false;
		 xmlDoc.onload = loadXMLData;
		 xmlDoc.load('querydata.xml');</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.async"><linktext>MDC - Document.async</linktext></link><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-async"><linktext>W3C - DocumentLS.async</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:defaultView:get"><apiName>defaultView</apiName><shortdesc>
		 
		 The default AbstractView for this Document, or null if none available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:AbstractView</apiValueClassifier></apiValueDef><apiDesc>
		 
		 The default AbstractView for this Document, or null if none available.
		 
		 <p><b>Note:</b> document.defaultView is generally a reference to the window object 
		 for the document, however that is not defined in the specification and can't be relied upon 
		 for all host environments, particularly as not all browsers implement it.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.defaultView"><linktext>MDC - Document.defaultView</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-DocumentView-defaultView"><linktext>W3C - DocumentView.defaultView</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:doctype:get"><apiName>doctype</apiName><shortdesc>
		 The Document Type Declaration (see DocumentType) associated with this 
		 document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DocumentType</apiValueClassifier></apiValueDef><apiDesc>
		 The Document Type Declaration (see DocumentType) associated with this 
		 document. For XML documents without a document type declaration this 
		 returns null. For HTML documents, a DocumentType object may be returned, 
		 independently of the presence or absence of document type declaration in 
		 the HTML document.
		 
		 <p>This provides direct access to the DocumentType node, child node of this 
		 Document. This node can be set at document creation time and later changed 
		 through the use of child nodes manipulation methods, such as 
		 Node.insertBefore, or Node.replaceChild. Note, however, that while some 
		 implementations may instantiate different types of Document objects 
		 supporting additional features than the "Core", such as "HTML", based on the DocumentType specified at creation time, changing it 
		 afterwards is very unlikely to result in a change of the features supported.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533737%28VS.85%29.aspx"><linktext>MSDN - doctype Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.doctype"><linktext>MDC - Document.doctype</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-B63ED1A31"><linktext>W3C - Document.doctype</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:documentElement:get"><apiName>documentElement</apiName><shortdesc>
		 This is a convenience  attribute that allows direct access to the child node 
		 that is the document element of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 This is a convenience  attribute that allows direct access to the child node 
		 that is the document element of the document.
		 
		 <p><b>Note:</b> HTML documents typically contain a single child node, &lt;html&gt;, perhaps 
		 with a DOCTYPE declaration before it. XML documents often contain multiple child nodes: the root 
		 element, the DOCTYPE declaration, and  processing instructions. </p>
		 
		 <p>That's why you should use document.documentElement rather than document.firstChild  to get the root element. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var rootElement = document.documentElement;
		 var firstTier = rootElement.childNodes;
		 // firstTier is the NodeList of the direct children of the root element
		 for (var i = 0; i &lt; firstTier.length; i++) {
		 	// do something with each direct kid of the root element
		 	// as firstTier[i]
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533739%28VS.85%29.aspx"><linktext>MSDN - documentElement Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.documentElement"><linktext>MDC - Document.documentElement</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-87CD092"><linktext>W3C - Document.documentElement</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:documentURI:get"><apiName>documentURI</apiName><shortdesc>
		 The location of the document or null if undefined or if the Document was 
		 created using DOMImplementation.createDocument.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The location of the document or null if undefined or if the Document was 
		 created using DOMImplementation.createDocument. No lexical checking is 
		 performed when setting this attribute; this could result in a null value 
		 returned when using Node.baseURI.
		 
		 <p>Beware that when the Document supports the feature "HTML", the href attribute 
		 of the HTML BASE element takes precedence over this attribute when computing Node.baseURI.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.documentURI"><linktext>MDC - Document.documentURI</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-documentURI"><linktext>W3C - Document.documentURI</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:domConfig:get"><apiName>domConfig</apiName><shortdesc>
		 The configuration used when Document.normalizeDocument() is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMConfiguration</apiValueClassifier></apiValueDef><apiDesc>
		 The configuration used when Document.normalizeDocument() is invoked. 
		 
		 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla at present.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document.domConfig"><linktext>MDC - Document.domConfig</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-domConfig"><linktext>W3C - Document.domConfig</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:implementation:get"><apiName>implementation</apiName><shortdesc>
		 The DOMImplementation object that handles this document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMImplementation</apiValueClassifier></apiValueDef><apiDesc>
		 The DOMImplementation object that handles this document. A DOM application 
		 may use objects from multiple implementations.
		 
		 </apiDesc><example>
		 <codeblock>
		 var modName = "HTML";
		 var modVer = "2.0";
		 var conformTest = document.implementation.hasFeature(modName, modVer);
		 
		 alert("DOM " + modName + " " + modVer + " supported?: " + conformTest);
		 
		 // alerts with: "DOM HTML 2.0 supported?: true" if DOM Level 2 HTML module is supported.</codeblock>
		 
		 <p>A list of module names (e.g., Core, HTML, XML, etc) is available in the DOM Level 2 Conformance Section</p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535865%28VS.85%29.aspx"><linktext>MSDN - implementation Object</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533884%28VS.85%29.aspx"><linktext>MSDN - implementation Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.implementation"><linktext>MDC - Document.implementation</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1B793EBA"><linktext>W3C - Document.implementation</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Core/introduction.html#ID-Conformance-h2"><linktext>W3C - Conformance Section</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:inputEncoding:get"><apiName>inputEncoding</apiName><shortdesc>
		 Returns a string representing the encoding under which the document was parsed (e.g.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representing the encoding under which the document was parsed (e.g. ISO-8859-1). 
		 This is null when it is not known, such as when the Document was created in memory.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.inputEncoding"><linktext>MDC - Document.inputEncoding</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-inputEncoding"><linktext>W3C - Document.inputEncoding</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:lastStyleSheetSet:get"><apiName>lastStyleSheetSet</apiName><shortdesc>
		 
		 This attribute must initially have the value null.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 
		 This attribute must initially have the value null. Its value changes when the selectedStyleSheetSet  attribute is set.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.lastStyleSheetSet"><linktext>MDC - Document.lastStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-lastStyleSheetSet"><linktext>W3C - DocumentStyle.lastStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:preferredStyleSheetSet:get"><apiName>preferredStyleSheetSet</apiName><shortdesc>
		 
		 This attribute must be the preferred style sheet set as set by the author.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 
		 This attribute must be the preferred style sheet set as set by the author. It is determined from the order 
		 of style sheet declarations and the Default-Style HTTP headers. If there is no preferred style sheet set, 
		 this attribute must  be the empty string. The case of this attribute must  exactly match the case given by 
		 the author where the preferred style sheet is specified or implied. This attribute must  never be null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.preferredStyleSheetSet"><linktext>MDC - Document.preferredStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-preferredStyleSheetSet"><linktext>W3C - DocumentStyle.preferredStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:selectedStyleSheetSet:get"><apiName>selectedStyleSheetSet</apiName><shortdesc>
		 
		 This attribute indicates which style sheet set is in use.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 
		 This attribute indicates which style sheet set is in use. This attribute is live; changing the disabled attribute 
		 on style sheets directly will change the value of this attribute.
		 
		 <p>If all the sheets that are enabled and have a title have the same title (by case-sensitive  comparisons) 
		 then the value of this attribute must be exactly equal to the title of the first enabled style sheet with a 
		 title in the styleSheets  list. Otherwise, if style sheets from different sets are enabled, then the return 
		 value must be null (there is no way to determine what the currently selected style sheet set is in those 
		 conditions). Otherwise, either all style sheets that have a title are disabled, or there are no alternative 
		 style sheets, and selectedStyleSheetSet  must return the empty string.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.selectedStyleSheetSet"><linktext>MDC - Document.selectedStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-selectedStyleSheetSet"><linktext>W3C - DocumentStyle.selectedStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:strictErrorChecking:get"><apiName>strictErrorChecking</apiName><shortdesc>
		 An attribute specifying whether error checking is enforced or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 An attribute specifying whether error checking is enforced or not. When set 
		 to false, the implementation is free to not test every possible error case 
		 normally defined on DOM operations, and not raise any DOMException on DOM 
		 operations or report errors while using Document.normalizeDocument(). In 
		 case of error, the behavior is undefined. This attribute is true by default.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.strictErrorChecking"><linktext>MDC - Document.strictErrorChecking</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-strictErrorChecking"><linktext>W3C - Document.strictErrorChecking</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:styleSheetSets:get"><apiName>styleSheetSets</apiName><shortdesc>
		 
		 This must be a live list of the currently available style sheet sets.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMStringList</apiValueClassifier></apiValueDef><apiDesc>
		 
		 This must be a live list of the currently available style sheet sets. This list is constructed by enumerating 
		 all the style sheets for this document available to the implementation, in the order they are listed in the 
		 styleSheets  attribute, adding the title of each style sheet with a title to the list, avoiding duplicates by 
		 dropping titles that match (case-sensitively) titles that have already been added to the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="htts.//developer.mozilla.org/En/DOM/document.styleSheetSets.xml"><linktext>MDC - Document.styleSheetSets</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-styleSheetSets"><linktext>W3C - DocumentStyle.styleSheetSets</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:styleSheets:get"><apiName>styleSheets</apiName><shortdesc>
		 
		 A list containing all the style sheets explicitly linked into or embedded in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:StyleSheetList</apiValueClassifier></apiValueDef><apiDesc>
		 
		 A list containing all the style sheets explicitly linked into or embedded in a document. For HTML 
		 documents, this includes external style sheets, included via the HTML LINK element, and inline 
		 STYLE elements. In XML, this includes external style sheets, included via style sheet 
		 processing instructions.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531200%28VS.85%29.aspx"><linktext>MSDN: styleSheets Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.styleSheets"><linktext>MDC - Document.styleSheets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle"><linktext>W3C - DOM Level 2 Style: DocumentStyle..styleSheets</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-stylesheets"><linktext>W3C - CSSOM: DocumentStyle.styleSheets</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:xmlEncoding:get"><apiName>xmlEncoding</apiName><shortdesc>
		 An attribute specifying, as part of the XML declaration, the encoding of 
		 this document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An attribute specifying, as part of the XML declaration, the encoding of 
		 this document. This is null when unspecified or when it is not known, such 
		 as when the Document was created in memory.
		 
		 <p>If the XML Declaration states:</p>
		 
		 <codeblock>&lt;?xml version="1.0" encoding="UTF-16"?&gt;</codeblock>
		 
		 <p>...the result should be "UTF-16".</p>
		 
		 <p><b>Note (Mozilla):</b> However, Firefox 3.0 includes information on endianness (e.g., UTF-16BE for big 
		 endian encoding), and while this extra information is removed as of Firefox 3.1b3, Firefox 3.1b3 is still 
		 consulting the file's encoding, rather than the XML Declaration as the spec defines it ("An attribute specifying, 
		 as part of the XML declaration, the encoding of this document.").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document.xmlEncoding"><linktext>MDC - Document.xmlEncoding</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-encoding"><linktext>W3C - Document.xmlEncoding</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:xmlStandalone:get"><apiName>xmlStandalone</apiName><shortdesc>
		 An attribute specifying, as part of the XML declaration, whether this 
		 document is standalone.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if this document 
		 does not support the "XML" feature. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 An attribute specifying, as part of the XML declaration, whether this 
		 document is standalone. This is false when unspecified.
		 
		 <p><b>Note:</b> No verification is done on the value when setting this attribute. 
		 Applications should use Document.normalizeDocument() with the "validate" 
		 parameter to verify if the value matches the validity constraint for 
		 standalone document declaration as defined in XML 1.0.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.xmlStandalone"><linktext>MDC - Document.xmlStandalone</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-standalone"><linktext>W3C - Document.xmlStandalone</linktext></link></related-links></apiValue><apiValue id="dom.core:Document:xmlVersion:get"><apiName>xmlVersion</apiName><shortdesc>
		 An attribute specifying, as part of the XML declaration, the version 
		 number of this document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the version is set 
		 to a value that is not supported by this Document or if this document does 
		 not support the "XML" feature. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 An attribute specifying, as part of the XML declaration, the version 
		 number of this document. If there is no declaration and if this document 
		 supports the "XML" feature, the value is "1.0". If this document does not 
		 support the "XML" feature, the value is always null. Changing this 
		 attribute will affect methods that check for invalid characters in XML 
		 names. Application should invoke Document.normalizeDocument() in order to 
		 check for invalid characters in the Nodes that are already part of this Document.
		 
		 <p>DOM applications may use the DOMImplementation.hasFeature(feature, version) 
		 method with parameter values "XMLVersion" and "1.0" (respectively) to 
		 determine if an implementation supports XML 1.0. DOM applications may use 
		 the same method with parameter values "XMLVersion" and "1.1" (respectively) 
		 to determine if an implementation supports XML 1.1. In both cases, in 
		 order to support XML, an implementation must also support the "XML" feature 
		 defined in this specification. Document objects supporting a version of the 
		 "XMLVersion" feature must not raise a NOT_SUPPORTED_ERR exception for the 
		 same version number when using Document.xmlVersion.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.xmlVersion"><linktext>MDC - Document.xmlVersion</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Document3-version"><linktext>W3C - Document.xmlVersion</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DocumentFragment"><apiName>DocumentFragment</apiName><shortdesc>
	 A DocumentFragment is a minimal document object that has no parent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>selectors:NodeSelector</apiBaseInterface><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A DocumentFragment is a minimal document object that has no parent. 
	 
	 <p>It is used as a light-weight version of document to store well-formed 
	 or potentially non-well-formed fragments of XML.</p>
	 
	 <p>Various other methods can take a document fragment as an argument (e.g., 
	 any Node interface methods such as appendChild and insertBefore), in 
	 which case the children of the fragment are appended or inserted, not 
	 the fragment itself.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms759155%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMDocumentFragment</linktext></link><link href="http://developer.mozilla.org/En/DOM/DocumentFragment"><linktext>MDC - DocumentFragment</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-B63ED1A3"><linktext>W3C - DocumentFragment</linktext></link></related-links><adobeApiEvent id="dom.core:DocumentFragment_DOMSubtreeModified_DOMSubtreeModified"><apiName>DOMSubtreeModified</apiName><shortdesc>
	 This is a general event for notification of all changes to the 
	 document.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMSubtreeModified</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 This is a general event for notification of all changes to the 
	 document. It can be used instead of the more specific mutation and 
	 mutation name events listed below. It may be dispatched after a 
	 single modification to the document or, at the implementation's 
	 discretion, after multiple changes have occurred. The latter use 
	 should generally be used to accommodate multiple changes which occur 
	 either simultaneously or in rapid succession. The target of this 
	 event is the lowest common parent of the changes which have taken 
	 place. This event is dispatched after any other events caused by the 
	 mutation(s) have occurred.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="dom.core:DocumentFragment:querySelector"><apiName>querySelector</apiName><shortdesc>
		 
		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The first matching Element node within the node’s subtree. If there is no such node, returns null. 
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>selectors</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>One or more selectors
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Selectors API Example&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;div id="foo"&gt;
		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;
		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;
		 		&lt;/div&gt;
		 		&lt;div id="bar"&gt;
		 			&lt;p&gt;...&lt;/p&gt;
		 		&lt;/div&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 x would contain the first element in the document with an ID of either foo or bar (or both). In the sample document above, it would select the div element with the ID of foo because it is first in document order.
		 <codeblock>var x = document.querySelector("#foo, #bar");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.w3.org/TR/selectors-api/#nodeselector"><linktext>W3C Selectors API</linktext></link></related-links></apiOperation><apiOperation id="dom.core:DocumentFragment:querySelectorAll"><apiName>querySelectorAll</apiName><shortdesc>
		 
		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A NodeList containing all of the matching Element nodes within the node’s subtree, in document order. If there are no such nodes, returns an empty NodeList.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>selectors</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>One or more selectors
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Selectors API Example&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;div id="foo"&gt;
		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;
		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;
		 		&lt;/div&gt;
		 		&lt;div id="bar"&gt;
		 			&lt;p&gt;...&lt;/p&gt;
		 		&lt;/div&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 The following example would select all p elements in the document that have a class of either "error" or "warning".
		 <codeblock>var alerts = document.querySelectorAll("p.warning, p.error");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.w3.org/TR/selectors-api/#nodeselector"><linktext>W3C Selectors API</linktext></link><link href="http://www.quirksmode.org/dom/w3c_core.html#gettingelements"><linktext>Quirksmode: Getting elements</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.core:Comment"><apiName>Comment</apiName><shortdesc>
	 A comment is used to add notations within markup.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:CharacterData</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A comment is used to add notations within markup.
	 
	 <p>Although it is generally not displayed, it is still available to be read in 
	 the source view. These are represented in HTML and XML as content between 
	 &lt;!-- and  --&gt; . In XML, the character sequence "--" cannot be used within a comment.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms765529%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMComment</linktext></link><link href="http://developer.mozilla.org/En/DOM/Comment"><linktext>MDC - Comment</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1728279322"><linktext>W3C - DOM 3 Core: Comment</linktext></link></related-links></apiClassifier><apiClassifier id="dom.core:Notation"><apiName>Notation</apiName><shortdesc>
	 This interface represents a notation declared in the DTD.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This interface represents a notation declared in the DTD. A notation 
	 either declares, by name, the format of an unparsed entity, or is used for formal 
	 declaration of processing instruction targets. The nodeName attribute inherited from 
	 Node is set to the declared name of the notation.
	 
	 <p><b>Note:</b> A Notation node does not have any parent.</p>
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms759198%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMNotation</linktext></link><link href="http://developer.mozilla.org/En/DOM/Notation"><linktext>MDC - Notation</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-5431D1B9"><linktext>W3C - Notation</linktext></link></related-links><apiValue id="dom.core:Notation:publicId:get"><apiName>publicId</apiName><shortdesc>
		 The public identifier of this notation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The public identifier of this notation. If the public identifier was not 
		 specified, this is null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms765397%28VS.85%29.aspx"><linktext>MSDN - publicId Property (IXMLDOMNotation)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Notation.publicId"><linktext>MDC - Notation.publicId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-54F2B4D0"><linktext>W3C - Notation.publicId</linktext></link></related-links></apiValue><apiValue id="dom.core:Notation:systemId:get"><apiName>systemId</apiName><shortdesc>
		 The system identifier of this notation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The system identifier of this notation. If the system identifier was not 
		 specified, this is null. This may be an absolute URI or not.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms754668%28VS.85%29.aspx"><linktext>MSDN - systemId Property (IXMLDOMNotation)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Notation.systemId"><linktext>MDC - Notation.systemId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-E8AAB1D0"><linktext>W3C - Notation.systemId</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:TypeInfo"><apiName>TypeInfo</apiName><shortdesc>
	 The TypeInfo interface represents a type referenced from Element or Attr 
	 nodes, specified in the schemas associated with the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The TypeInfo interface represents a type referenced from Element or Attr 
	 nodes, specified in the schemas associated with the document. The type 
	 is a pair of a namespace URI and name properties, and depends on the 
	 document's schema. 
	 
	 <p><b>Note:</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/TypeInfo"><linktext>MDC - TypeInfo</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo"><linktext>W3C - TypeInfo</linktext></link></related-links><apiOperation id="dom.core:TypeInfo:isDerivedFrom"><apiName>isDerivedFrom</apiName><shortdesc>
		 This method returns if there is a derivation between the reference 
		 type definition, i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the document's schema is a DTD or no schema is associated 
		 with the document, this method will always return false.
		 
		 <p>
		 If the document's schema is an XML Schema, the method will true if the reference 
		 type definition is derived from the other type definition according to the 
		 derivation parameter. If the value of the parameter is 0 (no bit is set to 1 for 
		 the derivationMethod parameter), the method will return true if the other 
		 type definition can be reached by recursing any combination of {base type 
		 definition}, {item type definition}, or {member type definitions} from the 
		 reference type definition. </p>
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>typeNamespaceArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace of the other type definition. 
		 </apiDesc></apiParam><apiParam><apiItemName>typeNameArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the other type definition. 
		 </apiDesc></apiParam><apiParam><apiItemName>derivationMethod</apiItemName><apiType value="Number"/><apiDesc>The type of derivation and conditions applied 
		 between two types, as described in the list of constants provided in this interface. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method returns if there is a derivation between the reference 
		 type definition, i.e. the TypeInfo on which the method is being called, 
		 and the other type definition, i.e. the one passed as parameters. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/TypeInfo.isDerivedFrom"><linktext>MDC - TypeInfo.isDerivedFrom()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-isDerivedFrom"><linktext>W3C - TypeInfo.isDerivedFrom()</linktext></link></related-links></apiOperation><apiValue id="dom.core:TypeInfo:DERIVATION_EXTENSION"><apiName>DERIVATION_EXTENSION</apiName><shortdesc>
		 If the document's schema is an XML Schema, this constant represents the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the document's schema is an XML Schema, this constant represents the list.
		 
		 <p>
		 The reference type definition is derived by extension from the other 
		 type definition if the other type definition can be reached recursively
		 following the {base type definition} property from the reference type
		 definition, and at least one of the derivation methods involved is 
		 an extension.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:TypeInfo:DERIVATION_LIST"><apiName>DERIVATION_LIST</apiName><shortdesc>
		 If the document's schema is an XML Schema [XML Schema Part 1], this 
		 constant represents the union if simple types are involved.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the document's schema is an XML Schema [XML Schema Part 1], this 
		 constant represents the union if simple types are involved.
		 
		 <p>
		 The reference type definition is derived by list from the other type 
		 definition if there exists two type definitions T1 and T2 such as 
		 the reference type definition is derived from T1 by DERIVATION_RESTRICTION 
		 or DERIVATION_EXTENSION, T2 is derived from the other type definition 
		 by DERIVATION_RESTRICTION, T1 has {variety} list, and T2 is the {item 
		 type definition}. Note that T1 could be the same as the reference type 
		 definition, and T2 could be the same as the other type definition. </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:TypeInfo:DERIVATION_RESTRICTION"><apiName>DERIVATION_RESTRICTION</apiName><shortdesc>
		 If the document's schema is an XML Schema, this constant represents the derivation by extension.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the document's schema is an XML Schema, this constant represents the derivation by extension.
		 
		 <p>
		 The reference type definition is derived by restriction from the other type 
		 definition if the other type definition is the same as the reference type definition, 
		 or if the other type definition can be reached recursively following the {base type 
		 definition} property from the reference type definition, and all the derivation 
		 methods involved are restriction. </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:TypeInfo:DERIVATION_UNION"><apiName>DERIVATION_UNION</apiName><shortdesc>
		 If the document's schema is an XML Schema, this constant represents the derivation by 
		 restriction  if complex types are involved, or a restriction  if simple types are involved.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the document's schema is an XML Schema, this constant represents the derivation by 
		 restriction  if complex types are involved, or a restriction  if simple types are involved.
		 
		 <p>
		 The reference type definition is derived by union from the other 
		 type definition if there exists two type definitions T1 and T2 such 
		 as the reference type definition is derived from T1 by DERIVATION_RESTRICTION 
		 or DERIVATION_EXTENSION, T2 is derived from the other type definition 
		 by DERIVATION_RESTRICTION, T1 has {variety} union, and one of the {member 
		 type definitions} is T2. Note that T1 could be the same as the reference 
		 type definition, and T2 could be the same as the other type definition. </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:TypeInfo:typeName:get"><apiName>typeName</apiName><shortdesc>
		 The name of a type declared for the associated element or attribute, 
		 or null if unknown.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of a type declared for the associated element or attribute, 
		 or null if unknown. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/TypeInfo.typeName"><linktext>MDC - TypeInfo.typeName</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-typeName"><linktext>W3C - TypeInfo.typeName</linktext></link></related-links></apiValue><apiValue id="dom.core:TypeInfo:typeNamespace:get"><apiName>typeNamespace</apiName><shortdesc>
		 The namespace of the type declared for the associated element 
		 or attribute or null if the element does not have declaration or 
		 if no namespace information is available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The namespace of the type declared for the associated element 
		 or attribute or null if the element does not have declaration or 
		 if no namespace information is available. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/TypeInfo.typeNamespace"><linktext>MDC - TypeInfo.typeNamespace</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#TypeInfo-typeNamespace"><linktext>W3C - TypeInfo.typeNamespace</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:Text"><apiName>Text</apiName><shortdesc>
	 The Text interface represents the textual content of an Element or Attr.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:CharacterData</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Text interface represents the textual content of an Element or Attr.  If an 
	 element has no markup within its content, it has a single child implementing Text 
	 that contains the element's text.  However, if the element contains markup, it is 
	 parsed into information items and Text nodes that form its children.
	 
	 <p>New documents have a single Text node for each block of text.  Over time, more 
	 Text nodes may be created as the document's content changes.  The Node.normalize() 
	 method merges adjacent Text objects back into a single node for each block of text.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757862%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMText</linktext></link><link href="http://developer.mozilla.org/En/DOM/Text"><linktext>MDC - Text</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1312295772"><linktext>W3C - Text</linktext></link></related-links><apiOperation id="dom.core:Text:replacewholeText"><apiName>replacewholeText</apiName><shortdesc>
		 Replaces the text of the node and all of its logically adjacent text nodes 
		 with the specified text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="Firefox" version="3.5+"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR : One of the 
		 text nodes being replaced is read only.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The Text node created with the specified content.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Text</apiOperationClassifier></apiReturn><apiParam><apiItemName>content</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifying the text with which to replace the node's current contents.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replaces the text of the node and all of its logically adjacent text nodes 
		 with the specified text.  The replaced nodes are removed, including the 
		 current node, unless it was the recipient of the replacement text.
		 
		 <p><b>Note:</b> This method returns the text node which received the replacement text, or null 
		 if the replacement text is an empty string.  The returned node is the current 
		 node unless the current node is read only, in which case the returned node is 
		 a newly created text node of the same type which has been inserted at the 
		 location of the replacement.</p>
		 
		 <p><b>Note (Mozilla):</b> Firefox's implementation of this method does not yet support EntityReference 
		 nodes as defined by the specification.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Text.replaceWholeText"><linktext>MDC - Text.replacewholeText()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Text3-replaceWholeText"><linktext>W3C - Text.replacewholeText()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Text:splitText"><apiName>splitText</apiName><shortdesc>
		 Breaks the Text node into two nodes at the specified offset, keeping both 
		 nodes in the tree as siblings.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR : The specified offset is negative or is greater than the number of 16-bit units in the node's text.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR : The node is read only.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The new node, of the same type as this node.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Text</apiOperationClassifier></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>16-bit integer offset at which to split; the first character in the node is numbered zero.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Breaks the Text node into two nodes at the specified offset, keeping both 
		 nodes in the tree as siblings.
		 
		 <p><b>Note:</b> After the split, the current node contains all the content up to the specified 
		 offset point, and a newly created node of the same type contains the remaining 
		 text.  The newly created node is returned to the caller.  If the original node 
		 had a parent, the new node is inserted as the next sibling of the original 
		 node.  If the offset is equal to the length of the original node, the newly 
		 created node has no data.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms753789%28VS.85%29.aspx"><linktext>MSDN - splitText Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Text.splitText"><linktext>MDC - Text.splitText()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-38853C1D"><linktext>W3C - Text.splitText()</linktext></link></related-links></apiOperation><apiValue id="dom.core:Text:isElementContentWhitespace:get"><apiName>isElementContentWhitespace</apiName><shortdesc>
		 Returns a Boolean value indicating whether or not the text node contains whitespace within its content.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a Boolean value indicating whether or not the text node contains whitespace within its content.  
		 This determination is made during the loading of the document, or if validation occurs when Document.normalizeDocument() is called.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Text.isElementContentWhitespace"><linktext>MDC - Text.isElementContentWhitespace</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Text3-isElementContentWhitespace"><linktext>W3C - Text.isElementContentWhitespace</linktext></link></related-links></apiValue><apiValue id="dom.core:Text:wholeText:get"><apiName>wholeText</apiName><shortdesc>
		 Returns all text of all Text nodes logically adjacent to this node, concatenated in document order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="Firefox" version="3.5+"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns all text of all Text nodes logically adjacent to this node, concatenated in document order.
		 
		 </apiDesc><example>
		 Suppose you have the following simple paragraph within your webpage (with 
		 some whitespace added to aid formatting throughout the code samples here), 
		 whose DOM node is stored in the variable para:
		 
		 <codeblock>
		 &lt;p&gt;Thru-hiking is great!  &lt;strong&gt;No insipid election coverage!&lt;/strong&gt;
		 However, &lt;a href="http://en.wikipedia.org/wiki/Absentee_ballot"&gt;casting a  
		 ballot&lt;/a&gt; is tricky.&lt;/p&gt;</codeblock>
		 
		 <p>You decide you don’t like the middle sentence, so you remove it:</p>
		 
		 <codeblock>para.removeChild(para.childNodes[1]);</codeblock>
		 
		 <p>Later, you decide to rephrase things to, “Thru-hiking is great, but casting a 
		 ballot is tricky.” while preserving the hyperlink. So you try this:</p>
		 
		 <codeblock>para.firstChild.data = "Thru-hiking is great, but ";</codeblock>
		 
		 <p>All set, right? Wrong! What happened was you removed the strong element, 
		 but the removed sentence’s element separated two text nodes, one for the 
		 first sentence and one for the first word of the last. Instead, you now 
		 effectively have this:</p>
		 
		 <codeblock>
		 &lt;p&gt;Thru-hiking is great, but However, &lt;a href="http://en.wikipedia.org/wiki/Absentee_ballot"&gt;
		 casting a ballot&lt;/a&gt; is tricky.&lt;/p&gt;</codeblock>
		 
		 <p>You’d really prefer to treat all those adjacent text nodes as a single one. 
		 That’s where wholeText comes in: if you have multiple adjacent text nodes, 
		 you can access the contents of all of them using wholeText. Let’s pretend 
		 you never made that last mistake. In that case, we have:</p>
		 
		 <codeblock>assert(para.firstChild.wholeText == "Thru-hiking is great!    However, ");</codeblock>
		 
		 <p>wholeText is just a property of text nodes that returns the string of data 
		 making up all the adjacent (i.e. not separated by an element boundary) 
		 text nodes together.</p>
		 
		 <p>Now let’s return to our original problem. What we want is to be able to 
		 replace the whole text with new text. That’s where replaceWholeText() 
		 comes in:</p>
		 
		 <codeblock>para.firstChild.replaceWholeText("Thru-hiking is great, but ");</codeblock>
		 
		 <p>We’re removing every adjacent text node (all the ones that constituted 
		 the whole text) but the one on which replaceWholeText() is called, and 
		 we’re changing the remaining one to the new text. What we have now is this:</p>
		 
		 <codeblock>
		 &lt;p&gt;Thru-hiking is great, but &lt;a href="http://en.wikipedia.org/wiki/Absentee_ballot"&gt;
		 casting a ballot&lt;/a&gt; is tricky.&lt;/p&gt;</codeblock>
		 
		 <p>Some uses of the whole-text functionality may be better served by using 
		 Node.textContent or the longstanding innerHTML; that’s fine and probably 
		 clearer in most circumstances. If you have to work with mixed content 
		 within an element as here, however, wholeText and replaceWholeText() may be useful.</p>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Text.wholeText"><linktext>MDC - Text.wholeText</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Text3-wholeText"><linktext>W3C - Text.wholeText</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:CDATASection"><apiName>CDATASection</apiName><shortdesc>
	 A CDATA Section can be used within XML to include extended portions of 
	 unescaped text, such that the symbols &amp;lt; and &amp;amp; do not need escaping as 
	 they normally do within XML when used as text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Text</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A CDATA Section can be used within XML to include extended portions of 
	 unescaped text, such that the symbols &lt; and &amp; do not need escaping as 
	 they normally do within XML when used as text.
	 
	 <p><b>Note:</b> CDATA sections should not be used (without hiding) within HTML.</p>
	 
	 </apiDesc><example>
	 For example:
	 <codeblock>&lt;foo&gt;Here is a CDATA section: &lt;![CDATA[  &lt; &gt; &amp; ]]&gt; with all kinds of unescaped text. &lt;/foo&gt;</codeblock>
	 The only sequence which is not allowed within a CDATA section is the closing sequence of a CDATA section itself:
	 <codeblock>&lt;![CDATA[  ]]&gt; will cause an error   ]]&gt;</codeblock>
	 
	 </example></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms762780%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMCDATASection</linktext></link><link href="http://developer.mozilla.org/en/DOM/CDATASection"><linktext>MDC - CDATASection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-667469212"><linktext>W3C - CDATASection</linktext></link></related-links></apiClassifier><apiClassifier id="dom.core:Node"><apiName>Node</apiName><shortdesc>
	 A Node is an interface from which a number of DOM types inherit, and 
	 allows these various types to be treated (or tested) similarly.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.events:EventTarget</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A Node is an interface from which a number of DOM types inherit, and 
	 allows these various types to be treated (or tested) similarly. The 
	 following all inherit this interface and its methods and properties 
	 (though they may return null in particular cases where not relevant 
	 (or throw an exception when adding children to a node type for which 
	 no children can exist)): Document, Element, Attr, CharacterData (which 
	 Text, Comment, and CDATASection inherit), ProcessingInstruction, 
	 DocumentFragment, DocumentType, Notation, Entity, EntityReference
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node"><linktext>MDC - Node</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1950641247"><linktext>W3C - Node</linktext></link></related-links><apiOperation id="dom.core:Node:addEventListener"><apiName>addEventListener</apiName><shortdesc>
		 
		 Associates a function with a particular event and binds the event to the current node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The function or method to associate with the event.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 
		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Associates a function with a particular event and binds the event to the current node.
		 
		 </apiDesc><example>
		 <codeblock>
		 function statusreport() {
		 		alert("document has loaded");
		 }
		 
		 if (window.addEventListener) {
		 		window.addEventListener("load", statusreport, false); //invoke function
		 }
		 window.onload = statusreport(); //function invoked again, since no event handler conflicts</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-addEventListener"><linktext>W3C - DOM 3 Events: EventTarget.addEventListener()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:addEventListenerNS"><apiName>addEventListenerNS</apiName><shortdesc>
		 
		 Registers an event listener, depending on the useCapture parameter, on the 
		 capture phase of the DOM event flow or its target and bubbling phases.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.namespaceURI associated with the event for which the user is registering.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The function or method to associate with the event.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 
		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Registers an event listener, depending on the useCapture parameter, on the 
		 capture phase of the DOM event flow or its target and bubbling phases.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-addEventListener"><linktext>W3C - DOM 3 Events: EventTarget.addEventListener()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:appendChild"><apiName>appendChild</apiName><shortdesc>
		 Adds a node to the end of the list of children of a specified parent node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if this 
		 node is of a type that does not allow children of the type of the 
		 newChild node, or if the node to append is one of this node's 
		 ancestors or this node itself, or if this node is of type Document 
		 and the DOM application attempts to append a second DocumentType or 
		 Element node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if newChild 
		 was created from a different document than the one that created 
		 this node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly or if the previous parent of the node being 
		 inserted is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: if the newChild node 
		 is a child of the Document node, this exception might be raised if 
		 the DOM implementation doesn't support the removal of the 
		 DocumentType child or Element child.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>Returns a reference to the element that is appended to the object.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Object that specifies the element to append.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a node to the end of the list of children of a specified parent node. 
		 If the node already exists it is removed from current parent node, then added to new parent node.
		 
		 <p><b>Note:</b> If child is a reference to an existing node in the document, 
		 appendChild moves it from its current position to the new position (i.e. there is no 
		 requirement to remove the node from its parent node before appending it to some other node).</p>
		 
		 <p><b>Note:</b> This also means that a node can't be in two points of the document 
		 simultaneously. So if the node already has a parent, it is first removed, then appended at 
		 the new position.</p>
		 
		 <p><b>Note:</b> You can use cloneNode to make a copy of the node before appending
		 it under the new parent. (Note that the copies made with cloneNode will not be automatically 
		 kept in sync.)</p>
		 
		 <p><b>Note:</b> This method is not allowed to move nodes between different documents. 
		 If you want to append node from a different document (for example to display results from AJAX 
		 request) you must first use importNode.</p>
		 
		 <p><b>Note (IE6):</b> In Microsoft Internet Explorer 6, This method now applies to 
		 the attribute object. </p>
		 
		 <p><b>Note:</b> When inserting a node tree under another node that has a different 
		 owner document, the  ownerDocument property for each inserted node is changed to match the owner 
		 document of its new parent.</p>
		 
		 <p><b>Note:</b> When moving a node tree to another document, the content of all entity 
		 reference nodes contained therein is updated to conform to the new document. If the new document 
		 does not declare an entity that was moved into it, the entity reference will have no children, and 
		 the old content is removed. Existing references to nodes under the entity reference are still valid, 
		 but the node whose parent previously was the entity reference now has a null parent. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Create a new paragraph element, and append it to the end of the document body
		 var p = document.createElement("p");
		 document.body.appendChild(p);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa925543.aspx"><linktext>MSDN - appendChild Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.appendChild"><linktext>MDC - Node.appendChild()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-184E7107"><linktext>W3C - Node.appendChild()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:cloneNode"><apiName>cloneNode</apiName><shortdesc>
		 Returns a duplicate of the current node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the newly created node.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>cloneChildren</apiItemName><apiType value="Boolean"/><apiDesc>FALSE, cloned objects do not include childNodes. TRUE, cloned objects include childNodes.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a duplicate of the current node. 
		 
		 <p><b>Note:</b> Cloning a node copies all of its attributes and their values. </p>
		 
		 <p><b>Note:</b> The duplicate node returned by cloneNode is not part of the 
		 document until it is added to another node that is part of the document using appendChild 
		 or a similar method. It also has no parent until it is appended to another node. </p>
		 
		 <p><b>Note:</b> If cloneChildren is set to false, none of the child nodes 
		 are cloned. Any text that the node contains is not cloned either, as it is contained in 
		 one or more child Text nodes. </p>
		 
		 <p><b>Note:</b> When you refer to the ID of a cloned element, a collection is returned.</p>
		 
		 <p><b>Note:</b> To clone a node for appending to a different document, use importNode instead. </p>
		 
		 <p><b>Note (IE):</b> If the node is the DOMDocument node, it is safer to clone the document 
		 using the save method, as follows. doc.save(doc2); </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 p = document.getElementById("para1"); 
		 p_prime = p.cloneNode(true);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923265.aspx"><linktext>MSDN - cloneNode Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.cloneNode"><linktext>MDC - Node.cloneNode()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-3A0ED0A4"><linktext>W3C - Node.cloneNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:compareDocumentPosition"><apiName>compareDocumentPosition</apiName><shortdesc>
		 Compares the position of the current node against another node in any other document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: when the compared 
		 nodes are from different DOM implementations that do not coordinate 
		 to return consistent implementation-specific results.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The return value is computed as the relationship that otherNode has
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>other</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node that's being compared against.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Compares the position of the current node against another node in any other document.
		 
		 </apiDesc><example>
		 <codeblock>
		 var head = document.getElementsByTagName('head').item(0);
		 var result = head.compareDocumentPosition(document.body);
		 // result = Node.DOCUMENT_POSITION_FOLLOWING</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.compareDocumentPosition"><linktext>MDC - Node.compareDocumentPosition()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-compareDocumentPosition"><linktext>W3C - Node.compareDocumentPosition()</linktext></link><link href="dom.core.xml#Node/DOCUMENT_POSITION_DISCONNECTED"><linktext>DOCUMENT_POSITION_DISCONNECTED</linktext></link><link href="dom.core.xml#Node/DOCUMENT_POSITION_PRECEDING"><linktext>DOCUMENT_POSITION_PRECEDING</linktext></link><link href="dom.core.xml#Node/DOCUMENT_POSITION_FOLLOWING"><linktext>DOCUMENT_POSITION_FOLLOWING</linktext></link><link href="dom.core.xml#Node/DOCUMENT_POSITION_CONTAINS"><linktext>DOCUMENT_POSITION_CONTAINS</linktext></link><link href="dom.core.xml#Node/DOCUMENT_POSITION_CONTAINED_BY"><linktext>DOCUMENT_POSITION_CONTAINED_BY</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
		 
		 Dispatches an event to fire on a node artificially.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Indicates whether any of the listeners which handled the 
		 event called Event.preventDefault(). If Event.preventDefault() was 
		 called the returned value is false, else it is true.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>evt</apiItemName><apiOperationClassifier>dom.events:Event</apiOperationClassifier><apiDesc>The event to be dispatched.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Dispatches an event to fire on a node artificially.
		 
		 <p><b>Note (IE):</b> IE's equivalent of dispatchEvent() is fireEvent().</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="test" onclick="alert('hi')"&gt;Sample DIV.&lt;/div&gt;
		 &lt;script type="text/javascript"&gt;
		 //Generate an artificial click event on "test". Fires alert("hi")
		 var clickevent = document.createEvent("MouseEvents");
		 clickevent.initEvent("click", true, true);
		 document.getElementById("test").dispatchEvent(myevent);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-dispatchEvent"><linktext>W3C - DOM 3 Events: EventTarget.dispatchEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:getFeature"><apiName>getFeature</apiName><shortdesc>
		 This method returns a specialized object which implements the 
		 specialized APIs of the specified feature and version, as specified 
		 in DOM Features.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns an object which implements the specialized APIs of the 
		 specified feature and version, if any, or null if there is no object 
		 which implements interfaces associated with that feature. If the 
		 DOMObject returned by this method implements the Node interface, it must 
		 delegate to the primary core Node and not return results inconsistent 
		 with the primary core Node  such as attributes, childNodes, etc. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>feature</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the feature requested. Note that any plus 
		 sign "+" prepended to the name of the feature will be ignored since it 
		 is not significant in the context of this method. 
		 </apiDesc></apiParam><apiParam><apiItemName>version</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This is the version number of the feature to test. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method returns a specialized object which implements the 
		 specialized APIs of the specified feature and version, as specified 
		 in DOM Features. The specialized object may also be obtained by using 
		 binding-specific casting methods but is not necessarily expected to, 
		 as discussed in Mixed DOM Implementations. This method also allow 
		 the implementation to provide specialized objects which do not support 
		 the Node interface. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.getFeature"><linktext>MDC - Node.getFeature()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-getFeature"><linktext>W3C - Node.getFeature()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:getUserData"><apiName>getUserData</apiName><shortdesc>
		 Retrieves the object associated to a key on a this node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns the DOMUserData associated to the given key on this node, 
		 or null if there was none.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMUserData</apiOperationClassifier></apiReturn><apiParam><apiItemName>key</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The key the object is associated to.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves the object associated to a key on a this node. The object must 
		 first have been set to this node by calling setUserData with the same key.
		 
		 </apiDesc><example>
		 <codeblock>
		 var d = document.setUserData('key', 15, null);
		 alert(document.getUserData('key')); // 15</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.getUserData"><linktext>MDC - Node.getUserData()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-getUserData"><linktext>W3C - Node.getUserData()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:hasAttributes"><apiName>hasAttributes</apiName><shortdesc>
		 Returns a boolean value of true or false, indicating if the current element 
		 has any attributes or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the current element has any attributes or not. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 Returns a boolean value of true or false, indicating if the current element 
		 has any attributes or not. 
		 
		 </apiDesc><example>
		 <codeblock>
		 t1 = document.getElementById("table-data"); 
		 if (t1.hasAttributes()) { 
		 	// do something with t1.attributes
		 }</codeblock>
		 
		 <codeblock> var result=document.getElementsByTagName("div")[0].hasAttributes();</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.hasAttributes"><linktext>MDC - Node.hasAttributes()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeHasAttrs"><linktext>W3C - Node.hasAttributes()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:hasChildNodes"><apiName>hasChildNodes</apiName><shortdesc>
		 Returns a value that indicates whether the object has children.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 Returns a value that indicates whether the object has children. 
		 
		 <p><b>Note:</b> If the object contains HTML Elements or TextNodes, they can be 
		 accessed from the childNodes collection.</p>
		 
		 <p><b>Note:</b> element.hasChildNodes, without the parenthesises, will return the 
		 hasChildNodes Function, and not a Boolean.</p>
		 
		 <p><b>Note (IE6):</b> In Microsoft Internet Explorer 6, This method now applies to the 
		 attribute object. </p>
		 
		 </apiDesc><example>
		 Remove the first child node inside the element with the id "foo" if foo has child nodes.
		 <codeblock>
		 var foo = document.getElementById("foo");
		 if (foo.hasChildNodes()) { 
		 	foo.removeChild(foo.childNodes[0]);
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924162.aspx"><linktext>MSDN - hasChildNodes Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.hasChildNodes"><linktext>MDC - Node.hasChildNodes()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-810594187"><linktext>W3C - Node.hasChildNodes()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:insertBefore"><apiName>insertBefore</apiName><shortdesc>
		 Inserts the specified node before a reference element as a child of 
		 the current node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if this 
		 node is of a type that does not allow children of the type of the 
		 newChild node, or if the node to insert is one of this node's 
		 ancestors or this node itself, or if this node is of type Document 
		 and the DOM application attempts to insert a second DocumentType 
		 or Element node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if newChild 
		 was created from a different document than the one that created 
		 this node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly or if the parent of the node being inserted 
		 is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_FOUND_ERR: Raised if refChild is 
		 not a child of this node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: if this node is of 
		 type Document, this exception might be raised if the DOM 
		 implementation doesn't support the insertion of a DocumentType or 
		 Element node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>Returns a reference to the element that is inserted into the document.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>newNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to insert. 
		 </apiDesc></apiParam><apiParam><apiItemName>childNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node before which newNode is inserted. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Inserts the specified node before a reference element as a child of 
		 the current node. 
		 
		 <p><b>Note:</b> Do not specify the childNode  parameter when inserting the 
		 first child node. If children already exist and you do not specify 
		 the childNode  parameter, the oNewNode  becomes the last child of 
		 the parent object.</p>
		 
		 <p><b>Note (IE6):</b> In Microsoft Internet Explorer 6, This method now applies to the 
		 attribute object.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		  &lt;html&gt;
		 
		 &lt;head&gt;
		 	&lt;title&gt;Gecko DOM insertBefore test&lt;/title&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 
		 &lt;div&gt;
		 	&lt;span id="childSpan"&gt;foo bar&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	// create an empty element node
		 	// without an ID, any attributes, or any content
		 	var sp1 = document.createElement("span");
		 
		 	// give it an id attribute called 'newSpan'
		 	sp1.setAttribute("id", "newSpan");
		 
		 	// create some content for the newly created element.
		 	var sp1_content = document.createTextNode("This is a new span element. ");
		 
		 	// apply that content to the new element
		 	sp1.appendChild(sp1_content);
		 
		 	var sp2 = document.getElementById("childSpan");
		 	var parentDiv = sp2.parentNode;
		 
		 	// insert the new element into the DOM before sp2
		 	parentDiv.insertBefore(sp1, sp2);
		 &lt;/script&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 <p>There is no insertAfter method, however it can be emulated using a combination of insertBefore and nextSibling. </p>
		 
		 <p>From the above example, sp1 could be inserted after sp2 using: </p>
		 
		 <codeblock>parentDiv.insertBefore(sp1, sp2.nextSibling);</codeblock>
		 
		 <p>If sp2 does not have a next sibling it must be the last child—sp2.nextSibling will return 
		 null so sp1 will be inserted at the end of the child nodes list (i.e. immediately after sp2). </p>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa922819.aspx"><linktext>MSDN - insertBefore Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.insertBefore"><linktext>MDC - Node.insertBefore()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-952280727"><linktext>W3C - Node.insertBefore()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:isDefaultNamespace"><apiName>isDefaultNamespace</apiName><shortdesc>
		 Returns true if the namespace is the default namespace on the given 
		 node or false if not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the namespace is the default namespace on the given 
		 node or false if not.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace against which the element will be checked.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns true if the namespace is the default namespace on the given 
		 node or false if not.
		 
		 </apiDesc><example>
		 <codeblock>
		 var XULNS = "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul";
		 var el = document.getElementsByTagNameNS(XULNS, 'textbox')[0];
		 alert(el.isDefaultNamespace(XULNS)); // true</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.isDefaultNamespace"><linktext>MDC - Node.isDefaultNamespace()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isDefaultNamespace"><linktext>W3C - Node.isDefaultNamespace()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:isEqualNode"><apiName>isEqualNode</apiName><shortdesc>
		 Tests whether two nodes are equal.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns true if the nodes are equal, false  otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to compare equality with.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Tests whether two nodes are equal.
		 
		 <p>This method tests for equality of nodes, not sameness (i.e., whether
		 the two nodes are references to the same object) which can be tested 
		 with Node.isSameNode(). All nodes that are the same will also be 
		 equal, though the reverse may not be true. Two nodes are equal if and 
		 only if the following conditions are satisfied:
		 <ul>
		 <li>The two nodes are of the same type.</li>
		 <li>The following string attributes are equal: nodeName, localName, 
		 namespaceURI, prefix, nodeValue. This is: they are both null, or they 
		 have the same length and are character for character identical.</li>
		 <li>The attributes NamedNodeMaps are equal. This is: they are both null, 
		 or they have the same length and for each node that exists in one map 
		 there is a node that exists in the other map and is equal, although not 
		 necessarily at the same index.</li>
		 <li>The childNodes NodeLists are equal. This is: they are both null, or 
		 they have the same length and contain equal nodes at the same index. 
		 Note that normalization can affect equality; to avoid this, nodes should 
		 be normalized before being compared.</li>
		 </ul>
		 </p>
		 
		 <p>For two DocumentType nodes to be equal, the following conditions must 
		 also be satisfied:
		 <ul>
		 <li>The following string attributes are equal: publicId, systemId, internalSubset.</li>
		 <li>The entities NamedNodeMaps are equal.</li>
		 <li>The notations NamedNodeMaps are equal.</li>
		 </ul>
		 </p>
		 
		 <p>On the other hand, the following do not affect equality: the ownerDocument, 
		 baseURI, and parentNode attributes, the specified attribute for Attr nodes, 
		 the schemaTypeInfo attribute for Attr and Element nodes, the 
		 Text.isElementContentWhitespace attribute for Text nodes, as well as any 
		 user data or event listeners registered on the nodes.</p>
		 
		 <p>Note: As a general rule, anything not mentioned in the description above 
		 is not significant in consideration of equality checking. Note that future 
		 versions of this specification may take into account more attributes and 
		 implementations conform to this specification are expected to be 
		 updated accordingly. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.isEqualNode"><linktext>MDC - Node.isEqualNode()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isEqualNode"><linktext>W3C - Node.isEqualNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:isSameNode"><apiName>isSameNode</apiName><shortdesc>
		 Returns whether this node is the same node as the given one.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns true if the nodes are the same, false otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>other</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to test against.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns whether this node is the same node as the given one.
		 This method provides a way to determine whether two Node references 
		 returned by the implementation reference the same object. When two 
		 Node references are references to the same object, even if through a 
		 proxy, the references may be used completely interchangeably, such 
		 that all attributes have the same values and calling the same DOM method 
		 on either reference always has exactly the same effect.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.isSameNode"><linktext>MDC - Node.isSameNode()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-isSameNode"><linktext>W3C - Node.isSameNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:isSupported"><apiName>isSupported</apiName><shortdesc>
		 Tests whether the DOM implementation implements a specific feature 
		 and that feature is supported by this node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>feature</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>name of the feature to test. This is the same name 
		 which can be passed to the method hasFeature on DOMImplementation. 
		 Possible values defined within the core DOM specification are listed 
		 on the DOM Level 2 Conformance Section.  The name of the feature to 
		 test. This is the same name which can be passed to the method 
		 hasFeature on DOMImplementation. Possible values defined within 
		 the core DOM specification are listed on the DOM Level 2 Conformance Section. 
		 </apiDesc></apiParam><apiParam><apiItemName>version</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This is the version number of the feature to test. In DOM 
		 Level 2, version 1, this is the string 2.0. If the version is not specified, 
		 supporting any version of the feature will cause the method to return true. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Tests whether the DOM implementation implements a specific feature 
		 and that feature is supported by this node. 
		 
		 <p><b>Note:</b> To check if any version of the DOM specification is supported, 
		 you can pass in null as the version instead of a string. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Get an element and check to see if its supports the DOM2 HTML Module
		 &lt;div id="doc"&gt;
		 &lt;/div&gt;
		 var main = document.getElementById('doc');
		 var output = main.isSupported('HTML', '2.0');</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.isSupported"><linktext>MDC - Node.isSupported()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Level-2-Core-Node-supports"><linktext>W3C - Node.isSupported()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:lookupNamespaceURI"><apiName>lookupNamespaceURI</apiName><shortdesc>
		 Takes a prefix and returns the namespaceURI associated with it on the 
		 given node if found (and null if not).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns the associated namespace URI or null if none is found.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>prefix</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The prefix to look for. If this parameter is null, 
		 the method will return the default namespace URI if any.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Takes a prefix and returns the namespaceURI associated with it on the 
		 given node if found (and null if not). Supplying null for the prefix 
		 will return the default namespace.
		 
		 <p><b>Note (Mozilla):</b> Due to bug 312019, this method does not work with 
		 dynamically assigned namespaces (i.e., those set with Node.prefix).</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.lookupNamespaceURI"><linktext>MDC - Node.lookupNamespaceURI()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespaceURI"><linktext>W3C - Node.lookupNamespaceURI()</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=312019"><linktext>bug 312019</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:lookupPrefix"><apiName>lookupPrefix</apiName><shortdesc>
		 Returns the prefix for a given namespaceURI if present, and null if not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns an associated namespace prefix if found or null  if none is 
		 found. If more than one prefix are associated to the namespace prefix, the 
		 returned namespace prefix is implementation dependent.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI to look for.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the prefix for a given namespaceURI if present, and null if not. 
		 When multiple prefixes are possible, the result is implementation-dependent.
		 
		 <p><b>Note (Mozilla):</b> Due to bug 312019, this method does not work with 
		 dynamically assigned namespaces (i.e., those set with Node.prefix).</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.lookupPrefix"><linktext>MDC - Node.lookupPrefix()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-lookupNamespacePrefix"><linktext>W3C - Node.lookupPrefix()</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=312019"><linktext>bug 312019</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:normalize"><apiName>normalize</apiName><shortdesc>
		 Puts the specified node and all of its subtree into a "normalized" 
		 form.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Puts the specified node and all of its subtree into a "normalized" 
		 form. In a normalized subtree, no text nodes in the subtree are 
		 empty and there are no adjacent text nodes. 
		 
		 <p><b>Note (IE):</b> By calling object.normalize before the subelements of an 
		 object are manipulated, you ensure that the document object model 
		 has a consistent structure. The normal form is useful for operations 
		 that require a consistent document tree structure, and it ensures 
		 that the document object model view is identical when saved and reloaded.</p>
		 
		 <p><b>Note (IE):</b> Adjacent CDATA sections will not be merged by the normalize 
		 method, allowing for an inconsistent object model when CDATA 
		 sections are present.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.normalize"><linktext>MDC - Node.normalize()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-normalize"><linktext>W3C - Node.normalize()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:removeChild"><apiName>removeChild</apiName><shortdesc>
		 Removes a child node from the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_FOUND_ERR: Raised if oldChild is not 
		 a child of this node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: if this node is of 
		 type Document, this exception might be raised if the DOM implementation 
		 doesn't support the removal of the DocumentType child or the Element child.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>Returns a reference to the object that is removed.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>node</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the element to be removed from the document.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes a child node from the object.
		 
		 <p>The node to be removed must be an immediate child of the parent object.</p>
		 
		 <p>If child is actually not a child of the element node, the method throws an exception. </p>
		 
		 <p><b>Note:</b> The removed child node still exists in memory, but is no longer part of the DOM. 
		 You may reuse the removed node later in your code, via the oldChild object reference.</p>
		 
		 <p><b>Note (IE6):</b> In Microsoft Internet Explorer 6, This method now applies to the attribute object. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // &lt;div id="top" align="center"&gt;
		 //   &lt;div id="nested"&gt;&lt;/div&gt; 
		 // &lt;/div&gt;
		 
		 var d = document.getElementById("top"); 
		 var d_nested = document.getElementById("nested"); 
		 var throwawayNode = d.removeChild(d_nested);</codeblock>
		 
		 <codeblock>
		 // remove all children from element
		 var element = document.getElementById("top");
		 while (element.firstChild) {
		 	element.removeChild(element.firstChild);
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923301.aspx"><linktext>MSDN - removeChild Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.removeChild"><linktext>MDC - Node.removeChild()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1734834066"><linktext>W3C - Node.removeChild()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
		 
		 Removes an event listener.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.type for which the user registered 
		 the event listener.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The EventListener to be removed.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Specifies whether the EventListener being removed 
		 was registered for the capture phase or not. If a listener was 
		 registered twice, once for the capture phase and once for the target 
		 and bubbling phases, each must be removed separately. Removal of an 
		 event listener registered for the capture phase does not affect the 
		 same event listener registered for the target and bubbling phases, 
		 and vice versa.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Removes an event listener.
		 
		 <p>Calling removeEventListener with arguments 
		 which do not identify any currently registered EventListener on the 
		 EventTarget has no effect. The Event.namespaceURI for which the user 
		 registered the event listener is implied and is null.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-removeEventListener"><linktext>W3C - DOM 3 Events: EventTarget.removeEventListener()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:removeEventListenerNS"><apiName>removeEventListenerNS</apiName><shortdesc>
		 
		 Removes an event listener.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.namespaceURI associated with the event for which the user registered the event listener.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.type for which the user registered 
		 the event listener.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The EventListener to be removed.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Specifies whether the EventListener being removed 
		 was registered for the capture phase or not. If a listener was 
		 registered twice, once for the capture phase and once for the target 
		 and bubbling phases, each must be removed separately. Removal of an 
		 event listener registered for the capture phase does not affect the 
		 same event listener registered for the target and bubbling phases, 
		 and vice versa.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Removes an event listener. Calling removeEventListenerNS with arguments 
		 which do not identify any currently registered EventListener on the 
		 EventTarget has no effect. 
		  
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTargetGroup-removeEventListenerNS"><linktext>W3C - DOM 3 Events: EventTarget.removeEventListenerNS()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:replaceChild"><apiName>replaceChild</apiName><shortdesc>
		 Replaces an existing child element with a new child element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if this 
		 node is of a type that does not allow children of the type of the 
		 newChild node, or if the node to put in is one of this node's 
		 ancestors or this node itself, or if this node is of type Document 
		 and the result of the replacement operation would add a second 
		 DocumentType or Element on the Document node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if newChild 
		 was created from a different document than the one that created 
		 this node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node or the parent of the new node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_FOUND_ERR: Raised if oldChild is 
		 not a child of this node.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: if this node is of 
		 type Document, this exception might be raised if the DOM implementation 
		 doesn't support the replacement of the DocumentType child or Element child.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>Returns a reference to the object that is replaced.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>newNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The new node to replace oldChild. If it already exists in the DOM, it is first removed. 
		 </apiDesc></apiParam><apiParam><apiItemName>childNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the existing element to be replaced.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replaces an existing child element with a new child element.
		 
		 </apiDesc><example>
		 <codeblock>
		 // &lt;div&gt;
		 //  &lt;span id="childSpan"&gt;foo bar&lt;/span&gt;
		 // &lt;/div&gt;
		 
		 // create an empty element node
		 // without an ID, any attributes, or any content
		 var sp1 = document.createElement("span");
		 
		 // give it an id attribute called 'newSpan'
		 sp1.setAttribute("id", "newSpan");
		 
		 // create some content for the new element.
		 var sp1_content = document.createTextNode("new replacement span element.");
		 
		 // apply that content to the new element
		 sp1.appendChild(sp1_content);
		 
		 // build a reference to the existing node to be replaced
		 var sp2 = document.getElementById("childSpan");
		 var parentDiv = sp2.parentNode;
		 
		 // replace existing node sp2 with the new span element sp1
		 parentDiv.replaceChild(sp1, sp2);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa925527.aspx"><linktext>MSDN - replaceChild Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.replaceChild"><linktext>MDC - Node.replaceChild()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-785887307"><linktext>W3C - Node.replaceChild()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:selectNodes"><apiName>selectNodes</apiName><shortdesc>
		 Applies the specified pattern-matching operation to this node's context and returns the list of matching nodes as IXMLDOMNodeList.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a collection of nodes selected by an XSL Pattern or XPath query. If no nodes are selected, an empty collection is returned.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>queryString</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A XSLPattern or XPath query that is to be applied to the context defined by this node. The value of the 
		 SelectionLanguage internal property (flag) determines whether an XSLPattern or XPath query is used. By default, the queryString is 
		 an XSLPattern query. The SelectionLanguage internal property (flag) can be set with the setProperty Method.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Applies the specified pattern-matching operation to this node's context and returns the list of matching nodes as IXMLDOMNodeList.
		 
		 <p><b>Note (IE):</b> This method is only valid if the XML Query Language (XQL) feature has been included in the operating 
		 system (OS). If a call to this method is made and XQL is not supported, an error message will be returned. </p>
		 
		 <p><b>Note (IE):</b> The  selectSingleNode method is similar to the selectNodes method, but returns only the first matching 
		 node rather than the list of all matching nodes.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926403.aspx"><linktext>MSDN - selectNodes Method</linktext></link><link href="dom.core.xml#Node/selectSingleNode()"><linktext>selectSingleNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:selectSingleNode"><apiName>selectSingleNode</apiName><shortdesc>
		 Applies the specified pattern-matching operation to this node's context and returns the first matching node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns the first node that matches the XSL or XPath query. If no nodes match the query, it returns Null.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>queryString</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A Extensible Stylesheet Language (XSL) or XPath query that is to be applied to the context defined by 
		 this node. The value of the SelectionLanguage internal property (flag) determines whether an XSL or XPath query is used. 
		 By default, the expression is an XSL pattern query. The SelectionLanguage internal property (flag) can be set with the 
		 setProperty method.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Applies the specified pattern-matching operation to this node's context and returns the first matching node.
		 
		 <p><b>Note (IE):</b> This method is only valid if the XML Query Language (XQL) feature has been included in 
		 the OS. If a call to this method is made and XQL is not supported, an error message will be returned. </p>
		 
		 <p><b>Note (IE):</b> The selectSingleNode method is similar to the  selectNodes Method, but returns only 
		 the first matching node rather than the list of all matching nodes.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924233.aspx"><linktext>MSDN - selectSingleNode Method</linktext></link><link href="dom.core.xml#Node/selectNodes()"><linktext>selectNodes()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:setUserData"><apiName>setUserData</apiName><shortdesc>
		 Associate an object to a key on this node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns the DOMUserData previously associated to the given key on this node, or null if there was none.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMUserData</apiOperationClassifier></apiReturn><apiParam><apiItemName>key</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The key to associate the object to.
		 </apiDesc></apiParam><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>dom.core.types:DOMUserData</apiOperationClassifier><apiDesc>The object to associate to the given key, or null to remove any existing association to that key.
		 </apiDesc></apiParam><apiParam><apiItemName>handler</apiItemName><apiOperationClassifier>dom.core:UserDataHandler</apiOperationClassifier><apiDesc>The handler to associate to that key, or null.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Associate an object to a key on this node. The object can later be 
		 retrieved from this node by calling getUserData with the same key.
		 
		 <p>Allows a user to attach data to an element, without needing to modify the DOM. Note 
		 that such data will not be preserved when imported via importNode, as with cloneNode() 
		 and renameNode() operations (though adoptNode does preserve the information), and equality 
		 tests in isEqualNode() do not consider user data in making the assessment.</p>
		 
		 <p>This method offers the convenience of associating data with specific nodes without needing 
		 to alter the structure of a document and in a standard fashion, but it also means that extra 
		 steps may need to be taken if one wishes to serialize the information or include the 
		 information upon clone, import, or rename operations.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var d = document.implementation.createDocument('', 'test', null); 
		 d.documentElement.setUserData('key', 15, {handle:function (o, k, d, s, ds) {alert(o+'::'+k+'::'+d+'::'+s+'::'+ds)}}); // 2::key::15::[object Element]::[object Element]
		 alert(d.documentElement.getUserData('key')); // 15
		 var e = document.importNode(d.documentElement, true); // causes handler to be called
		 alert(e.getUserData('key')); // null since user data is not copied</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.setUserData"><linktext>MDC - Node.setUserData()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-setUserData"><linktext>W3C - Node.setUserData()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:transformNode"><apiName>transformNode</apiName><shortdesc>
		 Processes this node and its children using the supplied Extensible Stylesheet Language Transformations
		 (XSLT) style sheet and returns the resulting transformation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a string that contains the product of the transformation of this XML document based on the XSLT style sheet.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>styleSheet</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Valid XML document or DOM node that consists of XSLT elements that direct the transformation of this node.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Processes this node and its children using the supplied Extensible Stylesheet Language Transformations
		 (XSLT) style sheet and returns the resulting transformation.
		 
		 <p><b>Note (IE):</b> This method is only valid if the XSLT feature has been included in the operating system 
		 (OS). If a call to this method is made and XSLT is not supported, an error message will be returned. </p>
		 
		 <p><b>Note (IE):</b> The stylesheet parameter must be either a  DOMDocument node, in which case the document 
		 is assumed to be an Extensible Stylesheet Language (XSL) style sheet, or a Document Object Model (DOM) node in the 
		 XSL style sheet, in which case this node is treated as a stand-alone style sheet fragment.</p>
		 
		 <p><b>Note (IE):</b> The source node defines a context in which the style sheet operates, but navigation outside 
		 this scope is allowed. For example, a style sheet can use the id function to access other parts of the document. </p>
		 
		 <p><b>Note (IE):</b> This method supports both stand-alone and embedded style sheets and also provides the 
		 ability to run a localized style sheet fragment against a particular source node.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924913.aspx"><linktext>MSDN - transformNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Node:transformNodeToObject"><apiName>transformNodeToObject</apiName><shortdesc>
		 Processes this node and its children using the supplied Extensible Stylesheet Language Transformations (XSLT) style sheet 
		 and returns the resulting transformation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>styleSheet</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Valid XML document or DOM node that consists of XSLT elements that direct the transformation of this node.
		 </apiDesc></apiParam><apiParam><apiItemName>outputObject</apiItemName><apiType value=""/><apiDesc>On return, contains the product of the transformation of this XML document based on the XSLT style sheet. 
		 If the variant represents the  DOMDocument object, the document is built according to its properties and its child nodes are 
		 replaced during this transformation process. The XML transformation can also be sent to a stream.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Processes this node and its children using the supplied Extensible Stylesheet Language Transformations (XSLT) style sheet 
		 and returns the resulting transformation.
		 
		 <p><b>Note (IE):</b> This method is only valid if the XSLT feature has been included in the operating system (OS). If 
		 a call to this method is made and XSLT is not supported, an error message will be returned. </p>
		 
		 <p><b>Note (IE):</b> The stylesheet parameter must be either a  DOMDocument node, in which case the document is assumed 
		 to be an XSLT style sheet, or a Document Object Model (DOM) node in the XSLT style sheet, in which case this node is treated 
		 as a stand-alone style sheet fragment.</p>
		 
		 <p><b>Note (IE):</b> The source node defines a context in which the style sheet operates, but navigation outside this 
		 scope is allowed. For example, a style sheet can use the id function to access other parts of the document. </p>
		 
		 <p><b>Note (IE):</b> This method supports both stand-alone and embedded style sheets and also provides the ability to 
		 run a localized style sheet fragment against a particular source node.</p>
		 
		 <p><b>Note (IE):</b> The transformNodeToObject method always generates a Unicode byte-order mark, which means it cannot 
		 be used in conjunction with other Active Server Pages (ASP) Response.Write or Response.BinaryWrite calls.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924282.aspx"><linktext>MSDN - transformNodeToObject Method</linktext></link></related-links></apiOperation><apiValue id="dom.core:Node:ATTRIBUTE_NODE"><apiName>ATTRIBUTE_NODE</apiName><shortdesc>
		 The node is an Attr.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is an Attr.
		 
		 <p>The node represents an attribute of an element. An attribute node can have the following child node 
		 types: Text and EntityReference. An attribute does not appear as the child node of any other node type; 
		 note that it is not considered a child node of an element. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ATTRIBUTE_NODE"><linktext>W3C - Node.ATTRIBUTE_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:CDATA_SECTION_NODE"><apiName>CDATA_SECTION_NODE</apiName><shortdesc>
		 The node is a CDATASection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a CDATASection.
		 
		 <p>The node represents a CDATA section in the XML source. CDATA sections are used to escape blocks of text that 
		 would otherwise be recognized as markup. A CDATA section node cannot have any child nodes. A CDATA section node 
		 can appear as the child of the DocumentFragment, EntityReference, and Element nodes.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-CDATA_SECTION_NODE"><linktext>W3C - Node.CDATA_SECTION_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:COMMENT_NODE"><apiName>COMMENT_NODE</apiName><shortdesc>
		 The node is a Comment.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a Comment.
		 
		 <p>The node represents a comment in the XML document. A comment node cannot have any child nodes. A comment node can 
		 appear as the child of Document, DocumentFragment, Element, and EntityReference nodes. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-COMMENT_NODE"><linktext>W3C - Node.COMMENT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_FRAGMENT_NODE"><apiName>DOCUMENT_FRAGMENT_NODE</apiName><shortdesc>
		 The node is a DocumentFragment.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>11</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a DocumentFragment.
		 
		 <p>The node represents a document fragment. A document fragment node associates a node or subtree with a document 
		 without actually being contained within the document. A document fragment node can have the following child node 
		 types: Element, ProcessingInstruction, Comment, Text, CDATASection, and EntityReference. A DocumentFragment node 
		 cannot appear as the child of any node types. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_FRAGMENT_NODE"><linktext>W3C - Node.DOCUMENT_FRAGMENT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_NODE"><apiName>DOCUMENT_NODE</apiName><shortdesc>
		 The node is a Document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a Document.
		 
		 <p>The node represents a document object, which, as the root of the document tree, 
		 provides access to the entire XML document. It is created using the progID 
		 "Msxml2.DOMDocument", or through a data island using &lt;XML&gt; or &lt;SCRIPT LANGUAGE=XML&gt;. A document node can 
		 have the following child node types: Element (maximum of one), ProcessingInstruction, 
		 Comment, and DocumentType. A document node cannot appear as the child of any node types.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_NODE"><linktext>W3C - Node.DOCUMENT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_CONTAINED_BY"><apiName>DOCUMENT_POSITION_CONTAINED_BY</apiName><shortdesc>
		 The node is contained by the reference node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is contained by the reference node. A node which is contained is always following, too.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_CONTAINED_BY"><linktext>W3C - Node.DOCUMENT_POSITION_CONTAINED_BY</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_CONTAINS"><apiName>DOCUMENT_POSITION_CONTAINS</apiName><shortdesc>
		 The node contains the reference node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node contains the reference node. A node which contains is always preceding, too.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_CONTAINS"><linktext>W3C - Node.DOCUMENT_POSITION_CONTAINS</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_DISCONNECTED"><apiName>DOCUMENT_POSITION_DISCONNECTED</apiName><shortdesc>
		 The two nodes are disconnected.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The two nodes are disconnected. Order between disconnected nodes is always implementation-specific.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_DISCONNECTED"><linktext>W3C - Node.DOCUMENT_POSITION_DISCONNECTED</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_FOLLOWING"><apiName>DOCUMENT_POSITION_FOLLOWING</apiName><shortdesc>
		 The node follows the reference node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node follows the reference node.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_FOLLOWING"><linktext>W3C - Node.DOCUMENT_POSITION_FOLLOWING</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"><apiName>DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</apiName><shortdesc>
		 The determination of preceding versus following is implementation-specific.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>32</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The determination of preceding versus following is implementation-specific.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC"><linktext>W3C - Node.DOCUMENT_POSITION_IMPLEMENTATION_SPECIFIC</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_POSITION_PRECEDING"><apiName>DOCUMENT_POSITION_PRECEDING</apiName><shortdesc>
		 The second node precedes the reference node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The second node precedes the reference node.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_POSITION_PRECEDING"><linktext>W3C - Node.DOCUMENT_POSITION_PRECEDING</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:DOCUMENT_TYPE_NODE"><apiName>DOCUMENT_TYPE_NODE</apiName><shortdesc>
		 The node is a DocumentType.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>10</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a DocumentType.
		 
		 <p>The node represents the document type declaration, indicated by the &lt;!DOCTYPE &gt; tag. A document type 
		 node can have the following child node types: Notation and Entity. A document type node can appear as the child 
		 of the Document node. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-DOCUMENT_TYPE_NODE"><linktext>W3C - Node.DOCUMENT_TYPE_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:ELEMENT_NODE"><apiName>ELEMENT_NODE</apiName><shortdesc>
		 The node is an Element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is an Element.
		 
		 <p>The node represents an element. An element node can have the following child node types: Element, 
		 Text, Comment, ProcessingInstruction, CDATASection, and EntityReference. An element node can be the 
		 child of the Document, DocumentFragment, EntityReference, and Element nodes. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ELEMENT_NODE"><linktext>W3C - Node.ELEMENT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:ENTITY_NODE"><apiName>ENTITY_NODE</apiName><shortdesc>
		 The node is an Entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is an Entity.
		 
		 <p>The node represents an expanded entity. An entity node can have child nodes that represent the expanded entity
		 (for example, Text and EntityReference nodes). An entity node can appear as the child of the DocumentType node. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ENTITY_NODE"><linktext>W3C - Node.ENTITY_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:ENTITY_REFERENCE_NODE"><apiName>ENTITY_REFERENCE_NODE</apiName><shortdesc>
		 The node is an EntityReference.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is an EntityReference.
		 
		 <p>The node represents a reference to an entity in the XML document. This applies to all entities, including 
		 character entity references. An entity reference node can have the following child node types: Element, 
		 ProcessingInstruction, Comment, Text, CDATASection, and EntityReference. An entity reference node can appear 
		 as the child of the Attribute, DocumentFragment, Element, and EntityReference nodes.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-ENTITY_REFERENCE_NODE"><linktext>W3C - Node.ENTITY_REFERENCE_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:NOTATION_NODE"><apiName>NOTATION_NODE</apiName><shortdesc>
		 The node is a Notation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>12</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a Notation.
		 
		 <p>A node represents a notation in the document type declaration. A notation node cannot have any child nodes. A notation 
		 node can appear as the child of the DocumentType node. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-NOTATION_NODE"><linktext>W3C - Node.NOTATION_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:PROCESSING_INSTRUCTION_NODE"><apiName>PROCESSING_INSTRUCTION_NODE</apiName><shortdesc>
		 The node is a ProcessingInstruction.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a ProcessingInstruction.
		 
		 <p>The node represents a processing instruction from the XML document. A processing instruction node cannot have any
		 child nodes. A processing instruction node can appear as the child of the Document, DocumentFragment, Element, and EntityReference nodes. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-PROCESSING_INSTRUCTION_NODE"><linktext>W3C - Node.PROCESSING_INSTRUCTION_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:TEXT_NODE"><apiName>TEXT_NODE</apiName><shortdesc>
		 The node is a Text node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The node is a Text node.
		 
		 <p>The node represents the text content of a tag. A text node cannot have any child nodes. A text node can appear as 
		 the child node of the Attribute, DocumentFragment, Element, and EntityReference nodes. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node#Constants"><linktext>MDC - Node Constants</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node-TEXT_NODE"><linktext>W3C - Node.TEXT_NODE</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:attributes:get"><apiName>attributes</apiName><shortdesc>
		 Returns an unordered collection of Attr nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NamedNodeMap</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an unordered collection of Attr nodes. 
		 If the element has no specified attributes, then the returned object 
		 has a length of 0 (zero).
		 
		 <p><b>Note:</b> Trying to modify an Attribute Node that originated 
		 from an inline event assignment (e.g. onclick=) is something developers should 
		 avoid. If you want to use it, be aware that assigning values through the 
		 element.attributeName syntax will assign the JavaScript value for the element. 
		 When read through the same syntax, it will return the latest JavaScript value 
		 for the element attribute, or if it hasn't been assigned yet, the function 
		 generated by parsing the element's inline event assignment.</p>
		 
		 <p><b>Note:</b> Style isn't a "true" HTML attribute node, but a 
		 CCSStyleDeclaration. You can however use the above .attributes syntaxes and 
		 DOM functions to control its value, as well as the element.style.cssText 
		 syntax that returns all CSS attributes, or element.style.CSSattributeName (eg 
		 element.style.position) to control a single CSS attribute. In FireFox, all 
		 the above correctly update the CCSStyleDeclaration object, the element's 
		 attribute nodes and the .attributes collection. Consider quirksmode for 
		 compatibility issues in other browsers (see link below)</p>
		 
		 </apiDesc><example>
		 Numerical indexing is useful for going through all of an element's attributes. The following 
		 example runs through the attribute nodes for the element in the document with id "p1", and 
		 prints each attribute's value.
		 <codeblock>
		 &lt;!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01//EN"
		 "http://www.w3.org/TR/html4/strict.dtd"&gt;
		 
		 &lt;html&gt;
		 
		 	&lt;head&gt;
		 		&lt;title&gt;Attributes example&lt;/title&gt;
		 		&lt;script type="text/javascript"&gt;
		 
		 			function showFirstAttr() {
		 				var firstPara = document.getElementById("p1");
		 				var outputText = document.getElementById("result");
		 
		 				// First, let's verify that the paragraph has some attributes    
		 				if (firstPara.hasAttributes()) {
		 					var attrs = firstPara.attributes;
		 					var text = ""; 
		 					for(var i=attrs.length-1; i&gt;=0; i--) {
		 						text += attrs[i].name + "-&gt;" + attrs[i].value;
		 					}
		 					outputText.value = text;
		 				} else {
		 					outputText.value = "No attributes to show"
		 				};
		 			}
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body&gt;
		 		&lt;p id="p1" style="color: green;"&gt;Sample Paragraph&lt;/p&gt;
		 
		 		&lt;form action=""&gt;
		 			&lt;p&gt;&lt;input type="button" value="Show first attribute name and value"
		 				onclick="showFirstAttr();"&gt;
		 			&lt;input id="result" type="text" value=""&gt;&lt;/p&gt;
		 		&lt;/form&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa922712.aspx"><linktext>MSDN - attributes Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.attributes"><linktext>MDC - Node.attributes</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-84CF096"><linktext>W3C - Node.attributes</linktext></link><link href="http://www.quirksmode.org/dom/w3c_core.html#attributes"><linktext>Quirksmode - Attributes</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:baseName:get"><apiName>baseName</apiName><shortdesc>
		 Returns the base name for the name qualified with the namespace.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the base name for the name qualified with the namespace.
		 
		 <p>It returns the right-hand side of a namespace qualified name. 
		 For example, it returns yyy for the element &lt;xxx:yyy&gt;. It always 
		 returns a non-empty string.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924236.aspx"><linktext>MSDN - baseName Property</linktext></link><link href="dom.core.xml#Node/localName"><linktext>localName</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:baseURI:get"><apiName>baseURI</apiName><shortdesc>
		 The absolute base URI of this node or null if the implementation 
		 wasn't able to obtain an absolute URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The absolute base URI of this node or null if the implementation 
		 wasn't able to obtain an absolute URI. This value is computed as 
		 described in Base URIs. However, when the Document supports the 
		 feature "HTML" [DOM Level 2 HTML], the base URI is computed using 
		 first the value of the href attribute of the HTML BASE element if 
		 any, and the value of the documentURI  attribute from the Document 
		 interface otherwise.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.baseURI"><linktext>MDC - Node.baseURI</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-baseURI"><linktext>W3C - Node.baseURI</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:childNodes:get"><apiName>childNodes</apiName><shortdesc>
		 Returns an ordered collection of node objects that are children of 
		 the current element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NodeList</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an ordered collection of node objects that are children of 
		 the current element. If the element has no children, then the returned 
		 NodeList contains no node. 
		 
		 <p><b>Note:</b> The items in the collection of nodes are objects 
		 and not strings. To get data from those node objects, you must use their 
		 properties (e.g. elementNodeReference.childNodes[1].nodeName to get the name, etc.). </p>
		 
		 <p><b>Note:</b> The document object itself has 2 children: the 
		 Doctype declaration and the root element, typically referred to as documentElement. 
		 (In (X)HTML documents this is the HTML element.) </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // parg is an object reference to a &lt;p&gt; element
		 if (parg.hasChildNodes()) {
		 	// So, first we check if the object is not empty, if the object has child nodes
		 	var children = parg.childNodes;
		 	for (var i = 0; i &lt; children.length; i++) {
		 		// do something with each child as children[i]
		 		// NOTE: List is live, Adding or removing children will change the list
		 	};
		 };</codeblock>
		 
		 <codeblock>
		 // This is one way to remove all children from a node
		 // box is an object refrence to an element with children
		 while (box.firstChild) {
		 	//The list is LIVE so it will re-index each call
		 	box.removeChild(box.firstChild);
		 };</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923287.aspx"><linktext>MSDN - childNodes Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.childNodes"><linktext>MDC - Node.childNodes</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1451460987"><linktext>W3C - Node.childNodes</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:dataType:get"><apiName>dataType</apiName><shortdesc>
		 Specifies the data type for this node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc>
		 Specifies the data type for this node.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>NODE_ATTRIBUTE</entry>
		 		<entry>Contains the string representation of the data type specifier included in the schema, or Null if no data type is specified.</entry>
		 	</row><row>
		 		<entry>NODE_CDATA_SECTION, NODE_COMMENT, NODE_DOCUMENT, NODE_DOCUMENT_FRAGMENT, NODE_DOCUMENT_TYPE, NODE_ENTITY, NODE_NOTATION, NODE_PROCESSING_INSTRUCTION, NODE_TEXT</entry>
		 		<entry>Contains the constant string value "string." These node types do not have data types, so the dataType property cannot be set for these node types. Attempts to set this property are ignored. </entry>
		 	</row><row>
		 		<entry>NODE_ELEMENT</entry>
		 		<entry>Contains the string representation of the data type specifier included on the instance of the element or in the schema, or Null if no data type is specified.</entry>
		 	</row><row>
		 		<entry>NODE_ENTITY_REFERENCE</entry>
		 		<entry>Contains the string representation of the data type specifier for the referenced entity. This is limited to entities with a single data type on the root level element of the subtree corresponding to the entity. Contains Null if no data type is specified. It is not possible to set the data type of an entity reference. The data type must be set directly on the referenced element. Attempts to set the value of the dataType property are ignored. </entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924038.aspx"><linktext>MSDN - dataType Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:definition:get"><apiName>definition</apiName><shortdesc>
		 Returns the definition of the node in the document type definition (DTD) or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the definition of the node in the document type definition (DTD) or schema.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>NODE_ENTITY_REFERENCE</entry>
		 		<entry>Returns the node for the entity referenced; that is, the ENTITY element that was defined for a given ENTITYREF. Given the ENTITYREF &amp;x;, for example, the definition property returns the node in the DOCTYPE node's entity collection that defines the corresponding ENTITY: &lt;!ENTITY x "y"&gt;. </entry>
		 	</row><row>
		 		<entry>NODE_ENTITY</entry>
		 		<entry>For unparsed entities, returns the NOTATION definition from the DOCTYPE node's notation collection. For example, given the ENTITY &lt;!ENTITY networth SYSTEM "networth.xls" NDATA XLS&gt;, the definition property returns the node corresponding to the notation &lt;!NOTATION XLS PUBLIC "http://example.microsoft.com/office/excel"&gt;. For parsed entities, returns Null. </entry>
		 	</row><row>
		 		<entry>NODE_ATTRIBUTE</entry>
		 		<entry>Returns the XML-Data Schema AttributeType for a given ATTRIBUTE node. For example, the definition property for the attribute myAttribute="123" returns the node corresponding to the element &lt;AttributeType name= "myAttribute"&gt; in the schema. Returns Null when a DTD is used or when no schema is present. </entry>
		 	</row><row>
		 		<entry>NODE_ELEMENT</entry>
		 		<entry>Returns the XML-Data Schema ElementType for a given ELEMENT node. For example, given the element &lt;myelement&gt;, the definition property returns the node &lt;ElementType name="myelement"&gt; in the specified external schema. Returns Null when a DTD is used or when no schema is present. </entry>
		 	</row><row>
		 		<entry>NODE_CDATA_SECTION, NODE_COMMENT, NODE_DOCUMENT, NODE_DOCUMENT_FRAGMENT, NODE_DOCUMENT_TYPE, NODE_NOTATION, NODE_PROCESSING_INSTRUCTION, NODE_TEXT</entry>
		 		<entry>Returns Null.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa925478.aspx"><linktext>MSDN - definition Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:firstChild:get"><apiName>firstChild</apiName><shortdesc>
		 Returns the node's first child in the tree, or null if the node is 
		 childless.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node's first child in the tree, or null if the node is 
		 childless. If the node is a Document, it returns the first node in 
		 the list of its direct children.
		 
		 <p><b>Note:</b> When applied to a document node, the returned node is not 
		 necessarily the root element of the document; it can also be a 
		 processing instruction, for example. If you need the root element, 
		 use document.documentElement.</p>
		 
		 </apiDesc><example>
		 This example demonstrates the use of firstChild and how whitespace nodes might interfere with using this property.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.firstChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 <p>In the above, the alert will show '#text' because a text node is inserted to maintain 
		 the whitespace between the end of the opening &lt;p&gt; and &lt;span&gt; tags. Any whitespace will 
		 cause the #text node to be inserted, from a single space to any number of spaces, returns, 
		 tabs, and so on.</p>
		 
		 <p>Another #text node is inserted between the closing &lt;/span&gt; and &lt;/p&gt; tags.</p>
		 
		 <p>If this whitespace is removed from the source, the #text nodes are not inserted and 
		 the span element becomes the paragraph's first child.</p>
		 
		 <codeblock>
		 &lt;p id="para-01"&gt;&lt;span&gt;First span&lt;/span&gt;&lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.firstChild.nodeName)
		 &lt;/script&gt;</codeblock>
		 
		 <p>Now the alert will show 'SPAN'.</p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926506.aspx"><linktext>MSDN - firstChild Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.firstChild"><linktext>MDC - Node.firstChild</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-169727388"><linktext>W3C - Node.firstChild</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:lastChild:get"><apiName>lastChild</apiName><shortdesc>
		 Returns the last child of a node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the last child of a node. Returns null if there are no child elements. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var tr = document.getElementById("row1");
		 corner_td = tr.lastChild;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923308.aspx"><linktext>MSDN - lastChild Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.lastChild"><linktext>MDC - Node.lastChild</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-61AD09FB"><linktext>W3C - Node.lastChild</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:localName:get"><apiName>localName</apiName><shortdesc>
		 Returns the local part of the qualified name of this node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the local part of the qualified name of this node. 
		 
		 <p><b>Note:</b> The local name of a node is that part of the node's 
		 qualified name that comes after the colon. Qualified names are typically used 
		 in XML as part of the namespace(s) of the particular XML documents. For 
		 example, in the qualified name ecomm:partners, partners is the local name 
		 and ecomm is the prefix: 
		 
		 <codeblock>
		 &lt;ecomm:business id="soda_shop" type="brick_n_mortar"&gt;
		 &lt;ecomm:partners&gt;
		 &lt;ecomm:partner id="1001"&gt;Tony's Syrup Warehouse&lt;/ecomm:partner&gt;
		 &lt;/ecomm:partners&gt;
		 &lt;/ecomm:business&gt;</codeblock></p>
		 
		 <p>For nodes of any type other than ELEMENT_NODE and ATTRIBUTE_NODE and nodes 
		 created with a DOM Level 1 method, such as document.createElement, localName 
		 is always null.</p>
		 
		 </apiDesc><example>
		 (Must be served with XML content type, such as text/xml or application/xhtml+xml.) 
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"
		 	xmlns:svg="http://www.w3.org/2000/svg"&gt;
		 &lt;head&gt;
		 	&lt;script type="application/javascript"&gt;&lt;![CDATA[
		 	function test() {
		 		var text = document.getElementById('text');
		 		var circle = document.getElementById('circle');
		 
		 		text.value = "&lt;svg:circle&gt; has:\n" +
		 			"localName = '" + circle.localName + "'\n" +
		 			"namespaceURI = '" + circle.namespaceURI + "'";
		 		}
		 	]]&gt;&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onload="test()"&gt;
		 
		 	&lt;svg:svg version="1.1"
		 		width="100px" height="100px"
		 		viewBox="0 0 100 100"&gt;
		 		&lt;svg:circle cx="50" cy="50" r="30" style="fill:#aaa" id="circle"/&gt;
		 	&lt;/svg:svg&gt;
		 	&lt;textarea id="text" rows="4" cols="55"/&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.localName"><linktext>MDC - Node.localName</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSLocalN"><linktext>W3C - Node.localName</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:namespaceURI:get"><apiName>namespaceURI</apiName><shortdesc>
		 The namespace URI of the node, or null if it is unspecified (read-only).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The namespace URI of the node, or null if it is unspecified (read-only). 
		 When the node is a document, it returns the XML namespace for the 
		 current document.
		 
		 <p><b>Note:</b> This is not a computed value that is the result of a namespace lookup 
		 based on an examination of the namespace declarations in scope. It is 
		 merely the namespace URI given at creation time.</p>
		 
		 <p><b>Note:</b> For nodes of any nodeType other than ELEMENT_NODE and ATTRIBUTE_NODE, 
		 and nodes created with a DOM Level 1 method, such as document.createElement, 
		 the value of namespaceURI is always null.</p>
		 
		 <p><b>Note:</b> You can create an element with the specified namespaceURI using the DOM 
		 Level 2 method document.createElementNS.</p>
		 
		 <p><b>Note:</b> Per the Namespaces in XML specification, an attribute does not inherit 
		 its namespace from the element it is attached to. If an attribute is not 
		 explicitly given a namespace, it has no namespace.</p>
		 
		 <p><b>Note:</b> The DOM does not handle or enforce namespace validation per se. It is up 
		 to the DOM application to do any validation necessary. Note too that the 
		 namespace prefix, once it is associated with a particular node, cannot 
		 be changed.</p>
		 
		 </apiDesc><example>
		 In this snippet, a node is being examined for its localName and its namespaceURI. If the namespaceURI 
		 returns the XUL namespace and the localName returns "browser", then the node is understood to be a 
		 XUL <codeph>&lt;browser/&gt;</codeph>.
		 <codeblock>
		 if (node.localName == "browser" &amp;&amp; 
		 	node.namespaceURI == "http://www.mozilla.org/keymaster/gatekeeper/there.is.only.xul") {
		 	// this is a XUL browser 
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923270.aspx"><linktext>MSDN - namespaceURI Property (IXMLDOMNode)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.namespaceURI"><linktext>MDC - Node.namespaceURI</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSname"><linktext>W3C - Node.namespaceURI</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nextSibling:get"><apiName>nextSibling</apiName><shortdesc>
		 Returns the node immediately following the specified one in its 
		 parent's childNodes list, or null if the specified node is the 
		 last node in that list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node immediately following the specified one in its 
		 parent's childNodes list, or null if the specified node is the 
		 last node in that list. 
		 
		 <p><b>Note (Mozilla):</b> Gecko-based browsers insert text nodes into a document to represent 
		 whitespace in the source markup. Therefore a node obtained for example via 
		 firstChild or previousSibling may refer to a whitespace text node, rather 
		 than the actual element the author intended to get. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-01').nextSibling;
		 	document.write('&lt;p&gt;Siblings of div-01&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.nextSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;
		 </codeblock>
		 
		 <codeblock>
		 /~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
		 	The following is written to the page as it loads:
		 
		 		Siblings of div-01
		 
		 		1. #text
		 		2. DIV
		 		3. #text
		 		4. SCRIPT
		 		5. P
		 		6. OL
		 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~/
		 </codeblock>
		 
		 In the above example, it can be seen that #text nodes are inserted in the DOM where whitespace 
		 occurs in the markup between tags (i.e. after the closing tag of an element and before the 
		 opening tag of the next). No whitespace is created between the elements inserted by the 
		 document.write statement.
		 
		 <p>The possible inclusion of text nodes in the DOM must be allowed for when traversing the DOM 
		 using nextSibling. See the resources in the Notes section.</p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa922802.aspx"><linktext>MSDN - nextSibling Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.nextSibling"><linktext>MDC - Node.nextSibling</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6AC54C2F"><linktext>W3C - Node.nextSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeName:get"><apiName>nodeName</apiName><shortdesc>
		 Returns the name of the current node as a string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the name of the current node as a string. 
		 
		 <p><b>Note:</b> Here are the returned values for different types of nodes:
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Interface</entry><entry>nodeName</entry></row></thead><tbody><row>
		 		<entry>Attr</entry><entry>same as Attr.name</entry>
		 	</row><row>
		 		<entry>CDATASection</entry><entry>"#cdata-section"</entry>
		 	</row><row>
		 		<entry>Comment</entry><entry>"#comment"</entry>
		 	</row><row>
		 		<entry>Document</entry><entry>"#document"</entry>
		 	</row><row>
		 		<entry>DocumentFragment</entry><entry>"#document-fragment"</entry>
		 	</row><row>
		 		<entry>DocumentType</entry><entry>same as DocumentType.name</entry>
		 	</row><row>
		 		<entry>Element</entry><entry>same as Element.tagName</entry>
		 	</row><row>
		 		<entry>Entity</entry><entry>entity name</entry>
		 	</row><row>
		 		<entry>EntityReference</entry><entry>name of entity reference</entry>
		 	</row><row>
		 		<entry>Notation</entry><entry>notation name</entry>
		 	</row><row>
		 		<entry>ProcessingInstruction</entry><entry>same as ProcessingInstruction.target</entry>
		 	</row><row>
		 		<entry>text</entry><entry>"#text"</entry>
		 	</row></tbody></tgroup></adobetable>
		 </p>
		 
		 </apiDesc><example>
		 Given the following markup: 
		 <codeblock>
		 &lt;div id="d1"&gt;hello world&lt;/div&gt;
		 &lt;input type="text" id="t"/&gt;</codeblock>
		 
		 <p>and the following script: </p>
		 
		 <codeblock>
		 var div1 = document.getElementById("d1");
		 var text_field = document.getElementById("t"); 
		 text_field.value = div1.nodeName;</codeblock>
		 
		 <p>In XHTML (or any other XML format), text_field's value would read "div". However, in HTML, 
		 text_field's value would read "DIV". </p>
		 
		 <p>Note that tagName property could have been used instead, since nodeName has the same value 
		 as tagName for an element. Bear in mind, however, that nodeName will return #text for text 
		 nodes while tagName will return undefined. </p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924892.aspx"><linktext>MSDN - nodeName Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.nodeName"><linktext>MDC - Node.nodeName</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-F68D095"><linktext>W3C - Node.nodeName</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodePrincipal:get"><apiName>nodePrincipal</apiName><shortdesc>
		 Returns the nsIPrincipal  object representing current security 
		 context of the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIPrincipal</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the nsIPrincipal  object representing current security 
		 context of the node.
		 
		 <p><b>Note:</b> This property exists on all nodes (HTML, XUL, SVG, MathML, 
		 etc.), but only if the script trying to use it has UniversalXPConnect privileges.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Node.nodePrincipal"><linktext>MDC - Node.nodePrincipal</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeType:get"><apiName>nodeType</apiName><shortdesc>
		 Returns an integer code representing the type of the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns an integer code representing the type of the node. 
		 
		 </apiDesc><example>
		 This example checks if the first node inside the document element is a comment node, 
		 and if it is not, displays a message.
		 <codeblock>
		 var node = document.documentElement.firstChild;
		 if(node.nodeType != Node.COMMENT_NODE)
		 alert("You should comment your code well!");</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926537.aspx"><linktext>MSDN - nodeType Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.nodeType"><linktext>MDC - Node.nodeType</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-111237558"><linktext>W3C - Node.nodeType</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeTypeString:get"><apiName>nodeTypeString</apiName><shortdesc>
		 Returns the node type in string form.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node type in string form.
		 
		 </apiDesc><example>
		 This value depends on the value of the nodeType property.
		 <codeblock>NODE_ATTRIBUTE == "attribute"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924285.aspx"><linktext>MSDN - nodeTypeString Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeTypedValue:get"><apiName>nodeTypedValue</apiName><shortdesc>
		 Contains the node value expressed in its defined data type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="any"/></apiValueDef><apiDesc>
		 Contains the node value expressed in its defined data type.
		 
		 <p><b>Note:</b> This value depends on the value of the  nodeType property of the IXMLDOMNode.</p>
		 
		 <p><b>Note:</b> The data type for this node is defined in its  dataType Property. 
		 This property also depends on the value of the node type, in the  nodeType property. </p>
		 
		 <p><b>Note:</b> Although you can explicitly set the nodeTypedValue property with a 
		 particular data type in the VARIANT, the set operation does not change the data type. The value 
		 in the VARIANT is coerced to the data type specified in the dataType property, and the set 
		 operation returns an error if the type coercion is not possible. </p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>NODE_ATTRIBUTE</entry>
		 		<entry>Returns the value in the data representation of the type specified in the schema for the attribute. (Data types are specified using the dt:dt attribute, and because attributes cannot be applied to attributes, the attribute's data type can be specified only in the schema.) If no type was specified, returns a string identical to the  nodeValue property. If the new value is not of the type specified in the schema or cannot be coerced to the type specified in the schema, then an error occurs. </entry>
		 	</row><row>
		 		<entry>NODE_CDATA_SECTION, NODE_COMMENT, NODE_DOCUMENT, NODE_DOCUMENT_FRAGMENT, NODE_DOCUMENT_TYPE, NODE_ENTITY, NODE_NOTATION, NODE_PROCESSING_INSTRUCTION</entry>
		 		<entry>Returns a string that is equal to the nodeValue property. These node types do not have data types. </entry>
		 	</row><row>
		 		<entry>NODE_ELEMENT</entry>
		 		<entry>eturns the value in the data representation of the type specified on the element instance (using the dt:dt attribute) or specified in the schema. If no type was specified on the instance or in the schema, returns a string identical to the  nodeValue property. If the element has an attribute data type, returns null.</entry>
		 	</row><row>
		 		<entry>NODE_ENTITY_REFERENCE</entry>
		 		<entry>Returns the value in the data representation of the type specified for the referenced entity. This is limited to entities with a single data type on the root level element of the subtree corresponding to the entity. If no data type was specified, returns a string identical to the  nodeValue property. </entry>
		 	</row><row>
		 		<entry>NODE_TEXT</entry>
		 		<entry>Returns the value in the data representation of the type of the containing element. If the containing element was not typed, returns a string identical to the  nodeValue property. </entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Data Type Mapping</b></p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 	
		 <tgroup cols="2"><thead><row><entry>VARIANT returned</entry><entry>Corresponding element data type</entry></row></thead><tbody><row>
		 		<entry>VT_BSTR</entry>
		 		<entry>string</entry>
		 	</row><row>
		 		<entry>VT_BSTR</entry>
		 		<entry>number</entry>
		 	</row><row>
		 		<entry>VT_I4</entry>
		 		<entry>Int</entry>
		 	</row><row>
		 		<entry>VT_CY</entry>
		 		<entry>Fixed.14.4</entry>
		 	</row><row>
		 		<entry>VT_BOOL</entry>
		 		<entry>Boolean</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>dateTime</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>dateTime.tz</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>Date</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>Time</entry>
		 	</row><row>
		 		<entry>VT_DATE</entry>
		 		<entry>Time.tz</entry>
		 	</row><row>
		 		<entry>VT_I1</entry>
		 		<entry>i1 byte</entry>
		 	</row><row>
		 		<entry>VT_I2</entry>
		 		<entry>i2</entry>
		 	</row><row>
		 		<entry>VT_I4</entry>
		 		<entry>i4, int</entry>
		 	</row><row>
		 		<entry>VT_UI1</entry>
		 		<entry>ui1</entry>
		 	</row><row>
		 		<entry>VT_UI2</entry>
		 		<entry>ui2</entry>
		 	</row><row>
		 		<entry>VT_UI4</entry>
		 		<entry>ui4</entry>
		 	</row><row>
		 		<entry>VT_FLOAT</entry>
		 		<entry>r4</entry>
		 	</row><row>
		 		<entry>VT_DOUBLE</entry>
		 		<entry>r8, float</entry>
		 	</row><row>
		 		<entry>VT_BSTR</entry>
		 		<entry>uuid</entry>
		 	</row><row>
		 		<entry>VT_ARRAY</entry>
		 		<entry>bin.hex</entry>
		 	</row><row>
		 		<entry>VT_ARRAY</entry>
		 		<entry>bin.base64</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923262.aspx"><linktext>MSDN - nodeTypedValue Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:nodeValue:get"><apiName>nodeValue</apiName><shortdesc>
		 Returns or sets the value of the current node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised 
		 when the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>DOMSTRING_SIZE_ERR: Raised when it 
		 would return more characters than fit in a DOMString variable 
		 on the implementation platform.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Returns or sets the value of the current node.
		 
		 <p><b>Note:</b> For the document itself, nodeValue returns null. For text, comment, 
		 and CDATA nodes, nodeValue returns the content of the node. For 
		 attribute nodes, the value of the attribute is returned.</p>
		 
		 <p><b>Note:</b> The following table shows the return values for different elements:
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Interface</entry><entry>nodeValue</entry></row></thead><tbody><row>
		 		<entry>Attr</entry><entry>value of attribute</entry>
		 	</row><row>
		 		<entry>CDATASection</entry><entry>content of the CDATA Section</entry>
		 	</row><row>
		 		<entry>Comment</entry><entry>content of the comment</entry>
		 	</row><row>
		 		<entry>Document</entry><entry>null</entry>
		 	</row><row>
		 		<entry>DocumentFragment</entry><entry>null</entry>
		 	</row><row>
		 		<entry>DocumentType</entry><entry>null</entry>
		 	</row><row>
		 		<entry>Element</entry><entry>null</entry>
		 	</row><row>
		 		<entry>Entity</entry><entry>null</entry>
		 	</row><row>
		 		<entry>EntityReference</entry><entry>null</entry>
		 	</row><row>
		 		<entry>Notation</entry><entry>null</entry>
		 	</row><row>
		 		<entry>ProcessingInstruction</entry><entry>entire content excluding the target</entry>
		 	</row><row>
		 		<entry>text</entry><entry>content of the text node</entry>
		 	</row></tbody></tgroup></adobetable>
		 </p>
		 
		 <p><b>Note:</b> When nodeValue is defined to be null, setting it has no effect.</p> 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924151.aspx"><linktext>MSDN - nodeValue Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.nodeValue"><linktext>MDC - Node.nodeValue</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-F68D080"><linktext>W3C - Node.nodeValue</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:ownerDocument:get"><apiName>ownerDocument</apiName><shortdesc>
		 The Document object associated with this node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 The Document object associated with this node. This is also the 
		 Document object used to create new nodes. 
		 
		 <p><b>Note:</b> When this node is a 
		 Document or a DocumentType which is not used with any Document 
		 yet, this is null.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // given a node "p", get the top-level HTML child 
		 // of the document object
		 d = p.ownerDocument; 
		 html = d.documentElement;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa922810.aspx"><linktext>MSDN - ownerDocument Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.ownerDocument"><linktext>MDC - Node.ownerDocument</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#node-ownerDoc"><linktext>W3C - Node.ownerDocument</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:parentNode:get"><apiName>parentNode</apiName><shortdesc>
		 Returns the parent of the specified node in the DOM tree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the parent of the specified node in the DOM tree. 
		 
		 <p><b>Note:</b> parentNode returns null for the following node types: Attr, Document, DocumentFragment, Entity, and Notation. </p>
		 
		 <p><b>Note:</b> It also returns null if the node has just been created and is not yet attached to the tree. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if (node.parentNode) {
		 	// remove a node from the tree, unless it's not in the tree already
		 	node.parentNode.removeChild(node);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923284.aspx"><linktext>MSDN - parentNode Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.parentNode"><linktext>MDC - Node.parentNode</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1060184317"><linktext>W3C - Node.parentNode</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:parsed:get"><apiName>parsed</apiName><shortdesc>
		 Indicates the parsed status of the node and child nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates the parsed status of the node and child nodes.
		 
		 <p><b>Note:</b> During asynchronous access, not all of the document tree may be available. 
		 Before performing some operations, such as Extensible Stylesheet Language Transformations (XSLT) or 
		 pattern-matching operations, it is useful to know whether the entire tree below this node is available 
		 for processing. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa926456.aspx"><linktext>MSDN - parsed Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:prefix:get"><apiName>prefix</apiName><shortdesc>
		 Returns the namespace prefix of the specified node, or null if no 
		 prefix is specified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified prefix contains an illegal character according to the XML 
		 version in use specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the specified 
		 prefix is malformed per the Namespaces in XML specification, if the 
		 namespaceURI of this node is null, if the specified prefix is "xml" 
		 and the namespaceURI of this node is different from 
		 "http://www.w3.org/XML/1998/namespace", if this node is an attribute 
		 and the specified prefix is "xmlns" and the namespaceURI of this node 
		 is different from "http://www.w3.org/2000/xmlns/", or if this node is 
		 an attribute and the qualifiedName of this node is "xmlns" 
		 [XML Namespaces].
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Returns the namespace prefix of the specified node, or null if no 
		 prefix is specified. 
		 
		 <p><b>Note:</b> This will only work when a namespace-aware parser 
		 is used, i.e. when a document is served with an XML mime-type. This will not 
		 work for HTML documents. </p>
		 
		 </apiDesc><example>
		 The following alerts "x". 
		 <codeblock>&lt;x:div onclick="alert(this.prefix)"/&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa922812.aspx"><linktext>MSDN - prefix Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.prefix"><linktext>MDC - Node.prefix</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-NodeNSPrefix"><linktext>W3C - Node.prefix</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:previousSibling:get"><apiName>previousSibling</apiName><shortdesc>
		 Returns the node immediately preceding the specified one in its 
		 parent's childNodes list, null if the specified node is the first 
		 in that list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node immediately preceding the specified one in its 
		 parent's childNodes list, null if the specified node is the first 
		 in that list. 
		 
		 <p><b>Note (Mozilla):</b> Gecko-based browsers insert text nodes into a document to represent 
		 whitespace in the source markup. Therefore a node obtained for 
		 example via firstChild or previousSibling may refer to a whitespace 
		 text node, rather than the actual element the author intended to get.</p>
		 
		 <p><b>Note:</b> To navigate the opposite way through the child nodes list use element.nextSibling. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // &lt;a&gt;&lt;b1 id="b1"/&gt;&lt;b2 id="b2"/&gt;&lt;/a&gt;
		 alert(document.getElementById("b1").previousSibling); // null
		 alert(document.getElementById("b2").previousSibling.id); // "b1"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923340.aspx"><linktext>MSDN - previousSibling Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Node.previousSibling"><linktext>MDC - Node.previousSibling</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-640FB3C8"><linktext>W3C - Node.previousSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:specified:get"><apiName>specified</apiName><shortdesc>
		 Indicates whether the node (usually an attribute) is explicitly specified or derived 
		 from a default value in the document type definition (DTD) or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates whether the node (usually an attribute) is explicitly specified or derived 
		 from a default value in the document type definition (DTD) or schema.
		 
		 <p>Only returns true for attribute nodes if the attribute was specified directly on the element. 
		 Returns false for default attributes and all other node types.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924210.aspx"><linktext>MSDN - specified Property</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:text:get"><apiName>text</apiName><shortdesc>
		 Represents the text content of the node or the concatenated text representing the node and its descendants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the text content of the node or the concatenated text representing the node and its descendants.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>NODE_ATTRIBUTE, NODE_DOCUMENT, NODE_ENTITY</entry>
		 		<entry>Returns a string representing the value of the node. This is the concatenated text of all subnodes with entities expanded. </entry>
		 	</row><row>
		 		<entry>NODE_CDATA_SECTION, NODE_COMMENT, NODE_PROCESSING_INSTRUCTION, NODE_TEXT</entry>
		 		<entry>Returns the text contained in the node, which is the same as the  nodeValue property.</entry>
		 	</row><row>
		 		<entry>NODE_DOCUMENT_TYPE, NODE_NOTATION</entry>
		 		<entry>Returns the empty string (""). These node types do not have associated text. </entry>
		 	</row><row>
		 		<entry>NODE_DOCUMENT_FRAGMENT</entry>
		 		<entry>Returns the text comprised of the concatenation of all descendant nodes.</entry>
		 	</row><row>
		 		<entry>NODE_ELEMENT</entry>
		 		<entry>Contains a string that represents the element content. Note that this will also include the text content from all child elements, concatenated in document order. For example, consider the following XML: 
		 			<codeblock>&lt;count&gt;
  &lt;item&gt;one&lt;/item&gt;
  &lt;item&gt;two&lt;/item&gt;
  &lt;item&gt;three&lt;/item&gt;

  &lt;item&gt;four&lt;/item&gt;
&lt;/count&gt;
		 			</codeblock>
		 			The text property for the &lt;count&gt; element contains the value "one two three four".
		 		</entry>
		 	</row><row>
		 		<entry>NODE_ENTITY_REFERENCE</entry>
		 		<entry>Returns the string representation of the entity reference.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note:</b> When concatenated, the text represents the contents of text or CDATA nodes. All 
		 concatenated text nodes are normalized according to xml:space attributes and the value of the preserveWhiteSpace 
		 switch. Concatenated CDATA text is not normalized. (Child nodes that contain NODE_COMMENT and 
		 NODE_PROCESSING_INSTRUCTION nodes are not concatenated.) </p>
		 
		 <p><b>Note:</b> Retrieves and sets the string representing the text contents of this node or the 
		 concatenated text representing this node and its descendants.</p>
		 
		 <p><b>Note:</b> For more precise control over text manipulation in an XML document, use the lower-level 
		 nodeValue property, which returns the raw text associated with a NODE_TEXT node.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;root att="   123   a   &lt;   "&gt;
		 	&lt;a&gt;   a   a   &lt;/a&gt;
		 	&lt;!--   comment   b   --&gt;
		 	&lt;?pi   pi   c   ?&gt;
		 
		 	&lt;![CDATA[   cdata   d   ]]&gt;
		 	e   f
		 &lt;/root&gt;</codeblock>
		 
		 <p>The text property for the root element returns the following concatenated text.</p>
		 
		 <codeblock>"a a   cdata   d    e f"</codeblock>
		 
		 <p>Note that the white space within the CDATA node is preserved.</p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa924259.aspx"><linktext>MSDN - text Property</linktext></link><link href="dom.core.xml#Node/textContent"><linktext>textContent</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:textContent:get"><apiName>textContent</apiName><shortdesc>
		 Gets or sets the text content of a node and its descendants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised 
		 when the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>DOMSTRING_SIZE_ERR: Raised when it 
		 would return more characters than fit in a DOMString variable on 
		 the implementation platform.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Gets or sets the text content of a node and its descendants.
		 
		 <p><b>Note:</b> textContent returns null if the element is a document, a document 
		 type, or a notation. To grab all of the text and CDATA data for the 
		 whole document, one could usedocument.documentElement.textContent.</p>
		 
		 <p><b>Note:</b> If the node is a CDATA section, a comment, a processing instruction, 
		 or a text node, textContent returns the text inside this node (the nodeValue).</p>
		 
		 <p><b>Note:</b> For other node types, textContent returns the concatenation of the 
		 textContent attribute value of every child node, excluding comments 
		 and processing instruction nodes. This is an empty string if the node 
		 has no children.</p>
		 
		 <p><b>Note:</b> Setting this property on a node removes all of its children and replaces 
		 them with a single text node with the given value.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Given the following HTML fragment:
		 //   &lt;div id="divA"&gt;This is &lt;span&gt;some&lt;/span&gt; text&lt;/div&gt;
		 
		 // Get the text content:
		 var text = document.getElementById("divA").textContent;
		 // |text| is set to "This is some text".
		 
		 // Set the text content:
		 document.getElementById("divA").textContent = "This is some text";
		 // The HTML for divA is now:
		 //   &lt;div id="divA"&gt;This is some text&lt;/div&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Node3-textContent"><linktext>W3C - Node.textContent</linktext></link></related-links></apiValue><apiValue id="dom.core:Node:xml:get"><apiName>xml</apiName><shortdesc>
		 Contains the XML representation of the node and all its descendants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Contains the XML representation of the node and all its descendants.
		 
		 <p><b>Note:</b> The xml property always returns a Unicode string. That is, the xml property 
		 for DOMDocument converts the document from its original encoding to Unicode. As a result, the original 
		 encoding attribute is removed. For example, &lt;?xml version="1.0" encoding="UTF-8"?&gt; appears in the xml 
		 property as follows.</p>
		 
		 <codeblock>&lt;?xml version="1.0"?&gt;</codeblock>
		 
		 <p>If the original encoding was not removed by the xml property, the following line returns an error indicating the parser cannot switch from Unicode to UTF-8 encoding.</p>
		 
		 <codeblock>xmlDoc.loadxml(xmlDoc.xml);</codeblock>
		 
		 <p>If you use the save Method, the original encoding is preserved. For example, if you load a document in Microsoft® Windows® 1252 encoding, it will be saved in that format. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa923294.aspx"><linktext>MSDN - xml Property</linktext></link><link href="dom.core.xml#Document/save()"><linktext>dom.core.Document.save()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DOMError"><apiName>DOMError</apiName><shortdesc>
	 DOMError is an interface that describes an error.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 DOMError is an interface that describes an error.
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError"><linktext>MDC - DOMError</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-Interfaces-DOMError"><linktext>W3C - DOMError</linktext></link></related-links><apiValue id="dom.core:DOMError:SEVERITY_ERROR"><apiName>SEVERITY_ERROR</apiName><shortdesc>
		 The severity of the error described by the DOMError is error.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The severity of the error described by the DOMError is error.
		 
		 <p>A SEVERITY_ERROR  may not cause the processing to stop if the error 
		 can be recovered, unless DOMErrorHandler.handleError()  returns false.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-error"><linktext>W3C - DOMError.SEVERITY_ERROR</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:SEVERITY_FATAL_ERROR"><apiName>SEVERITY_FATAL_ERROR</apiName><shortdesc>
		 The severity of the error described by the DOMError is fatal error.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The severity of the error described by the DOMError is fatal error.
		 
		 <p>A SEVERITY_FATAL_ERROR will cause the normal processing to stop. 
		 The return value of DOMErrorHandler.handleError() is ignored unless 
		 the implementation chooses to continue, in which case the behavior 
		 becomes undefined.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-fatal-error"><linktext>W3C - DOMError.SEVERITY_FATAL_ERROR</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:SEVERITY_WARNING"><apiName>SEVERITY_WARNING</apiName><shortdesc>
		 The severity of the error described by the DOMError is warning.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The severity of the error described by the DOMError is warning.
		 
		 <p>A SEVERITY_WARNING will not cause the processing to stop, unless 
		 DOMErrorHandler.handleError() returns false.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity-warning"><linktext>W3C - DOMError.SEVERITY_WARNING</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:location:get"><apiName>location</apiName><shortdesc>
		 The location of the error.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMLocator</apiValueClassifier></apiValueDef><apiDesc>
		 The location of the error.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.location"><linktext>MDC - DOMError.location</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-location"><linktext>W3C - DOMError.location</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:message:get"><apiName>message</apiName><shortdesc>
		 An implementation specific string describing the error that occurred.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An implementation specific string describing the error that occurred.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.message"><linktext>MDC - DOMError.message</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-message"><linktext>W3C - DOMError.message</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:relatedData:get"><apiName>relatedData</apiName><shortdesc>
		 The related DOMError.type dependent data if any.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMObject</apiValueClassifier></apiValueDef><apiDesc>
		 The related DOMError.type dependent data if any. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.relatedData"><linktext>MDC - DOMError.relatedData</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-relatedData"><linktext>W3C - DOMError.relatedData</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:relatedException:get"><apiName>relatedException</apiName><shortdesc>
		 The related platform dependent exception if any.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMObject</apiValueClassifier></apiValueDef><apiDesc>
		 The related platform dependent exception if any.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.relatedException"><linktext>MDC - DOMError.relatedException</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-relatedException"><linktext>W3C - DOMError.relatedException</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:severity:get"><apiName>severity</apiName><shortdesc>
		 The severity of the error, either SEVERITY_WARNING, SEVERITY_ERROR, 
		 or SEVERITY_FATAL_ERROR.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The severity of the error, either SEVERITY_WARNING, SEVERITY_ERROR, 
		 or SEVERITY_FATAL_ERROR.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.severity"><linktext>MDC - DOMError.severity</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-severity"><linktext>W3C - DOMError.severity</linktext></link><link href="dom.core.xml#DOMError/SEVERITY_WARNING"><linktext>SEVERITY_WARNING</linktext></link><link href="dom.core.xml#DOMError/SEVERITY_ERROR"><linktext>SEVERITY_ERROR</linktext></link><link href="dom.core.xml#DOMError/SEVERITY_FATAL_ERROR"><linktext>SEVERITY_FATAL_ERROR</linktext></link></related-links></apiValue><apiValue id="dom.core:DOMError:type:get"><apiName>type</apiName><shortdesc>
		 A DOMString indicating which related data is expected in relatedData.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A DOMString indicating which related data is expected in relatedData. 
		 Users should refer to the specification of the error in order to find 
		 its DOMString type and relatedData  definitions if any.
		 
		 <p><b>Note:</b> As an example, Document.normalizeDocument() does generate warnings 
		 when the "split-cdata-sections" parameter is in use. Therefore, the method 
		 generates a SEVERITY_WARNING with type "cdata-sections-splitted" and the 
		 first CDATASection node in document order resulting from the split is 
		 returned by the relatedData attribute.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMError.type"><linktext>MDC - DOMError.type</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ERROR-DOMError-type"><linktext>W3C - DOMError.type</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:ProcessingInstruction"><apiName>ProcessingInstruction</apiName><shortdesc>
	 A processing instruction provides an opportunity for application-specific 
	 instructions to be embedded within XML and which can be ignored by XML 
	 processors which do not support processing their instructions (outside of 
	 their having a place in the DOM).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A processing instruction provides an opportunity for application-specific 
	 instructions to be embedded within XML and which can be ignored by XML 
	 processors which do not support processing their instructions (outside of 
	 their having a place in the DOM).
	 
	 <p>A Processing instruction is distinct from a XML Declaration which is used 
	 for other information about the document such as encoding and which appear 
	 (if it does) as the first item in the document.</p>
	 
	 <p>User-defined processing instructions cannot begin with 'xml', as these are 
	 reserved (e.g., as used in &lt;?xml-stylesheet ?&gt;).</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms765480%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMProcessingInstruction</linktext></link><link href="http://developer.mozilla.org/en/DOM/ProcessingInstruction"><linktext>MDC - ProcessingInstruction</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1004215813"><linktext>W3C - ProcessingInstruction</linktext></link></related-links><adobeApiEvent id="dom.core:ProcessingInstruction_DOMCharacterDataModified_DOMCharacterDataModified"><apiName>DOMCharacterDataModified</apiName><shortdesc>
	 Occurs after CharacterData.data or ProcessingInstruction.data have been
	 modified but the node itself has not been inserted or deleted.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMCharacterDataModified</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Occurs after CharacterData.data or ProcessingInstruction.data have been
	 modified but the node itself has not been inserted or deleted. The target 
	 node of this event is the CharacterData node or the 
	 ProcessingInstruction node.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:ProcessingInstruction_DOMNodeInsertedIntoDocument_DOMNodeInsertedIntoDocument"><apiName>DOMNodeInsertedIntoDocument</apiName><shortdesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInsertedIntoDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 after the insertion has taken place. The target node of this event is the 
	 node being inserted. If the node is being directly inserted, the event type 
	 DOMNodeInserted occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:ProcessingInstruction_DOMNodeRemovedFromDocument_DOMNodeRemovedFromDocument"><apiName>DOMNodeRemovedFromDocument</apiName><shortdesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemovedFromDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 before the removal takes place. The target node of this event type is 
	 the node being removed. If the node is being directly removed, the event 
	 type DOMNodeRemoved occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:ProcessingInstruction_DOMNodeRemoved_DOMNodeRemoved"><apiName>DOMNodeRemoved</apiName><shortdesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemoved</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement. This event is dispatched before the 
	 removal takes place. The target node of this event is the node 
	 being removed.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:ProcessingInstruction_DOMNodeInserted_DOMNodeInserted"><apiName>DOMNodeInserted</apiName><shortdesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInserted</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element. This event is dispatched after 
	 the insertion has taken place. The target node of this event is the 
	 node being inserted.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiValue id="dom.core:ProcessingInstruction:data:get"><apiName>data</apiName><shortdesc>
		 First non-whitespace character after target and before ?&gt;
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised when the node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 First non-whitespace character after target and before ?&gt;
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757835%28VS.85%29.aspx"><linktext>MSDN - data Property (IXMLDOMProcessingInstruction)</linktext></link><link href="http://developer.mozilla.org/en/DOM/ProcessingInstruction"><linktext>MDC - ProcessingInstruction</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-837822393"><linktext>W3C - ProcessingInstruction.data</linktext></link></related-links></apiValue><apiValue id="dom.core:ProcessingInstruction:target:get"><apiName>target</apiName><shortdesc>
		 After the &amp;lt;? and before whitespace delimiting it from data
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 After the &lt;? and before whitespace delimiting it from data
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757903%28VS.85%29.aspx"><linktext>MSDN - target Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/ProcessingInstruction"><linktext>MDC - ProcessingInstruction</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-1478689192"><linktext>W3C - ProcessingInstruction.target</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:DOMStringList"><apiName>DOMStringList</apiName><shortdesc>
	 The DOMStringList interface provides the abstraction of an ordered 
	 collection of DOMString values, without defining or constraining how 
	 this collection is implemented.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DOMStringList interface provides the abstraction of an ordered 
	 collection of DOMString values, without defining or constraining how 
	 this collection is implemented. The items in the DOMStringList are 
	 accessible via an integral index, starting from 0. 
	 
	 <p><b>Note (Mozilla):</b> This type is presently not available to Mozilla as DOMConfiguration is not implemented.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMStringList"><linktext>MDC - DOMStringList</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList"><linktext>DOMStringList</linktext></link></related-links><apiOperation id="dom.core:DOMStringList:dom.core:DOMStringList:contains"><apiName>contains</apiName><shortdesc>
		 The column number this locator is pointing to, or -1 if there is no 
		 column number available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the string has been found.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>str</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The string to look for. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The column number this locator is pointing to, or -1 if there is no 
		 column number available.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMStringList.contains"><linktext>MDC - DOMStringList.contains()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-contains"><linktext>W3C - DOMStringList.contains()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:DOMStringList:dom.core:DOMStringList:item"><apiName>item</apiName><shortdesc>
		 Returns the index of the item in the collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The DOMString at the index position in the DOMStringList, or null 
		 if that is not a valid index.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into the collection.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the index of the item in the collection. If index is greater than 
		 or equal to the number of DOMStrings in the list, this returns null. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMStringList.item"><linktext>MDC - DOMStringList.item()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-item"><linktext>W3C - DOMStringList.item()</linktext></link></related-links></apiOperation><apiValue id="dom.core:DOMStringList:dom.core:DOMStringList:length:get"><apiName>length</apiName><shortdesc>
		 The number of DOMStrings in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of DOMStrings in the list. The range of valid child 
		 node indices is 0 to length-1  inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMStringList.length"><linktext>MDC - DOMStringList.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMStringList-length"><linktext>W3C - DOMStringList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:NodeList"><apiName>NodeList</apiName><shortdesc>
	 The NodeList interface provides the abstraction of an ordered collection
	 of nodes, without defining or constraining how this collection is 
	 implemented.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The NodeList interface provides the abstraction of an ordered collection
	 of nodes, without defining or constraining how this collection is 
	 implemented. NodeList objects in the DOM are live.
	 
	 <p>The items in the NodeList are accessible via an integral index, 
	 starting from 0. </p>
	 
	 <p><b>Note:</b> NodeList objects in the DOM are live.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757073%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMNodeList</linktext></link><link href="http://developer.mozilla.org/En/DOM/NodeList"><linktext>MDC - NodeList</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-536297177"><linktext>W3C - NodeList</linktext></link></related-links><apiOperation id="dom.core:NodeList:dom.core:NodeList:item"><apiName>item</apiName><shortdesc>
		 Returns the index item in the collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The node at the indexth position in the NodeList, or null 
		 if that is not a valid index.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into the collection.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the index item in the collection. If index is greater than
		 or equal to the number of nodes in the list, this returns null.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757028%28VS.85%29.aspx"><linktext>MSDN - item Method (IXMLDOMNodeList)</linktext></link><link href="http://developer.mozilla.org/En/DOM/NodeList.item"><linktext>MDC - NodeList.item()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-844377136"><linktext>W3C - NodeList.item()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NodeList:dom.core:NodeList:nextNode"><apiName>nextNode</apiName><shortdesc>
		 Returns the next node in the collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>An IXMLDOMNode refers to the next node in the collection. Returns Null if there is no next node.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Returns the next node in the collection.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757831%28VS.85%29.aspx"><linktext>MSDN - nextNode Method (IXMLDOMNodeList)</linktext></link></related-links></apiOperation><apiOperation id="dom.core:NodeList:dom.core:NodeList:reset"><apiName>reset</apiName><shortdesc>
		 Resets the iterator.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Resets the iterator.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms766592%28VS.85%29.aspx"><linktext>MSDN - reset Method (IXMLDOMNodeList)</linktext></link></related-links></apiOperation><apiValue id="dom.core:NodeList:dom.core:NodeList:length:get"><apiName>length</apiName><shortdesc>
		 The number of nodes in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of nodes in the list. The range of valid child node 
		 indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757044%28VS.85%29.aspx"><linktext>MSDN - length Property (IXMLDOMNodeList)</linktext></link><link href="http://developer.mozilla.org/En/DOM/NodeList.length"><linktext>MDC - NodeList.length</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-203510337"><linktext>W3C - NodeList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.core:Element"><apiName>Element</apiName><shortdesc>
	 The Element interface represents an element in an HTML or XML document.</shortdesc><prolog><asMetadata/><asCustoms><internal>
	 Sources:
	 http://msdn.microsoft.com/en-us/library/dd347058(VS.85).aspx#
	 http://developer.mozilla.org/en/DOM/element
	 http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-745549614
	 
	 ASDoc Help:
	 http://livedocs.adobe.com/flex/3/html/help.html?content=asdoc_6.html
	 http://livedocs.adobe.com/flex/3/html/help.html?content=asdoc_3.html
	 
	 http://www.aptana.com/reference/html/api/Element.html
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>cssom.view:ElementView</apiBaseInterface><apiBaseInterface>elementtraversal:ElementTraversal</apiBaseInterface><apiBaseInterface>selectors:NodeSelector</apiBaseInterface><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Element interface represents an element in an HTML or XML document. 
	 
	 <p>Elements may have attributes associated with them; since the Element 
	 interface inherits from Node, the generic Node interface attribute 
	 attributes may be used to retrieve the set of all attributes for an 
	 element. There are methods on the Element interface to retrieve either 
	 an Attr object by name or an attribute value by name. In XML, where an 
	 attribute value may contain entity references, an Attr object should be 
	 retrieved to examine the possibly fairly complex sub-tree representing 
	 the attribute value. On the other hand, in HTML, where all attributes 
	 have simple string values, methods to directly access an attribute value 
	 can safely be used as a convenience.</p>
	 
	 <p>Note: In DOM Level 2, the method normalize is inherited from the Node 
	 interface where it was moved.</p>
	 
	 <p>Includes the <xref href="http://www.w3.org/TR/2008/REC-ElementTraversal-20081222/">ElementTraversal Specification</xref></p>
	 
	 </apiDesc></apiClassifierDetail><adobeApiEvent id="dom.core:Element_keyup_keyup"><apiName>keyup</apiName><shortdesc>
	 A key is released.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>keyup</apiEventType><adobeApiEventClassifier>dom.events.KeyboardEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A key is released. This event type is device dependent and relies on the 
	 capabilities of the input devices and how they are mapped in the operating 
	 system. This event type is generated after the keyboard mapping but before 
	 the processing of an input method editor. This event should logically 
	 happen after the event keydown is produced. Whether a keyup contributes 
	 or not to the generation of a text event is implementation dependent.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_keydown_keydown"><apiName>keydown</apiName><shortdesc>
	 A key is pressed down.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>keydown</apiEventType><adobeApiEventClassifier>dom.events.KeyboardEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A key is pressed down. This event type is device dependent and relies 
	 on the capabilities of the input devices and how they are mapped in the 
	 operating system. This event type is generated after the keyboard 
	 mapping but before the processing of an input method editor. This event 
	 should logically happen before the event keyup is produced. Whether a 
	 keydown contributes or not to the generation of a text event is 
	 implementation dependent.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_textInput_textInput"><apiName>textInput</apiName><shortdesc>
	 One or more characters have been entered.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>textInput</apiEventType><adobeApiEventClassifier>dom.events.TextEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 One or more characters have been entered. The characters can originate 
	 from a variety of sources. For example, it could be characters 
	 resulting from a key being pressed or released on a keyboard device, 
	 characters resulting from the processing of an input method editor, or 
	 resulting from a voice command. Where a "paste" operation generates a 
	 simple sequence of characters, i.e. a text without any structure or 
	 style information, this event type should be generated as well.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_blur_blur"><apiName>blur</apiName><shortdesc>
	 An event target loses focus.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>blur</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 An event target loses focus. The focus is taken from the element before 
	 the dispatch of this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_focus_focus"><apiName>focus</apiName><shortdesc>
	 An event target receives focus.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>focus</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 An event target receives focus. The focus is given to the element 
	 before the dispatch of this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_windowZLevel_windowZLevel"><apiName>windowZLevel</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>windowZLevel</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMMenuItemActive_DOMMenuItemActive"><apiName>DOMMenuItemActive</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMMenuItemActive</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_ValueChange_ValueChange"><apiName>ValueChange</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>ValueChange</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_PluginNotFound_PluginNotFound"><apiName>PluginNotFound</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>PluginNotFound</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMTitleChanged_DOMTitleChanged"><apiName>DOMTitleChanged</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMTitleChanged</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_PopupWindow_PopupWindow"><apiName>PopupWindow</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>PopupWindow</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_fullscreen_fullscreen"><apiName>fullscreen</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>fullscreen</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMModalDialogClosed_DOMModalDialogClosed"><apiName>DOMModalDialogClosed</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMModalDialogClosed</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMWillOpenModalDialog_DOMWillOpenModalDialog"><apiName>DOMWillOpenModalDialog</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMWillOpenModalDialog</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMLinkRemoved_DOMLinkRemoved"><apiName>DOMLinkRemoved</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMLinkRemoved</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMLinkAdded_DOMLinkAdded"><apiName>DOMLinkAdded</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Undocumented
	 
	 </shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMLinkAdded</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Undocumented
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=286013"><linktext>bug 286013</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_MozMousePixelScroll_MozMousePixelScroll"><apiName>MozMousePixelScroll</apiName><shortdesc>
	 Gecko-Specific | Firefox 3.5+ 
	 
	 Regular mouse wheels can only scroll with a per-line resolution.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>MozMousePixelScroll</apiEventType><adobeApiEventClassifier>gecko.events.MouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific | Firefox 3.5+</b> 
	 
	 Regular mouse wheels can only scroll with a per-line resolution. However, there are also 
	 devices that support scrolling with pixel precision, notably Apple MacBook trackpads.
	 
	 When we started supporting pixel scrolling in bug 350471, we added the MozMousePixelScroll 
	 event. It basically works exactly like DOMMouseScroll, with the difference that the detail
	 attribute is in pixels (instead of lines).
	 
	 For backwards compatibility DOMMouseScroll events are sent even if pixel scrolling is used. 
	 Every DOMMouseScroll event can have several associated MozMousePixelScroll events. If 
	 preventDefault() is called on the DOMMouseScroll event, the following associated 
	 MozMousePixelScroll events won't cause any scrolling.
	 
	 When you listen for MozMousePixelScroll events, you shouldn't handle DOMMouseScroll events - 
	 otherwise you'd end up processing the same scroll gesture twice. In order to make it possible 
	 to only listen for MozMousePixelScroll events, Gecko will send MozMousePixelScroll events 
	 even when scrolling with regular mouse wheels. These events will carry a meaningful pixel delta.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMMouseScroll_DOMMouseScroll"><apiName>DOMMouseScroll</apiName><shortdesc>
	 Gecko-Specific 
	 
	 The DOMMouseScroll event is sent when the mouse wheel is moved.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMMouseScroll</apiEventType><adobeApiEventClassifier>gecko.events.MouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 The DOMMouseScroll event is sent when the mouse wheel is moved. The target of this 
	 event is the element that was under the mouse pointer when the mouse wheel was 
	 scrolled, similar to the click event.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_MozAfterPaint_MozAfterPaint"><apiName>MozAfterPaint</apiName><shortdesc>
	 Gecko-Specific | Firefox 3.5+ 
	 
	 The MozAfterPaint event is fired whenever content is repainted.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>MozAfterPaint</apiEventType><adobeApiEventClassifier>gecko.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific | Firefox 3.5+</b> 
	 
	 The MozAfterPaint event is fired whenever content is repainted.  It is sent to the 
	 document and bubbles up to the window level.
	 
	 </apiDesc></adobeApiEventDetail><related-links><link href="http://developer.mozilla.org/en/Gecko-Specific_DOM_Events"><linktext>http://developer.mozilla.org/en/Gecko-Specific_DOM_Events</linktext></link></related-links></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMWindowClose_DOMWindowClose"><apiName>DOMWindowClose</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Fired when the window is about to be closed by window.close().</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMWindowClose</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Fired when the window is about to be closed by window.close().
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMFrameContentLoaded_DOMFrameContentLoaded"><apiName>DOMFrameContentLoaded</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Same as DOMContentLoaded, but also fired for enclosed frames.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMFrameContentLoaded</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Same as DOMContentLoaded, but also fired for enclosed frames.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMContentLoaded_DOMContentLoaded"><apiName>DOMContentLoaded</apiName><shortdesc>
	 Gecko-Specific 
	 
	 Fired on a Window object when a document's DOM content is finished loading, 
	 but unlike "load", does not wait until all images are loaded.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMContentLoaded</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 <b>Gecko-Specific</b> 
	 
	 Fired on a Window object when a document's DOM content is finished loading, 
	 but unlike "load", does not wait until all images are loaded. Used for 
	 example by GreaseMonkey to sneak in to alter pages before they are displayed.
	 
	 This event, as many others on this page, is dispatched to "trusted" targets only; 
	 for example, it is not dispatched to the content of the main browser object in 
	 Firefox, even if it comes from a chrome:/ URI.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMFocusOut_DOMFocusOut"><apiName>DOMFocusOut</apiName><shortdesc>
	 An event target loses focus.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMFocusOut</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 An event target loses focus. The focus is taken from the element before 
	 the dispatch of this event type. This event type is dispatched after 
	 the event type blur.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMFocusIn_DOMFocusIn"><apiName>DOMFocusIn</apiName><shortdesc>
	 An event target receives focus.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMFocusIn</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 An event target receives focus. The focus is given to the element 
	 before the dispatch of this event type. This event type is 
	 dispatched after the event type focus.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMActivate_DOMActivate"><apiName>DOMActivate</apiName><shortdesc>
	 Refer to Activation requests and behavior.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMActivate</apiEventType><adobeApiEventClassifier>dom.events.UIEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Refer to Activation requests and behavior.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_scroll_scroll"><apiName>scroll</apiName><shortdesc>
	 A document view or an element has been scrolled.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>scroll</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A document view or an element has been scrolled. The scroll occured before 
	 the dispatch of this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_resize_resize"><apiName>resize</apiName><shortdesc>
	 A document view or an element has been resized.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>resize</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A document view or an element has been resized. The resize occured before 
	 the dispatch of this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_reset_reset"><apiName>reset</apiName><shortdesc>
	 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>reset</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_submit_submit"><apiName>submit</apiName><shortdesc>
	 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>submit</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_change_change"><apiName>change</apiName><shortdesc>
	 A control loses the input focus and its value has been modified since 
	 gaining focus.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>change</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A control loses the input focus and its value has been modified since 
	 gaining focus. This event type is dispatched before the event type blur.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_select_select"><apiName>select</apiName><shortdesc>
	 A user selects some text.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>select</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A user selects some text. DOM Level 3 Events does not provide contextual 
	 information to access the selected text. The selection occured before 
	 the dispatch of this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_error_error"><apiName>error</apiName><shortdesc>
	 A resource failed to load, or has been loaded but cannot be interpreted 
	 according to its semantics such as an invalid image, a script execution 
	 error, or non-well-formed XML.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>error</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A resource failed to load, or has been loaded but cannot be interpreted 
	 according to its semantics such as an invalid image, a script execution 
	 error, or non-well-formed XML.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_abort_abort"><apiName>abort</apiName><shortdesc>
	 Loading of a resource has been aborted.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>abort</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Loading of a resource has been aborted.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_unload_unload"><apiName>unload</apiName><shortdesc>
	 The DOM implementation removes from the environment the resource 
	 (such as the document) or any dependent resources (such as images, 
	 style sheets, scripts).</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>unload</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 The DOM implementation removes from the environment the resource 
	 (such as the document) or any dependent resources (such as images, 
	 style sheets, scripts). The document is unloaded after the dispatch 
	 of this event type. If this event type is dispatched, implementations 
	 are required to dispatch this event at least on the Document node.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_load_load"><apiName>load</apiName><shortdesc>
	 The DOM Implementation finishes loading the resource (such as the 
	 document) and any dependent resources (such as images, style sheets, 
	 or scripts).</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>load</apiEventType><adobeApiEventClassifier>dom.events.Event</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 The DOM Implementation finishes loading the resource (such as the 
	 document) and any dependent resources (such as images, style sheets, 
	 or scripts). Dependent resources that fail to load will not prevent 
	 this event from firing if the resource that loaded them is still 
	 accessible via the DOM. If this event type is dispatched, 
	 implementations are required to dispatch this event at least on the 
	 Document node.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMAttributeNameChanged_DOMAttributeNameChanged"><apiName>DOMAttributeNameChanged</apiName><shortdesc>
	 Occurs after the namespaceURI and/or the nodeName of a Attr node have 
	 been modified (e.g., the attribute was renamed using 
	 Document.renameNode()).</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMAttributeNameChanged</apiEventType><adobeApiEventClassifier>dom.events.MutationNameEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Occurs after the namespaceURI and/or the nodeName of a Attr node have 
	 been modified (e.g., the attribute was renamed using 
	 Document.renameNode()). The target node of this event is the Element 
	 node whose Attr has been renamed.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMElementNameChanged_DOMElementNameChanged"><apiName>DOMElementNameChanged</apiName><shortdesc>
	 Occurs after the namespaceURI and/or the nodeName of an Element node 
	 have been modified (e.g., the element was renamed using 
	 Document.renameNode()).</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMElementNameChanged</apiEventType><adobeApiEventClassifier>dom.events.MutationNameEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Occurs after the namespaceURI and/or the nodeName of an Element node 
	 have been modified (e.g., the element was renamed using 
	 Document.renameNode()). The target node of this event is the renamed 
	 Element node.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMAttrModified_DOMAttrModified"><apiName>DOMAttrModified</apiName><shortdesc>
	 Occurs after Attr.value has been modified and after an Attr node has been 
	 added to or removed from an Element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMAttrModified</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 Occurs after Attr.value has been modified and after an Attr node has been 
	 added to or removed from an Element. The target node of this event is 
	 the Element node where the change occured. It is implementation dependent 
	 whether this event type occurs when the children of the Attr node are 
	 changed in ways that do not affect the value of Attr.value.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMNodeInsertedIntoDocument_DOMNodeInsertedIntoDocument"><apiName>DOMNodeInsertedIntoDocument</apiName><shortdesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInsertedIntoDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been inserted into a document, either through direct insertion 
	 of the node or insertion of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 after the insertion has taken place. The target node of this event is the 
	 node being inserted. If the node is being directly inserted, the event type 
	 DOMNodeInserted occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMNodeRemovedFromDocument_DOMNodeRemovedFromDocument"><apiName>DOMNodeRemovedFromDocument</apiName><shortdesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemovedFromDocument</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from a document, either through direct removal 
	 of the node or removal of a subtree in which it is contained; Attr nodes 
	 are considered part of an Element's subtree. This event is dispatched 
	 before the removal takes place. The target node of this event type is 
	 the node being removed. If the node is being directly removed, the event 
	 type DOMNodeRemoved occurs before this event type.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMNodeRemoved_DOMNodeRemoved"><apiName>DOMNodeRemoved</apiName><shortdesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeRemoved</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node is being removed from its parent node or, in case of Attr nodes, 
	 removed from its ownerElement. This event is dispatched before the 
	 removal takes place. The target node of this event is the node 
	 being removed.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMNodeInserted_DOMNodeInserted"><apiName>DOMNodeInserted</apiName><shortdesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMNodeInserted</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A node has been added as a child of another node or, in case of Attr 
	 nodes, has been added to an Element. This event is dispatched after 
	 the insertion has taken place. The target node of this event is the 
	 node being inserted.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_DOMSubtreeModified_DOMSubtreeModified"><apiName>DOMSubtreeModified</apiName><shortdesc>
	 This is a general event for notification of all changes to the 
	 document.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>DOMSubtreeModified</apiEventType><adobeApiEventClassifier>dom.events.MutationEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 This is a general event for notification of all changes to the 
	 document. It can be used instead of the more specific mutation and 
	 mutation name events listed below. It may be dispatched after a 
	 single modification to the document or, at the implementation's 
	 discretion, after multiple changes have occurred. The latter use 
	 should generally be used to accommodate multiple changes which occur 
	 either simultaneously or in rapid succession. The target of this 
	 event is the lowest common parent of the changes which have taken 
	 place. This event is dispatched after any other events caused by the 
	 mutation(s) have occurred.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_mousewheel_mousewheel"><apiName>mousewheel</apiName><shortdesc>
	 A mouse wheel has been rotated around the y-axis.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mousewheel</apiEventType><adobeApiEventClassifier>dom.events.MouseWheelEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A mouse wheel has been rotated around the y-axis.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_mousemultiwheel_mousemultiwheel"><apiName>mousemultiwheel</apiName><shortdesc>
	 A mouse wheel has been rotated.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mousemultiwheel</apiEventType><adobeApiEventClassifier>dom.events.MouseMultiWheelEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A mouse wheel has been rotated. A default action of user agent 
	 generated event objects of this type causes implementations to 
	 dispatch a mousewheel event iff it supports that event type and 
	 MouseMultiWheelEvent.wheelDeltaY is non-zero.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_mouseout_mouseout"><apiName>mouseout</apiName><shortdesc>
	 A pointing device is moved away from an element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mouseout</apiEventType><adobeApiEventClassifier>dom.events.MouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A pointing device is moved away from an element.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_mousemove_mousemove"><apiName>mousemove</apiName><shortdesc>
	 A pointing device is moved while it is over an element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mousemove</apiEventType><adobeApiEventClassifier>dom.events.MouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A pointing device is moved while it is over an element.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_mouseover_mouseover"><apiName>mouseover</apiName><shortdesc>
	 A pointing device is moved onto an element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mouseover</apiEventType><adobeApiEventClassifier>dom.events.MouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A pointing device is moved onto an element.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_mouseup_mouseup"><apiName>mouseup</apiName><shortdesc>
	 A pointing device button is released over an element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mouseup</apiEventType><adobeApiEventClassifier>dom.events.MouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A pointing device button is released over an element.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_mousedown_mousedown"><apiName>mousedown</apiName><shortdesc>
	 A pointing device button is pressed over an element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>mousedown</apiEventType><adobeApiEventClassifier>dom.events.MouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A pointing device button is pressed over an element.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_dblclick_dblclick"><apiName>dblclick</apiName><shortdesc>
	 A pointing device button is clicked twice over an element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>dblclick</apiEventType><adobeApiEventClassifier>dom.events.MouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A pointing device button is clicked twice over an element. The definition 
	 of a double click depends on the environment configuration, except that 
	 the event target must be the same between mousedown, mouseup, and dblclick. 
	 This event type is dispatched after the event type click if a click and 
	 double click occur simultaneously, and after the event type mouseup otherwise.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><adobeApiEvent id="dom.core:Element_click_click"><apiName>click</apiName><shortdesc>
	 A pointing device button is clicked over an element.</shortdesc><prolog/><adobeApiEventDetail><adobeApiEventDef><apiEventType>click</apiEventType><adobeApiEventClassifier>dom.events.MouseEvent</adobeApiEventClassifier><apiGeneratedEvent/></adobeApiEventDef><apiDesc>
	 A pointing device button is clicked over an element. The definition of a 
	 click depends on the environment configuration; i.e. it may depend on the 
	 screen location or the delay between the press and release of the pointing 
	 device button. In any case, the event target must be the same between the 
	 mousedown, mouseup, and click. The sequence of these events is: mousedown, 
	 mouseup, and click. It depends on the environment configuration whether 
	 the event type click can occur if one or more of the event types mouseover, 
	 mousemove, and mouseout occur between the press and release of the pointing 
	 device button. In addition, the event type is dispatched as described in 
	 Activation requests and behavior.
	 
	 </apiDesc></adobeApiEventDetail></adobeApiEvent><apiOperation id="dom.core:Element:addBehavior"><apiName>addBehavior</apiName><shortdesc>
		 Attaches a behavior to the element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="+5.5"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns an identifier that can be used later to detach the behavior from the element.
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Location of the behavior, in URL format.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Attaches a behavior to the element.
		 
		 <p>This method, and the following remarks, apply only to attached 
		 behaviors, which are the original Dynamic HTML (DHTML) behaviors 
		 introduced in Microsoft Internet Explorer 5. Element behaviors are 
		 a feature in Internet Explorer 5.5 and cannot be added to or 
		 removed from an element.</p>
		 
		 <p>This method enables you to attach a behavior without using Cascading 
		 Style Sheets (CSS).</p>
		 
		 <p>Unless the specified behavior in the addBehavior call is one of the 
		 default behaviors built into Internet Explorer, the addBehavior call 
		 causes Internet Explorer to download the behavior asynchronously, 
		 before the behavior is attached to the element.</p>
		 
		 <p>Due to the asynchronous nature of the addBehavior method, its return 
		 value cannot be relied on to determine whether the behavior was 
		 successfully applied to the element. Waiting for the onreadystatechange 
		 event to fire and verifying that the readyState property of the element 
		 is set to complete ensure that the behavior is completely attached to 
		 the element, and that all the behavior's members are available for scripting. 
		 Otherwise, attempting to use any behavior-defined member before the 
		 behavior is attached to the element results in a scripting error indicating 
		 that the object does not support that particular member.</p>
		 
		 <p>Note : A behavior attached to an element using the addBehavior method, or by 
		 applying the proposed CSS behavior attribute inline, is not automatically 
		 detached from the element when the element is removed from the document hierarchy. 
		 However, a behavior attached using a style rule defined in the document is 
		 detached automatically as the element is removed from the document tree.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;SCRIPT LANGUAGE="JScript"&gt;
		 var collBehaviorID = new Array();
		 var collLI = new Array ();
		 var countLI = 0;
		 
		 function attachBehavior() {
		 	collLI = document.all.tags("LI");
		 	countLI = collLI.length;
		 	for (i=0; i &lt; countLI; i++) {
		 		var iID = collLI[i].addBehavior("hilite.htc");
		 
		 		if (iID) collBehaviorID[i] = iID;
		 	}
		 }
		 &lt;/SCRIPT&gt;
		 
		 //Click &lt;A HREF="javascript:attachBehavior()"&gt;here&lt;/A&gt;
		 //to add a highlighting effect as you hover over each item below.
		 </codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:applyElement"><apiName>applyElement</apiName><shortdesc>
		 Makes the element either a child or parent of another element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="1.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the applied element.
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiType value="Object"/><apiDesc>An object that becomes the child or parent of the current element.
		 </apiDesc></apiParam><apiParam><apiItemName>where</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiData>outside</apiData><apiDesc>Specifies one of the following values. 
		 outside : Specified element becomes a parent of the current element.
		 inside : Specified element becomes a child of the current element, but contains all the child elements of the current element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Makes the element either a child or parent of another element.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;SCRIPT&gt;
		 function fnApply() {
		 	var oNewNode = document.createElement("I");
		 	oList.applyElement(oNewNode);
		 }
		 &lt;/SCRIPT&gt;
		 
		 &lt;UL ID = oList&gt;
		 &lt;LI&gt;List item 1
		 &lt;LI&gt;List item 2
		 &lt;LI&gt;List item 3
		 &lt;LI&gt;List item 4
		 &lt;/UL&gt;
		 &lt;INPUT TYPE="button" VALUE="Apply Element" onclick="fnApply()"&gt;
		 </codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:attachEvent"><apiName>attachEvent</apiName><shortdesc>
		 Binds the specified function to an event, so that the function gets called whenever 
		 the event fires on the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true (successful) or false (failed).
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The event string should include the "on" prefix (ie: "onload", "onclick" etc).
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>The function or method to associate with the event.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Binds the specified function to an event, so that the function gets called whenever 
		 the event fires on the object.
		 
		 </apiDesc><example>
		 <codeblock>if (window.attachEvent) window.attachEvent("onload", statusreport); //invoke function</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536343%28VS.85%29.aspx"><linktext>MSDN - attachEvent Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:clearAttributes"><apiName>clearAttributes</apiName><shortdesc>
		 Removes all attributes and values from the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes all attributes and values from the object.
		 
		 <p>The clearAttributes method clears only persistent HTML attributes. 
		 The ID attribute, styles, and script-only properties are not affected.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:componentFromPoint"><apiName>componentFromPoint</apiName><shortdesc>
		 Returns the component located at the specified coordinates via certain events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns one of the following possible values.
		 <ul>
		 <li>empty string : Component is inside the client area of the object.</li>
		 <li>outside : Component is outside the bounds of the object.</li>
		 <li>scrollbarDown : Down scroll arrow is at the specified location.</li>
		 <li>scrollbarHThumb : Horizontal scroll thumb or box is at the specified location.</li>
		 <li>scrollbarLeft : Left scroll arrow is at the specified location.</li>
		 <li>scrollbarPageDown : Page-down scroll bar shaft is at the specified location.</li>
		 <li>scrollbarPageLeft : Page-left scroll bar shaft is at the specified location.</li>
		 <li>scrollbarPageRight : Page-right scroll bar shaft is at the specified location.</li>
		 <li>scrollbarPageUp : Page-up scroll bar shaft is at the specified location.</li>
		 <li>scrollbarRight : Right scroll arrow is at the specified location.</li>
		 <li>scrollbarUp : Up scroll arrow is at the specified location.</li>
		 <li>scrollbarVThumb : Vertical scroll thumb or box is at the specified location.</li>
		 <li>handleBottom : Bottom sizing handle is at the specified location.</li>
		 <li>handleBottomLeft : Lower-left sizing handle is at the specified location.</li>
		 <li>handleBottomRight : Lower-right sizing handle is at the specified location.</li>
		 <li>handleLeft : Left sizing handle is at the specified location.</li>
		 <li>handleRight : Right sizing handle is at the specified location.</li>
		 <li>handleTop : Top sizing handle is at the specified location.</li>
		 <li>handleTopLeft : Upper-left sizing handle is at the specified location.</li>
		 <li>handleTopRight : Upper-right sizing handle is at the specified location.</li>
		 </ul>
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>The client window coordinate of x
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>The client window coordinate of y
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the component located at the specified coordinates via certain events.
		 
		 <p>IE Note: The componentFromPoint method, available as of Microsoft Internet Explorer 5, 
		 is applicable to any object that can be given scroll bars through Cascading Style Sheets (CSS).</p>
		 
		 <p>The componentFromPoint method might not return the same object consistently when it 
		 is used with the onmouseover event. Because a user's mouse speed and entry point 
		 can vary, different components of an element can fire the onmouseover event. For 
		 example, when a user moves the cursor over a textArea object with scroll bars, the 
		 event might fire when the mouse enters the component border, the scroll bars, or 
		 the client region. After the event fires, the expected element might not be returned, 
		 unless the scroll bars were the point of entry for the mouse. In this case, the 
		 onmousemove event can be used to provide more consistent results.</p>
		 
		 <p>For the object's sizing handles to appear, designMode must be On, and the object 
		 must be selected.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:contains"><apiName>contains</apiName><shortdesc>
		 Checks whether the given element is contained within the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="1.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiType value="Object"/><apiDesc>Element object that specifies the element to check.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Checks whether the given element is contained within the object. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:createControlRange"><apiName>createControlRange</apiName><shortdesc>
		 Creates a controlRange collection of nontext elements.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="1.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Creates a controlRange collection of nontext elements.
		 
		 <p>IE Note: Creates a selection range object for control-based selection 
		 rather than text-based selection.</p>
		 
		 <p>If a controlRange already exists, createControlRange overwrites 
		 the existing element; otherwise, it returns a pointer to the element created.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:detachEvent"><apiName>detachEvent</apiName><shortdesc>
		 Unbinds the specified function from the event, so that the function stops receiving notifications when the event fires.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies any of the standard  DHTML Events.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiType value="Function"/><apiDesc>Specifies the function previously set using the attachEvent method.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Unbinds the specified function from the event, so that the function stops receiving notifications when the event fires.
		 
		 <p><b>Note (IE):</b> Behaviors that attach to events using the attachEvent method must explicitly call 
		 the detachEvent method to stop receiving notifications from the page when the  ondetach event fires. 
		 Behaviors that attach to events using the  PUBLIC:ATTACH element automatically stop receiving notifications 
		 when the behavior detaches from the element, and thus do not need to call the detachEvent method.</p>
		 
		 </apiDesc><example>
		 This example calls the detachEvent method from an HTML Component (HTC) when the highlighting effect is 
		 removed from the page, causing the ondetach event to fire.
		 <codeblock>
		 &lt;PUBLIC:ATTACH EVENT="ondetach" ONEVENT="cleanup()" /&gt;
		 
		 &lt;script language="JScript"&gt;
		 attachEvent ('onmouseover', Hilite);
		 attachEvent ('onmouseout', Restore);
		 
		 function cleanup() {
		 	detachEvent ('onmouseover', Hilite);
		 	detachEvent ('onmouseout', Restore);
		 }
		 
		 function Hilite() {
		 	if (event.srcElement == element) { 
		 		normalColor = style.color;  
		 		runtimeStyle.color  = "red";
		 		runtimeStyle.cursor = "hand";
		 	}
		 }
		 
		 function Restore() {
		 	if (event.srcElement == element) {
		 		runtimeStyle.color  = normalColor;
		 		runtimeStyle.cursor = "";
		 	}
		 }
		 &lt;/script&gt;</codeblock>
		 
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536411%28VS.85%29.aspx"><linktext>MSDN - detachEvent Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:doScroll"><apiName>doScroll</apiName><shortdesc>
		 Simulates a click on a scroll-bar component.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>scrollAction</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiData>scrollbarDown</apiData><apiDesc>Specifies how the object scrolls, using one of the following values.
		 <ul>
		 <li>scrollbarDown : Default. Down scroll arrow is at the specified location.</li>
		 <li>scrollbarHThumb : Horizontal scroll thumb or box is at the specified location.</li>
		 <li>scrollbarLeft : Left scroll arrow is at the specified location.</li>
		 <li>scrollbarPageDown : Page-down scroll bar shaft is at the specified location.</li>
		 <li>scrollbarPageLeft : Page-left scroll bar shaft is at the specified location.</li>
		 <li>scrollbarPageRight : Page-right scroll bar shaft is at the specified location.</li>
		 <li>scrollbarPageUp : Page-up scroll bar shaft is at the specified location.</li>
		 <li>scrollbarRight : Right scroll arrow is at the specified location.</li>
		 <li>scrollbarUp : Up scroll arrow is at the specified location.</li>
		 <li>scrollbarVThumb : Vertical scroll thumb or box is at the specified location.</li>
		 <li>down : Composite reference to scrollbarDown.</li>
		 <li>left : Composite reference to scrollbarLeft.</li>
		 <li>pageDown : Composite reference to scrollbarPageDown.</li>
		 <li>pageLeft : Composite reference to scrollbarPageLeft.</li>
		 <li>pageRight : Composite reference to scrollbarPageRight.</li>
		 <li>pageUp : Composite reference to scrollbarPageUp.</li>
		 <li>right : Composite reference to scrollbarRight.</li>
		 <li>up : Composite reference to scrollbarUp.</li>
		 </ul>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Simulates a click on a scroll-bar component.
		 
		 <p>Cascading Style Sheets (CSS) allow you to scroll on all objects through 
		 the overflow property.</p>
		 
		 <p>When the content of an element changes and causes scroll bars to display, 
		 the doScroll method might not work correctly immediately following the 
		 content update. When this happens, you can use the setTimeout method to 
		 enable the browser to recognize the dynamic changes that affect scrolling.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:dragDrop"><apiName>dragDrop</apiName><shortdesc>
		 Initiates a drag event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="1.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Drag operation success
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 Initiates a drag event.
		 
		 <p>You can use this method to fire the ondragstart event. If the event is 
		 not cancelled, a drag operation is started. The method returns true when 
		 the mouse is released. If the ondragstart event is cancelled, the method 
		 returns false immediately</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:fireEvent"><apiName>fireEvent</apiName><shortdesc>
		 Fires a specified event on the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Event fired successfully
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>String that specifies the name of the event to fire.
		 </apiDesc></apiParam><apiParam><apiItemName>event</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Object that specifies the event object from which to obtain event object properties.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Fires a specified event on the object.
		 
		 <p>If the event being fired cannot be cancelled, fireEvent always returns true.</p>
		 
		 <p>Regardless of their values specified in the event object, the values of the 
		 four event properties—cancelBubble, returnValue, srcElement, and type—are 
		 automatically initialized to the values shown in the following table.</p> 
		 
		 <ul>
		 <li>cancelBubble : false</li>
		 <li>returnValue : true</li>
		 <li>srcElement : element on which the event is fired</li>
		 <li>type : name of the event that is fired</li>
		 </ul>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536423%28VS.85%29.aspx"><linktext>MSDN - fireEvent Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:getAdjacentText"><apiName>getAdjacentText</apiName><shortdesc>
		 Returns the adjacent text string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="1.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns the first adjacent text string. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>where</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies where the text is located by using one of the following values.
		 <ul>
		 <li>beforeBegin : Text is returned immediately before the element.</li>
		 <li>afterBegin : Text is returned after the start of the element but before all other content in the element.</li>
		 <li>beforeEnd : Text is returned immediately before the end of the element but after all other content in the element.</li>
		 <li>afterEnd : Text is returned immediately after the end of the element.</li>
		 </ul>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the adjacent text string. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:getAttribute"><apiName>getAttribute</apiName><shortdesc>
		 Returns the value of the named attribute on the specified element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiTool name="IE" version="5.0+"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="7.0+"/><apiTool name="Safari" version="1.0+"/><apiSince version="DOM 1 Core"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The value or null/""
		 
		 </apiDesc><apiType value="Object"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the value of the named attribute on the specified element.
		 
		 <p>If the named attribute does not exist, the value returned will 
		 either be null or "" (the empty string).</p>
		 
		 <p><b>Note:</b> Essentially all web browsers (Firefox, Internet Explorer, recent 
		 versions of Opera, Safari, Konqueror, and iCab, as a non-exhaustive list) 
		 return null when the specified attribute does not exist on the specified 
		 element. The DOM specification says that the correct return value in 
		 this case is actually the empty string, and some DOM implementations 
		 implement this behavior. The implementation of getAttribute in XUL (Gecko) 
		 actually follows the specification and returns an empty string. 
		 Consequently, you should use hasAttribute to check for an attribute's 
		 existence prior to calling getAttribute() if it is possible that the 
		 requested attribute does not exist on the specified element.</p>
		 
		 <p>The attributeName parameter is usually case sensitive, but it is case-insensitive 
		 when used upon HTML elements.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var div1 = document.getElementById("div1");
		 var align = div1.getAttribute("align");
		 alert(align); // shows the value of align for the element with id="div1"</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:getAttributeNS"><apiName>getAttributeNS</apiName><shortdesc>
		 Returns the string value of the attribute with the specified namespace and name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the implementation 
		 does not support the feature "XML" and the language exposed through the Document 
		 does not support XML Namespaces (such as [HTML 4.01]). 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The value or null/""
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace of the specified attribute. 
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the specified attribute. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the string value of the attribute with the specified namespace and name. 
		 
		 <p>If the named attribute does not exist, the value returned will either be null 
		 or "" (the empty string).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var div1 = document.getElementById("div1");
		 var a = div1.getAttributeNS("www.mozilla.org/ns/specialspace/", "special-align");
		 alert(a); // shows the value of align for that div</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:getAttributeNode"><apiName>getAttributeNode</apiName><shortdesc>
		 Returns the Attr node for the attribute with the given name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="IE" version="6.0+"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="7.0+"/><apiTool name="Safari" version="1.0+"/><apiSince version="DOM 1 Core"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to an attribute object.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Attr</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the name property of the requested attribute object.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the Attr node for the attribute with the given name. 
		 
		 <p><b>Note:</b> (IE8+) In IE8 mode, getAttributeNode correctly 
		 populates the value property of the returned attribute object regardless of 
		 whether the specified property is set to true or false. For more information 
		 on IE8 mode, see Defining Document Compatibility.</p>
		 
		 <p><b>Note:</b> (IE8+) In IE8 mode, the value 
		 property is correctly reported as a canonical attribute name. For example, 
		 &lt;input type="text" readonly&gt; and &lt;input type="text" readonly="readonly"&gt; would 
		 both set the input text field to read-only. In IE8 mode, the value is evaluated 
		 as a cannonical value, "readonly". In IE7 and earlier modes, it is evaluated 
		 as a Boolean value, true.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/REC-DOM-Level-1/level-one-core.html#method-getAttributeNode"><linktext>DOM Level 1:getAttributeNode</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Core/core.html#ID-217A91B8"><linktext>DOM Level 2:getAttributeNode</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:getAttributeNodeNS"><apiName>getAttributeNodeNS</apiName><shortdesc>
		 Returns the Attr node for the attribute with the given namespace and name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the 
		 implementation does not support the feature "XML" and the language 
		 exposed through the Document does not support XML Namespaces. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The node for specified attribute
		 
		 </apiDesc><apiOperationClassifier>dom.core:Attr</apiOperationClassifier></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifying the namespace of the attribute. 
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifying the name of the attribute. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the Attr node for the attribute with the given namespace and name. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:getBoundingClientRect"><apiName>getBoundingClientRect</apiName><shortdesc>
		 
		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_almost"/><apiTool name="Firefox" version="3.1b_almost"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The returned value is a TextRectangle object which is the union 
		 of the rectangles returned by getClientRects() for the element, i.e., 
		 the CSS border-boxes associated with the element.
		 
		 </apiDesc><apiOperationClassifier>cssom.view:TextRectangle</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 
		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.
		 
		 <p><b>Note (IE8):</b> In IE8 mode, the bounding rectangle is the same as the client rectangle.</p>
		 
		 <p><b>Note (IE5):</b> In Microsoft Internet Explorer 5, the window's upper-left is at 
		 2,2 (pixels) with respect to the true client.</p>
		 
		 <p><b>Note (Firefox 3.5):</b> Firefox 3.5 adds width and height properties to the TextRectangle object.</p>
		 
		 <p><b>Note (Firefox):</b> Firefox doesn't round the top/bottom coordinates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var rects = obj.getClientRects();
		 var numLines = rects.length;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536435(VS.85).aspx"><linktext>MSDN: getClientRects Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.getClientRects"><linktext>MDC - Element: getClientRects Method</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-getclientrects"><linktext>W3C - CSSOM View: getClientRects Method</linktext></link><link href="http://ejohn.org/blog/getboundingclientrect-is-awesome/"><linktext>John Resig</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#documentview"><linktext>Quirksmode: DocumentView and ElementView methods</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:getClientRects"><apiName>getClientRects</apiName><shortdesc>
		 
		 Retrieves a collection of rectangles that describes the layout of the 
		 contents of an object or range within the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_almost"/><apiTool name="Firefox" version="3.1b_almost"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>cssom.view:TextRectangleList</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 
		 Retrieves a collection of rectangles that describes the layout of the 
		 contents of an object or range within the client. Each rectangle 
		 describes a single line.
		 
		 <p><b>Note (IE8):</b> In IE8 mode, getClientRects always returns 
		 a collection of one rectangle—the same rectangle as getBoundingClientRect.</p>
		 
		 <p><b>Note (IE):</b> In IE5-7, split up a block-level element such as a &lt;p&gt; into one rectangle per line.
		 This is incorrect: a block-level element should be reported as one rectangle.</p>
		 
		 <p><b>Note (IE):</b> In IE5-7, the rectangles are off by about two pixels. According to John Resig this is caused by the 
		 (invisible, but nonetheless present) borders of the &lt;html&gt; element.</p>
		 
		 <p><b>Note (Firefox 3.5):</b> Firefox 3.5 adds width and height properties to the TextRectangle object.</p>
		 
		 <p><b>Note (Firefox):</b> Firefox doesn't round the top/bottom coordinates.</p>
		 
		 </apiDesc><example>
		 <codeblock>var rect = obj.getBoundingClientRect();</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536433(VS.85).aspx"><linktext>MSDN: getBoundingClientRect Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.getBoundingClientRect"><linktext>MDC - Element: getBoundingClientRect Method</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-getclientrects"><linktext>W3C - CSSOM View: getBoundingClientRect Method</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#documentview"><linktext>Quirksmode: DocumentView and ElementView methods</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:getElementsByClassName"><apiName>getElementsByClassName</apiName><shortdesc>
		 Returns a set of elements with the given class name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="Firefox" version="3.0+"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a set of elements with the given class name.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the name of a class.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a set of elements with the given class name. 
		 
		 <p>When called on 
		 the document object, the complete document is searched, including 
		 the root node. You may also call getElementsByClassName on any element; 
		 it will return only elements under the specified root element with the 
		 given class name. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 //Get all elements that have a class of 'test' 
		 document.getElementsByClassName('test');
		 //Get all elements that have a class of 'red' and 'test' 
		 document.getElementsByClassName('red test');</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:getElementsByTagName"><apiName>getElementsByTagName</apiName><shortdesc>
		 Retrieves a collection of objects based on the specified element name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="IE" version="5.0+"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="7.0+"/><apiTool name="Safari" version="1.0+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a collection of objects with the specified element name.
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the name of an element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a collection of objects based on the specified element name.
		 
		 </apiDesc><example>
		 <codeblock>
		 // check the alignment on a number of cells in a table. 
		 var table = document.getElementById("forecast-table"); 
		 var cells = table.getElementsByTagName("td"); 
		 for (var i = 0; i &lt; cells.length; i++) { 
		 		status = cells[i].getAttribute("status"); 
		 		if ( status == "open") { 
		 			// grab the data 
		 		}
		 }</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:getElementsByTagNameNS"><apiName>getElementsByTagNameNS</apiName><shortdesc>
		 Returns a list of elements with the given tag name belonging to the given namespace.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the 
		 implementation does not support the feature "XML" and the language 
		 exposed through the Document does not support XML Namespaces. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI of elements to look for (see element.namespaceURI). For example, if you need to look for XHTML elements, use the XHTML namespace URI, http://www.w3.org/1999/xhtml. 
		 </apiDesc></apiParam><apiParam><apiItemName>localName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Either the local name of elements to look for or the special value ", which matches all elements
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a list of elements with the given tag name belonging to the given namespace. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:getExpression"><apiName>getExpression</apiName><shortdesc>
		 Retrieves the expression for the given property.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a variant value representing the expression of the property.
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the name of the property from which to retrieve the expression.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves the expression for the given property. 
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;body&gt;
		 &lt;span id="trueBlueSpan" style="background-color:lightblue; width:100px"&gt;
		 The width of this blue span is set inline at 100 pixels.
		 &lt;/span&gt;
		 &lt;span id="oldYellowSpan" style="background-color:lightyellow; width:200px"&gt;
		 The width of this yelllow span is set inline at 200 pixels.
		 &lt;/span&gt;
		 &lt;br&gt;
		 &lt;span id="AlGreenSpan" style="background-color:lightgreen; width:expression(trueBlueSpan.style.pixelWidth + oldYellowSpan.style.pixelWidth)"&gt;
		 Click the button below to see the expression used to set the width of this span.
		 &lt;/span&gt;
		 &lt;br&gt;
		 &lt;button onclick=alert(AlGreenSpan.style.getExpression("width"));&gt;See Expression&lt;/button&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:hasAttribute"><apiName>hasAttribute</apiName><shortdesc>
		 DOM Level 2 | NS\FireFox 
		 
		 Determines whether an attribute with the specified name exists.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="Firefox" version="1.0+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the attribute exists.
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of the attribute. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 2 | NS\FireFox</b> 
		 
		 Determines whether an attribute with the specified name exists.
		 
		 </apiDesc><example>
		 <codeblock>
		 // check that the attribute exists before setting a value
		 var d = document.getElementById("div1"); 
		 if d.hasAttribute("align") { 
		 		d.setAttribute("align", "center"); 
		 }</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:hasAttributeNS"><apiName>hasAttributeNS</apiName><shortdesc>
		 Returns a boolean value indicating whether the current element has the specified attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiTool name="Safari" version="1.3+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the 
		 implementation does not support the feature "XML" and the language 
		 exposed through the Document does not support XML Namespaces (such 
		 as [HTML 4.01]). 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifying the namespace of the attribute. 
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of the attribute. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a boolean value indicating whether the current element has the specified attribute. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // check that the attribute exists 
		 // before you set a value 
		 var d = document.getElementById("div1"); 
		 if (d.hasAttributeNS("http://www.mozilla.org/ns/specialspace/", "special-align")) {
		 	d.setAttribute("align", "center");
		 }</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:insertAdjacentElement"><apiName>insertAdjacentElement</apiName><shortdesc>
		 Inserts an element at the specified location.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="1.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns an element object.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>where</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies where to insert the HTML element, using one of the following values.
		 <ul>
		 <li>beforeBegin : Inserts element immediately before the object.</li>
		 <li>afterBegin : Inserts element after the start of the object, but before all other content in the object.</li>
		 <li>beforeEnd : Inserts element immediately before the end of the object, but after all other content in the object.</li>
		 <li>afterEnd : Inserts element immediately after the end of the object.</li>
		 </ul>
		 </apiDesc></apiParam><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>dom.core:Element</apiOperationClassifier><apiDesc>Object that specifies the element to be inserted adjacent to the object that invoked the insertAdjacentElement method.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Inserts an element at the specified location.
		 
		 <p>You cannot insert text while the document is loading. Wait 
		 for the onload event before attempting to call this method.</p>
		 
		 <p>If you try to insert an object that already exists on the page, 
		 the existing object is moved to the point that you specified in 
		 the insertAdjacentElement method; no new object is created.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:insertAdjacentHTML"><apiName>insertAdjacentHTML</apiName><shortdesc>
		 Inserts the given HTML text into the element at the location.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="4.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>where</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies where to insert the HTML element, using one of the following values.
		 <ul>
		 <li>beforeBegin : Inserts text immediately before the object.</li>
		 <li>afterBegin : Inserts text after the start of the object, but before all other content in the object.</li>
		 <li>beforeEnd : Inserts text immediately before the end of the object, but after all other content in the object.</li>
		 <li>afterEnd : Inserts text immediately after the end of the object.</li>
		 </ul>
		 </apiDesc></apiParam><apiParam><apiItemName>text</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the HTML text to insert. The string can 
		 be a combination of text and HTML tags. This must be well-formed, 
		 valid HTML or this method will fail.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Inserts the given HTML text into the element at the location.
		 
		 <p>If the text contains HTML tags, the method parses and formats 
		 the text as it is inserted.</p>
		 
		 <p>You cannot insert text while the document is loading. Wait for 
		 the onload event to fire before attempting to call this method.</p>
		 
		 <p>When using the insertAdjacentHTML method to insert script, you 
		 must include the DEFER attribute in the script element. </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:insertAdjacentText"><apiName>insertAdjacentText</apiName><shortdesc>
		 Inserts the given text into the element at the specified location.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="1.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>where</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies where to insert the text, using one of the following values.
		 <ul>
		 <li>beforeBegin : Inserts text immediately before the object.</li>
		 <li>afterBegin : Inserts text after the start of the object, but before all other content in the object.</li>
		 <li>beforeEnd : Inserts text immediately before the end of the object, but after all other content in the object.</li>
		 <li>afterEnd : Inserts text immediately after the end of the object.</li>
		 </ul>
		 </apiDesc></apiParam><apiParam><apiItemName>text</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the text to insert.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Inserts the given text into the element at the specified location.
		 
		 <p>The text inserted into the element is plain text. You cannot insert text 
		 while the document loads. Wait for the onload event to fire before 
		 attempting to call this method.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:mergeAttributes"><apiName>mergeAttributes</apiName><shortdesc>
		 Copies all read/write attributes to the specified element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>source</apiItemName><apiOperationClassifier>dom.core:Element</apiOperationClassifier><apiDesc>Pointer to an Object that specifies the attributes copied
		 to the object that invokes mergeAttributes.
		 </apiDesc></apiParam><apiParam><apiItemName>preserve</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Available as of Microsoft Internet Explorer 5.5. Specifies 
		 whether to preserve the identity of the object to which attributes are 
		 being merged or not.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Copies all read/write attributes to the specified element.
		 
		 <p>The mergeAttributes method copies persistent HTML attributes, 
		 events, and styles.</p>
		 
		 <p>IE Note: In Internet Explorer 5 and earlier, attributes that are read-only, 
		 such as ID, are not merged.</p>
		 
		 <p>IE Note: As of Internet Explorer 5.5, by choosing not to preserve the identity 
		 of the destination object, you can merge all attributes of an object, 
		 including ID and NAME.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:querySelector"><apiName>querySelector</apiName><shortdesc>
		 
		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiSince version="DOM 3 Core"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The first matching Element node within the node’s subtree. If there is no such node, returns null. 
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>selectors</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>One or more selectors
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Selectors API Example&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;div id="foo"&gt;
		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;
		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;
		 		&lt;/div&gt;
		 		&lt;div id="bar"&gt;
		 			&lt;p&gt;...&lt;/p&gt;
		 		&lt;/div&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 x would contain the first element in the document with an ID of either foo or bar (or both). In the sample document above, it would select the div element with the ID of foo because it is first in document order.
		 <codeblock>var x = document.querySelector("#foo, #bar");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.w3.org/TR/selectors-api/#nodeselector"><linktext>W3C Selectors API</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:querySelectorAll"><apiName>querySelectorAll</apiName><shortdesc>
		 
		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOM 3 Core"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A NodeList containing all of the matching Element nodes within the node’s subtree, in document order. If there are no such nodes, returns an empty NodeList.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>selectors</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>One or more selectors
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Selectors API Example&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;div id="foo"&gt;
		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;
		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;
		 		&lt;/div&gt;
		 		&lt;div id="bar"&gt;
		 			&lt;p&gt;...&lt;/p&gt;
		 		&lt;/div&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 The following example would select all p elements in the document that have a class of either "error" or "warning".
		 <codeblock>var alerts = document.querySelectorAll("p.warning, p.error");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.w3.org/TR/selectors-api/#nodeselector"><linktext>W3C Selectors API</linktext></link><link href="http://www.quirksmode.org/dom/w3c_core.html#gettingelements"><linktext>Quirksmode: Getting elements</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:releaseCapture"><apiName>releaseCapture</apiName><shortdesc>
		 Removes mouse capture from the object in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes mouse capture from the object in the current document.
		 
		 <p>For releaseCapture to have an effect, you must set mouse capture through 
		 the setCapture method.</p>
		 
		 <p>You can invoke the releaseCapture method on the document object. The 
		 releaseCapture method makes it unnecessary to determine which element 
		 has capture to programmatically release it. Other actions that release 
		 document capture include displaying a modal dialog box and switching 
		 focus to another application or browser window.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;BODY onload="oOwnCapture.setCapture();" onclick="document.releaseCapture();"&gt;
		 &lt;DIV ID=oOwnCapture onmousemove="oWriteLocation.value = event.clientX + event.clientY"; onlosecapture="alert(event.srcElement.id + ' has lost mouse capture.')"&gt;
		 &lt;TEXTAREA ID=oWriteLocation COLS=2&gt;&lt;/TEXTAREA&gt;
		 &lt;/DIV&gt;
		 &lt;HR&gt;
		 &lt;DIV ID=oNoCapture&gt;
		 &lt;P&gt;Click the document to invoke the releaseCapture method.&lt;/P&gt;
		 &lt;/DIV&gt;
		 &lt;/BODY&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536689%28VS.85%29.aspx"><linktext>MSDN - releaseCapture Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:removeAttribute"><apiName>removeAttribute</apiName><shortdesc>
		 Removes an attribute from the specified element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiTool name="IE" version="4.0+"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiTool name="Safari" version="1.0+"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the attribute to be removed from element. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes an attribute from the specified element. 
		 
		 <p>Note : You should use removeAttribute instead of setting 
		 the attribute value to null using setAttribute. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // &lt;div id="div1" align="left" width="200px"&gt;
		 document.getElementById("div1").removeAttribute("align"); 
		 // now: &lt;div id="div1" width="200px"&gt;</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:removeAttributeNS"><apiName>removeAttributeNS</apiName><shortdesc>
		 Removes the specified attribute from an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the 
		 implementation does not support the feature "XML" and the language 
		 exposed through the Document does not support XML Namespaces (such 
		 as [HTML 4.01]). 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Contains the namespace of the attribute. 
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The attribute to be removed from the current node.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes the specified attribute from an element.
		 
		 <p>FF Note : In Firefox 3 and later, this method resets DOM values to their defaults. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // &lt;div id="div1" xmlns:special="http://www.mozilla.org/ns/specialspace" special:specialAlign="utterleft" width="200px" /&gt; 
		 d = document.getElementById("div1"); 
		 d.removeAttributeNS("http://www.mozilla.org/ns/specialspace", "specialAlign"); 
		 // now: &lt;div id="div1" width="200px" /&gt;</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:removeAttributeNode"><apiName>removeAttributeNode</apiName><shortdesc>
		 Removes an attribute object from the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiTool name="IE" version="6.0+"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiTool name="Safari" version="1.0+"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_FOUND_ERR: Raised if oldAttr is not 
		 an attribute of the element.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>Returns a reference to the removed attribute object.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Attr</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core:Attr</apiOperationClassifier><apiDesc>The Attr node that needs to be removed.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes an attribute object from the object.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:removeBehavior"><apiName>removeBehavior</apiName><shortdesc>
		 Detaches a behavior from the element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If it was successfully removed.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>id</apiItemName><apiType value="Number"/><apiDesc>Specifies the identifier that is returned from a previous addBehavior call.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Detaches a behavior from the element. 
		 
		 <p>This method applies only to attached behaviors, which are the original 
		 Dynamic HTML (DHTML) behaviors introduced in Microsoft Internet Explorer 5. 
		 Element behaviors are a feature in Internet Explorer 5.5 and cannot be 
		 added or removed from an element.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:removeExpression"><apiName>removeExpression</apiName><shortdesc>
		 Removes the expression from the specified property.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the expression was successfully removed.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the name of the property from which to remove an expression.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes the expression from the specified property. 
		 
		 <p>After the expression is removed from the specified property, the value 
		 of the property equals the last computed value of the expression. To 
		 remove expressions set by the setExpression method, use removeExpression. </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:removeNode"><apiName>removeNode</apiName><shortdesc>
		 Removes the object from the document hierarchy.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the object that is removed.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>removeChildren</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>If the childNodes collection of the object is removed
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes the object from the document hierarchy.
		 
		 <p>This property is accessible at run time. If elements are removed at 
		 run time, before the closing tag is parsed, areas of the document 
		 might not render.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536708%28VS.85%29.aspx"><linktext>MSDN - removeNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:replaceAdjacentText"><apiName>replaceAdjacentText</apiName><shortdesc>
		 Replaces the text adjacent to the element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="1.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A pointer to a String returning the old text.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>where</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies where to locate the replacement text, using one of the following values. 
		 <ul>
		 <li>beforeBegin : Inserts text immediately before the object.</li>
		 <li>afterBegin : Inserts text after the start of the object, but before all other content in the object.</li>
		 <li>beforeEnd : Inserts text immediately before the end of the object, but after all other content in the object.</li>
		 <li>afterEnd : Inserts text immediately after the end of the object.</li>
		 </ul>
		 </apiDesc></apiParam><apiParam><apiItemName>replaceText</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the replacement text.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replaces the text adjacent to the element.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:replaceNode"><apiName>replaceNode</apiName><shortdesc>
		 Replaces the object with another element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the object that is replaced.
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>newNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the new element to replace the object.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replaces the object with another element.
		 
		 <p>When a node is replaced, all values that are associated with the 
		 replaced object are removed. For example, if a b object is replaced 
		 with an i object, any attributes and text between the opening and 
		 closing tags are also replaced. To preserve these values, copy them 
		 to the new element before the original object is replaced.</p>
		 
		 <p>This method is accessible at run time. If elements are removed at run 
		 time before the closing tag is parsed, areas of the document might 
		 not render.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;SCRIPT&gt;
		 function fnReplace() {
		 var sPreserve = oList.innerHTML;
		 var oNewNode = document.createElement("OL");
		 oList.replaceNode(oNewNode);
		 oNewNode.innerHTML = sPreserve;
		 }
		 &lt;/SCRIPT&gt;
		 
		 &lt;UL ID = oList&gt;
		 &lt;LI&gt;List Item 1
		 &lt;LI&gt;List Item 2
		 &lt;LI&gt;List Item 3
		 &lt;LI&gt;List Item 4
		 &lt;/UL&gt;
		 &lt;INPUT TYPE = button VALUE = "Replace List" onclick = "fnReplace()"&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536719%28VS.85%29.aspx"><linktext>MSDN - replaceNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.core:Element:scrollIntoView"><apiName>scrollIntoView</apiName><shortdesc>
		 Causes the object to scroll into view, aligning it either at the top 
		 or bottom of the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>alignToTop</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>Whether to scroll the object so that top of the object is visible at the top of the window.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Causes the object to scroll into view, aligning it either at the top 
		 or bottom of the window. 
		 
		 <p>The scrollIntoView method is useful for immediately showing the user
		 the result of some action without requiring the user to manually 
		 scroll through the document to find the result.</p>
		 
		 <p>Depending on the size of the given object and the current window, this 
		 method might not be able to put the item at the very top or very bottom, 
		 but will position the object as close to the requested position as possible.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;ScrollIntoView() example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 function showIt(elID) {
		 var el = document.getElementById(elID);
		 el.scrollIntoView(true);
		 }
		 &lt;/script&gt;
		 
		 &lt;/head&gt;
		 &lt;body&gt;
		 	&lt;div style="height: 5em; width: 30em; overflow: scroll; border: 1px solid blue;"&gt;
		 		&lt;div style="height: 100px"&gt;&lt;/div&gt;
		 		&lt;p id="pToShow"&gt;The para to show&lt;/p&gt;
		 		&lt;div style="height: 100px"&gt;&lt;/div&gt;
		 	&lt;/div&gt;
		 	&lt;input type="button" value="Show para" onclick="showIt('pToShow');"&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setActive"><apiName>setActive</apiName><shortdesc>
		 Sets the object as active without setting focus to the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.5+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Sets the object as active without setting focus to the object.
		 
		 <p>The setActive method does not cause the document to scroll to the 
		 active object in the current page or in another frame or window. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function fnBottomActive() {
		 		//Set the object with ID=btnLarger active in frame with ID=oFrame1.
		 		window.parent.oFrame1.secondButton.setActive();
		 }
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setAttribute"><apiName>setAttribute</apiName><shortdesc>
		 Sets the value of the specified attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiTool name="IE" version="5.0+"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiTool name="Safari" version="1.0+"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified name is not an XML name according to the XML version in 
		 use specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the name of the attribute.
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>Specifies the string, number, or Boolean to assign to the attribute. 
		 </apiDesc></apiParam><apiParam><apiItemName>caseSensitive</apiItemName><apiType value=""/><apiDesc>(IE Only) Specifies whether to use a case-sensitive 
		 search to locate the attribute. Can be one of the following values: 
		 1 : The case of name  is respected. 
		 0 : Match name regardless of case.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the value of the specified attribute.
		 
		 <p>IE Note: Internet Explorer 8 and later. IE8 mode enables several enhancements 
		 to the setAttribute, getAttribute, and removeAttribute methods that 
		 are not available when pages are displayed in earlier document modes.</p>
		 
		 <p>The name parameter requires the name of the desired content 
		 attribute and not the Document Object Model (DOM) attribute. For example,
		 in IE8 mode, this method no longer requires name to be "className" 
		 when setting, getting, or removing a CLASS attribute. Earlier versions of 
		 Internet Explorer and Internet Explorer 8 in compatibility mode still 
		 require name to specify the corresponding DOM property name.</p>
		 
		 <p>The name parameter is not case sensitive. As a result, the 
		 caseSensitive parameter is no longer supported and should not be used.</p>
		 
		 <p>The methods support event handlers. For example, the following code example 
		 defines an event handler to call a function called SomeFunction when the 
		 body of the page is loaded.</p>
		 
		 <p>document.body.setAttribute('onload', 'SomeFunction()');</p>
		 
		 <p>If the specified attribute is not already present, the setAttribute method 
		 adds the attribute to the object and sets the value.</p>
		 
		 <p>If your pages are displayed in IE5 mode or IE7 mode, be careful when spelling 
		 attribute names. If you set iCaseSensitive to 1 and the name parameter does 
		 not have the same uppercase and lowercase letters as the attribute, a new 
		 attribute is created for the object. If two or more attributes have the 
		 same name, differing only in case, and iCaseSensitive is set to 0, this method 
		 assigns values only to the first attribute created with this name. All other 
		 attributes of the same name are ignored.</p>
		 
		 <p>New for Internet Explorer 8 Internet Explorer 8 and later. When pages are 
		 displayed in IE8 mode, the vValue parameter only supports string values. Non-string
		 values are not automatically converted to string values. For best results, 
		 formally convert values to strings before using them as parameter values. For 
		 example, do not attempt to pass an object directly to the vValue parameter; call 
		 the object's toString method instead.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setAttributeNS"><apiName>setAttributeNS</apiName><shortdesc>
		 Adds a new attribute or changes the value of an attribute with the 
		 given namespace and name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if the 
		 specified qualified name is not an XML name according to the XML 
		 version in use specified in the Document.xmlVersion attribute.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the qualifiedName 
		 is malformed per the Namespaces in XML specification, if the 
		 qualifiedName has a prefix and the namespaceURI is null, if the 
		 qualifiedName has a prefix that is "xml" and the namespaceURI is different 
		 from "http://www.w3.org/XML/1998/namespace", if the qualifiedName or 
		 its prefix is "xmlns" and the namespaceURI is different from 
		 "http://www.w3.org/2000/xmlns/", or if the namespaceURI is 
		 "http://www.w3.org/2000/xmlns/" and neither the qualifiedName nor its prefix 
		 is "xmlns".
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the 
		 implementation does not support the feature "XML" and the language 
		 exposed through the Document does not support XML Namespaces (such 
		 as [HTML 4.01]). 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>nameSpace</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifying the namespace of the attribute. 
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The attribute to be set. 
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value=""/><apiDesc>The desired string value of the new attribute. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a new attribute or changes the value of an attribute with the 
		 given namespace and name. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var d = document.getElementById("d1");
		 d.setAttributeNS("http://www.mozilla.org/ns/specialspace", "align", "center");</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setAttributeNode"><apiName>setAttributeNode</apiName><shortdesc>
		 Sets an attribute object node as part of the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiTool name="IE" version="4.0+"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiTool name="Safari" version="1.0+"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if newAttr 
		 was created from a different document than the one that created 
		 the element.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INUSE_ATTRIBUTE_ERR: Raised if newAttr 
		 is already an attribute of another Element object. The DOM user must 
		 explicitly clone Attr nodes to re-use them in other elements.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>Returns a reference to the removed attribute object.
		 </apiDesc><apiOperationClassifier>dom.core:Attr</apiOperationClassifier></apiReturn><apiParam><apiItemName>attrNode</apiItemName><apiOperationClassifier>dom.core:Attr</apiOperationClassifier><apiDesc>Attribute object to be assigned.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets an attribute object node as part of the object.
		 
		 <p>If the attribute named already exists on the element, that attribute
		 is replaced with the new one and the replaced one is returned.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // &lt;div id="one" align="left"&gt;one&lt;/div&gt; 
		 // &lt;div id="two"&gt;two&lt;/div&gt; 
		 var d1 = document.getElementById("one"); 
		 var d2 = document.getElementById("two"); 
		 var a = d1.getAttributeNode("align"); 
		 d2.setAttributeNode(a.cloneNode(true)); 
		 alert(d2.attributes[1].value) 
		 // returns: `left'</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setAttributeNodeNS"><apiName>setAttributeNodeNS</apiName><shortdesc>
		 Adds a new attribute node with the specified namespace and name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if newAttr 
		 was created from a different document than the one that created 
		 the element.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INUSE_ATTRIBUTE_ERR: Raised if newAttr 
		 is already an attribute of another Element object. The DOM user must 
		 explicitly clone Attr nodes to re-use them in other elements.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: May be raised if the 
		 implementation does not support the feature "XML" and the language 
		 exposed through the Document does not support XML Namespaces (such 
		 as [HTML 4.01]). 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>attrNode</apiItemName><apiOperationClassifier>dom.core:Attr</apiOperationClassifier><apiDesc>Attribute object to be assigned.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a new attribute node with the specified namespace and name.
		 
		 <p>If the specified attribute already exists on the element, then that
		 attribute is replaced with the new one and the replaced one is returned.</p>
		 
		 <p>Note: If you try to set without cloning the node, Mozilla gives an 
		 NS_ERROR_DOM_INUSE_ATTRIBUTE_ERR "Attribute already in use" error, as the 
		 DOM requires cloning for Attr to be reused (unlike other Nodes which can 
		 be moved).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // &lt;div id="one" xmlns:myNS="http://www.mozilla.org/ns/specialspace" myNS:special-align="utterleft"&gt;one&lt;/div&gt; 
		 // &lt;div id="two"&gt;two&lt;/div&gt; 
		 
		 var myns = "http://www.mozilla.org/ns/specialspace"; 
		 var d1 = document.getElementById("one"); 
		 var d2 = document.getElementById("two"); 
		 var a = d1.getAttributeNodeNS(myns, "special-align"); 
		 d2.setAttributeNodeNS(a.cloneNode(true));
		 alert(d2.attributes[1].value) // returns: `utterleft'</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setCapture"><apiName>setCapture</apiName><shortdesc>
		 Sets the mouse capture to the object that belongs to the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>containerCapture</apiItemName><apiType value="Boolean"/><apiData>true</apiData><apiDesc>(IE 5.5+) Whether events originating in a container are captured by the container.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the mouse capture to the object that belongs to the current document.
		 
		 <p>After mouse capture is set to an object, all mouse events for the document 
		 are routed to that object. Supported mouse events include onmousedown, 
		 onmouseup, onmousemove, onclick, ondblclick, onmouseover, and onmouseout. 
		 The srcElement property of the window event object always returns the object 
		 that is positioned under the mouse, instead of the object that has mouse capture.</p>
		 
		 <p>Mouse clicks automatically trigger the onlosecapture event. To retain mouse 
		 capture, call setCapture inside the onclick event handler. Mouse capture is 
		 also lost if the browser window loses focus for any reason (including alerts or 
		 pop-up windows).</p>
		 
		 <p>When the containerCapture parameter is set to true, a container object, such as 
		 a div, captures mouse events for all objects in it. By passing the value false, 
		 objects in that container can fire events, and cancel event bubbling.</p>
		 
		 <p>Drag-and-drop operations, such as the ondragstart event, and text selection 
		 through the user interface are disabled when mouse capture is set 
		 programmatically. The following key events are unaffected by mouse capture and 
		 fire as usual: onkeydown, onkeyup, and onkeypress. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;BODY onload="oOwnCapture.setCapture()" onclick="document.releaseCapture()"&gt;
		 &lt;DIV ID=oOwnCapture STYLE="background-color:#ccc;padding:6pt"
		 onmousemove="oWriteLocation.value = event.x + ':' + event.y";
		 onlosecapture="alert(event.srcElement.id + ' lost mouse capture.')"&gt;
		 &lt;P&gt;Mouse capture has been set to this gray division (DIV) 
		 at load time using the setCapture method. The text area will 
		 track the mousemove event through the &lt;B&gt;x&lt;/B&gt; 
		 and &lt;B&gt;y&lt;/B&gt; properties of the event object.&lt;BR&gt;
		 &lt;P&gt;Event bubbling works as usual on objects within a 
		 container that has mouse capture. Demonstrate this concept by 
		 clicking the button below or changing the active window from 
		 this one and then back. After oOwnCapture loses mouse capture, 
		 the text area continues tracking the mousemove events only 
		 while the cursor is over objects it contains.&lt;/P&gt;
		 &lt;BR&gt;&lt;BR&gt;
		 &lt;TEXTAREA ID=oWriteLocation COLS=9&gt; &lt;/TEXTAREA&gt;
		 &lt;/DIV&gt;
		 &lt;HR&gt;
		 &lt;DIV ID=oNoCapture&gt;
		 &lt;P&gt;This white division is here to illustrate that mousemove 
		 events over objects it contains are captured on the gray 
		 division, oOwnCapture.
		 &lt;INPUT VALUE="Move mouse over this object."&gt;
		 &lt;BUTTON&gt;Click Anywhere to End Mouse Capture&lt;/BUTTON&gt;
		 &lt;/DIV&gt;
		 &lt;/BODY&gt;</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setExpression"><apiName>setExpression</apiName><shortdesc>
		 Sets an expression for the specified object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.0+"/><apiSince version="Non-Standard 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the name of the property to which 
		 sExpression  is added.
		 </apiDesc></apiParam><apiParam><apiItemName>expression</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies any valid script(JScript, JavaScript, 
		 VBSCript) statement without quotations or semicolons. This string 
		 can include references to other properties on the current page. Array
		 references are not allowed on object properties included in this script.
		 </apiDesc></apiParam><apiParam><apiItemName>language</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies one of the following values:
		 <ul>
		 <li>JScript : Default. Language is JScript.</li>
		 <li>VBScript : Language is VBScript.</li>
		 <li>JavaScript : Language is JavaScript.</li>
		 </ul>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets an expression for the specified object. 
		 
		 <p>Use the setExpression method to add expressions to supported Cascading 
		 Style Sheets (CSS) attributes and read/write DHTML Properties. To remove 
		 expressions set by setExpression, use the removeExpression method.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setIdAttribute"><apiName>setIdAttribute</apiName><shortdesc>
		 If the parameter isId is true, this method declares the specified 
		 attribute to be a user-determined ID attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOM 3 Core"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_FOUND_ERR: Raised if the specified 
		 node is not an attribute of this element.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the attribute.
		 </apiDesc></apiParam><apiParam><apiItemName>isId</apiItemName><apiType value="Boolean"/><apiDesc>Whether the attribute is a of type ID.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <p>If the parameter isId is true, this method declares the specified 
		 attribute to be a user-determined ID attribute. This affects the value 
		 of Attr.isId and the behavior of Document.getElementById, but does not 
		 change any schema that may be in use, in particular this does not 
		 affect the Attr.schemaTypeInfo of the specified Attr node. Use the value 
		 false for the parameter isId to undeclare an attribute for being a 
		 user-determined ID attribute.
		 To specify an attribute by local name and namespace URI, use the setIdAttributeNS
		 method.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setIdAttributeNS"><apiName>setIdAttributeNS</apiName><shortdesc>
		 If the parameter isId is true, this method declares the specified 
		 attribute to be a user-determined ID attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOM 3 Core"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_FOUND_ERR: Raised if the specified 
		 node is not an attribute of this element.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>nameSpaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI of the attribute.
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the attribute.
		 </apiDesc></apiParam><apiParam><apiItemName>isId</apiItemName><apiType value="Boolean"/><apiDesc>Whether the attribute is a of type ID.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <p>If the parameter isId is true, this method declares the specified 
		 attribute to be a user-determined ID attribute. This affects the value 
		 of Attr.isId and the behavior of Document.getElementById, but does not 
		 change any schema that may be in use, in particular this does not 
		 affect the Attr.schemaTypeInfo of the specified Attr node. Use the value 
		 false for the parameter isId to undeclare an attribute for being a 
		 user-determined ID attribute.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:setIdAttributeNode"><apiName>setIdAttributeNode</apiName><shortdesc>
		 If the parameter isId is true, this method declares the specified attribute 
		 to be a user-determined ID attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOM 3 Core"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if 
		 this node is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_FOUND_ERR: Raised if the specified 
		 node is not an attribute of this element.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>idAttr</apiItemName><apiOperationClassifier>dom.core:Attr</apiOperationClassifier><apiDesc>The attribute node.
		 </apiDesc></apiParam><apiParam><apiItemName>isId</apiItemName><apiType value="Boolean"/><apiDesc>Whether the attribute is a of type ID.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <p>If the parameter isId is true, this method declares the specified attribute 
		 to be a user-determined ID attribute. This affects the value of Attr.isId 
		 and the behavior of Document.getElementById, but does not change any schema 
		 that may be in use, in particular this does not affect the 
		 Attr.schemaTypeInfo of the specified Attr node. Use the value false for the 
		 parameter isId to undeclare an attribute for being a user-determined ID attribute. </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.core:Element:swapNode"><apiName>swapNode</apiName><shortdesc>
		 Exchanges the location of two objects in the document hierarchy.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the object that invoked the method.
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>node</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the existing element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Exchanges the location of two objects in the document hierarchy.
		 
		 <p>This method is accessible at run time. If elements are removed at 
		 run time, before the closing tag is parsed, areas of the document 
		 might not render.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 		function fnSwap() {
		 			oList.children(0).swapNode(oList.children(1));
		 		}
		 &lt;/script&gt;
		 
		 &lt;ul ID = oList&gt;
		 		&lt;li&gt;List Item 1&lt;/li&gt;
		 		&lt;li&gt;List Item 2&lt;/li&gt;
		 		&lt;li&gt;List Item 3&lt;/li&gt;
		 		&lt;li&gt;List Item 4&lt;/li&gt;
		 &lt;/ul&gt;
		 &lt;input type=button value="Swap List" onclick="fnSwap()"&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536774%28VS.85%29.aspx"><linktext>MSDN - swapNode Method</linktext></link></related-links></apiOperation><apiValue id="dom.core:Element:baseURIObject:get"><apiName>baseURIObject</apiName><shortdesc>
		 Non-Standard | FireFox 3+ 
		 
		 Returns the nsIURI  object representing the element's URI.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIURI</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | FireFox 3+</b> 
		 
		 Returns the nsIURI  object representing the element's URI.
		 
		 <p>Note: This property exists on all elements (HTML, XUL, SVG, MathML, 
		 etc.), but only if the script trying to use it has UniversalXPConnect 
		 privileges.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:Element:childElementCount:get"><apiName>childElementCount</apiName><shortdesc>
		 
		 Returns the current number of element nodes that are children of this 
		 element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the current number of element nodes that are children of this 
		 element. 0 if this element has no child nodes that are of nodeType 1.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.childElementCount"><linktext>MDC - Element: childElementCount Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-childElementCount"><linktext>W3C - Element Traversel: childElementCount Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/firstElementChild"><linktext>firstElementChild</linktext></link><link href="dom.core.xml#Element/lastElementChild"><linktext>lastElementChild</linktext></link><link href="dom.core.xml#Element/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="dom.core.xml#Element/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:children:get"><apiName>children</apiName><shortdesc>
		 ? | FireFox 3.5+ 
		 
		 Returns a collection of child elements of the given element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NodeList</apiValueClassifier></apiValueDef><apiDesc>
		 <b>? | FireFox 3.5+</b> 
		 
		 Returns a collection of child elements of the given element.
		 
		 <p>The list returned is an ordered collection of element objects that 
		 are children of the current element. If the element has no children, 
		 then list returned contains no elements.</p>
		 
		 <p>Note: The items in the collection of elements are objects and not 
		 strings. To get data from those node objects, you must use their 
		 properties (e.g. elementNodeReference.children[1].nodeName to get the 
		 name, etc.).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // parg is an object reference to a &lt;p&gt; element
		 if (parg.childElementCount()) {
		 	// So, first we check if the object is not empty, if the object has child nodes
		 	var children = parg.children;
		 	for (var i = 0; i &lt; children.length; i++) {
		 	// do something with each child element as children[i]
		 	// NOTE: List is live, Adding or removing children will change the list
		 	};
		 };
		 </codeblock>
		 </example></apiValueDetail></apiValue><apiValue id="dom.core:Element:clientHeight:get"><apiName>clientHeight</apiName><shortdesc>
		 
		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the inner height of an element in pixels, including padding but not the horizontal scrollbar height, border, or margin.
		 
		 <p>clientHeight can be calculated as CSS height + CSS padding - height of horizontal scrollbar (if present).</p>
		 
		 <p><b>Note:</b> offsetLeft returns the position the upper left edge of the element; not necessarily 
		 the 'real' left edge of the element. This is important for span elements in flowed text that wraps from one 
		 line to the next. The span may start in the middle of the page and wrap around to the beginning of the next 
		 line. The offsetLeft will refer to the left edge of the start of the span, not the left edge of text at the 
		 start of the second line. Therefore, a box with the left, top, width and height of offsetLeft, offsetTop, 
		 offsetWidth and offsetHeight will not be a bounding box for a span with wrapped text.</p>
		 
		 </apiDesc><example>
		 This example shows how the clientHeight property and the offsetHeight property measure document height differently. 
		 The height of the div is set to 100, and this is the value retrieved by the offsetHeight property, not the clientHeight property. 
		 
		 <codeblock>
		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientHeight)"&gt;client height&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetHeight)"&gt;offset heightY&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533563(VS.85).aspx"><linktext>MSDN: clientHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientHeight"><linktext>MDC - Element: clientHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:clientLeft:get"><apiName>clientLeft</apiName><shortdesc>
		 
		 The width of the left border of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 The width of the left border of an element in pixels. 
		 
		 <p>It includes the width of the vertical scrollbar if the text direction of the element is right–to–left and 
		 if there is an overflow causing a left vertical scrollbar to be rendered. clientLeft does not include the left 
		 margin or the left padding.</p>
		 
		 <p><b>Note:</b> The difference between the offsetLeft and clientLeft properties is the border of the object.</p>
		 
		 <p><b>Note:</b> When layout.scrollbar.side property is set to 1 or to 3 and when the text-direction is set to RTL, 
		 then the vertical scrollbar is positioned on the left and this impacts the way clientLeft is computed.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533564(VS.85).aspx"><linktext>MSDN: clientLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientLeft"><linktext>MDC - Element: clientLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:clientTop:get"><apiName>clientTop</apiName><shortdesc>
		 
		 The width of the top border of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 The width of the top border of an element in pixels. It does not include the top margin or padding.
		 
		 <p><b>Note:</b> The difference between the offsetTop and the clientTop properties is the border area of the object.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533565(VS.85).aspx"><linktext>MSDN: clientTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientTop"><linktext>MDC - Element: clientTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:clientWidth:get"><apiName>clientWidth</apiName><shortdesc>
		 
		 Returns the inner width of an element in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the inner width of an element in pixels. It includes padding but not the vertical scrollbar (if present, if rendered), border or margin.
		 
		 </apiDesc><example>
		 This example shows how the clientWidth property and the offsetWidth property measure document width differently. The width of the div 
		 is set to 200, and this is the value retrieved by the offsetWidth property, not the clientWidth property. 
		 
		 <codeblock>
		 &lt;div id=oDiv style="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset widthY&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533566(VS.85).aspx"><linktext>MSDN: clientWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.clientWidth"><linktext>MDC - Element: clientWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#client-attributes"><linktext>W3C - CSSOM View: clientWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:firstElementChild:get"><apiName>firstElementChild</apiName><shortdesc>
		 
		 Returns the first child element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns the first child element node of this element. null if this 
		 element has no child elements.
		 
		 </apiDesc><example>
		 In this example, the alert shows "SPAN", which is the name of the 
		 first child node of the paragraph element.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.firstElementChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.firstElementChild"><linktext>MDC - Element: firstElementChild Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-firstElementChild"><linktext>W3C - Element Traversel: firstElementChild Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/childElementCount"><linktext>childElementCount</linktext></link><link href="dom.core.xml#Element/lastElementChild"><linktext>lastElementChild</linktext></link><link href="dom.core.xml#Element/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="dom.core.xml#Element/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:innerHTML:get"><apiName>innerHTML</apiName><shortdesc>
		 DOM Level 0 | NS\FireFox\IE4+ 
		 
		 Sets or gets all of the markup and content within a given element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0 | NS\FireFox\IE4+</b> 
		 
		 Sets or gets all of the markup and content within a given element.
		 
		 <p>Note: As there is no public specification for this property, 
		 implementations differ widely. For example, when text is entered into 
		 a text input, IE will change the value attribute of the input's 
		 innerHTML property but Gecko browsers do not.</p>
		 
		 <p>Note: It should never be used to write parts of a table—W3C DOM methods 
		 should be used for that—though it can be used to write an entire table 
		 or the contents of a cell.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // HTML:
		 // &lt;div id="d"&gt;&lt;p&gt;Content&lt;/p&gt;
		 // &lt;p&gt;Further Elaborated&lt;/p&gt;
		 // &lt;/div&gt;
		 
		 d = document.getElementById("d");
		 dump(d.innerHTML);
		 
		 // the string "&lt;p&gt;Content&lt;/p&gt;&lt;p&gt;Further Elaborated&lt;/p&gt;"
		 // is dumped to the console window
		 </codeblock>
		 </example></apiValueDetail></apiValue><apiValue id="dom.core:Element:lastElementChild:get"><apiName>lastElementChild</apiName><shortdesc>
		 
		 Returns the last child element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns the last child element node of this element. null if this 
		 element has no child elements.
		 
		 </apiDesc><example>
		 In this example, the alert shows "B", which is the name of the 
		 last child node of the paragraph element.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 	&lt;b&gt;bold&lt;/b&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.lastElementChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.lastElementChild"><linktext>MDC - Element: lastElementChild Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-lastElementChild"><linktext>W3C - Element Traversel: lastElementChild Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/childElementCount"><linktext>childElementCount</linktext></link><link href="dom.core.xml#Element/firstElementChild"><linktext>firstElementChild</linktext></link><link href="dom.core.xml#Element/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="dom.core.xml#Element/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:nextElementSibling:get"><apiName>nextElementSibling</apiName><shortdesc>
		 
		 Returns the next sibling element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns the next sibling element node of this element. null if this 
		 element has no element sibling nodes that come after this one in the 
		 document tree.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-01').nextElementSibling;
		 	document.write('&lt;p&gt;Siblings of div-01&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.nextElementSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;</codeblock>
		 
		 <p>This example outputs the following into the page when it loads:</p>
		 
		 <p>Siblings of div-01</p>
		 <ol>
		 	<li>DIV</li>
		 	<li>SCRIPT</li>
		 	<li>P</li>
		 	<li>OL</li>
		 </ol>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.nextElementSibling"><linktext>MDC - Element: nextElementSibling Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-nextElementSibling"><linktext>W3C - Element Traversel: nextElementSibling Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/childElementCount"><linktext>childElementCount</linktext></link><link href="dom.core.xml#Element/firstElementChild"><linktext>firstElementChild</linktext></link><link href="dom.core.xml#Element/lastElementChild"><linktext>lastElementChild</linktext></link><link href="dom.core.xml#Element/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetHeight:get"><apiName>offsetHeight</apiName><shortdesc>
		 
		 Height of an element relative to the element's offsetParent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Height of an element relative to the element's offsetParent.
		 
		 <p>Typically, an element's offsetHeight is a measurement which includes 
		 the element borders, the element vertical padding, the element 
		 horizontal scrollbar (if present, if rendered) and the element CSS height.</p>
		 
		 <p>For the document body object, the measurement includes total linear 
		 content height instead of the element CSS height. Floated elements 
		 extending below other linear content are ignored.</p>
		 
		 <p><b>Note (IE6):</b> To comply with the <xref class="external" href="http://www.w3.org/TR/REC-CSS1/" rel="external nofollow">Cascading Style Sheets, Level 1 (CSS1)</xref> World Wide 
		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 
		 height of objects differently when you use the !DOCTYPE declaration in your 
		 document to switch on standards-compliant mode. This difference may affect 
		 the value of the offsetWidth propety. When standards-compliant mode is 
		 switched on, the width property specifies the distance between the left and 
		 right edges of the bounding box that surrounds the object's content. When 
		 standards-compliant mode is not switched on, and with earlier versions of 
		 Windows Internet Explorer, the width property also includes the border and 
		 padding belts that surround the object's bounding box.</p>
		 
		 </apiDesc><example>
		 This example adjusts the size of a clock's readout to fit the current width and height of the document body.
		 
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;A Simple Clock&lt;/title&gt;
		 &lt;script type="text/javascript"&gt;
		 	function startClock() {
		 		window.setInterval("Clock_Tick()", 1000);
		 		Clock_Tick();
		 	}
		 
		 	var iRatio = 4;
		 	function Clock_Tick() {
		 		var dToday = Date();
		 		var sTime = dToday.substring(11,19);
		 		var iDocHeight = document.body.offsetHeight;
		 		var iDocWidth = document.body.offsetWidth;
		 
		 		if ((iDocHeightRatio)&gt;iDocWidth)
		 		iDocHeight = iDocWidth / iRatio;
		 		document.all.MyTime.innerText = sTime;
		 		document.all.MyTime.style.fontSize = iDocHeight;
		 	}
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onload="startClock()"&gt;
		 &lt;p id="MyTime"&gt;&amp;nbsp;&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534199(VS.85).aspx"><linktext>MSDN: offsetHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetHeight"><linktext>MDC - Element: offsetHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetLeft:get"><apiName>offsetLeft</apiName><shortdesc>
		 
		 Returns the number of pixels that the upper left corner of the current 
		 element is offset to the left within the offsetParent node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the number of pixels that the upper left corner of the current 
		 element is offset to the left within the offsetParent node.
		 
		 <p><b>Note:</b> offsetLeft returns the position the upper left edge of the element; 
		 not necessarily the 'real' left edge of the element. This is important 
		 for inline elements (such as span) in flowed text that wraps from one 
		 line to the next. The span may start in the middle of the line and wrap 
		 around to the beginning of the next line. The offsetLeft will refer to 
		 the left edge of the start of the span, not the left edge of text at the 
		 start of the second line. Therefore, a box with the left, top, width and 
		 height of offsetLeft, offsetTop, offsetWidth and offsetHeight will not be 
		 a bounding box for a span with wrapped text.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var colorTable = document.getElementById("t1");
		 var tOLeft = colorTable.offsetLeft;
		 
		 if (tOLeft &gt; 5) {
		 	// large left offset: do something here
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534200(VS.85).aspx"><linktext>MSDN: offsetLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetLeft"><linktext>MDC - Element: offsetLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetParent:get"><apiName>offsetParent</apiName><shortdesc>
		 
		 The element from which all offset calculations are currently computed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 The element from which all offset calculations are currently computed.
		 
		 <p>offsetParent returns a reference to the object which is the closest 
		 (nearest in the containment hierarchy) positioned containing element. 
		 If the element is non-positioned, the root element (html in standards 
		 compliant mode; body in quirks rendering mode) is the offsetParent. 
		 offsetParent returns null when the element has style.display set 
		 to "none".</p>
		 
		 <p><b>Note (IE5):</b> In Microsoft Internet Explorer 5, the offsetParent property returns 
		 the table object for the td object.</p>
		 
		 <p><b>Note (IE4):</b> In Internet Explorer 4.0 it returns 
		 the tr object. You can use the parentElement property to retrieve the 
		 immediate container of the table cell.</p>
		 
		 </apiDesc><example>
		 This example shows how to determine the position of a td object. Although the td 
		 object appears to the far right in the document, its position is close to the x-axis and y-axis, 
		 because its offset parent is a table object rather than the document body. For Internet Explorer 4.0,
		 this same example returns a position of 0,0 because the offset parent is the table row.
		 
		 <codeblock>
		 &lt;table border='1' align='right'&gt;
		 	&lt;tr&gt;
		 		&lt;td id='oCell'&gt;This is a small table.&lt;/td&gt;
		 	&lt;/tr&gt;
		 &lt;/table&gt;</codeblock>
		 
		 <codeblock>
		 var oElement = document.getElementById("oCell");
		 
		 alert("The TD element is at (" + oElement.offsetLeft + 
		 "," + oElement.offsetTop + ")\n" + "The offset parent is " 
		 + oElement.offsetParent.tagName );</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534302(VS.85).aspx"><linktext>MSDN: offsetParent Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetParent"><linktext>MDC - Element: offsetParent Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetParent Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetTop:get"><apiName>offsetTop</apiName><shortdesc>
		 
		 Returns the distance of the current element relative to the 
		 top of the offsetParent node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the distance of the current element relative to the 
		 top of the offsetParent node.
		 
		 </apiDesc><example>
		 <codeblock>
		 d = document.getElementById("div1");
		 
		 topPos = d.offsetTop;
		 
		 if (topPos &gt; 10) {
		 	// object is offset more
		 	// than 10 pixels from its parent
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534303(VS.85).aspx"><linktext>MSDN: offsetTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetTop"><linktext>MDC - Element: offsetTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:offsetWidth:get"><apiName>offsetWidth</apiName><shortdesc>
		 
		 The width of an element, relative to the layout.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 The width of an element, relative to the layout.
		 
		 <p>Typically, an element's offsetWidth is a measurement which includes 
		 the element borders, the element horizontal padding, the element 
		 vertical scrollbar (if present, if rendered) and the element CSS width.</p>
		 
		 <p><b>Note (IE6):</b> To comply with the <xref class="external" href="http://www.w3.org/TR/REC-CSS1/" rel="external nofollow">Cascading Style Sheets, Level 1 (CSS1)</xref> World Wide 
		 Web link box model, Microsoft Internet Explorer 6 and later calculate the 
		 height of objects differently when you use the !DOCTYPE declaration in your 
		 document to switch on standards-compliant mode. This difference may affect 
		 the value of the offsetWidth propety. When standards-compliant mode is 
		 switched on, the width property specifies the distance between the left and 
		 right edges of the bounding box that surrounds the object's content. When 
		 standards-compliant mode is not switched on, and with earlier versions of 
		 Windows Internet Explorer, the width property also includes the border and 
		 padding belts that surround the object's bounding box.</p>
		 
		 </apiDesc><example>
		 This example adjusts the size of a clock's readout to fit the current width and height of the document.
		 
		 <codeblock>
		 &lt;div id=oDiv STYLE="overflow:scroll; width:200; height:100"&gt; . . . &lt;/div&gt;
		 &lt;button onclick="alert(oDiv.clientWidth)"&gt;client width&lt;/button&gt;
		 &lt;button onclick="alert(oDiv.offsetWidth)"&gt;offset width&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530302(VS.85).aspx"><linktext>MSDN: Measuring Element Dimension and Location</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534304(VS.85).aspx"><linktext>MSDN: offsetWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.offsetWidth"><linktext>MDC - Element: offsetWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#offset-attributes"><linktext>W3C - CSSOM View: offsetWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:previousElementSibling:get"><apiName>previousElementSibling</apiName><shortdesc>
		 
		 Returns the previous sibling element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns the previous sibling element node of this element. null if 
		 this element has no element sibling nodes that come before this one 
		 in the document tree.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 &lt;li&gt;This is a list item&lt;/li&gt;
		 &lt;li&gt;This is another list item&lt;/li&gt;
		 &lt;div id="div-03"&gt;Here is div-03&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-03').previousElementSibling;
		 	document.write('&lt;p&gt;Siblings of div-03&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.previousElementSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;</codeblock>
		 
		 <p>This example outputs the following into the page when it loads:</p>
		 
		 <p>Siblings of div-03</p>
		 <ol>
		 	<li>LI</li>
		 	<li>LI</li>
		 	<li>DIV</li>
		 	<li>DIV</li>
		 </ol>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.previousElementSibling"><linktext>MDC - Element: previousElementSibling Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-previousElementSibling"><linktext>W3C - Element Traversel: previousElementSibling Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="dom.core.xml#Element/childElementCount"><linktext>childElementCount</linktext></link><link href="dom.core.xml#Element/firstElementChild"><linktext>firstElementChild</linktext></link><link href="dom.core.xml#Element/lastElementChild"><linktext>lastElementChild</linktext></link><link href="dom.core.xml#Element/nextElementSibling"><linktext>nextElementSibling</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:schemeTypeInfo:get"><apiName>schemeTypeInfo</apiName><shortdesc>
		 DOM Level 3 | None 
		 
		 The type information associated with this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:TypeInfo</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 3 | None</b> 
		 
		 The type information associated with this element. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.core:Element:scrollHeight:get"><apiName>scrollHeight</apiName><shortdesc>
		 
		 Height of the scroll view of an element; it includes the element padding but not its margin.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Height of the scroll view of an element; it includes the element padding but not its margin.
		 
		 <p>An element's scrollHeight is a measurement of the height of an element's content including 
		 content not visible on the screen due to overflow.</p>
		 
		 <p>If the element's content generated a vertical scrollbar, the scrollHeight value is equal to 
		 the minimum clientHeight the element would require in order to fit all the content in the viewpoint 
		 without using a vertical scrollbar. When an element's content does not generate a vertical scrollbar, 
		 then its scrollHeight property is equal to its clientHeight property.</p>
		 
		 </apiDesc><example>
		 This example uses the scrollHeight property to retrieve the height of the viewable content.
		 
		 <codeblock>
		 &lt;script type="text/javascript"&gt;
		 	function fnCheckScroll(){
		 		var iNewHeight = oDiv.scrollHeight;
		 		alert("The value of the scrollHeight property is: " 
		 		+ iNewHeight + "px"); 
		 	}
		 &lt;/script&gt;
		 ...
		 &lt;div id="oDiv" style="overflow: scroll; height= 100px; width= 250px; text-align: left"&gt;
		 	... 
		 &lt;/div&gt;
		 &lt;button onclick="fnCheckScroll()"&gt;Check scrollHeight&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534615(VS.85).aspx"><linktext>MSDN: scrollHeight Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollHeight"><linktext>MDC - Element: scrollHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:scrollLeft:get"><apiName>scrollLeft</apiName><shortdesc>
		 
		 Gets or sets the number of pixels that an element's content is scrolled to the left.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Gets or sets the number of pixels that an element's content is scrolled to the left.
		 
		 </apiDesc><example>
		 <codeblock>
		 // Set the number of pixels scrolled
		 element.scrollLeft = 10;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534617(VS.85).aspx"><linktext>MSDN: scrollLeft Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollLeft"><linktext>MDC - Element: scrollLeft Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollLeft Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:scrollTop:get"><apiName>scrollTop</apiName><shortdesc>
		 
		 Gets or sets the number of pixels that the content of an element is scrolled upward.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Gets or sets the number of pixels that the content of an element is scrolled upward.
		 
		 <p>An element's scrollTop is a measurement of the distance of an element's top to its topmost visible content.</p>
		 
		 <p>When an element content does not generate a vertical scrollbar, then its scrollTop value defaults to 0.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Get the number of pixels scrolled
		 var  intElemScrollTop = element.scrollTop;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/workshop/author/dhtml/reference/properties/scrolltop.asp?frame=true"><linktext>MSDN: scrollTop Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollTop"><linktext>MDC - Element: scrollTop Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollTop Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:scrollWidth:get"><apiName>scrollWidth</apiName><shortdesc>
		 
		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns either the width in pixels of the content of an element or the width of the element itself, whichever is greater. 
		 
		 <p>If the element is wider than its content area (for example, if there are scroll bars for scrolling through the content), the scrollWidth is larger than the clientWidth.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="aDiv" style="width: 100px; height: 200px; overflow: auto;"&gt;
		 	-FooBar-FooBar-FooBar
		 &lt;/div&gt;
		 &lt;br/&gt;
		 &lt;input type="button" value="Show scrollWidth"
		 onclick="alert(document.getElementById('aDiv').scrollWidth);"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534619(VS.85).aspx"><linktext>MSDN: scrollWidth Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.scrollWidth"><linktext>MDC - Element: scrollWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#scroll-attributes"><linktext>W3C - CSSOM View: scrollWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#elementview"><linktext>Quirksmode: ElementView properties</linktext></link></related-links></apiValue><apiValue id="dom.core:Element:tagName:get"><apiName>tagName</apiName><shortdesc>
		 The name of the element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="2"/><apiTool name="IE" version="5.0+"/><apiTool name="Firefox" version="1.0+"/><apiTool name="Opera" version="8.0+"/><apiTool name="Safari" version="1.3+"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the element. If Node.localName is different from null, 
		 this attribute is a qualified name.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.core:DOMImplementationSource"><apiName>DOMImplementationSource</apiName><shortdesc>
	 This interface permits a DOM implementer to supply one or more 
	 implementations, based upon requested features and versions, as specified 
	 in DOM Features.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface permits a DOM implementer to supply one or more 
	 implementations, based upon requested features and versions, as specified 
	 in DOM Features. Each implemented DOMImplementationSource object is listed 
	 in the binding-specific list of available sources so that its 
	 DOMImplementation objects are made available.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationSource"><linktext>MDC - DOMImplementationSource</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#DOMImplementationSource"><linktext>W3C - DOMImplementationSource</linktext></link></related-links><apiOperation id="dom.core:DOMImplementationSource:dom.core:DOMImplementationSource:getDOMImplementation"><apiName>getDOMImplementation</apiName><shortdesc>
		 A method to request the first DOM implementation that supports the 
		 specified features.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The first DOM implementation that support the desired features, or 
		 null if this source has none.
		 
		 </apiDesc><apiOperationClassifier>dom.core:DOMImplementation</apiOperationClassifier></apiReturn><apiParam><apiItemName>features</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string that specifies which features and versions are 
		 required. This is a space separated list in which each feature is specified 
		 by its name optionally followed by a space and a version number.
		 This method returns the first item of the list returned by getDOMImplementationList.
		 As an example, the string "XML 3.0 Traversal +Events 2.0" will request a DOM 
		 implementation that supports the module "XML" for its 3.0 version, a module 
		 that support of the "Traversal" module for any version, and the module 
		 "Events" for its 2.0 version. The module "Events" must be accessible using the 
		 method Node.getFeature() and DOMImplementation.getFeature(). 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 A method to request the first DOM implementation that supports the 
		 specified features. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationSource.getDOMImplementation"><linktext>MDC - DOMImplementationSource.getDOMImplementation()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getDOMImpl"><linktext>W3C - DOMImplementationSource.getDOMImplementation()</linktext></link></related-links></apiOperation><apiOperation id="dom.core:DOMImplementationSource:dom.core:DOMImplementationSource:getDOMImplementationList"><apiName>getDOMImplementationList</apiName><shortdesc>
		 A method to request a list of DOM implementations that support the 
		 specified features and versions, as specified in DOM Features.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A list of DOM implementations that support the desired features.
		 
		 </apiDesc><apiOperationClassifier>dom.core:DOMImplementationList</apiOperationClassifier></apiReturn><apiParam><apiItemName>features</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string that specifies which features and versions are required. 
		 This is a space separated list in which each feature is specified by its name 
		 optionally followed by a space and a version number. This is something like: 
		 "XML 3.0 Traversal +Events 2.0"
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 A method to request a list of DOM implementations that support the 
		 specified features and versions, as specified in DOM Features.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/DOMImplementationSource.getDOMImplementationList"><linktext>MDC - DOMImplementationSource.getDOMImplementationList()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-getDOMImpls"><linktext>W3C - DOMImplementationSource.getDOMImplementationList()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.core:Entity"><apiName>Entity</apiName><shortdesc>
	 This interface represents a known entity, either parsed or unparsed, in 
	 an XML document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata><asCustoms><modified>DOMCore 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This interface represents a known entity, either parsed or unparsed, in 
	 an XML document. Note that this models the entity itself not the entity 
	 declaration.
	 
	 <p>The nodeName attribute that is inherited from Node contains the name of 
	 the entity.</p>
	 
	 <p><b>Note:</b> An Entity node does not have any parent.</p>
	 
	 <p><b>Note:</b> If the entity contains an unbound namespace prefix, the namespaceURI of 
	 the corresponding node in the Entity node subtree is null. The same is true 
	 for EntityReference nodes that refer to this entity, when they are created 
	 using the createEntityReference method of the Document interface.</p>
	 
	 <p><b>Note (Mozilla):</b> This is not implemented in Mozilla</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms766394%28VS.85%29.aspx"><linktext>MSDN - IXMLDOMEntity</linktext></link><link href="http://developer.mozilla.org/En/DOM/Entity"><linktext>MDC - Entity</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-527DCFF2"><linktext>W3C - Entity</linktext></link></related-links><apiValue id="dom.core:Entity:inputEncoding:get"><apiName>inputEncoding</apiName><shortdesc>
		 An attribute specifying the encoding used for this entity at the time of 
		 parsing, when it is an external parsed entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An attribute specifying the encoding used for this entity at the time of 
		 parsing, when it is an external parsed entity. This is null if it an 
		 entity from the internal subset or if it is not known.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Entity.inputEncoding"><linktext>MDC - Entity.inputEncoding</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Entity3-inputEncoding"><linktext>W3C - Entity.inputEncoding</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:notationName:get"><apiName>notationName</apiName><shortdesc>
		 For unparsed entities, the name of the notation for the entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 For unparsed entities, the name of the notation for the entity. For parsed 
		 entities, this is null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms757830%28VS.85%29.aspx"><linktext>MSDN - notationName Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Entity.notationName"><linktext>MDC - Entity.notationName</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-6ABAEB38"><linktext>W3C - Entity.notationName</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:publicId:get"><apiName>publicId</apiName><shortdesc>
		 The public identifier associated with the entity if specified, and null otherwise.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The public identifier associated with the entity if specified, and null otherwise.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms760313%28VS.85%29.aspx"><linktext>MSDN - publicId Property (IXMLDOMEntity)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Entity.publicId"><linktext>MDC - Entity.publicId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D7303025"><linktext>W3C - Entity.publicId</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:systemId:get"><apiName>systemId</apiName><shortdesc>
		 The system identifier associated with the entity if specified, and null 
		 otherwise.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="1"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The system identifier associated with the entity if specified, and null 
		 otherwise. This may be an absolute URI or not.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms764731%28VS.85%29.aspx"><linktext>MSDN - systemId Property (IXMLDOMEntity)</linktext></link><link href="http://developer.mozilla.org/En/DOM/Entity.systemId"><linktext>MDC - Entity.systemId</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#ID-D7C29F3E"><linktext>W3C - Entity.systemId</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:xmlEncoding:get"><apiName>xmlEncoding</apiName><shortdesc>
		 An attribute specifying, as part of the text declaration, the encoding of 
		 this entity, when it is an external parsed entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An attribute specifying, as part of the text declaration, the encoding of 
		 this entity, when it is an external parsed entity. This is null otherwise.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Entity.xmlEncoding"><linktext>MDC - Entity.xmlEncoding</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Entity3-encoding"><linktext>W3C - Entity.xmlEncoding</linktext></link></related-links></apiValue><apiValue id="dom.core:Entity:xmlVersion:get"><apiName>xmlVersion</apiName><shortdesc>
		 An attribute specifying, as part of the text declaration, the version number 
		 of this entity, when it is an external parsed entity.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="3"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 An attribute specifying, as part of the text declaration, the version number 
		 of this entity, when it is an external parsed entity. This is null otherwise.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Entity.xmlVersion"><linktext>MDC - Entity.xmlVersion</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Core/core.html#Entity3-version"><linktext>W3C - Entity.xmlVersion</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.events"><apiName>dom.events</apiName><apiDetail/><apiClassifier id="dom.events:KeyboardEvent"><apiName>KeyboardEvent</apiName><shortdesc>
	 The KeyboardEvent interface provides specific contextual information 
	 associated with keyboard devices.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:UIEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The KeyboardEvent interface provides specific contextual information 
	 associated with keyboard devices. Each keyboard event references a key 
	 using an identifier. Keyboard events are commonly directed at the 
	 element that has the focus.
	 
	 <p>The KeyboardEvent interface provides convenient attributes for some common 
	 modifiers keys: KeyboardEvent.ctrlKey, KeyboardEvent.shiftKey, 
	 KeyboardEvent.altKey, KeyboardEvent.metaKey. These attributes are equivalent 
	 to using the method KeyboardEvent.getModifierState(keyIdentifierArg) with 
	 "Control", "Shift", "Alt", or "Meta" respectively.</p>
	 
	 <p>To create an instance of the KeyboardEvent interface, use the 
	 DocumentEvent.createEvent("KeyboardEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent"><linktext>W3C - DOM 3 Events: KeyboardEvent</linktext></link></related-links><apiOperation id="dom.events:KeyboardEvent:getModifierState"><apiName>getModifierState</apiName><shortdesc>
		 Queries the state of a modifier using a key identifier.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If it is a modifier key and the modifier is activated
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>keyIdentifierArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A modifier key identifier. Common modifier 
		 keys are "Alt", "AltGraph", "CapsLock", "Control", "Meta", "NumLock", 
		 "Scroll", or "Shift".
		 
		 <p><b>Note:</b> If an application wishes to distinguish between right and left 
		 modifiers, this information could be deduced using keyboard events 
		 and KeyboardEvent.keyLocation.</p>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Queries the state of a modifier using a key identifier.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-getModifierState"><linktext>W3C - DOM 3 Events: KeyboardEvent.getModifierState()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/keyset.html#Modifiers"><linktext>Modifier Keys</linktext></link></related-links></apiOperation><apiOperation id="dom.events:KeyboardEvent:initKeyboardEvent"><apiName>initKeyboardEvent</apiName><shortdesc>
		 Initializes attributes of a KeyboardEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>keyIdentifierArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies KeyboardEvent.keyIdentifier.
		 </apiDesc></apiParam><apiParam><apiItemName>keyLocationArg</apiItemName><apiType value="Number"/><apiDesc>Specifies KeyboardEvent.keyLocation.
		 </apiDesc></apiParam><apiParam><apiItemName>modifiersListArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A white space separated list of modifier key 
		 identifiers to be activated on this object. As an example, "Control Alt" 
		 will mark the control and alt modifiers as activated.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a KeyboardEvent object. This method has the 
		 same behavior as UIEvent.initUIEvent(). The value of UIEvent.detail 
		 remains undefined.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-initKeyboardEvent"><linktext>W3C - DOM 3 Events: KeyboardEvent.initKeyboardEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:KeyboardEvent:initKeyboardEventNS"><apiName>initKeyboardEventNS</apiName><shortdesc>
		 Initializes attributes of a KeyboardEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>keyIdentifierArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies KeyboardEvent.keyIdentifier.
		 </apiDesc></apiParam><apiParam><apiItemName>keyLocationArg</apiItemName><apiType value="Number"/><apiDesc>Specifies KeyboardEvent.keyLocation.
		 </apiDesc></apiParam><apiParam><apiItemName>modifiersListArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A white space separated list of modifier key 
		 identifiers to be activated on this object. As an example, "Control Alt" 
		 will mark the control and alt modifiers as activated.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a KeyboardEvent object. This method has the 
		 same behavior as UIEvent.initUIEventNS(). The value of UIEvent.detail 
		 remains undefined. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-initKeyboardEventNS"><linktext>W3C - DOM 3 Events: KeyboardEvent.initKeyboardEventNS()</linktext></link></related-links></apiOperation><apiValue id="dom.events:KeyboardEvent:DOM_KEY_LOCATION_LEFT"><apiName>DOM_KEY_LOCATION_LEFT</apiName><shortdesc>
		 The key activated is in the left key location (there is more than one 
		 possible location for this key).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The key activated is in the left key location (there is more than one 
		 possible location for this key). Example: the left Shift key on a PC 
		 101 Key US keyboard.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_LEFT"><linktext>W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_LEFT</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:DOM_KEY_LOCATION_NUMPAD"><apiName>DOM_KEY_LOCATION_NUMPAD</apiName><shortdesc>
		 The key activation originated on the numeric keypad or with a virtual key 
		 corresponding to the numeric keypad.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The key activation originated on the numeric keypad or with a virtual key 
		 corresponding to the numeric keypad. Example: the '1' key on a PC 101 Key 
		 US keyboard located on the numeric pad.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_NUMPAD"><linktext>W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_NUMPAD</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:DOM_KEY_LOCATION_RIGHT"><apiName>DOM_KEY_LOCATION_RIGHT</apiName><shortdesc>
		 The key activation is in the right key location (there is more than one 
		 possible location for this key).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The key activation is in the right key location (there is more than one 
		 possible location for this key). Example: the right Shift key on a PC 
		 101 Key US keyboard.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_RIGHT"><linktext>W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_RIGHT</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:DOM_KEY_LOCATION_STANDARD"><apiName>DOM_KEY_LOCATION_STANDARD</apiName><shortdesc>
		 The key activation is not distinguished as the left or right version 
		 of the key, and did not originate from the numeric keypad (or did 
		 not originate with a virtual key corresponding to the numeric keypad).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The key activation is not distinguished as the left or right version 
		 of the key, and did not originate from the numeric keypad (or did 
		 not originate with a virtual key corresponding to the numeric keypad). 
		 Example: the 'Q' key on a PC 101 Key US keyboard.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DOM_KEY_LOCATION_STANDARD"><linktext>W3C - DOM 3 Events: KeyboardEvent.DOM_KEY_LOCATION_STANDARD</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keydown"><apiName>keydown</apiName><shortdesc>
		 A key is pressed down.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>keydown</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A key is pressed down. 
		 
		 <p>This event type is device dependent and relies on the capabilities of the input devices 
		 and how they are mapped in the operating system. This event type is generated after the keyboard mapping but 
		 before the processing of an input method editor. This event should logically happen before the event keyup is 
		 produced. Whether a keydown contributes or not to the generation of a text event is implementation dependent.</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>UIEvent.view, KeyboardEvent.keyIdentifier, KeyboardEvent.keyLocation, 
		 KeyboardEvent.altKey, KeyboardEvent.shiftKey, KeyboardEvent.ctrlKey, and KeyboardEvent.metaKey are in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-keydown"><linktext>W3C - DOM 3 Events: KeyboardEvent.keydown</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keyup"><apiName>keyup</apiName><shortdesc>
		 A key is released.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>keyup</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A key is released. 
		 
		 <p>This event type is device dependent and relies on the capabilities of the input devices and 
		 how they are mapped in the operating system. This event type is generated after the keyboard mapping but before 
		 the processing of an input method editor. This event should logically happen after the event keydown is produced.
		 Whether a keyup contributes or not to the generation of a text event is implementation dependent.</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>UIEvent.view, KeyboardEvent.keyIdentifier, and KeyboardEvent.keyLocation are in use. 
		 KeyboardEvent.altKey, KeyboardEvent.shiftKey, KeyboardEvent.ctrlKey, and KeyboardEvent.metaKey are in use unless the 
		 KeyboardEvent.keyIdentifier corresponds to the key modifier itself.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-keyup"><linktext>W3C - DOM 3 Events: KeyboardEvent.keyup</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:altKey:get"><apiName>altKey</apiName><shortdesc>
		 If the alternative (Alt) key modifier is activated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If the alternative (Alt) key modifier is activated.
		 
		 <p><b>Note:</b> The Option key modifier on Macintosh systems must be represented 
		 using this key modifier.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;altKey example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showChar(e){
		 	alert(
		 		"Key Pressed: " + String.fromCharCode(e.charCode) + "\n"
		 		+ "charCode: " + e.charCode + "\n"
		 		+ "ALT key pressed: " + e.altKey + "\n"
		 	);
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="showChar(event);"&gt;
		 &lt;p&gt;
		 Press any character key,
		 with or without holding down the ALT key.&lt;br /&gt;
		 You can also use the SHIFT key together with the ALT key.
		 &lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.altKey"><linktext>MDC - event.altKey</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-altKey"><linktext>W3C - DOM 3 Events: KeyboardEvent.altKey</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:charCode:get"><apiName>charCode</apiName><shortdesc>
		 Returns the Unicode value of a character key pressed during a keypress event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns the Unicode value of a character key pressed during a keypress event.
		 
		 <p>For constants equivalent to these numeric codes, see KeyEvent.</p>
		 
		 <p><b>Note:</b> In a keypress event, the Unicode value of the key pressed is stored in either the 
		 keyCode or charCode property, never both. If the key pressed generates a character (e.g. 'a'), charCode is 
		 set to the code of that character, respecting the letter case. (i.e. charCode takes into account whether the 
		 shift key is held down). Otherwise, the code of the pressed key is stored in keyCode.</p>
		 
		 <p><b>Note:</b> charCode is never set in the keydown and keyup events. In these cases, keyCode is 
		 set instead.</p>
		 
		 <p><b>Note:</b> To get the code of the key regardless of whether it was stored in keyCode or 
		 charCode, query the which property.</p>
		 
		 <p><b>Note:</b> Characters entered through an IME do not register through keyCode or charCode. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;charCode example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showChar(e) {
		 	alert("Key Pressed: " + String.fromCharCode(e.charCode) + "\n"
		 	+ "charCode: " + e.charCode);
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="showChar(event);"&gt;
		 &lt;p&gt;Press any 'character' type key.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.charCode"><linktext>MDC - event.charCode</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:ctrlKey:get"><apiName>ctrlKey</apiName><shortdesc>
		 If the control (Ctrl) key modifier is activated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If the control (Ctrl) key modifier is activated.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;ctrlKey example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showChar(e) {
		 	alert(
		 		"Key Pressed: " + String.fromCharCode(e.charCode) + "\n"
		 		+ "charCode: " + e.charCode + "\n"
		 		+ "CTRL key pressed: " + e.ctrlKey + "\n"
		 	);
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="showChar(event);"&gt;
		 &lt;p&gt;Press any character key, with or without holding down the CTRL key.&lt;br /&gt;
		 You can also use the SHIFT key together with the CTRL key.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.ctrlKey"><linktext>MDC - event.ctrlKey</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-ctrlKey"><linktext>W3C - DOM 3 Events: KeyboardEvent.ctrlKey</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keyCode:get"><apiName>keyCode</apiName><shortdesc>
		 Returns the Unicode value of a non-character key in a keypress event or any key in any other type of keyboard event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the Unicode value of a non-character key in a keypress event or any key in any other type of keyboard event.
		 
		 <p>For constants equivalent to these numeric codes, see KeyEvent.</p>
		 
		 <p><b>Note:</b> In a keypress event, the Unicode value of the key pressed is stored in either the keyCode or 
		 charCode property, never both. If the key pressed generates a character (e.g. 'a'), charCode is set to the code of that 
		 character, respecting the letter case. (i.e. charCode takes into account whether the shift key is held down). Otherwise, 
		 the code of the pressed key is stored in keyCode.</p>
		 
		 <p><b>Note:</b> keyCode is always set in the keydown and keyup events. In these cases, charCode is never set.</p>
		 
		 <p><b>Note:</b> To get the code of the key regardless of whether it was stored in keyCode or charCode, query the which property.</p>
		 
		 <p><b>Note:</b> Characters entered through an IME do not register through keyCode or charCode. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;keyCode example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showKeyCode(e) {
		 	alert("keyCode for the key pressed: " + e.keyCode + "\n");
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeydown="showKeyCode(event);"&gt;
		 &lt;p&gt;Press any key.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.keyCode"><linktext>MDC - event.keyCode</linktext></link><link href="dom.events.xml#KeyEvent"><linktext>dom.events.KeyEvent</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keyIdentifier:get"><apiName>keyIdentifier</apiName><shortdesc>
		 Holds the identifier of the key.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Holds the identifier of the key. The key identifiers are defined in 
		 Appendix A.2 "Key identifiers set". Implementations that are unable 
		 to identify a key must use the key identifier "Unidentified".
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-keyIdentifier"><linktext>W3C - DOM 3 Events: KeyboardEvent.keyIdentifier</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/keyset.html#KeySet-Set"><linktext>Key identifiers set</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:keyLocation:get"><apiName>keyLocation</apiName><shortdesc>
		 The keyLocation attribute contains an indication of the location of 
		 they key on the device, as described in Keyboard event types.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The keyLocation attribute contains an indication of the location of 
		 they key on the device, as described in Keyboard event types.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-keylocation"><linktext>W3C - DOM 3 Events: KeyboardEvent.keyLocation</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#ID-KeyboardEvent-KeyLocationCode"><linktext>Keyboard event types</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:metaKey:get"><apiName>metaKey</apiName><shortdesc>
		 If the meta (Meta) key modifier is activated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If the meta (Meta) key modifier is activated.
		 
		 <p><b>Note:</b> The Command key modifier on Macintosh systems must be represented 
		 using this key modifier.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-metaKey"><linktext>W3C - DOM 3 Events: KeyboardEvent.metaKey</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyboardEvent:shiftKey:get"><apiName>shiftKey</apiName><shortdesc>
		 If the shift (Shift) key modifier is activated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If the shift (Shift) key modifier is activated.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-KeyboardEvent-shiftKey"><linktext>W3C - DOM 3 Events: KeyboardEvent.shiftKey</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:KeyEvent"><apiName>KeyEvent</apiName><shortdesc>
	 The KeyEvent interface provides specific contextual information associated with Key Events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:UIEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The KeyEvent interface provides specific contextual information associated with Key Events.
	 
	 The detail attribute inherited from UIEvent is used to indicated the number of keypresses 
	 which have occurred during key repetition. If this information is not available this value 
	 should be 0.
	 
	 <p><b>Note:</b> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Event/UIEvent/KeyEvent"><linktext>MDC - KeyEvent</linktext></link><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent"><linktext>W3C - DOM 3 Events: KeyEvent</linktext></link></related-links><apiOperation id="dom.events:KeyEvent:checkModifier"><apiName>checkModifier</apiName><shortdesc>
		 The CheckModifier method is used to check the status of a single modifier key associated with a KeyEvent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The status of the modifier represented as a boolean.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>modifer</apiItemName><apiType value="Number"/><apiDesc>The modifier which the user wishes to query.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The CheckModifier method is used to check the status of a single modifier key associated with a KeyEvent. 
		 The identifier of the modifier in question is passed into the CheckModifier function. If the modifier is 
		 triggered it will return true. If not, it will return false.
		 
		 <p>The list of keys below represents the allowable modifier paramaters for this method. </p>
		 <ul>
		 <li>DOM_VK_LEFT_ALT</li>
		 <li>DOM_VK_RIGHT_ALT</li>
		 <li>DOM_VK_LEFT_CONTROL</li>
		 <li>DOM_VK_RIGHT_CONTROL</li>
		 <li>DOM_VK_LEFT_SHIFT</li>
		 <li>DOM_VK_RIGHT_SHIFT</li>
		 <li>DOM_VK_META</li>
		 </ul>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-checkModifier"><linktext>W3C - DOM 3 Events: KeyEvent.checkModifier()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:KeyEvent:initKeyEvent"><apiName>initKeyEvent</apiName><shortdesc>
		 The initKeyEvent method is used to initialize the value of a MouseEvent created through 
		 the DocumentEvent interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies whether or not the event can bubble.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies whether or not the event's default action can be prevent.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies the KeyEvent's AbstractView.
		 </apiDesc></apiParam><apiParam><apiItemName>detailArg</apiItemName><apiType value="Number"/><apiDesc>Specifies the number of repeated keypresses, if available.
		 </apiDesc></apiParam><apiParam><apiItemName>outputStringArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the KeyEvent's outputString attribute
		 </apiDesc></apiParam><apiParam><apiItemName>keyValArg</apiItemName><apiType value="Number"/><apiDesc>Specifies the KeyEvent's keyValattribute
		 </apiDesc></apiParam><apiParam><apiItemName>virtKeyValArg</apiItemName><apiType value="Number"/><apiDesc>Specifies the KeyEvent's virtKeyValattribute
		 </apiDesc></apiParam><apiParam><apiItemName>inputGeneratedArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies the KeyEvent's inputGeneratedattribute
		 </apiDesc></apiParam><apiParam><apiItemName>numPadArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies the KeyEvent's numPadattribute
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The initKeyEvent method is used to initialize the value of a MouseEvent created through 
		 the DocumentEvent interface. This method may only be called before the KeyEvent has been 
		 dispatched via the dispatchEvent method, though it may be called multiple times during that 
		 phase if necessary. If called multiple times, the final invocation takes precedence. This 
		 method has no effect if called after the event has been dispatched. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-Event-initKeyEvent"><linktext>W3C - DOM 3 Events: KeyEvent.initKeyEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:KeyEvent:initModifier"><apiName>initModifier</apiName><shortdesc>
		 The initModifier method is used to initialize the values of any modifiers associated with a KeyEvent 
		 created through the DocumentEvent interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>modifier</apiItemName><apiType value="Number"/><apiDesc>The modifier which the user wishes to initialize
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Boolean"/><apiDesc>The new value of the modifier.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The initModifier method is used to initialize the values of any modifiers associated with a KeyEvent 
		 created through the DocumentEvent interface. This method may only be called before the KeyEvent has 
		 been dispatched via the dispatchEvent method, though it may be called multiple times during that phase 
		 if necessary. If called multiple times with the same modifier property the final invocation takes 
		 precedence. Unless explicitly give a value of true, all modifiers have a value of false. This method 
		 has no effect if called after the event has been dispatched.
		 
		 <p>The list of keys below represents the allowable modifier paramaters for this method. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-initModifier"><linktext>W3C - DOM 3 Events: KeyEvent.initModifier()</linktext></link></related-links></apiOperation><apiValue id="dom.events:KeyEvent:DOM_VK_CAPS_LOCK"><apiName>DOM_VK_CAPS_LOCK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_DELETE"><apiName>DOM_VK_DELETE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>10</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_DOWN"><apiName>DOM_VK_DOWN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>23</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_END"><apiName>DOM_VK_END</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>11</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_ENTER"><apiName>DOM_VK_ENTER</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>12</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_ESCAPE"><apiName>DOM_VK_ESCAPE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>13</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F1"><apiName>DOM_VK_F1</apiName><shortdesc>
		 Constant for the F1 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>26</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F1 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F10"><apiName>DOM_VK_F10</apiName><shortdesc>
		 Constant for the F10 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>35</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F10 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F11"><apiName>DOM_VK_F11</apiName><shortdesc>
		 Constant for the F11 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>36</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F11 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F12"><apiName>DOM_VK_F12</apiName><shortdesc>
		 Constant for the F12 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>37</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F12 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F13"><apiName>DOM_VK_F13</apiName><shortdesc>
		 Constant for the F13 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>38</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F13 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F14"><apiName>DOM_VK_F14</apiName><shortdesc>
		 Constant for the F14 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>39</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F14 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F15"><apiName>DOM_VK_F15</apiName><shortdesc>
		 Constant for the F15 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>40</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F15 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F16"><apiName>DOM_VK_F16</apiName><shortdesc>
		 Constant for the F16 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>41</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F16 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F17"><apiName>DOM_VK_F17</apiName><shortdesc>
		 Constant for the F17 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>42</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F17 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F18"><apiName>DOM_VK_F18</apiName><shortdesc>
		 Constant for the F18 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>43</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F18 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F19"><apiName>DOM_VK_F19</apiName><shortdesc>
		 Constant for the F19 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>44</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F19 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F2"><apiName>DOM_VK_F2</apiName><shortdesc>
		 Constant for the F2 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>27</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F2 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F20"><apiName>DOM_VK_F20</apiName><shortdesc>
		 Constant for the F20 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>45</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F20 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F21"><apiName>DOM_VK_F21</apiName><shortdesc>
		 Constant for the F21 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>46</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F21 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F22"><apiName>DOM_VK_F22</apiName><shortdesc>
		 Constant for the F22 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>47</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F22 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F23"><apiName>DOM_VK_F23</apiName><shortdesc>
		 Constant for the F23 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>48</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F23 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F24"><apiName>DOM_VK_F24</apiName><shortdesc>
		 Constant for the F24 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>49</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F24 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F3"><apiName>DOM_VK_F3</apiName><shortdesc>
		 Constant for the F3 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>28</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F3 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F4"><apiName>DOM_VK_F4</apiName><shortdesc>
		 Constant for the F4 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>29</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F4 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F5"><apiName>DOM_VK_F5</apiName><shortdesc>
		 Constant for the F5 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>30</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F5 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F6"><apiName>DOM_VK_F6</apiName><shortdesc>
		 Constant for the F6 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>31</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F6 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F7"><apiName>DOM_VK_F7</apiName><shortdesc>
		 Constant for the F7 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>32</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F7 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F8"><apiName>DOM_VK_F8</apiName><shortdesc>
		 Constant for the F8 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>33</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F8 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_F9"><apiName>DOM_VK_F9</apiName><shortdesc>
		 Constant for the F9 function key.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>34</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Constant for the F9 function key.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_HOME"><apiName>DOM_VK_HOME</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>14</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_INSERT"><apiName>DOM_VK_INSERT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>15</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT"><apiName>DOM_VK_LEFT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>20</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT_ALT"><apiName>DOM_VK_LEFT_ALT</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT_CONTROL"><apiName>DOM_VK_LEFT_CONTROL</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT_META"><apiName>DOM_VK_LEFT_META</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_LEFT_SHIFT"><apiName>DOM_VK_LEFT_SHIFT</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_NUM_LOCK"><apiName>DOM_VK_NUM_LOCK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_PAGE_DOWN"><apiName>DOM_VK_PAGE_DOWN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>24</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_PAGE_UP"><apiName>DOM_VK_PAGE_UP</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>25</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_PAUSE"><apiName>DOM_VK_PAUSE</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>17</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_PRINTSCREEN"><apiName>DOM_VK_PRINTSCREEN</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>18</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT"><apiName>DOM_VK_RIGHT</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>21</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT_ALT"><apiName>DOM_VK_RIGHT_ALT</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT_CONTROL"><apiName>DOM_VK_RIGHT_CONTROL</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT_META"><apiName>DOM_VK_RIGHT_META</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_RIGHT_SHIFT"><apiName>DOM_VK_RIGHT_SHIFT</apiName><shortdesc>
		 This key is a modifier key
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This key is a modifier key
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_SCROLL_LOCK"><apiName>DOM_VK_SCROLL_LOCK</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>19</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_UNDEFINED"><apiName>DOM_VK_UNDEFINED</apiName><shortdesc>
		 Used for key events which do not have a virtual key code available.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Used for key events which do not have a virtual key code available.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:DOM_VK_UP"><apiName>DOM_VK_UP</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>22</apiData><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.events:KeyEvent:inputGenerated:get"><apiName>inputGenerated</apiName><shortdesc>
		 The inputGenerated attribute indicates whether the key event will normally cause visible output.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The inputGenerated attribute indicates whether the key event will normally cause visible output. If 
		 the key event does not generate any visible output, such as the use of a function key or the 
		 combination of certain modifier keys used in conjunction with another key, then the value will be 
		 false. If visible output is normally generated by the key event then the value will be true.
		 
		 <p>The value of inputGenerated does not guarantee the creation of a character. If a key event causing 
		 visible output is cancelable it may be prevented from causing output. This attribute is intended 
		 primarily to differentiate between keys events which may or may not produce visible output depending 
		 on the system state.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-inputGenerated"><linktext>W3C - DOM 3 Events: KeyEvent.inputGenerated</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyEvent:keyVal:get"><apiName>keyVal</apiName><shortdesc>
		 The value of keyVal holds the value of the Unicode character associated with the depressed key.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The value of keyVal holds the value of the Unicode character associated with the depressed key. 
		 If the key has no Unicode representation or no Unicode character is available the value is 0.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-UIEvent-keyVal"><linktext>W3C - DOM 3 Events: KeyEvent.keyVal</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyEvent:numPad:get"><apiName>numPad</apiName><shortdesc>
		 The numPad attribute indicates whether or not the key event was generated on the number pad section 
		 of the keyboard.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The numPad attribute indicates whether or not the key event was generated on the number pad section 
		 of the keyboard. If the number pad was used to generate the key event the value is true, otherwise the value is false.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-numPad"><linktext>W3C - DOM 3 Events: KeyEvent.numPad</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyEvent:outputString:get"><apiName>outputString</apiName><shortdesc>
		 outputString holds the value of the output generated by the key event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 outputString holds the value of the output generated by the key event. This may be a single Unicode 
		 character or it may be a string. It may also be null in the case where no output was generated by the key event.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-UIEvent-outputString"><linktext>W3C - DOM 3 Events: KeyEvent.outputString</linktext></link></related-links></apiValue><apiValue id="dom.events:KeyEvent:virtKeyVal:get"><apiName>virtKeyVal</apiName><shortdesc>
		 When the key associated with a key event is not representable via a Unicode character virtKeyVale holds 
		 the virtual key code associated with the depressed key.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 When the key associated with a key event is not representable via a Unicode character virtKeyVale holds 
		 the virtual key code associated with the depressed key. If the key has a Unicode representation or no 
		 virtual code is available the value is DOM_VK_UNDEFINED.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-KeyEvent-virtKeyVal"><linktext>W3C - DOM 3 Events: KeyEvent.virtKeyVal</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:UIEvent"><apiName>UIEvent</apiName><shortdesc>
	 The UIEvent interface provides specific contextual information 
	 associated with User Interface events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The UIEvent interface provides specific contextual information 
	 associated with User Interface events.
	 
	 <p>To create an instance of the UIEvent interface, use the 
	 DocumentEvent.createEvent("UIEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event"><linktext>MDC - event</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent"><linktext>W3C - DOM 3 Events: UIEvent</linktext></link></related-links><apiOperation id="dom.events:UIEvent:initUIEvent"><apiName>initUIEvent</apiName><shortdesc>
		 Initializes attributes of an UIEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>detailArg</apiItemName><apiType value="Number"/><apiDesc>Specifies UIEvent.detail.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of an UIEvent object. This method has the 
		 same behavior as Event.initEvent(). 
		 
		 </apiDesc><example>
		 <codeblock>
		 e = document.createEvent("UIEvents");
		 // creates a click event that bubbles, can be cancelled,
		 // and with its view and detail property initialized to window and 1,
		 // respectively
		 e.initUIEvent("click", true, true, window, 1);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.initUIEvent"><linktext>MDC - event.initUIEvent()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initUIEvent"><linktext>W3C - UIEvent.initUIEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:UIEvent:initUIEventNS"><apiName>initUIEventNS</apiName><shortdesc>
		 Initializes attributes of an UIEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>detailArg</apiItemName><apiType value="Number"/><apiDesc>Specifies UIEvent.detail.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of an UIEvent object. This method has the same behavior as Event.initEventNS(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initUIEventNS"><linktext>W3C - UIEvent.initUIEventNS()</linktext></link></related-links></apiOperation><apiValue id="dom.events:UIEvent:DOMActivate"><apiName>DOMActivate</apiName><shortdesc>
		 Refer to Activation requests and behavior.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMActivate</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Refer to Activation requests and behavior.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>UIEvent.view is in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-flow-activation"><linktext>W3C - Activation requests and behavior</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMActivate"><linktext>W3C - UIEvent.DOMActivate</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:DOMFocusIn"><apiName>DOMFocusIn</apiName><shortdesc>
		 An event target receives focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMFocusIn</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 An event target receives focus. The focus is given to the element before the dispatch of this event type. This event type is dispatched after the event type focus.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMFocusIn"><linktext>W3C - UIEvent.DOMFocusIn</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:DOMFocusOut"><apiName>DOMFocusOut</apiName><shortdesc>
		 An event target loses focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMFocusOut</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 An event target loses focus. The focus is taken from the element before the dispatch of this event type. This event type is dispatched after the event type blur.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMFocusOut"><linktext>W3C - UIEvent.DOMFocusOut</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:abort"><apiName>abort</apiName><shortdesc>
		 Loading of a resource has been aborted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>abort</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Loading of a resource has been aborted.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-abort"><linktext>W3C - DOM 3 Events: UIEvent.abort / Event.abort</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:blur"><apiName>blur</apiName><shortdesc>
		 An event target loses focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>blur</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 An event target loses focus. The focus is taken from the element before the dispatch of this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-blur"><linktext>W3C - UIEvent.blur</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:change"><apiName>change</apiName><shortdesc>
		 A control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A control loses the input focus and its value has been modified since gaining focus. This event type is dispatched before the event type blur.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-change"><linktext>W3C - DOM 3 Events: UIEvent.change / Event.change</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:error"><apiName>error</apiName><shortdesc>
		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 
		 such as an invalid image, a script execution error, or non-well-formed XML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 
		 such as an invalid image, a script execution error, or non-well-formed XML.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-error"><linktext>W3C - DOM 3 Events: UIEvent.error / Event.error</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:focus"><apiName>focus</apiName><shortdesc>
		 An event target receives focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>focus</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 An event target receives focus. The focus is given to the element before the dispatch of this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-focus"><linktext>W3C - UIEvent.focus</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:load"><apiName>load</apiName><shortdesc>
		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 
		 (such as images, style sheets, or scripts).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>load</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 
		 (such as images, style sheets, or scripts). Dependent resources that fail to load will not prevent this 
		 event from firing if the resource that loaded them is still accessible via the DOM. If this event type 
		 is dispatched, implementations are required to dispatch this event at least on the Document node.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-load"><linktext>W3C - DOM 3 Events: UIEvent.load / Event.load</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:reset"><apiName>reset</apiName><shortdesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reset</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-reset"><linktext>W3C - DOM 3 Events: UIEvent.reset / Event.reset</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:resize"><apiName>resize</apiName><shortdesc>
		 A document view or an element has been resized.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>resize</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A document view or an element has been resized. The resize occured before the dispatch of this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent"><linktext>W3C - DOM 3 Events: UIEvent.resize</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:scroll"><apiName>scroll</apiName><shortdesc>
		 A document view or an element has been scrolled.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>scroll</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A document view or an element has been scrolled. The scroll occured before the dispatch of this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-scroll"><linktext>W3C - DOM 3 Events: UIEvent.scroll</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:select"><apiName>select</apiName><shortdesc>
		 A user selects some text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>select</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A user selects some text. DOM Level 3 Events does not provide contextual information to access 
		 the selected text. The selection occured before the dispatch of this event type.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-select"><linktext>W3C - DOM 3 Events: UIEvent.select / Event.select</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:submit"><apiName>submit</apiName><shortdesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>submit</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-submit"><linktext>W3C - DOM 3 Events: UIEvent.submit / Event.submit</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:unload"><apiName>unload</apiName><shortdesc>
		 The DOM implementation removes from the environment the resource (such as the document) or any dependent
		 resources (such as images, style sheets, scripts).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unload</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The DOM implementation removes from the environment the resource (such as the document) or any dependent
		 resources (such as images, style sheets, scripts). The document is unloaded after the dispatch of this event 
		 type. If this event type is dispatched, implementations are required to dispatch this event at least on the 
		 Document node.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-unload"><linktext>W3C - DOM 3 Events: UIEvent.unload / Event.unload</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:detail:get"><apiName>detail</apiName><shortdesc>
		 Specifies some detail information about the Event, depending 
		 on the type of event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Specifies some detail information about the Event, depending 
		 on the type of event.
		 
		 <p><b>Note:</b> For mouse events, such as click, dblclick, mousedown, or mouseup, the detail 
		 property indicates how many times the mouse has been clicked in the same location for this event.</p>
		 
		 <p><b>Note:</b> For a dblclick event the value of detail is always 2.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;title&gt;event.detail example&lt;/title&gt;
		 	&lt;script type="text/javascript"&gt;
		 	function giveDetails(e) {
		 		var text = document.getElementById("t");
		 		text.value = e.detail;
		 	}
		 	function init() {
		 		var b1 = document.getElementById("b");
		 		b1.onclick = giveDetails;   
		 	}
		 	&lt;/script&gt;
		 
		 &lt;/head&gt;
		 &lt;body onload="init();"&gt;
		 &lt;form&gt;
		 	&lt;input id="b" type="button" value="details"&gt;
		 	&lt;input id="t" type="text" value=""&gt;&lt;br&gt;
		 	&lt;input type="reset"&gt;
		 &lt;/form&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.detail"><linktext>MDC - event.detail</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-detail"><linktext>W3C - UIEvent.detail</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:isChar:get"><apiName>isChar</apiName><shortdesc>
		 Returns a boolean indicating whether the event produced a key character or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether the event produced a key character or not. 
		 
		 <p><b>Note:</b> Some key combos may raise events but not produce any character (example: ctrl + alt ?). 
		 When this is the case, isChar returns false. isChar is used when event handlers need to do something like echo 
		 the input on the screen. </p>
		 
		 <p><b>Note:</b> There is currently a known bug affecting the return result, which is always false and 
		 never true. Please see the discussion link in the sidebar for more details. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if e.isChar {
		 	echoInput(e.type);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.isChar"><linktext>MDC - event.isChar</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:layerX:get"><apiName>layerX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event relative to the current layer.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event relative to the current layer. 
		 
		 <p><b>Note:</b> layerX takes scrolling of the page into account, and returns a value relative to the 
		 whole of the document, unless the event occurs inside a positioned element, where the returned value is 
		 relative to the top left of the positioned element. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		&lt;head&gt;
		&lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;

		&lt;script type="text/javascript"&gt;

		function showCoords(evt){
		  var form = document.forms.form_coords;
		  var parent_id = evt.target.parentNode.id;
		  form.parentId.value = parent_id;
		  form.pageXCoords.value = evt.pageX;
		  form.pageYCoords.value = evt.pageY;
		  form.layerXCoords.value = evt.layerX;
		  form.layerYCoords.value = evt.layerY;
		}
		&lt;/script&gt;

		&lt;style type="text/css"&gt;

		 #d1 {
		  border: solid blue 1px;
		  padding: 20px;
		 }

		 #d2 {
		  position: absolute;
		  top: 180px;
		  left: 80%;
		  right:auto;
		  width: 40%;
		  border: solid blue 1px;
		  padding: 20px;
		 }

		 #d3 {
		  position: absolute;
		  top: 240px;
		  left: 20%;
		  width: 50%;
		  border: solid blue 1px;
		  padding: 10px;
		 }

		&lt;/style&gt;
		&lt;/head&gt;

		&lt;body onmousedown="showCoords(event)"&gt;

		&lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;

		&lt;div id="d1"&gt;
		&lt;span&gt;This is an un-positioned div so clicking it will return
		layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		&lt;/div&gt;

		&lt;div id="d2"&gt;

		&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		values that are relative to the top-left corner of this positioned
		element. Note the pageX\pageY properties still return the
		absolute position in the document, including page scrolling.&lt;/span&gt;

		&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		will return layerX/layerY values that are relative to the top-left
		corner of this positioned element. Note the pageX\pageY properties still
		return the absolute position in the document, including page
		scrolling.&lt;/span&gt;

		&lt;/div&gt;

		&lt;div id="d3"&gt;
		&lt;form name="form_coords" id="form1"&gt;
		 Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;

		 pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;

		&lt;/form&gt;
		&lt;/div&gt;

		&lt;/body&gt;
		&lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.layerX"><linktext>MDC - event.layerX</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:layerY:get"><apiName>layerY</apiName><shortdesc>
		 Returns the vertical coordinate of the event relative to the current layer.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event relative to the current layer. 
		 
		 <p><b>Note:</b> layerY takes scrolling of the page into account, and returns a value relative to the 
		 whole of the document, unless the event occurs inside a positioned element, where the returned value is relative 
		 to the top left of the positioned element. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		&lt;head&gt;
		&lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;

		&lt;script type="text/javascript"&gt;

		function showCoords(evt){
		  var form = document.forms.form_coords;
		  var parent_id = evt.target.parentNode.id;
		  form.parentId.value = parent_id;
		  form.pageXCoords.value = evt.pageX;
		  form.pageYCoords.value = evt.pageY;
		  form.layerXCoords.value = evt.layerX;
		  form.layerYCoords.value = evt.layerY;
		}
		&lt;/script&gt;

		&lt;style type="text/css"&gt;

		 #d1 {
		  border: solid blue 1px;
		  padding: 20px;
		 }

		 #d2 {
		  position: absolute;
		  top: 180px;
		  left: 80%;
		  right:auto;
		  width: 40%;
		  border: solid blue 1px;
		  padding: 20px;
		 }

		 #d3 {
		  position: absolute;
		  top: 240px;
		  left: 20%;
		  width: 50%;
		  border: solid blue 1px;
		  padding: 10px;
		 }

		&lt;/style&gt;
		&lt;/head&gt;

		&lt;body onmousedown="showCoords(event)"&gt;

		&lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;

		&lt;div id="d1"&gt;
		&lt;span&gt;This is an un-positioned div so clicking it will return
		layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		&lt;/div&gt;

		&lt;div id="d2"&gt;

		&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		values that are relative to the top-left corner of this positioned
		element. Note the pageX\pageY properties still return the
		absolute position in the document, including page scrolling.&lt;/span&gt;

		&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		will return layerX/layerY values that are relative to the top-left
		corner of this positioned element. Note the pageX\pageY properties still
		return the absolute position in the document, including page
		scrolling.&lt;/span&gt;

		&lt;/div&gt;

		&lt;div id="d3"&gt;
		&lt;form name="form_coords" id="form1"&gt;
		 Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;

		 pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;

		&lt;/form&gt;
		&lt;/div&gt;

		&lt;/body&gt;
		&lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.layerY"><linktext>MDC - event.layerY</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:pageX:get"><apiName>pageX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event relative to whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event relative to whole document. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageX"><linktext>MDC - event.pageX</linktext></link><link href="dom.events.xml#MouseEvent/pageX"><linktext>dom.events.MouseEvent.pageX</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:pageY:get"><apiName>pageY</apiName><shortdesc>
		 Returns the vertical coordinate of the event relative to the whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event relative to the whole document. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageY"><linktext>MDC - event.pageY</linktext></link><link href="dom.events.xml#MouseEvent/pageY"><linktext>dom.events.MouseEvent.pageY</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:view:get"><apiName>view</apiName><shortdesc>
		 Returns the AbstractView object from which the event was generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:AbstractView</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the AbstractView object from which the event was generated. In browsers, this is the window object the event happened in. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.view"><linktext>MDC - event.view</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-view"><linktext>W3C - UIEvent.view</linktext></link></related-links></apiValue><apiValue id="dom.events:UIEvent:which:get"><apiName>which</apiName><shortdesc>
		 Returns the numeric keyCode of the key pressed, or the character code (charCode) for 
		 an alphanumeric key pressed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the numeric keyCode of the key pressed, or the character code (charCode) for 
		 an alphanumeric key pressed. 
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;charCode/keyCode/which example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showKeyPress(evt) {
		 	alert("onkeypress handler: \n"
		 		+ "keyCode property: " + evt.keyCode + "\n"
		 		+ "which property: " + evt.which + "\n"
		 		+ "charCode property: " + evt.charCode + "\n"
		 		+ "Character Key Pressed: "
		 		+ String.fromCharCode(evt.charCode) + "\n"
		 	);
		 }
		 
		 
		 function keyDown(evt) {
		 	alert("onkeydown handler: \n"
		 		+ "keyCode property: " + evt.keyCode + "\n"
		 		+ "which property: " + evt.which + "\n"
		 	);
		 }
		 
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body
		   onkeypress="showKeyPress(event);"
		   onkeydown="keyDown(event);"
		 &gt;
		 
		 &lt;p&gt;Please press any key.&lt;/p&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.which"><linktext>MDC - event.which</linktext></link><link href="dom.events.xml#UIEvent/keyCode"><linktext>keyCode</linktext></link><link href="dom.events.xml#UIEvent/charCode"><linktext>charCode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:Event"><apiName>Event</apiName><shortdesc>
	 The Event interface is used to provide contextual information about an 
	 event to the listener processing the event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Event interface is used to provide contextual information about an 
	 event to the listener processing the event. An object which implements 
	 the Event interface is passed as the parameter to an EventListener. The 
	 object passed to the event listener may also implement derived interfaces 
	 that provide access to information directly relating to the type of event 
	 they represent.
	 
	 <p>To create an instance of the Event interface, use the 
	 DocumentEvent.createEvent("Event") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event"><linktext>W3C - DOM 3 Events: Event</linktext></link></related-links><apiOperation id="dom.events:Event:initEvent"><apiName>initEvent</apiName><shortdesc>
		 Initializes attributes of an Event created through the 
		 DocumentEvent.createEvent method.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of an Event created through the 
		 DocumentEvent.createEvent method. This method may only be called 
		 before the Event has been dispatched via the 
		 EventTarget.dispatchEvent() method. If the method is called several 
		 times before invoking EventTarget.dispatchEvent, only the final 
		 invocation takes precedence. This method has no effect if called after 
		 the event has been dispatched. If called from a subclass of the Event 
		 interface only the values specified in this method are modified, all 
		 other attributes are left unchanged.
		 
		 <p>This method sets the Event.type attribute to typeArg, and 
		 Event.namespaceURI to null. To initialize an event with a namespace 
		 URI, use the Event.initEventNS() method.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initEvent"><linktext>W3C - DOM 3 Events: Event.initEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:Event:initEventNS"><apiName>initEventNS</apiName><shortdesc>
		 Initializes attributes of an Event object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of an Event object. This method has the same 
		 behavior as Event.initEvent(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initEventNS"><linktext>W3C - DOM 3 Events: Event.initEventNS()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:Event:preventBubble"><apiName>preventBubble</apiName><shortdesc>
		 Prevents the event from bubbling.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Obsolete" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Prevents the event from bubbling. This method is deprecated in favor of standard stopPropagation and is removed in Gecko 1.9. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.preventBubble"><linktext>MDC - event.preventBubble()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:Event:preventCapture"><apiName>preventCapture</apiName><shortdesc>
		 This method is deprecated in favor of standard stopPropagation and is removed in Gecko 1.9.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Obsolete" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 This method is deprecated in favor of standard stopPropagation and is removed in Gecko 1.9. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.preventCapture"><linktext>MDC - event.preventCapture()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:Event:preventDefault"><apiName>preventDefault</apiName><shortdesc>
		 Cancels the event if it is cancelable, without stopping further propagation of the event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Cancels the event if it is cancelable, without stopping further propagation of the event. 
		 
		 Signifies that the event is to be canceled, meaning any default action 
		 normally taken by the implementation as a result of the event will not 
		 occur (see also Default actions and cancelable events). Calling this 
		 method for a non-cancelable event has no effect.
		 
		 <p><b>Note:</b> This method does not stop the event propagation; use 
		 Event.stopPropagation() or Event.stopImmediatePropagation() for that effect.</p>
		 
		 <p><b>Note:</b> Calling preventDefault during any stage of event flow cancels 
		 the event, meaning that any default action normally taken by the implementation as a 
		 result of the event will not occur. </p>
		 
		 </apiDesc><example>
		 Toggling a checkbox is the default action of clicking on a checkbox. This example demonstrates how to prevent that happening: 
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;preventDefault example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function stopDefAction(evt) {
		 	evt.preventDefault();
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 
		 &lt;p&gt;Please click on the checkbox control.&lt;/p&gt;
		 
		 &lt;form&gt;
		 &lt;input type="checkbox" onclick="stopDefAction(event);"/&gt;
		 &lt;label for="checkbox"&gt;Checkbox&lt;/label&gt;
		 
		 &lt;/form&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.preventDefault"><linktext>MDC - event.preventDefault()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-preventDefault"><linktext>W3C - DOM 3 Events: Event.preventDefault()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:Event:stopImmediatePropogation"><apiName>stopImmediatePropogation</apiName><shortdesc>
		 Prevents other event listeners from being triggered and, unlike 
		 Event.stopPropagation() its effect is immediate .</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Prevents other event listeners from being triggered and, unlike 
		 Event.stopPropagation() its effect is immediate . Once it has been called, 
		 further calls to this method have no additional effect.
		 
		 <p><b>Note:</b> This method does not prevent the default action from being invoked; 
		 use Event.preventDefault() for that effect.</p>
		 
		 </apiDesc><example>
		 This example demonstrates how events fire and are handled in the DOM in a very simple way. 
		 When the BODY of this HTML document loads, an event listener is registered with the top row 
		 of the TABLE. The event listener handles the event by executing the function stopEvent, 
		 which changes the value in the bottom cell of the table.
		 
		 <p>However, stopEvent also calls an event object method, event.stopPropagation, which keeps 
		 the event from bubbling any further up into the DOM. Note that the table itself has an onclick 
		 event handler that ought to display a message when the table is clicked. But the stopEvent 
		 method has stopped propagation, and so after the data in the table is updated, the event phase 
		 is effectively ended, and an alert box is displayed to confirm this.</p>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;Event Propagation&lt;/title&gt;
		 
		 &lt;style type="text/css"&gt;
		 	#t-daddy { border: 1px solid red }
		 	#c1 { background-color: pink; }
		 &lt;/style&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function stopEvent(ev) {
		 	c2 = document.getElementById("c2");
		 	c2.innerHTML = "hello";
		 
		 	// this ought to keep t-daddy from getting the click.
		 	ev.stopPropagation();
		 	alert("event propagation halted.");
		 }
		 
		 function load() {
		 	elem = document.getElementById("tbl1");
		 	elem.addEventListener("click", stopEvent, false);
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onload="load();"&gt;
		 
		 &lt;table id="t-daddy" onclick="alert('hi');"&gt;
		 	&lt;tr id="tbl1"&gt;
		 		&lt;td id="c1"&gt;one&lt;/td&gt;
		 	&lt;/tr&gt;
		 	&lt;tr&gt;
		 		&lt;td id="c2"&gt;two&lt;/td&gt;
		 	&lt;/tr&gt;
		 &lt;/table&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-stopImmediatePropagation"><linktext>W3C - DOM 3 Events: Event.stopImmediatePropogation()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:Event:stopPropogation"><apiName>stopPropogation</apiName><shortdesc>
		 Prevents other event listeners from being triggered but its effect is 
		 deferred until all event listeners attached on the Event.currentTarget 
		 have been triggered .</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Prevents other event listeners from being triggered but its effect is 
		 deferred until all event listeners attached on the Event.currentTarget 
		 have been triggered . Once it has been called, further calls to this 
		 method have no additional effect.
		 
		 <p><b>Note:</b> This method does not prevent the default action from being 
		 invoked; use Event.preventDefault() for that effect.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.stopPropogation"><linktext>MDC - event.stopPropogation()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-stopPropagation"><linktext>W3C - DOM 3 Events: Event.stopPropogation()</linktext></link></related-links></apiOperation><apiValue id="dom.events:Event:AT_TARGET"><apiName>AT_TARGET</apiName><shortdesc>
		 The current event is in the target phase, i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The current event is in the target phase, i.e. it is being evaluated at the event target.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#AT_TARGET"><linktext>W3C - DOM 3 Events: Event.AT_TARGET</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:BUBBLING_PHASE"><apiName>BUBBLING_PHASE</apiName><shortdesc>
		 The current event phase is the bubbling phase.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The current event phase is the bubbling phase.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#BUBBLING_PHASE"><linktext>W3C - DOM 3 Events: Event.BUBBLING_PHASE</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:CAPTURING_PHASE"><apiName>CAPTURING_PHASE</apiName><shortdesc>
		 The current event phase is the capture phase.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The current event phase is the capture phase.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#CAPTURING_PHASE"><linktext>W3C - DOM 3 Events: Event.CAPTURING_PHASE</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:abort"><apiName>abort</apiName><shortdesc>
		 Loading of a resource has been aborted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>abort</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Loading of a resource has been aborted.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-abort"><linktext>W3C - DOM 3 Events: UIEvent.abort / Event.abort</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:change"><apiName>change</apiName><shortdesc>
		 A control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>change</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A control loses the input focus and its value has been modified since gaining focus. This event type is dispatched before the event type blur.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-change"><linktext>W3C - DOM 3 Events: UIEvent.change / Event.change</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:error"><apiName>error</apiName><shortdesc>
		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 
		 such as an invalid image, a script execution error, or non-well-formed XML.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>error</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A resource failed to load, or has been loaded but cannot be interpreted according to its semantics 
		 such as an invalid image, a script execution error, or non-well-formed XML.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-error"><linktext>W3C - DOM 3 Events: UIEvent.error / Event.error</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:load"><apiName>load</apiName><shortdesc>
		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 
		 (such as images, style sheets, or scripts).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>load</apiData><apiType value="String"/></apiValueDef><apiDesc>
		  The DOM Implementation finishes loading the resource (such as the document) and any dependent resources 
		 (such as images, style sheets, or scripts). Dependent resources that fail to load will not prevent this 
		 event from firing if the resource that loaded them is still accessible via the DOM. If this event type 
		 is dispatched, implementations are required to dispatch this event at least on the Document node.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-load"><linktext>W3C - DOM 3 Events: UIEvent.load / Event.load</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:reset"><apiName>reset</apiName><shortdesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>reset</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is reset.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-reset"><linktext>W3C - DOM 3 Events: UIEvent.reset / Event.reset</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:select"><apiName>select</apiName><shortdesc>
		 A user selects some text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>select</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A user selects some text. DOM Level 3 Events does not provide contextual information to access 
		 the selected text. The selection occured before the dispatch of this event type.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-select"><linktext>W3C - DOM 3 Events: UIEvent.select / Event.select</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:submit"><apiName>submit</apiName><shortdesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>submit</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A form, such as a [HTML 4.01] or [XHTML 1.0] form, is submitted.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-submit"><linktext>W3C - DOM 3 Events: UIEvent.submit / Event.submit</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:unload"><apiName>unload</apiName><shortdesc>
		 The DOM implementation removes from the environment the resource (such as the document) or any dependent
		 resources (such as images, style sheets, scripts).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.0"/><apiSince version="HTML 4.0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>unload</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 The DOM implementation removes from the environment the resource (such as the document) or any dependent
		 resources (such as images, style sheets, scripts). The document is unloaded after the dispatch of this event 
		 type. If this event type is dispatched, implementations are required to dispatch this event at least on the 
		 Document node.
		 
		 <p><b>Note:</b> Dispatched from UIEvent if generated from a user interface, Event otherwise.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view is in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-unload"><linktext>W3C - DOM 3 Events: UIEvent.unload / Event.unload</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:bubbles:get"><apiName>bubbles</apiName><shortdesc>
		 Used to indicate whether or not an event is a bubbling event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Used to indicate whether or not an event is a bubbling event. If the 
		 event can bubble the value is true, otherwise the value is false.
		 
		 </apiDesc><example>
		 <codeblock>
		 function goInput(e) {
		 	// checks bubbles and
		 	if not e.bubbles {
		 		// passes event along if it's not
		 		passItOn(e); 
		 	}
		 	// already bubbling
		 	doOutput(e)
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.altKey"><linktext>MDC - event.bubbles</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-canBubble"><linktext>W3C - DOM 3 Events: Event.bubbles</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:cancelable:get"><apiName>cancelable</apiName><shortdesc>
		 Indicates whether the event is cancelable or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates whether the event is cancelable or not.
		 
		 <p><b>Note:</b> Whether an event can be canceled or not 
		 is something that's determined when that event is initialized. </p>
		 
		 <p><b>Note:</b> To cancel an event, call the preventDefault method on the event. This keeps 
		 the implementation from executing the default action that is associated with the event. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.cancelable"><linktext>MDC - event.cancelable</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-canCancel"><linktext>W3C - DOM 3 Events: Event.cancelable</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:currentTarget:get"><apiName>currentTarget</apiName><shortdesc>
		 Identifies the current target for the event, as the event traverses the DOM.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.events:EventTarget</apiValueClassifier></apiValueDef><apiDesc>
		 Identifies the current target for the event, as the event traverses the DOM.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.currentTarget"><linktext>MDC - event.currentTarget</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-currentTarget"><linktext>W3C - DOM 3 Events: Event.currentTarget</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:defaulPrevented:get"><apiName>defaulPrevented</apiName><shortdesc>
		 Used to indicate whether Event.preventDefault() has been called for 
		 this event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Used to indicate whether Event.preventDefault() has been called for 
		 this event.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-defaultPrevented"><linktext>W3C - DOM 3 Events: Event.defaulPrevented</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:eventPhase:get"><apiName>eventPhase</apiName><shortdesc>
		 Used to indicate which phase of event flow is currently being accomplished.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Used to indicate which phase of event flow is currently being accomplished.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.eventPhase"><linktext>MDC - event.eventPhase</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-eventPhase"><linktext>W3C - DOM 3 Events: Event.eventPhase</linktext></link><link href="dom.events.xml#Event/CAPTURING_PHASE"><linktext>CAPTURING_PHASE</linktext></link><link href="dom.events.xml#Event/AT_TARGET"><linktext>AT_TARGET</linktext></link><link href="dom.events.xml#Event/BUBBLING_PHASE"><linktext>BUBBLING_PHASE</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:explicitOriginalTarget:get"><apiName>explicitOriginalTarget</apiName><shortdesc>
		 The explicit original target of the event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko.events:nsIDOMEventTarget</apiValueClassifier></apiValueDef><apiDesc>
		 The explicit original target of the event.
		 
		 <p>If the event was retargeted for some reason other than an anonymous boundary crossing, this 
		 will be set to the target before the retargeting occurs. For example, mouse events are retargeted 
		 to their parent node when they happen over text nodes (see bug 185889), and in that case 
		 currentTarget will show the parent and explicitOriginalTarget will show the text node. </p>
		 
		 <p>explicitOriginalTarget differs from originalTarget in that it will never contain anonymous content. </p>
		 
		 </apiDesc><example>
		 This property can be used with &lt;command&gt; to get the event details of the original object calling the command.
		 <codeblock>
		 function myCommand(ev) {
		 	alert(ev.explicitOriginalTarget.nodeName); // returns 'menuitem'
		 }
		 
		 
		 &lt;command id="my-cmd-anAction" oncommand="myCommand(event);"/&gt;
		 
		 &lt;menulist&gt;&lt;menupopup&gt;
		 	&lt;menuitem label="Get my element name!" command="my-cmd-anAction"/&gt;
		 &lt;/menupopup&gt;&lt;/menulist&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMNSEvent.idl"><linktext>Mozilla Central - nsIDOMNSEvent.idl</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:isTrusted:get"><apiName>isTrusted</apiName><shortdesc>
		 Determines if the event was from the user or script generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Determines if the event was from the user or script generated. Returns
		 true if the user caused the event to be dispatched.
		 
		 <p><b>Note:</b> Can't find any more information on this property</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://osdir.com/ml/w3c.webapi/2006-06/msg00080.html"><linktext>W3C WebAPI Forum - [DOM3EV] introduce Event.trusted?</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:namespaceURI:get"><apiName>namespaceURI</apiName><shortdesc>
		 The namespace URI associated with this event at initialization time, or 
		 null if it is unspecified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The namespace URI associated with this event at initialization time, or 
		 null if it is unspecified.
		 DOM Level 2 Events initialization methods, such as Event.initEvent(), set 
		 the value to null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-namespaceURI"><linktext>W3C - DOM 3 Events: Event.namespaceURI</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:originalTarget:get"><apiName>originalTarget</apiName><shortdesc>
		 The original target of the event before any retargetings.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/></apiValueDef><apiDesc>
		 The original target of the event before any retargetings.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMNSEvent.idl"><linktext>Mozilla Central - nsIDOMNSEvent.idl</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:target:get"><apiName>target</apiName><shortdesc>
		 Used to indicate the event target.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.events:EventTarget</apiValueClassifier></apiValueDef><apiDesc>
		 Used to indicate the event target. This attribute contains the target node 
		 when used with the Event dispatch and DOM event flow.
		 
		 </apiDesc><example>
		 <codeblock>&lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;target example&lt;/title&gt;
		 &lt;script type="text/javascript"&gt;
		 
		 function highlightTarget(evt) {
		 	evt.target.style.backgroundColor = 'blue';
		 }
		 
		 function resetTarget(evt) {
  		 	evt.target.style.backgroundColor = 'silver';
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="highlightTarget(event)" onmouseup="resetTarget(event)"&gt;
		 
		 &lt;p&gt;This example demonstrates how, by using event propagation, two event
		 handler functions in the body element can use the &lt;i&gt;target&lt;/i&gt; property
		 to distinguish between, and process, all other bubbleable events occuring
		 lower down the DOM. Note: not all events can bubble up the DOM.&lt;/p&gt;
		 
		 &lt;p&gt;As an event lower down the DOM bubbles up and reaches the body
		 object, the &lt;i&gt;target&lt;/i&gt; property contains the object reference of the
		 original event target. In this case which element in the document
		 received an onmousedown or onmouseup event.&lt;/p&gt;
		 
		 &lt;p&gt;This allows the event handlers of the body object to process bubbleable
		 events occuring lower down the DOM structure, which means there is no need
		 to attach the event handlers to every button &amp; para element of the page.&lt;/p&gt;
		 
		 &lt;button&gt;button 1&lt;/button&gt;&lt;br /&gt;
		 &lt;button&gt;button 2&lt;/button&gt;&lt;br /&gt;
		 
		 &lt;button&gt;button 3&lt;/button&gt;&lt;br /&gt;
		 &lt;button&gt;button 4&lt;/button&gt;&lt;br /&gt;
		 &lt;button&gt;button 5&lt;/button&gt;&lt;br /&gt;
		 &lt;button&gt;button 6&lt;/button&gt;&lt;br /&gt;
		 
		 &lt;button&gt;button 7&lt;/button&gt;&lt;br /&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.target"><linktext>MDC - event.target</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-target"><linktext>W3C - DOM 3 Events: Event.target</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:timeStamp:get"><apiName>timeStamp</apiName><shortdesc>
		 Used to specify the time at which the event was created in milliseconds 
		 relative to 1970-01-01T00:00:00Z.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMTimeStamp</apiValueClassifier></apiValueDef><apiDesc>
		 Used to specify the time at which the event was created in milliseconds 
		 relative to 1970-01-01T00:00:00Z. Due to the fact that some systems may not 
		 provide this information the value of timeStamp may be not available for all 
		 events. When not available, the value is 0.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 
		 &lt;title&gt;timeStamp example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 function getTime(event) {
		 	document.getElementById("time").firstChild.nodeValue = event.timeStamp;
		 }
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="getTime(event)"&gt;
		 
		 &lt;p&gt;Press any key to get the current timestamp
		 for the onkeypress event.&lt;/p&gt;
		 &lt;p&gt;timeStamp: &lt;span id="time"&gt;-&lt;/span&gt;&lt;/p&gt;
		 
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.timeStamp"><linktext>MDC - event.timeStamp</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-timeStamp"><linktext>W3C - DOM 3 Events: Event.timeStamp</linktext></link></related-links></apiValue><apiValue id="dom.events:Event:type:get"><apiName>type</apiName><shortdesc>
		 The local name of the event type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The local name of the event type. The name must be an NCName as defined in 
		 [XML Namespaces 1.1] and is case-sensitive.
		 
		 <p><b>Note:</b> The type must be an XML name.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 
		 &lt;title&gt;type example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 var currEvent = null;
		 
		 function getEvtType(evt) {
		 	currEvent = evt.type;
		 	document.getElementById("Etype").firstChild.nodeValue = currEvent;
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body
		   onkeydown="getEvtType(event)"
		   onkeyup="getEvtType(event)"
		   onmousedown="getEvtType(event)"
		   onmouseup="getEvtType(event)"&gt;
		 
		 &lt;p&gt;Press any key or click the mouse to get the event type.&lt;/p&gt;
		 &lt;p&gt;Event type: &lt;span id="Etype"&gt;-&lt;/span&gt;&lt;/p&gt;
		 
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.type"><linktext>MDC - event.type</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-type"><linktext>W3C - DOM 3 Events: Event.type</linktext></link><link href="http://www.w3.org/TR/2006/REC-xml-names11-20060816/"><linktext>W3C - XML Namespaces 1.1</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:TextEvent"><apiName>TextEvent</apiName><shortdesc>
	 The TextEvent interface provides specific contextual information 
	 associated with Text Events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:UIEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The TextEvent interface provides specific contextual information 
	 associated with Text Events.
	 
	 <p>To create an instance of the TextEvent interface, use the 
	 DocumentEvent.createEvent("TextEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-TextEvent"><linktext>W3C - DOM 3 Events: TextEvent</linktext></link></related-links><apiOperation id="dom.events:TextEvent:initTextEvent"><apiName>initTextEvent</apiName><shortdesc>
		 Initializes attributes of a TextEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>dataArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies TextEvent.data.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a TextEvent object. This method has the 
		 same behavior as UIEvent.initUIEvent(). The value of UIEvent.detail remains undefined. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initTextEvent"><linktext>W3C - TextEvent.initTextEvent()</linktext></link><link href="dom.events.xml#UIEvent/initUIEvent()"><linktext>dom.events.UIEvent.initUIEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:TextEvent:initTextEventNS"><apiName>initTextEventNS</apiName><shortdesc>
		 Initializes attributes of a TextEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>dataArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies TextEvent.data.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a TextEvent object. This method has the same 
		 behavior as UIEvent.initUIEventNS(). The value of UIEvent.detail remains undefined. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initTextEventNS"><linktext>W3C - TextEvent.initTextEventNS()</linktext></link><link href="dom.events.xml#UIEvent/initUIEventNS()"><linktext>dom.events.UIEvent.initUIEventNS()</linktext></link></related-links></apiOperation><apiValue id="dom.events:TextEvent:textInput"><apiName>textInput</apiName><shortdesc>
		 One or more characters have been entered.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>textInput</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 One or more characters have been entered. 
		 
		 <p>The characters can originate from a variety of sources. For example, it could be characters resulting 
		 from a key being pressed or released on a keyboard device, characters resulting from the processing of an 
		 input method editor, or resulting from a voice command. Where a "paste" operation generates a simple 
		 sequence of characters, i.e. a text without any structure or style information, this event type should 
		 be generated as well.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>UIEvent.view and TextEvent.data are in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-textInput"><linktext>W3C - TextEvent.textInput</linktext></link></related-links></apiValue><apiValue id="dom.events:TextEvent:data:get"><apiName>data</apiName><shortdesc>
		 Holds the value of the characters generated by the character device.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Holds the value of the characters generated by the character device. 
		 This may be a single Unicode character or a non-empty sequence of 
		 Unicode characters [Unicode]. Characters should be normalized as 
		 defined by the Unicode normalization form NFC, defined in [UAX #15]. 
		 This attribute cannot be null or contain the empty string.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-data"><linktext>W3C - TextEvent.data</linktext></link><link href="http://www.unicode.org/versions/Unicode5.0.0/"><linktext>Unicode</linktext></link><link href="http://www.unicode.org/reports/tr15/"><linktext>UAX #15</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MouseEvent"><apiName>MouseEvent</apiName><shortdesc>
	 The MouseEvent interface provides specific contextual information 
	 associated with Mouse events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>cssom.view:MouseEventView</apiBaseInterface><apiBaseClassifier>dom.events:UIEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MouseEvent interface provides specific contextual information 
	 associated with Mouse events.
	 
	 <p>In the case of nested elements mouse events are always targeted at the 
	 most deeply nested element. Ancestors of the targeted element may use 
	 bubbling to obtain notification of mouse events which occur within their 
	 descendent elements.</p>
	 
	 <p>To create an instance of the MouseEvent interface, use the 
	 DocumentEvent.createEvent("MouseEvent") method call.</p>
	 
	 <p><b>Note:</b> When initializing MouseEvent objects using initMouseEvent or 
	 initMouseEventNS, implementations should use the client coordinates clientX 
	 and clientY for calculation of other coordinates (such as target coordinates 
	 exposed by DOM Level 0 implementations).</p>
	 
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.events:MouseEvent:getModifierState"><apiName>getModifierState</apiName><shortdesc>
		 Queries the state of a modifier using a key identifier.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If it is a modifier key and the modifier is activated
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>keyIdentifierArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Refer to the KeyboardEvent.getModifierState() 
		 method for a description of this parameter.
		 
		 Note: If an application wishes to distinguish between right and left 
		 modifiers, this information could be deduced using keyboard events 
		 and KeyboardEvent.keyLocation.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Queries the state of a modifier using a key identifier.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-getModifierState"><linktext>W3C - MouseEvent.getModifierState()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:MouseEvent:initMouseEvent"><apiName>initMouseEvent</apiName><shortdesc>
		 Initializes attributes of a MouseEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>detailArg</apiItemName><apiType value="Number"/><apiDesc>Specifies UIEvent.detail.
		 </apiDesc></apiParam><apiParam><apiItemName>screenXArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.screenX.
		 </apiDesc></apiParam><apiParam><apiItemName>screenYArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.screenY.
		 </apiDesc></apiParam><apiParam><apiItemName>clientXArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.clientX.
		 </apiDesc></apiParam><apiParam><apiItemName>clientYArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.clientY.
		 </apiDesc></apiParam><apiParam><apiItemName>ctrlKeyArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies MouseEvent.ctrlKey.
		 </apiDesc></apiParam><apiParam><apiItemName>altKeyArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies MouseEvent.altKey.
		 </apiDesc></apiParam><apiParam><apiItemName>shiftKeyArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies MouseEvent.shiftKey.
		 </apiDesc></apiParam><apiParam><apiItemName>metaKeyArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies MouseEvent.metaKey.
		 </apiDesc></apiParam><apiParam><apiItemName>buttonArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.button
		 </apiDesc></apiParam><apiParam><apiItemName>relatedTargetArg</apiItemName><apiOperationClassifier>dom.events:EventTarget</apiOperationClassifier><apiDesc>Specifies MouseEvent.relatedTarget. This value may be null.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a MouseEvent object. This method has the 
		 same behavior as UIEvent.initUIEvent(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMouseEvent"><linktext>W3C - MouseEvent.initMouseEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:MouseEvent:initMouseEventNS"><apiName>initMouseEventNS</apiName><shortdesc>
		 Initializes attributes of a MouseEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>detailArg</apiItemName><apiType value="Number"/><apiDesc>Specifies UIEvent.detail.
		 </apiDesc></apiParam><apiParam><apiItemName>screenXArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.screenX.
		 </apiDesc></apiParam><apiParam><apiItemName>screenYArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.screenY.
		 </apiDesc></apiParam><apiParam><apiItemName>clientXArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.clientX.
		 </apiDesc></apiParam><apiParam><apiItemName>clientYArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.clientY.
		 </apiDesc></apiParam><apiParam><apiItemName>ctrlKeyArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies MouseEvent.ctrlKey.
		 </apiDesc></apiParam><apiParam><apiItemName>altKeyArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies MouseEvent.altKey.
		 </apiDesc></apiParam><apiParam><apiItemName>shiftKeyArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies MouseEvent.shiftKey.
		 </apiDesc></apiParam><apiParam><apiItemName>metaKeyArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies MouseEvent.metaKey.
		 </apiDesc></apiParam><apiParam><apiItemName>buttonArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseEvent.button
		 </apiDesc></apiParam><apiParam><apiItemName>relatedTargetArg</apiItemName><apiOperationClassifier>dom.events:EventTarget</apiOperationClassifier><apiDesc>Specifies MouseEvent.relatedTarget. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>modifiersListArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Refer to the KeyboardEvent.initKeyboardEventNS() method for a description of this parameter.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a MouseEvent object. This method has the
		 same behavior as UIEvent.initUIEventNS(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMouseEventNS"><linktext>W3C - MouseEvent.initMouseEventNS()</linktext></link></related-links></apiOperation><apiValue id="dom.events:MouseEvent:click"><apiName>click</apiName><shortdesc>
		 A pointing device button is clicked over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>click</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device button is clicked over an element. 
		 
		 <p>The definition of a click depends on the environment configuration; i.e. it may depend on the screen location or 
		 the delay between the press and release of the pointing device button. In any case, the event target must be the 
		 same between the mousedown, mouseup, and click. The sequence of these events is: mousedown, mouseup, and click. It 
		 depends on the environment configuration whether the event type click can occur if one or more of the event types 
		 mouseover, mousemove, and mouseout occur between the press and release of the pointing device button. In addition, 
		 the event type is dispatched as described in Activation requests and behavior.</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, MouseEvent.button, and UIEvent.view 
		 are in use. The UIEvent.detail attribute indicates the current click count. The attribute value is 1 when the user 
		 begins this action and increments by 1 for each click.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-click"><linktext>W3C - MouseEvent.click</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:dblclick"><apiName>dblclick</apiName><shortdesc>
		 A pointing device button is clicked twice over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>dblclick</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device button is clicked twice over an element. 
		 
		 <p>The definition of a double click depends on the environment configuration, except that the event target 
		 must be the same between mousedown, mouseup, and dblclick. This event type is dispatched after the event 
		 type click if a click and double click occur simultaneously, and after the event type mouseup otherwise.</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, MouseEvent.altKey, 
		 MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, MouseEvent.button, and UIEvent.view are in use. The UIEvent.detail 
		 attribute indicates the current click count.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-dblclick"><linktext>W3C - MouseEvent.dblclick</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mousedown"><apiName>mousedown</apiName><shortdesc>
		 A pointing device button is pressed over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mousedown</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device button is pressed over an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, MouseEvent.button, and UIEvent.view 
		 are in use. The UIEvent.detail attribute indicates the current click count incremented by one. For example, if no 
		 click happened before the mousedown, UIEvent.detail will contain the value 1.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousedown"><linktext>W3C - MouseEvent.mousedown</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mousemove"><apiName>mousemove</apiName><shortdesc>
		 A pointing device is moved while it is over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mousemove</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device is moved while it is over an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousemove"><linktext>W3C - MouseEvent.mousemove</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mouseout"><apiName>mouseout</apiName><shortdesc>
		 A pointing device is moved away from an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseout</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device is moved away from an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use. 
		 MouseEvent.relatedTarget indicates the event target a pointing device is entering, if any.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mouseout"><linktext>W3C - MouseEvent.mouseout</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mouseover"><apiName>mouseover</apiName><shortdesc>
		 A pointing device is moved onto an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseover</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device is moved onto an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use. 
		 MouseEvent.relatedTarget indicates the event target a pointing device is exiting, if any.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mouseover"><linktext>W3C - MouseEvent.mouseover</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:mouseup"><apiName>mouseup</apiName><shortdesc>
		 A pointing device button is released over an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="4.01"/><apiSince version="HTML 4.01"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mouseup</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A pointing device button is released over an element.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, 
		 MouseEvent.button, and UIEvent.view are in use. The UIEvent.detail attribute indicates the current click count incremented by one.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mouseup"><linktext>W3C - MouseEvent.mouseup</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:altKey:get"><apiName>altKey</apiName><shortdesc>
		 Refer to the KeyboardEvent.altKey attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Refer to the KeyboardEvent.altKey attribute.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-altKey"><linktext>W3C - MouseEvent.altKey</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:button:get"><apiName>button</apiName><shortdesc>
		 Returns an integer value indicating the button that changed state.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns an integer value indicating the button that changed state. 
		 Some mice may provide or simulate more buttons, and values higher than 2 
		 can be used to represent such buttons.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry><codeph>0</codeph></entry><entry>Standard 'click', usually left button </entry>
		 	</row><row>
		 		<entry><codeph>1</codeph></entry><entry>Middle button, usually wheel-click </entry>
		 	</row><row>
		 		<entry><codeph>2</codeph></entry><entry>Right button, usually right-click </entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, 
		 MouseEvent.button, and UIEvent.view are in use. The UIEvent.detail attribute indicates the current click count incremented by one.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note:</b> Because mouse clicks are frequently intercepted by the user 
		 interface, it may be difficult to detect buttons other than those for a standard mouse 
		 click (usually the left button) in some circumstances. </p>
		 
		 <p><b>Note:</b> Users may change the configuration of buttons on their pointing 
		 device so that if an event's button property is zero, it may not have been caused by 
		 the button that is physically left–most on the pointing device; however, it should 
		 behave as if the left button was clicked in the standard button layout. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script type="text/javascript"&gt;
		 
		 function whichButton(e) {
		 	// Handle different event models
		 	var e = e || window.event;
		 	var btnCode;
		 
		 	if ('object' == typeof e) {
		 		btnCode = e.button;
		 
		 		switch (btnCode) {
		 			case 0 : alert('Left button clicked');
		 			break;
		 			case 1 : alert('Middle button clicked');
		 			break;
		 			case 2 : alert('Right button clicked');
		 			break;
		 			default: alert('Unexpected code: ' + btnCode);
		 		}
		 	}
		 }
		 
		 &lt;/script&gt;
		 
		 &lt;p onmouseup="whichButton(event);" oncontextmenu="event.preventDefault();"&gt;Click with mouse...&lt;/p&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.button"><linktext>MDC - event.button</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-button"><linktext>W3C - MouseEvent.button</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:clientX:get"><apiName>clientX</apiName><shortdesc>
		 
		 Returns the horizontal coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the horizontal coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page). 
		 
		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 
		 event with a clientX value of 0, regardless of whether the page is scrolled horizontally.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;title&gt;clientX\clientY example&lt;/title&gt;
		 
		 	&lt;script type="text/javascript"&gt;
		 		function showCoords(evt) {
		 			alert(
		 			"clientX value: " + evt.clientX + "\n"
		 			+ "clientY value: " + evt.clientY + "\n"
		 		);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 	&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533567(VS.85).aspx"><linktext>MSDN: clientX Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.clientX"><linktext>MDC - Event: clientX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: clientX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/clientY"><linktext>clientY</linktext></link><link href="dom.events.xml#MouseEvent/screenX"><linktext>screenX</linktext></link><link href="dom.events.xml#MouseEvent/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:clientY:get"><apiName>clientY</apiName><shortdesc>
		 
		 Returns the vertical coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the vertical coordinate within the application's client area at which the event occurred 
		 (as opposed to the coordinates within the page).
		 
		 <p>For example, clicking in the top-left corner of the client area will always result in a mouse 
		 event with a clientY value of 0, regardless of whether the page is scrolled vertically.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;clientX\clientY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"clientX value: " + evt.clientX + "\n"
		 				+ "clientY value: " + evt.clientY + "\n"
		 			);
		 			}
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533568(VS.85).aspx"><linktext>MSDN: clientY Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.clientY"><linktext>MDC - Event: clientY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: clientY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/clientX"><linktext>clientX</linktext></link><link href="dom.events.xml#MouseEvent/screenX"><linktext>screenX</linktext></link><link href="dom.events.xml#MouseEvent/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:ctrlKey:get"><apiName>ctrlKey</apiName><shortdesc>
		 Refer to the KeyboardEvent.ctrlKey attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Refer to the KeyboardEvent.ctrlKey attribute.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-ctrlKey"><linktext>W3C - MouseEvent.ctrlKey</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:metaKey:get"><apiName>metaKey</apiName><shortdesc>
		 Refer to the KeyboardEvent.metaKey attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Refer to the KeyboardEvent.metaKey attribute.
		 
		 </apiDesc><example>
		 <codeblock>
		 function goInput(e) {
		 	// checks metaKey and
		 	if (e.metaKey) {
		 		// passes event along
		 		superSizeOutput(e);
		 	} else {
		 		doOutput(e);
		 	}
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.metaKey"><linktext>MDC - event.metaKey</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-metaKey"><linktext>W3C - MouseEvent.metaKey</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:offsetX:get"><apiName>offsetX</apiName><shortdesc>
		 
		 Returns the horizontal coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_incorrect"/><apiTool name="Safari" version="3.1_incorrect"/><apiTool name="Safari" version="4.0b_incorrect"/><apiTool name="Chrome" version="1.0_incorrect"/><apiTool name="Chrome" version="2.0_incorrect"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the horizontal coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.
		 
		 <p>In IE the coordinates are calculated relative to the target element when that element is 
		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 
		 relative to the target's offsetParent.</p>
		 
		 <p><b>Note (Safari/Chrome):</b> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the
		 border box.</p>
		 
		 <p><b>Note (Opera):</b> Opera calculates the position from the content box instead of the padding box.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;head&gt;
		 	&lt;script&gt;
		 		function offsetCoords() {
		 			var offsetInfo = ""
		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"
		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"
		 			alert(offsetInfo);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 
		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;
		 	...
		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;
		 	...
		 	&lt;/div&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534305(VS.85).aspx"><linktext>MSDN: offsetX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: offsetX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/offsetY"><linktext>offsetY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:offsetY:get"><apiName>offsetY</apiName><shortdesc>
		 
		 Returns the vertical coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_buggy"/><apiTool name="IE" version="6.0_buggy"/><apiTool name="IE" version="7.0_buggy"/><apiTool name="IE" version="8.0_as_IE7_buggy"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_incorrect"/><apiTool name="Safari" version="3.1_incorrect"/><apiTool name="Safari" version="4.0b_incorrect"/><apiTool name="Chrome" version="1.0_incorrect"/><apiTool name="Chrome" version="2.0_incorrect"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the vertical coordinate, as number of CSS pixels, of the 
		 position where the event occurred relative to the origin of the padding box of the target node.
		 
		 <p>In IE the coordinates are calculated relative to the target element when that element is 
		 eligible to become an offsetParent. If that's not the case, the coordinates are calculated 
		 relative to the target's offsetParent.</p>
		 
		 <p><b>Note (Safari/Chrome):</b> Safari and Chrome calculate the position not from the padding box (as per the spec) but form the
		 border box.</p>
		 
		 <p><b>Note (Opera):</b> Opera calculates the position from the content box instead of the padding box.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;head&gt;
		 	&lt;script&gt;
		 		function offsetCoords() {
		 			var offsetInfo = ""
		 			offsetInfo = "The x coordinate is: " + window.event.offsetX + "\r"
		 			offsetInfo += "The y coordinate is: " + window.event.offsetY + "\r"
		 			alert(offsetInfo);
		 		}
		 	&lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body onmousemove="window.status = 'X=' + window.event.offsetX + 
		 ' Y=' + window.event.offsetY" ondblclick="offsetCoords()"&gt;
		 	...
		 	&lt;div onclick="offsetCoords();" ... position:absolute; top:200; left:300;"&gt;
		 	...
		 	&lt;/div&gt;
		 &lt;/body&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534306(VS.85).aspx"><linktext>MSDN: offsetY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: offsetY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/offsetX"><linktext>offsetX</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:pageX:get"><apiName>pageX</apiName><shortdesc>
		 Returns the horizontal coordinate of the event relative to whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the horizontal coordinate of the event relative to whole document. 
		 
		 <p><b>Note (IE):</b> In order to get it in IE, too, add the scrolling offset of the 
		 document to clientX/Y.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	function showCoords(evt){
		 		var form = document.forms.form_coords;
		 		var parent_id = evt.target.parentNode.id;
		 		form.parentId.value = parent_id;
		 		form.pageXCoords.value = evt.pageX;
		 		form.pageYCoords.value = evt.pageY;
		 		form.layerXCoords.value = evt.layerX;
		 		form.layerYCoords.value = evt.layerY;
		 	}
		 &lt;/script&gt;
		 
		 &lt;style type="text/css"&gt;
		 
		 #d1 {
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d2 {
		 	position: absolute;
		 	top: 180px;
		 	left: 80%;
		 	right:auto;
		 	width: 40%;
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d3 {
		 	position: absolute;
		 	top: 240px;
		 	left: 20%;
		 	width: 50%;
		 	border: solid blue 1px;
		 	padding: 10px;
		 }
		 
		 &lt;/style&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 
		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;
		 
		 &lt;div id="d1"&gt;
		 	&lt;span&gt;This is an un-positioned div so clicking it will return
		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d2"&gt;
		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		 	values that are relative to the top-left corner of this positioned
		 	element. Note the pageX\pageY properties still return the
		 	absolute position in the document, including page scrolling.&lt;/span&gt;
		 
		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		 	will return layerX/layerY values that are relative to the top-left
		 	corner of this positioned element. Note the pageX\pageY properties still
		 	return the absolute position in the document, including page
		 	scrolling.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d3"&gt;
		 	&lt;form name="form_coords"&gt;
		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;
		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;
		 	&lt;/form&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageX"><linktext>MDC - Event: pageX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: pageX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/pageY"><linktext>pageY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:pageY:get"><apiName>pageY</apiName><shortdesc>
		 Returns the vertical coordinate of the event relative to the whole document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the vertical coordinate of the event relative to the whole document.
		 
		 <p><b>Note (IE):</b> In order to get it in IE, too, add the scrolling offset of the 
		 document to clientX/Y.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;pageX\pageY &amp; layerX\layerY example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	function showCoords(evt){
		 		var form = document.forms.form_coords;
		 		var parent_id = evt.target.parentNode.id;
		 		form.parentId.value = parent_id;
		 		form.pageXCoords.value = evt.pageX;
		 		form.pageYCoords.value = evt.pageY;
		 		form.layerXCoords.value = evt.layerX;
		 		form.layerYCoords.value = evt.layerY;
		 	}
		 &lt;/script&gt;
		 
		 &lt;style type="text/css"&gt;
		 
		 #d1 {
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d2 {
		 	position: absolute;
		 	top: 180px;
		 	left: 80%;
		 	right:auto;
		 	width: 40%;
		 	border: solid blue 1px;
		 	padding: 20px;
		 }
		 
		 #d3 {
		 	position: absolute;
		 	top: 240px;
		 	left: 20%;
		 	width: 50%;
		 	border: solid blue 1px;
		 	padding: 10px;
		 }
		 
		 &lt;/style&gt;
		 &lt;/head&gt;
		 
		 &lt;body onmousedown="showCoords(event)"&gt;
		 
		 &lt;p&gt;To display the mouse coordinates please click anywhere on the page.&lt;/p&gt;
		 
		 &lt;div id="d1"&gt;
		 	&lt;span&gt;This is an un-positioned div so clicking it will return
		 	layerX/layerY values almost the same as pageX/PageY values.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d2"&gt;
		 	&lt;span&gt;This is a positioned div so clicking it will return layerX/layerY
		 	values that are relative to the top-left corner of this positioned
		 	element. Note the pageX\pageY properties still return the
		 	absolute position in the document, including page scrolling.&lt;/span&gt;
		 
		 	&lt;span&gt;Make the page scroll more! This is a positioned div so clicking it
		 	will return layerX/layerY values that are relative to the top-left
		 	corner of this positioned element. Note the pageX\pageY properties still
		 	return the absolute position in the document, including page
		 	scrolling.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;div id="d3"&gt;
		 	&lt;form name="form_coords"&gt;
		 		Parent Element id: &lt;input type="text" name="parentId" size="7" /&gt;&lt;br /&gt;
		 		pageX:&lt;input type="text" name="pageXCoords" size="7" /&gt;  
		 		pageY:&lt;input type="text" name="pageYCoords" size="7" /&gt;&lt;br /&gt;
		 		layerX:&lt;input type="text" name="layerXCoords" size="7" /&gt;  
		 		layerY:&lt;input type="text" name="layerYCoords" size="7" /&gt;
		 	&lt;/form&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.pageY"><linktext>MDC - Event: pageY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: pageY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/pageX"><linktext>pageX</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:relatedTarget:get"><apiName>relatedTarget</apiName><shortdesc>
		 Used to identify a secondary EventTarget related to a UI event, depending 
		 on the type of event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.events:EventTarget</apiValueClassifier></apiValueDef><apiDesc>
		 Used to identify a secondary EventTarget related to a UI event, depending 
		 on the type of event.
		 
		 <p><b>Note:</b> The relatedTarget property is used to find the other element, if any, involved 
		 in an event. Events like mouseover are oriented around a certain target, but also involve a secondary target, 
		 such as the target that is exited as the mouseover event fires for the primary target. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var rel = event.relatedTarget;
		 // dump("LEAVING " + (rel ? rel.localName : "null") + "\n");
		 // relatedTarget is null when the titletip is first shown:
		 // a mouseout event fires because the mouse is exiting 
		 // the main window and entering the titletip "window".
		 // relatedTarget is also null when the mouse exits the main 
		 // window completely, so count how many times relatedTarget 
		 // was null after titletip is first shown and hide popup
		 // the 2nd time
		 if (!rel) {
		 	if (++this._mouseOutCount &gt; 1)
		 	this.hidePopup();
		 	return;
		 }
		 // find out if the node we are entering is one of our 
		 // anonymous children
		 while (rel) {
		 	if (rel == this) {
		 		break;
		 	}
		 	rel = rel.parentNode;
		 }
		 // if the entered node is not a descendant of ours, hide 
		 // the tooltip
		 if (rel != this &amp;&amp; this._isMouseOver) {
		 	this.hidePopup();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.relatedTarget"><linktext>MDC - event.relatedTarget</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-relatedTarget"><linktext>W3C - MouseEvent.relatedTarget</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:screenX:get"><apiName>screenX</apiName><shortdesc>
		 
		 Returns the horizontal coordinate of the event within the screen as a whole.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the horizontal coordinate of the event within the screen as a whole. 
		 
		 <p><b>Note:</b> When you trap events on the window, document, or other roomy elements, you can get the 
		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"screenX value: " + evt.screenX + "\n"
		 				+ "screenY value: " + evt.screenY + "\n"
		 			);
		 		}
		 
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 <codeblock>
		 function checkClickMap(e) {
		 	if (e.screenX &lt; 50) doRedButton();
		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();
		 	if (e.screenX &gt;= 100) doRedButton();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534391(VS.85).aspx"><linktext>MSDN: screenX Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.screenX"><linktext>MDC - Event: screenX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: screenX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/clientX"><linktext>clientX</linktext></link><link href="dom.events.xml#MouseEvent/clientY"><linktext>clientY</linktext></link><link href="dom.events.xml#MouseEvent/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:screenY:get"><apiName>screenY</apiName><shortdesc>
		 
		 Returns the vertical coordinate of the event within the screen as a whole.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the vertical coordinate of the event within the screen as a whole.
		 
		 <p><b>Note:</b> When you trap events on the window, document, or other roomy elements, you can get the 
		 coordinates of that event (e.g., a click) and route it properly, as the "clickMap" example demonstrates.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;screenX\screenY example&lt;/title&gt;
		 
		 		&lt;script type="text/javascript"&gt;
		 			function showCoords(evt){
		 				alert(
		 				"screenX value: " + evt.screenX + "\n"
		 				+ "screenY value: " + evt.screenY + "\n"
		 			);
		 		}
		 
		 		&lt;/script&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body onmousedown="showCoords(event)"&gt;
		 		&lt;p&gt;To display the mouse coordinates click anywhere on the page.&lt;/p&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 <codeblock>
		 function checkClickMap(e) {
		 	if (e.screenX &lt; 50) doRedButton();
		 	if (50 &lt;= e.screenX) &lt; 100 doYellowButton();
		 	if (e.screenX &gt;= 100) doRedButton();
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534392(VS.85).aspx"><linktext>MSDN: screenY Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/event.screenY"><linktext>MDC - Event: screenY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: screenY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/clientX"><linktext>clientX</linktext></link><link href="dom.events.xml#MouseEvent/clientY"><linktext>clientY</linktext></link><link href="dom.events.xml#MouseEvent/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:shiftKey:get"><apiName>shiftKey</apiName><shortdesc>
		 Refer to the KeyboardEvent.shiftKey attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Refer to the KeyboardEvent.shiftKey attribute.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;shiftKey example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function showChar(e){
		 	alert(
		 		"Key Pressed: " + String.fromCharCode(e.charCode) + "\n"
		 		+ "charCode: " + e.charCode + "\n"
		 		+ "SHIFT key pressed: " + e.shiftKey + "\n"
		 		+ "ALT key pressed: " + e.altKey + "\n"
		 	);
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onkeypress="showChar(event);"&gt;
		 &lt;p&gt;Press any character key, with or without holding down
		 the SHIFT key.&lt;br /&gt;
		 You can also use the SHIFT key together with the ALT key.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.shiftKey"><linktext>MDC - event.shiftKey</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseEvent-shiftKey"><linktext>W3C - MouseEvent.shiftKey</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:x:get"><apiName>x</apiName><shortdesc>
		 
		 Returns the value of pageX.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_alternative"/><apiTool name="IE" version="6.0_alternative"/><apiTool name="IE" version="7.0_alternative"/><apiTool name="IE" version="8.0_as_IE7_alternative"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_alternative"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the value of pageX. 
		 
		 </apiDesc><example>
		 <codeblock>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535154(VS.85).aspx"><linktext>MSDN: x Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: x Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/y"><linktext>y</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseEvent:y:get"><apiName>y</apiName><shortdesc>
		 
		 Returns the value of pageY.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_alternative"/><apiTool name="IE" version="6.0_alternative"/><apiTool name="IE" version="7.0_alternative"/><apiTool name="IE" version="8.0_as_IE7_alternative"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_alternative"/><apiTool name="Safari" version="3.1_alternative"/><apiTool name="Safari" version="4.0b_alternative"/><apiTool name="Chrome" version="1.0_alternative"/><apiTool name="Chrome" version="2.0_alternative"/><apiTool name="Opera" version="9.62_alternative"/><apiTool name="Opera" version="10.0a_alternative"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 2
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the value of pageY. 
		 
		 </apiDesc><example>
		 <codeblock>&lt;body onmousemove="window.status = 'X=' + window.event.x + ' Y=' + window.event.y"&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535164(VS.85).aspx"><linktext>MSDN: y Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-mouseeventview-interface"><linktext>W3C - CSSOM View: y Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#mousepos"><linktext>Quirksmode: Mouse position</linktext></link><link href="dom.events.xml#MouseEvent/x"><linktext>x</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:DocumentEvent"><apiName>DocumentEvent</apiName><shortdesc>
	 The DocumentEvent interface provides a mechanism by which the user can 
	 create an Event object of a type supported by the implementation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentEvent interface provides a mechanism by which the user can 
	 create an Event object of a type supported by the implementation. If 
	 the feature "Events" is supported by the Document object, the 
	 DocumentEvent interface must be implemented on the same object. If the 
	 feature "+Events" is supported by the Document object, an object that 
	 supports the DocumentEvent interface must be returned by invoking the 
	 method Node.getFeature("+Events", "3.0") on the Document object.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent"><linktext>W3C - DOM 3 Events: DocumentEvent</linktext></link></related-links><apiOperation id="dom.events:DocumentEvent:dom.events:DocumentEvent:canDispatch"><apiName>canDispatch</apiName><shortdesc>
		 Tests if the implementation can generate events of a specified type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the implementation can generate and dispatch this event type
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.namespaceURI of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.type of the event.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Tests if the implementation can generate events of a specified type. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent-canDispatch"><linktext>W3C - DOM 3 Events: DocumentEvent.canDispatch()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:DocumentEvent:dom.events:DocumentEvent:createEvent"><apiName>createEvent</apiName><shortdesc>
		 Creates an event object of the type specified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the 
		 implementation does not support the Event interface requested.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created event object.
		 
		 </apiDesc><apiOperationClassifier>dom.events:Event</apiOperationClassifier></apiReturn><apiParam><apiItemName>eventType</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The eventType parameter specifies the name of the 
		 DOM Events interface to be supported by the created event object, 
		 e.g. "Event", "MouseEvent", "MutationEvent" and so on. If the Event 
		 is to be dispatched via the EventTarget.dispatchEvent() method the 
		 appropriate event initialization method must be called after creation 
		 in order to initialize the Event's values.
		 
		 As an example, a user wishing to synthesize some kind of UIEvent would 
		 invoke DocumentEvent.createEvent("UIEvent"). The UIEvent.initUIEventNS() 
		 ethod could then be called on the newly created UIEvent object to 
		 set the specific type of user interface event to be dispatched, DOMActivate 
		 for example, and set its context information, e.g. UIEvent.detail in 
		 this example.
		 
		 For backward compatibility reason, "UIEvents", "MouseEvents", "MutationEvents", 
		 and "HTMLEvents" feature names are valid values for the parameter eventType 
		 and represent respectively the interfaces "UIEvent", "MouseEvent", 
		 "MutationEvent", and "Event", and the characters 'a'..'z' are considered 
		 equivalent to the characters 'A'..'Z'.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates an event object of the type specified. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-DocumentEvent-createEvent"><linktext>W3C - DOM 3 Events: DocumentEvent.createEvent()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.events:DocumentEventGroup"><apiName>DocumentEventGroup</apiName><shortdesc>
	 The DocumentEventGroup interface provides a mechanism by which the user can create an EventGroup of a type supported by 
	 the implementation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentEventGroup interface provides a mechanism by which the user can create an EventGroup of a type supported by 
	 the implementation. It is expected that the DocumentEvent interface will be implemented on the same object which implements 
	 the Documentinterface in an implementation which supports the EventGroupextension.
	 
	 <p><b>Note:</b> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-DocumentEventGroup"><linktext>W3C - DOM 3 Events: DocumentEventGroup</linktext></link></related-links><apiOperation id="dom.events:DocumentEventGroup:dom.events:DocumentEventGroup:createEventGroup"><apiName>createEventGroup</apiName><shortdesc>
		 This method creates a new EventGroup for use in the addEventListener and removeEventListener methods of the EventTargetGroup interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created EventGroup.
		 
		 </apiDesc><apiOperationClassifier>dom.events:EventGroup</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 This method creates a new EventGroup for use in the addEventListener and removeEventListener methods of the EventTargetGroup interface. 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.htmlevents-Events-DocumentEventGroup-createEventGroup"><linktext>W3C - DOM 3 Events: DocumentEventGroup.createEventGroup()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.events:EventExceptionCode"><apiName>EventExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventException-EventExceptionCode"><linktext>W3C - DOM 3 Events: EventExceptionCode</linktext></link></related-links><apiValue id="dom.events:EventExceptionCode:DISPATCH_REQUEST_ERR"><apiName>DISPATCH_REQUEST_ERR</apiName><shortdesc>
		 If the Event object is already dispatched in the tree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the Event object is already dispatched in the tree.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#DISPATCH_REQUEST_ERR"><linktext>W3C - DOM 3 Events: EventExceptionCode.DISPATCH_REQUEST_ERR</linktext></link></related-links></apiValue><apiValue id="dom.events:EventExceptionCode:UNSPECIFIED_EVENT_TYPE_ERR"><apiName>UNSPECIFIED_EVENT_TYPE_ERR</apiName><shortdesc>
		 If the Event.type was not specified by initializing the event 
		 before the method was called.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the Event.type was not specified by initializing the event 
		 before the method was called. Specification of the Event.type 
		 as null or an empty string will also trigger this exception.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#UNSPECIFIED_EVENT_TYPE_ERR"><linktext>W3C - DOM 3 Events: EventExceptionCode.UNSPECIFIED_EVENT_TYPE_ERR</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MouseWheelEvent"><apiName>MouseWheelEvent</apiName><shortdesc>
	 The MouseWheelEvent interface provides specific contextual information 
	 associated with mouse wheel events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MouseWheelEvent interface provides specific contextual information 
	 associated with mouse wheel events.
	 
	 <p>To create an instance of the MouseWheelEvent interface, use the 
	 DocumentEvent.createEvent("MouseWheelEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseWheelEvent"><linktext>W3C - DOM 3 Events: MouseWheelEvent</linktext></link></related-links><apiOperation id="dom.events:MouseWheelEvent:initMouseWheelEventNS"><apiName>initMouseWheelEventNS</apiName><shortdesc>
		 Initializes attributes of a MouseWheelEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>detailArg</apiItemName><apiType value="Number"/><apiDesc>Specifies UIEvent.detail.
		 </apiDesc></apiParam><apiParam><apiItemName>screenXArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>screenYArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>clientXArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>clientYArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>buttonArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>relatedTargetArg</apiItemName><apiOperationClassifier>dom.events:EventTarget</apiOperationClassifier><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>modifiersListArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>wheelDeltaArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseWheelEvent.wheelDelta.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a MouseWheelEvent object. This method 
		 has the same behavior as MouseEvent.initMouseEventNS(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMouseWheelEventNS"><linktext>W3C - MouseWheelEvent.initMouseWheelEventNS</linktext></link></related-links></apiOperation><apiValue id="dom.events:MouseWheelEvent:mousewheel"><apiName>mousewheel</apiName><shortdesc>
		 Refer to Activation requests and behavior.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mousewheel</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Refer to Activation requests and behavior.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Document, Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseWheelEvent.wheelDelta, MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, 
		 MouseEvent.metaKey, and UIEvent.view are in use. MouseEvent.screenX, MouseEvent.screenY, MouseEvent.clientX, 
		 MouseEvent.clientY, and MouseEvent.button are in use if the wheel is associated to a pointing device. MouseEvent.relatedTarget 
		 indicates the event target the pointing device is pointing at, if any. UIEvent.detail is not in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousewheel"><linktext>W3C - MouseWheelEvent.mousewheel</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseWheelEvent:wheelDelta:get"><apiName>wheelDelta</apiName><shortdesc>
		 The distance the wheel has rotated around the y-axis.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The distance the wheel has rotated around the y-axis.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseWheelEvent-wheelDelta"><linktext>W3C - MouseWheelEvent.wheelDelta</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MessageEvent"><apiName>MessageEvent</apiName><shortdesc>
	 Messages in server-sent events, Web sockets, cross-document messaging, and channel messaging use the message event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Messages in server-sent events, Web sockets, cross-document messaging, and channel messaging use the message event.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#messageevent"><linktext>HTML 5: MessageEvent</linktext></link></related-links><apiOperation id="dom.events:MessageEvent:initMessageEvent"><apiName>initMessageEvent</apiName><shortdesc>
		 The initMessageEvent() must initialize the event in a manner analogous to the similarly-named methods in the DOM3 Events interfaces.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>dataArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The message being sent.
		 </apiDesc></apiParam><apiParam><apiItemName>originArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The origin of the document that sent the message (typically the scheme, hostname, and port of the document, but not its path or fragment identifier).
		 </apiDesc></apiParam><apiParam><apiItemName>lastEventIdArg</apiItemName><apiOperationClassifier>dom:WindowProxy</apiOperationClassifier><apiDesc>The last event ID string of the event source.
		 </apiDesc></apiParam><apiParam><apiItemName>sourceArg</apiItemName><apiOperationClassifier>dom.objects:MessagePortArray</apiOperationClassifier><apiDesc>The WindowProxy of the browsing context of the Window object from which the message came.
		 </apiDesc></apiParam><apiParam><apiItemName>portsArg</apiItemName><apiType value=""/><apiDesc>The MessagePortArray  being sent, if any.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The initMessageEvent() must initialize the event in a manner analogous to the similarly-named methods in the DOM3 Events interfaces.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/event.initMessageEvent"><linktext>MDC - event.initMessageEvent()</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-initmessageevent"><linktext>HTML 5: MessageEvent.initMessageEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:MessageEvent:initMessageEventNS"><apiName>initMessageEventNS</apiName><shortdesc>
		 The initMessageEventNS() must initialize the event in a manner analogous to the similarly-named methods in the DOM3 Events interfaces.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>dataArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The message being sent.
		 </apiDesc></apiParam><apiParam><apiItemName>originArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The origin of the document that sent the message (typically the scheme, hostname, and port of the document, but not its path or fragment identifier).
		 </apiDesc></apiParam><apiParam><apiItemName>lastEventIdArg</apiItemName><apiOperationClassifier>dom:WindowProxy</apiOperationClassifier><apiDesc>The last event ID string of the event source.
		 </apiDesc></apiParam><apiParam><apiItemName>sourceArg</apiItemName><apiOperationClassifier>dom.objects:MessagePortArray</apiOperationClassifier><apiDesc>The WindowProxy of the browsing context of the Window object from which the message came.
		 </apiDesc></apiParam><apiParam><apiItemName>portsArg</apiItemName><apiType value=""/><apiDesc>The MessagePortArray  being sent, if any.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The initMessageEventNS() must initialize the event in a manner analogous to the similarly-named methods in the DOM3 Events interfaces.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-initmessageeventns"><linktext>HTML 5: MessageEvent.initMessageEventNS()</linktext></link></related-links></apiOperation><apiValue id="dom.events:MessageEvent:data:get"><apiName>data</apiName><shortdesc>
		 A string holding the message passed from the other window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/></apiValueDef><apiDesc>
		 A string holding the message passed from the other window. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-data"><linktext>HTML 5: MessageEvent.data</linktext></link></related-links></apiValue><apiValue id="dom.events:MessageEvent:lastEventId:get"><apiName>lastEventId</apiName><shortdesc>
		 Returns the last event ID, for server-sent events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the last event ID, for server-sent events.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-lasteventid"><linktext>HTML 5: MessageEvent.lastEventId</linktext></link></related-links></apiValue><apiValue id="dom.events:MessageEvent:origin:get"><apiName>origin</apiName><shortdesc>
		 Returns the origin of the message, for server-sent events and cross-document messaging.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the origin of the message, for server-sent events and cross-document messaging.
		 
		 <p>The origin of the window that sent the message at the time postMessage was called. This string is 
		 the concatenation of the protocol and "://", the host name if one exists, and ":" followed by a port 
		 number if a port is present and differs from the default port for the given protocol. Examples of 
		 typical origins are http://example.org (implying port 443), http://example.net (implying port 80), 
		 and http://example.com:8080. Note that this origin is not guaranteed to be the current or future origin 
		 of that window, which might have been navigated to a different location since postMessage was called. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-origin"><linktext>HTML 5: MessageEvent.origin</linktext></link></related-links></apiValue><apiValue id="dom.events:MessageEvent:ports:get"><apiName>ports</apiName><shortdesc>
		 Returns the MessagePortArray sent with the message, for cross-document messaging and channel messaging.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:MessagePortArray</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the MessagePortArray sent with the message, for cross-document messaging and channel messaging.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-ports"><linktext>HTML 5: MessageEvent.ports</linktext></link></related-links></apiValue><apiValue id="dom.events:MessageEvent:source:get"><apiName>source</apiName><shortdesc>
		 Returns the WindowProxy of the source window, for cross-document messaging.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the WindowProxy of the source window, for cross-document messaging.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#dom-messageevent-source"><linktext>HTML 5: MessageEvent.source</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MouseMultiWheelEvent"><apiName>MouseMultiWheelEvent</apiName><shortdesc>
	 The MouseMultiWheelEvent interface provides specific contextual 
	 information associated with mouse multi wheel events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MouseMultiWheelEvent interface provides specific contextual 
	 information associated with mouse multi wheel events.
	 
	 <p>To create an instance of the MouseMultiWheelEvent interface, use the 
	 DocumentEvent.createEvent("MouseMultiWheelEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent"><linktext>W3C - DOM 3 Events: MouseMultiWheelEvent</linktext></link></related-links><apiOperation id="dom.events:MouseMultiWheelEvent:initMouseMultiWheelEventNS"><apiName>initMouseMultiWheelEventNS</apiName><shortdesc>
		 Initializes attributes of a MouseMultiWheelEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>viewArg</apiItemName><apiOperationClassifier>dom.views:AbstractView</apiOperationClassifier><apiDesc>Specifies UIEvent.view. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>detailArg</apiItemName><apiType value="Number"/><apiDesc>Specifies UIEvent.detail.
		 </apiDesc></apiParam><apiParam><apiItemName>screenXArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>screenYArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>clientXArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>clientYArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>buttonArg</apiItemName><apiType value="Number"/><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>relatedTargetArg</apiItemName><apiOperationClassifier>dom.events:EventTarget</apiOperationClassifier><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>modifiersListArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Refer to the MouseEvent.initMouseEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>wheelDeltaXArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseMultiWheelEvent.wheelDeltaX.
		 </apiDesc></apiParam><apiParam><apiItemName>wheelDeltaYArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseMultiWheelEvent.wheelDeltaY.
		 </apiDesc></apiParam><apiParam><apiItemName>wheelDeltaZArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MouseMultiWheelEvent.wheelDeltaZ.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a MouseMultiWheelEvent object. This method 
		 has the same behavior as MouseEvent.initMouseEventNS().
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMouseMultiWheelEventNS"><linktext>W3C - MouseWheelEvent.initMouseMultiWheelEventNS()</linktext></link></related-links></apiOperation><apiValue id="dom.events:MouseMultiWheelEvent:mousemultiwheel"><apiName>mousemultiwheel</apiName><shortdesc>
		 A mouse wheel has been rotated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>mousemultiwheel</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A mouse wheel has been rotated. A default action of user agent generated event objects of this type causes 
		 implementations to dispatch a mousewheel event iff it supports that event type and MouseMultiWheelEvent.wheelDeltaY is non-zero.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>Namespace</entry><entry><codeph>None</codeph></entry>
		 	</row><row>
		 		<entry>Cancelable</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Bubbles</entry><entry>Yes</entry>
		 	</row><row>
		 		<entry>Target</entry><entry><codeph>Document, Element</codeph></entry>
		 	</row><row>
		 		<entry>Context info</entry><entry>MouseMultiWheelEvent.wheelDeltaX, MouseMultiWheelEvent.wheelDeltaY, MouseMultiWheelEvent.wheelDeltaZ, 
		 MouseEvent.altKey, MouseEvent.ctrlKey, MouseEvent.shiftKey, MouseEvent.metaKey, and UIEvent.view are in use. MouseEvent.screenX, 
		 MouseEvent.screenY, MouseEvent.clientX, MouseEvent.clientY, and MouseEvent.button are in use if the wheel is associated to a 
		 pointing device. MouseEvent.relatedTarget indicates the event target the pointing device is pointing at, if any. UIEvent.detail 
		 is not in use.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-mousewheel"><linktext>W3C - MouseWheelEvent.mousewheel</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseMultiWheelEvent:wheelDeltaX:get"><apiName>wheelDeltaX</apiName><shortdesc>
		 The distance the wheel has rotated around the x-axis.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The distance the wheel has rotated around the x-axis.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent-wheelDeltaX"><linktext>W3C - MouseWheelEvent.wheelDeltaX</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseMultiWheelEvent:wheelDeltaY:get"><apiName>wheelDeltaY</apiName><shortdesc>
		 The distance the wheel has rotated around the y-axis.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The distance the wheel has rotated around the y-axis.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent-wheelDeltaY"><linktext>W3C - MouseWheelEvent.wheelDeltaY</linktext></link></related-links></apiValue><apiValue id="dom.events:MouseMultiWheelEvent:wheelDeltaZ:get"><apiName>wheelDeltaZ</apiName><shortdesc>
		 The distance the wheel has rotated around the z-axis.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The distance the wheel has rotated around the z-axis.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MouseMultiWheelEvent-wheelDeltaZ"><linktext>W3C - MouseWheelEvent.wheelDeltaZ</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MutationEvent"><apiName>MutationEvent</apiName><shortdesc>
	 The MutationEvent interface provides specific contextual information 
	 associated with Mutation events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MutationEvent interface provides specific contextual information 
	 associated with Mutation events.
	 
	 <p>To create an instance of the MutationEvent interface, use the 
	 DocumentEvent.createEvent("MutationEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent"><linktext>W3C - MutationEvent</linktext></link></related-links><apiOperation id="dom.events:MutationEvent:initMutationEvent"><apiName>initMutationEvent</apiName><shortdesc>
		 Initializes attributes of a MutationEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>relatedNodeArg</apiItemName><apiType value="flash.xml:XMLNode"/><apiDesc>Specifies MutationEvent.relatedNode.
		 </apiDesc></apiParam><apiParam><apiItemName>prevValueArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationEvent.prevValue. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>newValueArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationEvent.newValue. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>attrNameArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationEvent.attrName. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>attrChangeArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MutationEvent.attrChange. This value may be null.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a MutationEvent object. This method has the 
		 same behavior as Event.initEvent(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMutationEvent"><linktext>W3C - MutationEvent.initMutationEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:MutationEvent:initMutationEventNS"><apiName>initMutationEventNS</apiName><shortdesc>
		 Initializes attributes of a MutationEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>relatedNodeArg</apiItemName><apiType value="flash.xml:XMLNode"/><apiDesc>Specifies MutationEvent.relatedNode.
		 </apiDesc></apiParam><apiParam><apiItemName>prevValueArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationEvent.prevValue. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>newValueArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationEvent.newValue. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>attrNameArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationEvent.attrName. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>attrChangeArg</apiItemName><apiType value="Number"/><apiDesc>Specifies MutationEvent.attrChange. This value may be null.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a MutationEvent object. This method has 
		 the same behavior as Event.initEventNS().
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMutationEventNS"><linktext>W3C - MutationEvent.initMutationEventNS()</linktext></link></related-links></apiOperation><apiValue id="dom.events:MutationEvent:ADDITION"><apiName>ADDITION</apiName><shortdesc>
		 The Attr was just added.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The Attr was just added.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#ADDITION"><linktext>W3C - MutationEvent.ADDITION</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMAttrModified"><apiName>DOMAttrModified</apiName><shortdesc>
		 Occurs after Attr.value has been modified and after an Attr node has been added to or removed from an Element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMAttrModified</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Occurs after Attr.value has been modified and after an Attr node has been added to or removed from an Element. 
		 The target node of this event is the Element node where the change occured. It is implementation dependent whether 
		 this event type occurs when the children of the Attr node are changed in ways that do not affect the value of Attr.value.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationEvent.attrName and MutationEvent.attrChange are in use. The value of MutationEvent.relatedNode indicates the Attr 
		 node that has been modified, added, or removed. If the Attr node has been added, MutationEvent.newValue is in use. If the Attr 
		 node has been removed, MutationEvent.prevValue is in use. If the Attr node has been modified, MutationEvent.newValue and 
		 MutationEvent.prevValue are in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMAttrModified"><linktext>W3C - MutationEvent.DOMAttrModified</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMCharacterDataModified"><apiName>DOMCharacterDataModified</apiName><shortdesc>
		 Occurs after CharacterData.data or ProcessingInstruction.data have been modified but the node itself has not been 
		 inserted or deleted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMCharacterDataModified</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Occurs after CharacterData.data or ProcessingInstruction.data have been modified but the node itself has not been 
		 inserted or deleted. The target node of this event is the CharacterData node or the ProcessingInstruction node.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Text, Comment, CDATASection, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationEvent.prevValue, and MutationEvent.newValue are in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMCharacterDataModified"><linktext>W3C - MutationEvent.DOMCharacterDataModified</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMNodeInserted"><apiName>DOMNodeInserted</apiName><shortdesc>
		 A node has been added as a child of another node or, in case of Attr nodes, has been added to an Element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMNodeInserted</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A node has been added as a child of another node or, in case of Attr nodes, has been added to an Element. 
		 This event is dispatched after the insertion has taken place. The target node of this event is the node being inserted.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationEvent.relatedNode holds the parent node of the node that has been inserted or, in case of Attr nodes, the ownerElement of the Attr node.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeInserted"><linktext>W3C - MutationEvent.DOMNodeInserted</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMNodeInsertedIntoDocument"><apiName>DOMNodeInsertedIntoDocument</apiName><shortdesc>
		 A node has been inserted into a document, either through direct insertion of the node or insertion of a subtree in which 
		 it is contained; Attr nodes are considered part of an Element's subtree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMNodeInsertedIntoDocument</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A node has been inserted into a document, either through direct insertion of the node or insertion of a subtree in which 
		 it is contained; Attr nodes are considered part of an Element's subtree. This event is dispatched after the insertion has 
		 taken place. The target node of this event is the node being inserted. If the node is being directly inserted, the event 
		 type DOMNodeInserted occurs before this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>None</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeInsertedIntoDocument"><linktext>W3C - MutationEvent.DOMNodeInsertedIntoDocument</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMNodeRemoved"><apiName>DOMNodeRemoved</apiName><shortdesc>
		 A node is being removed from its parent node or, in case of Attr nodes, removed from its ownerElement.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMNodeRemoved</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A node is being removed from its parent node or, in case of Attr nodes, removed from its ownerElement. 
		 This event is dispatched before the removal takes place. The target node of this event is the node being removed.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationEvent.relatedNode holds the parent node of the node being removed or, in case of Attr nodes, the ownerElement of the Attr node.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeRemoved"><linktext>W3C - MutationEvent.DOMNodeRemoved</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMNodeRemovedFromDocument"><apiName>DOMNodeRemovedFromDocument</apiName><shortdesc>
		 A node is being removed from a document, either through direct removal of the node or removal of a subtree in which 
		 it is contained; Attr nodes are considered part of an Element's subtree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMNodeRemovedFromDocument</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 A node is being removed from a document, either through direct removal of the node or removal of a subtree in which 
		 it is contained; Attr nodes are considered part of an Element's subtree. This event is dispatched before the removal 
		 takes place. The target node of this event type is the node being removed. If the node is being directly removed, 
		 the event type DOMNodeRemoved occurs before this event type.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element, Attr, Text, Comment, CDATASection, DocumentType, EntityReference, ProcessingInstruction</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>None</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMNodeRemovedFromDocument"><linktext>W3C - MutationEvent.DOMNodeRemovedFromDocument</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:DOMSubtreeModified"><apiName>DOMSubtreeModified</apiName><shortdesc>
		 This is a general event for notification of all changes to the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMSubtreeModified</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 This is a general event for notification of all changes to the document. 
		 
		 <p>It can be used instead 
		 of the more specific mutation and mutation name events listed below. It may be dispatched after 
		 a single modification to the document or, at the implementation's discretion, after multiple 
		 changes have occurred. The latter use should generally be used to accommodate multiple changes 
		 which occur either simultaneously or in rapid succession. The target of this event is the lowest 
		 common parent of the changes which have taken place. This event is dispatched after any other 
		 events caused by the mutation(s) have occurred.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Document, DocumentFragment, Element, Attr</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>None</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMSubtreeModified"><linktext>W3C - MutationEvent.DOMSubtreeModified</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:MODIFICATION"><apiName>MODIFICATION</apiName><shortdesc>
		 The Attr was modified in place.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The Attr was modified in place.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#MODIFICATION"><linktext>W3C - MutationEvent.MODIFICATION</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:REMOVAL"><apiName>REMOVAL</apiName><shortdesc>
		 The Attr was just removed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The Attr was just removed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#REMOVAL"><linktext>W3C - MutationEvent.REMOVAL</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:attrChange:get"><apiName>attrChange</apiName><shortdesc>
		 Indicates the type of change which triggered the DOMAttrModified event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Indicates the type of change which triggered the DOMAttrModified event. 
		 The values can be MODIFICATION, ADDITION, or REMOVAL.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-attrChange"><linktext>W3C - MutationEvent.attrChange</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:attrName:get"><apiName>attrName</apiName><shortdesc>
		 Indicates the name of the changed Attr node in a DOMAttrModified event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Indicates the name of the changed Attr node in a DOMAttrModified event.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-attrName"><linktext>W3C - MutationEvent.attrName</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:newValue:get"><apiName>newValue</apiName><shortdesc>
		 Indicates the new value of the Attr node in DOMAttrModified events, and 
		 of the CharacterData node in DOMCharacterDataModified events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Indicates the new value of the Attr node in DOMAttrModified events, and 
		 of the CharacterData node in DOMCharacterDataModified events.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-newValue"><linktext>W3C - MutationEvent.newValue</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:prevValue:get"><apiName>prevValue</apiName><shortdesc>
		 Indicates the previous value of the Attr node in DOMAttrModified events, 
		 and of the CharacterData node in DOMCharacterDataModified events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Indicates the previous value of the Attr node in DOMAttrModified events, 
		 and of the CharacterData node in DOMCharacterDataModified events.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-prevValue"><linktext>W3C - MutationEvent.prevValue</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationEvent:relatedNode:get"><apiName>relatedNode</apiName><shortdesc>
		 is used to identify a secondary node related to a mutation event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 is used to identify a secondary node related to a mutation event. For 
		 example, if a mutation event is dispatched to a node indicating that 
		 its parent has changed, the relatedNode is the changed parent. If an 
		 event is instead dispatched to a subtree indicating a node was changed 
		 within it, the relatedNode is the changed node. In the case of the 
		 DOMAttrModified event it indicates the Attr node which was modified, 
		 added, or removed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationEvent-relatedNode"><linktext>W3C - MutationEvent.relatedNode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:MutationNameEvent"><apiName>MutationNameEvent</apiName><shortdesc>
	 The MutationNameEvent interface provides specific contextual information 
	 associated with Mutation name event types.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:MutationEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MutationNameEvent interface provides specific contextual information 
	 associated with Mutation name event types.
	 
	 To create an instance of the MutationNameEvent interface, use the 
	 Document.createEvent("MutationNameEvent") method call.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationNameEvent"><linktext>W3C - DOM 3 Events: MutationNameEvent</linktext></link></related-links><apiOperation id="dom.events:MutationNameEvent:initMutationNameEvent"><apiName>initMutationNameEvent</apiName><shortdesc>
		 Initializes attributes of a MutationNameEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>relatedNodeArg</apiItemName><apiType value="flash.xml:XMLNode"/><apiDesc>Specifies MutationEvent.relatedNode.
		 </apiDesc></apiParam><apiParam><apiItemName>prevNamespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationNameEvent.prevNamespaceURI. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>prevNodeNameArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationNameEvent.prevNodeName.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a MutationNameEvent object. This method has 
		 the same behavior as MutationEvent.initMutationEvent(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMutationNameEvent"><linktext>W3C - MutationNameEvent.initMutationNameEvent()</linktext></link><link href="dom.events.xml#UIEvent/initUIEvent()"><linktext>dom.events.UIEvent.initUIEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:MutationNameEvent:initMutationNameEventNS"><apiName>initMutationNameEventNS</apiName><shortdesc>
		 Initializes attributes of a MutationNameEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>relatedNodeArg</apiItemName><apiType value="flash.xml:XMLNode"/><apiDesc>Specifies MutationEvent.relatedNode.
		 </apiDesc></apiParam><apiParam><apiItemName>prevNamespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationNameEvent.prevNamespaceURI. This value may be null.
		 </apiDesc></apiParam><apiParam><apiItemName>prevNodeNameArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies MutationNameEvent.prevNodeName.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a MutationNameEvent object. This method has 
		 the same behavior as MutationEvent.initMutationEventNS(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initMutationNameEventNS"><linktext>W3C - MutationNameEvent.initMutationNameEventNS()</linktext></link><link href="dom.events.xml#UIEvent/initUIEventNS()"><linktext>dom.events.UIEvent.initUIEventNS()</linktext></link></related-links></apiOperation><apiValue id="dom.events:MutationNameEvent:DOMAttributeNameChanged"><apiName>DOMAttributeNameChanged</apiName><shortdesc>
		 Occurs after the namespaceURI and/or the nodeName of a Attr node have been modified (e.g., the attribute was 
		 renamed using Document.renameNode()).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMAttributeNameChanged</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Occurs after the namespaceURI and/or the nodeName of a Attr node have been modified (e.g., the attribute was 
		 renamed using Document.renameNode()). The target node of this event is the Element node whose Attr has been renamed.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationNameEvent.prevNamespaceURI, and MutationNameEvent.prevNodeName are in use. The value of MutationEvent.relatedNode contains the renamed Attr node.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMAttributeNameChanged"><linktext>W3C - MutationNameEvent.DOMAttributeNameChanged</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationNameEvent:DOMElementNameChanged"><apiName>DOMElementNameChanged</apiName><shortdesc>
		 Occurs after the namespaceURI and/or the nodeName of an Element node have been modified (e.g., the element was 
		 renamed using Document.renameNode()).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>DOMElementNameChanged</apiData><apiType value="String"/></apiValueDef><apiDesc>
		 Occurs after the namespaceURI and/or the nodeName of an Element node have been modified (e.g., the element was 
		 renamed using Document.renameNode()). The target node of this event is the renamed Element node.
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 <entry>Cancelable</entry>
		 <entry>No</entry>
		 </row><row>
		 <entry>Bubbles</entry>
		 <entry>Yes</entry>
		 </row><row>
		 <entry>Target</entry>
		 <entry><codeph>Element</codeph></entry>
		 </row><row>
		 <entry>Context info</entry>
		 <entry>MutationNameEvent.prevNamespaceURI, and MutationNameEvent.prevNodeName are in use.</entry>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-DOMElementNameChanged"><linktext>W3C - MutationNameEvent.DOMElementNameChanged</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationNameEvent:prevNamespaceURI:get"><apiName>prevNamespaceURI</apiName><shortdesc>
		 The previous value of the relatedNode's namespaceURI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The previous value of the relatedNode's namespaceURI.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationNameEvent-prevNamespaceURI"><linktext>W3C - MutationNameEvent.prevNamespaceURI</linktext></link></related-links></apiValue><apiValue id="dom.events:MutationNameEvent:prevNodeName:get"><apiName>prevNodeName</apiName><shortdesc>
		 The previous value of the relatedNode's nodeName.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The previous value of the relatedNode's nodeName.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-MutationNameEvent-prevNodeName"><linktext>W3C - MutationNameEvent.prevNodeName</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:EventTargetGroup"><apiName>EventTargetGroup</apiName><shortdesc>
	 The EventTargetGroup interface is implemented by the same set of objects that implement the EventTarget 
	 interface, namely all EventTargets in in implementation which supports the Event model and the EventGroup extension.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The EventTargetGroup interface is implemented by the same set of objects that implement the EventTarget 
	 interface, namely all EventTargets in in implementation which supports the Event model and the EventGroup extension.
	 
	 <p><b>Note:</b> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-EventTargetGroup"><linktext>W3C - DOM 3 Events: EventTargetGroup</linktext></link></related-links><apiOperation id="dom.events:EventTargetGroup:dom.events:EventTargetGroup:addEventListener"><apiName>addEventListener</apiName><shortdesc>
		 This method is equivalent to the addEventListener method of the EventTarget interface, with the exception of 
		 the added eventGroup parameter.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>eventGroup</apiItemName><apiOperationClassifier>dom.events:EventGroup</apiOperationClassifier><apiDesc>The EventGroup to associate with the listener.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method is equivalent to the addEventListener method of the EventTarget interface, with the exception of 
		 the added eventGroup parameter. The listener is registered with this EventGroup associated. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-EventTargetGroup-addEventListener"><linktext>W3C - DOM 3 Events: EventTargetGroup.addEventListener()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:EventTargetGroup:dom.events:EventTargetGroup:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
		 This method is equivalent to the removeEventListener method of the EventTarget interface, with the exception 
		 of the added eventGroup parameter.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>eventGroup</apiItemName><apiOperationClassifier>dom.events:EventGroup</apiOperationClassifier><apiDesc>The EventGroup to associate with the listener.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method is equivalent to the removeEventListener method of the EventTarget interface, with the exception 
		 of the added eventGroup parameter. The listener registered with this EventGroup associated is removed. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-EventTargetGroup-removeEventListener"><linktext>W3C - DOM 3 Events: EventTargetGroup.removeEventListener()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.events:CustomEvent"><apiName>CustomEvent</apiName><shortdesc>
	 The CustomEvent interface is the recommended interface for 
	 application-specific event types.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CustomEvent interface is the recommended interface for 
	 application-specific event types. Unlike the Event interface, it allows 
	 applications to provide contextual information about the event type. 
	 Application-specific event types should have an associated namespace to 
	 avoid clashes with future general-purpose event types.
	 
	 <p>To create an instance of the CustomEvent interface, use the 
	 DocumentEvent.createEvent("CustomEvent") method call.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-CustomEvent"><linktext>W3C - DOM 3 Events: CustomEvent</linktext></link></related-links><apiOperation id="dom.events:CustomEvent:initCustomEventNS"><apiName>initCustomEventNS</apiName><shortdesc>
		 Initializes attributes of a CustomEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURIArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies Event.type, the local name of the event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>detailArg</apiItemName><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier><apiDesc>Specifies CustomEvent.detail. This value may be null.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a CustomEvent object. This method has 
		 the same behavior as Event.initEventNS(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initCustomEventNS"><linktext>W3C - DOM 3 Events: CustomEvent.initCustomEventNS()</linktext></link></related-links></apiOperation><apiValue id="dom.events:CustomEvent:detail:get"><apiName>detail</apiName><shortdesc>
		 Specifies some detail information about the Event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMObject</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies some detail information about the Event.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-CustomEvent-detail"><linktext>W3C - DOM 3 Events: CustomEvent.detail</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:EventListener"><apiName>EventListener</apiName><shortdesc>
	 The EventListener interface is the primary way for handling events.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The EventListener interface is the primary way for handling events. Users 
	 implement the EventListener interface and register their event listener on 
	 an EventTarget. The users should also remove their EventListener from its 
	 EventTarget after they have completed using the listener.
	 
	 <p>Copying a Node, with methods such as Node.cloneNode or Range.cloneContents, 
	 does not copy the event listeners attached to it. Event listeners must be 
	 attached to the newly created Node afterwards if so desired.</p>
	 
	 <p>Moving a Node, with methods Document.adoptNode, Node.appendChild, or 
	 Range.extractContents, does not affect the event listeners attached to it.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventListener"><linktext>W3C - DOM 3 Events: EventListener</linktext></link><link href="dom.events.xml#EventTarget"><linktext>dom.events.EventTarget</linktext></link></related-links><apiOperation id="dom.events:EventListener:dom.events:EventListener:handleEvent"><apiName>handleEvent</apiName><shortdesc>
		 This method is called whenever an event occurs of the event type for 
		 which the EventListener interface was registered.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>evt</apiItemName><apiOperationClassifier>dom.events:Event</apiOperationClassifier><apiDesc>The Event contains contextual information about the event.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method is called whenever an event occurs of the event type for 
		 which the EventListener interface was registered. 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventListener"><linktext>W3C - DOM 3 Events: EventListener.handleEvent()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.events:EventTarget"><apiName>EventTarget</apiName><shortdesc>
	 The EventTarget interface is implemented by all the objects which could be 
	 event targets in an implementation which supports an event flow.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The EventTarget interface is implemented by all the objects which could be 
	 event targets in an implementation which supports an event flow. The 
	 interface allows registration and removal of event listeners, and dispatch 
	 of events to an event target.
	 
	 <p>When used with the DOM event flow, this interface is implemented by all 
	 target nodes and target ancestors, i.e. all DOM Nodes of the tree support 
	 this interface when the implementation conforms to DOM Level 3 Events and, 
	 therefore, this interface can be obtained by using binding-specific casting 
	 methods on an instance of the Node interface.</p>
	 
	 <p>Invoking addEventListener or addEventListenerNS repeatedly on the same 
	 EventTarget with the same values for the parameters namespaceURI, type, 
	 listener, and useCapture has no effect. Doing so does not cause the 
	 EventListener to be called more than once and does not cause a change in the 
	 triggering order.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget"><linktext>W3C - DOM 3 Events: EventTarget</linktext></link></related-links><apiOperation id="dom.events:EventTarget:dom.events:EventTarget:addEventListener"><apiName>addEventListener</apiName><shortdesc>
		 Associates a function with a particular event and binds the event to the current node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The function or method to associate with the event.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 
		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Associates a function with a particular event and binds the event to the current node.
		 
		 </apiDesc><example>
		 <codeblock>
		 function statusreport() {
		 		alert("document has loaded");
		 }
		 
		 if (window.addEventListener) {
		 		window.addEventListener("load", statusreport, false); //invoke function
		 }
		 window.onload = statusreport(); //function invoked again, since no event handler conflicts</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-addEventListener"><linktext>W3C - DOM 3 Events: EventTarget.addEventListener()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:EventTarget:dom.events:EventTarget:addEventListenerNS"><apiName>addEventListenerNS</apiName><shortdesc>
		 Registers an event listener, depending on the useCapture parameter, on the 
		 capture phase of the DOM event flow or its target and bubbling phases.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.namespaceURI associated with the event for which the user is registering.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The function or method to associate with the event.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 
		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Registers an event listener, depending on the useCapture parameter, on the 
		 capture phase of the DOM event flow or its target and bubbling phases.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-addEventListener"><linktext>W3C - DOM 3 Events: EventTarget.addEventListener()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:EventTarget:dom.events:EventTarget:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
		 Dispatches an event to fire on a node artificially.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata><asCustoms><modified>DOMEvents 3
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>UNSPECIFIED_EVENT_TYPE_ERR: 
		 Raised if the Event.type was not specified by initializing the event 
		 before dispatchEvent was called. Specification of the Event.type as 
		 null or an empty string will also trigger this exception.
		 
		 </apiDesc><apiItemName>EventException</apiItemName><apiOperationClassifier>dom.events:EventException</apiOperationClassifier></apiException><apiException><apiDesc>DISPATCH_REQUEST_ERR: Raised 
		 if the Event object is already being dispatched.
		 
		 </apiDesc><apiItemName>EventException</apiItemName><apiOperationClassifier>dom.events:EventException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the Event 
		 object has not been created using DocumentEvent.createEvent().
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_CHARACTER_ERR: Raised if 
		 Event.type is not an NCName as defined in [XML Namespaces 1.1].
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>Indicates whether any of the listeners which handled the 
		 event called Event.preventDefault(). If Event.preventDefault() was 
		 called the returned value is false, else it is true.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>dom.events:Event</apiOperationClassifier><apiDesc>The event to be dispatched.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Dispatches an event to fire on a node artificially.
		 
		 <p><b>Note (IE):</b> IE's equivalent of dispatchEvent() is fireEvent().</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="test" onclick="alert('hi')"&gt;Sample DIV.&lt;/div&gt;
		 &lt;script type="text/javascript"&gt;
		 //Generate an artificial click event on "test". Fires alert("hi")
		 var clickevent = document.createEvent("MouseEvents");
		 clickevent.initEvent("click", true, true);
		 document.getElementById("test").dispatchEvent(myevent);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-dispatchEvent"><linktext>W3C - DOM 3 Events: EventTarget.dispatchEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:EventTarget:dom.events:EventTarget:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
		 Removes an event listener.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.type for which the user registered 
		 the event listener.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The EventListener to be removed.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Specifies whether the EventListener being removed 
		 was registered for the capture phase or not. If a listener was 
		 registered twice, once for the capture phase and once for the target 
		 and bubbling phases, each must be removed separately. Removal of an 
		 event listener registered for the capture phase does not affect the 
		 same event listener registered for the target and bubbling phases, 
		 and vice versa.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes an event listener.
		 
		 <p>Calling removeEventListener with arguments 
		 which do not identify any currently registered EventListener on the 
		 EventTarget has no effect. The Event.namespaceURI for which the user 
		 registered the event listener is implied and is null.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTarget-removeEventListener"><linktext>W3C - DOM 3 Events: EventTarget.removeEventListener()</linktext></link></related-links></apiOperation><apiOperation id="dom.events:EventTarget:dom.events:EventTarget:removeEventListenerNS"><apiName>removeEventListenerNS</apiName><shortdesc>
		 Removes an event listener.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.namespaceURI associated with the event for which the user registered the event listener.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.type for which the user registered 
		 the event listener.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The EventListener to be removed.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Specifies whether the EventListener being removed 
		 was registered for the capture phase or not. If a listener was 
		 registered twice, once for the capture phase and once for the target 
		 and bubbling phases, each must be removed separately. Removal of an 
		 event listener registered for the capture phase does not affect the 
		 same event listener registered for the target and bubbling phases, 
		 and vice versa.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes an event listener. Calling removeEventListenerNS with arguments 
		 which do not identify any currently registered EventListener on the 
		 EventTarget has no effect. 
		  
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventTargetGroup-removeEventListenerNS"><linktext>W3C - DOM 3 Events: EventTarget.removeEventListenerNS()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.events:EventException"><apiName>EventException</apiName><shortdesc>
	 Event operations may throw an EventException as specified in their method descriptions.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Event operations may throw an EventException as specified in their method descriptions.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventException"><linktext>W3C - DOM 3 Events: EventException</linktext></link></related-links><apiValue id="dom.events:EventException:dom.events:EventException:code:get"><apiName>code</apiName><shortdesc>
		 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="2"/><apiSince version="DOMEvents 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 An integer indicating the type of error generated.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-EventException"><linktext>W3C - DOM 3 Events: EventException.code</linktext></link><link href="dom.events.xml#EventExceptionCode"><linktext>dom.events.EventExceptionCode</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.events:EventGroup"><apiName>EventGroup</apiName><shortdesc>
	 The EventGroup interface functions primarily as a placeholder for separating the event flows when there 
	 are multiple groups of listeners for a DOM tree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The EventGroup interface functions primarily as a placeholder for separating the event flows when there 
	 are multiple groups of listeners for a DOM tree.
	 
	 <p>EventListeners can be registered without an EventGroup using the existing EventTarget interface, or with 
	 an associated EventGroup using the new EventTargetGroup interface. When an event is dispatched, it is 
	 dispatched independently to each EventGroup. In particular, the stopPropagation method of the Event interface 
	 only stops propagation within an EventListener's associated EventGroup.</p>
	 
	 <p><b>Note:</b> This is from DOM 3 Events Working Draft 10 (April 2001) and has since been deprecated in Working Draft 21 (December 2007)</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-Events-EventGroup"><linktext>W3C - DOM 3 Events: EventGroup</linktext></link></related-links><apiOperation id="dom.events:EventGroup:dom.events:EventGroup:isSameEventGroup"><apiName>isSameEventGroup</apiName><shortdesc>
		 This method checks if the supplied EventGroup is the same as the EventGroup upon which the method is called.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMEvents" version="3"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns true if the EventGroups are equal, else returns false.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>eventGroup</apiItemName><apiOperationClassifier>dom.events:EventGroup</apiOperationClassifier><apiDesc>The EventGroup with which to check equality.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method checks if the supplied EventGroup is the same as the EventGroup upon which the method is called. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2001/WD-DOM-Level-3-Events-20010410/DOM3-Events.html#events-EventGroup-isSameEventGroup"><linktext>W3C - DOM 3 Events: EventGroup.isSameEventGroup()</linktext></link></related-links></apiOperation></apiClassifier></apiPackage><apiPackage id="dom.html.objects"><apiName>dom.html.objects</apiName><apiDetail/><apiClassifier id="dom.html.objects:HTMLCollection"><apiName>HTMLCollection</apiName><shortdesc>
	 An HTMLCollection is a list of nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An HTMLCollection is a list of nodes. 
	 
	 <p>An individual node may be accessed by either ordinal index or the node's name or id attributes.</p>
	 
	 <p><b>Note:</b> Collections in the HTML DOM are assumed to be live meaning that they 
	 are automatically updated when the underlying document is changed.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/DOM/HTMLCollection"><linktext>MDC: HTMLCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-75708506"><linktext>W3C DOM HTML Specification</linktext></link><link href="http://msdn.microsoft.com/en-us/library/dd347073%28VS.85%29.aspx"><linktext>MSDN: HTMLCollection</linktext></link></related-links><apiOperation id="dom.html.objects:HTMLCollection:item"><apiName>item</apiName><shortdesc>
		 This method retrieves a node specified by ordinal index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The Node at the corresponding position upon success. A value 
		 of null is returned if the index is out of range.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the node to be fetched. The index 
		 origin is 0
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method retrieves a node specified by ordinal index. Nodes are
		 numbered in tree order (depth-first traversal order). 
		 
		 <p><b>Note (IE):</b> IE7 and earlier. item() has a second and optional param called 'iSubindex'. This param specifies the
		 zero-based index of the object to retrieve when a collection is returned.</p>
		 
		 <p><b>Note (IE):</b>  Internet Explorer 8 and later. In IE8 mode, the iSubindex parameter is not used.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/HTMLCollection"><linktext>MDC: HTMLCollection</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms536460%28VS.85%29.aspx"><linktext>MSDN: item Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-33262535"><linktext>W3C - DOM HTML: HTMLCollection.item()</linktext></link></related-links></apiOperation><apiOperation id="dom.html.objects:HTMLCollection:namedItem"><apiName>namedItem</apiName><shortdesc>
		 This method retrieves a Node using a name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The Node with a name or id attribute whose value corresponds 
		 to the specified string. Upon failure (e.g., no node with this name 
		 exists), returns null.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the Node to be fetched.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method retrieves a Node using a name. With [HTML 4.01] documents, 
		 it first searches for a Node with a matching id attribute. If it 
		 doesn't find one, it then searches for a Node with a matching name 
		 attribute, but only on those elements that are allowed a name attribute. 
		 With [XHTML 1.0] documents, this method only searches for Nodes with a 
		 matching id attribute. This method is case insensitive in HTML documents 
		 and case sensitive in XHTML documents. 
		 
		 <p><b>Note (IE):</b> Internet Explorer 8 and later. In IE8 mode, the namedItem method does not return collections if more than one named item is found; instead, it returns the first case-insensitive matched element.</p>
		 
		 <p><b>Note (IE):</b> The namedItem method was introduced in Microsoft Internet Explorer 6.</p>
		 
		 </apiDesc><example>
		 The following example shows how to use the namedItem method to retrieve a div and change its innerText property.
		 <codeblock>
		 &lt;div id="oDIV1"&gt;This text will not change.&lt;/div&gt;
		 &lt;div id="oDIV2"&gt;This text will change.&lt;/div&gt;
		 &lt;button onclick="document.all.namedItem('oDIV2').innerHTML='Changed!';"&gt;
		 Change Option
		 &lt;/button&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/HTMLCollection"><linktext>MDC: HTMLCollection</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms536634%28VS.85%29.aspx"><linktext>MSDN: namedItem Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-21069976"><linktext>W3C - DOM HTML: HTMLCollection.namedItem()</linktext></link></related-links></apiOperation><apiOperation id="dom.html.objects:HTMLCollection:tags"><apiName>tags</apiName><shortdesc>
		 Retrieves a collection of objects that have the specified HTML tag name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a collection of element objects if successful, or null otherwise. 
		 
		 </apiDesc><apiOperationClassifier>dom.html.objects:HTMLCollection</apiOperationClassifier></apiReturn><apiParam><apiItemName>tag</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies an HTML tag. It can be any one of the objects exposed by the DHTML Object Model.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a collection of objects that have the specified HTML tag name. 
		 
		 <p><b>Note:</b> Successful execution includes the case where no elements having the given name are found. In this case, a collection containing zero elements is returned.</p>
		 
		 <p><b>Note:</b> NULL may be returned in cases where the collection cannot be constructed, such as inability to allocate memory for even a zero-length collection.</p>
		 
		 </apiDesc><example>
		 This example uses the tags method to retrieve a collection of all p elements in the document, and all body 
		 elements in the document. It displays some of the properties of the collections that are returned. It then 
		 displays selected elements of the collection.
		 
		 <p>There are no p elements in the document, and there is one body element in the document. So, this example 
		 illustrates both the cases where the collection is empty and where the collection is populated.</p>
		 <codeblock>
		 &lt;html&gt;
&lt;head&gt;
&lt;title&gt;document.all.tags example &lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;script type="text/jscript" language="jscript"&gt;

document.write("Here is how document.all.tags behaves when no tags are found.&lt;br&gt;");
var coll = document.all.tags("p");
document.write("list 'p' tags" + "&lt;br&gt;");
document.write("coll= " + coll + "&lt;br&gt;");
document.write("coll.length= " + coll.length + "&lt;br&gt;");
if (coll==null){
    document.write( "coll= is null &lt;br&gt;" );
} else {
    document.write( "coll= is not null &lt;br&gt;" );
}


if ( coll[0] != null ){
    document.write( "coll[0].attributes length " + coll[0].attributes.length  + "&lt;br&gt;");

    for ( i = 0; i&lt;coll[0].attributes.length ; i++ ){
        if (( coll[0].attributes[i].value       != "null"  )
           &amp;( coll[0].attributes[i].value.length &gt; 0       ))
        {
            document.write( "coll[0].attributes "        + i + ":"   );
            document.write(  coll[0].attributes[i].name      + ":            "   );
            document.write(  coll[0].attributes[i].value     + "&lt;br&gt;");
        }
    }
}

document.write( "&lt;br&gt;&lt;br&gt;" );
document.write( "Here is how document.all.tags behaves when at least 1 tag is found.&lt;br&gt;" );
var coll = document.all.tags( "body" );
document.write( "list 'body' tags"            + "&lt;br&gt;" );
document.write( "coll= "        + coll        + "&lt;br&gt;" );
document.write( "coll.length= " + coll.length + "&lt;br&gt;" );
if ( coll == null ){
    document.write( "coll= is null &lt;br&gt;" );
} else {
    document.write( "coll= is not null &lt;br&gt;" );
}

if ( coll[0] != null ){
    document.write( "coll[0].attributes length " + coll[0].attributes.length  + "&lt;br&gt;");

    for ( i = 0; i&lt;coll[0].attributes.length ; i++ ){
        if (( coll[0].attributes[i].value       != "null"  )
           &amp;( coll[0].attributes[i].value.length &gt; 0       ))
        {
            document.write( "coll[0].attributes "        + i + ":"   );
            document.write(  coll[0].attributes[i].name      + ":            "   );
            document.write(  coll[0].attributes[i].value     + "&lt;br&gt;");
        }
    }
}

&lt;/script&gt;

&lt;pre&gt;
=================================
== Here is what the above example should display in your browser
=================================
Here is how document.all.tags behaves when no tags are found.
list 'p' tags
coll= [object]
coll.length= 0
coll= is not null


Here is how document.all.tags behaves when at least 1 tag is found.
list 'body' tags
coll= [object]
coll.length= 1
coll= is not null
coll[0].attributes length 98
coll[0].attributes 21:hideFocus: false
coll[0].attributes 45:contentEditable: inherit
coll[0].attributes 59:disabled: false
coll[0].attributes 69:tabIndex: 0
coll[0].attributes 80:bottomMargin: 15
coll[0].attributes 81:noWrap: false
coll[0].attributes 90:leftMargin: 10
coll[0].attributes 92:topMargin: 15
coll[0].attributes 95:rightMargin: 10

&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536776%28VS.85%29.aspx"><linktext>MSDN: tags Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html.objects:HTMLCollection:urns"><apiName>urns</apiName><shortdesc>
		 Retrieves a collection of all objects to which a specified behavior is attached.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a collection of objects if successful, or null otherwise.
		 
		 </apiDesc><apiOperationClassifier>dom.html.objects:HTMLCollection</apiOperationClassifier></apiReturn><apiParam><apiItemName>urn</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the behavior's Uniform Resource Name (URN).
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a collection of all objects to which a specified behavior is attached.
		 
		 </apiDesc><example>
		 The following example shows how to use the urns method to retrieve a collection of all 
		 elements currently attached to the specified behavior and then display a comma-delimited 
		 list of these element IDs in a message box.
		 <codeblock>
		 &lt;script language="JScript"&gt;
		 	var coll  = document.all.urns("URN1");
		 	var sText = '';
		 
		 	if (coll != null) {
		 		for (i=0; i&lt;coll.length; i++) {
		 			sText += coll.item(i).id + ', ';
		 		}
		 
		 		window.alert(sText);
		 	}
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536780%28VS.85%29.aspx"><linktext>MSDN: urns Method</linktext></link></related-links></apiOperation><apiValue id="dom.html.objects:HTMLCollection:length:get"><apiName>length</apiName><shortdesc>
		 This attribute specifies the length or size of the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 This attribute specifies the length or size of the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/HTMLCollection"><linktext>MDC: HTMLCollection</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534101%28VS.85%29.aspx"><linktext>MSDN: length Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-40057551"><linktext>W3C - DOM HTML: HTMLCollection.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.html.objects:HTMLOptionsCollection"><apiName>HTMLOptionsCollection</apiName><shortdesc>
	 An HTMLOptionsCollection is a list of nodes representing HTML option element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An HTMLOptionsCollection is a list of nodes representing HTML option element. 
	 An individual node may be accessed by either ordinal index or the node's 
	 name or id attributes.
	 
	 <p><b>Note:</b> Collections in the HTML DOM are assumed to be live meaning that they 
	 are automatically updated when the underlying document is changed.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/HTMLOptionsCollection"><linktext>MDC: HTMLOptionsCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection"><linktext>W3C DOM HTML Specification: HTMLOptionsCollection</linktext></link></related-links><apiOperation id="dom.html.objects:HTMLOptionsCollection:item"><apiName>item</apiName><shortdesc>
		 This method retrieves a node specified by ordinal index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The Node at the corresponding position upon success. A value 
		 of null is returned if the index is out of range.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the node to be fetched. The index 
		 origin is 0
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method retrieves a node specified by ordinal index. Nodes are 
		 numbered in tree order (depth-first traversal order).
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/HTMLOptionsCollection"><linktext>MDC: HTMLOptionsCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-item"><linktext>W3C DOM HTML Specification: HTMLOptionsCollection.item()</linktext></link></related-links></apiOperation><apiOperation id="dom.html.objects:HTMLOptionsCollection:namedItem"><apiName>namedItem</apiName><shortdesc>
		 This method retrieves a Node using a name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The Node with a name or id attribute whose value corresponds 
		 to the specified string. Upon failure (e.g., no node with this name 
		 exists), returns null.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the Node to be fetched.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method retrieves a Node using a name. It first searches for a 
		 Node with a matching id attribute. If it doesn't find one, it then 
		 searches for a Node with a matching name attribute, but only on those 
		 elements that are allowed a name attribute. This method is case 
		 insensitive in HTML documents and case sensitive in XHTML documents.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/HTMLOptionsCollection"><linktext>MDC: HTMLOptionsCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-namedItem"><linktext>W3C DOM HTML Specification: HTMLOptionsCollection.namedItem()</linktext></link></related-links></apiOperation><apiValue id="dom.html.objects:HTMLOptionsCollection:length:get"><apiName>length</apiName><shortdesc>
		 This attribute specifies the length or size of the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiException><apiDesc>NOT_SUPPORTED_ERR: if setting the length 
		 is not allowed by the implementation.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 This attribute specifies the length or size of the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/HTMLOptionsCollection"><linktext>MDC: HTMLOptionsCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-length"><linktext>W3C DOM HTML Specification: HTMLOptionsCollection.length</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.html"><apiName>dom.html</apiName><apiDetail/><apiClassifier id="dom.html:HTMLDirectoryElement"><apiName>HTMLDirectoryElement</apiName><shortdesc>
	 Directory list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Directory list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDirectoryElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLScriptElement"><apiName>HTMLScriptElement</apiName><shortdesc>
	 Script statements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Script statements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLScriptElement:charset:get"><apiName>charset</apiName><shortdesc>
		 The character encoding of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The character encoding of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:defer:get"><apiName>defer</apiName><shortdesc>
		 Indicates that the user agent can defer processing of the script.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates that the user agent can defer processing of the script.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:event:get"><apiName>event</apiName><shortdesc>
		 Reserved for future use.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reserved for future use.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:htmlFor:get"><apiName>htmlFor</apiName><shortdesc>
		 Reserved for future use.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reserved for future use.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:src:get"><apiName>src</apiName><shortdesc>
		 URI designating an external script.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating an external script.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:text:get"><apiName>text</apiName><shortdesc>
		 The script content of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The script content of the element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:type:get"><apiName>type</apiName><shortdesc>
		 The content type of the script language.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The content type of the script language.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHtmlElement"><apiName>HTMLHtmlElement</apiName><shortdesc>
	 Root of an HTML document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Root of an HTML document. See the HTML element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHtmlElement:version:get"><apiName>version</apiName><shortdesc>
		 Version information about the document's DTD.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Version information about the document's DTD. This attribute is deprecated 
		 in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHeadElement"><apiName>HTMLHeadElement</apiName><shortdesc>
	 Document head information.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Document head information. See the HEAD element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHeadElement:profile:get"><apiName>profile</apiName><shortdesc>
		 URI designating a metadata profile.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a metadata profile. See the profile 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTitleElement"><apiName>HTMLTitleElement</apiName><shortdesc>
	 The document title.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The document title. See the TITLE element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTitleElement:text:get"><apiName>text</apiName><shortdesc>
		 The specified title as a string.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The specified title as a string.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFieldSetElement"><apiName>HTMLFieldSetElement</apiName><shortdesc>
	 Organizes form controls into logical groups.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Organizes form controls into logical groups.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFieldSetElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLButtonElement"><apiName>HTMLButtonElement</apiName><shortdesc>
	 Push button.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Push button.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLButtonElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of button (all lower case).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of button (all lower case).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:value:get"><apiName>value</apiName><shortdesc>
		 The current form control value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The current form control value.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLParamElement"><apiName>HTMLParamElement</apiName><shortdesc>
	 Parameters fed to the OBJECT element.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Parameters fed to the OBJECT element.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLParamElement:name:get"><apiName>name</apiName><shortdesc>
		 The name of a run-time parameter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of a run-time parameter.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLParamElement:type:get"><apiName>type</apiName><shortdesc>
		 Content type for the value attribute when valuetype has the value "ref".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Content type for the value attribute when valuetype has the value "ref".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLParamElement:value:get"><apiName>value</apiName><shortdesc>
		 The value of a run-time parameter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The value of a run-time parameter.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLParamElement:valueType:get"><apiName>valueType</apiName><shortdesc>
		 Information about the meaning of the value attribute value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Information about the meaning of the value attribute value.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBaseElement"><apiName>HTMLBaseElement</apiName><shortdesc>
	 Document base URI [IETF RFC 2396].</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Document base URI [IETF RFC 2396]. See the BASE element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBaseElement:href:get"><apiName>href</apiName><shortdesc>
		 The base URI [IETF RFC 2396].</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The base URI [IETF RFC 2396]. See the href attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBaseElement:target:get"><apiName>target</apiName><shortdesc>
		 The default target frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The default target frame. See the target attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableSectionElement"><apiName>HTMLTableSectionElement</apiName><shortdesc>
	 The THEAD, TFOOT, and TBODY elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The THEAD, TFOOT, and TBODY elements.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLTableSectionElement:deleteRow"><apiName>deleteRow</apiName><shortdesc>
		 Delete a row from this section.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the row to be deleted, or -1 to delete the last row. This index starts from 0 
		 and is relative only to the rows contained inside this section, not all the rows in the table.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Delete a row from this section. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableSectionElement:insertRow"><apiName>insertRow</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Insert a row into this section.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created row.
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The row number where to insert a new row. This index starts from 0 and is relative only 
		 to the rows contained inside this section, not all the rows in the table.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Insert a row into this section. The new row is inserted immediately before the current indexth row in 
		 this section. If index is -1 or equal to the number of rows in this section, the new row is appended.  
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLTableSectionElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of data in cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of data in cells. See the align attribute for HTMLTheadElement for details.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:rows:get"><apiName>rows</apiName><shortdesc>
		 The collection of rows in this table section.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 The collection of rows in this table section.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:vAlign:get"><apiName>vAlign</apiName><shortdesc>
		 Vertical alignment of data in cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Vertical alignment of data in cells. See the valign attribute for HTMLTheadElement for details.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLParagraphElement"><apiName>HTMLParagraphElement</apiName><shortdesc>
	 Paragraphs.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Paragraphs.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLParagraphElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal text alignment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLSelectElement"><apiName>HTMLSelectElement</apiName><shortdesc>
	 The select element allows the selection of an option.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The select element allows the selection of an option. The contained options 
	 can be directly accessed through the select element as a collection. See 
	 the SELECT element definition in HTML 4.01.
	 
	 http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-40676705
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLSelectElement:add"><apiName>add</apiName><shortdesc>
		 Add a new element to the collection of OPTION elements for this SELECT.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_FOUND_ERR: Raised if before is not a 
		 descendant of the SELECT element.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier><apiDesc>The element to add.
		 </apiDesc></apiParam><apiParam><apiItemName>before</apiItemName><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier><apiDesc>The element to insert before, or null for the tail 
		 of the list.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Add a new element to the collection of OPTION elements for this SELECT. 
		 This method is the equivalent of the appendChild method of the Node 
		 interface if the before parameter is null. It is equivalent to the 
		 insertBefore method on the parent of before in all other cases. This 
		 method may have no effect if the new element is not an OPTION or 
		 an OPTGROUP. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLSelectElement:blur"><apiName>blur</apiName><shortdesc>
		 Causes the element to lose focus and fires the onblur event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Causes the element to lose focus and fires the onblur event.
		 
		 This method shifts focus away from the element it is applied 
		 to but does not set focus on the next element in the tab order.
		 
		 <b>IE</b>
		 In Microsoft Internet Explorer 5 and greater, elements that expose 
		 the blur method must have the TABINDEX attribute set.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLSelectElement:focus"><apiName>focus</apiName><shortdesc>
		 Causes the element to receive the focus and executes the code specified 
		 by the onfocus event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Causes the element to receive the focus and executes the code specified 
		 by the onfocus event.
		 
		 This method fires the onfocus event.
		 
		 As of Microsoft Internet Explorer 5, elements that expose the focus method 
		 must have the TABINDEX attribute set.
		 
		 Elements cannot receive focus until the document finishes loading.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLSelectElement:remove"><apiName>remove</apiName><shortdesc>
		 Remove an element from the collection of OPTION elements for this 
		 SELECT.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the item to remove, starting from 0.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove an element from the collection of OPTION elements for this 
		 SELECT. Does nothing if no element has the given index. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLSelectElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context. See the disabled attribute 
		 definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this 
		 control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:length:get"><apiName>length</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The number of options in this SELECT.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiException><apiDesc>NOT_SUPPORTED_ERR: if setting the length 
		 is not allowed by the implementation.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The number of options in this SELECT.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:multiple:get"><apiName>multiple</apiName><shortdesc>
		 If true, multiple OPTION elements may be selected in this SELECT.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If true, multiple OPTION elements may be selected in this SELECT. See 
		 the multiple attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form. See the name 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:onchange:get"><apiName>onchange</apiName><shortdesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:options:get"><apiName>options</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The collection of OPTION elements contained by this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLOptionsCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The collection of OPTION elements contained by this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
		 The ordinal index of the selected option, starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The ordinal index of the selected option, starting from 0. The value 
		 -1 is returned if no element is selected. If multiple options are 
		 selected, the index of the first selected option is returned.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:size:get"><apiName>size</apiName><shortdesc>
		 Number of visible rows.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Number of visible rows. See the size attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Gets/sets the tab order of the current element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets/sets the tab order of the current element. 
		 
		 </apiDesc><example>
		 b1 = document.getElementById("button1"); 
		 b1.tabIndex = 1;
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of this form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of this form control. This is the string "select-multiple" when 
		 the multiple attribute is true and the string "select-one" when false.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:value:get"><apiName>value</apiName><shortdesc>
		 The current form control value (i.e.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The current form control value (i.e. the value of the currently selected 
		 option), if multiple options are selected this is the value of the first 
		 selected option.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLOListElement"><apiName>HTMLOListElement</apiName><shortdesc>
	 Ordered list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Ordered list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLOListElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOListElement:start:get"><apiName>start</apiName><shortdesc>
		 Starting sequence number.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Starting sequence number. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOListElement:type:get"><apiName>type</apiName><shortdesc>
		 Bullet style.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Bullet style. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLAnchorElement"><apiName>HTMLAnchorElement</apiName><shortdesc>
	 The anchor element.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The anchor element.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLAnchorElement:blur"><apiName>blur</apiName><shortdesc>
		 Removes keyboard focus from this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes keyboard focus from this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLAnchorElement:focus"><apiName>focus</apiName><shortdesc>
		 Gives keyboard focus to this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Gives keyboard focus to this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLAnchorElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:charset:get"><apiName>charset</apiName><shortdesc>
		 The character encoding of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The character encoding of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:coords:get"><apiName>coords</apiName><shortdesc>
		 Comma-separated list of lengths, defining an active region geometry.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Comma-separated list of lengths, defining an active region geometry.
		 
		 <p>This attribute specifies the position and shape on the screen. The 
		 number and order of values depends on the shape being defined. Possible combinations:
		 
		 <adobetable class="innertable">
		 
		 <tgroup cols="4"><thead><row><row>
		 		<entry><p>Shape</p></entry>
		 		<entry><p>Values</p></entry>
		 	</row><row>
		 		<entry><codeph>rect</codeph></entry>
		 		<entry>left-x, top-y, right-x, bottom-y.</entry>
		 	</row><row>
		 		<entry><codeph>circle</codeph></entry>
		 		<entry>center-x, center-y, radius. <b>Note:</b> When the radius value is a percentage value, 
		 user agents should calculate the final radius value based on the associated object's width 
		 and height. The radius should be the smaller value of the two.</entry>
		 	</row><row>
		 		<entry><codeph>poly</codeph></entry>
		 		<entry>x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should 
		 be the same to close the polygon. When these coordinate values are not the same, user agents 
		 should infer an additional coordinate pair to close the polygon.</entry>
		 	</row></row></thead><tbody/></tgroup></adobetable>
		 </p>
		 
		 <p>Coordinates are relative to the top, left corner of the object. All values are lengths. 
		 All values are separated by commas.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:href:get"><apiName>href</apiName><shortdesc>
		 The absolute URI of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The absolute URI of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:hreflang:get"><apiName>hreflang</apiName><shortdesc>
		 Language code of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Language code of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:name:get"><apiName>name</apiName><shortdesc>
		 Anchor name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Anchor name.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:rel:get"><apiName>rel</apiName><shortdesc>
		 Forward link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Forward link type.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:rev:get"><apiName>rev</apiName><shortdesc>
		 Reverse link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reverse link type.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:shape:get"><apiName>shape</apiName><shortdesc>
		 The shape of the active area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The shape of the active area. The coordinates are given by coords. 
		 
		 <p>Possible values can be:
		 <ul>
		 <li>default: Specifies the entire region</li>
		 <li>rect: Define a rectangular region</li>
		 <li>circle: Define a circular region</li>
		 <li>poly: Define a polygonal region</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:type:get"><apiName>type</apiName><shortdesc>
		 Advisory content type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Advisory content type.
		 
		 <p>This attribute gives an advisory hint as to the content type of 
		 the content available at the link target address. It allows user agents 
		 to opt to use a fallback mechanism rather than fetch the content if 
		 they are advised that they will get content in a content type they do 
		 not support.</p>
		 
		 <p>Authors who use this attribute take responsibility to manage the risk 
		 that it may become inconsistent with the content available at the link 
		 target address.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHeadingElement"><apiName>HTMLHeadingElement</apiName><shortdesc>
	 For the H1 to H6 elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 For the H1 to H6 elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHeadingElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal text alignment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTextAreaElement"><apiName>HTMLTextAreaElement</apiName><shortdesc>
	 Multi-line text field.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Multi-line text field.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLTextAreaElement:blur"><apiName>blur</apiName><shortdesc>
		 Removes keyboard focus from this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes keyboard focus from this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTextAreaElement:focus"><apiName>focus</apiName><shortdesc>
		 Gives keyboard focus to this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Gives keyboard focus to this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTextAreaElement:select"><apiName>select</apiName><shortdesc>
		 Select the contents of the TEXTAREA.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Select the contents of the TEXTAREA. 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLTextAreaElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:cols:get"><apiName>cols</apiName><shortdesc>
		 Width of control (in characters).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Width of control (in characters).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:defaultValue:get"><apiName>defaultValue</apiName><shortdesc>
		 Represents the contents of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the contents of the element. The value of this attribute does 
		 not change if the contents of the corresponding form control, in an 
		 interactive user agent, changes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this 
		 control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onchange:get"><apiName>onchange</apiName><shortdesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onselect:get"><apiName>onselect</apiName><shortdesc>
		 The onselect event occurs when a user selects some text in a text field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onselect event occurs when a user selects some text in a text field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:readOnly:get"><apiName>readOnly</apiName><shortdesc>
		 This control is read-only.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 This control is read-only.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:rows:get"><apiName>rows</apiName><shortdesc>
		 Number of text rows.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Number of text rows.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of this form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of this form control. This the string "textarea".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:value:get"><apiName>value</apiName><shortdesc>
		 Represents the current contents of the corresponding form control, in an 
		 interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the current contents of the corresponding form control, in an 
		 interactive user agent. Changing this attribute changes the contents of the 
		 form control, but does not change the contents of the element. If the entirety 
		 of the data can not fit into a single DOMString, the implementation may 
		 truncate the data.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLModElement"><apiName>HTMLModElement</apiName><shortdesc>
	 Notice of modification to part of a document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Notice of modification to part of a document.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLModElement:cite:get"><apiName>cite</apiName><shortdesc>
		 A URI designating a document that describes the reason for the change.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating a document that describes the reason for the change.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLModElement:dateTime:get"><apiName>dateTime</apiName><shortdesc>
		 The date and time of the change.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The date and time of the change.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBaseFontElement"><apiName>HTMLBaseFontElement</apiName><shortdesc>
	 Base font.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Base font. This element is deprecated in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBaseFontElement:color:get"><apiName>color</apiName><shortdesc>
		 Font color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBaseFontElement:face:get"><apiName>face</apiName><shortdesc>
		 Font face identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font face identifier. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBaseFontElement:size:get"><apiName>size</apiName><shortdesc>
		 Computed font size.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Computed font size. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLIElement"><apiName>HTMLLIElement</apiName><shortdesc>
	 List item.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 List item.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLIElement:type:get"><apiName>type</apiName><shortdesc>
		 List item bullet style.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 List item bullet style. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLIElement:value:get"><apiName>value</apiName><shortdesc>
		 Reset sequence number when used in OL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Reset sequence number when used in OL. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLElement"><apiName>HTMLElement</apiName><shortdesc>
	 All HTML element interfaces derive from this class.</shortdesc><prolog><asMetadata/><asCustoms><internal>http://www.whatwg.org/specs/web-apps/current-work/#htmlelement
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.style.css:ElementCSSInlineStyle</apiBaseInterface><apiBaseClassifier>dom.core:Element</apiBaseClassifier></apiClassifierDef><apiDesc>
	 All HTML element interfaces derive from this class. Elements that only 
	 expose the HTML core attributes are represented by the base 
	 HTMLElement interface. These elements are as follows:
	 
	 <ul>
	 <li>special: SUB, SUP, SPAN, BDO</li>
	 <li>font: TT, I, B, U, S, STRIKE, BIG, SMALL</li>
	 <li>phrase: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ACRONYM, ABBR</li>
	 <li>list: DD, DT</li>
	 <li>NOFRAMES, NOSCRIPT</li>
	 <li>ADDRESS, CENTER</li>
	 </ul>
	 
	 DOM Level 2
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLElement:className:get"><apiName>className</apiName><shortdesc>
		 The class attribute of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The class attribute of the element. This attribute has been renamed 
		 due to conflicts with the "class" keyword exposed by many languages. 
		 See the class attribute definition in HTML 4.01.
		 
		 </apiDesc><example>
		 var elementNodeReference = document.getElementById("div1");
		 if (elementNodeReference.className == "fixed") {
		 // skip a particular class of element
		 goNextElement();
		 };
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:dir:get"><apiName>dir</apiName><shortdesc>
		 The dir attribute gets or sets the text writing directionality of 
		 the content of the current element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The dir attribute gets or sets the text writing directionality of 
		 the content of the current element. 
		 
		 Possible values for dir are ltr, for Left-to-right, and rtl, for Right-to-left. 
		 
		 Note: The text writing directionality of an element is which direction 
		 that text goes (for support of different language systems). Arabic 
		 languages and Hebrew are typical languages using the rtl directionality.
		 
		 Note: An image can have its dir attribute set to rtl in which case the 
		 HTML attributes title and alt will be formatted and defined as rtl.
		 
		 Note: When a table has its dir set to rtl, the column order are arranged 
		 from right to left. 
		 
		 </apiDesc><example>
		 var parg = document.getElementById("para1");
		 parg.dir = "rtl"; 
		 // change the text direction on a paragraph identified as "para1"
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:id:get"><apiName>id</apiName><shortdesc>
		 Gets or sets the element's identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets or sets the element's identifier. 
		 
		 Note: The ID must be unique in a document, and is often used to 
		 retrieve the element using document.getElementById. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:lang:get"><apiName>lang</apiName><shortdesc>
		 This property gets or sets the base language of an element's attribute 
		 values and text content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This property gets or sets the base language of an element's attribute 
		 values and text content. 
		 
		 Note: The language code returned by this property is defined in 
		 RFC 1766. Common examples include "en" for English, "ja" for 
		 Japanese, "es" for Spanish and so on. The default value of this 
		 attribute is unknown. Note that this attribute, though valid at the 
		 individual element level described here, is most often specified for 
		 the root element of the document.
		 
		 Note: This also only works with the deprecated lang attribute and not 
		 with xml:lang.
		 
		 </apiDesc><example>
		 // this snippet compares the base language and 
		 // redirects to another url based on language
		 if (document.documentElement.lang == "en") {
		 window.location.href = "Some_document.html.en";
		 } else if(document.documentElement.lang == "ru") {
		 window.location.href = "Some_document.html.ru";
		 };
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onclick:get"><apiName>onclick</apiName><shortdesc>
		 a pointer button was clicked
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was clicked
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:oncopy:get"><apiName>oncopy</apiName><shortdesc>
		 Non-Standard | Firefox 3+
		 
		 This event is sent when the user attempts to copy text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b>
		 
		 This event is sent when the user attempts to copy text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:oncut:get"><apiName>oncut</apiName><shortdesc>
		 Non-Standard | Firefox 3+
		 
		 This event is sent when the user attempts to cut text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b>
		 
		 This event is sent when the user attempts to cut text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:ondblclick:get"><apiName>ondblclick</apiName><shortdesc>
		 a pointer button was double clicked
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was double clicked
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onkeydown:get"><apiName>onkeydown</apiName><shortdesc>
		 a key was pressed down
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a key was pressed down
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onkeypress:get"><apiName>onkeypress</apiName><shortdesc>
		 a key was pressed and released
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a key was pressed and released
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onkeyup:get"><apiName>onkeyup</apiName><shortdesc>
		 a key was released
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a key was released
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmousedown:get"><apiName>onmousedown</apiName><shortdesc>
		 a pointer button was pressed down
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was pressed down
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmousemove:get"><apiName>onmousemove</apiName><shortdesc>
		 a pointer was moved within
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer was moved within
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmouseout:get"><apiName>onmouseout</apiName><shortdesc>
		 a pointer was moved away
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer was moved away
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmouseover:get"><apiName>onmouseover</apiName><shortdesc>
		 a pointer was moved onto
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer was moved onto
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmouseup:get"><apiName>onmouseup</apiName><shortdesc>
		 a pointer button was released
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was released
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onpaste:get"><apiName>onpaste</apiName><shortdesc>
		 Non-Standard | Firefox 3+
		 
		 This event is sent when the user attempts to paste text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b>
		 
		 This event is sent when the user attempts to paste text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:style:get"><apiName>style</apiName><shortdesc>
		 
		 Returns an object that represents the element's style attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns an object that represents the element's style attribute.
		 
		 <p>Note: Since the style property has the same (and highest) priority 
		 in the CSS cascade as an inline style declaration via the style 
		 attribute, it is useful for setting style on one specific element.</p>
		 
		 <p>Note: However, it is not useful for learning about the element's 
		 style in general, since it represents only the CSS declarations set 
		 in the element's inline style attribute, not those that come from 
		 style rules elsewhere, such as style rules in the &lt;head&gt; section, or
		 external style sheets.</p>
		 
		 <p><b>Note:</b> To get the values of all CSS properties for an element you 
		 should use window.getComputedStyle instead.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:title:get"><apiName>title</apiName><shortdesc>
		 Establishes the text to be displayed in a 'tool tip' popup when the 
		 mouse is over the displayed node.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Establishes the text to be displayed in a 'tool tip' popup when the 
		 mouse is over the displayed node.
		 
		 If a node does not have a title attribute, then the default action 
		 is to inherit it from its parent node, which in turn may inherit it 
		 from its parent node, etc. 
		 
		 </apiDesc><example>
		 button1.title = "click to refresh";
		 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLMapElement"><apiName>HTMLMapElement</apiName><shortdesc>
	 Client-side image map.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Client-side image map.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLMapElement:areas:get"><apiName>areas</apiName><shortdesc>
		 The list of areas defined for the image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 The list of areas defined for the image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMapElement:name:get"><apiName>name</apiName><shortdesc>
		 Names the map (for use with usemap).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Names the map (for use with usemap).
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLOptGroupElement"><apiName>HTMLOptGroupElement</apiName><shortdesc>
	 Group options together in logical subdivisions.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Group options together in logical subdivisions. See the OPTGROUP element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLOptGroupElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptGroupElement:label:get"><apiName>label</apiName><shortdesc>
		 Assigns a label to this option group.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Assigns a label to this option group. See the label attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLDivElement"><apiName>HTMLDivElement</apiName><shortdesc>
	 Generic block container.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Generic block container.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDivElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal text alignment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHRElement"><apiName>HTMLHRElement</apiName><shortdesc>
	 Create a horizontal rule.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Create a horizontal rule.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHRElement:align:get"><apiName>align</apiName><shortdesc>
		 Align the rule on the page.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Align the rule on the page. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>left</li>
		 <li>center</li>
		 <li>right</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLHRElement:noShade:get"><apiName>noShade</apiName><shortdesc>
		 Indicates to the user agent that there should be no shading in the rendering of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates to the user agent that there should be no shading in the rendering of this element. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLHRElement:size:get"><apiName>size</apiName><shortdesc>
		 The height of the rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The height of the rule. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLHRElement:width:get"><apiName>width</apiName><shortdesc>
		 The width of the rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The width of the rule. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableColElement"><apiName>HTMLTableColElement</apiName><shortdesc>
	 Regroups the COL and COLGROUP elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Regroups the COL and COLGROUP elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableColElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of cell data in column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of cell data in column.
		 <p>Valid values are: 
		 <ul>
		 <li>left: Left-flush data/Left-justify text. This is the default value for table data.</li>
		 <li>center: Center data/Center-justify text. This is the default value for table headers.</li>
		 <li>right: Right-flush data/Right-justify text.</li>
		 <li>justify: Double-justify text.</li>
		 <li>char: Align text around a specific character. If a user agent doesn't support character alignment, behavior in the presence of this value is unspecified.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:span:get"><apiName>span</apiName><shortdesc>
		 Indicates the number of columns in a group or affected by a grouping.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Indicates the number of columns in a group or affected by a grouping.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:vAlign:get"><apiName>vAlign</apiName><shortdesc>
		 Vertical alignment of cell data in column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Vertical alignment of cell data in column.
		 <p>Valid values are: 
		 <ul>
		 <li>top: Cell data is flush with the top of the cell.</li>
		 <li>middle: Cell data is centered vertically within the cell. This is the default value.</li>
		 <li>bottom: Cell data is flush with the bottom of the cell.</li>
		 <li>baseline: All cells in the same row as a cell whose valign attribute has this value should have their textual data positioned so that the first text line occurs on a baseline common to all cells in the row. This constraint does not apply to subsequent text lines in these cells.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:width:get"><apiName>width</apiName><shortdesc>
		 Default column width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Default column width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLDocument"><apiName>HTMLDocument</apiName><shortdesc>
	 An HTMLDocument is the root of the HTML hierarchy and holds the entire content.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.xpath:XPathEvaluator</apiBaseInterface><apiBaseClassifier>dom.core:Document</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An HTMLDocument is the root of the HTML hierarchy and holds the entire content.
	 
	 <p>Besides providing access to the hierarchy, it also provides some convenience 
	 methods for accessing certain sets of information from the document.</p>
	 
	 <p>The following properties have been deprecated in favor of the 
	 corresponding ones for the BODY element:
	 <ul>
	 <li>alinkColor</li>
	 <li>background</li>
	 <li>bgColor</li>
	 <li>fgColor</li>
	 <li>linkColor</li>
	 <li>vlinkColor</li>
	 </ul>
	 </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531073%28VS.85%29.aspx"><linktext>MSDN - document Object</linktext></link><link href="http://msdn.microsoft.com/en-us/library/dd347078%28VS.85%29.aspx"><linktext>MSDN - HTMLDocument Prototype</linktext></link><link href="http://developer.mozilla.org/en/DOM/document"><linktext>MDC - Document</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268"><linktext>W3C - HTMLDocument</linktext></link></related-links><apiOperation id="dom.html:HTMLDocument:captureEvents"><apiName>captureEvents</apiName><shortdesc>
		 Instructs the browser to grab events of a specific type before they reach their intended target document objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>eventTypeList</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A comma-separated list of case-sensitive event types as derived from the available 
		 Event object constants, such as Event.CLICK or Event.MOUSEMOVE.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Instructs the browser to grab events of a specific type before they reach their intended target document objects. 
		 The object invoking this method must then have event handlers defined for the given event types to process the event. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.captureEvents"><linktext>MDC - Document.captureEvents()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:clear"><apiName>clear</apiName><shortdesc>
		 This method used to clear the whole specified document in early (pre-1.0) 
		 versions of Mozilla.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5_no"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 This method used to clear the whole specified document in early (pre-1.0) 
		 versions of Mozilla.
		 
		 <p>In recent versions of Mozilla-based applications as well as in Internet 
		 Explorer and Netscape 4 this method does nothing. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536361%28VS.85%29.aspx"><linktext>MSDN - clear Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.clear"><linktext>MDC - Document.clear()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:close"><apiName>close</apiName><shortdesc>
		 Closes a document stream opened by open() and forces rendering.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Closes a document stream opened by open() and forces rendering. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // open a document to write to it.
		 // write the content of the document.
		 // close the document.
		 document.open();
		 document.write("&lt;p&gt;The one and only content.&lt;/p&gt;");
		 document.close();</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536369%28VS.85%29.aspx"><linktext>MSDN - close Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.close"><linktext>MDC - Document.close()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-98948567"><linktext>W3C - HTMLDocument.close()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:createExpression"><apiName>createExpression</apiName><shortdesc>
		 
		 Creates a parsed XPath expression with resolved namespaces.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The compiled form of the XPath expression.
		 
		 </apiDesc><apiOperationClassifier>dom.xpath:XPathExpression</apiOperationClassifier></apiReturn><apiParam><apiItemName>expression</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The XPath expression string to be parsed.
		 </apiDesc></apiParam><apiParam><apiItemName>resolver</apiItemName><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier><apiDesc>The resolver permits translation of all prefixes, including the xml 
		 namespace prefix, within the XPath expression into appropriate namespace URIs. If this 
		 is specified as null, any namespace prefix within the expression will result in 
		 DOMException being thrown with the code NAMESPACE_ERR.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Creates a parsed XPath expression with resolved namespaces. This is useful when an 
		 expression will be reused in an application since it makes it possible to compile the 
		 expression string into a more efficient internal form and preresolve all namespace 
		 prefixes which occur within the expression.
		 
		 <p><b>Note (Mozilla):</b> Prior to Firefox 3, you could call this method on documents other 
		 than the one you planned to run the XPath against. Under Firefox 3, you must call it on the 
		 same document.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createExpression"><linktext>MDC - Document.createExpression()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createExpression"><linktext>W3C - XPathEvaluator.createExpression()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:createNSResolver"><apiName>createNSResolver</apiName><shortdesc>
		 
		 Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated 
		 relative to the context of the node where it appeared within the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>XPathNSResolver which resolves namespaces with respect to the definitions in scope for a specified node.
		 
		 </apiDesc><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier></apiReturn><apiParam><apiItemName>nodeResolver</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to be used as a context for namespace resolution.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated 
		 relative to the context of the node where it appeared within the document. This adapter works 
		 like the DOM Level 3 method lookupNamespaceURI  on nodes in resolving the namespaceURI from a 
		 given prefix using the current information available in the node's hierarchy at the time 
		 lookupNamespaceURI is called. also correctly resolving the implicit xml prefix.
		 
		 <p><b>Note:</b> XPath defines QNames without prefix to match only elements in the 
		 null namespace. There is no way in XPath to pick up the default namespace as applied to a regular 
		 element reference (e.g., <codeph>p[&amp;64;id='_myid']</codeph> for <codeph>xmlns='http://www.w3.org/1999/xhtml'</codeph>). 
		 To match default elements in a non-null namespace, you either have to refer to a particular element using 
		 a form such as <codeph>~~</codeph></p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createNSResolver"><linktext>MDC - Document.createNSResolver()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createNSResolver"><linktext>W3C - XPathEvaluator.createNSResolver()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:evaluate"><apiName>evaluate</apiName><shortdesc>
		 
		 Evaluates an XPath expression string and returns a result of the specified type if possible.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The result of the evaluation of the XPath expression. For XPath 1.0 results, this object 
		 will be of type XPathResult.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>expression</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The XPath expression string to be parsed and evaluated.
		 </apiDesc></apiParam><apiParam><apiItemName>contextNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The context is context node for the evaluation of this XPath expression. 
		 If the XPathEvaluator was obtained by casting the Document then this must be owned by the same 
		 document and must be a Document, Element, Attribute, Text, CDATASection, Comment, 
		 ProcessingInstruction, or XPathNamespace  node. If the context node is a Text or a CDATASection, 
		 then the context is interpreted as the whole logical text node as seen by XPath, unless the node 
		 is empty in which case it may not serve as the XPath context.
		 </apiDesc></apiParam><apiParam><apiItemName>resolver</apiItemName><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier><apiDesc>The resolver permits translation of all prefixes, including the xml namespace 
		 prefix, within the XPath expression into appropriate namespace URIs. If this is specified as null, 
		 any namespace prefix within the expression will result in DOMException being thrown with the 
		 code NAMESPACE_ERR.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="Number"/><apiDesc>If a specific type is specified, then the result will be returned as the 
		 corresponding type. For XPath 1.0 results, this must be one of the codes of the XPathResult interface.
		 </apiDesc></apiParam><apiParam><apiItemName>result</apiItemName><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier><apiDesc>The result specifies a specific result object which may be reused and returned by 
		 this method. If this is specified as nullor the implementation does not reuse the specified result, 
		 a new result object will be constructed and returned. For XPath 1.0 results, this object will be 
		 of type XPathResult.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Evaluates an XPath expression string and returns a result of the specified type if possible.
		 
		 </apiDesc><example>
		 <codeblock>
		 var headings = document.evaluate("//h2", document, null, XPathResult.ANY_TYPE, null); 
		 /~~ Search the document for all h2 elements.  
		  ~~ The result will likely be an unordered node iterator. ~~/
		 var thisHeading = headings.iterateNext(); 
		 var alertText = "Level 2 headings in this document are:\n";
		 while (thisHeading) {
		 	alertText += thisHeading.textContent + "\n";
		 	thisHeading = headings.iterateNext();
		 }
		 alert(alertText); // Alerts the text of all h2 elements</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.evaluate"><linktext>MDC - Document.evaluate()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-evaluate"><linktext>W3C - XPathEvaluator.evaluate()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:execCommand"><apiName>execCommand</apiName><shortdesc>
		 When an HTML document has been switched to designMode, the document object exposes the execCommand 
		 method which allows one to run commands to manipulate the contents of the editable region.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>aCommandName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the command 
		 </apiDesc></apiParam><apiParam><apiItemName>aShowDefaultUI</apiItemName><apiType value="Boolean"/><apiDesc>Whether the default user interface should be shown. This is not implemented in Mozilla.
		 </apiDesc></apiParam><apiParam><apiItemName>aValueArgument</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Some commands (such as insertimage) require an extra value argument (the image's url). 
		 Pass an argument of null if no argument is needed.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 When an HTML document has been switched to designMode, the document object exposes the execCommand 
		 method which allows one to run commands to manipulate the contents of the editable region. Most 
		 commands affect the document's selection (bold, italics, etc), while others insert new elements 
		 (adding a link) or affect an entire line (indenting). When using contentEditable, calling execCommand 
		 will affect the currently active editable element.
		 
		 </apiDesc><example>
		 <codeblock>
		 //HTML:
		 &lt;button onclick="doRichEditCommand('bold')" style="font-weight:bold;"&gt;B&lt;/button&gt;
		 
		 //JavaScript:
		 function doRichEditCommand(aName, aArg){
		 	getIFrameDocument('editorWindow').execCommand(aName,false, aArg);
		 	document.getElementById('editorWindow').contentWindow.focus()
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752577%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::execCommand Method</linktext></link><link href="http://developer.mozilla.org/En/Document.execCommand"><linktext>MDC - Document.execCommand()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:execCommandShowHelp"><apiName>execCommandShowHelp</apiName><shortdesc>
		 Displays help information for the given command identifier.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>aCommandName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Contains an identifier of a command. It can be any command identifier given in the list of  Command Identifiers.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Displays help information for the given command identifier.
		  
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752578%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::execCommandShowHelp Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/document.execCommandShowHelp"><linktext>MDC - Document.execCommandShowHelp()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:fireEvent"><apiName>fireEvent</apiName><shortdesc>
		 Fires a specified event on the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Event fired successfully
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>String that specifies the name of the event to fire.
		 </apiDesc></apiParam><apiParam><apiItemName>event</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Object that specifies the event object from which to obtain event object properties.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Fires a specified event on the object.
		 
		 <p>If the event being fired cannot be cancelled, fireEvent always returns true.</p>
		 
		 <p>Regardless of their values specified in the event object, the values of the 
		 four event properties—cancelBubble, returnValue, srcElement, and type—are 
		 automatically initialized to the values shown in the following table.</p> 
		 
		 <ul>
		 <li>cancelBubble : false</li>
		 <li>returnValue : true</li>
		 <li>srcElement : element on which the event is fired</li>
		 <li>type : name of the event that is fired</li>
		 </ul>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536423%28VS.85%29.aspx"><linktext>MSDN - fireEvent Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:focus"><apiName>focus</apiName><shortdesc>
		 Causes the element to receive the focus and executes the code specified by the  onfocus event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Causes the element to receive the focus and executes the code specified by the  onfocus event. 
		 
		 <p><b>Note (IE):</b> This method raises the onfocus event. The effect depends on the object calling 
		 the method. When called for child windows (such as those created with the  open method of a  window object), 
		 focus brings the target window to the foreground.</p>
		 
		 <p><b>Note (IE):</b> Windows Internet Explorer 8 and later. The focus method no longer brings child windows 
		 (such as those created with the open method) to the foreground. Child windows now request focus from the user, 
		 usually by flashing the title bar. To directly bring the window to the foreground, add script to the child window 
		 that calls the focus method of its window object.</p>
		 
		 <p><b>Note:</b> Internet Explorer 7 and later. For security reasons, child windows will only respond to 
		 the focus method when the following conditions are true:
		 <ul>
		 <li>The child window does not have multiple tabs open.</li>
		 <li>The focus method was not triggered by a double-click action.</li>
		 </ul>
		 If any of these conditions are true, the child window ignores the focus event.
		 </p>
		 
		 <p><b>Note:</b> As of Microsoft Internet Explorer 5, elements that expose the focus method must have the TABINDEX attribute set.</p>
		 
		 <p><b>Note:</b> Elements cannot receive focus until the document finishes loading.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536425%28VS.85%29.aspx"><linktext>MSDN - focus Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:getBoxObjectFor"><apiName>getBoxObjectFor</apiName><shortdesc>
		 This particular method was a way for XUL elements to efficiently determine their position, amongst other things.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The dimensions of the element
		 
		 </apiDesc><apiOperationClassifier>gecko:nsIBoxObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>dom.core:Element</apiOperationClassifier><apiDesc>Target element
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This particular method was a way for XUL elements to efficiently determine their position, amongst other things. 
		 A couple of years ago this feature started to be used by the general web-developer world. This was quickly 
		 realized to be a major mistake.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.getBoxObjectFor"><linktext>MDC - Document.getBoxObjectFor()</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=340571"><linktext>Bug 340571</linktext></link><link href="http://ejohn.org/blog/the-getboxobjectfor-apocalypse/"><linktext>John Resig - The getBoxObjectFor Apocalypse</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:getElementsByClassName"><apiName>getElementsByClassName</apiName><shortdesc>
		 Returns a set of elements with the given class name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A live NodeList object containing all the elements in the document, in tree order, that have 
		 all the classes specified in that argument, having obtained the classes by splitting a string on spaces. 
		 If there are no tokens specified in the argument, then returns an empty NodeList.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>classNames</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>An unordered set of unique space-separated tokens representing classes.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a set of elements with the given class name. When called on the document object, the 
		 complete document is searched, including the root node. You may also call getElementsByClassName 
		 on any element; it will return only elements under the specified root element with the given class name. 
		 
		 </apiDesc><example>
		 <p>Get all elements that have a class of 'test'</p>
		 
		 <codeblock>document.getElementsByClassName('test')</codeblock>
		 
		 <p>Get all elements that have a class of 'red' and 'test'</p>
		 
		 <codeblock>document.getElementsByClassName('red test')</codeblock>
		 
		 <p>Get all elements that have a class of 'test', inside of an element that has the ID of 'main'</p>
		 
		 <codeblock>document.getElementById('main').getElementsByClassName('test')</codeblock>
		 
		 <p>And if we go ahead and add in <xref href="http://developer.mozilla.org/en/New_in_JavaScript_1.6" rel="internal">JavaScript 1.6</xref>'s Array extras, we can do some really-cool matches.</p>
		 
		 <p>Find all div elements that have a class of 'test'</p>
		 
		 <codeblock>
		 Array.filter( document.getElementsByClassName('test'), function(elem) {
		 	return elem.nodeName == 'DIV';
		 });</codeblock>
		 
		 <p>Find all elements that have a class of 'test' (as do their parent element)</p>
		 
		 <codeblock>
		 var test = document.getElementsByClassName('test');
		 Array.filter( test, function(elem){
		 	return Array.indexOf( test, elem.parentNode ) &gt; -1;
		 });</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.getElementsByClassName"><linktext>MDC - Document.getElementsByClassName()</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-getelementsbyclassname"><linktext>WHATWG - HTMLDocument.getElementsByClassName()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:getElementsByName"><apiName>getElementsByName</apiName><shortdesc>
		 Returns a list of elements with a given name in the (X)HTML document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The matching elements.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>elementName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name attribute value for an element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a list of elements with a given name in the (X)HTML document. 
		 
		 </apiDesc><example>
		 <codeblock>// return some of the forms 
		 //&lt;form name="up"&gt;&lt;input type="text"/&gt;&lt;/form&gt; 
		 //&lt;form name="up"&gt;&lt;input type="text"/&gt;&lt;/form&gt; 
		 //&lt;form name="down"&gt;&lt;input type="text"/&gt;&lt;/div&gt; 
		 //&lt;form name="down"&gt;&lt;input type="text"/&gt;&lt;/div&gt; 
		 
		 up_forms = document.getElementsByName("up"); 
		 dump(up_forms.item(0).tagName); // returns "div"</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536438%28VS.85%29.aspx"><linktext>MSDN - getElementsByName Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.getElementsByName"><linktext>MDC - Document.getElementsByName()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-71555259"><linktext>W3C - HTMLDocument.getElementsByName()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:getSelection"><apiName>getSelection</apiName><shortdesc>
		 Return the contents of selected text in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The selected text
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Return the contents of selected text in the current document.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;INPUT TYPE="BUTTON" NAME="selectString" VALUE="Show 
		 any highlighted text" onClick="alert('The following text is 
		 selected:\n'+document.getSelection());"&gt; </codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.getSelection"><linktext>MDC - Document.getSelection()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:hasFocus"><apiName>hasFocus</apiName><shortdesc>
		 The hasFocus method returns true if the focus is currently located anywhere inside the specified document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns true if the document has focus; otherwise, returns false.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 The hasFocus method returns true if the focus is currently located anywhere inside the specified document.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536447%28VS.85%29.aspx"><linktext>MSDN - hasFocus Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.hasFocus"><linktext>MDC - Document.hasFocus()</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-hasfocus"><linktext>WHATWG - HTMLDocument.hasFocus()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:open"><apiName>open</apiName><shortdesc>
		 Open a document stream for writing.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the new  document object or the  window object. Use this reference to access properties and methods of the new document or window.
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiDefaultValue>text/html (Currently the only MIME type supported for this method.)
		 </apiDefaultValue><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>When a new document is opened, <codeph>url</codeph> is a String that specifies a MIME type for the document. 
		 When a new window is opened, <codeph>url</codeph> is a String that specifies the URL to render in the new window. If a <codeph>url</codeph> 
		 is not specified, a new window with about:blank is displayed.
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	Optional. When a new document is opened, specify the String replace for <codeph>name</codeph> to specify 
		 that the new document replaces the current document in the history list. If the replace value is not specified 
		 when you open a document, a new entry is added to the history list. When a window is opened, this is a String 
		 that specifies the name of the window. The value of this parameter can be specified as the value of the  TARGET 
		 attribute for a  form or an  a element. This value defines this new window as the location to load a document. 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>replace</entry><entry>This value is only used to open a new document, and specifies that the new document replaces the current entry in the history list. </entry>
		 	</row><row>
		 		<entry>_blank</entry><entry>When a window is opened, the <codeph>url</codeph> is loaded into a new, unnamed window.</entry>
		 	</row><row>
		 		<entry>_parent</entry><entry>When a new window is opened, the <codeph>url</codeph> is loaded into the current frame's parent. If the frame has no parent, this value acts as the value _self. </entry>
		 	</row><row>
		 		<entry>_search</entry><entry>Disabled in Windows Internet Explorer 7, see  Security and Compatibility in Internet Explorer 7 for details. Otherwise, when a window is opened, the <codeph>url</codeph> is opened in the browser's search pane in Microsoft Internet Explorer 5 or later. </entry>
		 	</row><row>
		 		<entry>_self</entry><entry>When a window id opened, the current document is replaced with the specified <codeph>url</codeph>.</entry>
		 	</row><row>
		 		<entry>_top</entry><entry><codeph>url</codeph> replaces any framesets that are loaded. If there are no framesets defined, this value acts as the _self value.</entry>
		 	</row><row>
		 		<entry>_media</entry><entry>The <codeph>url</codeph> is loaded in the Media Bar in Internet Explorer 6. Windows XP Service Pack 2 (SP2) and later. This feature is no longer supported. By default the <codeph>url</codeph> is loaded into a new browser window or tab.</entry>
		 	</row></tbody></tgroup></adobetable>
		 </apiDesc></apiParam><apiParam><apiItemName>features</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	Optional. A list of comma-separated items. Each item consists of an option and a value, separated 
		 by an equals sign (=), for example, "fullscreen=yes, toolbar=yes". The following features are supported.
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>channelmode = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display the window in theater mode. The default is no. Internet Explorer 7. channelmode = { yes | 1 } overrides the height value, the width value, the top value, and the left value. When active, the Navigation Bar is hidden, and the Title Bar is visible. The Channel Band is no longer supported in Internet Explorer 7. Prior to Internet Explorer 7 channelmode = { yes | 1 } displays the Channel Band in theatre mode. </entry>
		 	</row><row>
		 		<entry>directories = { yes | no | 1 | 0 }</entry><entry>Specifies whether to add directory buttons. The default is yes. Internet Explorer 7. This feature is no longer supported. </entry>
		 	</row><row>
		 		<entry>fullscreen = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display the browser in full-screen mode. The default is no. Use full-screen mode carefully. Because this mode hides the browser's title bar and menus, you should always provide a button or other visual clue to help the user close the window. ALT+F4 closes the new window. Internet Explorer 7. A window in full-screen mode does not have to be in theatre mode. Prior to Internet Explorer 7, a window in full-screen mode must in theater mode (channelmode).</entry>
		 	</row><row>
		 		<entry>height = number</entry><entry>Internet Explorer 7. Sets the height of the window in pixels. The minimum value is 150, and specifies the minimum height of the browser content area. Prior to Internet Explorer 7, the minimum height value is 100. </entry>
		 	</row><row>
		 		<entry>left = number</entry><entry>Specifies the left position, in pixels. This value is relative to the upper-left corner of the screen. The value must be greater than or equal to zero.</entry>
		 	</row><row>
		 		<entry>location = { yes | no | 1 | 0 }</entry><entry>Internet Explorer 7. Specifies whether to display the navigation bar. The default is yes. Prior to Internet Explorer 7, this feature specifies whether to display the address bar. The Back command, the Forward command, and the Stop command are now located in the Navigation bar. Prior to Internet Explorer 7, navigation commands were located in the toolbar.</entry>
		 	</row><row>
		 		<entry>menubar = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display the menu bar. The default is yes. Internet Explorer 7. By default the menu bar is hidden, unless it is revealed by the ALT key. menubar = { no | 0 } prohibits the menubar from appearing even when the ALT key is pressed. The combination of menubar = { no | 0 } and toolbar = { no | 0 } hides the toolbar and disables any additional third-party user interfaces. </entry>
		 	</row><row>
		 		<entry>resizable = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display resize handles at the corners of the window. The default is yes. Internet Explorer 7. resizable = { no | 0 } disables tabs in a new window.</entry>
		 	</row><row>
		 		<entry>scrollbars = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display horizontal and vertical scroll bars. The default is yes.</entry>
		 	</row><row>
		 		<entry>status = { yes | no | 1 | 0 }</entry><entry>Specifies whether to add a Status Bar at the bottom of the window. The default is yes.</entry>
		 	</row><row>
		 		<entry>titlebar = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display a Title Bar for the window. The default is yes. Internet Explorer 5.5 and later. This feature is no longer supported. The Title Bar remains visible unless the fullscreen sFeature is active. This parameter is ignored prior to Internet Explorer 5.5. It applies only if the calling application is an HTML Application or a trusted dialog box.</entry>
		 	</row><row>
		 		<entry>toolbar = { yes | no | 1 | 0 }</entry><entry>Internet Explorer 7. Specifies whether to display the browser command bar, making buttons such as Favorites Center, Add to Favorites, and Tools available. The default is yes. The combination of menubar = { no | 0 } and toolbar = { no | 0 } turns off the Toolbar and any additional third-party user interfaces. Prior to Internet Explorer 7, the toolbar sFeature specifies whether to display the browser toolbar, making buttons such as Back, Forward, and Stop available. </entry>
		 	</row><row>
		 		<entry>top = number</entry><entry>Specifies the top position, in pixels. This value is relative to the upper-left corner of the screen. The value must be greater than or equal to zero.</entry>
		 	</row><row>
		 		<entry>width = number</entry><entry>Internet Explorer 7. Sets the width of the window in pixels. The minimum value is 250, and specifies the minimum width of the browser content area. Prior to Internet Explorer 7, the minimum height value is 100. </entry>
		 	</row></tbody></tgroup></adobetable>
		 </apiDesc></apiParam><apiParam><apiItemName>replace</apiItemName><apiType value="Boolean"/><apiDesc>Optional. When the <codeph>url</codeph> is loaded into the same window, this Boolean parameter specifies whether the <codeph>url</codeph> creates a new entry or replaces the current entry in the window's history list. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Open a document stream for writing. If a document exists in the target, 
		 this method clears it.
		 
		 <p><b>Note (IE):</b> All params are for IE only</p>
		 
		 <p><b>Note:</b> This method and the ones following allow a user to add to or 
		 replace the structure model of a document using strings of unparsed 
		 HTML. At the time of writing alternate methods for providing similar 
		 functionality for both HTML and XML documents were being considered.</p>
		 
		 <p><b>Note (Mozilla):</b> Also, an automatic document.open() call happens when 
		 document.write() is called after the page has loaded, but that's not defined in the W3C specification. </p>
		 
		 <p><b>IE Style</b></p>
		 
		 <p>Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the 
		 <codeph>url</codeph> parameter and the <codeph>name</codeph> parameter to collect the output of the  write method and the  writeln method.</p>
		 
		 </apiDesc><example>
		 W3C / Mozilla Example
		 <codeblock>
		 // In this example, the document contents are 
		 // overwritten as the document 
		 // is reinitialized on open(). 
		 document.write("&lt;html&gt;&lt;p&gt;remove me&lt;/p&gt;&lt;/html&gt;"); 
		 document.open(); 
		 // document is empty.</codeblock>
		 
		 <p><b>IE Style</b></p>
		 <p>The following example shows how to use the open method to replace the current document with a new document and display the HTML markup contained in the variable sMarkup. </p>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;First Document&lt;/title&gt;
		 &lt;script&gt;
		 function replace(){
		 	var oNewDoc = document.open("text/html", "replace");
		 	var sMarkup = "&lt;html&gt;&lt;head&gt;&lt;title&gt;New Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;Hello, world&lt;/body&gt;&lt;/html&gt;";
		 	oNewDoc.write(sMarkup);
		 	oNewDoc.close();
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body&gt;
		 &lt;h1&gt;I just want to say&lt;/h1&gt;&lt;br&gt;
		 &lt;!--Button will call the replace function and replace the current page with a new one--&gt;
		 &lt;input type ="button" value = "Finish Sentence" onclick="replace();"&gt;
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536652%28VS.85%29.aspx"><linktext>MSDN - open Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.open"><linktext>MDC - Document.open()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-72161170"><linktext>W3C - HTMLDocument.open()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandEnabled"><apiName>queryCommandEnabled</apiName><shortdesc>
		 Determines whether the given command can be executed on the document in its current state.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the given command can be executed on the document in its current state. 
		 
		 <p><b>Note (IE):</b> Using  queryCommandEnabled ("delete") on a  TextRange object returns true, while  
		 queryCommandEnabled ("delete") on a  document object returns false. However,  execCommand ("delete") can still 
		 be used to delete the selected text. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536676%28VS.85%29.aspx"><linktext>MSDN - queryCommandEnabled Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandEnabled()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandIndeterm"><apiName>queryCommandIndeterm</apiName><shortdesc>
		 Determines whether the current selection is in an indetermined state.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the current selection is in an indetermined state. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752630%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandIndeterm Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandIndeterm()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandState"><apiName>queryCommandState</apiName><shortdesc>
		 Determines whether the given command has been executed on the current selection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if the command has been completed; false if the command has not completed; null if the state cannot be accurately determined.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the given command has been executed on the current selection. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752631%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandState Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandState()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandSupported"><apiName>queryCommandSupported</apiName><shortdesc>
		 Returns a Boolean value that indicates whether the current command is supported on the current range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a Boolean value that indicates whether the current command is supported on the current range.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752632%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandSupported Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandSupported()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandText"><apiName>queryCommandText</apiName><shortdesc>
		 Retrieves the string associated with a command.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The text associated with the command will be stored. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves the string associated with a command.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752633%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandText Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandText()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandValue"><apiName>queryCommandValue</apiName><shortdesc>
		 Determines the current value of the document, range, or current selection for the given command.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines the current value of the document, range, or current selection for the given command. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752634%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandValue Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandValue()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:recalc"><apiName>recalc</apiName><shortdesc>
		 Recalculates all dynamic properties in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiDefaultValue>false
		 
		 </apiDefaultValue><apiParam><apiItemName>forceAll</apiItemName><apiType value="Boolean"/><apiDesc>Optional. A Boolean that specifies one of the following values. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Recalculates all dynamic properties in the current document.
		 
		 <p><b>Note:</b> Implicit dependencies, internal property changes, and related properties can cause 
		 some expressions not to recalculate, even though the referenced properties might have changed. For example, 
		 resizing the main window changes the  clientWidth property. Expressions that reference  clientWidth might not 
		 be recalculated, because the change might not be recognized.</p>
		 
		 <p><b>Note:</b> Implicit dependencies refer to properties that can be modified by changes in other 
		 properties. For example, the  height property of a  div object implicitly depends on the  innerHTML property of 
		 the div object. However, if an expression references the height property, a change in the innerHTML property, 
		 which might modify the height, does not cause a recalculation of the expression on a subsequent call to recalc.</p>
		 
		 <p><b>Note:</b> Related properties can access or manipulate data or behaviors through one or more other 
		 properties. For example,  pixelLeft and  posLeft can set or get the left position of the element. However, if an 
		 expression that references pixelLeft and posLeft is modified, the expression might not be recalculated on subsequent 
		 calls to recalc.</p>
		 
		 <p><b>Note:</b> Related properties that can cause this behavior include the following:  clientHeight,  
		 clientLeft,  clientTop, clientWidth, height,  left,  offsetHeight,  offsetLeft,  offsetTop,  offsetWidth,  
		 pixelHeight, pixelLeft,  pixelTop,  pixelWidth,  posHeight, posLeft,  posTop,  posWidth, and  top.</p>
		 
		 <p><b>Note:</b> To force the recalculation of all expressions, refer to the same property name or manually 
		 call recalc(true).</p>
		 
		 </apiDesc><example>
		 The following example uses the recalc method in HTML and script to help create a timer. If the calls to recalc are commented out, the timer does not work correctly.
		 <codeblock>
		 &lt;HTML&gt;
		 &lt;HEAD&gt; 
		 &lt;TITLE&gt;Recalc Example&lt;/TITLE&gt;
		 &lt;STYLE&gt;
		 BUTTON {font-size:14;width:150}
		 &lt;/STYLE&gt;
		 &lt;SCRIPT&gt;
		 
		 
		 var timerID = null;
		 var seconds = 0;
		 
		 //
		 // This function is called when the page loads. 
		 // It sets up a couple of expressions.
		 //
		 function init() {
		 	A.style.setExpression("width","seconds0");
		 	B.setExpression("innerText","seconds.toString()");
		 }
		 
		 //
		 // This function gets calls once a second and updates the seconds
		 // variable. Notice that without recalc, the expressions aren't
		 // updated until the mouse is moved.
		 //
		 function timer() {
		 	seconds++;
		 	document.recalc();
		 }
		 
		 //
		 // starts the timer
		 //
		 function starttimer() {
		 	if (timerID == null) {
		 		timerID = setInterval("timer()", 1000);
		 		startButton.disabled = true;
		 		stopButton.disabled = false;
		 	}
		 }
		 
		 //
		 // stops the timer
		 //
		 function stoptimer() {
		 	if (timerID != null) {
		 		clearInterval(timerID);
		 		timerID = null;
		 		startButton.disabled = false;
		 		stopButton.disabled = true;
		 	}
		 }
		 
		 //
		 //  resets the timer
		 //
		 function resettimer() {
		 	seconds = 0;
		 }
		 
		 &lt;/SCRIPT&gt;
		 &lt;/HEAD&gt;
		 &lt;BODY onload="init()"&gt;
		 
		 &lt;DIV id=A style="background-color:lightblue" &gt;&lt;/DIV&gt;
		 &lt;DIV id=B style="color:hotpink;font-weight:bold"&gt;&lt;/DIV&gt;
		 
		 &lt;BR&gt;
		 
		 &lt;BUTTON id="startButton" onclick="starttimer()"&gt;Start the Timer&lt;/BUTTON&gt;&lt;/BR&gt;
		 &lt;BUTTON id="stopButton" DISABLED="true" onclick="stoptimer()"&gt;Stop the Timer&lt;/BUTTON&gt;&lt;BR&gt;
		 &lt;BUTTON id="resetButton" onclick="resettimer()"&gt;Reset the Timer&lt;/BUTTON&gt;&lt;BR&gt;
		 
		 &lt;P style="width:320;color:peru;background-color:wheat"&gt;
		 
		 This example illustrates the use of document.recalc().  If the calls
		 to recalc are omitted in this example, expressions will not be updated 
		 until the mouse is moved.
		 &lt;/P&gt;
		 
		 &lt;/BODY&gt;
		 &lt;/HTML&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536689%28VS.85%29.aspx"><linktext>MSDN - releaseCapture Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:releaseCapture"><apiName>releaseCapture</apiName><shortdesc>
		 Removes mouse capture from the object in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes mouse capture from the object in the current document.
		 
		 <p>For releaseCapture to have an effect, you must set mouse capture through 
		 the setCapture method.</p>
		 
		 <p>You can invoke the releaseCapture method on the document object. The 
		 releaseCapture method makes it unnecessary to determine which element 
		 has capture to programmatically release it. Other actions that release 
		 document capture include displaying a modal dialog box and switching 
		 focus to another application or browser window.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;BODY onload="oOwnCapture.setCapture();" onclick="document.releaseCapture();"&gt;
		 &lt;DIV ID=oOwnCapture onmousemove="oWriteLocation.value = event.clientX + event.clientY"; onlosecapture="alert(event.srcElement.id + ' has lost mouse capture.')"&gt;
		 &lt;TEXTAREA ID=oWriteLocation COLS=2&gt;&lt;/TEXTAREA&gt;
		 &lt;/DIV&gt;
		 &lt;HR&gt;
		 &lt;DIV ID=oNoCapture&gt;
		 &lt;P&gt;Click the document to invoke the releaseCapture method.&lt;/P&gt;
		 &lt;/DIV&gt;
		 &lt;/BODY&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536689%28VS.85%29.aspx"><linktext>MSDN - releaseCapture Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:releaseEvents"><apiName>releaseEvents</apiName><shortdesc>
		 The opposite of document.captureEvents( ), this method turns off event capture at the document level for 
		 one or more specific events named in the parameter list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>eventTypeList</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A comma-separated list of case-sensitive event types as derived from the available 
		 Event object constants, such as Event.CLICK or Event.MOUSEMOVE.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The opposite of document.captureEvents( ), this method turns off event capture at the document level for 
		 one or more specific events named in the parameter list.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.releaseEvents"><linktext>MDC - Document.releaseEvents()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:removeNode"><apiName>removeNode</apiName><shortdesc>
		 Removes the object from the document hierarchy.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the object that is removed.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>removeChildren</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>If the childNodes collection of the object is removed
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes the object from the document hierarchy.
		 
		 <p>This property is accessible at run time. If elements are removed at 
		 run time, before the closing tag is parsed, areas of the document 
		 might not render.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536708%28VS.85%29.aspx"><linktext>MSDN - removeNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:replaceNode"><apiName>replaceNode</apiName><shortdesc>
		 Replaces the object with another element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the object that is replaced.
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>newNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the new element to replace the object.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replaces the object with another element.
		 
		 <p>When a node is replaced, all values that are associated with the 
		 replaced object are removed. For example, if a b object is replaced 
		 with an i object, any attributes and text between the opening and 
		 closing tags are also replaced. To preserve these values, copy them 
		 to the new element before the original object is replaced.</p>
		 
		 <p>This method is accessible at run time. If elements are removed at run 
		 time before the closing tag is parsed, areas of the document might 
		 not render.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;SCRIPT&gt;
		 function fnReplace() {
		 var sPreserve = oList.innerHTML;
		 var oNewNode = document.createElement("OL");
		 oList.replaceNode(oNewNode);
		 oNewNode.innerHTML = sPreserve;
		 }
		 &lt;/SCRIPT&gt;
		 
		 &lt;UL ID = oList&gt;
		 &lt;LI&gt;List Item 1
		 &lt;LI&gt;List Item 2
		 &lt;LI&gt;List Item 3
		 &lt;LI&gt;List Item 4
		 &lt;/UL&gt;
		 &lt;INPUT TYPE = button VALUE = "Replace List" onclick = "fnReplace()"&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536719%28VS.85%29.aspx"><linktext>MSDN - replaceNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:routeEvent"><apiName>routeEvent</apiName><shortdesc>
		 Used inside an event handler function, this method lets the event pass to its intended target object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>dom.events:Event</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 Used inside an event handler function, this method lets the event pass to its intended target object.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.routeEvent"><linktext>MDC - Document.routeEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:swapNode"><apiName>swapNode</apiName><shortdesc>
		 Exchanges the location of two objects in the document hierarchy.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the object that invoked the method.
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>node</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the existing element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Exchanges the location of two objects in the document hierarchy.
		 
		 <p>This method is accessible at run time. If elements are removed at 
		 run time, before the closing tag is parsed, areas of the document 
		 might not render.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 		function fnSwap() {
		 			oList.children(0).swapNode(oList.children(1));
		 		}
		 &lt;/script&gt;
		 
		 &lt;ul ID = oList&gt;
		 		&lt;li&gt;List Item 1&lt;/li&gt;
		 		&lt;li&gt;List Item 2&lt;/li&gt;
		 		&lt;li&gt;List Item 3&lt;/li&gt;
		 		&lt;li&gt;List Item 4&lt;/li&gt;
		 &lt;/ul&gt;
		 &lt;input type=button value="Swap List" onclick="fnSwap()"&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536774%28VS.85%29.aspx"><linktext>MSDN - swapNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:write"><apiName>write</apiName><shortdesc>
		 Write a string of text to a document stream opened by open().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>text</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The string to be parsed into some structure in the 
		 document structure model.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Write a string of text to a document stream opened by open(). Note that 
		 the function will produce a document which is not necessarily driven by 
		 a DTD and therefore might be produce an invalid result in the context 
		 of the document.
		 
		 <p><b>Note (Mozilla):</b> Writing to a document that has already loaded without calling 
		 document.open() will automatically perform a document.open call. Once you have finished 
		 writing, it is recommended to call document.close(), to tell the browser to finish loading 
		 the page. The text you write is parsed into the document's structure model. In the example 
		 above, the h1 element becomes a node in the document.</p>
		 
		 <p><b>Note (Mozilla):</b> If the document.write() call is embedded directly in the HTML code, 
		 then it will not call document.open(). For example:
		 <codeblock>
		 &lt;div&gt; 
		 	&lt;script type="text/javascript"&gt; 
		 		document.write("&lt;h1&gt;Main title&lt;/h1&gt;") 
		 	&lt;/script&gt; 
		 &lt;/div&gt;</codeblock>
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 &lt;title&gt;write example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function newContent() {
		 	alert("load new content");
		 	document.open();
		 	document.write("&lt;h1&gt;Out with the old - in with the new!&lt;/h1&gt;");
		 	document.close();
		 }
		 
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onload="newContent();"&gt;
		 	&lt;p&gt;Some original document content.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536782%28VS.85%29.aspx"><linktext>MSDN - write Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.write"><linktext>MDC - Document.write()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-75233634"><linktext>W3C - HTMLDocument.write()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:writeln"><apiName>writeln</apiName><shortdesc>
		 Write a string of text followed by a newline character to a document 
		 stream opened by open().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>text</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The string to be parsed into some structure in the 
		 document structure model.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Write a string of text followed by a newline character to a document 
		 stream opened by open(). Note that the function will produce a 
		 document which is not necessarily driven by a DTD and therefore 
		 might be produce an invalid result in the context of the document.
		 
		 <p><b>Note:</b> document.writeln is the same as document.write but adds a newline. </p>
		 
		 </apiDesc><example>
		 <codeblock>document.writeln("&lt;p&gt;enter password:&lt;/p&gt;"); </codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536783%28VS.85%29.aspx"><linktext>MSDN - writeln Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.writeln"><linktext>MDC - Document.writeln()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-35318390"><linktext>W3C - HTMLDocument.writeln()</linktext></link></related-links></apiOperation><apiValue id="dom.html:HTMLDocument:URL:get"><apiName>URL</apiName><shortdesc>
		 Returns the URL of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URL of the current document. 
		 
		 <p><b>Note:</b> URL is a replacement for the DOM Level 0 document.location.href property. 
		 However document.URL is not settable, unlike document.location.href. </p>
		 
		 </apiDesc><example>
		 <codeblock>var currentURL = document.URL; alert(currentURL);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534708%28VS.85%29.aspx"><linktext>MSDN - URL Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.URL"><linktext>MDC - Document.URL</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-46183437"><linktext>W3C - HTMLDocument.URL</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:URLUnencoded:get"><apiName>URLUnencoded</apiName><shortdesc>
		 Gets the URL for the  document, stripped of any character encoding.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets the URL for the  document, stripped of any character encoding.
		 
		 </apiDesc><example>
		 The following illustrates the difference between the value returned by the URLUnencoded property and the value returned by the  URL property of the document.
		 <codeblock>
		 &lt;script&gt;
		 function window.onload() {
		 	oURL.innerText = document.URL;
		 	oURL2.innerText = document.URLUnencoded;
		 }			
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534709%28VS.85%29.aspx"><linktext>MSDN - URLUnencoded Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:XSLDocument:get"><apiName>XSLDocument</apiName><shortdesc>
		 Retrieves a reference to the top-level node of the Extensible Stylesheet Language (XSL) document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMObject</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a reference to the top-level node of the Extensible Stylesheet Language (XSL) document.
		 
		 <p><b>Note (IE):</b> You can use the XSLDocument property to access the Document Object Model (DOM) for the 
		 XSL style sheet. For more information, refer to the  XML DOM overview. </p>
		 
		 </apiDesc><example>
		 This example uses the XSLDocument property to access the DOM for the XSL and change attributes representing sort keys.
		 <codeblock>
		 function sort(key) {
		 	// Find the "order-by" attributes in the style sheet.
		 	var s = document.XSLDocument.selectNodes("~~/xsl:template[&amp;64;match='menu']
		 	                                          //xsl:apply-templates/&amp;64;order-by");
		 
		 	// Replace the values with the new sort key.
		 	for (var i = s.nextNode(); i != null; i = s.nextNode()) {
		 		i.value = key;
		 	}
		 
		 	// Find the subset of the document we need to update.
		 	var d = document.XMLDocument.selectSingleNode("story/menu");
		 
		 	// Apply the style sheet to the subset, and update the display.
		 	menu.innerHTML = d.transformNode(document.XSLDocument);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535163%28VS.85%29.aspx"><linktext>MSDN - XSLDocument Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:activeElement:get"><apiName>activeElement</apiName><shortdesc>
		 Returns the currently focused element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the currently focused element.
		 
		 <p>If no element in the Document is focused, this will return the body element.</p>
		 
		 <p><b>Note:</b> This attribute is part of the in-development HTML 5 specification.</p>
		 
		 <p><b>Note (IE):</b> For versions of Microsoft Internet Explorer 5 and later, the activeElement 
		 property is not defined until a document is loaded. A value of null is given for this property, if it 
		 is accessed inline during the loading of a document. This property can be accessed in the  onload event 
		 handler function. </p>
		 
		 <p><b>Note (IE):</b> Internet Explorer 4.0 returns  body as the activeElement when it is accessed 
		 inline during the loading of a document.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533065%28VS.85%29.aspx"><linktext>MSDN - activeElement Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.activeElement"><linktext>MDC - Document.activeElement</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-activeelement"><linktext>WHATWG - HTMLDocument.activeElement</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:alinkColor:get"><apiName>alinkColor</apiName><shortdesc>
		 Returns or sets the color of an active link in the document body.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#0000FF" for IE / "#EE0000" for Mozilla
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Returns or sets the color of an active link in the document body. A link is active during 
		 the time between mousedown and mouseup events. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 <p><b>Note:</b> Gecko supports both alinkColor/:active and :focus . Internet Explorer 6 
		 and 7 support alinkColor/:active only for  HTML anchor (&lt;a&gt;) links and the behavior is the same as 
		 :focus under Gecko. There is no support for :focus in IE. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533071(VS.85).aspx"><linktext>MSDN - alinkColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.alinkColor"><linktext>MDC - Document.alinkColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:all:get"><apiName>all</apiName><shortdesc>
		 Returns a reference to the collection of elements contained by the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a reference to the collection of elements contained by the object.
		 
		 <p><b>Note:</b> The all collection includes one element object for each valid HTML tag. If a valid tag has a 
		 matching end tag, both tags are represented by the same element object.</p>
		 
		 <p><b>Note:</b> The collection returned by the document's all collection always includes a reference to 
		 the  HTML,  HEAD, and  TITLE objects regardless of whether the tags are present in the document. If the  BODY tag 
		 is not present, but other HTML tags are, a BODY object is added to the all collection.</p>
		 
		 <p><b>Note:</b> If the document contains invalid or unknown tags, the collection includes one element object 
		 for each. Unlike valid end tags, unknown end tags are represented by their own element objects. The order of the element 
		 objects is the HTML source order. Although the collection indicates the order of tags, it does not indicate hierarchy.</p>
		 
		 <p><b>Note:</b> The  name property only applies to some elements such as  form elements. If the vIndex is set to 
		 a string matching the value of a name property in an element that the name property does not apply, then that element will 
		 not be added to the collection.</p>
		 
		 </apiDesc><example>
		 This example, in Microsoft JScript (compatible with ECMA 262 language specification), shows how to display the names of all tags in the document in the order the tags appear in the document.
		 <codeblock>
		 for(i = 0; i &lt; document.all.length; i++) {
		 	alert(document.all(i).tagName);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537434%28VS.85%29.aspx"><linktext>MSDN - all Collection</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:anchors:get"><apiName>anchors</apiName><shortdesc>
		 A collection of all the anchor (A) elements in a document with a 
		 value for the name attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the anchor (A) elements in a document with a 
		 value for the name attribute.
		 
		 <p><b>Note:</b> For reasons of backwards compatibility, the returned 
		 set of anchors only contains those anchors created with the name attribute, not 
		 those created with the id attribute. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( document.anchors.length &gt;= 5 ) {
		 	dump("dump found too many anchors");
		 	window.location = "http://www.google.com";
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537435%28VS.85%29.aspx"><linktext>MSDN - anchors Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.anchors"><linktext>MDC - Document.anchors</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7577272"><linktext>W3C - HTMLDocument.anchors</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:applets:get"><apiName>applets</apiName><shortdesc>
		 A collection of all the OBJECT elements that include applets and 
		 APPLET (deprecated) elements in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the OBJECT elements that include applets and 
		 APPLET (deprecated) elements in a document.
		 
		 </apiDesc><example>
		 <codeblock>
		 // ( When you know the second applet is the one you want ) 
		 my_java_app = document.applets[1];</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537436%28VS.85%29.aspx"><linktext>MSDN - applets Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.appletsMDC"><linktext>- Document.applets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-85113862"><linktext>W3C - HTMLDocument.applets</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:background:get"><apiName>background</apiName><shortdesc>
		 URI of the background texture tile image.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI of the background texture tile image.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLDocument:baseURIObject:get"><apiName>baseURIObject</apiName><shortdesc>
		 baseURIObject returns the nsIURI object representing the document's URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIURI</apiValueClassifier></apiValueDef><apiDesc>
		 baseURIObject returns the nsIURI object representing the document's URI. 
		 
		 <p><b>Note (Mozilla):</b> This property exists on all nodes (HTML, XUL, SVG, MathML, etc.), 
		 but only if the script trying to use it has UniversalXPConnect privileges.</p>
		 
		 <p><b>Note (Mozilla):</b> This property may only be accessed from privileged code. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.baseURIObject"><linktext>MDC - Document.baseURIObject</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Gets/sets the background color of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#ffffff"
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the background color of the current document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533506%28VS.85%29.aspx"><linktext>MSDN - bgColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.bgColor"><linktext>MDC - Document.bgColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:body:get"><apiName>body</apiName><shortdesc>
		 The element that contains the content for the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLElement</apiValueClassifier></apiValueDef><apiDesc>
		 The element that contains the content for the document. In documents 
		 with BODY contents, returns the BODY element. In frameset documents, 
		 this returns the outermost FRAMESET element.
		 
		 <p><b>Note:</b> Though body is settable, setting a new body on a document 
		 will effectively remove all the current children of the existing &lt;/body&gt; element. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // in HTML: &lt;body id="oldBodyElement"&gt;&lt;/body&gt;
		 alert(document.body.id); // "oldBodyElement"
		 var aNewBodyElement = document.createElement("body");
		 aNewBodyElement.id = "newBodyElement";
		 document.body = aNewBodyElement;
		 alert(document.body.id); // "newBodyElement"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.body"><linktext>MDC - Document.body</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-56360201"><linktext>W3C - HTMLDocument.body</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:characterSet:get"><apiName>characterSet</apiName><shortdesc>
		 Returns the character encoding of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the character encoding of the current document. 
		 
		 <p><b>Note:</b> The character encoding is the character set used for rendering the document, which may be different 
		 from the encoding specified by the page (the user can override the encoding). </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.characterSet"><linktext>MDC - Document.characterSet</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:charset:get"><apiName>charset</apiName><shortdesc>
		 Sets or retrieves the character set used to encode the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves the character set used to encode the object.
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 6, This property now applies to the  
		 a,  link, and  script objects. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533553%28VS.85%29.aspx"><linktext>MSDN - charset Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:compatMode:get"><apiName>compatMode</apiName><shortdesc>
		 Indicates whether the document is rendered in Quirks mode or Strict mode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft/Mozilla"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Indicates whether the document is rendered in Quirks mode or Strict mode. 
		 
		 <p><b>Note:</b> Can either be "BackCompat" for Quirks mode or "CSS1Compat" for Strict mode.</p>
		 
		 <p><b>Note:</b> There is a third mode, Gecko's "Almost_Standards" Mode, which only differs from 
		 Strict mode in the layout of images inside table cells. This third mode is reported the same way as 
		 Strict mode: "CSS1Compat". </p>
		 
		 <p><b>Note (IE):</b> The compatMode property is deprecated in Internet Explorer 8 in favor of the  documentMode property.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if (document.compatMode == "BackCompat") {
		 	// use some quirky stuff
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533687%28VS.85%29.aspx"><linktext>MSDN - compatMode Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.compatMode"><linktext>MDC - Document.compatMode</linktext></link><link href="http://developer.mozilla.org/en/Gecko%27s_%22Almost_Standards%22_Mode"><linktext>MDC - Gecko's "Almost Standards" Mode</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:compatible:get"><apiName>compatible</apiName><shortdesc>
		 Retrieves the collection of user agents and versions declared in the X-UA-Compatible  meta tag.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the collection of user agents and versions declared in the X-UA-Compatible  meta tag. 
		 
		 <p><b>Note (IE):</b> This method is available in all compatibility modes. </p>
		 
		 </apiDesc><example>
		 The following script iterates through the collection of compatible user agents, and displays each on a separate line. 
		 <codeblock>
		 &lt;meta http-equiv="X-UA-Compatible" content="IE=8;FF=3;OtherUA=4" /&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 window.attachEvent('onload',function(e) {
		 var a = [];
		 var compat = document.compatible;
		 for (var i=0; i&lt;compat.length; i++) {
		 a.push(compat[i].userAgent + '=' + compat[i].version);
		 }
		 var o = document.getElementById('output');
		 o.innerHTML = a.join('&lt;br/&gt;');
		 });
		 &lt;/script&gt;
		 
		 &lt;div id="output"&gt;&lt;/div&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc196984%28VS.85%29.aspx"><linktext>MSDN - compatible Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:contentType:get"><apiName>contentType</apiName><shortdesc>
		 Returns the Content-Type from the HTTP headers of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the Content-Type from the HTTP headers of the document. 
		 
		 <p><b>Note (Mozilla):</b> The property returns the MIME property "Content-Type" set in the HTTP Header and not 
		 the META property set in the HEAD section of the document. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.contentType"><linktext>MDC - Document.contentType</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:cookie:get"><apiName>cookie</apiName><shortdesc>
		 Get and set the cookies associated with the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMHTML 1
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: If the new value does not adhere to the cookie syntax.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Get and set the cookies associated with the current document. 
		 
		 <codeblock>allCookies = document.cookie;</codeblock>
		 
		 <p><codeph>allCookies</codeph> is a string containing a semicolon-separated list of cookies (i.e. key=value pairs)</p>
		 
		 <codeblock>document.cookie = updatedCookie;</codeblock>
		 
		 <p><codeph>updatedCookie</codeph> is a string of form key=value. Note that you can only set/update a single cookie at a time using this method.</p>
		 
		 <p>Any of the following cookie attribute values can optionally follow the key-value pair, specifying 
		 the cookie to set/update, and preceded by a semi-colon separator: 
		 <ul>
		 	<li><codeph>;path=<i>path</i></codeph> (e.g., '/', '/mydir') If not specified, defaults to the current path of the current document location.</li>
		 	<li><codeph>;domain=<i>domain</i></codeph> (e.g., 'example.com', '.example.com' (includes all subdomains), 'subdomain.example.com') If not specified, defaults to the host portion of the current document location.</li>
		 	<li><codeph>;max-age=<i>max-age-in-seconds</i></codeph> (e.g., 600465 for a year)</li>
		 	<li><codeph>;expires=<i>date-in-GMTString-format</i></codeph> (could use Date.toGMTString; now obsolete) If not specified it wil expire at the end of session.</li>
		 	<li><codeph>;secure</codeph> (cookie to only be transmitted over secure protocol as http)</li>
		 </ul>
		 </p>
		 
		 <p><b>Note:</b> The cookie value string can use encodeURIComponent() to ensure that the string 
		 does not contain any commas, semicolons, or whitespace (which are disallowed in cookie values).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 document.cookie = "name=oeschger";
		 document.cookie = "favorite_food=tripe";
		 alert(document.cookie);
		 // displays: name=oeschger;favorite_food=tripe</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533693%28VS.85%29.aspx"><linktext>MSDN - cookie Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.cookie"><linktext>MDC - Document.cookie</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-8747038"><linktext>W3C - HTMLDocument.cookie</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:defaultCharset:get"><apiName>defaultCharset</apiName><shortdesc>
		 Gets the default character set from the current regional language settings.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets the default character set from the current regional language settings.
		 
		 <p><b>Note (Microsoft):</b> The value depends on the current regional language settings. 
		 For typical settings in North America, the value is windows-1252.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533553%28VS.85%29.aspx"><linktext>MSDN - defaultCharset Property</linktext></link><link href="http://msdn.microsoft.com/en-us/library/aa752010(VS.85).aspx"><linktext>MSDN - Charsets in Microsoft Internet Explorer 5</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:designMode:get"><apiName>designMode</apiName><shortdesc>
		 Sets or gets a value that indicates whether the document can be edited.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or gets a value that indicates whether the document can be edited.
		 
		 <p>Values can be:
		 <ul>
		 <li>On : Document can be edited. </li>
		 <li>Off|Inherit : Default. Document cannot be edited. </li>
		 </ul>
		 </p>
		 
		 <p><b>Note (Mozilla):</b> Gets/sets WYSYWIG editing capability of Midas. It can only be used for HTML documents.</p>
		 
		 <p><b>Note (Mozilla):</b> Midas is the code name for Gecko's built-in rich text editor. Midas can be enabled via 
		 JavaScript on an HTML document. When Midas is enabled, the document becomes editable by the user. Scripting for Midas is based 
		 on the DHTML commands supported by Internet Explorer.</p>
		 
		 <p><b>Note (Microsoft):</b> You can use the designMode property to put Windows Internet 
		 Explorer into a mode so that you can edit the current document.</p>
		 
		 <p><b>Note (Microsoft):</b> While the browser is in design mode, objects enter a UI-activated state when 
		 the user presses ENTER, clicks an object that has focus, or double-clicks the object. Objects that are
		 UI-activated have their own window in the document. You can modify the UI only when the object is in a 
		 UI-activated state.</p>
		 
		 <p><b>Note (Microsoft):</b> You cannot execute script when the value of the designMode property is set to On.</p>
		 
		 <p><b>Note:</b> Since an entire document becomes editable, authors often load the editable document into an 
		 IFRAME and do the bulk of the scripting in the parent document.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Simple Edit Box&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;iframe
		 			id="MidasForm"
		 			src="about:blank"
		 			onload="this.contentDocument.designMode='on';"
		 		&gt;&lt;/iframe&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533720%28VS.85%29.aspx"><linktext>MSDN - designMode Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.designMode"><linktext>MDC - Document.designMode</linktext></link><link href="http://developer.mozilla.org/en/Midas"><linktext>MDC - Midas</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:dir:get"><apiName>dir</apiName><shortdesc>
		 Sets or retrieves a value that indicates the reading order of the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves a value that indicates the reading order of the object. 
		 
		 <p>Values can be:
		 <ul>
		 <li>ltr : Default. Content flows from left to right.</li>
		 <li>rtl : Content flows from right to left.</li>
		 </ul>
		 </p>
		 
		 <p><b>Note:</b> The dir property does not affect alphanumeric characters in Latin documents. 
		 These characters always render ltr. However, the property does affect punctuation characters in Latin 
		 documents. For example, punctuation marks such as periods and question marks will render to the left 
		 of a sentence when the dir property is set to rtl.</p>
		 
		 <p><b>Note:</b> The value of dir property has no effect on the orientation of coordinates for 
		 an object's positioning properties. For example, the  left property and the  right property perform the 
		 same placement in both cases. However, when both the left and right properties are specified, the left 
		 property takes precedence when the dir property is set to ltr. Likewise, the right property takes precedence 
		 when the dir property is set to rtl.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533731%28VS.85%29.aspx"><linktext>MSDN - dir Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Document.dir"><linktext>MDC - Document.dir</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:documentMode:get"><apiName>documentMode</apiName><shortdesc>
		 Retrieves the document compatibility mode of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Retrieves the document compatibility mode of the document.
		 
		 <p>Possible Values:
		 <ul>
		 	<li>5 - Microsoft Internet Explorer 5 mode (also known as "quirks mode").</li>
		 	<li>7 - Internet Explorer 7 Standards mode.</li>
		 	<li>8 - Internet Explorer 8 Standards mode.</li>
		 </ul>
		 </p>
		 
		 <p><b>Note (IE):</b> The document compatibility mode of a Web page determines how Internet Explorer 8 
		 interprets and renders the page. Page authors generally use  meta elements to specify X-UA-Compatible  
		 HTTP-EQUIV headers that specify the document compatibility mode. For more information, see  Defining Document 
		 Compatibility. In versions of Internet Explorer previous to Internet Explorer 8,  compatMode was solely 
		 determined by  DOCTYPE. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc196988%28VS.85%29.aspx"><linktext>MSDN - documentMode Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:documentURIObject:get"><apiName>documentURIObject</apiName><shortdesc>
		 Returns an nsIURI object representing the URI of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIURI</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an nsIURI object representing the URI of the document. 
		 
		 <p>This only works for privileged (UniversalXPConnect) scripts, including extension code. For web content this 
		 property doesn't have any special meaning and can be used just like any other custom property. </p>
		 
		 <p>Privileged code must be careful not to try getting or setting this property on a non-wrapped content object 
		 (e.g. on a wrappedJSObject of an XPCNativeWrapper). See bug 324464's comments for details. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Check that the URI scheme of the current tab in Firefox is 'http',
		 // assuming this code runs in context of browser.xul
		 var uriObj = content.document.documentURIObject;
		 var uriPort = uriObj.port;
		 
		 if (uriObj.schemeIs('http')) {
		 	...
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.documentURIObject"><linktext>MDC - Document.documentURIObject</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=324464"><linktext>bug 324464</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:domain:get"><apiName>domain</apiName><shortdesc>
		 Gets/sets the domain of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets/sets the domain of the current document.
		 
		 <p><b>Note:</b> This property returns null if the domain of the document cannot be identified.</p>
		 
		 <p><b>Note:</b> In the DOM HTML specification, this property is listed as being read-only. However, 
		 all common browsers including Mozilla will let you set it to a superdomain of the current value. For example, 
		 on developer.mozilla.org it is possible to set it to "mozilla.org" but not "mozilla.com".</p>
		 
		 <p><b>Note:</b> It is not universally possible in all browsers to set document.domain to a top-level 
		 domain (such as "com" or "org") or to a subdomain of a domain on which registrations are restricted (e.g. "co.uk", 
		 as registrations on the "uk" domain are restricted).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // for document www.love.com/good.html,
		 // this script closes the window
		 var badDomain = "www.love.com";
		 if (document.domain == badDomain) {
		 	window.close();
		 }</codeblock>
		 
		 <codeblock>
		 // For the URI http://developer.mozilla.org/en/docs/DOM the
		 // following sets domain to the string "developer.mozilla.org"
		 var domain = document.domain;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533740%28VS.85%29.aspx"><linktext>MSDN - domain Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.domain"><linktext>MDC - Document.domain</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-2250147"><linktext>W3C - HTMLDocument.domain</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:embeds:get"><apiName>embeds</apiName><shortdesc>
		 Retrieves a collection of all  embed objects in the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of all  embed objects in the document.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537450(VS.85).aspx"><linktext>MSDN - embeds Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.embeds"><linktext>MDC - Document.embeds</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:expando:get"><apiName>expando</apiName><shortdesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.
		 
		 <p><b>Note:</b> You can extend the properties on an object by creating arbitrary properties 
		 with values. You should be careful, however, because you can unintentionally set a property value when 
		 scripting in a case-sensitive language such as Microsoft JScript. For example, if the property value 
		 is borderColor and you type the value "bordercolor = 'blue'", you have, in fact, created another property 
		 on the style object called bordercolor with the value 'blue'. If you query the value of the property, 
		 the value "blue" is returned. However, the borders for the element do not turn blue.</p>
		 
		 <p><b>Note:</b> Setting the  expando property of the  document object to false precludes the 
		 functionality of all expandos within the document.</p>
		 
		 </apiDesc><example>
		 The following example demonstrates that, by setting the expando property of the document object to false, 
		 the document ignores the  UNSELECTABLE expando on the  span and allows you to select the text.
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 &lt;script type="text/javascript"&gt;
		 	//Set the expando property to false.
		 	document.expando = false;
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 
		 &lt;div&gt;
		 &lt;span id="oSpan" unselectable="on"&gt;This text should be selectable.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533747%28VS.85%29.aspx"><linktext>MSDN - expando Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fgColor:get"><apiName>fgColor</apiName><shortdesc>
		 Gets/sets the foreground color, or text color, of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#000000"
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the foreground color, or text color, of the current document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533749%28VS.85%29.aspx"><linktext>MSDN - fgColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.fgColor"><linktext>MDC - Document.fgColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fileCreatedDate:get"><apiName>fileCreatedDate</apiName><shortdesc>
		 Retrieves the date the file was created.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the date the file was created. For example, Monday, December 08, 1997.
		 
		 </apiDesc><example>
		 This example implements the fileCreatedDate property to count the number of days since the document was created.
		 <codeblock>
		 // Date document was created
		 var oCreated=new Date(document.fileCreatedDate);
		 
		 // Today's Date
		 var oToday=new Date();
		 
		 //There are 86400000 milliseconds in a day
		 var iMilliSeconds=86400000;
		 var iDaysBetween=(oToday.getTime() - oCreated.getTime()) / iMilliSeconds;	
		 
		 alert("Created: " + oCreated + "\nDays since created: " + parseInt(iDaysBetween));</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533750%28VS.85%29.aspx"><linktext>MSDN - fileCreatedDate Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fileModifiedDate:get"><apiName>fileModifiedDate</apiName><shortdesc>
		 Retrieves the date the file was last modified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the date the file was last modified. For example, Monday, December 08, 1997.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533751%28VS.85%29.aspx"><linktext>MSDN - fileModifiedDate Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fileSize:get"><apiName>fileSize</apiName><shortdesc>
		 Retrieves the file size.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the file size. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533752%28VS.85%29.aspx"><linktext>MSDN - fileSize Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:forms:get"><apiName>forms</apiName><shortdesc>
		 A collection of all the forms of a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the forms of a document.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 	&lt;title&gt; document.forms example&lt;/title&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 &lt;form id="robby"&gt;
		 	&lt;input type="button" onclick="alert(document.forms[0].id);" value="robby's form" /&gt;
		 &lt;/form&gt;
		 
		 &lt;form id="dave"&gt;
		 	&lt;input type="button" onclick="alert(document.forms[1].id);" value="dave's form" /&gt;
		 &lt;/form&gt;
		 
		 &lt;form id="paul"&gt;
		 	&lt;input type="button" onclick="alert(document.forms[2].id);" value="paul's form" /&gt;
		 &lt;/form&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537457%28VS.85%29.aspx"><linktext>MSDN - forms Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.forms"><linktext>MDC - Document.forms</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-1689064"><linktext>W3C - HTMLDocument.forms</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:frames:get"><apiName>frames</apiName><shortdesc>
		 Retrieves a collection of all  window objects defined by the given document or defined by 
		 the document associated with the given window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of all  window objects defined by the given document or defined by 
		 the document associated with the given window.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537459%28VS.85%29.aspx"><linktext>MSDN - frames Collection</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:height:get"><apiName>height</apiName><shortdesc>
		 Returns the height of the body element of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the height of the body element of the current document. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // alert document height
		 alert(document.height);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.height"><linktext>MDC - Document.height</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:images:get"><apiName>images</apiName><shortdesc>
		 A collection of all the IMG elements in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the IMG elements in a document. The behavior is 
		 limited to IMG elements for backwards compatibility.
		 
		 <p><b>Note:</b> As suggested by HTML 4.01, to include images, authors may use 
		 the OBJECT element or the IMG element. Therefore, it is recommended 
		 not to use this attribute to find the images in the document but 
		 getElementsByTagName with HTML 4.01 or getElementsByTagNameNS with 
		 XHTML 1.0.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var ilist = document.images;
		 for(var i = 0; i &lt; ilist.length; i++) {
		 	if(ilist[i] == "banner.gif") {
         		// found the banner
		 	}
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537461%28VS.85%29.aspx"><linktext>MSDN - images Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.images"><linktext>MDC - Document.images</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-90379117"><linktext>W3C - HTMLDocument.images</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:lastModified:get"><apiName>lastModified</apiName><shortdesc>
		 Returns a string containing the date and time on which the current document was last modified, in the form "MM/DD/YY hh:mm:ss".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string containing the date and time on which the current document was last modified, in the form "MM/DD/YY hh:mm:ss".
		 
		 <p><b>Note:</b> As a string, lastModified cannot easily be used for comparisions between the modified dates of documents. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(document.lastModified); 
		 // returns: Tuesday, July 10, 2001 10:19:42</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533946%28VS.85%29.aspx"><linktext>MSDN - lastModified Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.lastModified"><linktext>MDC - Document.lastModified</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:linkColor:get"><apiName>linkColor</apiName><shortdesc>
		 Gets/sets the color of links within the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#0000FF" for IE / "#0000EE" for Mozilla
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the color of links within the document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534117%28VS.85%29.aspx"><linktext>MSDN - linkColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.linkColor"><linktext>MDC - Document.linkColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:links:get"><apiName>links</apiName><shortdesc>
		 A collection of all AREA elements and anchor (A) elements in a document 
		 with a value for the href attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all AREA elements and anchor (A) elements in a document 
		 with a value for the href attribute.
		 
		 </apiDesc><example>
		 <codeblock>
		 var links = document.links;
		 for(var i = 0; i &lt; links.length; i++) {
		 	var linkHref = document.createTextNode(links[i].href);
		 	var lineBreak = document.createElement("br");
		 	document.body.appendChild(linkHref);
		 	document.body.appendChild(lineBreak);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537465%28VS.85%29.aspx"><linktext>MSDN - links Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.links"><linktext>MDC - Document.links</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7068919"><linktext>W3C - HTMLDocument.links</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:location:get"><apiName>location</apiName><shortdesc>
		 Returns a Location object, which contains information about the URL of the document and provides 
		 methods for changing that URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Location</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a Location object, which contains information about the URL of the document and provides 
		 methods for changing that URL. In Gecko browsers you can also assign to this property to load another URL. 
		 
		 <p><b>Note:</b> Location objects have a toString method returning the current URL. You can also 
		 assign a string to document.location. This means that you can work with document.location as if it were a 
		 string in most cases. Sometimes, for example when you need to call a String method on it, you have to 
		 explicitly call toString: 
		 
		 <codeblock>alert(document.location.toString().charAt(17))</codeblock>
		 </p>
		 
		 <p><b>Note:</b> document.location was originally a read-only property, although Gecko browsers allow 
		 you to assign to it as well. For cross-browser safety, use window.location instead. </p>
		 
		 <p><b>Note:</b> To retrieve just the URL as a string, the read-only document.URL property can be used. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(document.location); 
		 // Prints a string like
		 // "http://www.example.com/juicybits.html" to the console</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535866%28VS.85%29.aspx"><linktext>MSDN - location Object</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.location"><linktext>MDC - Document.location</linktext></link><link href="dom.html.Window#location()"><linktext>dom.html.Window#location()</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:namespaces:get"><apiName>namespaces</apiName><shortdesc>
		 Retrieves a collection of namespace objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of namespace objects.
		 
		 INCOMPLETE
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537470%28VS.85%29.aspx"><linktext>MSDN - namespaces Collection</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:parentWindow:get"><apiName>parentWindow</apiName><shortdesc>
		 Gets a reference to the container object of the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:Window</apiValueClassifier></apiValueDef><apiDesc>
		 Gets a reference to the container object of the window.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534331%28VS.85%29.aspx"><linktext>MSDN - parentWindow Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:plugins:get"><apiName>plugins</apiName><shortdesc>
		 Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the &amp;lt;embed&amp;gt; elements in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the &lt;embed&gt; elements in the current document. 
		 
		 <p><b>Note:</b> For a list of installed plugins, use navigator.plugins instead.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537477%28VS.85%29.aspx"><linktext>MSDN - plugins Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.plugins"><linktext>MDC - Document.plugins</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:protocol:get"><apiName>protocol</apiName><shortdesc>
		 Sets or retrieves the protocol portion of a URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves the protocol portion of a URL. 
		 
		 <p><b>Note:</b> The protocol property specifies how to transfer information from the host to the 
		 client. Windows Internet Explorer supports several  predefined protocols, including  http and  ftp.</p>
		 
		 <p><b>Note:</b> The  document,  img, and  location objects expose the protocol property as read-only. 
		 location.protocol property returns the initial substring of a URL, including the first colon (for example, 
		 http:). However, document.protocol returns the expanded text of the protocol acronym. For example, it returns 
		 the http protocol as Hypertext Transfer Protocol.</p>
		 
		 </apiDesc><example>
		 This example function returns the protocol property of the current page location.
		 <codeblock>
		 function getProtocol() {
		 	return document.location.protocol;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534353%28VS.85%29.aspx"><linktext>MSDN - protocol Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:readyState:get"><apiName>readyState</apiName><shortdesc>
		 Retrieves a value that indicates the current state of the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a value that indicates the current state of the object.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>State</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>uninitialized</entry><entry>Object is not initialized with data.</entry>
		 	</row><row>
		 		<entry>loading</entry><entry>Object is loading its data.</entry>
		 	</row><row>
		 		<entry>loaded</entry><entry>Object has finished loading its data.</entry>
		 	</row><row>
		 		<entry>interactive</entry><entry>User can interact with the object even though it is not fully loaded.</entry>
		 	</row><row>
		 		<entry>complete</entry><entry>Object is completely initialized.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note:</b> An object's state is initially set to uninitialized, and then to loading. When data 
		 loading is complete, the state of the link object passes through the loaded and interactive states to reach the 
		 complete state. </p>
		 
		 <p><b>Note:</b> The states through which an object passes are determined by that object; an object 
		 can skip certain states (for example, interactive) if the state does not apply to that object.</p>
		 
		 <p><b>Note:</b> Data source objects and databound elements are normally populated asynchronously, and 
		 certain programmatic operations can only be performed reliably on databound objects when they are ready for use.
		 Therefore, the appropriate code should be written to confirm the readyState of objects prior to performing 
		 certain operations on them. For example, walking the rows of a  table should not be attempted until after the 
		 table has reached the complete state.</p>
		 
		 <p><b>Note:</b> The readyState property enables the status of an object to be tested. The correct place 
		 to test the readyState property is in the event handler for  onreadystatechange. Similarly, a data source object 
		 (DSO) fires the  ondatasetcomplete event to notify the Web page that the dataset is ready for programmatic operation.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534359%28VS.85%29.aspx"><linktext>MSDN - readyState Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.readyState"><linktext>MDC - Document.readyState</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-readystate"><linktext>WHATWG - HTMLDocument.readyState</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:referrer:get"><apiName>referrer</apiName><shortdesc>
		 Returns the URI of the page that linked to this page.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URI of the page that linked to this page. 
		 The value is an empty string if the user navigated to the page directly 
		 (not through a link, but, for example, via a bookmark).
		 
		 <p><b>Note:</b> This property returns a value only when the user reaches the current page through a 
		 link from the previous page. Otherwise, document. referrer returns an empty string; it also returns an empty 
		 string when the link is from a secure site.</p>
		 
		 <p><b>Note:</b> For example, if PageA.htm includes a link to PageB.htm, and the user clicks that 
		 link, the document.referrer on PageB.htm returns "PageA.htm." However, if the user is on PageA.htm and types 
		 PageB.htm into the address line or chooses the Open command from the File menu to get to PageB.htm, the 
		 document.referrer returns an empty string.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534365%28VS.85%29.aspx"><linktext>MSDN - referrer Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.referrer"><linktext>MDC - Document.referrer</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-95229140"><linktext>W3C - HTMLDocument.referrer</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:scripts:get"><apiName>scripts</apiName><shortdesc>
		 Returns an HTMLCollection object containing one or more HTMLScriptElements or null which represent the &amp;lt;script&amp;gt; elements in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an HTMLCollection object containing one or more HTMLScriptElements or null which represent the &lt;script&gt; elements in the current document. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537487%28VS.85%29.aspx"><linktext>MSDN - scripts Collection</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-scripts"><linktext>WHATWG - HTMLDocument.scripts</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:selection:get"><apiName>selection</apiName><shortdesc>
		 Represents the active selection, which is a highlighted block of text or other elements in the document 
		 that a user or a script can carry out some action on.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Selection</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the active selection, which is a highlighted block of text or other elements in the document 
		 that a user or a script can carry out some action on.
		 
		 <p><b>Note (IE):</b> You can use the selection object as input from the user to identify which portion 
		 of the document to act on, or as output to the user to show the results of an action.</p>
		 
		 <p><b>Note (IE):</b> Users and scripts can create selections. Users create selections by dragging the 
		 mouse over a portion of the document. Scripts create selections by calling the  select method on a text range 
		 or similar object. To get the active selection, apply the selection keyword to the document object. To carry 
		 out work on a selection, create a text range object from the selection using the  createRange method. </p>
		 
		 <p><b>Note:</b> A document can have only one selection at a time. The selection has a type that 
		 determines whether it is empty or contains a block of text or elements. Although an empty selection contains 
		 nothing, you can use it to mark a position in the document.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535869%28VS.85%29.aspx"><linktext>MSDN - selection Object</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:title:get"><apiName>title</apiName><shortdesc>
		 Gets or sets the title of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets or sets the title of the document. 
		 
		 <p><b>Note:</b> The initial value of document.title is the text content of the &lt;title&gt; element.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;title&gt;Hello World!&lt;/title&gt; 
		 &lt;/head&gt;
		 &lt;body&gt;
		 	&lt;script&gt;
		 		alert(document.title); // displays "Hello World!"
		 		document.title = "Goodbye World!";
		 		alert(document.title); // displays "Goodbye World!"
		 	&lt;/script&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.title"><linktext>MDC - Document.title</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-18446827"><linktext>W3C - HTMLDocument.title</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:uniqueID:get"><apiName>uniqueID</apiName><shortdesc>
		 Retrieves an autogenerated, unique identifier for the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves an autogenerated, unique identifier for the object. 
		 
		 <p><b>Note (IE):</b> When you apply this property to the  document object, the browser automatically 
		 generates a new ID that you can assign to an element's  id property.</p>
		 
		 <p><b>Note (IE):</b> A new ID is generated and assigned to the element the first time the property is retrieved. 
		 Every subsequent access to the property on the same element returns the same ID.</p>
		 
		 <p><b>Note (IE):</b> The unique ID generated is not guaranteed to be the same every time the page is loaded.</p>
		 
		 </apiDesc><example>
		 This example uses the uniqueID property to show how the browser can autogenerate a unique ID for an element inserted into the page by a behavior.
		 <codeblock>
		 // Specifying an ID=document.uniqueID ensures that a unique identifier
		 // will be assigned to the element being inserted into the page by
		 // the behavior.
		 newTextAreaID = element.document.uniqueID;
		 element.document.body.insertAdjacentHTML ("beforeEnd",
		 "<P><TEXTAREA ID=" + newTextAreaID + " STYLE="height: 200 ;&#34;+     &#34;width: 350"/></P>");</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534704%28VS.85%29.aspx"><linktext>MSDN - uniqueID Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:vlinkColor:get"><apiName>vlinkColor</apiName><shortdesc>
		 Gets/sets the color of links that the user has visited in the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#800080" for IE / "#551A8B" for Mozilla
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the color of links that the user has visited in the document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535139%28VS.85%29.aspx"><linktext>MSDN - vlinkColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.vlinkColor"><linktext>MDC - Document.vlinkColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:width:get"><apiName>width</apiName><shortdesc>
		 Returns the width of the body element of the current document in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the width of the body element of the current document in pixels. 
		 
		 <p><b>Note:</b> Not supported by IE.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 function init() {
		 	alert("The width of the document is " + document.width + " pixels.");
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.width"><linktext>MDC - Document.width</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLabelElement"><apiName>HTMLLabelElement</apiName><shortdesc>
	 Form field label text.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Form field label text.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLabelElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:htmlFor:get"><apiName>htmlFor</apiName><shortdesc>
		 This attribute links this label with another form control by id attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute links this label with another form control by id attribute. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLOptionElement"><apiName>HTMLOptionElement</apiName><shortdesc>
	 A selectable choice.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A selectable choice. See the OPTION element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLOptionElement:defaultSelected:get"><apiName>defaultSelected</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Represents the value of the HTML selected attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Represents the value of the HTML selected attribute. The value of this attribute 
		 does not change if the state of the corresponding form control, in an interactive 
		 user agent, changes. See the selected attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:index:get"><apiName>index</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The index of this OPTION in its parent SELECT, starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The index of this OPTION in its parent SELECT, starting from 0.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:label:get"><apiName>label</apiName><shortdesc>
		 Option label for use in hierarchical menus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Option label for use in hierarchical menus. See the label attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:selected:get"><apiName>selected</apiName><shortdesc>
		 Represents the current state of the corresponding form control, in an interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Represents the current state of the corresponding form control, in an interactive user agent. 
		 Changing this attribute changes the state of the form control, but does not change the value 
		 of the HTML selected attribute of the element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:text:get"><apiName>text</apiName><shortdesc>
		 The text contained within the option element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The text contained within the option element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:value:get"><apiName>value</apiName><shortdesc>
		 The current form control value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The current form control value. See the value attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLMenuElement"><apiName>HTMLMenuElement</apiName><shortdesc>
	 Menu list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Menu list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLMenuElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBRElement"><apiName>HTMLBRElement</apiName><shortdesc>
	 Force a line break.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Force a line break.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBRElement:clear:get"><apiName>clear</apiName><shortdesc>
		 Control flow of text around floats.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Control flow of text around floats. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>none</li>
		 <li>left</li>
		 <li>right</li>
		 <li>all</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLegendElement"><apiName>HTMLLegendElement</apiName><shortdesc>
	 Provides a caption for a FIELDSET grouping.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Provides a caption for a FIELDSET grouping.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLegendElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLegendElement:align:get"><apiName>align</apiName><shortdesc>
		 Text alignment relative to FIELDSET.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Text alignment relative to FIELDSET. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLegendElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLImageElement"><apiName>HTMLImageElement</apiName><shortdesc>
	 Embedded image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Embedded image.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLImageElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:border:get"><apiName>border</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Width of border around image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Width of border around image. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:height:get"><apiName>height</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The height of the image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The height of the image in pixels. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:hspace:get"><apiName>hspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Horizontal space to the left and right of this image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Horizontal space to the left and right of this image in pixels. This attribute is deprecated in HTML 4.01. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:isMap:get"><apiName>isMap</apiName><shortdesc>
		 Use server-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Use server-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:longDesc:get"><apiName>longDesc</apiName><shortdesc>
		 URI designating a long description of this image or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a long description of this image or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:name:get"><apiName>name</apiName><shortdesc>
		 The name of the element (for backwards compatibility).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the element (for backwards compatibility).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:src:get"><apiName>src</apiName><shortdesc>
		 URI designating the source of this image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating the source of this image.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:useMap:get"><apiName>useMap</apiName><shortdesc>
		 Use client-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Use client-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:vspace:get"><apiName>vspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Vertical space above and below this image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Vertical space above and below this image in pixels. This attribute is deprecated in HTML 4.01. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:width:get"><apiName>width</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The width of the image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The width of the image in pixels. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableCellElement"><apiName>HTMLTableCellElement</apiName><shortdesc>
	 The object used to represent the TH and TD elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The object used to represent the TH and TD elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableCellElement:abbr:get"><apiName>abbr</apiName><shortdesc>
		 Abbreviation for header cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Abbreviation for header cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of data in cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of data in cell.
		 <p>Valid values are: 
		 <ul>
		 <li>left: Left-flush data/Left-justify text. This is the default value for table data.</li>
		 <li>center: Center data/Center-justify text. This is the default value for table headers.</li>
		 <li>right: Right-flush data/Right-justify text.</li>
		 <li>justify: Double-justify text.</li>
		 <li>char: Align text around a specific character. If a user agent doesn't support character alignment, behavior in the presence of this value is unspecified.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:axis:get"><apiName>axis</apiName><shortdesc>
		 Names group of related headers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Names group of related headers.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Cell background color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell background color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:cellIndex:get"><apiName>cellIndex</apiName><shortdesc>
		 The index of this cell in the row, starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The index of this cell in the row, starting from 0. This index is in document tree order and not display order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:colSpan:get"><apiName>colSpan</apiName><shortdesc>
		 Number of columns spanned by cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Number of columns spanned by cell.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:headers:get"><apiName>headers</apiName><shortdesc>
		 List of id attribute values for header cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 List of id attribute values for header cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:height:get"><apiName>height</apiName><shortdesc>
		 Cell height.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell height. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:noWrap:get"><apiName>noWrap</apiName><shortdesc>
		 Suppress word wrapping.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Suppress word wrapping. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:rowSpan:get"><apiName>rowSpan</apiName><shortdesc>
		 Number of rows spanned by cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Number of rows spanned by cell.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:scope:get"><apiName>scope</apiName><shortdesc>
		 Scope covered by header cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Scope covered by header cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:vAlign:get"><apiName>vAlign</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:width:get"><apiName>width</apiName><shortdesc>
		 Cell width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell width. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLQuoteElement"><apiName>HTMLQuoteElement</apiName><shortdesc>
	 For the Q and BLOCKQUOTE elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 For the Q and BLOCKQUOTE elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLQuoteElement:cite:get"><apiName>cite</apiName><shortdesc>
		 A URI designating a source document or message.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating a source document or message.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLAreaElement"><apiName>HTMLAreaElement</apiName><shortdesc>
	 Client-side image map area definition.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Client-side image map area definition.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLAreaElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:coords:get"><apiName>coords</apiName><shortdesc>
		 Comma-separated list of lengths, defining an active region geometry.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Comma-separated list of lengths, defining an active region geometry.
		 
		 <p>This attribute specifies the position and shape on the screen. The 
		 number and order of values depends on the shape being defined. Possible combinations:
		 
		 <adobetable class="innertable">
		 
		 <tgroup cols="4"><thead><row><row>
		 		<entry><p>Shape</p></entry>
		 		<entry><p>Values</p></entry>
		 	</row><row>
		 		<entry><codeph>rect</codeph></entry>
		 		<entry>left-x, top-y, right-x, bottom-y.</entry>
		 	</row><row>
		 		<entry><codeph>circle</codeph></entry>
		 		<entry>center-x, center-y, radius. <b>Note:</b> When the radius value is a percentage value, 
		 user agents should calculate the final radius value based on the associated object's width 
		 and height. The radius should be the smaller value of the two.</entry>
		 	</row><row>
		 		<entry><codeph>poly</codeph></entry>
		 		<entry>x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should 
		 be the same to close the polygon. When these coordinate values are not the same, user agents 
		 should infer an additional coordinate pair to close the polygon.</entry>
		 	</row></row></thead><tbody/></tgroup></adobetable>
		 </p>
		 
		 <p>Coordinates are relative to the top, left corner of the object. All values 
		 are lengths. All values are separated by commas.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.html.xml#HTMLAreaElement/shape"><linktext>shape</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLAreaElement:href:get"><apiName>href</apiName><shortdesc>
		 The URI of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:noHref:get"><apiName>noHref</apiName><shortdesc>
		 Specifies that this area is inactive, i.e., has no associated action.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Specifies that this area is inactive, i.e., has no associated action.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:shape:get"><apiName>shape</apiName><shortdesc>
		 The shape of the active area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The shape of the active area. The coordinates are given by coords.
		 
		 <p>Possible values can be:
		 <ul>
		 <li>default: Specifies the entire region</li>
		 <li>rect: Define a rectangular region</li>
		 <li>circle: Define a circular region</li>
		 <li>poly: Define a polygonal region</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLinkElement"><apiName>HTMLLinkElement</apiName><shortdesc>
	 The LINK element specifies a link to an external resource, and defines this 
	 document's relationship to that resource (or vice versa).</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The LINK element specifies a link to an external resource, and defines this 
	 document's relationship to that resource (or vice versa). See the LINK 
	 element definition in HTML 4.01 (see also the LinkStyle interface in the 
	 StyleSheet module [DOM Level 2 Style Sheets and CSS]).
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLinkElement:charset:get"><apiName>charset</apiName><shortdesc>
		 The character encoding of the resource being linked to.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The character encoding of the resource being linked to. See the 
		 charset attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 Enables/disables the link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Enables/disables the link. This is currently only used for style 
		 sheet links, and may be used to activate or deactivate style sheets.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:href:get"><apiName>href</apiName><shortdesc>
		 The URI of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI of the linked resource. See the href 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:hreflang:get"><apiName>hreflang</apiName><shortdesc>
		 Language code of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Language code of the linked resource. See the hreflang attribute 
		 definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:media:get"><apiName>media</apiName><shortdesc>
		 Designed for use with one or more target media.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Designed for use with one or more target media. See the media 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:rel:get"><apiName>rel</apiName><shortdesc>
		 Forward link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Forward link type. See the rel attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:rev:get"><apiName>rev</apiName><shortdesc>
		 Reverse link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reverse link type. See the rev attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in. See the target attribute definition 
		 in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:type:get"><apiName>type</apiName><shortdesc>
		 Advisory content type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Advisory content type. See the type attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFormElement"><apiName>HTMLFormElement</apiName><shortdesc>
	 The FORM element encompasses behavior similar to a collection and an 
	 element.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The FORM element encompasses behavior similar to a collection and an 
	 element. It provides direct access to the contained form controls as well 
	 as the attributes of the form element.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLFormElement:reset"><apiName>reset</apiName><shortdesc>
		 Restores a form element's default values.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Restores a form element's default values. It performs the same action 
		 as a reset button. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLFormElement:submit"><apiName>submit</apiName><shortdesc>
		 Submits the form.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Submits the form. It performs the same action as a submit button. 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLFormElement:acceptCharset:get"><apiName>acceptCharset</apiName><shortdesc>
		 List of character sets supported by the server.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 List of character sets supported by the server. See the accept-charset 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:action:get"><apiName>action</apiName><shortdesc>
		 Server-side form handler.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Server-side form handler. See the action attribute definition in 
		 HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:elements:get"><apiName>elements</apiName><shortdesc>
		 Returns a collection of all form control elements in the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a collection of all form control elements in the form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:enctype:get"><apiName>enctype</apiName><shortdesc>
		 The content type of the submitted form, generally 
		 "application/x-www-form-urlencoded".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The content type of the submitted form, generally 
		 "application/x-www-form-urlencoded". See the enctype attribute 
		 definition in HTML 4.01.
		 
		 Note: The onsubmit even handler is not guaranteed to be triggered when 
		 invoking this method. The behavior is inconsistent for historical 
		 reasons and authors should not rely on a particular one.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:length:get"><apiName>length</apiName><shortdesc>
		 The number of form controls in the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of form controls in the form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:method:get"><apiName>method</apiName><shortdesc>
		 HTTP method [IETF RFC 2616] used to submit form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 HTTP method [IETF RFC 2616] used to submit form. See the method attribute 
		 definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:name:get"><apiName>name</apiName><shortdesc>
		 Names the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Names the form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:onreset:get"><apiName>onreset</apiName><shortdesc>
		 The onreset event occurs when a form is reset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onreset event occurs when a form is reset.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:onsubmit:get"><apiName>onsubmit</apiName><shortdesc>
		 The onsubmit event occurs when a form is submitted.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onsubmit event occurs when a form is submitted.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in. See the target attribute definition 
		 in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFrameElement"><apiName>HTMLFrameElement</apiName><shortdesc>
	 Create a frame.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Create a frame.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFrameElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:frameBorder:get"><apiName>frameBorder</apiName><shortdesc>
		 Request frame borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Request frame borders.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:longDesc:get"><apiName>longDesc</apiName><shortdesc>
		 URI designating a long description of this image or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a long description of this image or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:marginHeight:get"><apiName>marginHeight</apiName><shortdesc>
		 Frame margin height, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin height, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:marginWidth:get"><apiName>marginWidth</apiName><shortdesc>
		 Frame margin width, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin width, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:name:get"><apiName>name</apiName><shortdesc>
		 The frame name (object of the target attribute).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The frame name (object of the target attribute).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:noResize:get"><apiName>noResize</apiName><shortdesc>
		 When true, forbid user from resizing frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When true, forbid user from resizing frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:scrolling:get"><apiName>scrolling</apiName><shortdesc>
		 Specify whether or not the frame should have scrollbars.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specify whether or not the frame should have scrollbars. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:src:get"><apiName>src</apiName><shortdesc>
		 A URI designating the initial frame contents.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating the initial frame contents.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLIsIndexElement"><apiName>HTMLIsIndexElement</apiName><shortdesc>
	 This element is used for single-line text input.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This element is used for single-line text input. See the ISINDEX element 
	 definition in HTML 4.01. This element is deprecated in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLIsIndexElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this 
		 control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIsIndexElement:prompt:get"><apiName>prompt</apiName><shortdesc>
		 The prompt message.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The prompt message. See the prompt attribute definition in HTML 4.01. 
		 This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLInputElement"><apiName>HTMLInputElement</apiName><shortdesc>
	 Form control.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Form control.
	 
	 <p>Note: Depending upon the environment in which the page is being viewed, the value 
	 property may be read-only for the file upload input type. For the "password" input 
	 type, the actual value returned may be masked to prevent unauthorized use. See the 
	 INPUT element definition in [HTML 4.01].</p>
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLInputElement:blur"><apiName>blur</apiName><shortdesc>
		 Removes keyboard focus from this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes keyboard focus from this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLInputElement:click"><apiName>click</apiName><shortdesc>
		 Simulate a mouse-click.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Simulate a mouse-click. For INPUT elements whose type attribute has one of 
		 the following values: "button", "checkbox", "radio", "reset", or "submit". 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLInputElement:focus"><apiName>focus</apiName><shortdesc>
		 Gives keyboard focus to this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Gives keyboard focus to this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLInputElement:select"><apiName>select</apiName><shortdesc>
		 Select the contents of the text area.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Select the contents of the text area. For INPUT elements whose type 
		 attribute has one of the following values: "text", "file", or "password". 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLInputElement:accept:get"><apiName>accept</apiName><shortdesc>
		 A comma-separated list of content types that a server processing this form will handle correctly.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A comma-separated list of content types that a server processing this form will handle correctly.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:checked:get"><apiName>checked</apiName><shortdesc>
		 When the type attribute of the element has the value "radio" or "checkbox", this represents 
		 the current state of the form control, in an interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When the type attribute of the element has the value "radio" or "checkbox", this represents 
		 the current state of the form control, in an interactive user agent. Changes to this attribute 
		 change the state of the form control, but do not change the value of the HTML checked 
		 attribute of the INPUT element.
		 
		 <p>Note: During the handling of a click event on an input element with a type attribute that 
		 has the value "radio" or "checkbox", some implementations may change the value of this property 
		 before the event is being dispatched in the document. If the default action of the event is 
		 canceled, the value of the property may be changed back to its original value. This means that 
		 the value of this property during the handling of click events is implementation dependent.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:defaultChecked:get"><apiName>defaultChecked</apiName><shortdesc>
		 When type has the value "radio" or "checkbox", this represents the HTML checked attribute 
		 of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When type has the value "radio" or "checkbox", this represents the HTML checked attribute 
		 of the element. The value of this attribute does not change if the state of the 
		 corresponding form control, in an interactive user agent, changes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:defaultValue:get"><apiName>defaultValue</apiName><shortdesc>
		 When the type attribute of the element has the value "text", "file" or "password", this 
		 represents the HTML value attribute of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 When the type attribute of the element has the value "text", "file" or "password", this 
		 represents the HTML value attribute of the element. The value of this attribute does not 
		 change if the contents of the corresponding form control, in an interactive user 
		 agent, changes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not 
		 within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:maxLength:get"><apiName>maxLength</apiName><shortdesc>
		 Maximum number of characters for text fields, when type has the value "text" or "password".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Maximum number of characters for text fields, when type has the value "text" or "password".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onchange:get"><apiName>onchange</apiName><shortdesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onselect:get"><apiName>onselect</apiName><shortdesc>
		 The onselect event occurs when a user selects some text in a text field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onselect event occurs when a user selects some text in a text field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:readOnly:get"><apiName>readOnly</apiName><shortdesc>
		 This control is read-only.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 This control is read-only. Relevant only when type has the value "text" or "password".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:size:get"><apiName>size</apiName><shortdesc>
		 Size information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Size information. The precise meaning is specific to each type of field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:src:get"><apiName>src</apiName><shortdesc>
		 When the type attribute has the value "image", this attribute specifies the 
		 location of the image to be used to decorate the graphical submit button.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 When the type attribute has the value "image", this attribute specifies the 
		 location of the image to be used to decorate the graphical submit button.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of control created (all lower case).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of control created (all lower case).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:useMap:get"><apiName>useMap</apiName><shortdesc>
		 Use client-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Use client-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:value:get"><apiName>value</apiName><shortdesc>
		 When the type attribute of the element has the value "text", "file" or 
		 "password", this represents the current contents of the corresponding form 
		 control, in an interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 When the type attribute of the element has the value "text", "file" or 
		 "password", this represents the current contents of the corresponding form 
		 control, in an interactive user agent. Changing this attribute changes the 
		 contents of the form control, but does not change the value of the HTML 
		 value attribute of the element. When the type attribute of the element has 
		 the value "button", "hidden", "submit", "reset", "image", "checkbox" or 
		 "radio", this represents the HTML value attribute of the element.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBodyElement"><apiName>HTMLBodyElement</apiName><shortdesc>
	 The HTML document body.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The HTML document body. This element is always present in the DOM 
	 API, even if the tags are not present in the source document.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBodyElement:aLink:get"><apiName>aLink</apiName><shortdesc>
		 Color of active links (after mouse-button down, but before 
		 mouse-button up).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Color of active links (after mouse-button down, but before 
		 mouse-button up). This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:background:get"><apiName>background</apiName><shortdesc>
		 URI of the background texture tile image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI of the background texture tile image. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Document background color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Document background color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:link:get"><apiName>link</apiName><shortdesc>
		 Color of links that are not active and unvisited.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Color of links that are not active and unvisited. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:onload:get"><apiName>onload</apiName><shortdesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:onoffline:get"><apiName>onoffline</apiName><shortdesc>
		 WHATWG Web Applications 1.0 specification | Firefox 3+ 
		 
		 Returns the event handling code for the offline event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>WHATWG Web Applications 1.0 specification | Firefox 3+</b> 
		 
		 Returns the event handling code for the offline event.
		 
		 <p>Note: The events bubble up from document.body, to document, ending at window. Both events are 
		 non-cancellable (you can't prevent the user from coming online, or going offline).</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:ononline:get"><apiName>ononline</apiName><shortdesc>
		 WHATWG Web Applications 1.0 specification | Firefox 3+ 
		 
		 Returns the event handling code for the online event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>WHATWG Web Applications 1.0 specification | Firefox 3+</b> 
		 
		 Returns the event handling code for the online event.
		 
		 <p>Note: The events bubble up from document.body, to document, ending at window. Both events are 
		 non-cancellable (you can't prevent the user from coming online, or going offline).</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:onunload:get"><apiName>onunload</apiName><shortdesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:text:get"><apiName>text</apiName><shortdesc>
		 Document text color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Document text color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:vLink:get"><apiName>vLink</apiName><shortdesc>
		 Color of links that have been visited by the user.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Color of links that have been visited by the user. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFontElement"><apiName>HTMLFontElement</apiName><shortdesc>
	 Local change to font.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Local change to font. This element is deprecated in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFontElement:color:get"><apiName>color</apiName><shortdesc>
		 Font color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFontElement:face:get"><apiName>face</apiName><shortdesc>
		 Font face identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font face identifier. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFontElement:size:get"><apiName>size</apiName><shortdesc>
		 Computed font size.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Computed font size. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLIFrameElement"><apiName>HTMLIFrameElement</apiName><shortdesc>
	 Inline subwindows.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Inline subwindows.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLIFrameElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:frameBorder:get"><apiName>frameBorder</apiName><shortdesc>
		 Request frame borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Request frame borders.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:height:get"><apiName>height</apiName><shortdesc>
		 Frame height.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame height.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:longDesc:get"><apiName>longDesc</apiName><shortdesc>
		 URI designating a long description of this image or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a long description of this image or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:marginHeight:get"><apiName>marginHeight</apiName><shortdesc>
		 Frame margin height, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin height, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:marginWidth:get"><apiName>marginWidth</apiName><shortdesc>
		 Frame margin width, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin width, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:name:get"><apiName>name</apiName><shortdesc>
		 The frame name (object of the target attribute).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The frame name (object of the target attribute).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:scrolling:get"><apiName>scrolling</apiName><shortdesc>
		 Specify whether or not the frame should have scrollbars.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specify whether or not the frame should have scrollbars. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:src:get"><apiName>src</apiName><shortdesc>
		 A URI designating the initial frame contents.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating the initial frame contents.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:width:get"><apiName>width</apiName><shortdesc>
		 Frame width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLObjectElement"><apiName>HTMLObjectElement</apiName><shortdesc>
	 Generic embedded object.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Generic embedded object.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLObjectElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:archive:get"><apiName>archive</apiName><shortdesc>
		 Space-separated list of archives.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Space-separated list of archives.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:border:get"><apiName>border</apiName><shortdesc>
		 Width of border around the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Width of border around the object. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:code:get"><apiName>code</apiName><shortdesc>
		 Applet class file.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Applet class file.
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.html.xml#HTMLAppletElement/code"><linktext>HTMLAppletElement.code</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLObjectElement:codeBase:get"><apiName>codeBase</apiName><shortdesc>
		 Base URI for classid, data, and archive attributes.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Base URI for classid, data, and archive attributes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:codeType:get"><apiName>codeType</apiName><shortdesc>
		 Content type for data downloaded via classid attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Content type for data downloaded via classid attribute.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc>
		 DOM Level 2
		 
		 The document this object contains, if there is any and it is available, or null otherwise.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 DOM Level 2
		 
		 The document this object contains, if there is any and it is available, or null otherwise.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:data:get"><apiName>data</apiName><shortdesc>
		 A URI [IETF RFC 2396] specifying the location of the object's data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI [IETF RFC 2396] specifying the location of the object's data.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:declare:get"><apiName>declare</apiName><shortdesc>
		 Declare (for future reference), but do not instantiate, this object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Declare (for future reference), but do not instantiate, this object.
		 
		 <p>When present, this boolean attribute makes the current OBJECT definition 
		 a declaration only. The object must be instantiated by a subsequent OBJECT 
		 definition referring to this declaration.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:height:get"><apiName>height</apiName><shortdesc>
		 Override height.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override height.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:hspace:get"><apiName>hspace</apiName><shortdesc>
		 Horizontal space, in pixels, to the left and right of this image, applet, or object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Horizontal space, in pixels, to the left and right of this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:standby:get"><apiName>standby</apiName><shortdesc>
		 Message to render while loading the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Message to render while loading the object.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:type:get"><apiName>type</apiName><shortdesc>
		 Content type for data downloaded via data attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Content type for data downloaded via data attribute.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:useMap:get"><apiName>useMap</apiName><shortdesc>
		 Use client-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Use client-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:vspace:get"><apiName>vspace</apiName><shortdesc>
		 Vertical space, in pixels, above and below this image, applet, or object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Vertical space, in pixels, above and below this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:width:get"><apiName>width</apiName><shortdesc>
		 Override width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLMetaElement"><apiName>HTMLMetaElement</apiName><shortdesc>
	 This contains generic meta-information about the document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This contains generic meta-information about the document. See the META element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLMetaElement:content:get"><apiName>content</apiName><shortdesc>
		 Associated information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Associated information. See the content attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMetaElement:httpEquiv:get"><apiName>httpEquiv</apiName><shortdesc>
		 HTTP response header name [IETF RFC 2616].</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 HTTP response header name [IETF RFC 2616]. See the http-equiv attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMetaElement:name:get"><apiName>name</apiName><shortdesc>
		 Meta information name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Meta information name. See the name attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMetaElement:scheme:get"><apiName>scheme</apiName><shortdesc>
		 Select form of content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Select form of content. See the scheme attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLAppletElement"><apiName>HTMLAppletElement</apiName><shortdesc>
	 An embedded Java applet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
	 </as-of></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An embedded Java applet. This element is deprecated in HTML 4.01.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLAppletElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:archive:get"><apiName>archive</apiName><shortdesc>
		 Comma-separated archive list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Comma-separated archive list. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:code:get"><apiName>code</apiName><shortdesc>
		 Applet class file.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Applet class file. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:codeBase:get"><apiName>codeBase</apiName><shortdesc>
		 Optional base URI for applet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Optional base URI for applet. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:height:get"><apiName>height</apiName><shortdesc>
		 Override height.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override height. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:hspace:get"><apiName>hspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Horizontal space, in pixels, to the left and right of this image, applet, or object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Horizontal space, in pixels, to the left and right of this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:name:get"><apiName>name</apiName><shortdesc>
		 The name of the applet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the applet. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:object:get"><apiName>object</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The value of the "object" attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The value of the "object" attribute. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:vspace:get"><apiName>vspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Vertical space, in pixels, above and below this image, applet, or object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Vertical space, in pixels, above and below this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:width:get"><apiName>width</apiName><shortdesc>
		 Override width.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override width. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableElement"><apiName>HTMLTableElement</apiName><shortdesc>
	 The createand deletemethods on the table allow authors to construct 
	 and modify tables.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The createand deletemethods on the table allow authors to construct 
	 and modify tables. [HTML 4.01] specifies that only one of each of the 
	 CAPTION, THEAD, and TFOOT elements may exist in a table. Therefore, if 
	 one exists, and the createTHead() or createTFoot() method is called, 
	 the method returns the existing THead or TFoot element.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLTableElement:createCaption"><apiName>createCaption</apiName><shortdesc>
		 Create a new table caption object or return an existing one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A CAPTION element.
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create a new table caption object or return an existing one.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:createTFoot"><apiName>createTFoot</apiName><shortdesc>
		 Create a table footer row or return an existing one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A footer element (TFOOT).
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create a table footer row or return an existing one. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:createTHead"><apiName>createTHead</apiName><shortdesc>
		 Create a table header row or return an existing one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A new table header element (THEAD).
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create a table header row or return an existing one. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:deleteCaption"><apiName>deleteCaption</apiName><shortdesc>
		 Delete the table caption, if one exists.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Delete the table caption, if one exists. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:deleteRow"><apiName>deleteRow</apiName><shortdesc>
		 Delete a table row.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is greater 
		 than or equal to the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the row to be deleted. This index starts from 
		 0 and is relative to the logical order (not document order) of all the 
		 rows contained inside the table. If the index is -1 the last row in the 
		 table is deleted.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Delete a table row. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:deleteTFoot"><apiName>deleteTFoot</apiName><shortdesc>
		 Delete the footer from the table, if one exists.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Delete the footer from the table, if one exists. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:deleteTHead"><apiName>deleteTHead</apiName><shortdesc>
		 Delete the header from the table, if one exists.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Delete the header from the table, if one exists. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:insertRow"><apiName>insertRow</apiName><shortdesc>
		 Insert a new empty row in the table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created row.
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The row number where to insert a new row. This index starts from 0 and 
		 is relative to the logical order (not document order) of all the rows contained inside the table.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Insert a new empty row in the table. The new row is inserted immediately before 
		 and in the same section as the current indexth row in the table. If index is -1 
		 or equal to the number of rows, the new row is appended. In addition, when the 
		 table is empty the row is inserted into a TBODY which is created and inserted 
		 into the table. 
		 
		 <p><b>Note:</b> A table row cannot be empty according to [HTML 4.01].</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLTableElement:align:get"><apiName>align</apiName><shortdesc>
		 Specifies the table's position with respect to the rest of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the table's position with respect to the rest of the document. 
		 This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>left: The table is to the left of the document.</li>
		 <li>center: The table is to the center of the document.</li>
		 <li>right: The table is to the right of the document.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Cell background color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell background color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:border:get"><apiName>border</apiName><shortdesc>
		 The width of the border around the table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The width of the border around the table.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:caption:get"><apiName>caption</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Returns the table's CAPTION, or void if none exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLTableCaptionElement</apiValueClassifier><apiException><apiDesc>HIERARCHY_REQUEST_ERR: if the element is not a CAPTION. 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Returns the table's CAPTION, or void if none exists.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:cellPadding:get"><apiName>cellPadding</apiName><shortdesc>
		 Specifies the horizontal and vertical space between cell content and cell borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the horizontal and vertical space between cell content and cell borders.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:cellSpacing:get"><apiName>cellSpacing</apiName><shortdesc>
		 Specifies the horizontal and vertical separation between cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the horizontal and vertical separation between cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:frame:get"><apiName>frame</apiName><shortdesc>
		 Specifies which external table borders to render.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies which external table borders to render.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:rows:get"><apiName>rows</apiName><shortdesc>
		 Returns a collection of all the rows in the table, including all in THEAD, TFOOT, all TBODY elements.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a collection of all the rows in the table, including all in THEAD, TFOOT, all TBODY elements.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:rules:get"><apiName>rules</apiName><shortdesc>
		 Specifies which internal table borders to render.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies which internal table borders to render.
		 <p>Valid values are: 
		 <ul>
		 <li>none: No rules. This is the default value.</li>
		 <li>groups: Rules will appear between row groups (see THEAD, TFOOT, and TBODY) and column groups (see COLGROUP and COL) only.</li>
		 <li>rows: Rules will appear between rows only.</li>
		 <li>cols: Rules will appear between columns only.</li>
		 <li>all: Rules will appear between all rows and columns.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:summary:get"><apiName>summary</apiName><shortdesc>
		 Description about the purpose or structure of a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Description about the purpose or structure of a table.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:tBodies:get"><apiName>tBodies</apiName><shortdesc>
		 Returns a collection of the table bodies (including implicit ones).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a collection of the table bodies (including implicit ones).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:tFoot:get"><apiName>tFoot</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Returns the table's TFOOT, or null if none exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLTableSectionElement</apiValueClassifier><apiException><apiDesc>HIERARCHY_REQUEST_ERR: if the element is not a TFOOT. 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Returns the table's TFOOT, or null if none exists.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:tHead:get"><apiName>tHead</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Returns the table's THEAD, or null if none exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLTableSectionElement</apiValueClassifier><apiException><apiDesc>HIERARCHY_REQUEST_ERR: if the element is not a THEAD. 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Returns the table's THEAD, or null if none exists.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:width:get"><apiName>width</apiName><shortdesc>
		 Specifies the desired table width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the desired table width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLPreElement"><apiName>HTMLPreElement</apiName><shortdesc>
	 Preformatted text.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Preformatted text.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLPreElement:width:get"><apiName>width</apiName><shortdesc>
		 Fixed width for content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Fixed width for content. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableCaptionElement"><apiName>HTMLTableCaptionElement</apiName><shortdesc>
	 Table caption.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Table caption.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableCaptionElement:align:get"><apiName>align</apiName><shortdesc>
		 Caption alignment with respect to the table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Caption alignment with respect to the table.
		 
		 <p>Valid values are: 
		 <ul>
		 <li>top: The caption is at the top of the table. This is the default value.</li>
		 <li>bottom: The caption is at the bottom of the table.</li>
		 <li>left: The caption is at the left of the table.</li>
		 <li>right: The caption is at the right of the table.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFrameSetElement"><apiName>HTMLFrameSetElement</apiName><shortdesc>
	 Create a grid of frames.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Create a grid of frames.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFrameSetElement:cols:get"><apiName>cols</apiName><shortdesc>
		 The number of columns of frames in the frameset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The number of columns of frames in the frameset.
		 
		 <p>It is a comma-separated list of pixels, percentages, and 
		 relative lengths. The default value is 100%, meaning one column.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameSetElement:onload:get"><apiName>onload</apiName><shortdesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameSetElement:onunload:get"><apiName>onunload</apiName><shortdesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameSetElement:rows:get"><apiName>rows</apiName><shortdesc>
		 The number of rows of frames in the frameset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The number of rows of frames in the frameset.
		 
		 <p>It is a comma-separated list of pixels, percentages, and 
		 relative lengths. The default value is 100%, meaning one column.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableRowElement"><apiName>HTMLTableRowElement</apiName><shortdesc>
	 A row in a table.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A row in a table.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLTableRowElement:deleteCell"><apiName>deleteCell</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Delete a cell from the current row.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the cell to delete, starting from 0. If the index is -1 the last cell in the row is deleted.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Delete a cell from the current row. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableRowElement:insertCell"><apiName>insertCell</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Insert an empty TD cell into this row.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created cell.
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The place to insert the cell, starting from 0.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Insert an empty TD cell into this row. If index is -1 or equal to the number of cells, 
		 the new cell is appended. 
		 
		  </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLTableRowElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of data within cells of this row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of data within cells of this row.
		 <p>Valid values are: 
		 <ul>
		 <li>left: The table is to the left of the document.</li>
		 <li>center: The table is to the center of the document.</li>
		 <li>right: The table is to the right of the document.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Background color for rows.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Background color for rows. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:cells:get"><apiName>cells</apiName><shortdesc>
		  Modified in DOM Level 2
		 
		 The collection of cells in this row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		  Modified in DOM Level 2
		 
		 The collection of cells in this row.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:rowIndex:get"><apiName>rowIndex</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 This is in logical order and not in document order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 This is in logical order and not in document order. The rowIndex does take into 
		 account sections (THEAD, TFOOT, or TBODY) within the table, placing THEAD rows 
		 first in the index, followed by TBODY rows, followed by TFOOT rows.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:sectionRowIndex:get"><apiName>sectionRowIndex</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The index of this row, relative to the current section (THEAD, TFOOT, or TBODY), starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The index of this row, relative to the current section (THEAD, TFOOT, or TBODY), starting from 0.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:vAlign:get"><apiName>vAlign</apiName><shortdesc>
		 Vertical alignment of data within cells of this row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Vertical alignment of data within cells of this row.
		 <p>Valid values are: 
		 <ul>
		 <li>top: Cell data is flush with the top of the cell.</li>
		 <li>middle: Cell data is centered vertically within the cell. This is the default value.</li>
		 <li>bottom: Cell data is flush with the bottom of the cell.</li>
		 <li>baseline: All cells in the same row as a cell whose valign attribute has this value should have their textual data positioned so that the first text line occurs on a baseline common to all cells in the row. This constraint does not apply to subsequent text lines in these cells.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLDListElement"><apiName>HTMLDListElement</apiName><shortdesc>
	 Definition list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Definition list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDListElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLUListElement"><apiName>HTMLUListElement</apiName><shortdesc>
	 Unordered list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Unordered list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLUListElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLUListElement:type:get"><apiName>type</apiName><shortdesc>
		 Bullet style.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Bullet style. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLStyleElement"><apiName>HTMLStyleElement</apiName><shortdesc>
	 Style information.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Style information. See the STYLE element definition in HTML 4.01, the CSS 
	 module [DOM Level 2 Style Sheets and CSS] and the LinkStyle interface in 
	 the StyleSheets module [DOM Level 2 Style Sheets and CSS].
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLStyleElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 Enables/disables the style sheet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Enables/disables the style sheet.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLStyleElement:media:get"><apiName>media</apiName><shortdesc>
		 Designed for use with one or more target media.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Designed for use with one or more target media. See the media attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLStyleElement:type:get"><apiName>type</apiName><shortdesc>
		 The content type of the style sheet language.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The content type of the style sheet language. See the type attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="dom.loadsave.types"><apiName>dom.loadsave.types</apiName><apiDetail/><apiClassifier id="dom.loadsave.types:LSOutputStream"><apiName>LSOutputStream</apiName><shortdesc>
	 A LSOutputStream represents a byte stream destination for the XML output.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A LSOutputStream represents a byte stream destination for the XML output. 
	 
	 <p><b>Note:</b> For Java, LSInputStream is bound to the java.io.InputStream 
	 type. For ECMAScript, LSInputStream is bound to Object.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LSOutputStream"><linktext>W3C - LSOutputStream</linktext></link></related-links></apiClassifier><apiClassifier id="dom.loadsave.types:LSWriter"><apiName>LSWriter</apiName><shortdesc>
	 A LSWriter represents a character stream for the XML output.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A LSWriter represents a character stream for the XML output. 
	 
	 <p><b>Note:</b> For Java, LSInputStream is bound to the java.io.InputStream 
	 type. For ECMAScript, LSInputStream is bound to Object.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LSWriter"><linktext>W3C - LSWriter</linktext></link></related-links></apiClassifier><apiClassifier id="dom.loadsave.types:LSInputStream"><apiName>LSInputStream</apiName><shortdesc>
	 A LSInputStream represents a reference to a byte stream source of an XML input.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A LSInputStream represents a reference to a byte stream source of an XML input. 
	 
	 <p><b>Note:</b> For Java, LSInputStream is bound to the java.io.InputStream 
	 type. For ECMAScript, LSInputStream is bound to Object.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LSInputStream"><linktext>W3C - LSInputStream</linktext></link></related-links></apiClassifier><apiClassifier id="dom.loadsave.types:LSReader"><apiName>LSReader</apiName><shortdesc>
	 A LSReader represents a character stream for the XML input.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A LSReader represents a character stream for the XML input. 
	 
	 <p><b>Note:</b> For Java, LSInputStream is bound to the java.io.InputStream 
	 type. For ECMAScript, LSInputStream is bound to Object.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LSReader"><linktext>W3C - LSReader</linktext></link></related-links></apiClassifier></apiPackage><apiPackage id="dom.loadsave"><apiName>dom.loadsave</apiName><apiDetail/><apiClassifier id="dom.loadsave:LSExceptionCode"><apiName>LSExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSException-LSExceptionCode"><linktext>W3C - LSExceptionCode</linktext></link></related-links><apiValue id="dom.loadsave:LSExceptionCode:PARSE_ERR"><apiName>PARSE_ERR</apiName><shortdesc>
		 If an attempt was made to load a document, or an XML Fragment, using LSParser and the processing has been stopped.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>81</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt was made to load a document, or an XML Fragment, using LSParser and the processing has been stopped. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#PARSE_ERR"><linktext>W3C - LSExceptionCode.PARSE_ERR</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSExceptionCode:SERIALIZE_ERR"><apiName>SERIALIZE_ERR</apiName><shortdesc>
		 If an attempt was made to serialize a Node using LSSerializer and the processing has been stopped.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>82</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If an attempt was made to serialize a Node using LSSerializer and the processing has been stopped. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#SERIALIZE_ERR"><linktext>W3C - LSExceptionCode.SERIALIZE_ERR</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSInput"><apiName>LSInput</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput</linktext></link></related-links><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:baseURI:get"><apiName>baseURI</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-baseURI"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-baseURI</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:byteStream:get"><apiName>byteStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave.types:LSInputStream</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-byteStream"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-byteStream</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:certifiedText:get"><apiName>certifiedText</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-certifiedText"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-certifiedText</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:characterStream:get"><apiName>characterStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave.types:LSReader</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-characterStream"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-characterStream</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:encoding:get"><apiName>encoding</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-encoding"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-encoding</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:publicId:get"><apiName>publicId</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-publicId"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-publicId</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:stringData:get"><apiName>stringData</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-stringData"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-stringData</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSInput:dom.loadsave:LSInput:systemId:get"><apiName>systemId</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-systemId"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSInput-systemId</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:DocumentLS"><apiName>DocumentLS</apiName><shortdesc>
	 The DocumentLS interface provides a mechanism by which the content of a document can be replaced with the 
	 DOM tree produced when loading a URI, or parsing a string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentLS interface provides a mechanism by which the content of a document can be replaced with the 
	 DOM tree produced when loading a URI, or parsing a string. The expectation is that an instance of the 
	 DocumentLS interface can be obtained by using binding-specific casting methods on an instance of the 
	 Document interface.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-Interfaces-DocumentLS"><linktext>W3C - DocumentLS</linktext></link></related-links><apiOperation id="dom.loadsave:DocumentLS:dom.loadsave:DocumentLS:abort"><apiName>abort</apiName><shortdesc>
		 If the document is currently being loaded as a result of the method load being invoked the loading and parsing is immediately 
		 aborted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 If the document is currently being loaded as a result of the method load being invoked the loading and parsing is immediately 
		 aborted. The possibly partial result of parsing the document is discarded and the document is cleared. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-abort"><linktext>W3C - DocumentLS.abort()</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:DocumentLS:dom.loadsave:DocumentLS:load"><apiName>load</apiName><shortdesc>
		 Replaces the content of the document with the result of parsing the given URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If async is set to true load returns true if the document load was successfully initiated. If an 
		 error occurred when initiating the document load load returns false. If async is set to false load returns 
		 true if the document was successfully loaded and parsed. If an error occurred when either loading or parsing 
		 the URI load returns false.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>uri</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The URI reference for the XML file to be loaded. If this is a relative URI, the base URI used by the implementation is implementation dependent.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replaces the content of the document with the result of parsing the given URI. Invoking this method 
		 will either block the caller or return to the caller immediately depending on the value of the async 
		 attribute. Once the document is fully loaded the document will fire a "load" event that the caller can 
		 register as a listener for. If an error occurs the document will fire an "error" event so that the caller 
		 knows that the load failed (see ParseErrorEvent). If this method is called on a document that is currently 
		 loading, the current load is interrupted and the new URI load is initiated. 
		 
		 <p><b>Note (Mozilla):</b> As of at least Gecko 1.9, this no longer supports cross-site loading 
		 of documents (Use XMLHttpRequest instead).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var xmlDoc = document.implementation.createDocument("", "test", null);
		 function documentLoaded (e) {
		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string
		 }
		 xmlDoc.addEventListener("load", documentLoaded, false);
		 xmlDoc.load('querydata.xml');</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.load"><linktext>MDC - Document.load()</linktext></link><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-load"><linktext>W3C - DocumentLS.load()</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:DocumentLS:dom.loadsave:DocumentLS:loadXML"><apiName>loadXML</apiName><shortdesc>
		 Replace the content of the document with the result of parsing the input string, this method is always synchronous.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if parsing the input string succeeded without errors, otherwise false.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>source</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string containing an XML document.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replace the content of the document with the result of parsing the input string, this method is always synchronous. 
		 This method always parses from a DOMString, which means the data is always UTF16. All other encoding information is ignored. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-loadXML"><linktext>W3C - DocumentLS.loadXML()</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:DocumentLS:dom.loadsave:DocumentLS:saveXML"><apiName>saveXML</apiName><shortdesc>
		 Save the document or the given node to a string (i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if the node passed in as the node parameter is from an other document.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The serialized document or null.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>snode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies what to serialize, if this parameter is null the whole document is serialized, if it's non-null the given node is serialized.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Save the document or the given node to a string (i.e. serialize the document or node). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-saveXML"><linktext>W3C - DocumentLS.saveXML()</linktext></link></related-links></apiOperation><apiValue id="dom.loadsave:DocumentLS:dom.loadsave:DocumentLS:async:get"><apiName>async</apiName><shortdesc>
		 Indicates whether the method load should be synchronous or asynchronous.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the implementation doesn't support the mode the attribute is being set to.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>false
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Indicates whether the method load should be synchronous or asynchronous. When the async attribute is set 
		 to true the load method returns control to the caller before the document has completed loading.
		 
		 </apiDesc><example>
		 <codeblock>
		 function loadXMLData(e) {
		 	alert(new XMLSerializer().serializeToString(e.target)); // Gives querydata.xml contents as string
		 }
		 
		 var xmlDoc = document.implementation.createDocument("", "test", null);
		 xmlDoc.async = false;
		 xmlDoc.onload = loadXMLData;
		 xmlDoc.load('querydata.xml');</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.async"><linktext>MDC - Document.async</linktext></link><link href="http://www.w3.org/TR/2002/WD-DOM-Level-3-ASLS-20020409/load-save.html#LS-DocumentLS-async"><linktext>W3C - DocumentLS.async</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSLoadEvent"><apiName>LSLoadEvent</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent</linktext></link></related-links><apiValue id="dom.loadsave:LSLoadEvent:input:get"><apiName>input</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.loadsave:LSInput</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-input"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-input</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSLoadEvent:newDocument:get"><apiName>newDocument</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-document"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSLoadEvent-document</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSSerializer"><apiName>LSSerializer</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer</linktext></link></related-links><apiOperation id="dom.loadsave:LSSerializer:dom.loadsave:LSSerializer:write"><apiName>write</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>nodeArg</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>destination</apiItemName><apiOperationClassifier>dom.loadsave:LSOutput</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-write"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-write</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:LSSerializer:dom.loadsave:LSSerializer:writeToString"><apiName>writeToString</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>nodeArg</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-writeToString"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-writeToString</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:LSSerializer:dom.loadsave:LSSerializer:writeToURI"><apiName>writeToURI</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>nodeArg</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>uri</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-writeToURI"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-writeToURI</linktext></link></related-links></apiOperation><apiValue id="dom.loadsave:LSSerializer:dom.loadsave:LSSerializer:domConfig:get"><apiName>domConfig</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMConfiguration</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-config"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-config</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSSerializer:dom.loadsave:LSSerializer:filter:get"><apiName>filter</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave:LSSerializerFilter</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-LSSerializerFilter"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-LSSerializerFilter</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSSerializer:dom.loadsave:LSSerializer:newLine:get"><apiName>newLine</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-newLine"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializer-newLine</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSOutput"><apiName>LSOutput</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput</linktext></link></related-links><apiValue id="dom.loadsave:LSOutput:dom.loadsave:LSOutput:byteStream:get"><apiName>byteStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave.types:LSInputStream</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-byteStream"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-byteStream</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSOutput:dom.loadsave:LSOutput:characterStream:get"><apiName>characterStream</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.loadsave.types:LSReader</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-characterStream"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-characterStream</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSOutput:dom.loadsave:LSOutput:encoding:get"><apiName>encoding</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-encoding"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-encoding</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSOutput:dom.loadsave:LSOutput:systemId:get"><apiName>systemId</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-systemId"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSOutput-systemId</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:DOMImplementationLS"><apiName>DOMImplementationLS</apiName><shortdesc>
	 DOMImplementationLS contains the factory methods for creating Load and Save objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 DOMImplementationLS contains the factory methods for creating Load and Save objects. 
	 
	 The expectation is that an instance of the DOMImplementationLS interface can be obtained by using 
	 binding-specific casting methods on an instance of the DOMImplementation interface or, if the Document 
	 supports the feature "Core"  version "3.0" defined in DOM Level 3 Core, by using the method 
	 DOMImplementation.getFeature with parameter values "LS" (or "LS-Async") and "3.0" (respectively). 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementation"><linktext>W3C - DOMImplementationLS</linktext></link></related-links><apiOperation id="dom.loadsave:DOMImplementationLS:dom.loadsave:DOMImplementationLS:createLSInput"><apiName>createLSInput</apiName><shortdesc>
		 Create a new empty input source object where LSInput.characterStream, LSInput.byteStream, LSInput.stringData  
		 LSInput.systemId, LSInput.publicId, LSInput.baseURI, and LSInput.encoding are null, and LSInput.certifiedText is false.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created input object. 
		 
		 </apiDesc><apiOperationClassifier>dom.loadsave:LSInput</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create a new empty input source object where LSInput.characterStream, LSInput.byteStream, LSInput.stringData  
		 LSInput.systemId, LSInput.publicId, LSInput.baseURI, and LSInput.encoding are null, and LSInput.certifiedText is false. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSInput"><linktext>W3C - DOMImplementationLS.createLSInput()</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:DOMImplementationLS:dom.loadsave:DOMImplementationLS:createLSOutput"><apiName>createLSOutput</apiName><shortdesc>
		 Create a new empty output destination object where LSOutput.characterStream, LSOutput.byteStream, LSOutput.systemId, 
		 LSOutput.encoding are null.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created output object. 
		 
		 </apiDesc><apiOperationClassifier>dom.loadsave:LSOutput</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create a new empty output destination object where LSOutput.characterStream, LSOutput.byteStream, LSOutput.systemId, 
		 LSOutput.encoding are null. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSOutput"><linktext>W3C - DOMImplementationLS.createLSOutput()</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:DOMImplementationLS:dom.loadsave:DOMImplementationLS:createLSParser"><apiName>createLSParser</apiName><shortdesc>
		 Create a new LSParser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the requested mode or schema type is not supported. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created LSParser object. This LSParser is either synchronous or asynchronous depending on the value of the mode argument. 
		 
		 <p><b>Note:</b> By default, the newly created LSParser does not contain a DOMErrorHandler, 
		 i.e. the value of the "error-handler" configuration parameter is null. However, implementations may provide 
		 a default error handler at creation time. In that case, the initial value of the "error-handler" configuration 
		 parameter on the new LSParser object contains a reference to the default error handler. </p>
		 
		 </apiDesc><apiOperationClassifier>dom.loadsave:LSParser</apiOperationClassifier></apiReturn><apiParam><apiItemName>mode</apiItemName><apiType value="Number"/><apiDesc>The mode argument is either MODE_SYNCHRONOUS or MODE_ASYNCHRONOUS, if mode is 
		 MODE_SYNCHRONOUS then the LSParser that is created will operate in synchronous mode, if it's 
		 MODE_ASYNCHRONOUS then the LSParser that is created will operate in asynchronous mode. 
		 </apiDesc></apiParam><apiParam><apiItemName>schemaType</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>An absolute URI representing the type of the schema language used during 
		 the load of a Document using the newly created LSParser. Note that no lexical checking is done 
		 on the absolute URI. In order to create a LSParser for any kind of schema types (i.e. the LSParser 
		 will be free to use any schema found), use the value null. 
		 
		 <p><b>Note:</b> For W3C XML Schema [XML Schema Part 1], applications must use the value 
		 "http://www.w3.org/2001/XMLSchema". For XML DTD [XML 1.0], applications must use the value 
		 "http://www.w3.org/TR/REC-xml". Other Schema languages are outside the scope of the W3C and therefore 
		 should recommend an absolute URI in order to use this method. </p>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Create a new LSParser. The newly constructed parser may then be configured by means of its 
		 DOMConfiguration object, and used to parse documents by means of its parse method. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSParser"><linktext>W3C - DOMImplementationLS.createLSParser()</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:DOMImplementationLS:dom.loadsave:DOMImplementationLS:createLSSerializer"><apiName>createLSSerializer</apiName><shortdesc>
		 Create a new LSSerializer object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The newly created LSSerializer object.
		 
		 <p><b>Note:</b> By default, the newly created LSSerializer  has no DOMErrorHandler, i.e. the value of the 
		 "error-handler" configuration parameter is null. However, implementations may provide a default error handler at creation time. 
		 In that case, the initial value of the "error-handler"  configuration parameter on the new LSSerializer object contains a 
		 reference to the default error handler. </p>
		 
		 </apiDesc><apiOperationClassifier>dom.loadsave:LSSerializer</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create a new LSSerializer object. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-createLSSerializer"><linktext>W3C - DOMImplementationLS.createLSSerializer()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.loadsave:LSParser"><apiName>LSParser</apiName><shortdesc>
	 An interface to an object that is able to build, or augment, a DOM tree from various input sources.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An interface to an object that is able to build, or augment, a DOM tree from various input sources. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser"><linktext>W3C - LSParser</linktext></link></related-links><apiOperation id="dom.loadsave:LSParser:abort"><apiName>abort</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-abort"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-abort</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:LSParser:parse"><apiName>parse</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiOperationClassifier>dom.core:Document</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-parse"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-parse</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:LSParser:parseURI"><apiName>parseURI</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiOperationClassifier>dom.core:Document</apiOperationClassifier></apiReturn><apiParam><apiItemName>uri</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-parseURI"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-parseURI</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:LSParser:parseWithContext"><apiName>parseWithContext</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>input</apiItemName><apiOperationClassifier>dom.loadsave.types:LSInputStream</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>contextArg</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>action</apiItemName><apiType value="Number"/><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-parseWithContext"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-parseWithContext</linktext></link></related-links></apiOperation><apiValue id="dom.loadsave:LSParser:ACTION_APPEND_AS_CHILDREN"><apiName>ACTION_APPEND_AS_CHILDREN</apiName><shortdesc>
		 Append the result of the parse operation as children of the context node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Append the result of the parse operation as children of the context node. For this action to work, 
		 the context node must be an Element or a DocumentFragment. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_APPEND_AS_CHILDREN"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_APPEND_AS_CHILDREN</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:ACTION_INSERT_AFTER"><apiName>ACTION_INSERT_AFTER</apiName><shortdesc>
		 Insert the result of the parse operation as the immediately following sibling of the context node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Insert the result of the parse operation as the immediately following sibling of the context node. 
		 For this action to work the context node's parent must be an Element or a DocumentFragment. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_AFTER"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_AFTER</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:ACTION_INSERT_BEFORE"><apiName>ACTION_INSERT_BEFORE</apiName><shortdesc>
		 Insert the result of the parse operation as the immediately preceding sibling of the context node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Insert the result of the parse operation as the immediately preceding sibling of the context node. 
		 For this action to work the context node's parent must be an Element or a DocumentFragment.  
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_BEFORE"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_INSERT_BEFORE</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:ACTION_REPLACE"><apiName>ACTION_REPLACE</apiName><shortdesc>
		 Replace the context node with the result of the parse operation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Replace the context node with the result of the parse operation. For this action to work, the 
		 context node must have a parent, and the parent must be an Element or a DocumentFragment.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:ACTION_REPLACE_CHILDREN"><apiName>ACTION_REPLACE_CHILDREN</apiName><shortdesc>
		 Replace all the children of the context node with the result of the parse operation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Replace all the children of the context node with the result of the parse operation. For this 
		 action to work, the context node must be an Element, a Document, or a DocumentFragment. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE_CHILDREN"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-ACTION_REPLACE_CHILDREN</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:async:get"><apiName>async</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-async"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-async</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:busy:get"><apiName>busy</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-busy"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-busy</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:domConfig:get"><apiName>domConfig</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMConfiguration</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-config"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-config</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParser:filter:get"><apiName>filter</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.loadsave:LSParserFilter</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-filter"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParser-filter</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:DOMImplementationLSMode"><apiName>DOMImplementationLSMode</apiName><shortdesc>
	 Integer parser mode constants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Integer parser mode constants.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementation"><linktext>W3C - DOMImplementationLS</linktext></link></related-links><apiValue id="dom.loadsave:DOMImplementationLSMode:MODE_ASYNCHRONOUS"><apiName>MODE_ASYNCHRONOUS</apiName><shortdesc>
		 Create an asynchronous LSParser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Create an asynchronous LSParser.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-MODE_ASYNCH"><linktext>W3C - DOMImplementationLSMode.MODE_ASYNCHRONOUS</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:DOMImplementationLSMode:MODE_SYNCHRONOUS"><apiName>MODE_SYNCHRONOUS</apiName><shortdesc>
		 Create a synchronous LSParser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Create a synchronous LSParser.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-DOMImplementationLS-MODE_SYNC"><linktext>W3C - DOMImplementationLSMode.MODE_SYNCHRONOUS</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSSerializerFilter"><apiName>LSSerializerFilter</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.tr.traversal:NodeFilter</apiBaseClassifier></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializerFilter"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializerFilter</linktext></link></related-links><apiValue id="dom.loadsave:LSSerializerFilter:whatToShow:get"><apiName>whatToShow</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializerFilter-whatToShow"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSSerializerFilter-whatToShow</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSResourceResolver"><apiName>LSResourceResolver</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSResourceResolver"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSResourceResolver</linktext></link></related-links><apiOperation id="dom.loadsave:LSResourceResolver:dom.loadsave:LSResourceResolver:resolveResource"><apiName>resolveResource</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiOperationClassifier>dom.loadsave:LSInput</apiOperationClassifier></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>publicId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>systemId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>baseURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSResourceResolver-resolveResource"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSResourceResolver-resolveResource</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.loadsave:LSParserFilter"><apiName>LSParserFilter</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter</linktext></link></related-links><apiOperation id="dom.loadsave:LSParserFilter:acceptNode"><apiName>acceptNode</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>nodeArg</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-acceptNode"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-acceptNode</linktext></link></related-links></apiOperation><apiOperation id="dom.loadsave:LSParserFilter:startElement"><apiName>startElement</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>elementArg</apiItemName><apiOperationClassifier>dom.core:Element</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-startElement"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-startElement</linktext></link></related-links></apiOperation><apiValue id="dom.loadsave:LSParserFilter:FILTER_ACCEPT"><apiName>FILTER_ACCEPT</apiName><shortdesc>
		 Accept the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Accept the node.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_ACCEPT"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_ACCEPT</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParserFilter:FILTER_INTERRUPT"><apiName>FILTER_INTERRUPT</apiName><shortdesc>
		 Interrupt the normal processing of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Interrupt the normal processing of the document. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_INTERRUPT"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_INTERRUPT</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParserFilter:FILTER_REJECT"><apiName>FILTER_REJECT</apiName><shortdesc>
		 Reject the node and its children.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Reject the node and its children.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_REJECT"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_REJECT</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParserFilter:FILTER_SKIP"><apiName>FILTER_SKIP</apiName><shortdesc>
		 Skip this single node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Skip this single node. The children of this node will still be considered. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_SKIP"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-FILTER_SKIP</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSParserFilter:whatToShow:get"><apiName>whatToShow</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-whatToShow"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSParserFilter-whatToShow</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.loadsave:LSProgressEvent"><apiName>LSProgressEvent</apiName><shortdesc>
	 This interface represents a progress event object that notifies the application about progress as a document is parsed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This interface represents a progress event object that notifies the application about progress as a document is parsed.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent</linktext></link></related-links><apiValue id="dom.loadsave:LSProgressEvent:input:get"><apiName>input</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.loadsave:LSInput</apiValueClassifier></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-input"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-input</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSProgressEvent:position:get"><apiName>position</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-position"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-position</linktext></link></related-links></apiValue><apiValue id="dom.loadsave:LSProgressEvent:totalSize:get"><apiName>totalSize</apiName><shortdesc>
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMLS" version="3"/><apiSince version="DOMLS 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-totalSize"><linktext>http://www.w3.org/TR/DOM-Level-3-LS/load-save.html#LS-LSProgressEvent-totalSize</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.objects"><apiName>dom.objects</apiName><apiDetail/><apiClassifier id="dom.objects:NavigatorOnLine"><apiName>NavigatorOnLine</apiName><shortdesc>
	 Objects implementing the Navigator interface must also implement the NavigatorOnLine interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the Navigator interface must also implement the NavigatorOnLine interface. This interface is defined separately so 
	 that other specifications can re-use parts of the Navigator interface.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorOnLine</linktext></link></related-links><apiValue id="dom.objects:NavigatorOnLine:dom.objects:NavigatorOnLine:onLine:get"><apiName>onLine</apiName><shortdesc>
		 Returns a boolean indicating whether the browser is working online.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether the browser is working online. 
		 
		 <p><b>Note (IE):</b>  In Windows Internet Explorer 8 and later, the onLine property returns true if both of the 
		 following conditions are true: 
		 <ul>
		 <li>the system is able to communicate with the network</li>
		 <li>the system is not in global offline mode (Users can modify the global offline state by choosing Work Offline on the File menu.)</li>
		 </ul>
		 If either of these conditions is false, the onLine property returns false.
		 </p>
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 4.0 through Internet Explorer 7, the onLine property indicates whether the 
		 system is in global offline mode. It does not indicate whether the system can communicate with the network.</p>
		 
		 </apiDesc><example>
		 <codeblock>alert(navigator.onLine ? "You're online" : "You're offline");</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534307%28VS.85%29.aspx"><linktext>MSDN - onLine Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.navigator.onLine"><linktext>MDC - window.navigator.onLine</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:MessagePortArray"><apiName>MessagePortArray</apiName><shortdesc>
	 A typed array containing only MessagePorts
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A typed array containing only MessagePorts
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/html5/comms.html#messageport"><linktext>W3C - HTML5: MessagePortArray</linktext></link><link href="dom.objects.xml#MessagePort"><linktext>dom.objects.MessagePort</linktext></link></related-links></apiClassifier><apiClassifier id="dom.objects:MimeType"><apiName>MimeType</apiName><shortdesc>
	 A MIME type (Multipart Internet Mail Extension) supported by the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A MIME type (Multipart Internet Mail Extension) supported by the client.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links><apiValue id="dom.objects:MimeType:description:get"><apiName>description</apiName><shortdesc>
		 A description of the MIME type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A description of the MIME type.
		 
		 </apiDesc><example><codeblock>"Adobe Flash movie"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue><apiValue id="dom.objects:MimeType:enabledPlugin:get"><apiName>enabledPlugin</apiName><shortdesc>
		 Reference to the Plugin object configured for the MIME type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Plugin</apiValueClassifier></apiValueDef><apiDesc>
		 Reference to the Plugin object configured for the MIME type.
		 
		 </apiDesc><example>
		 <codeblock>
		 // Can we display Shockwave movies?
		 var mimetype = navigator.mimeTypes["application/x-director"];
		 if (mimetype) {
		 	// Yes, so can we display with a plug-in?
		 	var plugin = mimetype.enabledPlugin;
		 	if (plugin) {
		 		// Yes, so show the data in-line
		 		document.writeln("Here's a movie: &lt;EMBED SRC=mymovie.dir HEIGHT=100 WIDTH=100&gt;");
		 	} else {
		 		// No, so provide a link to the data
		 		document.writeln("&lt;A HREF='mymovie.dir'&gt;Click here&lt;/A&gt; to see a movie.");
		 	}
		 } else {
		 	// No, so tell them so
		 	document.writeln("Sorry, can't show you this cool movie.");
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue><apiValue id="dom.objects:MimeType:suffixes:get"><apiName>suffixes</apiName><shortdesc>
		 A string listing possible filename extensions for the MIME type, for example "mpeg, mpg, mpe, mpv, vbs, mpegv".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A string listing possible filename extensions for the MIME type, for example "mpeg, mpg, mpe, mpv, vbs, mpegv".
		 
		 </apiDesc><example><codeblock>"swf"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue><apiValue id="dom.objects:MimeType:type:get"><apiName>type</apiName><shortdesc>
		 The name of the MIME type, for example "video/mpeg" or "audio/x-wav".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the MIME type, for example "video/mpeg" or "audio/x-wav".
		 
		 </apiDesc><example><codeblock>"application/x-shockwave-flash"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:Location"><apiName>Location</apiName><shortdesc>
	 Contains information about the URL of the document and provides methods for changing that URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains information about the URL of the document and provides methods for changing that URL.
	 
	 </apiDesc><example>
	 Replace the current document with the one at the given URL: 
	 <codeblock>
	 function goMoz() {
	 	window.location = "http://www.mozilla.org";
	 } 
	 
	 // in html: &lt;button onclick="goMoz();"&gt;Mozilla&lt;/button&gt;</codeblock>
	 
	 </example></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535866%28VS.85%29.aspx"><linktext>MSDN - location Object</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links><apiOperation id="dom.objects:Location:assign"><apiName>assign</apiName><shortdesc>
		 Load the document at the provided URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The URL of the document to load.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Load the document at the provided URL.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536342%28VS.85%29.aspx"><linktext>MSDN - assign Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Location:reload"><apiName>reload</apiName><shortdesc>
		 Reload the document from the current URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>forceget</apiItemName><apiType value="Boolean"/><apiDesc><b>Not in W3 specification</b> When it is true, causes the page to always be reloaded from 
		 the server. If it is false or not specified, the browser may reload the page 
		 from its cache.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Reload the document from the current URL.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536691%28VS.85%29.aspx"><linktext>MSDN - reload Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Location:replace"><apiName>replace</apiName><shortdesc>
		 Replace the current document with the one at the provided URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The URL to insert into the session history.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replace the current document with the one at the provided URL. The difference 
		 from the assign() method is that after using replace() the current page will 
		 not be saved in session history, meaning the user won't be able to use the 
		 Back button to navigate to it.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536712%28VS.85%29.aspx"><linktext>MSDN - replace Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiOperation><apiValue id="dom.objects:Location:hash:get"><apiName>hash</apiName><shortdesc>
		 The part of the URL that follows the # symbol, including the # symbol.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The part of the URL that follows the # symbol, including the # symbol.
		 
		 <p><b>Note:</b> If there is no number sign, this property returns an empty string.</p>
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>hash: <codeph>#test</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533775%28VS.85%29.aspx"><linktext>MSDN - hash Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:host:get"><apiName>host</apiName><shortdesc>
		 The host name (without the port number or square brackets).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The host name (without the port number or square brackets).
		 
		 <p><b>Note:</b> The host property is the concatenation of the hostname and port properties, separated by a colon (hostname:port). When the port property is null, the host property is the same as the hostname property. </p>
		 
		 <p><b>Note:</b> The host property may be set at any time, although it is safer to set the href property to change a location. If the specified host cannot be found, an error is returned. </p>
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>host: <codeph>[www.google.com]:80</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533784%28VS.85%29.aspx"><linktext>MSDN - host Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:hostname:get"><apiName>hostname</apiName><shortdesc>
		 This attribute represents the name or IP address of the network location without any port number.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute represents the name or IP address of the network location without any port number.
		 
		 <p><b>Note:</b> If no host name is available, this property returns an empty string. </p>
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>hostname: <codeph>www.google.com</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533785%28VS.85%29.aspx"><linktext>MSDN - hostname Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:href:get"><apiName>href</apiName><shortdesc>
		 Sets or retrieves the entire URL as a string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves the entire URL as a string.
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>href: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph></p>
		 
		 <p>This example shows a URL list. The user is taken to the URL selected from the options, if the selection is different from the list's default value.</p>
		 <codeblock>
		 &lt;SELECT onchange="window.location.href=this.options[this.selectedIndex].value"&gt;
		 	&lt;OPTION VALUE="http://www.microsoft.com/ie"&gt;Internet Explorer&lt;/OPTION&gt;
		 	&lt;OPTION VALUE="http://www.microsoft.com"&gt;Microsoft Home&lt;/OPTION&gt;
		 	&lt;OPTION VALUE="http://msdn.microsoft.com"&gt;Developer Network&lt;/OPTION&gt;
		 &lt;/SELECT&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533867%28VS.85%29.aspx"><linktext>MSDN - href Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:pathname:get"><apiName>pathname</apiName><shortdesc>
		 The path (relative to the host).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The path (relative to the host).
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>pathname: <codeph>/search</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534332%28VS.85%29.aspx"><linktext>MSDN - pathname Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:port:get"><apiName>port</apiName><shortdesc>
		 This attribute represents the port number of the network location.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute represents the port number of the network location.
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>port: <codeph>80</codeph></p>
		 
		 <p>This example function returns the port property of two <codeph>a</codeph> elements.</p>
		 <codeblock>
		 &lt;script&gt;
		 function getPort() {
		 	alert ("FTP: " + oFtp.port + "\n" + "HTTP: " + oHttp.port);
		 }
		 &lt;/script&gt;
		 
		 &lt;a href="ftp://www.microsoft.com" onclick="getPort();" id=oFtp&gt;ftp&lt;/a&gt;
		 &lt;a href="http://www.microsoft.com" onclick="getPort();" id=oHttp&gt;http&lt;/a&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534342%28VS.85%29.aspx"><linktext>MDC - port Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:protocol:get"><apiName>protocol</apiName><shortdesc>
		 This attribute represents the scheme of the URI including the trailing colon (:).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute represents the scheme of the URI including the trailing colon (:).
		 
		 <p><b>Note (IE):</b> The protocol property specifies how to transfer information from the host to the client. Windows Internet Explorer supports several predefined protocols, including http and ftp.</p>
		 
		 <p><b>Note (IE):</b> The document, img, and location objects expose the protocol property as read-only.
		 location.protocol property returns the initial substring of a URL, including the first colon (for example, http:).
		 However, document.protocol returns the expanded text of the protocol acronym. For example, it returns the http 
		 protocol as Hypertext Transfer Protocol.</p>
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>protocol: <codeph>http:</codeph></p>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534353%28VS.85%29.aspx"><linktext>MSDN - protocol Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue><apiValue id="dom.objects:Location:search:get"><apiName>search</apiName><shortdesc>
		 The part of the URL that follows the ? symbol, including the ? symbol.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>WindowObject 1
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The part of the URL that follows the ? symbol, including the ? symbol.
		 
		 </apiDesc><example>
		 You can read them to get information about the current URL or set them to navigate to another URL.
		 The example contains the value of the property of the following URL: <codeph>http://[www.google.com]:80/search?q=devmo#test</codeph>
		 
		 <p>search: <codeph>?q=devmo</codeph></p>
		 
		 <p>Send a string of data to the server by modifying the search property: </p>
		 <codeblock>
		 function sendData(dat) {
		 	window.location.search = dat;
		 }
		 
		 // in html: &lt;button onclick="sendData('Some data');"&gt;Send data&lt;/button&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534620%28VS.85%29.aspx"><linktext>MSDN - search Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.location"><linktext>MDC - window.location</linktext></link><link href="http://www.w3.org/TR/Window/#location"><linktext>W3C - Window.location</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:NavigatorID"><apiName>NavigatorID</apiName><shortdesc>
	 Objects implementing the Navigator interface must also implement the NavigatorID interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the Navigator interface must also implement the NavigatorID interface. This interface is defined separately so 
	 that other specifications can re-use parts of the Navigator interface.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links><apiValue id="dom.objects:NavigatorID:dom.objects:NavigatorID:appName:get"><apiName>appName</apiName><shortdesc>
		 Returns the official name of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the official name of the browser. 
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(window.navigator.appName);
		 // prints "Navigator" to the console for NS6</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533079%28VS.85%29.aspx"><linktext>MSDN - appName Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appName"><linktext>MDC - window.navigator.appName</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:NavigatorID:dom.objects:NavigatorID:appVersion:get"><apiName>appVersion</apiName><shortdesc>
		 Returns the version of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the version of the browser.
		 
		 <p><b>Note:</b> The window.navigator.userAgent property also contains the version number 
		 (example: "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape 6/6.1"), but you 
		 should be aware of how easy it is to change the user agent string and "spoof" other browsers, platforms, 
		 or user agents, and also how cavalier the browser vendor themselves are with these properties. 
		 The window.navigator.appVersion and window.navigator.userAgent properties are quite often used in 
		 "browser sniffing" code: scripts that attempt to find out what kind of browser you are using and 
		 adjust pages accordingly.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( navigator.appVersion.charAt(0) == "5" ) { 
		 	// browser is putatively a v5 browser
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533080%28VS.85%29.aspx"><linktext>MSDN - appVersion Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appVersion"><linktext>MDC - window.navigator.appVersion</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:NavigatorID:dom.objects:NavigatorID:platform:get"><apiName>platform</apiName><shortdesc>
		 Returns a string representing the platform of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representing the platform of the browser.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Platform Code</entry><entry>Platform Name</entry></row></thead><tbody><row>
		 		<entry>HP-UX</entry><entry><codeph>HP UNIX-based computers.</codeph></entry>
		 	</row><row>
		 		<entry>MacPPC</entry><entry>Macintosh PowerPC-based computers.</entry>
		 	</row><row>
		 		<entry>Mac68K</entry><entry>Macintosh 68K-based computers.</entry>
		 	</row><row>
		 		<entry>MacIntel</entry><entry>Macintosh Intel-based computers.</entry>
		 	</row><row>
		 		<entry>Win32</entry><entry><codeph>Microsoft Windows 32-bit platform.</codeph></entry>
		 	</row><row>
		 		<entry>Win16</entry><entry>Windows 16-bit platform.</entry>
		 	</row><row>
		 		<entry>WinCE</entry><entry>Windows CE platform.</entry>
		 	</row><row>
		 		<entry>Linux i686</entry><entry>Linux i686</entry>
		 	</row><row>
		 		<entry>Other</entry><entry>Other</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note (Mozilla):</b> Unless your code is privileged (chrome or at least has the UniversalBrowserRead 
		 privilege), it may get the value of the general.platform.override preference instead of the true platform. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534340%28VS.85%29.aspx"><linktext>MSDN - platform Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.platform"><linktext>MDC - window.navigator.platform</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:NavigatorID:dom.objects:NavigatorID:userAgent:get"><apiName>userAgent</apiName><shortdesc>
		 Returns the user agent string for the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the user agent string for the current browser. 
		 
		 <p><b>Note:</b> Browser identification based on detecting the user agent string is 
		 <b>unreliable</b> and <b>is not recommended</b>, as the user agent string is user configurable.
		 
		 <ul>
		 <li>Mozilla Suite and Firefox can use the preference "general.useragent.override" in about:config. Some Firefox extensions or multi-bar do that. </li>
		 <li>Opera 6+ allows users to set the browser identification string via a menu </li>
		 <li>Microsoft Internet Explorer uses the Windows registry </li>
		 <li>Safari and iCab allow users to change the browser user agent string to predefined Internet Explorer or Netscape strings via a menu. </li>
		 </ul>
		 
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 alert(window.navigator.userAgent);
		 // alerts "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape6/6.1"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534712%28VS.85%29.aspx"><linktext>MSDN - userAgent Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.userAgent"><linktext>MDC - window.navigator.userAgent</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:CRMFRequest"><apiName>CRMFRequest</apiName><shortdesc>
	 RFC 4211, the Internet X.509 Public Key Infrastructure Certificate Request Message 
	 Format (CRMF), defines a certReqMessage.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 RFC 4211, the Internet X.509 Public Key Infrastructure Certificate Request Message 
	 Format (CRMF), defines a certReqMessage. The object returned by generateCRMFRequest() 
	 contains one of those.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.ietf.org/rfc/rfc4211.txt"><linktext>Network Working Group - RFC 4211</linktext></link><link href="http://mh-in-f132.google.com/search?hl=en&amp;safe=off&amp;num=100&amp;q=cache%3Awww.ietf.org%2Frfc%2Frfc4211.txt+certReqMessage+certRequest+certReq&amp;btnG=Search"><linktext>Network Working Group - certReqMessage</linktext></link><link href="http://developer.mozilla.org/en/CRMF_Request_object"><linktext>MDC - CRMF Request object</linktext></link><link href="dom.objects.xml#Crypto/generateCRMFRequest()"><linktext>dom.objects.Crypto.generateCRMFRequest()</linktext></link></related-links><apiValue id="dom.objects:CRMFRequest:request:get"><apiName>request</apiName><shortdesc>
		 Returns a encrypted string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a encrypted string.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.objects:MimeTypeArray"><apiName>MimeTypeArray</apiName><shortdesc>
	 Contains a list of MimeType objects representing the MIME types recognized by the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains a list of MimeType objects representing the MIME types recognized by the browser. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links><apiOperation id="dom.objects:MimeTypeArray:item"><apiName>item</apiName><shortdesc>
		 Retrieves a MimeType by index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The specified MimeType
		 
		 </apiDesc><apiOperationClassifier>dom.objects:MimeType</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index of the MimeType
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a MimeType by index.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:MimeTypeArray:nameItem"><apiName>nameItem</apiName><shortdesc>
		 Retrives a MimeType by name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The specified MimeType
		 
		 </apiDesc><apiOperationClassifier>dom.objects:MimeType</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of the MimeType
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrives a MimeType by name.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiOperation><apiValue id="dom.objects:MimeTypeArray:length:get"><apiName>length</apiName><shortdesc>
		 The number of MimeTypes in the array.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of MimeTypes in the array.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:BarProp"><apiName>BarProp</apiName><shortdesc>
	 To allow Web pages to integrate with Web browsers, certain Web browser interface elements are exposed in a limited way to scripts in Web pages.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 To allow Web pages to integrate with Web browsers, certain Web browser interface elements are exposed in a limited way to scripts in Web pages.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/html5/browsers.html#barprop"><linktext>W3C HTML 5: BarProp</linktext></link></related-links><apiValue id="dom.objects:BarProp:visible:get"><apiName>visible</apiName><shortdesc>
		 The visible attribute, on getting, must return either true or a value determined by the user agent to most accurately 
		 represent the visibility state of the user interface element that the object represents, 
		 as described below.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The visible attribute, on getting, must return either true or a value determined by the user agent to most accurately 
		 represent the visibility state of the user interface element that the object represents, 
		 as described below. On setting, the new value must be discarded.
		 
		 <p>The following BarProp objects exist for each Document object in a browsing context. Some of the user interface elements represented 
		 by these objects might have no equivalent in some user agents; for those user agents, unless otherwise specified, the object must 
		 act as if it was present and visible (i.e. its visible attribute must return true).</p>
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>window.locationbar</entry><entry>Represents the user interface element that contains a control that displays the URL of the
		 active document, or some similar interface concept.</entry>
		 	</row><row>
		 		<entry>window.menubar</entry><entry>Represents the user interface element that contains a list of commands in menu form, or some 
		 similar interface concept.</entry>
		 	</row><row>
		 		<entry>window.personalbar</entry><entry>Represents the user interface element that contains links to the user's favorite pages, or 
		 some similar interface concept.</entry>
		 	</row><row>
		 		<entry>window.scrollbars</entry><entry>Represents the user interface element that contains links to the user's favorite pages, 
		 or some similar interface concept.</entry>
		 	</row><row>
		 		<entry>window.statusbar</entry><entry>Represents a user interface element found immediately below or after the document, as appropriate 
		 for the default view's media. If the user agent has no such user interface element, then the object may act as if the corresponding
		 user interface element was absent (i.e. its visible attribute may return false).</entry>
		 	</row><row>
		 		<entry>window.toolbar</entry><entry>Represents the user interface element found immediately above or before the document, as appropriate 
		 for the default view's media. If the user agent has no such user interface element, then the object may act as if the corresponding 
		 user interface element was absent (i.e. its visible attribute may return false).</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/html5/browsers.html#barprop"><linktext>W3C HTML 5: BarProp.visible</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:PluginArray"><apiName>PluginArray</apiName><shortdesc>
	 Contains a list of Plugins objects loaded in the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains a list of Plugins objects loaded in the browser. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537477%28VS.85%29.aspx#"><linktext>MSDN - plugins Collection</linktext></link><link href="http://developer.mozilla.org/en/Navigator.plugins"><linktext>MDC - window.navigator.plugins</linktext></link></related-links><apiOperation id="dom.objects:PluginArray:item"><apiName>item</apiName><shortdesc>
		 Retrieves a Plugins by index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The specified Plugins
		 
		 </apiDesc><apiOperationClassifier>dom.objects:Plugin</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index of the Plugins
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a Plugins by index.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536460%28VS.85%29.aspx"><linktext>MSDN - item Method</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:PluginArray:nameItem"><apiName>nameItem</apiName><shortdesc>
		 Retrives a Plugins by name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The specified Plugins
		 
		 </apiDesc><apiOperationClassifier>dom.objects:Plugin</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of the Plugins
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrives a Plugins by name.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536634%28VS.85%29.aspx"><linktext>MSDN - namedItem Method</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:PluginArray:refresh"><apiName>refresh</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.objects:PluginArray:tags"><apiName>tags</apiName><shortdesc>
		 Retrieves a collection of objects that have the specified HTML tag name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Retrieves a collection of objects that have the specified HTML tag name. 
		 
		 </apiDesc><example>
		 <codeblock>var coll = document.all.tags("p");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536776%28VS.85%29.aspx"><linktext>MSDN - tags Method</linktext></link></related-links></apiOperation><apiValue id="dom.objects:PluginArray:length:get"><apiName>length</apiName><shortdesc>
		 The number of Plugins in the array.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of Plugins in the array.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534101%28VS.85%29.aspx"><linktext>MSDN - length Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:History"><apiName>History</apiName><shortdesc>
	 Contains information about the URLs visited by the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains information about the URLs visited by the client.
	 
	 <p><b>Note:</b> For security reasons, the history object does not expose the actual 
	 URLs in the browser history. It does allow navigation through the browser history by exposing 
	 the back, forward, and go methods. A particular document in the browser history can be 
	 identified as an index relative to the current page. For example, specifying -1 as a parameter 
	 for the go method is the equivalent of clicking the Back button.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535864(VS.85).aspx"><linktext>MSDN - history Object</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links><apiOperation id="dom.objects:History:back"><apiName>back</apiName><shortdesc>
		 Goes to the previous page in session history, the same action as when the user clicks the browser's Back button.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Goes to the previous page in session history, the same action as when the user clicks the browser's Back button.
		 
		 <p>Equivalent to history.go(-1).</p>
		 
		 <p>Calling this method to go back beyond the first page in the session history has no effect 
		 and doesn't raise an exception.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536346%28VS.85%29.aspx"><linktext>MSDN - back Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:History:forward"><apiName>forward</apiName><shortdesc>
		 Goes to the next page in session history, the same action as when the user clicks the browser's Forward button.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Goes to the next page in session history, the same action as when the user clicks the browser's Forward button.
		 
		 <p>Equivalent to history.go(1).</p>
		 
		 <p>Calling this method to go back beyond the last page in the session history has no effect 
		 and doesn't raise an exception.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536426%28VS.85%29.aspx"><linktext>MSDN - forward Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:History:go"><apiName>go</apiName><shortdesc>
		 Loads a page from the session history, identified by its relative location to the current page, for 
		 example -1 for the previous page or 1 for the next page.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>integerDelta</apiItemName><apiType value=""/><apiDesc>Specifies an integer or a string. An integer indicates the relative position of a URL in the History list. A string indicates an exact URL in the History list.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Loads a page from the session history, identified by its relative location to the current page, for 
		 example -1 for the previous page or 1 for the next page.
		 
		 <p>When integerDelta is out of bounds (e.g. -1 when there are no previously visited pages in the session 
		 history), the method doesn't do anything and doesn't raise an exception.</p>
		 
		 <p>Calling go() without parameters or with a non-integer argument has no effect (unlike Internet Explorer, 
		 which supports string URLs as the argument [1]).</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href=""><linktext/></link><link href="http://msdn.microsoft.com/en-us/library/ms536426%28VS.85%29.aspx"><linktext>MSDN - forward Method MSDN - go Method</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms536443(VS.85).aspx"><linktext>MSDN - [1]</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiOperation><apiValue id="dom.objects:History:current:get"><apiName>current</apiName><shortdesc>
		 Returns the URL of the active item of the session history.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URL of the active item of the session history.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiValue><apiValue id="dom.objects:History:length:get"><apiName>length</apiName><shortdesc>
		 Returns the number of elements in the session history, including the currently loaded page.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of elements in the session history, including the currently loaded page.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534105%28VS.85%29.aspx"><linktext>MSDN - length Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiValue><apiValue id="dom.objects:History:next:get"><apiName>next</apiName><shortdesc>
		 Returns the URL of the next item in the session history
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URL of the next item in the session history
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiValue><apiValue id="dom.objects:History:previous:get"><apiName>previous</apiName><shortdesc>
		 Returns the URL of the previous item in the session history
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URL of the previous item in the session history
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.history"><linktext>MDC - window.history</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:MessagePort"><apiName>MessagePort</apiName><shortdesc>
	 Each channel has two message ports.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Each channel has two message ports. Data sent through one port is received by the other port, and vice versa.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/html5/comms.html#messageport"><linktext>W3C - HTML5: MessagePort</linktext></link></related-links><apiOperation id="dom.objects:MessagePort:dom.objects:MessagePort:close"><apiName>close</apiName><shortdesc>
		 Disconnects the port, so that it is no longer active.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Disconnects the port, so that it is no longer active.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/html5/comms.html#dom-messageport-close"><linktext>W3C - HTML5: MessagePort.start()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:MessagePort:dom.objects:MessagePort:postMessage"><apiName>postMessage</apiName><shortdesc>
		 Posts a message through the channel, optionally with the given ports.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_STATE_ERR: If the ports array is not null and it contains either null 
		 entries, duplicate ports, ports that are not entangled, or the source or target port.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiType value=""/><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>ports</apiItemName><apiOperationClassifier>dom.objects:MessagePortArray</apiOperationClassifier><apiDesc>	 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Posts a message through the channel, optionally with the given ports.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/html5/comms.html#dom-messageport-postmessage"><linktext>W3C - HTML5: MessagePort.postMessage()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:MessagePort:dom.objects:MessagePort:start"><apiName>start</apiName><shortdesc>
		 Begins dispatching messages received on the port.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Begins dispatching messages received on the port.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/html5/comms.html#dom-messageport-start"><linktext>W3C - HTML5: MessagePort.start()</linktext></link></related-links></apiOperation><apiValue id="dom.objects:MessagePort:dom.objects:MessagePort:active:get"><apiName>active</apiName><shortdesc>
		 Returns true if the port is still active; otherwise, returns false.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns true if the port is still active; otherwise, returns false.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/html5/comms.html#dom-messageport-active"><linktext>W3C - HTML5: MessagePort.active</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:Crypto"><apiName>Crypto</apiName><shortdesc>
	 Mozilla defines a special JavaScript object to allow web pages access to certain cryptographic related services.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Mozilla defines a special JavaScript object to allow web pages access to certain cryptographic related services. 
	 These services are a balance between the functionality web pages need, and the requirement to protect users from 
	 malicious web sites. Most of these services are available via the JavaScript window object as window.crypto.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links><apiOperation id="dom.objects:Crypto:alert"><apiName>alert</apiName><shortdesc> 
		 Undocumented
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> 
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Crypto:disableRightClick"><apiName>disableRightClick</apiName><shortdesc> 
		 Undocumented
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Crypto:generateCRMFRequest"><apiName>generateCRMFRequest</apiName><shortdesc>
		 This method will generate a sequence of CRMF requests that has N requests.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>
		 
		 </apiDesc><apiOperationClassifier>dom.objects:CRMFRequest</apiOperationClassifier></apiReturn><apiParam><apiItemName>requestedDN</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>An RFC 1485 formatted DN to include in the certificate request.
		 </apiDesc></apiParam><apiParam><apiItemName>regToken</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A value used to authenticate the user to the RA/CA.
		 </apiDesc></apiParam><apiParam><apiItemName>authenticator</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A value that the user can authenticate with in the future when 
		 their private key is not available. Can be used for key recovery or revocation requests.
		 </apiDesc></apiParam><apiParam><apiItemName>escrowAuthorityCert</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>If this value is NULL, then no key escrow will be performed. 
		 This value specifies which KRA certificate should be used to wrap the private key being 
		 escrowed. The user will be prompted for confirmation whenever a key will be escrowed. 
		 Only key exchange keys will be escrowed. If a dual use key is being generated, it will 
		 not be escrowed. The value of this argument is a base-64 encoded certificate.
		 </apiDesc></apiParam><apiParam><apiItemName>CRMFGenerationDoneCode</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This parameter is JavaScript to execute when the CRMF generation is complete.
		 </apiDesc></apiParam><apiParam><apiItemName>keySizeN</apiItemName><apiType value="Number"/><apiDesc>The size in bits of the Nth key to generate
		 </apiDesc></apiParam><apiParam><apiItemName>keyParamsN</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This string is an optional algorithm dependent parameter value. For 
		 Diffie-Hellman it is used to specify p and g parameters. For DSA, it will be used to 
		 specify pqg. If the key generation requires parameters and the value passed in is NULL, 
		 then the client will generate the parameters on its own. Currently, this value is ignored.
		 </apiDesc></apiParam><apiParam><apiItemName>keyGenAlgN</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Which algorithm the generated key will support. Acceptable values are (the 
		 mentioned values for keyUsage pertain to the keyUsage value of the Certificate Extension that 
		 will ultimately be in the issued certificate):
		 <ul>
		 <li>"rsa-ex" - generate an RSA key for key exchange only (This will have eyEncipherment set for keyUsage.)</li>
		 <li>"rsa-dual-use" - generate a single RSA key for both signing and encryption. (This will have digitalSignature, keyEncipherment, and nonRepudiation set for keyUsage.)</li>
		 <li>"rsa-sign" - generate an RSA key for signing only. (This will have digitalSignature set for keyUsage.)</li>
		 <li>"rsa-nonrepudiation" - generate a single RSA key for nonRepudiation only. (This will have non-repudiation set for keyUsage.)</li>
		 <li>"rsa-sign-nonrepudiation" - generate a single RSA key use for both signing and nonRepudiation. (This will have both digitalSignature and nonRepudiation set for keyUsage.)</li>
		 <li>"dsa-sign" - generate a single DSA key for signing only. (This will have digitalSignature set for keyUsage.)</li>
		 <li>"dsa-nonrepudiation" - generate a single DSA key for nonRepudiation. (This will have nonRepudiation set for keyUsage.)</li>
		 <li>"dsa-sign-nonrepudiation" - generate a single DSA key for signing and non-repudiation. (This will have digitalSignature and nonRepudiation set for keyUsage.)</li>
		 <li>"dh-ex"</li>
		 <li>"ec-ex"</li>
		 <li>"ec-dual-use"</li>
		 <li>"ec-sign"</li>
		 <li>"ec-sign-nonrepudiation"</li>
		 <li>"ec-nonrepudiation"</li>
		 </ul>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method will generate a sequence of CRMF requests that has N requests. One request 
		 for each key pair that is generated. The first three parameters will be applied to every 
		 request. The "escrowAuthorityCert" parameter will only be used for requests that pertain 
		 to a key that is being escrowed. After the "escrowAuthorityCert" parameter, the method 
		 takes some JavaScript code that is invoked when the CRMF request is ready. Finally, there 
		 are 1 or more sets of key generation arguments. Each key generation will be associated 
		 with its own request. All the requests will have the same DN.
		 
		 </apiDesc><example>
		 This generates a CRMF object with dummy settings and outputs to Firebug
		 <codeblock>
		 var crmfObject = null;
		 try {
		 	crmfObject = window.crypto.generateCRMFRequest("CN=vvv", "regToken", null, null, 'f' , 1024, null, "rsa-dual-use");
		 } catch(ex) {
		 	console.log("window.crypto.generateCRMFRequest() failed - " + ex + "\n");
		 }
		 function f() {
		 	console.log("done");
		 }
		 console.log(crmfObject);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/GenerateCRMFRequest"><linktext>MDC - crypto.generateCRMFRequest()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Crypto:importUserCertificates"><apiName>importUserCertificates</apiName><shortdesc>
		 Imports newly issued certificates for the user.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the import operation succeeds, an empty string will be returned. If it fails, one of 
		 the following error strings will be returned: 
		 <ul>
		 <li>"error:userCancel" -	The user canceled the import operation</li>
		 <li>"error:invalidCertificate" -	One of the certificate packages was incorrectly formatted</li>
		 <li>"error:internalError" -	The software encountered some internal error, such as out of memory</li>
		 <li>"error:invalidRequestID" -	The request ID in the response message does not match any outstanding request</li>
		 </ul>
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>nicknameString</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This is the nickname that will be used to describe the certificate in the 
		 client's certificate management UI. It should serve to uniquely identify the certificate to the user. 
		 For example, "John Smith's VeriSign Class 3 Digital ID" or "John Smith's Ford ID Certificate". However, 
		 if this certificate has the same DN as one or more certificates that already exist in the user's 
		 certificate store, the nickname associated with the certificate(s) of the same DN in the certificate 
		 store is used, and the "nicknameString" parameter is ignored. If the string is null and no certificate 
		 with the same DN exists in the user's certificate store, Personal Security Manager uses the following 
		 pattern to derive the nickname: &lt;Common Name&gt;'s &lt;Issuer Name&gt; ID.
		 </apiDesc></apiParam><apiParam><apiItemName>certString</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This string is the CMMF Certification Response from the CA that contains the user's certificate(s). The response is base-64 encoded.
		 </apiDesc></apiParam><apiParam><apiItemName>forceBackup</apiItemName><apiType value="Boolean"/><apiDesc>It allows the CA or RA to indicate to the client whether to force the user to back up a newly issued certificate (PKCS #12).
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Imports newly issued certificates for the user. The private key for the certificates must 
		 already reside in the user's personal private key database.
		 
		 The request ID in the response being imported must match the request ID in the associated 
		 Certification Request or Recovery Request.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/ImportUserCertificates"><linktext>MDC - crypto.importUserCertificates()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Crypto:logout"><apiName>logout</apiName><shortdesc> 
		 Undocumented
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc> 
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Crypto:popChallengeResponse"><apiName>popChallengeResponse</apiName><shortdesc>
		 The popChallengeResponse() function returns a proof of key posession signed challenge which a CA can use 
		 to verify the client has the private key associated with it's claimed public key.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The resultString will either be a base-64 encoded POPODecKeyRespContent message, or one of the 
		 following error strings: 
		 <ul>
		 <li>"error:invalidParameter:XXX" 	The parameter XXX was an invalid value.</li>
		 <li>"error:internalError" 	The software encountered some internal error, such as out of memory</li>
		 </ul>
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>challengeString</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A base-64 encoded CMMF POPODecKeyChallContent message. The current implementation
		 does not conform to that defined in the CMMF draft, and we intend to change this implementation to that 
		 defined in the CMC RFC. See below for the current implementation.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The popChallengeResponse() function returns a proof of key posession signed challenge which a CA can use 
		 to verify the client has the private key associated with it's claimed public key. 
		 
		 </apiDesc><example>
		 <codeblock>
		 resultString = crypto.popChallengeResponse("challengeString");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/PopChallengeResponse"><linktext>MDC - crypto.popChallengeResponse()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Crypto:random"><apiName>random</apiName><shortdesc> 
		 Generates a random number of numBytes length.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>numBytes</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc> 
		 Generates a random number of numBytes length.
		 
		 <p><b>Note (Mozilla):</b> window.crypto.random() is not yet implemented in Mozilla browsers.</p>
		 
		 </apiDesc><example>
		 To obtain a ten byte random number using the cryptographic engine, simply call: 
		 <codeblock>var myrandom = window.crypto.random(10);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Crypto:signText"><apiName>signText</apiName><shortdesc> 
		 Undocumented
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>stringToSign</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiParam><apiParam><apiItemName>caOption</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiParam></apiOperationDef><apiDesc> 
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiOperation><apiValue id="dom.objects:Crypto:enableSmartCardEvents:get"><apiName>enableSmartCardEvents</apiName><shortdesc> 
		 To enable your document to receive these events, you must first tell the crypto system you are interested.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc> 
		 To enable your document to receive these events, you must first tell the crypto system you are interested. You 
		 can do this by setting <codeph>window.crypto.enableSmartCardEvents</codeph> to <codeph>true</codeph>. This tells the 
		 crypto system that you are interested in listening for these events. You can then register event handlers for 
		 these events with the document.addEventListener. 
		 
		 </apiDesc><example>
		 With this example, your website will automatically reload anytime a SmartCard is inserted or removed. This 
		 allows the page to automatically login and logout based on the presence of the SmartCard. 
		 <codeblock>
		 &lt;!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN"&gt;
		 &lt;html&gt;&lt;head&gt; 
		 ....
		 &lt;script language="javascript"&gt;
		 
		 function onSmartCardChange() {
		 	window.location.reload();
		 }
		 function register() {
		 window.crypto.enableSmartCardEvents=true;
		 	document.addEventListener("smartcard-insert",onSmartCardChange,false);
		 	document.addEventListener("smartcard-remove",onSmartCardChange,false);
		 };
		 function deregister() {
		 	document.removeEventListener("smartcard-insert",onSmartCardChange,false);
		 	document.removeEventListener("smartcard-remove",onSmartCardChange,false);
		 };
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body .... onload=register() onunload=deregister()&gt;
		 
		 .....
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiValue><apiValue id="dom.objects:Crypto:version:get"><apiName>version</apiName><shortdesc> 
		 Undocumented
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc> 
		 Undocumented
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:Plugin"><apiName>Plugin</apiName><shortdesc>
	 A plug-in module installed on the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A plug-in module installed on the client.
	 
	 <p>A plug-in is a software module that the browser can invoke to display specialized types of 
	 embedded data within the browser. The user can obtain a list of installed plug-ins by choosing 
	 About Plug-ins from the Help menu.</p>
	 
	 <p>Each Plugin object is itself array containing one element for each MIME type supported by the 
	 plug-in. Each element of the array is a MimeType object. For example, the following code displays 
	 the type and description properties of the first Plugin object's first MimeType object.</p>
	 
	 <codeblock>
	 myPlugin=navigator.plugins[0]
	 myMimeType=myPlugin[0]
	 document.writeln('myMimeType.type is ',myMimeType.type,"&lt;BR&gt;")
	 document.writeln('myMimeType.description is ',myMimeType.description</codeblock>
	 
	 <p>The preceding code displays output similar to the following:</p>
	 
	 <codeblock>
	 myMimeType.type is video/quicktime
	 myMimeType.description is QuickTime for Windows </codeblock>
	 
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.objects:Plugin:item"><apiName>item</apiName><shortdesc>
		 Retrieves a MimeType by index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The specified MimeType
		 
		 </apiDesc><apiOperationClassifier>dom.objects:MimeType</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index of the MimeType
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a MimeType by index.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536460%28VS.85%29.aspx"><linktext>MSDN - item Method</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Plugin:nameItem"><apiName>nameItem</apiName><shortdesc>
		 Retrives a MimeType by name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The specified MimeType
		 
		 </apiDesc><apiOperationClassifier>dom.objects:MimeType</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of the MimeType
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrives a MimeType by name.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536634%28VS.85%29.aspx"><linktext>MSDN - namedItem Method</linktext></link></related-links></apiOperation><apiValue id="dom.objects:Plugin:description:get"><apiName>description</apiName><shortdesc>
		 A description of the plug-in.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A description of the plug-in.
		 
		 </apiDesc><example><codeblock>3.0.40624.0</codeblock>
		 
		 </example></apiValueDetail></apiValue><apiValue id="dom.objects:Plugin:filename:get"><apiName>filename</apiName><shortdesc>
		 Name of the plug-in file on disk.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Name of the plug-in file on disk.
		 
		 </apiDesc><example><codeblock>npctrl.dll</codeblock>
		 
		 </example></apiValueDetail></apiValue><apiValue id="dom.objects:Plugin:length:get"><apiName>length</apiName><shortdesc>
		 Number of elements in the plug-in's array of MimeType objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Number of elements in the plug-in's array of MimeType objects.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.objects:Plugin:name:get"><apiName>name</apiName><shortdesc>
		 	Name of the plug-in.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 	Name of the plug-in.
		 
		 </apiDesc><example><codeblock>Silverlight Plug-In</codeblock>
		 
		 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.objects:UserProfile"><apiName>UserProfile</apiName><shortdesc>
	 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiPlatform description="" name="Obsolete" version="IE7"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535915%28VS.85%29.aspx"><linktext>MSDN - userProfile Object</linktext></link></related-links><apiOperation id="dom.objects:UserProfile:addReadRequest"><apiName>addReadRequest</apiName><shortdesc>
		 Adds an entry to the queue for read requests.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiPlatform description="" name="Obsolete" version="IE7"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if the request has been successfully added to the queue. False if the attribute name was not recognized or the attribute already appeared in the request queue.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>attributeName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies one of the standard vCard names. If anything else is used, the request is ignored and nothing is added to the read-requests queue.
		 </apiDesc></apiParam><apiParam><apiItemName>reserved</apiItemName><apiType value=""/><apiData>null</apiData><apiDesc>Windows Internet Explorer currently ignores this parameter.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds an entry to the queue for read requests.
		 
		 <p><b>Note:</b> This method appends a vCard name to the read-requests queue. The
		 read-requests queue is a list of read requests waiting to be initiated. To initiate the accumulated, 
		 or compound, read requests in the queue, call doReadRequest. To clear the queue, call clearRequest. </p>
		  
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535929%28VS.85%29.aspx"><linktext>MSDN - addReadRequest Method</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:UserProfile:clearRequest"><apiName>clearRequest</apiName><shortdesc>
		 Clears all requests in the read-requests queue to prepare for new profile-information requests.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiPlatform description="" name="Obsolete" version="IE7"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Clears all requests in the read-requests queue to prepare for new profile-information requests.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536355%28VS.85%29.aspx"><linktext>MSDN - clearRequest Method</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:UserProfile:doReadRequest"><apiName>doReadRequest</apiName><shortdesc>
		 Performs all requests located in the read-requests queue.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiPlatform description="" name="Obsolete" version="IE7"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>usageCode</apiItemName><apiType value="Number"/><apiDesc>Specifies the code that notifies the user of the type of access requested. This usage 
		 code should be one of the following 13 codes defined by the Internet Privacy Working Group (IPWG).
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Title</entry><entry>Value</entry></row></thead><tbody><row>
		 		<entry>0</entry><entry>Used for system administration.</entry>
		 	</row><row>
		 		<entry>1</entry><entry>Used for research and product development.</entry>
		 	</row><row>
		 		<entry>2</entry><entry>Used for completion and support of the current transaction.</entry>
		 	</row><row>
		 		<entry>3</entry><entry>Used to customize the content and design of a site.</entry>
		 	</row><row>
		 		<entry>4</entry><entry>Used to improve the content of a site that includes advertisements.</entry>
		 	</row><row>
		 		<entry>5</entry><entry>Used for notifying visitors about updates to the site.</entry>
		 	</row><row>
		 		<entry>6</entry><entry>Used for contacting visitors for marketing of services or products.</entry>
		 	</row><row>
		 		<entry>7</entry><entry>Used for linking other collected information.</entry>
		 	</row><row>
		 		<entry>8</entry><entry>Used by a site for other purposes.</entry>
		 	</row><row>
		 		<entry>9</entry><entry>Disclosed to others for customization or improvement of the content and design of the site.</entry>
		 	</row><row>
		 		<entry>10</entry><entry>Disclosed to others, who may contact the user, for marketing of services or products.</entry>
		 	</row><row>
		 		<entry>11</entry><entry>Disclosed to others, who may contact the user, for marketing of services or products. The user can ask a site not to do this.</entry>
		 	</row><row>
		 		<entry>12</entry><entry>Disclosed to others for any other purpose.</entry>
		 	</row></tbody></tgroup></adobetable>
		 </apiDesc></apiParam><apiParam><apiItemName>friendlyName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiData>null</apiData><apiDesc>Specifies the display name of the party requesting access to private information. 
		 For security reasons, it is not sufficient for the user agent to show this display name to the user. In addition 
		 to display name, the user agent must display the URL that originates the script requesting profile access. If 
		 this script originates from a secure connection (for example, SSL), the Web author can use the SSL certificate 
		 to reliably identify the party requesting access.
		 </apiDesc></apiParam><apiParam><apiItemName>domain</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiData>null</apiData><apiDesc>Specifies the pages that the user's choice will apply to in addition to the current page. 
		 The specification follows the cookie standard.
		 </apiDesc></apiParam><apiParam><apiItemName>path</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiData>null</apiData><apiDesc>Specifies the path to the domain server requesting access. When vExpiration is set, the path is saved with the requested attributes.
		 </apiDesc></apiParam><apiParam><apiItemName>expiration</apiItemName><apiType value=""/><apiData>null</apiData><apiDesc>Specifies the amount of time the site has requested access to these attributes. This is currently ignored by Windows Internet Explorer.
		 </apiDesc></apiParam><apiParam><apiItemName>reserved</apiItemName><apiType value=""/><apiData>null</apiData><apiDesc>This parameter is reserved.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Performs all requests located in the read-requests queue.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536413%28VS.85%29.aspx"><linktext>MSDN - doReadRequest Method</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:UserProfile:getAttribute"><apiName>getAttribute</apiName><shortdesc>
		 Returns the value of the named attribute from the userProfile object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiPlatform description="" name="Obsolete" version="IE7"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a null value if read access for this attribute is not available.
		 
		 </apiDesc><apiType value="void"/></apiReturn><apiParam><apiItemName>attributeName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>One of the standard vCard names listed in Remarks. If one of these names is not used, the request is ignored.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the value of the named attribute from the userProfile object.
		 
		 <p><b>Note:</b> The following schema is used for the field names of the user data store. These names are 
		 specified when you use the getAttribute method on the userProfile object. Note that the format has changed from 
		 vCard_xxx to vCard.xxx, and that the older format no longer is supported.</p>
		 
		 <p><b>Note:</b> An asterisk ( denotes extensions to the vCard schema. Extensions are referenced 
		 as X- elements, as defined in the vCard schema.</p>
		 
		 <adobetable class="innertable">
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="3"><thead><row><entry>vCard Names</entry></row></thead><tbody><row>
		 <entry>vCard.Business.City</entry>
		 <entry>vCard.Business.Country</entry>
		 <entry>vCard.Business.Fax</entry>
		 </row><row>
		 <entry>vCard.Business.Phone</entry>
		 <entry>vCard.Business.State</entry>
		 <entry>vCard.Business.StreetAddress</entry>
		 </row><row>
		 <entry>vCard.Business.URL</entry>
		 <entry>vCard.Business.Zipcode</entry>
		 <entry>vCard.Cellular</entry>
		 </row><row>
		 <entry>vCard.Company</entry>
		 <entry>vCard.Department</entry>
		 <entry>vCard.DisplayName</entry>
		 </row><row>
		 <entry>vCard.Email</entry>
		 <entry>vCard.FirstName</entry>
		 <entry>vCard.Gender~~</entry>
		 </row><row>
		 <entry>vCard.Home.City</entry>
		 <entry>vCard.Home.Country</entry>
		 <entry>vCard.Home.Fax</entry>
		 </row><row>
		 <entry>vCard.Home.Phone</entry>
		 <entry>vCard.Home.State</entry>
		 <entry>vCard.Home.StreetAddress</entry>
		 </row><row>
		 <entry>vCard.Home.Zipcode</entry>
		 <entry>vCard.Homepage</entry>
		 <entry>vCard.JobTitle</entry>
		 </row><row>
		 <entry>vCard.LastName</entry>
		 <entry>vCard.MiddleName</entry>
		 <entry>vCard.Notes</entry>
		 </row><row>
		 <entry>vCard.Office</entry>
		 <entry>vCard.Pager</entry>
		 <entry/>
		 </row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536431%28VS.85%29.aspx"><linktext>MSDN - getAttribute Method</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:UserProfile:setAttribute"><apiName>setAttribute</apiName><shortdesc>
		 Sets the value of the specified attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiPlatform description="" name="Obsolete" version="IE7"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>attrName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the attribute.
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiType value="Number"/><apiDesc>The string, number, or Boolean to assign to the attribute. 
		 </apiDesc></apiParam><apiParam><apiItemName>caseSensitive</apiItemName><apiType value=""/><apiData>unknown</apiData><apiDesc>Whether to use a case-sensitive search to locate the attribute. Can be one of the following values: 
		 <ul>
		 <li>1 - The case of attrName is respected. </li>
		 <li>0 - TMatch attrName regardless of case. </li>
		 </ul>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the value of the specified attribute.
		 
		 <p><b>Note (IE8):</b>  Internet Explorer 8 and later. IE8 mode enables several enhancements to the setAttribute, getAttribute, and 
		 removeAttribute methods that are not available when pages are displayed in earlier document modes. 
		 
		 <ul>
		 <li>The attrName parameter requires the name of the desired content attribute and not the Document Object Model (DOM) attribute. 
		 For example, in IE8 mode, this method no longer requires attrName to be "className" when setting, getting, or removing a CLASS attribute. 
		 Earlier versions of Internet Explorer and Internet Explorer 8 in compatibility mode still require attrName to specify the corresponding 
		 DOM property name. </li>
		 <li>The attrName parameter is not case sensitive. As a result, the iCaseSensitive parameter is no longer supported and should not be used.</li>
		 <li>The methods support event handlers. For example, the following code example defines an event handler to call a function called SomeFunction 
		 when the body of the page is loaded. 
		 <codeblock>document.body.setAttribute('onload', 'SomeFunction()');</codeblock></li>
		 </ul>
		 
		 If the specified attribute is not already present, the setAttribute method adds the attribute to the object and sets the value.
		 </p>
		 
		 <p><b>Note:</b> If your pages are displayed in IE5 mode or IE7 mode, be careful when spelling attribute names. If you 
		 set caseSensitive to 1 and the attrName parameter does not have the same uppercase and lowercase letters as the attribute, a new 
		 attribute is created for the object. If two or more attributes have the same name, differing only in case, and caseSensitive is 
		 set to 0, this method assigns values only to the first attribute created with this name. All other attributes of the same name are ignored.</p>
		 
		 <p><b>Note (IE8):</b> Internet Explorer 8 and later. When pages are displayed in IE8 mode, the value parameter only supports 
		 string values. Non-string values are not automatically converted to string values. For best results, formally convert values to 
		 strings before using them as parameter values. For example, do not attempt to pass an object directly to the value parameter; 
		 call the object's toString method instead.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536431%28VS.85%29.aspx"><linktext>MSDN - getAttribute Method</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.objects:Navigator"><apiName>Navigator</apiName><shortdesc>
	 Contains information about the application running the script.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.objects:NavigatorID</apiBaseInterface><apiBaseInterface>dom.objects:NavigatorOnLine</apiBaseInterface><apiBaseInterface>dom.objects:NavigatorAbilities</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Contains information about the application running the script. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535867%28VS.85%29.aspx"><linktext>MSDN - navigator Object</linktext></link><link href="http://developer.mozilla.org/en/DOM_Client_Object_Cross-Reference/navigator"><linktext>MDC - navigator</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.navigator"><linktext>MDC - window.navigator</linktext></link></related-links><apiOperation id="dom.objects:Navigator:getStorageUpdates"><apiName>getStorageUpdates</apiName><shortdesc>
		 The getStorageUpdates()  method, when invoked, must, if the storage mutex is owned by the event loop of the task that resulted in the method 
		 being called, release the storage mutex so that it is once again free.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 The getStorageUpdates()  method, when invoked, must, if the storage mutex is owned by the event loop of the task that resulted in the method 
		 being called, release the storage mutex so that it is once again free. Otherwise, it must do nothing.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-getstorageupdates"><linktext>W3C - HTML5: Navigator.getStorageUpdates()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Navigator:javaEnabled"><apiName>javaEnabled</apiName><shortdesc>
		 Indicates whether the host browser is Java-enabled or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 Indicates whether the host browser is Java-enabled or not. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (window.navigator.javaEnabled()) {
		 	// browser has java
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536610%28VS.85%29.aspx"><linktext>MSDN - javaEnabled Method</linktext></link><link href="http://developer.mozilla.org/en/Navigator.javaEnabled"><linktext>MDC - window.navigator.javaEnabled()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Navigator:mozIsLocallyAvailable"><apiName>mozIsLocallyAvailable</apiName><shortdesc>
		 Allows code to determine whether or not a given resource is available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>uri</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>URI of the resource whose availability is to be checked, as a string. 
		 </apiDesc></apiParam><apiParam><apiItemName>ifOffline</apiItemName><apiType value="Boolean"/><apiDesc>Whether or not the offline resources cache should be checked; specify true to consider the offline resources cache. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Allows code to determine whether or not a given resource is available. 
		 
		 <p><b>Note:</b> Security exceptions can occur if the requested URI is not from the same origin.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var available = navigator.mozIsLocallyAvailable("my-image-file.png", true);
		 if (available) {
		 	/~~ the offline resource is present ~~/
		 } else {
		 	alert("Certain needed resources are not available until you connect to the network.");
		 }</codeblock>
		 
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom.objects:Navigator:preference"><apiName>preference</apiName><shortdesc>
		 Sets a user preference.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Function"/></apiReturn></apiOperationDef><apiDesc>
		 Sets a user preference. This method is only available to privileged code, 
		 and you should use XPCOM Preferences API instead. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.navigator.preference"><linktext>MDC - window.navigator.preference()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Navigator:registerContentHandler"><apiName>registerContentHandler</apiName><shortdesc>
		 Allows web sites to register themselves as possible handlers for content of a particular MIME type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>mimeType</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The desired MIME type as a string.
		 </apiDesc></apiParam><apiParam><apiItemName>uri</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The URI to the handler as a string.
		 </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The title of the handler presented to the user as a string.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Allows web sites to register themselves as possible handlers for content of a particular MIME type. 
		 
		 <p><b>Note:</b> For Firefox 2, only the application/vnd.mozilla.maybe.feed, application/atom+xml, and 
		 application/rss+xml MIME types are supported. All values have the same effect, and the registered 
		 handler will receive feeds in all Atom and RSS versions. </p>
		 
		 <p><b>Note:</b> Web sites may only register content handlers for themselves. For security reasons, 
		 it's not possible for an extension or web site to register content handlers targeting other sites.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 navigator.registerContentHandler("application/vnd.mozilla.maybe.feed",
                                 "http://www.example.tld/?foo=%s",
                                 "My Feed Reader");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.navigator.registerContentHandler"><linktext>MDC - window.navigator.registerContentHandler()</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-registercontenthandler"><linktext>W3C - HTML5: Navigator.registerContentHandler()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Navigator:registerProtocolHandler"><apiName>registerProtocolHandler</apiName><shortdesc>
		 Allows web sites to register themselves as possible handlers for particular protocols.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>protocol</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The protocol the site wishes to handle, specified as a string. 
		 </apiDesc></apiParam><apiParam><apiItemName>uri</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The URI to the handler as a string. You can include "%s" to indicate where to insert the escaped URI of the document to be handled. 
		 </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The title of the handler presented to the user as a string. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Allows web sites to register themselves as possible handlers for particular protocols. 
		 
		 </apiDesc><example>If your web application is located at http://www.example.com, you can register a protocol handler for it to handle "mailto" like this: 
		 <codeblock>navigator.registerProtocolHandler("mailto", "http://www.example.com/?uri=%s", "Example Mail");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.navigator.registerProtocolHandler"><linktext>MDC - window.navigator.registerProtocolHandler()</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-registerprotocolhandler"><linktext>W3C - HTML5: Navigator.registerProtocolHandler()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Navigator:taintEnabled"><apiName>taintEnabled</apiName><shortdesc>
		 Returns whether data tainting is enabled.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Obsolete" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Function"/></apiReturn></apiOperationDef><apiDesc>
		 Returns whether data tainting is enabled. JavaScript taint/untaint functions removed in JavaScript 1.2[1].
		 
		 <p><b>Note (IE):</b> Microsoft Internet Explorer 5 and earlier does not support data tainting and therefore always returns false.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536778%28VS.85%29.aspx"><linktext>taintEnabled Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.navigator.taintEnabled"><linktext>MDC - window.navigator.taintEnabled()</linktext></link><link href="http://devedge-temp.mozilla.org/library/manuals/2000/javascript/1.3/reference/nav.html#1194117"><linktext>[1]</linktext></link></related-links></apiOperation><apiValue id="dom.objects:Navigator:appCodeName:get"><apiName>appCodeName</apiName><shortdesc>
		 Returns the internal "code" name of the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the internal "code" name of the current browser. 
		 
		 <p><b>Note:</b> Mozilla, Netscape 6, and IE5 all use the internal name "Mozilla."</p>
		 
		 </apiDesc><example>Mozilla
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533077%28VS.85%29.aspx"><linktext>MSDN - appCodeName Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appCodeName"><linktext>MDC - window.navigator.appCodeName</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:appMinorVersion:get"><apiName>appMinorVersion</apiName><shortdesc>
		 Retrieves the application's minor version value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the application's minor version value. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533077%28VS.85%29.aspx"><linktext>MSDN - appMinorVersion Property</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:appName:get"><apiName>appName</apiName><shortdesc>
		 Returns the official name of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the official name of the browser. 
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(window.navigator.appName);
		 // prints "Navigator" to the console for NS6</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533079%28VS.85%29.aspx"><linktext>MSDN - appName Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appName"><linktext>MDC - window.navigator.appName</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:appVersion:get"><apiName>appVersion</apiName><shortdesc>
		 Returns the version of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the version of the browser.
		 
		 <p><b>Note:</b> The window.navigator.userAgent property also contains the version number 
		 (example: "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape 6/6.1"), but you 
		 should be aware of how easy it is to change the user agent string and "spoof" other browsers, platforms, 
		 or user agents, and also how cavalier the browser vendor themselves are with these properties. 
		 The window.navigator.appVersion and window.navigator.userAgent properties are quite often used in 
		 "browser sniffing" code: scripts that attempt to find out what kind of browser you are using and 
		 adjust pages accordingly.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( navigator.appVersion.charAt(0) == "5" ) { 
		 	// browser is putatively a v5 browser
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533080%28VS.85%29.aspx"><linktext>MSDN - appVersion Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.appVersion"><linktext>MDC - window.navigator.appVersion</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:browserLanguage:get"><apiName>browserLanguage</apiName><shortdesc>
		 Retrieves the current browser language.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the current browser language. 
		 
		 <p><b>Note (IE):</b> This property does not indicate the language or languages set by the user in Language 
		 Preferences, located in the Internet Options dialog box.</p>
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 4.0 and earlier, the browserLanguage property reflects 
		 the language of the installed browser's user interface. For example, if you install a Japanese version of Windows 
		 Internet Explorer on an English operating system, browserLanguage would be ja.</p>
		 
		 <p><b>Note (IE):</b> In Internet Explorer 5 and later, however, the browserLanguage property reflects the language 
		 of the operating system regardless of the installed language version of Internet Explorer. However, if Microsoft Windows 
		 2000 MultiLanguage version is installed, the browserLanguage property indicates the language set in the operating system's 
		 current menus and dialogs, as found in the Regional Options of the Control Panel. For example, if you install a 
		 Japanese version of Internet Explorer 5 on an English (United Kingdom) operating system, browserLanguage would be en-gb. 
		 If you install Windows 2000 MultiLanguage version and set the language of the menus and dialogs to French, browserLanguage 
		 would be fr, even though you have a Japanese version of Internet Explorer.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533542%28VS.85%29.aspx"><linktext>MSDN - browserLanguage Property</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:buildID:get"><apiName>buildID</apiName><shortdesc>
		 Returns the build identifier of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the build identifier of the browser. The build ID is in form YYYYMMDDHH.
		 
		 <p><b>Note:</b> Available in Firefox 2 (Gecko 1.8.1) and later.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(window.navigator.buildID); 
		 // prints "2006090803" to the console</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.buildID"><linktext>window.navigator.buildID MDC - window.navigator.buildID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:cookieEnabled:get"><apiName>cookieEnabled</apiName><shortdesc>
		 Returns a boolean indicating whether cookies are enabled in the browser or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether cookies are enabled in the browser or not. 
		 
		 <p><b>Note (IE):</b> CookieEnabled does not check the status of session cookies.</p>
		 
		 <p><b>Note (Mozilla):</b> Due to bug 230350, cookieEnabled may return the wrong result in Gecko-based applications. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if (!navigator.cookieEnabled) { 
		 	// let the user know that enabling cookies makes the web page much more useful
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533694%28VS.85%29.aspx"><linktext>MSDn - cookieEnabled Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.cookieEnabled"><linktext>MDC - window.navigator.cookieEnabled</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=230350"><linktext>bug 230350</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:cpuClass:get"><apiName>cpuClass</apiName><shortdesc>
		 Retrieves a string denoting the CPU class.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a string denoting the CPU class. 
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>CPU Class</entry><entry>CPU Name</entry></row></thead><tbody><row>
		 		<entry>x86</entry><entry><codeph>Intel processor.</codeph></entry>
		 	</row><row>
		 		<entry>68K</entry><entry>Motorola processor.</entry>
		 	</row><row>
		 		<entry>Alpha</entry><entry>Digital processor.</entry>
		 	</row><row>
		 		<entry>PPC</entry><entry><codeph>Motorola processor.</codeph></entry>
		 	</row><row>
		 		<entry>Other</entry><entry>Other CPU classes, including Sun SPARC.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533697%28VS.85%29.aspx"><linktext>MSDN - cpuClass Property</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:language:get"><apiName>language</apiName><shortdesc>
		 Returns a string representing the language version of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representing the language version of the browser. Examples 
		 of valid language codes include "en", "en-US", "fr", "es-ES", etc. 
		 
		 <p><b>Note:</b> This property also shows up as part of the navigator.userAgent string.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( window.navigator.language != "en" ) {       
		 	doLangSelect(window.navigator.language); 
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.language"><linktext>MDC - window.navigator.language</linktext></link><link href="dom.objects.xml#Navigator/systemLanguage"><linktext>systemLanguage</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:mimeTypes:get"><apiName>mimeTypes</apiName><shortdesc>
		 Returns a MimeTypeArray object, which contains a list of MimeType objects representing the MIME types recognized by the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:MimeTypeArray</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a MimeTypeArray object, which contains a list of MimeType objects representing the MIME types recognized by the browser. 
		 
		 <p><b>Note:</b> The zeroth element in mimeTypes (the "Mozilla Default Plug-in" MimeType object) has a type property of 
		 instead of a typical MIME format like "image/x-macpaint"</p>
		 
		 </apiDesc><example>
		 <codeblock>alert(window.navigator.mimeTypes.item(0).description); // alerts "Mozilla Default Plug-in"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.mimeTypes"><linktext>MDC - window.navigator.mimeTypes</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:onLine:get"><apiName>onLine</apiName><shortdesc>
		 Returns a boolean indicating whether the browser is working online.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether the browser is working online. 
		 
		 <p><b>Note (IE):</b>  In Windows Internet Explorer 8 and later, the onLine property returns true if both of the 
		 following conditions are true: 
		 <ul>
		 <li>the system is able to communicate with the network</li>
		 <li>the system is not in global offline mode (Users can modify the global offline state by choosing Work Offline on the File menu.)</li>
		 </ul>
		 If either of these conditions is false, the onLine property returns false.
		 </p>
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 4.0 through Internet Explorer 7, the onLine property indicates whether the 
		 system is in global offline mode. It does not indicate whether the system can communicate with the network.</p>
		 
		 </apiDesc><example>
		 <codeblock>alert(navigator.onLine ? "You're online" : "You're offline");</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534307%28VS.85%29.aspx"><linktext>MSDN - onLine Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.navigator.onLine"><linktext>MDC - window.navigator.onLine</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:oscpu:get"><apiName>oscpu</apiName><shortdesc>
		 Returns a string that represents the current operating system.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string that represents the current operating system. 
		 
		 </apiDesc><example>
		 <codeblock>
		 function osInfo() { 
		 	alert(window.navigator.oscpu); 
		 }
		 // returns: Windows NT 6.0</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.oscpu"><linktext>MDC - window.navigator.oscpu</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:platform:get"><apiName>platform</apiName><shortdesc>
		 Returns a string representing the platform of the browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representing the platform of the browser.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>Platform Code</entry><entry>Platform Name</entry></row></thead><tbody><row>
		 		<entry>HP-UX</entry><entry><codeph>HP UNIX-based computers.</codeph></entry>
		 	</row><row>
		 		<entry>MacPPC</entry><entry>Macintosh PowerPC-based computers.</entry>
		 	</row><row>
		 		<entry>Mac68K</entry><entry>Macintosh 68K-based computers.</entry>
		 	</row><row>
		 		<entry>MacIntel</entry><entry>Macintosh Intel-based computers.</entry>
		 	</row><row>
		 		<entry>Win32</entry><entry><codeph>Microsoft Windows 32-bit platform.</codeph></entry>
		 	</row><row>
		 		<entry>Win16</entry><entry>Windows 16-bit platform.</entry>
		 	</row><row>
		 		<entry>WinCE</entry><entry>Windows CE platform.</entry>
		 	</row><row>
		 		<entry>Linux i686</entry><entry>Linux i686</entry>
		 	</row><row>
		 		<entry>Other</entry><entry>Other</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note (Mozilla):</b> Unless your code is privileged (chrome or at least has the UniversalBrowserRead 
		 privilege), it may get the value of the general.platform.override preference instead of the true platform. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534340%28VS.85%29.aspx"><linktext>MSDN - platform Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.platform"><linktext>MDC - window.navigator.platform</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:plugins:get"><apiName>plugins</apiName><shortdesc>
		 Returns an PluginArray object, listing the plugins installed in the application.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:PluginArray</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an PluginArray object, listing the plugins installed in the application. 
		 
		 <b>IE:</b> Retrieves a collection of all embed objects within the document.
		 
		 <p><b>Note (IE):</b> The collection is an alias for the embeds collection on the document. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script type="text/javascript"&gt;
		 	var L = navigator.plugins.length;
		 	document.write(L.toString().bold() + " Plugin(s)".bold());
		 	document.write("&lt;br&gt;");
		 	document.write("Name | Filename | description".bold());
		 	document.write("&lt;br&gt;");
		 	for(var i=0; i&lt;L; i++) {
		 		document.write(navigator.plugins[i].name);
		 		document.write(" | ");
		 		document.write(navigator.plugins[i].filename);
		 		document.write(" | ");
		 		document.write(navigator.plugins[i].description);
		 		document.write("&lt;br&gt;");
		 	}
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537477%28VS.85%29.aspx"><linktext>MSDN - plugins Collection</linktext></link><link href="http://developer.mozilla.org/en/Navigator.plugins"><linktext>MDC - window.navigator.plugins</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:product:get"><apiName>product</apiName><shortdesc>
		 Returns the product name of the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the product name of the current browser.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 function prod() { 
		 	dt = document.getElementById("d"); 
		 	dt.innerHTML = window.navigator.product; 
		 }
		 &lt;/script&gt; 
		 &lt;button onclick="prod();"&gt;product&lt;/button&gt; 
		 &lt;div id="d"&gt; &lt;/div&gt; 
		 // returns "Gecko"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.product"><linktext>MDC - window.navigator.product</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:productSub:get"><apiName>productSub</apiName><shortdesc>
		 Returns the build number of the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the build number of the current browser.
		 
		 <p><b>Note:</b> On IE, this property returns undefined. </p>
		 
		 <p><b>Note:</b> On Apple Safari this property always returns 20030107.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt; 
		 function prodsub() {
		 	dt = document.getElementById("d").childNodes[0];
		 	dt.data = window.navigator.productSub;
		 } 
		 &lt;/script&gt; 
		 &lt;button onclick="prodsub();"&gt;productSub&lt;/button&gt;
		 // returns: 20010725</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.productSub"><linktext>MDC - window.navigator.productSub</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:securityPolicy:get"><apiName>securityPolicy</apiName><shortdesc>
		 Returns an empty string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an empty string. In Netscape 4.7x, returns "US &amp; CA domestic policy" or "Export policy". 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.navigator.securityPolicy"><linktext>MDC - window.navigator.securityPolicy</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:systemLanguage:get"><apiName>systemLanguage</apiName><shortdesc>
		 Retrieves the default language used by the operating system.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the default language used by the operating system. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534653%28VS.85%29.aspx"><linktext>MSDN - systemLanguage Property</linktext></link><link href="dom.objects.xml#Navigator/language"><linktext>language</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:userAgent:get"><apiName>userAgent</apiName><shortdesc>
		 Returns the user agent string for the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the user agent string for the current browser. 
		 
		 <p><b>Note:</b> Browser identification based on detecting the user agent string is 
		 <b>unreliable</b> and <b>is not recommended</b>, as the user agent string is user configurable.
		 
		 <ul>
		 <li>Mozilla Suite and Firefox can use the preference "general.useragent.override" in about:config. Some Firefox extensions or multi-bar do that. </li>
		 <li>Opera 6+ allows users to set the browser identification string via a menu </li>
		 <li>Microsoft Internet Explorer uses the Windows registry </li>
		 <li>Safari and iCab allow users to change the browser user agent string to predefined Internet Explorer or Netscape strings via a menu. </li>
		 </ul>
		 
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 alert(window.navigator.userAgent);
		 // alerts "Mozilla/5.0 (Windows; U; Win98; en-US; rv:0.9.2) Gecko/20010725 Netscape6/6.1"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534712%28VS.85%29.aspx"><linktext>MSDN - userAgent Property</linktext></link><link href="http://developer.mozilla.org/en/Navigator.userAgent"><linktext>MDC - window.navigator.userAgent</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:userLanguage:get"><apiName>userLanguage</apiName><shortdesc>
		 Retrieves the operating system's natural language setting.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the operating system's natural language setting.
		 
		 <p><b>Note (IE):</b> This property reflects the setting in the "Your locale (location)" 
		 box in the Regional Options of Control Panel&#151;for example, "English (United States).</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534713%28VS.85%29.aspx"><linktext>MSDN - userLanguage Property</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533052(VS.85).aspx"><linktext>MSDN - Language Codes</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:userProfile:get"><apiName>userProfile</apiName><shortdesc>
		 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiPlatform description="" name="Obsolete" version="IE7"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:UserProfile</apiValueClassifier></apiValueDef><apiDesc>
		 Provides methods that allow a script to request read access to and perform read actions on a user's profile information.
		 
		 <p><b>Note (IE):</b> As of Windows Internet Explorer 7, this object is obsolete and should not be used.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Queue a request for read access to multiple profile attributes.
		 navigator.userProfile.addReadRequest("vcard.displayname");
		 navigator.userProfile.addReadRequest("vcard.gender");
		 
		 // Request access to the information.
		 navigator.userProfile.doReadRequest(usage-code, "Acme Corporation");
		 
		 // Now perform read operations to access the information.
		 name = navigator.userProfile.getAttribute("vcard.displayname");
		 gender = navigator.userProfile.getAttribute("vcard.gender");
		 
		 // The script can now use the 'name' and 'gender' variables
		 // to personalize content or to send information back to the server.
		 
		 // Clear the request queue to prepare for later information requests.
		 navigator.userProfile.clearRequest();</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535915%28VS.85%29.aspx"><linktext>MSDN - userProfile Object</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:vendor:get"><apiName>vendor</apiName><shortdesc>
		 Returns the vendor name of the current browser.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the vendor name of the current browser.
		 
		 </apiDesc><example>
		 <codeblock>
		 window.navigator.vendor 
		 // returns "Netscape6"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.vendor"><linktext>MDC - window.navigator.vendor</linktext></link></related-links></apiValue><apiValue id="dom.objects:Navigator:vendorSub:get"><apiName>vendorSub</apiName><shortdesc>
		 Returns the vendor version number.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the vendor version number.
		 
		 </apiDesc><example>
		 <codeblock>
		 window.navigator.vendorSub 
		 // returns "6.1" where the vendor part of userAgent is 
		 // Netscape6/6.1</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/Navigator.vendor"><linktext>MDC - window.navigator.vendorSub</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.objects:NavigatorAbilities"><apiName>NavigatorAbilities</apiName><shortdesc>
	 Objects implementing the Navigator interface must also implement the NavigatorAbilities interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing the Navigator interface must also implement the NavigatorAbilities interface. This interface is defined separately so 
	 that other specifications can re-use parts of the Navigator interface.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator"><linktext>W3C - HTML 5: NavigatorID</linktext></link></related-links><apiOperation id="dom.objects:NavigatorAbilities:dom.objects:NavigatorAbilities:getStorageUpdates"><apiName>getStorageUpdates</apiName><shortdesc>
		 The getStorageUpdates()  method, when invoked, must, if the storage mutex is owned by the event loop of the task that resulted in the method 
		 being called, release the storage mutex so that it is once again free.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 The getStorageUpdates()  method, when invoked, must, if the storage mutex is owned by the event loop of the task that resulted in the method 
		 being called, release the storage mutex so that it is once again free. Otherwise, it must do nothing.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-getstorageupdates"><linktext>W3C - HTML5: Navigator.getStorageUpdates()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:NavigatorAbilities:dom.objects:NavigatorAbilities:registerContentHandler"><apiName>registerContentHandler</apiName><shortdesc>
		 Allows web sites to register themselves as possible handlers for content of a particular MIME type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>mimeType</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The desired MIME type as a string.
		 </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The URI to the handler as a string.
		 </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The title of the handler presented to the user as a string.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Allows web sites to register themselves as possible handlers for content of a particular MIME type. 
		 
		 <p><b>Note:</b> For Firefox 2, only the application/vnd.mozilla.maybe.feed, application/atom+xml, and 
		 application/rss+xml MIME types are supported. All values have the same effect, and the registered 
		 handler will receive feeds in all Atom and RSS versions. </p>
		 
		 <p><b>Note:</b> Web sites may only register content handlers for themselves. For security reasons, 
		 it's not possible for an extension or web site to register content handlers targeting other sites.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 navigator.registerContentHandler("application/vnd.mozilla.maybe.feed",
                                 "http://www.example.tld/?foo=%s",
                                 "My Feed Reader");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.navigator.registerContentHandler"><linktext>MDC - window.navigator.registerContentHandler()</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-registercontenthandler"><linktext>W3C - HTML5: Navigator.registerContentHandler()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:NavigatorAbilities:dom.objects:NavigatorAbilities:registerProtocolHandler"><apiName>registerProtocolHandler</apiName><shortdesc>
		 Allows web sites to register themselves as possible handlers for particular protocols.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>scheme</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The protocol the site wishes to handle, specified as a string. 
		 </apiDesc></apiParam><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The URI to the handler as a string. You can include "%s" to indicate where to insert the escaped URI of the document to be handled. 
		 </apiDesc></apiParam><apiParam><apiItemName>title</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The title of the handler presented to the user as a string. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Allows web sites to register themselves as possible handlers for particular protocols. 
		 
		 </apiDesc><example>If your web application is located at http://www.example.com, you can register a protocol handler for it to handle "mailto" like this: 
		 <codeblock>navigator.registerProtocolHandler("mailto", "http://www.example.com/?uri=%s", "Example Mail");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.navigator.registerProtocolHandler"><linktext>MDC - window.navigator.registerProtocolHandler()</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-navigator-registerprotocolhandler"><linktext>W3C - HTML5: Navigator.registerProtocolHandler()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.objects:Pkcs11"><apiName>Pkcs11</apiName><shortdesc>
	 PKCS11 modules are external modules which provide access to smart-card readers, biometric security 
	 devices, or external certificate stores.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 PKCS11 modules are external modules which provide access to smart-card readers, biometric security 
	 devices, or external certificate stores. There are two methods for installing PKCS11 modules into 
	 Firefox. Users can use the preferences dialog to install or remove PKCS11 module. Extensions can 
	 programmatically manage PKCS11 modules using the nsIPKCS11 programming interface.
	 
	 <p><b>Note (Mozilla):</b> The information in this article is specific to Firefox 3.5 and 
	 newer, support for window.pkcs11 property was disabled due to security concerns.</p>
	 
	 <p><b>Mechanism Flag Definitions</b></p>
	 
	 <p>In general, most tokens should not set any of the cipher flags. Setting these flags means you want 
	 your token to supply the default implementation for these functions. Normally Mozilla uses its own 
	 internal module to supply these functions. These flags override that preference. If you choose to 
	 implement these flags, your module must supply the following additional functions for each flag: </p>
	 
	 <ul>
		<li>PKCS11_MECH_FLAG: must support CKM_RSA_PKCS and CKM_RSA_X_509 and the following functions: C_WRAPKEY, C_ENCRYPT, C_SIGN, C_DECRYPT, C_UNWRAPKEY, C_VERIFYRECOVER, C_VERIFY, C_GENERATEKEYPAIR (2048, 1024, 512) size
		</li>
		<li>PKCS11_MECH_DSA_FLAG: must support CKM_DSA and the following functions: C_SIGN, C_VERIFY, C_GENERATEKEYPAIR
		</li>
		<li>PKCS11_MECH_RC2_FLAG: must support CKM_RC2_CBC and CKM_RC2_ECB and the following functions: C_GENERATEKEY, C_ENCRYPT, C_DECRYPT, C_WRAPKEY, C_UNWRAPKEY
		</li>
		<li>PKCS11_MECH_RC4_FLAG: must support CKM_RC4_CBC and CKM_RC4_ECB and the following functions: C_GENERATEKEY, C_ENCRYPT, C_DECRYPT, C_WRAPKEY, C_UNWRAPKEY
		</li>
		<li>PKCS11_MECH_DES_FLAG: must support CKM_CPMF_CBC, CKM_DES_CBC, CKM_DES3_CBC, CKM_CPMF_ECB, CKM_DES_ECB, CKM_DES3_ECB and the following functions: C_GENERATEKEY, C_ENCRYPT, C_DECRYPT, C_WRAPKEY, C_UNWRAPKEY
		</li>
		<li>PKCS11_MECH_DH_FLAG: must support CKM_DH_PKCS_DERIVE and CKM_DH_KEY_PAIR_GEN and the following functions: C_DERIVEKEY, C_GENERATEKEYPAIR
		</li>
		<li>PKCS11_MECH_MD5_FLAG: Hashing must be able to function without authentication.
		</li>
		<li>PKCS11_MECH_SHA1_FLAG: Hashing must be able to function without authentication.
		</li>
		<li>PKCS11_MECH_MD2_FLAG: Hashing must be able to function without authentication.
		</li>
		<li>PKCS11_RANDOM_FLAG: Use token's Random Number Generator.
			<ul>
				<li>Warning: Must be able to use without authentication. Many hardware random number generators are not as secure as the Netscape internal one. Do not select this value unless you can show that your random number generator is secure. Even so, it's highly discouraged.
				</li>
			</ul>
		</li>
		<li>PKCS11_PUB_READABLE_CERT_FLAG: This is the only flag most smart tokens should turn on. You can turn this flag on if:
			<ul>
				<li> the certs on your token can be read without authentication and,
				</li>
				<li> the public key on your token can be found by ID, MODULUS, or VALUE and all your private keys have the associated public key.

					<ul>
						<li>Turning this flag on will illuminate a large number of password prompts for your token when looking up certs in Communicator. </li>
					</ul>
				</li>
			</ul>
		</li>
		</ul>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/PKCS11"><linktext>MDC - PKCS11</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.pkcs11"><linktext>MDC - window.pkcs11</linktext></link><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links><apiOperation id="dom.objects:Pkcs11:addModule"><apiName>addModule</apiName><shortdesc>
		 Loads a new PKCS #11 module.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Unknown
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>moduleName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of the module.
		 </apiDesc></apiParam><apiParam><apiItemName>libraryFullPath</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The filename of the library prepended with its full path.
		 </apiDesc></apiParam><apiParam><apiItemName>cryptoMechanismFlags</apiItemName><apiType value="Number"/><apiDesc>A bit vector indicating all cryptographic mechanisms should be turned on by default (see above).
		 </apiDesc></apiParam><apiParam><apiItemName>cipherFlags</apiItemName><apiType value="Number"/><apiDesc>A bit vector indicating all SSL or S/MIME cipher functions supported by the module (see above).
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Loads a new PKCS #11 module.
		 
		 <p><b>Note (Mozilla):</b> The module will be placed in the NSS secmod.db database and will be loaded
		 automatically on application restart.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Pkcs11:deletemodule"><apiName>deletemodule</apiName><shortdesc>
		 Removes a PKCS #11 module.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Unknown
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>moduleName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of the module.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes a PKCS #11 module.
		 
		 <p><b>Note (Mozilla):</b> In the delete case, the module is removed from the NSS secmod.db. This function 
		 will issue a user prompt to confirm the operation before the add or delete actually occurs.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/JavaScript_crypto"><linktext>MDC - JavaScript crypto</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.objects:Selection"><apiName>Selection</apiName><shortdesc>
	 Selection is the class of the object returned by window.getSelection() and other methods.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Selection is the class of the object returned by window.getSelection() and other methods. A 
	 selection object represents the ranges that the user has selected.
	 
	 <p><b>Note (IE):</b> Internet Explorer uses the document.selection.createRange() to create a TextRange,
	 which is fundamentally different from Mozilla's Selection and W3C's Range objects.</p>
	 
	 </apiDesc><example>
	 Note the order of the branches: the Mozilla Selection should come first! The reason is that Opera 
	 supports both objects; if you use window.getSelection() to read out the user selection, Opera 
	 creates a Selection object, while if you use document.selection it creates a Text Range object.
	 <codeblock>
	 var userSelection;
	 if (window.getSelection) {
	 	userSelection = window.getSelection();
	 } else if (document.selection) { // should come last; Opera!
	 	userSelection = document.selection.createRange();
	 }</codeblock>
	 
	 </example></apiClassifierDetail><related-links><link href="http://www.quirksmode.org/dom/range_intro.html"><linktext>Quirksmode - Accessing the user selection</linktext></link></related-links><apiOperation id="dom.objects:Selection:addRange"><apiName>addRange</apiName><shortdesc>
		 Adds a range to the selection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>range</apiItemName><apiOperationClassifier>dom.tr.range:Range</apiOperationClassifier><apiDesc>A range object that will be added to the selection. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a range to the selection. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // Select all STRONG elements in an HTML document
		 var strongs = document.getElementsByTagName("strong");
		 var s = window.getSelection();
		 if(s.rangeCount &gt; 0) s.removeAllRanges();
		 for(var i = 0; i &lt; strongs.length; i++) {
		   var range = document.createRange();
		   range.selectNode(strongs[i]);
		   s.addRange(range);
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/addRange"><linktext>MDC - Selection.addRange()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:collapse"><apiName>collapse</apiName><shortdesc>
		 Collapses the current selection to a single point.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>parentNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The caret location will be within this node. 
		 </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>
		 <ul>
		 <li>0 - Collapses the selection from the anchor to the beginning of parentNode's text.</li>
		 <li>1 - Collapses the selection from the anchor to the end of parentNode's text.</li></ul>
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Collapses the current selection to a single point. The document is not modified. If the content is 
		 focused and editable, the caret will blink there.
		 
		 </apiDesc><example>
		 // Place the caret at the beginning of an HTML document's body.
		 var body = document.getElementsByTagName("body")[0];
		 window.getSelection().collapse(body,0);
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/collapse"><linktext>MDC - Selection.collapse()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:collapseToEnd"><apiName>collapseToEnd</apiName><shortdesc>
		 Moves the anchor of the selection to the same point as the focus.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Moves the anchor of the selection to the same point as the focus.
		 
		 <p>The focus does not move. If the content is focused and editable, the caret will blink there. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/collapseToEnd"><linktext>MDC - Selection.collapseToEnd()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:collapseToStart"><apiName>collapseToStart</apiName><shortdesc>
		 Moves the focus of the selection to the same point at the anchor.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Moves the focus of the selection to the same point at the anchor.
		 
		 <p>The anchor does not move. If the content is focused and editable, the caret will blink there. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/collapseToStart"><linktext>MDC - Selection.collapseToStart()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:containsNode"><apiName>containsNode</apiName><shortdesc>
		 Indicates if the node is part of the selection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the node is part of the selection.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>node</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node that is being looked for whether it is part of the selection 
		 </apiDesc></apiParam><apiParam><apiItemName>partlyContained</apiItemName><apiType value="Boolean"/><apiDesc>When true, containsNode returns true when a part of the node is part of the selection. 
		 When false, containsNode only returns true when the entire node is part of the selection. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Indicates if the node is part of the selection. 
		 
		 </apiDesc><example>
		 // Check to see if anything inside the body element is selected
		 alert(window.getSelection().containsNode(document.body, true));
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/containsNode"><linktext>MDC - Selection.containsNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:deleteFromDocument"><apiName>deleteFromDocument</apiName><shortdesc>
		 Deletes the actual text being represented by a selection object from the document's DOM.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Deletes the actual text being represented by a selection object from the document's DOM. 
		 
		 </apiDesc><example>
		 A user selects the (imaginary) text "ve two ea" from "Rabbits have two ears." on a web page. 
		 The user then clicks a button that executes the JavaScript snippet 
		 window.getSelection().deleteFromDocument(). The document's text becomes "Rabbits hars." 
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/deleteFromDocument"><linktext>MDC - Selection.deleteFromDocument()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:extend"><apiName>extend</apiName><shortdesc>
		 Moves the focus of the selection to a specified point.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>parentNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node within which the focus will be moved.
		 </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>The offset position within parentNode where the focus will be moved to.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Moves the focus of the selection to a specified point.
		 
		 <p>The anchor of the selection does not move. The selection will be from the anchor 
		 to the new focus regardless of direction.</p>
		  
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/extend"><linktext>MDC - Selection.extend()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:getRangeAt"><apiName>getRangeAt</apiName><shortdesc>
		 Returns a range object representing one of the ranges currently selected.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The range object that will be returned. 
		 
		 </apiDesc><apiOperationClassifier>dom.tr.range:Range</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The zero-based index of the range to return. A negative number or a number greater than or 
		 equal to rangeCount will result in an error.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a range object representing one of the ranges currently selected.
		 
		 </apiDesc><example>
		 <codeblock>
		 ranges = [];
		 sel = window.getSelection();
		 for(var i = 0; i &lt; sel.rangeCount; i++) {
		 	ranges[i] = sel.getRangeAt(i);
		 }
		 // Each item in the ranges array is now 
		 // a range object representing one of the 
		 // ranges in the current selection</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/getRangeAt"><linktext>MDC - Selection.getRangeAt()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:removeAllRanges"><apiName>removeAllRanges</apiName><shortdesc>
		 Removes all ranges from the selection, leaving the anchorNode and focusNode 
		 properties equal to null and leaving nothing selected.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes all ranges from the selection, leaving the anchorNode and focusNode 
		 properties equal to null and leaving nothing selected. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/removeAllRanges"><linktext>MDC - Selection.removeAllRanges()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:removeRange"><apiName>removeRange</apiName><shortdesc>
		 Removes a range from the selection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>range</apiItemName><apiOperationClassifier>dom.tr.range:Range</apiOperationClassifier><apiDesc>A range object that will be removed to the selection. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes a range from the selection. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // Programmaticaly, more than one range can be selected.  
		 // This will remove all ranges except the first.
		 s = window.getSelection();
		 if(s.rangeCount &gt; 1) {
		   for(var i = 1; i &lt; s.rangeCount; i++) {
		     s.removeRange(s.getRangeAt(i));
		   }
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/removeRange"><linktext>MDC - Selection.removeRange()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:selectAllChildren"><apiName>selectAllChildren</apiName><shortdesc>
		 Adds all the children of the specified node to the selection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>parentNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>All children of parentNode will be selected. parentNode itself is not 
		 part of the selection. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds all the children of the specified node to the selection. Previous selection is lost. 
		 
		 </apiDesc><example>
		 footer = document.getElementById("footer");
		 window.getSelection().selectAllChildren(footer);
		 // Everything inside the footer is now selected
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/selectAllChildren"><linktext>MDC - Selection.selectAllChildren()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:selectionLanguageChange"><apiName>selectionLanguageChange</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/selectionLanguageChange"><linktext>MDC - Selection.selectionLanguageChange()</linktext></link></related-links></apiOperation><apiOperation id="dom.objects:Selection:toString"><apiName>toString</apiName><shortdesc>
		 Returns a string currently being represented by the selection object, i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The string representation of selection. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Returns a string currently being represented by the selection object, i.e. the currently selected text. 
		 
		 <p><b>Note:</b> In JavaScript, this method is called automatically when a function the selection object is passed 
		 to requires a string: alert(window.getSelection()) // What is called alert(window.getSelection().toString()) 
		 // What is actually being effectively called.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/toString"><linktext>MDC - Selection.toString()</linktext></link></related-links></apiOperation><apiValue id="dom.objects:Selection:anchorNode:get"><apiName>anchorNode</apiName><shortdesc>
		 Returns the node in which the selection begins.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node in which the selection begins. 
		 
		 <p><b>Note:</b> A user may make a selection from left to right (in document order) or right to left (reverse of 
		 document order). The anchor is where the user began the selection. This can be visualized by holding the 
		 Shift key and pressing the arrow keys on your keyboard. The selection's anchor does not move, but the 
		 selection's focus, the other end of the selection, does move.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/anchorNode"><linktext>MDC - Selection.anchorNode</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:anchorOffset:get"><apiName>anchorOffset</apiName><shortdesc>
		 Returns the number of characters that the selection's anchor is offset within the anchorNode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of characters that the selection's anchor is offset within the anchorNode. 
		 
		 <p><b>Note:</b> This number is zero-based. If the selection begins with the first character in the anchorNode, 
		 0 is returned.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/anchorOffset"><linktext>MDC - Selection.anchorOffset</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:focusNode:get"><apiName>focusNode</apiName><shortdesc>
		 Returns the node in which the selection ends.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node in which the selection ends. 
		 
		 <p><b>Note:</b> A user may make a selection from left to right (in document order) or right to left (reverse of 
		 document order). The focus is where the user ended the selection. This can be visualized by holding the 
		 Shift key and pressing the arrow keys on your keyboard to modify the current selection. The selection's 
		 focus moves, but the selection's anchor, the other end of the selection, does not move. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/focusNode"><linktext>MDC - Selection.focusNode</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:focusOffset:get"><apiName>focusOffset</apiName><shortdesc>
		 Returns the number of characters that the selection's focus is offset within the focusNode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of characters that the selection's focus is offset within the focusNode. 
		 
		 <p><b>Note:</b> This number is zero-based. If the selection ends with the first character in the focusNode, 
		 0 is returned. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/focusOffset"><linktext>MDC - Selection.focusOffset</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:isCollapsed:get"><apiName>isCollapsed</apiName><shortdesc>
		 Returns a boolean indicating whether the selection's start and end points are at the same position.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a boolean indicating whether the selection's start and end points are at the same position. 
		 
		 <p><b>Note:</b> Even a collapsed selection may have a rangeCount greater than 0. sel.getRangeAt(0) may return 
		 a range that is also collapsed. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/isCollapsed"><linktext>MDC - Selection.isCollapsed</linktext></link></related-links></apiValue><apiValue id="dom.objects:Selection:rangeCount:get"><apiName>rangeCount</apiName><shortdesc>
		 Returns the number of ranges in the selection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of ranges in the selection. 
		 
		 <p><b>Note:</b> Before the user has clicked a freshly loaded page, the rangeCount is 0. A user can normally 
		 only select one range at a time, so the rangeCount will usually be 1. Scripting can be use to make 
		 the selection contain more than 1 range. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/Selection/rangeCount"><linktext>MDC - Selection.rangeCount</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.style.css"><apiName>dom.style.css</apiName><apiDetail/><apiClassifier id="dom.style.css:CSSRule"><apiName>CSSRule</apiName><shortdesc>
	 The CSSRule interface is the abstract base interface for any type of CSS statement.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSRule interface is the abstract base interface for any type of CSS statement. 
	 
	 <p>This includes both rule sets and at-rules. An implementation is expected to preserve 
	 all rules specified in a CSS style sheet, even if the rule is not recognized by the 
	 parser. Unrecognized rules are represented using the CSSUnknownRule interface.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSRule"><linktext>MDC - CSSRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link></related-links><apiValue id="dom.style.css:CSSRule:CHARSET_RULE"><apiName>CHARSET_RULE</apiName><shortdesc>
		 The rule is a CSSCharsetRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSCharsetRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSCharsetRule"><linktext>dom.style.css.CSSCharsetRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:FONT_FACE_RULE"><apiName>FONT_FACE_RULE</apiName><shortdesc>
		 The rule is a CSSFontFaceRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSFontFaceRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSFontFaceRule"><linktext>dom.style.css.CSSFontFaceRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:IMPORT_RULE"><apiName>IMPORT_RULE</apiName><shortdesc>
		 The rule is a CSSImportRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSImportRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSImportRule"><linktext>dom.style.css.CSSImportRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:MEDIA_RULE"><apiName>MEDIA_RULE</apiName><shortdesc>
		 The rule is a CSSMediaRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSMediaRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSMediaRule"><linktext>dom.style.css.CSSMediaRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:PAGE_RULE"><apiName>PAGE_RULE</apiName><shortdesc>
		 The rule is a CSSPageRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSPageRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSPageRule"><linktext>dom.style.css.CSSPageRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:STYLE_RULE"><apiName>STYLE_RULE</apiName><shortdesc>
		 The rule is a CSSStyleRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSStyleRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSStyleRule"><linktext>dom.style.css.CSSStyleRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:UNKNOWN_RULE"><apiName>UNKNOWN_RULE</apiName><shortdesc>
		 The rule is a CSSUnknownRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The rule is a CSSUnknownRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule"><linktext>W3C - DOM Level 2 Style: CSSRule</linktext></link><link href="dom.style.css.xml#CSSUnknownRule"><linktext>dom.style.css.CSSUnknownRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:cssText:get"><apiName>cssText</apiName><shortdesc>
		 The parsable textual representation of the rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_MODIFICATION_ERR: Raised if the specified CSS string 
		 value represents a different type of rule than the current one.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted 
		 at this point in the style sheet.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if the rule is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The parsable textual representation of the rule. This reflects the current state of the 
		 rule and not its initial value.
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( myRule.cssText.indexOf("background-color") != -1 ) {
		 	bgRule = myRule;
		 } </codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule.cssText"><linktext>MDC - cssRule.cssText</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-cssText"><linktext>W3C - DOM Level 2 Style: CSSRule.cssText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:parentRule:get"><apiName>parentRule</apiName><shortdesc>
		 If this rule is contained inside another rule (e.g.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRule</apiValueClassifier></apiValueDef><apiDesc>
		 If this rule is contained inside another rule (e.g. a style rule inside an @media block), 
		 this is the containing rule. If this rule is not nested inside any other rules, this returns null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule.parentRule"><linktext>MDC - cssRule.parentRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-parentRule"><linktext>W3C - DOM Level 2 Style: CSSRule.parentRule</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:parentStyleSheet:get"><apiName>parentStyleSheet</apiName><shortdesc>
		 The style sheet that contains this rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleSheet</apiValueClassifier></apiValueDef><apiDesc>
		 The style sheet that contains this rule.
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( bgRule.parentStyleSheet != mySheet ) {
		 	// alien style rule!
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule.parentStyleSheet"><linktext>MDC - cssRule.parentStyleSheet</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-sheet"><linktext>W3C - DOM Level 2 Style: CSSRule.parentStyleSheet</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSRule:type:get"><apiName>type</apiName><shortdesc>
		 The type of the rule, as defined above.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The type of the rule, as defined above. 
		 
		 <p>The expectation is that binding-specific casting 
		 methods can be used to cast down from an instance of the CSSRule interface to the 
		 specific derived interface implied by the type.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule.type"><linktext>MDC - cssRule.type</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRule-type"><linktext>W3C - DOM Level 2 Style: CSSRule.type</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSCharsetRule"><apiName>CSSCharsetRule</apiName><shortdesc>
	 The CSSCharsetRule interface represents a &amp;#64;charset rule in a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSCharsetRule interface represents a @charset rule in a CSS style sheet.
	 
	 <p>The value of the 
	 encoding attribute does not affect the encoding of text data in the DOM objects; this encoding 
	 is always UTF-16. After a stylesheet is loaded, the value of the encoding attribute is the value 
	 found in the @charset rule. If there was no @charset in the original document, then no 
	 CSSCharsetRule is created. The value of the encoding attribute may also be used as a hint for 
	 the encoding used on serialization of the style sheet.</p>
	 
	 <p>The value of the @charset rule (and therefore of the CSSCharsetRule) may not correspond to the 
	 encoding the document actually came in; character encoding information e.g. in an HTTP header, 
	 has priority but this is not reflected in the CSSCharsetRule.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530746%28VS.85%29.aspx"><linktext>MSDN - &amp;#64;charset Rule</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSCharsetRule"><linktext>MDC - cssRule: CSSCharsetRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSCharsetRule"><linktext>W3C - DOM Level 2 Style: CSSCharsetRule</linktext></link></related-links><apiValue id="dom.style.css:CSSCharsetRule:encoding:get"><apiName>encoding</apiName><shortdesc>
		 The encoding information used in this &amp;#64;charset rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this 
		 declaration is readonly or a property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The encoding information used in this @charset rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSCharsetRule"><linktext>MDC - cssRule: CSSCharsetRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSCharsetRule-encoding"><linktext>W3C - DOM Level 2 Style: CSSCharsetRule.encoding</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:RGBColor"><apiName>RGBColor</apiName><shortdesc>
	 The RGBColor interface is used to represent any RGB color value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The RGBColor interface is used to represent any RGB color value. 
	 
	 <p>This interface reflects the values 
	 in the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects modify 
	 the style property.</p>
	 
	 <p>A specified RGB color is not clipped (even if the number is outside the range 0-255 or 0%-100%). A 
	 computed RGB color is clipped depending on the device.</p>
	 
	 <p>Even if a style sheet can only contain an integer for a color value, the internal storage of this 
	 integer is a float, and this can be used as a float in the specified or the computed style.</p>
	 
	 <p>A color percentage value can always be converted to a number and vice versa.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor"><linktext>W3C - DOM Level 2 Style: RGBColor</linktext></link></related-links><apiValue id="dom.style.css:RGBColor:blue:get"><apiName>blue</apiName><shortdesc>
		 This attribute is used for the blue value of the RGB color.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the blue value of the RGB color.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-blue"><linktext>W3C - DOM Level 2 Style: RGBColor.blue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:RGBColor:green:get"><apiName>green</apiName><shortdesc>
		 This attribute is used for the green value of the RGB color.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the green value of the RGB color.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-green"><linktext>W3C - DOM Level 2 Style: RGBColor.green</linktext></link></related-links></apiValue><apiValue id="dom.style.css:RGBColor:red:get"><apiName>red</apiName><shortdesc>
		 This attribute is used for the red value of the RGB color.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the red value of the RGB color.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-RGBColor-red"><linktext>W3C - DOM Level 2 Style: RGBColor.red</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSUnknownRule"><apiName>CSSUnknownRule</apiName><shortdesc>
	 The CSSUnknownRule interface represents an at-rule not supported by this user agent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSUnknownRule interface represents an at-rule not supported by this user agent.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSUnknownRule"><linktext>MDC - cssRule: CSSUnknownRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSUnknownRule"><linktext>W3C - DOM Level 2 Style: CSSUnknownRule</linktext></link></related-links></apiClassifier><apiClassifier id="dom.style.css:CSS2Properties"><apiName>CSS2Properties</apiName><shortdesc>
	 INCOMPLETE
	 
	 The CSS2Properties interface represents a convenience mechanism for retrieving and setting properties within a 
	 CSSStyleDeclaration.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="CSS 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 INCOMPLETE
	 
	 The CSS2Properties interface represents a convenience mechanism for retrieving and setting properties within a 
	 CSSStyleDeclaration. 
	 
	 <p>The attributes of this interface correspond to all the properties specified in CSS2. 
	 Getting an attribute of this interface is equivalent to calling the getPropertyValue method of the 
	 CSSStyleDeclaration interface. Setting an attribute of this interface is equivalent to calling the 
	 setProperty method of the CSSStyleDeclaration interface.</p>
	 
	 <p><b>Note:</b> When the margin property is set, for example, the marginTop, marginRight, marginBottom and marginLeft 
	 properties are actually being set.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/DOM/CSS"><linktext>MDC - DOM CSS Properties</linktext></link><link href="http://developer.mozilla.org/en/CSS_Reference"><linktext>MDC - CSS Reference</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties"><linktext>W3C - DOM Level 2 Style: CSS2Properties</linktext></link></related-links><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:azimuth:get"><apiName>azimuth</apiName><shortdesc>
		 In combination with elevation, azimuth enables different audio sources to be positioned spatially for aural presentation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>center
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 In combination with elevation, azimuth enables different audio sources to be positioned spatially for aural presentation. 
		 
		 <p>This is important in that it provides a natural way to tell several voices apart, as each can be positioned to originate 
		 at a different location on the sound stage. Stereo output produce a lateral sound stage, while binaural headphones and 
		 multi-speaker setups allow for a fully three-dimensional stage.</p>
		 
		 <codeblock>azimuth: angle | [[ left-side | far-left | left | center-left | center | center-right | 
		 right | far-right | right-side ] || behind ] | leftwards | rightwards | inherit</codeblock>
		 
		 <b>angle</b>
		 <p>Audible source position is described as an angle within the range <codeph>-360deg</codeph> to <codeph>360deg</codeph>. 
		 The value <codeph>0deg</codeph> means directly ahead in the center of the sound stage (this is the default value). 
		 <codeph>90deg</codeph> is to the right, <codeph>180deg</codeph> is behind, and <codeph>270deg</codeph> or <codeph>-90deg</codeph> is to the left.</p>
		 
		 <b>Positional keywords</b>
		 <p>
		 <ul><li> <b>left-side</b>: Same as <codeph>270deg</codeph>.
		 </li><li> <b>left-side behind</b>: Same as <codeph>270deg</codeph>.
		 </li><li> <b>far-left</b>: Same as <codeph>300deg</codeph>.
		 
		 </li><li> <b>far-left behind</b>: Same as <codeph>240deg</codeph>.
		 </li><li> <b>left</b>: Same as <codeph>320deg</codeph>.
		 </li><li> <b>left behind</b>: Same as <codeph>220deg</codeph>.
		 </li><li> <b>center-left</b>: Same as <codeph>340deg</codeph>.
		 
		 </li><li> <b>center-left behind</b>: Same as <codeph>200deg</codeph>.
		 </li><li> <b>center</b>: Same as <codeph>0deg</codeph>.
		 </li><li> <b>center behind</b>: Same as <codeph>180deg</codeph>.
		 </li><li> <b>center-right</b>: Same as <codeph>20deg</codeph>.
		 
		 </li><li> <b>center-right behind</b>: Same as <codeph>160deg</codeph>.
		 </li><li> <b>right</b>: Same as <codeph>40deg</codeph>.
		 </li><li> <b>right behind</b>: Same as <codeph>140deg</codeph>.
		 </li><li> <b>far-right</b>: Same as <codeph>60deg</codeph>.
		 
		 </li><li> <b>far-right behind</b>: Same as <codeph>120deg</codeph>.
		 </li><li> <b>right-side</b>: Same as <codeph>90deg</codeph>.
		 </li><li> <b>right-side behind</b>: Same as <codeph>90deg</codeph>.
		 </li><li> <b>behind</b>: Same as <codeph>180deg</codeph>. Also used as a modifier for other positional keyword values, as above.
		 
		 </li><li> <b>leftwards</b>: Moves the sound counter-clockwise by 20 degrees, relative to the current angle.
		 </li><li> <b>rightwards</b>: Moves the sound clockwise by 20 degrees, relative to the current angle.
		 </li></ul>
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 h1   { azimuth: 30deg }
		 td.a { azimuth: far-right }          /~~  60deg ~~/
		 #12  { azimuth: behind far-right }   /~~ 120deg ~~/
		 p.comment { azimuth: behind }        /~~ 180deg ~~/</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/azimuth"><linktext>MDC - CSS: azimuth</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-azimuth"><linktext>W3C - DOM Level 2 Style: CSS2Properties.azimuth</linktext></link><link href="dom.style.css.xml#CSS2Properties/elevation"><linktext>elevation</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:background:get"><apiName>background</apiName><shortdesc>
		 The background property is a shorthand property for setting the individual background property values in a 
		 single place in the style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The background property is a shorthand property for setting the individual background property values in a 
		 single place in the style sheet. background can be used to set the values for one or more of: background-attachment, 
		 background-color, background-image, background-position, background-repeat.
		 
		 <codeblock>background: [ &lt;background-color&gt; || &lt;background-image&gt; || &lt;background-repeat&gt; 
		 || &lt;background-attachment&gt; || &lt;background-position&gt; ] | inherit;</codeblock>
		 
		 <p><b>Note:</b> Given a valid declaration, the background property first sets the individual background 
		 properties to their initial values, then assigns the explicit values specified in the declaration. You do not have 
		 to define a value for each of the individual properties, only those you want to change from their initial defaults. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 body { 
		 	background: red;
		 }
		 
		 .topbanner {
		 	background: url("topbanner.png") #00D repeat fixed;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background"><linktext>MDC - CSS: background</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-background"><linktext>W3C - DOM Level 2 Style: CSS2Properties.background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundAttachment:get"><apiName>backgroundAttachment</apiName><shortdesc>
		 If a background-image is specified, background-attachment determines whether that image's position is 
		 fixed within the viewport, or scrolls along with its containing block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>scroll
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 If a background-image is specified, background-attachment determines whether that image's position is 
		 fixed within the viewport, or scrolls along with its containing block.
		 
		 <codeblock>background-attachment:  scroll | fixed | inherit</codeblock>
		 
		 <b>scroll</b>
		 <p>If scroll is specified, the background image will scroll within the viewport along with the block the image is contained within. </p>
		 
		 <b>inherit</b>
		 <p>If fixed is specified, the background image will not scroll with its containing element, instead remaining stationary within the viewport.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 body {
		 	background-image: url("images/cartooncat.png");
		 	background-attachment: fixed;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-attachment"><linktext>MDC - CSS: background-attachment</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundAttachment"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundColor:get"><apiName>backgroundColor</apiName><shortdesc>
		 background-color sets the background color of an element, either through a color value or the keyword transparent.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>transparent
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 background-color sets the background color of an element, either through a color value or the keyword transparent. 
		 
		 <codeblock>background-color: color | transparent | inherit</codeblock>
		 
		 <b>color</b>
		 <p>The color can be specified as a hexidecimal RGB value, a regular RGB value, or by using one of the pre-defined color keywords.</p>
		 
		 <b>transparent</b>
		 <p>The default value for background-color is transparent meaning the element has no color of its own, instead showing the color of the element behind it.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 .exampleone {
		 	background-color: teal;
		 	color: white;
		 }
		 
		 .exampletwo {
		 	background-color: rgb(153,102,153);
		 	color: rgb(255,255,204);
		 }
		 
		 .examplethree {
		 	background-color: #666699;
		 	color: #FFFFFF;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-color"><linktext>MDC - CSS: background-color</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundColor"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundImage:get"><apiName>backgroundImage</apiName><shortdesc>
		 The background-image property sets the background image for an element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>none
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 The background-image property sets the background image for an element.
		 
		 <codeblock>background-image: uri | none | inherit</codeblock>
		 
		 <p><b>Note:</b> Developers should ensure that they specify a background-color to be used if an image is not available. Background images are rendered on top of the background color.</p>
		 
		 <b>uri</b>
		 <p>The location of the image resource to be used as a background image.</p>
		 
		 <b>none</b>
		 <p>Used to specify that an element is to have no background image.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 body { background-image: url("images/darkpattern.png"); }
		 
		 p { background-image: none; }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-image"><linktext>MDC - CSS: background-image</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundImage"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundPosition:get"><apiName>backgroundPosition</apiName><shortdesc>
		 background-position sets the initial position of any background image that has been set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>0% 0%
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 background-position sets the initial position of any background image that has been set. 
		 
		 <codeblock>background-position: [ &lt;percentage&gt; | &lt;length&gt; | left | center | right  ] 
		 [ &lt;percentage&gt; | &lt;length&gt; | top  | center | bottom ] ? ;</codeblock>
		 
		 <codeblock>background-position: [ top | center | bottom ];</codeblock>
		 
		 <codeblock>background-position: inherit;</codeblock>
		 
		 <b>&lt;percentage&gt;</b>
		 <p>With a value pair of '0% 0%', the upper left corner of the image is aligned with the upper left corner of the box's padding edge. A value pair of '100% 100%' places the lower right corner of the image in the lower right corner of padding area. With a value pair of '14% 84%', the point 14% across and 84% down the image is to be placed at the point 14% across and 84% down the padding area.</p>
		 
		 <b>&lt;length&gt;</b>
		 <p>With a value pair of '2cm 1cm', the upper left corner of the image is placed 2cm to the right and 1cm below the upper left corner of the padding area.</p>
		 
		 <b>top left and left top</b>
		 <p> Same as '0% 0%'. </p>
		 
		 <b>top, top center, and center top</b>
		 <p> Same as '50% 0%'. </p>
		 
		 <b>right top and top right</b>
		 <p>Same as '100% 0%'. </p>
		 
		 <b>left, left center, and center left</b>
		 <p>Same as '0% 50%'. </p>
		 
		 <b>center and center center</b>
		 <p>Same as '50% 50%'. </p>
		 
		 <b>right, right center, and center right</b>
		 <p>Same as '100% 50%'. </p>
		 
		 <b>bottom left and left bottom</b>
		 <p>Same as '0% 100%'. </p>
		 
		 <b>bottom, bottom center, and center bottom</b>
		 <p>Same as '50% 100%'. </p>
		 
		 <b>bottom right and right bottom</b>
		 <p>Same as '100% 100%'. </p>
		 
		 <p>If only one value is specified, then it sets the horizontal position, with the vertical position at 50%. Otherwise, 
		 the first value specifies the horizontal position. Combinations are allowed of keyword, length, or percentage values, 
		 but if keywords are mixed with other values, 'left' and 'right' may only be used as the first value, and 'top' and 
		 'bottom' may only be used as the second value. Negative positions are allowed.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 .exampleone {
		 	background-image: url("logo.png");
		 	background-position: top center;
		 }
		 
		 .exampletwo {
		 	background-image: url("logo.png");
		 	background-position: 25% 75%;
		 }
		 
		 .examplethree {
		 	background-image: url("logo.png");
		 	background-position: 2cm bottom;
		 }
		 
		 .examplefour {
		 	background-image: url("logo.png");
		 	background-position: center 10%;
		 }
		 
		 .examplefive {
		 	background-image: url("logo.png");
		 	background-position: 2cm 50%;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-position"><linktext>MDC - CSS: background-position</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundPosition"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundPosition</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundRepeat"><linktext>backgroundRepeat</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:backgroundRepeat:get"><apiName>backgroundRepeat</apiName><shortdesc>
		 background-repeat specifies whether the image is repeated (tiled), and how.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>repeat
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 background-repeat specifies whether the image is repeated (tiled), and how. 
		 
		 <codeblock>background-repeat: repeat | repeat-x | repeat-y | no-repeat | inherit</codeblock>
		 
		 <b> repeat</b>
		 <p> The image is repeated both horizontally and vertically.</p>
		 
		 <b> repeat-x</b>
		 <p> The image is repeated horizontally only.</p>
		 
		 <b> repeat-y</b>
		 <p> The image is repeated vertically only.</p>
		 
		 <b> no-repeat</b>
		 <p> The image is not repeated: only one copy of the image is drawn.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 .exampleone {
		 	background-image: url("logo.png");
		 	background-repeat: repeat-x;
		 }
		 
		 .exampletwo {
		 	background-image: url("logo.png");
		 	background-repeat: no-repeat;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/CSS/background-repeat"><linktext>MDC - CSS: background-repeat</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSS2Properties-backgroundRepeat"><linktext>W3C - DOM Level 2 Style: CSS2Properties.backgroundRepeat</linktext></link><link href="dom.style.css.xml#CSS2Properties/background"><linktext>background</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundAttachment"><linktext>backgroundAttachment</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundColor"><linktext>backgroundColor</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundImage"><linktext>backgroundImage</linktext></link><link href="dom.style.css.xml#CSS2Properties/backgroundPosition"><linktext>backgroundPosition</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:border:get"><apiName>border</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderBottom:get"><apiName>borderBottom</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderBottomColor:get"><apiName>borderBottomColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderBottomStyle:get"><apiName>borderBottomStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderBottomWidth:get"><apiName>borderBottomWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderCollapse:get"><apiName>borderCollapse</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderColor:get"><apiName>borderColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderLeft:get"><apiName>borderLeft</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderLeftColor:get"><apiName>borderLeftColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderLeftStyle:get"><apiName>borderLeftStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderLeftWidth:get"><apiName>borderLeftWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderRight:get"><apiName>borderRight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderRightColor:get"><apiName>borderRightColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderRightStyle:get"><apiName>borderRightStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderRightWidth:get"><apiName>borderRightWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderSpacing:get"><apiName>borderSpacing</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderStyle:get"><apiName>borderStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderTop:get"><apiName>borderTop</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderTopColor:get"><apiName>borderTopColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderTopStyle:get"><apiName>borderTopStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderTopWidth:get"><apiName>borderTopWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:borderWidth:get"><apiName>borderWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:bottom:get"><apiName>bottom</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:captionSide:get"><apiName>captionSide</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:clear:get"><apiName>clear</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:clip:get"><apiName>clip</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:color:get"><apiName>color</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:content:get"><apiName>content</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:counterIncrement:get"><apiName>counterIncrement</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:counterReset:get"><apiName>counterReset</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cssFloat:get"><apiName>cssFloat</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cue:get"><apiName>cue</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cueAfter:get"><apiName>cueAfter</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cueBefore:get"><apiName>cueBefore</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:cursor:get"><apiName>cursor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:direction:get"><apiName>direction</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:display:get"><apiName>display</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:elevation:get"><apiName>elevation</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:emptyCells:get"><apiName>emptyCells</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:font:get"><apiName>font</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontFamily:get"><apiName>fontFamily</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontSize:get"><apiName>fontSize</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontSizeAdjust:get"><apiName>fontSizeAdjust</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontStretch:get"><apiName>fontStretch</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontStyle:get"><apiName>fontStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontVariant:get"><apiName>fontVariant</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:fontWeight:get"><apiName>fontWeight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:height:get"><apiName>height</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:left:get"><apiName>left</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:letterSpacing:get"><apiName>letterSpacing</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:lineHeight:get"><apiName>lineHeight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:listStyle:get"><apiName>listStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:listStyleImage:get"><apiName>listStyleImage</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:listStylePosition:get"><apiName>listStylePosition</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:listStyleType:get"><apiName>listStyleType</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:margin:get"><apiName>margin</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marginBottom:get"><apiName>marginBottom</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marginLeft:get"><apiName>marginLeft</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marginRight:get"><apiName>marginRight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marginTop:get"><apiName>marginTop</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:markerOffset:get"><apiName>markerOffset</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:marks:get"><apiName>marks</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:maxHeight:get"><apiName>maxHeight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:maxWidth:get"><apiName>maxWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:minHeight:get"><apiName>minHeight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:minWidth:get"><apiName>minWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:orphans:get"><apiName>orphans</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:outline:get"><apiName>outline</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:outlineColor:get"><apiName>outlineColor</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:outlineStyle:get"><apiName>outlineStyle</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:outlineWidth:get"><apiName>outlineWidth</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:overflow:get"><apiName>overflow</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:padding:get"><apiName>padding</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:paddingBottom:get"><apiName>paddingBottom</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:paddingLeft:get"><apiName>paddingLeft</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:paddingRight:get"><apiName>paddingRight</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:paddingTop:get"><apiName>paddingTop</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:page:get"><apiName>page</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pageBreakAfter:get"><apiName>pageBreakAfter</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pageBreakBefore:get"><apiName>pageBreakBefore</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pageBreakInside:get"><apiName>pageBreakInside</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pause:get"><apiName>pause</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pauseAfter:get"><apiName>pauseAfter</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pauseBefore:get"><apiName>pauseBefore</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pitch:get"><apiName>pitch</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:pitchRange:get"><apiName>pitchRange</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:playDuring:get"><apiName>playDuring</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:position:get"><apiName>position</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:quotes:get"><apiName>quotes</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:richness:get"><apiName>richness</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:right:get"><apiName>right</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:size:get"><apiName>size</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speak:get"><apiName>speak</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speakHeader:get"><apiName>speakHeader</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speakNumeral:get"><apiName>speakNumeral</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speakPunctuation:get"><apiName>speakPunctuation</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:speechRate:get"><apiName>speechRate</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:stress:get"><apiName>stress</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:tableLayout:get"><apiName>tableLayout</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textAlign:get"><apiName>textAlign</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textDecoration:get"><apiName>textDecoration</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textIndent:get"><apiName>textIndent</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textShadow:get"><apiName>textShadow</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:textTransform:get"><apiName>textTransform</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:top:get"><apiName>top</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:unicodeBidi:get"><apiName>unicodeBidi</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:verticalAlign:get"><apiName>verticalAlign</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:visibility:get"><apiName>visibility</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:voiceFamily:get"><apiName>voiceFamily</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:volume:get"><apiName>volume</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:whiteSpace:get"><apiName>whiteSpace</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:widows:get"><apiName>widows</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:width:get"><apiName>width</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:wordSpacing:get"><apiName>wordSpacing</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.style.css:CSS2Properties:dom.style.css:CSS2Properties:zIndex:get"><apiName>zIndex</apiName><shortdesc>
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the new value has a syntax error and is unparsable.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSImportRule"><apiName>CSSImportRule</apiName><shortdesc>
	 The CSSImportRule interface represents a &amp;#64;import rule within a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSImportRule interface represents a @import rule within a CSS style sheet. The @import 
	 rule is used to import style rules from other style sheets.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530768%28VS.85%29.aspx"><linktext>MSDN - &amp;#64;import Rule</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule"><linktext>MDC - cssRule: CSSImportRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule"><linktext>W3C - DOM Level 2 Style: CSSImportRule</linktext></link></related-links><apiValue id="dom.style.css:CSSImportRule:href:get"><apiName>href</apiName><shortdesc>
		 The location of the style sheet to be imported.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The location of the style sheet to be imported. The attribute will not contain the "url(...)" 
		 specifier around the URI.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule"><linktext>MDC - cssRule: CSSImportRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-href"><linktext>W3C - DOM Level 2 Style: CSSImportRule.href</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSImportRule:media:get"><apiName>media</apiName><shortdesc>
		 A list of media types for which this style sheet may be used.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:MediaList</apiValueClassifier></apiValueDef><apiDesc>
		 A list of media types for which this style sheet may be used.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule"><linktext>MDC - cssRule: CSSImportRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-media"><linktext>W3C - DOM Level 2 Style: CSSImportRule.media</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSImportRule:styleSheet:get"><apiName>styleSheet</apiName><shortdesc>
		 The style sheet referred to by this rule, if it has been loaded.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleSheet</apiValueClassifier></apiValueDef><apiDesc>
		 The style sheet referred to by this rule, if it has been loaded. The value of this attribute is 
		 null if the style sheet has not yet been loaded or if it will not be loaded.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSImportRule"><linktext>MDC - cssRule: CSSImportRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSImportRule-styleSheet"><linktext>W3C - DOM Level 2 Style: CSSImportRule.styleSheet</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSMediaRule"><apiName>CSSMediaRule</apiName><shortdesc>
	 The CSSMediaRule interface represents a &amp;#64;media rule in a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSMediaRule interface represents a @media rule in a CSS style sheet. A @media 
	 rule can be used to delimit style rules for specific media types.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530813%28VS.85%29.aspx"><linktext>MSDN - &amp;#64;media Rule</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule"><linktext>MDC - cssRule: CSSMediaRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule"><linktext>W3C - DOM Level 2 Style: CSSMediaRule</linktext></link></related-links><apiOperation id="dom.style.css:CSSMediaRule:deleteRule"><apiName>deleteRule</apiName><shortdesc>
		 Used to delete a rule from the media block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index does not correspond 
		 to a rule in the media rule list.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index within the media block's rule collection of the rule to remove.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to delete a rule from the media block. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule"><linktext>MDC - cssRule: CSSMediaRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-deleteRule"><linktext>W3C - DOM Level 2 Style: CSSMediaRule.deleteRule()</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSMediaRule:insertRule"><apiName>insertRule</apiName><shortdesc>
		 Used to insert a new rule into the media block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at the specified 
		 index, e.g., if an @import rule is inserted after a standard rule set or other at-rule.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is not a valid insertion point.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this media rule is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The index within the media block's rule collection of the newly inserted rule.
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>rule</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The parsable text representing the rule. For rule sets this contains both 
		 the selector and the style declaration. For at-rules, this specifies both the at-identifier 
		 and the rule content.
		 </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index within the media block's rule collection of the rule before which 
		 to insert the specified rule. If the specified index is equal to the length of the media 
		 blocks's rule collection, the rule will be added to the end of the media block.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to insert a new rule into the media block.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule"><linktext>MDC - cssRule: CSSMediaRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-insertRule"><linktext>W3C - DOM Level 2 Style: CSSMediaRule.insertRule()</linktext></link></related-links></apiOperation><apiValue id="dom.style.css:CSSMediaRule:cssRules:get"><apiName>cssRules</apiName><shortdesc>
		 A list of all CSS rules contained within the media block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRuleList</apiValueClassifier></apiValueDef><apiDesc>
		 A list of all CSS rules contained within the media block.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule"><linktext>MDC - cssRule: CSSMediaRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-cssRules"><linktext>W3C - DOM Level 2 Style: CSSMediaRule.cssRules</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSMediaRule:media:get"><apiName>media</apiName><shortdesc>
		 A list of media types for this rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:MediaList</apiValueClassifier></apiValueDef><apiDesc>
		 A list of media types for this rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSMediaRule"><linktext>MDC - cssRule: CSSMediaRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSMediaRule-mediaTypes"><linktext>W3C - DOM Level 2 Style: CSSMediaRule.media</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/media.html#media-types"><linktext>W3C - Recognized media types</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:Counter"><apiName>Counter</apiName><shortdesc>
	 The Counter interface is used to represent any counter or counters function value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Counter interface is used to represent any counter or counters function value. This interface reflects the values in 
	 the underlying style property.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter"><linktext>W3C - DOM Level 2 Style: Counter</linktext></link></related-links><apiValue id="dom.style.css:Counter:identifier:get"><apiName>identifier</apiName><shortdesc>
		 This attribute is used for the identifier of the counter.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the identifier of the counter.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-identifier"><linktext>W3C - DOM Level 2 Style: Counter.identifier</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Counter:listStyle:get"><apiName>listStyle</apiName><shortdesc>
		 This attribute is used for the style of the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the style of the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-listStyle"><linktext>W3C - DOM Level 2 Style: Counter.listStyle</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Counter:separator:get"><apiName>separator</apiName><shortdesc>
		 This attribute is used for the separator of the nested counters.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the separator of the nested counters.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Counter-separator"><linktext>W3C - DOM Level 2 Style: Counter.separator</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:DocumentCSS"><apiName>DocumentCSS</apiName><shortdesc>
	 This interface represents a document with a CSS view.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.style.stylesheets:DocumentStyle</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface represents a document with a CSS view.
	 
	 <p>The getOverrideStyle method provides a mechanism through which a DOM author could effect immediate change 
	 to the style of an element without modifying the explicitly linked style sheets of a document or the inline 
	 style of elements in the style sheets. This style sheet comes after the author style sheet in the cascade 
	 algorithm and is called override style sheet. The override style sheet takes precedence over author style 
	 sheets. An "!important" declaration still takes precedence over a normal declaration. Override, author, 
	 and user style sheets all may contain "!important" declarations. User "!important" rules take precedence 
	 over both override and author "!important" rules, and override "!important" rules take precedence over 
	 author "!important" rules.</p>
	 
	 <p>The expectation is that an instance of the DocumentCSS interface can be obtained by using binding-specific 
	 casting methods on an instance of the Document interface.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DocumentCSS"><linktext>W3C - DOM Level 2 Style: DocumentCSS</linktext></link></related-links><apiOperation id="dom.style.css:DocumentCSS:dom.style.css:DocumentCSS:getOverrideStyle"><apiName>getOverrideStyle</apiName><shortdesc>
		 This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The override style declaration.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:CSSStyleDeclaration</apiOperationClassifier></apiReturn><apiParam><apiItemName>elt</apiItemName><apiOperationClassifier>dom.core:Element</apiOperationClassifier><apiDesc>The element whose style is to be modified. This parameter cannot be null.
		 </apiDesc></apiParam><apiParam><apiItemName>pseudoElt</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The pseudo-element or null if none.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method is used to retrieve the override style declaration for a specified element and a specified pseudo-element. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DocumentCSS-getOverrideStyle"><linktext>W3C - DOM Level 2 Style: DocumentCSS.getOverrideStyle()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.style.css:CSSFontFaceRule"><apiName>CSSFontFaceRule</apiName><shortdesc>
	 The CSSFontFaceRule interface represents a &amp;#64;font-face rule in a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSFontFaceRule interface represents a @font-face rule in a CSS style sheet. The 
	 @font-face rule is used to hold a set of font descriptions.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530757%28VS.85%29.aspx"><linktext>MSDN - &amp;#64;font-face Rule</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSFontFaceRule"><linktext>MDC - cssRule: CSSFontFaceRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSFontFaceRule"><linktext>W3C - DOM Level 2 Style: CSSFontFaceRule</linktext></link></related-links><apiValue id="dom.style.css:CSSFontFaceRule:style:get"><apiName>style</apiName><shortdesc>
		 The declaration-block of this rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 The declaration-block of this rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSFontFaceRule"><linktext>MDC - cssRule: CSSFontFaceRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSFontFaceRule-style"><linktext>W3C - DOM Level 2 Style: CSSFontFaceRule.style</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSRuleList"><apiName>CSSRuleList</apiName><shortdesc>
	 The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSRuleList interface provides the abstraction of an ordered collection of CSS rules.
	 
	 <p>The items in the CSSRuleList are accessible via an integral index, starting from 0.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/dd347050%28VS.85%29.aspx"><linktext>MSDN - CSSRuleList</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList"><linktext>W3C - DOM Level 2 Style: CSSRuleList</linktext></link></related-links><apiOperation id="dom.style.css:CSSRuleList:item"><apiName>item</apiName><shortdesc>
		 Used to retrieve a CSS rule by ordinal index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The style rule at the index position in the CSSRuleList, or null if that is not a valid index.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:CSSRule</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into the collection
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to retrieve a CSS rule by ordinal index. 
		 
		 <p>The order in this collection represents the order of the 
		 rules in the CSS style sheet. If index is greater than or equal to the number of rules in the list, 
		 this returns null.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc304123%28VS.85%29.aspx"><linktext>MSDN - item Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList-item"><linktext>W3C - DOM Level 2 Style: CSSRuleList.item()</linktext></link></related-links></apiOperation><apiValue id="dom.style.css:CSSRuleList:length:get"><apiName>length</apiName><shortdesc>
		 The number of CSSRules in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of CSSRules in the list. The range of valid child rule indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc304101%28VS.85%29.aspx"><linktext>MSDN - length Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSRuleList-length"><linktext>W3C - DOM Level 2 Style: CSSRuleList.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:Rect"><apiName>Rect</apiName><shortdesc>
	 The Rect interface is used to represent any rect value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Rect interface is used to represent any rect value. 
	 
	 <p>This interface reflects the values in 
	 the underlying style property. Hence, modifications made to the CSSPrimitiveValue objects 
	 modify the style property.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect"><linktext>W3C - DOM Level 2 Style: Rect</linktext></link></related-links><apiValue id="dom.style.css:Rect:bottom:get"><apiName>bottom</apiName><shortdesc>
		 This attribute is used for the bottom of the rect.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the bottom of the rect.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-bottom"><linktext>W3C - DOM Level 2 Style: Rect.bottom</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Rect:left:get"><apiName>left</apiName><shortdesc>
		 This attribute is used for the left of the rect.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the left of the rect.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-left"><linktext>W3C - DOM Level 2 Style: Rect.left</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Rect:right:get"><apiName>right</apiName><shortdesc>
		 This attribute is used for the right of the rect.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the right of the rect.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-right"><linktext>W3C - DOM Level 2 Style: Rect.right</linktext></link></related-links></apiValue><apiValue id="dom.style.css:Rect:top:get"><apiName>top</apiName><shortdesc>
		 This attribute is used for the top of the rect.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSPrimitiveValue</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute is used for the top of the rect.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-Rect-top"><linktext>W3C - DOM Level 2 Style: Rect.top</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:DOMImplementationCSS"><apiName>DOMImplementationCSS</apiName><shortdesc>
	 This interface allows the DOM user to create a CSSStyleSheet outside the context of a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.core:DOMImplementation</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface allows the DOM user to create a CSSStyleSheet outside the context of a document. 
	 
	 <p>There is no way to associate the new CSSStyleSheet with a document in DOM Level 2.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-StyleSheetCreation"><linktext>W3C - DOM Level 2 Style: DOMImplementationCSS</linktext></link></related-links><apiOperation id="dom.style.css:DOMImplementationCSS:dom.style.css:DOMImplementationCSS:createCSSStyleSheet"><apiName>createCSSStyleSheet</apiName><shortdesc>
		 Creates a new CSSStyleSheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>SYNTAX_ERR: Raised if the specified media string value 
		 has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A new CSS style sheet.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:CSSStyleSheet</apiOperationClassifier></apiReturn><apiParam><apiItemName>title</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The advisory title.
		 </apiDesc></apiParam><apiParam><apiItemName>media</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The comma-separated list of media associated with the new style sheet.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a new CSSStyleSheet. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-DOMImplementationCSS-createCSSStyleSheet"><linktext>W3C - DOM Level 2 Style: DOMImplementationCSS.createCSSStyleSheet()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.style.css:CSSStyleSheet"><apiName>CSSStyleSheet</apiName><shortdesc>
	 The CSSStyleSheet interface is a concrete interface used to represent a CSS style 
	 sheet i.e., a style sheet whose content type is "text/css".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.stylesheets:StyleSheet</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSStyleSheet interface is a concrete interface used to represent a CSS style 
	 sheet i.e., a style sheet whose content type is "text/css".
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535871%28VS.85%29.aspx"><linktext>MSDN: StyleSheet</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet"><linktext>MDC - stylesheet</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet"><linktext>W3C - DOM Level 2 Style: CSSStyleSheet</linktext></link></related-links><apiOperation id="dom.style.css:CSSStyleSheet:addImport"><apiName>addImport</apiName><shortdesc>
		 Adds a style sheet to the imports collection for the specified style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a a zero-based index value indicating the position of the imported style sheet in the imports collection. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the location of the source file for the style sheet.
		 </apiDesc></apiParam><apiParam><apiItemName>indexRequest</apiItemName><apiType value="Number"/><apiDesc>(Optional) Specifies the requested position for the style sheet in the collection. If this value is not given, the style sheet is added to the end of the collection.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds a style sheet to the imports collection for the specified style sheet.
		 
		 <p><b>Note (IE):</b> Whether a CSS import is made in a CSS file itself (by using @import) or dynamically by 
		 JavaScript, the limit per stylesheet is 31. Beyond that number, all other imports in that stylesheet will be 
		 ignored. Additionally, when trying to add an import by JavaScript, the browser will return an "Invalid argument" error.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531193%28VS.85%29.aspx"><linktext>MSDN: addImport Method</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleSheet:addPageRule"><apiName>addPageRule</apiName><shortdesc>
		 Creates a new page object for a style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Reserved. Always returns -1.
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiDefaultValue>The page object is added to the end of the collection.
		 </apiDefaultValue><apiParam><apiItemName>selector</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the selector for the new page object.
		 </apiDesc></apiParam><apiParam><apiItemName>style</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the style assignments for this page object. This style takes the same form as an inline style specification. For example, "color:blue" is a valid style parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>Specifies the zero-based position in the pages collection where the new page object should be placed.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a new page object for a style sheet.
		 
		 <p><b>Note (IE):</b> Each page object represents a style sheet that corresponds to a @page rule in the document.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535928%28VS.85%29.aspx"><linktext>MSDN: addPageRule Method</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleSheet:addRule"><apiName>addRule</apiName><shortdesc>
		 Creates a new rule for a style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5_no"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Reserved. Always returns -1.
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiDefaultValue>The page object is added to the end of the collection.
		 </apiDefaultValue><apiParam><apiItemName>selector</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the selector for the new rule. Single contextual selectors are valid. For example, 
		 "div p b" is a valid contextual selector.
		 </apiDesc></apiParam><apiParam><apiItemName>style</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the style assignments for this style rule. This style takes the same form as an inline 
		 style specification. For example, "color:blue" is a valid style parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiData>-1</apiData><apiDesc>(Optional) Specifies the zero-based position in the rules collection where the new style rule should be placed.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a new rule for a style sheet.
		 
		 <p><b>Note (IE):</b> You can add up to 4095 style rules with the addRule method. After that, the method returns an "Invalid Argument" exception.</p>
		 <p><b>Note (IE):</b> You can apply rules to a disabled styleSheet, but they do not apply to the document until you enable the styleSheet.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;style&gt;
		 &lt;/style&gt;
		 
		 &lt;div&gt;
		 	Internet Explorer makes &lt;b&gt;HTML&lt;/b&gt; dynamic.
		 &lt;/div&gt;
		 
		 &lt;script&gt;
		 	var new_rule;
		 	new_rule = document.styleSheets[0].addRule("div b", "color:blue", 0);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa358796%28VS.85%29.aspx"><linktext>MSDN: addRule Method</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link><link href="dom.style.css.xml#CSSStyleSheet/removeRule()"><linktext>removeRule()</linktext></link><link href="dom.style.css.xml#CSSStyleSheet/rules"><linktext>rules</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleSheet:deleteRule"><apiName>deleteRule</apiName><shortdesc>
		 Used to delete a rule from the style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index does not 
		 correspond to a rule in the style sheet's rule list.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index within the style sheet's rule list of the rule to remove.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to delete a rule from the style sheet. 
		 
		 </apiDesc><example>
		 <codeblock>myStyles.deleteRule(0);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/stylesheet.deleteRule"><linktext>MDC - stylesheet: deleteRule Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet"><linktext>W3C - DOM Level 2 Style: CSSStyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleSheet:insertRule"><apiName>insertRule</apiName><shortdesc>
		 Used to insert a new rule into the style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if the rule cannot be inserted at 
		 the specified index e.g. if an @import rule is inserted after a standard rule set or other at-rule.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is not a valid insertion point.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this style sheet is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>SYNTAX_ERR: Raised if the specified rule has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The index within the style sheet's rule collection of the newly inserted rule.
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>rule</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The parsable text representing the rule. For rule sets this contains both the selector 
		 and the style declaration. For at-rules, this specifies both the at-identifier and the rule content.
		 </apiDesc></apiParam><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index within the style sheet's rule list of the rule before which to insert the 
		 specified rule. If the specified index is equal to the length of the style sheet's rule collection, 
		 the rule will be added to the end of the style sheet.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to insert a new rule into the style sheet. The new rule now becomes part of the cascade. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // push a new rule onto the top of my stylesheet
		 myStyle.insertRule("#blanc { color: white }", 0);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/stylesheet.insertRule"><linktext>MDC - stylesheet: insertRule Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet"><linktext>W3C - DOM Level 2 Style: CSSStyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleSheet:removeImport"><apiName>removeImport</apiName><shortdesc>
		 Removes the imported style sheet from the imports collection based on ordinal position.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Indicates which imported style sheet to remove.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes the imported style sheet from the imports collection based on ordinal position. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa358799%28VS.85%29.aspx"><linktext>MSDN: removeImport Method</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleSheet:removeRule"><apiName>removeRule</apiName><shortdesc>
		 Deletes an existing style rule for the styleSheet object, and adjusts the index of the rules collection accordingly.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5_no"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>(Optional) Specifies the index value of the rule to be deleted from the style sheet. If an index is not provided, the first rule in the rules collection is removed.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Deletes an existing style rule for the styleSheet object, and adjusts the index of the rules collection accordingly. 
		 
		 <p><b>Note (IE):</b> The page does not automatically reflow when the rule is removed. To see the change, you 
		 must reflow the page. You can reflow the objects affected using a number of methods. For example, you can reflow 
		 the style change only on affected text by setting the text equal to itself. Alternately, you can reload the entire 
		 page using the reload method. When you use the refresh method on a table, its content is reflowed. </p>
		 
		 </apiDesc><example>
		 This example uses the removeRule method to delete a rule from the rules collection, which causes the text to reflow according to the new rules.
		 <codeblock>
		 &lt;STYLE&gt;
		 	P {color:green}
		 &lt;/STYLE&gt;
		 ...
		 &lt;SCRIPT&gt;
		 	function removeTheRule() {
		 		// Style sheets and rules are zero-based collections; therefore,
		 		// the first item is item 0 in the collection.
		 		var iSheets = document.styleSheets.length;
		 		var iRules = document.styleSheets[iSheets-1].rules.length;
		 		// make sure there is a rule to delete
		 		if (1 &lt; iRules) {            
		 			document.styleSheets[iSheets-1].removeRule(1);
		 			// Force the page to render the change.
		 			oEffectRules.innerHTML=oEffectRules.innerHTML;
		 		}
		 	}
		 &lt;/SCRIPT&gt;
		 ...
		 &lt;P ID=oEffectRules&gt;This text has the new style applied to it.&lt;/P&gt;
		 ...
		 &lt;BUTTON onclick="removeTheRule()"&gt;Remove the new rule.&lt;/BUTTON&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531195%28VS.85%29.aspx"><linktext>MSDN: removeRule Method</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link><link href="dom.style.css.xml#CSSStyleSheet/addRule()"><linktext>addRule()</linktext></link><link href="dom.style.css.xml#CSSStyleSheet/rules"><linktext>rules</linktext></link></related-links></apiOperation><apiValue id="dom.style.css:CSSStyleSheet:cssRules:get"><apiName>cssRules</apiName><shortdesc>
		 The list of all CSS rules contained within the style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRuleList</apiValueClassifier></apiValueDef><apiDesc>
		 The list of all CSS rules contained within the style sheet. This includes both rule sets and at-rules.
		 
		 </apiDesc><example>
		 <codeblock>
		 // get the first style sheet’s first rule
		 first_rule = document.styleSheets[0].cssRules[0];</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/stylesheet.cssRules"><linktext>MDC - stylesheet: cssRules Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet"><linktext>W3C - DOM Level 2 Style: CSSStyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link><link href="dom.style.css.xml#CSSStyleSheet/rules"><linktext>rules</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleSheet:ownerRule:get"><apiName>ownerRule</apiName><shortdesc>
		 If this style sheet comes from an &amp;#64;import rule, the ownerRule attribute will contain 
		 the CSSImportRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRule</apiValueClassifier></apiValueDef><apiDesc>
		 If this style sheet comes from an @import rule, the ownerRule attribute will contain 
		 the CSSImportRule. In that case, the ownerNode attribute in the StyleSheet interface 
		 will be null. If the style sheet comes from an element or a processing instruction, 
		 the ownerRule attribute will be null and the ownerNode attribute will contain the Node.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/stylesheet.ownerRule"><linktext>MDC - stylesheet: ownerRule Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleSheet"><linktext>W3C - DOM Level 2 Style: CSSStyleSheet</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleSheet:rules:get"><apiName>rules</apiName><shortdesc>
		 Retrieves a collection of rules defined in a style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="0"/><apiTool name="IE" version="5.5_incorrect"/><apiTool name="IE" version="6.0_incorrect"/><apiTool name="IE" version="7.0_incorrect"/><apiTool name="IE" version="8.0_as_IE7_incorrect"/><apiTool name="IE" version="8.0_as_IE8_incorrect"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5_no"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRuleList</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of rules defined in a style sheet.
		 
		 <p><b>Note (IE):</b> IE doesn't count @imports as rules, but splits up selectors like p#test, ul  into two rules.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;script&gt;
		 			function ruleColor(ruleIndex) {
		 				alert("The color of rule " + ruleIndex + " is " +
		 				document.styleSheets[0].rules.item(ruleIndex).style.color + ".");
		 			}
		 		&lt;/script&gt;
		 
		 		&lt;style&gt;
		 			.rule0 {color:"red"}
		 			.rule1 {color:"blue"} 
		 		&lt;/style&gt;
		 	&lt;/head&gt;
		 
		 	&lt;body&gt;
		 		&lt;p class="rule0" id="oRule0Span"&gt;
		 			Rule 0 is applied to this line.
		 		&lt;/p&gt;
		 		&lt;p class="rule1" id="oRule1Span"&gt;
		 			Rule 1 is applied to this line.
		 		&lt;/p&gt;
		 
		 		&lt;button onclick="ruleColor(0)"&gt;Color of Rule 0&lt;/button&gt; 
		 
		 		&lt;button onclick="ruleColor(1)"&gt;Color of Rule 1&lt;/button&gt;
		 
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531199%28VS.85%29.aspx"><linktext>MSDN: rules Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link><link href="dom.style.css.xml#CSSStyleSheet/cssRules"><linktext>cssRules</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSStyleRule"><apiName>CSSStyleRule</apiName><shortdesc>
	 The CSSStyleRule interface represents a single rule set in a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSStyleRule interface represents a single rule set in a CSS style sheet.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/dd347053%28VS.85%29.aspx"><linktext>MSDN - CSSStyleRule</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSStyleRule"><linktext>MDC - CSSStyleRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule"><linktext>W3C - DOM Level 2 Style: CSSStyleRule</linktext></link></related-links><apiValue id="dom.style.css:CSSStyleRule:readOnly:get"><apiName>readOnly</apiName><shortdesc>
		 Retrieves whether the rule or style sheet is defined on the page or is imported.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiDefaultValue>false. Rule or style sheet is obtained through a link object or the &amp;#64;import rule.
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Retrieves whether the rule or style sheet is defined on the page or is imported.
		 
		 <p><b>Note (IE):</b> You cannot modify style sheets obtained through a link object or the @import rule while the designMode property is enabled.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534356%28VS.85%29.aspx"><linktext>MSDN - readOnly Property</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleRule:selectorText:get"><apiName>selectorText</apiName><shortdesc>
		 The textual representation of the selector for the rule set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string value 
		 has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this rule 
		 is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The textual representation of the selector for the rule set.
		 
		 <p><b>Note:</b> The implementation may have stripped out insignificant whitespace while parsing the selector. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // for cssrule: body { background-color: darkblue; }
		 cssrule = document.styleSheets[1];
		 !!TODO!! 
		 selector = cssrule.selectorText; 
		 // selector is now "body"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534626%28VS.85%29.aspx"><linktext>MSDN - selectorText Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule.selectorText"><linktext>MDC - cssRule.selectorText</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule-selectorText"><linktext>W3C - DOM Level 2 Style: CSSStyleRule.selectorText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleRule:style:get"><apiName>style</apiName><shortdesc>
		 The declaration-block of this rule set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 The declaration-block of this rule set.
		 
		 <p><b>Note:</b> The declaration block is that part of the style rule that appears within the braces 
		 and that actually provides the style definitions (for the selector, the part that comes before the braces).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 function stilo() {
		 	alert(document.styleSheets[0].cssRules[0].style.cssText);
		 }
		 // displays "background-color: gray;"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534651%28VS.85%29.aspx"><linktext>MSDN - STYLE Attribute</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule.style"><linktext>MDC - cssRule.style</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleRule-style"><linktext>W3C - DOM Level 2 Style: CSSStyleRule.style</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSPageRule"><apiName>CSSPageRule</apiName><shortdesc>
	 The CSSPageRule interface represents a &amp;#64;page rule within a CSS style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSRule</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSPageRule interface represents a @page rule within a CSS style sheet. The @page rule is used to 
	 specify the dimensions, orientation, margins, etc. of a page box for paged media.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms530841%28VS.85%29.aspx"><linktext>MSDN - &amp;#64;page Rule</linktext></link><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSPageRule"><linktext>MDC - cssRule: CSSPageRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule"><linktext>W3C - DOM Level 2 Style: CSSPageRule</linktext></link></related-links><apiValue id="dom.style.css:CSSPageRule:selectorText:get"><apiName>selectorText</apiName><shortdesc>
		 The parsable textual representation of the page selector for the rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this rule is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The parsable textual representation of the page selector for the rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSPageRule"><linktext>MDC - cssRule: CSSPageRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule-name"><linktext>W3C - DOM Level 2 Style: CSSPageRule.selectorText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPageRule:style:get"><apiName>style</apiName><shortdesc>
		 The declaration-block of this rule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 The declaration-block of this rule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/cssRule#CSSPageRule"><linktext>MDC - cssRule: CSSPageRule</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPageRule-style"><linktext>W3C - DOM Level 2 Style: CSSPageRule.style</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:ElementCSSInlineStyle"><apiName>ElementCSSInlineStyle</apiName><shortdesc>
	 Inline style information attached to elements is exposed through the style attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Inline style information attached to elements is exposed through the style attribute. 
	 
	 <p>This represents 
	 the contents of the STYLE attribute for HTML elements (or elements in other schemas or DTDs which use 
	 the STYLE attribute in the same way). The expectation is that an instance of the ElementCSSInlineStyle 
	 interface can be obtained by using binding-specific casting methods on an instance of the Element 
	 interface when the element supports inline CSS style informations.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ElementCSSInlineStyle"><linktext>W3C - DOM Level 2 Style: ElementCSSInlineStyle</linktext></link></related-links><apiValue id="dom.style.css:ElementCSSInlineStyle:dom.style.css:ElementCSSInlineStyle:style:get"><apiName>style</apiName><shortdesc>
		 Returns an object that represents the element's style attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an object that represents the element's style attribute.
		 
		 <p>Note: Since the style property has the same (and highest) priority 
		 in the CSS cascade as an inline style declaration via the style 
		 attribute, it is useful for setting style on one specific element.</p>
		 
		 <p>Note: However, it is not useful for learning about the element's 
		 style in general, since it represents only the CSS declarations set 
		 in the element's inline style attribute, not those that come from 
		 style rules elsewhere, such as style rules in the &lt;head&gt; section, or
		 external style sheets.</p>
		 
		 <p><b>Note:</b> To get the values of all CSS properties for an element you 
		 should use window.getComputedStyle instead.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var div = document.getElementById("div1");
		 div.style.marginTop = ".25in";</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534651%28VS.85%29.aspx"><linktext>MSDN - STYLE Attribute</linktext></link><link href="http://developer.mozilla.org/en/DOM/element.style"><linktext>MDC - element.style</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ElementCSSInlineStyle-style"><linktext>W3C - DOM Level 2 Style: ElementCSSInlineStyle.style</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSPrimitiveValue"><apiName>CSSPrimitiveValue</apiName><shortdesc>
	 The CSSPrimitiveValue interface represents a single CSS value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSValue</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSPrimitiveValue interface represents a single CSS value. 
	 
	 <p>This interface may be used to determine 
	 the value of a specific style property currently set in a block or to set a specific style property 
	 explicitly within the block. An instance of this interface might be obtained from the getPropertyCSSValue 
	 method of the CSSStyleDeclaration interface. A CSSPrimitiveValue object only occurs in a context of 
	 a CSS property.</p>
	 
	 <p>Conversions are allowed between absolute values (from millimeters to centimeters, from degrees to radians, 
	 and so on) but not between relative values. (For example, a pixel value cannot be converted to a 
	 centimeter value.) Percentage values can't be converted since they are relative to the parent value (or 
	 another property value). There is one exception for color percentage values: since a color percentage value 
	 is relative to the range 0-255, a color percentage value can be converted to a number; (see also the 
	 RGBColor interface).</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link></related-links><apiOperation id="dom.style.css:CSSPrimitiveValue:getFloatValue"><apiName>getFloatValue</apiName><shortdesc>
		 This method is used to get a float value in a specified unit.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a float value or if the 
		 float value can't be converted into the specified unit.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The float value in the specified unit.
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>unitType</apiItemName><apiType value="Number"/><apiDesc>A unit code to get the float value. The unit code can only be a float unit type (i.e. CSS_NUMBER, 
		 CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, CSS_HZ, CSS_KHZ, CSS_DIMENSION).
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method is used to get a float value in a specified unit. If this CSS value doesn't contain a float value 
		 or can't be converted into the specified unit, a DOMException is raised.  
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getFloatValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue.getFloatValue()</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSPrimitiveValue:getRGBColorValue"><apiName>getRGBColorValue</apiName><shortdesc>
		 This method is used to get the RGB color.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_ACCESS_ERR: Raised if the attached property can't return a RGB color value (e.g. 
		 this is not CSS_RGBCOLOR).
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The RGB color value.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:RGBColor</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 This method is used to get the RGB color. If this CSS value doesn't contain a RGB color value, a DOMException is raised. 
		 Modification to the corresponding style property can be achieved using the RGBColor interface. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getRGBColorValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue.getRGBColorValue()</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSPrimitiveValue:getRectValue"><apiName>getRectValue</apiName><shortdesc>
		 This method is used to get the Rect value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a Rect value. (e.g. this is not CSS_RECT).
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The Rect value.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:Rect</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 This method is used to get the Rect value. If this CSS value doesn't contain a rect value, a DOMException is raised. 
		 Modification to the corresponding style property can be achieved using the Rect interface. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getRectValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue.getRectValue()</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSPrimitiveValue:getStringValue"><apiName>getStringValue</apiName><shortdesc>
		 This method is used to get the string value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The string value in the current unit. The current primitiveType can only be a string unit type (i.e. CSS_STRING, 
		 CSS_URI, CSS_IDENT and CSS_ATTR).
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 This method is used to get the string value. If the CSS value doesn't contain a string value, a DOMException is raised.
		 
		 <p><b>Note:</b> Some properties (like 'font-family' or 'voice-family') convert a whitespace separated list of idents to a string.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-getStringValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue.getStringValue()</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSPrimitiveValue:setFloatValue"><apiName>setFloatValue</apiName><shortdesc>
		 A method to set the float value with a specified unit.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_ACCESS_ERR: Raised if the attached property doesn't support the float value or the unit type.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>unitType</apiItemName><apiType value="Number"/><apiDesc>A unit code as defined above. The unit code can only be a float unit type (i.e. CSS_NUMBER, 
		 CSS_PERCENTAGE, CSS_EMS, CSS_EXS, CSS_PX, CSS_CM, CSS_MM, CSS_IN, CSS_PT, CSS_PC, CSS_DEG, CSS_RAD, CSS_GRAD, CSS_MS, CSS_S, 
		 CSS_HZ, CSS_KHZ, CSS_DIMENSION).
		 </apiDesc></apiParam><apiParam><apiItemName>floatValue</apiItemName><apiType value="Number"/><apiDesc>The new float value.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 A method to set the float value with a specified unit. If the property attached with this value can not accept the specified 
		 unit or the float value, the value will be unchanged and a DOMException will be raised. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-setFloatValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue.setFloatValue()</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSPrimitiveValue:setStringValue"><apiName>setStringValue</apiName><shortdesc>
		 A method to set the string value with the specified unit.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_ACCESS_ERR: Raised if the CSS value doesn't contain a string value or if the string value 
		 can't be converted into the specified unit.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>stringType</apiItemName><apiType value="Number"/><apiDesc>A string code as defined above. The string code can only be a string unit type (i.e. CSS_STRING, 
		 CSS_URI, CSS_IDENT, and CSS_ATTR).
		 </apiDesc></apiParam><apiParam><apiItemName>stringValue</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The new string value.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 A method to set the string value with the specified unit. If the property attached to this value can't accept the specified unit 
		 or the string value, the value will be unchanged and a DOMException will be raised. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-setStringValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue.setStringValue()</linktext></link></related-links></apiOperation><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_ATTR"><apiName>CSS_ATTR</apiName><shortdesc>
		 The value is a attribute function.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>22</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a attribute function. The value can be obtained by using the getStringValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/generate.html#x16"><linktext>W3C - CSS2: The 'content' property</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_CM"><apiName>CSS_CM</apiName><shortdesc>
		 The value is a length (cm).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (cm). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_COUNTER"><apiName>CSS_COUNTER</apiName><shortdesc>
		 The value is a counter or counters function.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>23</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a counter or counters function. The value can be obtained by using the getCounterValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#counter"><linktext>W3C - CSS2: Counters</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_DEG"><apiName>CSS_DEG</apiName><shortdesc>
		 The value is an angle (deg).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>11</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is an angle (deg). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q19"><linktext>W3C - CSS2: Angles</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_DIMENSION"><apiName>CSS_DIMENSION</apiName><shortdesc>
		 The value is a number with an unknown dimension.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>18</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a number with an unknown dimension. The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_EMS"><apiName>CSS_EMS</apiName><shortdesc>
		 The value is a length (ems).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (ems). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_EXS"><apiName>CSS_EXS</apiName><shortdesc>
		 The value is a length (exs).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (exs). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_GRAD"><apiName>CSS_GRAD</apiName><shortdesc>
		 The value is an angle (grad).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>13</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is an angle (grad). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q19"><linktext>W3C - CSS2: Angles</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_HZ"><apiName>CSS_HZ</apiName><shortdesc>
		 The value is a frequency (Hz).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>16</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a frequency (Hz). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q21"><linktext>W3C - CSS2: Frequencies</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_IDENT"><apiName>CSS_IDENT</apiName><shortdesc>
		 The value is an identifier.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>21</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is an identifier. The value can be obtained by using the getStringValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#value-def-identifier"><linktext>W3C - CSS2: Characters and case</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_IN"><apiName>CSS_IN</apiName><shortdesc>
		 The value is a length (in).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (in). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_KHZ"><apiName>CSS_KHZ</apiName><shortdesc>
		 The value is a frequency (kHz).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>17</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a frequency (kHz). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q21"><linktext>W3C - CSS2: Frequencies</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_MM"><apiName>CSS_MM</apiName><shortdesc>
		 The value is a length (mm).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (mm). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_MS"><apiName>CSS_MS</apiName><shortdesc>
		 The value is a time (ms).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>14</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a time (ms). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q20"><linktext>W3C - CSS2: Times</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_NUMBER"><apiName>CSS_NUMBER</apiName><shortdesc>
		 The value is a simple number.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a simple number. The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q13"><linktext>W3C - CSS2: Integers and real numbers</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_PC"><apiName>CSS_PC</apiName><shortdesc>
		 The value is a length (pc).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>10</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (pc). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_PERCENTAGE"><apiName>CSS_PERCENTAGE</apiName><shortdesc>
		 The value is a percentage.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a percentage. The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#percentage-units"><linktext>W3C - CSS2: Percentages</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_PT"><apiName>CSS_PT</apiName><shortdesc>
		 The value is a length (pt).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>9</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (pt). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_PX"><apiName>CSS_PX</apiName><shortdesc>
		 The value is a length (px).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a length (px). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#length-units"><linktext>W3C - CSS2: Lengths</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_RAD"><apiName>CSS_RAD</apiName><shortdesc>
		 The value is an angle (rad).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>12</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is an angle (rad). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q19"><linktext>W3C - CSS2: Angles</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_RECT"><apiName>CSS_RECT</apiName><shortdesc>
		 The value is a rect function.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>24</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a rect function. The value can be obtained by using the getRectValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/visufx.html#value-def-shape"><linktext>W3C - CSS2: Clipping: the 'clip' property</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_RGBCOLOR"><apiName>CSS_RGBCOLOR</apiName><shortdesc>
		 The value is a RGB color.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>25</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a RGB color. The value can be obtained by using the getRGBColorValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#color-units"><linktext>W3C - CSS2: Colors</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_S"><apiName>CSS_S</apiName><shortdesc>
		 The value is a time (s).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>15</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a time (s). The value can be obtained by using the getFloatValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#q20"><linktext>W3C - CSS2: Times</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_STRING"><apiName>CSS_STRING</apiName><shortdesc>
		 The value is a STRING.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>19</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a STRING. The value can be obtained by using the getStringValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#strings"><linktext>W3C - CSS2: Strings</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_UNKNOWN"><apiName>CSS_UNKNOWN</apiName><shortdesc>
		 The value is not a recognized CSS2 value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is not a recognized CSS2 value. The value can only be obtained by using the cssText attribute.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:CSS_URI"><apiName>CSS_URI</apiName><shortdesc>
		 The value is a URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>20</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a URI. The value can be obtained by using the getStringValue method.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/syndata.html#uri"><linktext>W3C - CSS2: URL + URN = URI</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSPrimitiveValue:primitiveType:get"><apiName>primitiveType</apiName><shortdesc>
		 The type of the value as defined by the constants specified above.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The type of the value as defined by the constants specified above.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSPrimitiveValue-primitiveType"><linktext>W3C - DOM Level 2 Style: CSSPrimitiveValue.primitiveType</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSValue"><apiName>CSSValue</apiName><shortdesc>
	 The CSSValue interface represents a simple or a complex value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSValue interface represents a simple or a complex value. A CSSValue 
	 object only occurs in a context of a CSS property.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue"><linktext>W3C - DOM Level 2 Style: CSSValue</linktext></link></related-links><apiValue id="dom.style.css:CSSValue:CSS_CUSTOM"><apiName>CSS_CUSTOM</apiName><shortdesc>
		 The value is a custom value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a custom value.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue"><linktext>W3C - DOM Level 2 Style: CSSValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:CSS_INHERIT"><apiName>CSS_INHERIT</apiName><shortdesc>
		 The value is inherited and the cssText contains "inherit".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is inherited and the cssText contains "inherit".
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue"><linktext>W3C - DOM Level 2 Style: CSSValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:CSS_PRIMITIVE_VALUE"><apiName>CSS_PRIMITIVE_VALUE</apiName><shortdesc>
		 The value is a primitive value and an instance of the CSSPrimitiveValue 
		 interface can be obtained by using binding-specific casting methods on 
		 this instance of the CSSValue interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a primitive value and an instance of the CSSPrimitiveValue 
		 interface can be obtained by using binding-specific casting methods on 
		 this instance of the CSSValue interface.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue"><linktext>W3C - DOM Level 2 Style: CSSValue</linktext></link><link href="dom.style.css.xml#CSSPrimitiveValue"><linktext>dom.style.css.CSSPrimitiveValue</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:CSS_VALUE_LIST"><apiName>CSS_VALUE_LIST</apiName><shortdesc>
		 The value is a CSSValue list and an instance of the CSSValueList interface 
		 can be obtained by using binding-specific casting methods on this instance 
		 of the CSSValue interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiDynamic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The value is a CSSValue list and an instance of the CSSValueList interface 
		 can be obtained by using binding-specific casting methods on this instance 
		 of the CSSValue interface.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue"><linktext>W3C - DOM Level 2 Style: CSSValue</linktext></link><link href="dom.style.css.xml#CSSValueList"><linktext>dom.style.css.CSSValueList</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:cssText:get"><apiName>cssText</apiName><shortdesc>
		 A string representation of the current value.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_MODIFICATION_ERR: Raised if the 
		 specified CSS string value represents a different type of values than the 
		 values allowed by the CSS property.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this 
		 declaration is readonly or a property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 A string representation of the current value.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-cssText"><linktext>W3C - DOM Level 2 Style: CSSValue.cssText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSValue:cssValueType:get"><apiName>cssValueType</apiName><shortdesc>
		 A code defining the type of the value as defined above.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 A code defining the type of the value as defined above.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValue-cssValueType"><linktext>W3C - DOM Level 2 Style: CSSValue.cssValueType</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:ViewCSS"><apiName>ViewCSS</apiName><shortdesc>
	 This interface represents a CSS view.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.views:AbstractView</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface represents a CSS view. The getComputedStyle method provides a read only access to the computed 
	 values of an element.
	 
	 <p>The expectation is that an instance of the ViewCSS interface can be obtained by using binding-specific casting 
	 methods on an instance of the AbstractView interface.</p>
	 
	 <p>Since a computed style is related to an Element node, if this element is removed from the document, the associated 
	 CSSStyleDeclaration and CSSValue related to this declaration are no longer valid.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-ViewCSS"><linktext>W3C - DOM Level 2 Style: ViewCSS</linktext></link></related-links><apiOperation id="dom.style.css:ViewCSS:dom.style.css:ViewCSS:getComputedStyle"><apiName>getComputedStyle</apiName><shortdesc>
		 This method is used to get the computed style as it is defined in CSS2.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The computed style. The CSSStyleDeclaration is read-only and contains only absolute values.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:CSSStyleDeclaration</apiOperationClassifier></apiReturn><apiParam><apiItemName>elt</apiItemName><apiOperationClassifier>dom.core:Element</apiOperationClassifier><apiDesc>The element whose style is to be computed. This parameter cannot be null.
		 </apiDesc></apiParam><apiParam><apiItemName>pseudoElt</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The pseudo-element or null if none.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method is used to get the computed style as it is defined in CSS2. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var element = document.getElementById(“elemId”);
		 var style = document.defaultView.getComputedStyle(element, pseudoElt);</codeblock>
		 
		 <codeblock>
		 //practical example:
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;style&gt;
		 		#elem_container{
		 			position: absolute;
		 			left: 100Px;
		 			top: 200px;
		 			height:100px;
		 		}
		 	&lt;/style&gt;
		 &lt;/head&gt;
		 &lt;body&gt;
		 	&lt;div id="elem_container"&gt;dummy&lt;/div&gt;
		 
		 	&lt;div id="output"&gt;&lt;/div&gt;  
		 	&lt;script&gt;
		 		function getTheStyle() {
		 			var elem=document.getElementById("elem_container");
		 			var theCSSprop=document.defaultView.getComputedStyle(elem,null).getPropertyValue("height");
		 			document.getElementById("output").innerHTML=theCSSprop;
		 		}
		 	getTheStyle();
		 	&lt;/script&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.getComputedStyle"><linktext>MDC - window.getComputedStyle</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSview-getComputedStyle"><linktext>W3C - DOM Level 2 Style: ViewCSS.getComputedStyle()</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/"><linktext>W3C - CSS2 Specification</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.style.css:CSSStyleDeclaration"><apiName>CSSStyleDeclaration</apiName><shortdesc>
	 The CSSStyleDeclaration interface represents a single CSS declaration block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSStyleDeclaration interface represents a single CSS declaration block.
	 
	 <p class="style1">TODO: Add MS proprietary methods</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/dd347052%28VS.85%29.aspx"><linktext>MSDN - CSSStyleDeclaration</linktext></link><link href="http://developer.mozilla.org/En/DOM/CSSStyleDeclaration"><linktext>MDC - CSSStyleDeclaration</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration</linktext></link></related-links><apiOperation id="dom.style.css:CSSStyleDeclaration:getPropertyCSSValue"><apiName>getPropertyCSSValue</apiName><shortdesc>
		 Used to retrieve the object representation of the value of a CSS property if it has been explicitly 
		 set within this declaration block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns the value of the property if it has been explicitly set for this declaration block. 
		 Returns null if the property has not been set.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:CSSValue</apiOperationClassifier></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the CSS property.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to retrieve the object representation of the value of a CSS property if it has been explicitly 
		 set within this declaration block. This method returns null if the property is a shorthand property. 
		 Shorthand property values can only be accessed and modified as strings, using the getPropertyValue 
		 and setProperty methods. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyCSSValue"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.getPropertyCSSValue()</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html"><linktext>W3C - CSS2: CSS Property index</linktext></link><link href="dom.style.css.xml#CSS2Properties"><linktext>dom.style.css.CSS2Properties</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleDeclaration:getPropertyPriority"><apiName>getPropertyPriority</apiName><shortdesc>
		 Used to retrieve the priority of a CSS property (e.g.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A string representing the priority (e.g. "important") if one exists. The empty string if none exists.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the CSS property.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to retrieve the priority of a CSS property (e.g. the "important" qualifier) if the property 
		 has been explicitly set in this declaration block. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyPriority"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.getPropertyPriority()</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html"><linktext>W3C - CSS2: CSS Property index</linktext></link><link href="dom.style.css.xml#CSS2Properties"><linktext>dom.style.css.CSS2Properties</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleDeclaration:getPropertyValue"><apiName>getPropertyValue</apiName><shortdesc>
		 Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns the value of the property if it has been explicitly set for this declaration block. 
		 Returns the empty string if the property has not been set.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the CSS property.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to retrieve the value of a CSS property if it has been explicitly set within this declaration block. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-getPropertyValue"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.getPropertyValue()</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html"><linktext>W3C - CSS2: CSS Property index</linktext></link><link href="dom.style.css.xml#CSS2Properties"><linktext>dom.style.css.CSS2Properties</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleDeclaration:item"><apiName>item</apiName><shortdesc>
		 Used to retrieve the properties that have been explicitly set in this declaration block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The name of the property at this ordinal position. The empty string if no property 
		 exists at this position.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index of the property name to retrieve.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to retrieve the properties that have been explicitly set in this declaration block. 
		 The order of the properties retrieved using this method does not have to be the order in 
		 which they were set. This method can be used to iterate over all properties in this 
		 declaration block. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-item"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.item()</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleDeclaration:removeProperty"><apiName>removeProperty</apiName><shortdesc>
		 Used to remove a CSS property if it has been explicitly set within this declaration block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration 
		 is readonly or the property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>Returns the value of the property if it has been explicitly set for this declaration 
		 block. Returns the empty string if the property has not been set or the property name does 
		 not correspond to a known CSS property.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the CSS property.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to remove a CSS property if it has been explicitly set within this declaration block. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-removeProperty"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.removeProperty()</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html"><linktext>W3C - CSS2: CSS Property index</linktext></link><link href="dom.style.css.xml#CSS2Properties"><linktext>dom.style.css.CSS2Properties</linktext></link></related-links></apiOperation><apiOperation id="dom.style.css:CSSStyleDeclaration:setProperty"><apiName>setProperty</apiName><shortdesc>
		 Used to set a property value and priority within this declaration block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>SYNTAX_ERR: Raised if the specified value has a syntax 
		 error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this declaration 
		 is readonly or the property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>propertyName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the CSS property.
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The new value of the property.
		 </apiDesc></apiParam><apiParam><apiItemName>priority</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The new priority of the property (e.g. "important").
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to set a property value and priority within this declaration block. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-setProperty"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.setProperty()</linktext></link><link href="http://www.w3.org/TR/1998/REC-CSS2-19980512/propidx.html"><linktext>W3C - CSS2: CSS Property index</linktext></link><link href="dom.style.css.xml#CSS2Properties"><linktext>dom.style.css.CSS2Properties</linktext></link></related-links></apiOperation><apiValue id="dom.style.css:CSSStyleDeclaration:cssText:get"><apiName>cssText</apiName><shortdesc>
		 The parsable textual representation of the declaration block (excluding the 
		 surrounding curly braces).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified CSS string 
		 value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this 
		 declaration is readonly or a property is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The parsable textual representation of the declaration block (excluding the 
		 surrounding curly braces). 
		 
		 <p>Setting this attribute will result in the parsing 
		 of the new value and resetting of all the properties in the declaration block 
		 including the removal or addition of properties.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-cssText"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.cssText</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleDeclaration:length:get"><apiName>length</apiName><shortdesc>
		 The number of properties that have been explicitly set in this declaration block.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of properties that have been explicitly set in this declaration block. 
		 The range of valid indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-length"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.length</linktext></link></related-links></apiValue><apiValue id="dom.style.css:CSSStyleDeclaration:parentRule:get"><apiName>parentRule</apiName><shortdesc>
		 The CSS rule that contains this declaration block or null if this CSSStyleDeclaration 
		 is not attached to a CSSRule.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSRule</apiValueClassifier></apiValueDef><apiDesc>
		 The CSS rule that contains this declaration block or null if this CSSStyleDeclaration 
		 is not attached to a CSSRule.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSStyleDeclaration-parentRule"><linktext>W3C - DOM Level 2 Style: CSSStyleDeclaration.parentRule</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.css:CSSValueList"><apiName>CSSValueList</apiName><shortdesc>
	 The CSSValueList interface provides the abstraction of an ordered collection of CSS values.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.style.css:CSSValue</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The CSSValueList interface provides the abstraction of an ordered collection of CSS values.
	 
	 <p>Some properties allow an empty list into their syntax. In that case, these properties take the 
	 none identifier. So, an empty list means that the property has the value none.</p>
	 
	 <p>The items in the CSSValueList are accessible via an integral index, starting from 0.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList"><linktext>W3C - DOM Level 2 Style: CSSValueList</linktext></link></related-links><apiOperation id="dom.style.css:CSSValueList:item"><apiName>item</apiName><shortdesc>
		 Used to retrieve a CSSValue by ordinal index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The CSSValue at the index position in the CSSValueList, or null if that is not a valid index.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:CSSValue</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into the collection.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to retrieve a CSSValue by ordinal index. The order in this collection represents the order of the values 
		 in the CSS style property. If index is greater than or equal to the number of values in the list, this returns null. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList-item"><linktext>W3C - DOM Level 2 Style: CSSValueList.item()</linktext></link></related-links></apiOperation><apiValue id="dom.style.css:CSSValueList:length:get"><apiName>length</apiName><shortdesc>
		 The number of CSSValues in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of CSSValues in the list. The range of valid values of the indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/css.html#CSS-CSSValueList-length"><linktext>W3C - DOM Level 2 Style: CSSValueList.length</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.style.stylesheets"><apiName>dom.style.stylesheets</apiName><apiDetail/><apiClassifier id="dom.style.stylesheets:DocumentStyle"><apiName>DocumentStyle</apiName><shortdesc>
	 The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document 
	 can be retrieved.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentStyle interface provides a mechanism by which the style sheets embedded in a document 
	 can be retrieved. The expectation is that an instance of the DocumentStyle interface can be obtained 
	 by using binding-specific casting methods on an instance of the Document interface.
	 
	 <p><b>Note:</b> CSSOM is in its very early stages. The intention is that this specification will in due course supersede DOM Level 2 Style. </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle"><linktext>W3C - DOM Level 2 Style: DocumentStyle</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle"><linktext>W3C - CSSOM: DocumentStyle</linktext></link></related-links><apiOperation id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:enableStylesheetsForSet"><apiName>enableStylesheetsForSet</apiName><shortdesc>
		 Invoking this method must change the disabled attribute on each StyleSheet object with a title in the 
		 styleSheets attribute, so that all those whose title matches the name argument are enabled, and all others 
		 are disabled.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Invoking this method must change the disabled attribute on each StyleSheet object with a title in the 
		 styleSheets attribute, so that all those whose title matches the name argument are enabled, and all others 
		 are disabled. Title matches must be case-sensitive.
		 
		 <p>Invoking this method with the empty string value must disable all alternative and preferred style sheets
		 (but does not change the state of persistent style sheets).</p>
		 
		 <p>Invoking this method with the null value must have no effect.</p>
		 
		 <p>Style sheets that do not have a title are never affected by this method. This method does not change the 
		 values of the lastStyleSheetSet or preferredStyleSheetSet  attributes.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.enableStyleSheetsForSet"><linktext>MDC - Document.enableStylesheetsForSet()</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-enablestylesheetsforset"><linktext>W3C - DocumentStyle.enableStylesheetsForSet()</linktext></link></related-links></apiOperation><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:lastStyleSheetSet:get"><apiName>lastStyleSheetSet</apiName><shortdesc>
		 This attribute must initially have the value null.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute must initially have the value null. Its value changes when the selectedStyleSheetSet  attribute is set.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.lastStyleSheetSet"><linktext>MDC - Document.lastStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-lastStyleSheetSet"><linktext>W3C - DocumentStyle.lastStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:preferredStyleSheetSet:get"><apiName>preferredStyleSheetSet</apiName><shortdesc>
		 This attribute must be the preferred style sheet set as set by the author.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute must be the preferred style sheet set as set by the author. It is determined from the order 
		 of style sheet declarations and the Default-Style HTTP headers. If there is no preferred style sheet set, 
		 this attribute must  be the empty string. The case of this attribute must  exactly match the case given by 
		 the author where the preferred style sheet is specified or implied. This attribute must  never be null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.preferredStyleSheetSet"><linktext>MDC - Document.preferredStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-preferredStyleSheetSet"><linktext>W3C - DocumentStyle.preferredStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:selectedStyleSheetSet:get"><apiName>selectedStyleSheetSet</apiName><shortdesc>
		 This attribute indicates which style sheet set is in use.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute indicates which style sheet set is in use. This attribute is live; changing the disabled attribute 
		 on style sheets directly will change the value of this attribute.
		 
		 <p>If all the sheets that are enabled and have a title have the same title (by case-sensitive  comparisons) 
		 then the value of this attribute must be exactly equal to the title of the first enabled style sheet with a 
		 title in the styleSheets  list. Otherwise, if style sheets from different sets are enabled, then the return 
		 value must be null (there is no way to determine what the currently selected style sheet set is in those 
		 conditions). Otherwise, either all style sheets that have a title are disabled, or there are no alternative 
		 style sheets, and selectedStyleSheetSet  must return the empty string.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.selectedStyleSheetSet"><linktext>MDC - Document.selectedStyleSheetSet</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-selectedStyleSheetSet"><linktext>W3C - DocumentStyle.selectedStyleSheetSet</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:styleSheetSets:get"><apiName>styleSheetSets</apiName><shortdesc>
		 This must be a live list of the currently available style sheet sets.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOM" version="0"/><apiSince version="CSSOM 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMStringList</apiValueClassifier></apiValueDef><apiDesc>
		 This must be a live list of the currently available style sheet sets. This list is constructed by enumerating 
		 all the style sheets for this document available to the implementation, in the order they are listed in the 
		 styleSheets  attribute, adding the title of each style sheet with a title to the list, avoiding duplicates by 
		 dropping titles that match (case-sensitively) titles that have already been added to the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.styleSheetSets"><linktext>MDC - Document.styleSheetSets</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-styleSheetSets"><linktext>W3C - DocumentStyle.styleSheetSets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:DocumentStyle:dom.style.stylesheets:DocumentStyle:styleSheets:get"><apiName>styleSheets</apiName><shortdesc>
		 A list containing all the style sheets explicitly linked into or embedded in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:StyleSheetList</apiValueClassifier></apiValueDef><apiDesc>
		 A list containing all the style sheets explicitly linked into or embedded in a document. For HTML 
		 documents, this includes external style sheets, included via the HTML LINK element, and inline 
		 STYLE elements. In XML, this includes external style sheets, included via style sheet 
		 processing instructions.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531200%28VS.85%29.aspx"><linktext>MSDN: styleSheets Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.styleSheets"><linktext>MDC - Document.styleSheets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet-DocumentStyle"><linktext>W3C - DOM Level 2 Style: DocumentStyle..styleSheets</linktext></link><link href="http://dev.w3.org/csswg/cssom/#documentstyle-stylesheets"><linktext>W3C - CSSOM: DocumentStyle.styleSheets</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.stylesheets:MediaList"><apiName>MediaList</apiName><shortdesc>
	 The MediaList interface provides the abstraction of an ordered collection of media, without 
	 defining or constraining how this collection is implemented.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The MediaList interface provides the abstraction of an ordered collection of media, without 
	 defining or constraining how this collection is implemented. An empty list is the same as 
	 a list that contains the medium "all".
	 
	 The items in the MediaList are accessible via an integral index, starting from 0.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList"><linktext>W3C - DOM Level 2 Style: MediaList</linktext></link></related-links><apiOperation id="dom.style.stylesheets:MediaList:appendMedium"><apiName>appendMedium</apiName><shortdesc>
		 Adds the medium newMedium to the end of the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_CHARACTER_ERR: If the medium contains characters that are 
		 invalid in the underlying style language.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newMedium</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The new medium to add.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adds the medium newMedium to the end of the list. If the newMedium is already used, it is first removed. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList"><linktext>W3C - DOM Level 2 Style: appendMedium Method</linktext></link></related-links></apiOperation><apiOperation id="dom.style.stylesheets:MediaList:deleteMedium"><apiName>deleteMedium</apiName><shortdesc>
		 Deletes the medium indicated by oldMedium from the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_FOUND_ERR: Raised if oldMedium is not in the list.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>oldMedium</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The medium to delete in the media list.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Deletes the medium indicated by oldMedium from the list. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList"><linktext>W3C - DOM Level 2 Style: deleteMedium Method</linktext></link></related-links></apiOperation><apiValue id="dom.style.stylesheets:MediaList:length:get"><apiName>length</apiName><shortdesc>
		 The number of media in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of media in the list. The range of valid media is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList"><linktext>W3C - DOM Level 2 Style: length Property</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:MediaList:mediaText:get"><apiName>mediaText</apiName><shortdesc>
		 The parsable textual representation of the media list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: Raised if the specified string value has a syntax error and is unparsable.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if this list is readonly.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The parsable textual representation of the media list. This is a comma-separated list of media.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-MediaList"><linktext>W3C - DOM Level 2 Style: mediaText Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.stylesheets:LinkStyle"><apiName>LinkStyle</apiName><shortdesc>
	 The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible 
	 for linking it into a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The LinkStyle interface provides a mechanism by which a style sheet can be retrieved from the node responsible 
	 for linking it into a document. An instance of the LinkStyle interface can be obtained using binding-specific 
	 casting methods on an instance of a linking node.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-LinkStyle"><linktext>W3C - DOM Level 2 Style: LinkStyle</linktext></link></related-links><apiValue id="dom.style.stylesheets:LinkStyle:sheet:get"><apiName>sheet</apiName><shortdesc>
		 The style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:StyleSheet</apiValueClassifier></apiValueDef><apiDesc>
		 The style sheet.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-LinkStyle"><linktext>W3C - DOM Level 2 Style: sheet Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.stylesheets:StyleSheet"><apiName>StyleSheet</apiName><shortdesc>
	 The StyleSheet interface is the abstract base interface for any type of style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The StyleSheet interface is the abstract base interface for any type of style sheet. It represents 
	 a single style sheet associated with a structured document. In HTML, the StyleSheet interface 
	 represents either an external style sheet, included via the HTML LINK element, or an inline STYLE 
	 element. In XML, this interface represents an external style sheet, included via a style sheet 
	 processing instruction.
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535871%28VS.85%29.aspx"><linktext>MSDN: StyleSheet</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet"><linktext>MDC - stylesheet</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link></related-links><apiValue id="dom.style.stylesheets:StyleSheet:disabled:get"><apiName>disabled</apiName><shortdesc>
		 This property indicates whether the current stylesheet is applied or not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 This property indicates whether the current stylesheet is applied or not.
		 
		 </apiDesc><example>
		 <codeblock>
		 // if the stylesheet is disabled... 
		 if (stylesheet.disabled) {
		 	// apply style in-line 
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533732%28VS.85%29.aspx"><linktext>MSDN: disabled Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.disabled"><linktext>MDC - stylesheet: disabled Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:href:get"><apiName>href</apiName><shortdesc>
		 If the style sheet is a linked style sheet, the value of its attribute is its location.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 If the style sheet is a linked style sheet, the value of its attribute is its location. For inline 
		 style sheets, the value of this attribute is null.
		 
		 </apiDesc><example>
		 <codeblock>
		 // on a local machine: 
		 &lt;html&gt; 
		 	&lt;head&gt; 
		 		&lt;link rel="StyleSheet" href="example.css" type="text/css" /&gt; 
		 		&lt;script&gt; 
		 			function sref() { 
		 				alert(document.styleSheets[0].href); 
		 			}
		 		&lt;/script&gt; 
		 	&lt;/head&gt; 
		 	&lt;body&gt; 
		 		&lt;div class="thunder"&gt;Thunder&lt;/div&gt;
		 
		 		&lt;button onclick="sref()"&gt;ss&lt;/button&gt;
		 	&lt;/body&gt; 
		 &lt;/html&gt;
		 // returns "file:////C:/Windows/Desktop/example.css</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533860%28VS.85%29.aspx"><linktext>MSDN: href Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.href"><linktext>MDC - stylesheet: href Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:media:get"><apiName>media</apiName><shortdesc>
		 Specifies the intended destination medium for style information.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"screen" for Firefox and "all" for Internet Explorer
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Specifies the intended destination medium for style information. 
		 
		 <b>DOM 1 Spec</b>
		 <p>A string describing a single medium or a comma-separated list.</p>
		 
		 <b>DOM Level 2 Style Spec</b>
		 <p>The intended destination media for style information. The media is often specified in the ownerNode. 
		 If no media has been specified, the MediaList will be empty.</p>
		 
		 <p><b>Note:</b> According to DOM Level 2 Style specification, the Media property is supposed to be Read-Only and return an 
		 instance of the MediaList object. Most browsers handle this property as it was specified in DOM Level 1.</p>
		 
		 <p><b>Note:</b> Acceptable values are as listed:</p>
		 <ul>
		 	<li>screen - Intended for non-paged computer screens.</li>
		 	<li>tty - Intended for media using a fixed-pitch character grid, such as teletypes, terminals, or portable devices with limited display capabilities.</li>
		 	<li>tv - Intended for television-type devices (low resolution, color, limited scrollability).</li>
		 	<li>projection - Intended for projectors.</li>
		 	<li>handheld - Intended for handheld devices (small screen, monochrome, bitmapped graphics, limited bandwilih).</li>
		 	<li>print - Intended for paged, opaque material and for documents viewed on screen in print preview mode.</li>
		 	<li>braille - Intended for braille tactile feedback devices.</li>
		 	<li>aural - Intended for speech synthesizers.</li>
		 	<li>all - Suitable for all devices. </li>
		 </ul>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534161%28VS.85%29.aspx"><linktext>MSDN: media Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.media"><linktext>MDC - stylesheet: media Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.w3.org/TR/1998/REC-html40-19980424/types.html#type-media-descriptors"><linktext>W3C - Media descriptors</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:ownerNode:get"><apiName>ownerNode</apiName><shortdesc>
		 The node that associates this style sheet with the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 The node that associates this style sheet with the document. For HTML, this may be the corresponding 
		 LINK or STYLE element. For XML, it may be the linking processing instruction. For style sheets that 
		 are included by other style sheets, the value of this attribute is null.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;link rel="StyleSheet" href="example.css" type="text/css" /&gt;
		 		&lt;script&gt;
		 			function stilo() {
		 				alert(document.styleSheets[0].ownerNode);
		 			}
		 		&lt;/script&gt; 
		 	&lt;/head&gt;
		 
		 	&lt;body&gt; 
		 		&lt;div class="thunder"&gt;Thunder&lt;/div&gt;
		 
		 		&lt;button onclick="sref()"&gt;ss&lt;/button&gt;
		 	&lt;/body&gt; 
		 	// displays "object HTMLLinkElement"
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/stylesheet.ownerNode"><linktext>MDC - stylesheet: ownerNode Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:parentStyleSheet:get"><apiName>parentStyleSheet</apiName><shortdesc>
		 For style sheet languages that support the concept of style sheet inclusion, this attribute represents 
		 the including style sheet, if one exists.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.stylesheets:StyleSheet</apiValueClassifier></apiValueDef><apiDesc>
		 For style sheet languages that support the concept of style sheet inclusion, this attribute represents 
		 the including style sheet, if one exists. If the style sheet is a top-level style sheet, or the style 
		 sheet language does not support inclusion, the value of this attribute is null.
		 
		 </apiDesc><example>
		 <codeblock>
		 // find the top level stylesheet
		 if (stylesheet.parentStyleSheet) {
		 	sheet = stylesheet.parentStyleSheet;
		 } else {
		 	sheet = stylesheet;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534329%28VS.85%29.aspx"><linktext>MSDN: parentStyleSheet Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.parentStyleSheet"><linktext>MDC - stylesheet: parentStyleSheet Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link><link href="http://www.quirksmode.org/dom/w3c_css.html#access"><linktext>Quirksmode: Accessing style sheets</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:title:get"><apiName>title</apiName><shortdesc>
		 The advisory title.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The advisory title.
		 
		 <p><b>Note:</b> The title is often specified in the ownerNode.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534682%28VS.85%29.aspx"><linktext>MSDN: title Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.title"><linktext>MDC - stylesheet: title Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link></related-links></apiValue><apiValue id="dom.style.stylesheets:StyleSheet:type:get"><apiName>type</apiName><shortdesc>
		 This specifies the style sheet language for this style sheet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This specifies the style sheet language for this style sheet. The style sheet language is 
		 specified as a content type. The content type is often specified in the ownerNode.
		 
		 </apiDesc><example>
		 <codeblock>ss.type = "text/css";</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534699%28VS.85%29.aspx"><linktext>MSDN: type Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/stylesheet.type"><linktext>MDC - stylesheet: type Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheet"><linktext>W3C - DOM Level 2 Style: StyleSheet</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.style.stylesheets:StyleSheetList"><apiName>StyleSheetList</apiName><shortdesc>
	 The StyleSheetList interface provides the abstraction of an ordered collection of style sheets.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The StyleSheetList interface provides the abstraction of an ordered collection of style sheets.
	 
	 <p>The items in the StyleSheetList are accessible via an integral index, starting from 0.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList"><linktext>W3C - DOM Level 2 Style: StyleSheetList</linktext></link></related-links><apiOperation id="dom.style.stylesheets:StyleSheetList:item"><apiName>item</apiName><shortdesc>
		 Used to retrieve a style sheet by ordinal index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The style sheet at the index position in the StyleSheetList, or null if that is not a valid index.
		 
		 </apiDesc><apiOperationClassifier>dom.style.stylesheets:StyleSheet</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into the collection
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Used to retrieve a style sheet by ordinal index. If index is greater than or equal to the number 
		 of style sheets in the list, this returns null. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.styleSheets"><linktext>MDC - Document.styleSheets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList-item"><linktext>W3C - DOM Level 2 Style: StyleSheetList.itme()</linktext></link></related-links></apiOperation><apiValue id="dom.style.stylesheets:StyleSheetList:length:get"><apiName>length</apiName><shortdesc>
		 The number of StyleSheets in the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMStyle" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of StyleSheets in the list. The range of valid child stylesheet indices is 0 to length-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.styleSheets"><linktext>MDC - Document.styleSheets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Style/stylesheets.html#StyleSheets-StyleSheetList-length"><linktext>W3C - DOM Level 2 Style: StyleSheetList.length</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.tr.range"><apiName>dom.tr.range</apiName><apiDetail/><apiClassifier id="dom.tr.range:RangeExceptionCode"><apiName>RangeExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#RangeException"><linktext>W3C - DOM Level 2 Range: RangeExceptionCode</linktext></link></related-links><apiValue id="dom.tr.range:RangeExceptionCode:BAD_BOUNDARYPOINTS_ERR"><apiName>BAD_BOUNDARYPOINTS_ERR</apiName><shortdesc>
		 If the boundary-points of a Range do not meet specific requirements.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the boundary-points of a Range do not meet specific requirements.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:RangeExceptionCode:INVALID_NODE_TYPE_ERR"><apiName>INVALID_NODE_TYPE_ERR</apiName><shortdesc>
		 If the container of an boundary-point of a Range is being set to either a node of an invalid type or a node with an ancestor of an invalid type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the container of an boundary-point of a Range is being set to either a node of an invalid type or a node with an ancestor of an invalid type.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.tr.range:Range"><apiName>Range</apiName><shortdesc>
	 The Range object represents a fragment of a document that can contain nodes and parts of text nodes in a given document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>cssom.view:RangeView</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The Range object represents a fragment of a document that can contain nodes and parts of text nodes in a given document. 
	 
	 <p>A range can be created using the createRange method of the Document object. Range objects can also be retrieved by using 
	 the getRangeAt method of the selection object. </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range"><linktext>MDC - range</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-idl"><linktext>W3C - DOM Level 2 Range: Range</linktext></link></related-links><apiOperation id="dom.tr.range:Range:cloneContents"><apiName>cloneContents</apiName><shortdesc>
		 Duplicates the contents of a Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be extracted 
		 into the new DocumentFragment.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A DocumentFragment that contains content equivalent to this Range.
		 
		 </apiDesc><apiOperationClassifier>dom.core:DocumentFragment</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Duplicates the contents of a Range.
		 
		 <p><b>Note:</b> Event Listeners added using DOM Events are not copied during cloning. HTML attribute events 
		 are duplicated as they are for the DOM Core cloneNode method. HTML id attributes are also cloned, which can lead to an 
		 invalid document through cloning.</p>
		 
		 <p><b>Note:</b> Partially selected nodes include the parent tags necessary to make the document fragment valid.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 documentFragment = range.cloneContents();
		 document.body.appendChild(documentFragment);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.cloneContents"><linktext>MDC - range.cloneContents()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-cloneContents"><linktext>W3C - DOM Level 2 Range: Range.cloneContents()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:cloneRange"><apiName>cloneRange</apiName><shortdesc>
		 Produces a new Range whose boundary-points are equal to the boundary-points of the Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The duplicated Range.
		 
		 </apiDesc><apiOperationClassifier>dom.tr.range:Range</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Produces a new Range whose boundary-points are equal to the boundary-points of the Range. 
		 
		 <p><b>Note:</b> clone is copied by value, not reference, so a change in either Range does not effect the other. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 clone = range.cloneRange();</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.cloneRange"><linktext>MDC - range.cloneRange()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-clone"><linktext>W3C - DOM Level 2 Range: Range.cloneRange()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:collapse"><apiName>collapse</apiName><shortdesc>
		 Collapse a Range onto one of its boundary-points 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>toStart</apiItemName><apiType value="Boolean"/><apiDesc>If TRUE, collapses the Range onto its start; if FALSE, collapses it onto its end.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Collapse a Range onto one of its boundary-points 
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 referenceNode = document.getElementsByTagName("div").item(0);
		 range.selectNode(referenceNode);
		 range.collapse(true);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.collapse"><linktext>MDC - range.collapse()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-collapse"><linktext>W3C - DOM Level 2 Range: Range.collapse()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:compareBoundaryPoints"><apiName>compareBoundaryPoints</apiName><shortdesc>
		 Compare the boundary-points of two Ranges in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if the two Ranges are not in the same Document or DocumentFragment.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>-1, 0 or 1 depending on whether the corresponding boundary-point of the Range is 
		 respectively before, equal to, or after the corresponding boundary-point of sourceRange.
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>how</apiItemName><apiType value="Number"/><apiDesc>A code representing the type of comparison, as defined above.
		 </apiDesc></apiParam><apiParam><apiItemName>sourceRange</apiItemName><apiOperationClassifier>dom.tr.range:Range</apiOperationClassifier><apiDesc>The Range on which this current Range is compared to.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Compare the boundary-points of two Ranges in a document. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var range, sourceRange, compare;
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div")[0]);
		 sourceRange = document.createRange();
		 sourceRange.selectNode(document.getElementsByTagName("div")[1]);
		 compare = range.compareBoundaryPoints(Range.START_TO_END, sourceRange);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.compareBoundaryPoints"><linktext>MDC - range.compareBoundaryPoints()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-compareBoundaryPoints"><linktext>W3C - DOM Level 2 Range: Range.compareBoundaryPoints()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:compareNode"><apiName>compareNode</apiName><shortdesc>
		 Returns a constant (see notes).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata><asCustoms><as-of>Gecko 1.9
		 </as-of></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="Number"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 Returns a constant (see notes). 
		 
		 <p><b>Note:</b> This method is obsolete; you should use the W3C DOM Range methods (see compareBoundaryPoints()).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 returnValue = range.compareNode(document.getElementsByTagName("p").item(0));</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.compareNode"><linktext>MDC - range.compareNode()</linktext></link><link href="dom.tr.range.xml#Range/NODE_BEFORE"><linktext>dom.tr.range.Range.NODE_BEFORE</linktext></link><link href="dom.tr.range.xml#Range/NODE_AFTER"><linktext>dom.tr.range.Range.NODE_AFTER</linktext></link><link href="dom.tr.range.xml#Range/NODE_BEFORE_AND_AFTER"><linktext>dom.tr.range.Range.NODE_BEFORE_AND_AFTER</linktext></link><link href="dom.tr.range.xml#Range/NODE_INSIDE"><linktext>dom.tr.range.Range.NODE_INSIDE</linktext></link><link href="dom.tr.range.xml#Range/compareBoundaryPoints()"><linktext>dom.tr.range.Range.compareBoundaryPoints()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:comparePoint"><apiName>comparePoint</apiName><shortdesc>
		 If the referenceNode is a Node of type Text, Comment, or CDATASection, then offset is the number of characters 
		 from the start of referenceNode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns -1, 0, or 1 depending on whether the referenceNode is before, the same as, or after the range. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The Node to compare with the Range. 
		 </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>An integer greater than or equal to zero representing the offset inside the referenceNode. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 If the referenceNode is a Node of type Text, Comment, or CDATASection, then offset is the number of characters 
		 from the start of referenceNode. For other Node types, offset is the number of child nodes between the start of the referenceNode.
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 returnValue = range.comparePoint(document.getElementsByTagName("p").item(0),1);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.comparePoint"><linktext>MDC - range.comparePoint()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:createContextualFragment"><apiName>createContextualFragment</apiName><shortdesc>
		 This method takes a string and uses Mozilla's parser to convert it to a DOM tree.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a document fragment. 
		 
		 </apiDesc><apiOperationClassifier>dom.core:DocumentFragment</apiOperationClassifier></apiReturn><apiParam><apiItemName>tagString</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Text that contains text and tags to be converted to a document fragment. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method takes a string and uses Mozilla's parser to convert it to a DOM tree.
		 
		 </apiDesc><example>
		 <codeblock>
		 var tagString = "&lt;div&gt;I am a div node&lt;/div&gt;";
		 var range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 var documentFragment = range.createContextualFragment(tagString);
		 document.body.appendChild(documentFragment);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.createContextualFragment"><linktext>MDC - range.createContextualFragment()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:deleteContents"><apiName>deleteContents</apiName><shortdesc>
		 Removes the contents of a Range from the containing document or document fragment without returning a reference 
		 to the removed content.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of the Range is 
		 read-only or any of the nodes that contain any of the content of the Range are read-only.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes the contents of a Range from the containing document or document fragment without returning a reference 
		 to the removed content. 
		 
		 <p><b>Note:</b> Unlike extractContents, this method does not return a documentFragment containing the deleted content. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 range.deleteContents();</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.deleteContents"><linktext>MDC - range.deleteContents()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-deleteContents"><linktext>W3C - DOM Level 2 Range: Range.deleteContents()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:detach"><apiName>detach</apiName><shortdesc>
		 Called to indicate that the Range is no longer in use and that the implementation may relinquish any resources 
		 associated with this Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Called to indicate that the Range is no longer in use and that the implementation may relinquish any resources 
		 associated with this Range. Subsequent calls to any methods or attribute getters on this Range will result in 
		 a DOMException being thrown with an error code of INVALID_STATE_ERR. 
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 range.detach();</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.detach"><linktext>MDC - range.detach()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-detach"><linktext>W3C - DOM Level 2 Range: Range.detach()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:extractContents"><apiName>extractContents</apiName><shortdesc>
		 Moves the contents of a Range from the containing document or document fragment to a new DocumentFragment.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if any portion of the content of the Range is 
		 read-only or any of the nodes which contain any of the content of the Range are read-only.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if a DocumentType node would be extracted into the 
		 new DocumentFragment.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A DocumentFragment containing the extracted contents.
		 
		 </apiDesc><apiOperationClassifier>dom.core:DocumentFragment</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Moves the contents of a Range from the containing document or document fragment to a new DocumentFragment. 
		 
		 <p><b>Note:</b> Event Listeners added using DOM Events are not retained during extraction. HTML 
		 attribute events are retained or duplicated as they are for the DOM Core cloneNode method. HTML id attributes 
		 are also cloned, which can lead to an invalid document if a partially-selected node is extracted and appened 
		 to the document. </p>
		 
		 <p><b>Note:</b> Partially selected nodes are cloned to include the parent tags necessary to make the document fragment valid. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 documentFragment = range.extractContents();
		 document.body.appendChild(documentFragment);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.extractContents"><linktext>MDC - range.extractContents()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-extractContents"><linktext>W3C - DOM Level 2 Range: Range.extractContents()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:getBoundingClientRect"><apiName>getBoundingClientRect</apiName><shortdesc>
		 
		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.1b_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMTR 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The returned value is a TextRectangle object which is the union 
		 of the rectangles returned by getClientRects() for the element, i.e., 
		 the CSS border-boxes associated with the element.
		 
		 </apiDesc><apiOperationClassifier>cssom.view:TextRectangle</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 
		 Retrieves an object that specifies the bounds of a collection of TextRectangle objects.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#rangeview-getboundingclientrect"><linktext>W3C - CSSOM View: RangeView.getBoundingClientRect()</linktext></link><link href="cssom.view.xml#ElementView/getBoundingClientRect()"><linktext>ElementView.getBoundingClientRect()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:getClientRects"><apiName>getClientRects</apiName><shortdesc>
		 
		 Retrieves a collection of rectangles that describes the layout of the 
		 contents of an object or range within the client.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="CSSOMView" version="0"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.1b_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMTR 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>cssom.view:TextRectangleList</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 
		 Retrieves a collection of rectangles that describes the layout of the 
		 contents of an object or range within the client. Each rectangle 
		 describes a single line.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#rangeview-getclientrects"><linktext>W3C - CSSOM View: RangeView.getClientRects()</linktext></link><link href="cssom.view.xml#ElementView/getClientRects()"><linktext>ElementView.getClientRects()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:insertNode"><apiName>insertNode</apiName><shortdesc>
		 Inserts a node into the Document or DocumentFragment at the start of the Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of the start of the Range is read-only.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if newNode and the container of the start of the Range were not created from the same document.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if the container of the start of the Range is of a type that does not allow children of the type of newNode or if newNode is an ancestor of the container.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if newNode is an Attr, Entity, Notation, or Document node.
		 
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to insert at the start of the Range
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Inserts a node into the Document or DocumentFragment at the start of the Range.
		 
		 <p>If the container is a 
		 Text node, this will be split at the start of the Range (as if the Text node's splitText method was 
		 performed at the insertion point) and the insertion will occur between the two resulting Text nodes. 
		 Adjacent Text nodes will not be automatically merged. If the node to be inserted is a DocumentFragment 
		 node, the children will be inserted rather than the DocumentFragment node itself. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 newNode = document.createElement("p");
		 newNode.appendChild(document.createTextNode("New Node Inserted Here"));
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 range.insertNode(newNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.insertNode"><linktext>MDC - range.insertNode()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-insertNode"><linktext>W3C - DOM Level 2 Range: Range.insertNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:intersectsNode"><apiName>intersectsNode</apiName><shortdesc>
		 Returns a boolean indicating whether the given node intersects the range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a boolean indicating whether the given node intersects the range. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The Node to compare with the Range. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a boolean indicating whether the given node intersects the range. 
		 
		 <p><b>Note:</b> This method is obsolete; you should instead use the W3C DOM Range methods (see compareBoundaryPoints()).</p>
		 
		 <p><b>Warning:</b> This method has been removed from Gecko 1.9 and will not exist in future versions of Firefox; you should switch to compareBoundaryPoints() as soon as possible.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 bool = range.intersectsNode(document.getElementsByTagName("p").item(0));</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.intersectsNode"><linktext>MDC - range.intersectsNode()</linktext></link><link href="dom.tr.range.xml#Range/compareBoundaryPoints()"><linktext>dom.tr.range.Range.compareBoundaryPoints()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:isPointInRange"><apiName>isPointInRange</apiName><shortdesc>
		 Returns true if the point (cursor position) at offset within ReferenceNode is within this range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a boolean indicating whether the given point is in the range. 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The Node to compare with the Range. 
		 </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>The offset into Node of the point to compare with the Range. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns true if the point (cursor position) at offset within ReferenceNode is within this range.
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 bool = range.isPointInRange(document.getElementsByTagName("p").item(0),1);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.isPointInRange"><linktext>MDC - range.isPointInRange()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:selectNode"><apiName>selectNode</apiName><shortdesc>
		 Select a node and its contents 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if an ancestor of refNode is an Entity, Notation or DocumentType node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to select.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Select a node and its contents 
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 referenceNode = document.getElementsByTagName("div").item(0);
		 range.selectNode(referenceNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.selectNode"><linktext>MDC - range.selectNode()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-selectNode"><linktext>W3C - DOM Level 2 Range: Range.selectNode()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:selectNodeContents"><apiName>selectNodeContents</apiName><shortdesc>
		 Select the contents within a node 
		 
		 Note: The parent Node of the start and end of the Range will be the referenceNode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if refNode or an ancestor of refNode is an Entity, Notation or DocumentType node.
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Node to select from
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Select the contents within a node 
		 
		 <p><b>Note:</b> The parent Node of the start and end of the Range will be the referenceNode. The startOffset is 0, and the endOffset is the number of child Nodes or number of characters contained in the reference node. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 referenceNode = document.getElementsByTagName("div")[0];
		 range.selectNodeContents(referenceNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.selectNodeContents"><linktext>MDC - range.selectNodeContents()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-selectNodeContents"><linktext>W3C - DOM Level 2 Range: Range.selectNodeContents()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:setEnd"><apiName>setEnd</apiName><shortdesc>
		 Sets the attributes describing the end of a Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if refNode or an ancestor of refNode is an Entity, Notation, or DocumentType node.
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiException><apiDesc>INDEX_SIZE_ERR: Raised if offset is negative or greater than the number of child units in refNode. Child units are 16-bit units if refNode is a type of CharacterData node (e.g., a Text or Comment node) or a ProcessingInstruction node. Child units are Nodes in all other cases.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The refNode value. This parameter must be different from null.
		 </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>The endOffset value.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the attributes describing the end of a Range. 
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 endNode = document.getElementsByTagName("p").item(3);
		 endOffset = document.getElementsByTagName("p").item(3).childNodes.length;
		 range.setEnd(endNode,endOffset);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.setEnd"><linktext>MDC - range.setEnd()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-setEnd"><linktext>W3C - DOM Level 2 Range: Range.setEnd()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:setEndAfter"><apiName>setEndAfter</apiName><shortdesc>
		 Sets the end of a Range to be after a node 
		 
		 Note: The parent Node of end of the Range will be the same as that for the referenceNode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if the root container of refNode is not an Attr, Document or DocumentFragment node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Range ends after refNode.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the end of a Range to be after a node 
		 
		 <p><b>Note:</b> The parent Node of end of the Range will be the same as that for the referenceNode. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 referenceNode = document.getElementsByTagName("div").item(0);
		 range.setEndAfter(referenceNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.setEndAfter"><linktext>MDC - range.setEndAfter()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-setEndAfter"><linktext>W3C - DOM Level 2 Range: Range.setEndAfter()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:setEndBefore"><apiName>setEndBefore</apiName><shortdesc>
		 Sets the end position to be before a node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if the root container of refNode is not an Attr, Document, or DocumentFragment node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Range ends before refNode
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the end position to be before a node. 
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 referenceNode = document.getElementsByTagName("div").item(0);
		 range.setEndBefore(referenceNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.setEndBefore"><linktext>MDC - range.setEndBefore()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-setEndBefore"><linktext>W3C - DOM Level 2 Range: Range.setEndBefore()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:setStart"><apiName>setStart</apiName><shortdesc>
		 Sets the attributes describing the start of the Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if refNode or an ancestor of refNode is an Entity, Notation, or DocumentType node.
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiException><apiDesc>INDEX_SIZE_ERR: Raised if offset is negative or greater than the number of child units in refNode. Child units are 16-bit units if refNode is a type of CharacterData node (e.g., a Text or Comment node) or a ProcessingInstruction node. Child units are Nodes in all other cases.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The refNode value. This parameter must be different from null.
		 </apiDesc></apiParam><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>The startOffset value.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the attributes describing the start of the Range. 
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 startNode = document.getElementsByTagName("p").item(2);
		 startOffset = 0;
		 range.setStart(startNode,startOffset);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.setStart"><linktext>MDC - range.setStart()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-setStart"><linktext>W3C - DOM Level 2 Range: Range.setStart()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:setStartAfter"><apiName>setStartAfter</apiName><shortdesc>
		 Sets the start position to be after a node 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if the root container of refNode is not an Attr, Document, or DocumentFragment node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Range starts after refNode
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the start position to be after a node 
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 referenceNode = document.getElementsByTagName("div").item(0);
		 range.setStartAfter(referenceNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.setStartAfter"><linktext>MDC - range.setStartAfter()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-setStartAfter"><linktext>W3C - DOM Level 2 Range: Range.setStartAfter()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:setStartBefore"><apiName>setStartBefore</apiName><shortdesc>
		 Sets the start position to be before a node 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if the root container of refNode is not an Attr, Document, or DocumentFragment node or if refNode is a Document, DocumentFragment, Attr, Entity, or Notation node.
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>refNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Range starts before refNode
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Sets the start position to be before a node 
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 referenceNode = document.getElementsByTagName("div").item(0);
		 range.setStartBefore(referenceNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.setStartBefore"><linktext>MDC - range.setStartBefore()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-setStartBefore"><linktext>W3C - DOM Level 2 Range: Range.setStartBefore()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:surroundContents"><apiName>surroundContents</apiName><shortdesc>
		 Reparents the contents of the Range to the given node and inserts the node at the position of the start of the Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NO_MODIFICATION_ALLOWED_ERR: Raised if an ancestor container of either boundary-point of the Range is read-only.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>WRONG_DOCUMENT_ERR: Raised if newParent and the container of the start of the Range were not created from the same document.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>HIERARCHY_REQUEST_ERR: Raised if the container of the start of the Range is of a type that does not allow children of the type of newParent or if newParent is an ancestor of the container or if node would end up with a child node of a type not allowed by the type of node.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>BAD_BOUNDARYPOINTS_ERR: Raised if the Range partially selects a non-text node.
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_NODE_TYPE_ERR: Raised if node is an Attr, Entity, DocumentType, Notation, Document, or DocumentFragment node.
		 
		 </apiDesc><apiItemName>RangeException</apiItemName><apiOperationClassifier>dom.tr.range:RangeException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>newParent</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to surround the contents with.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Reparents the contents of the Range to the given node and inserts the node at the position of the start of the Range. 
		 
		 <p><b>Note:</b> surroundContents is equivalent to newNode.appendChild(range.extractContents()); range.insertNode(newNode). After surrounding, the boundary points of the range include newNode.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var range = document.createRange();
		 var newNode = document.createElement("p");
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 range.surroundContents(newNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.surroundContents"><linktext>MDC - range.surroundContents()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-surroundContents"><linktext>W3C - DOM Level 2 Range: Range.surroundContents()</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.range:Range:toString"><apiName>toString</apiName><shortdesc>
		 Returns the contents of a Range as a string.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The contents of the Range.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Returns the contents of a Range as a string. This string contains only the data characters, not any markup. 
		 
		 <p><b>Note:</b> Alerting the contents of a Range makes an implicit toString() call, so comparing range and text through an alert dialog is ineffective </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.selectNode(document.getElementsByTagName("div").item(0));
		 text = range.toString();</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.toString"><linktext>MDC - range.toString()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level2-Range-method-toString"><linktext>W3C - DOM Level 2 Range: Range.toString()</linktext></link></related-links></apiOperation><apiValue id="dom.tr.range:Range:END_TO_END"><apiName>END_TO_END</apiName><shortdesc>
		 Compare end boundary-point of sourceRange to end boundary-point of Range on which 
		 compareBoundaryPoints is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Compare end boundary-point of sourceRange to end boundary-point of Range on which 
		 compareBoundaryPoints is invoked.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:Range:END_TO_START"><apiName>END_TO_START</apiName><shortdesc>
		 Compare end boundary-point of sourceRange to start boundary-point of Range on which 
		 compareBoundaryPoints is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Compare end boundary-point of sourceRange to start boundary-point of Range on which 
		 compareBoundaryPoints is invoked.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:Range:NODE_AFTER"><apiName>NODE_AFTER</apiName><shortdesc>
		 Node ends after the Range 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Node ends after the Range 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.tr.range.xml#Range/compareNode()"><linktext>dom.tr.range.Range.compareNode()</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:NODE_BEFORE"><apiName>NODE_BEFORE</apiName><shortdesc>
		 Node starts before the Range 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Node starts before the Range 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.tr.range.xml#Range/compareNode()"><linktext>dom.tr.range.Range.compareNode()</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:NODE_BEFORE_AND_AFTER"><apiName>NODE_BEFORE_AND_AFTER</apiName><shortdesc>
		 Node starts before and ends after the Range 
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Node starts before and ends after the Range 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.tr.range.xml#Range/compareNode()"><linktext>dom.tr.range.Range.compareNode()</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:NODE_INSIDE"><apiName>NODE_INSIDE</apiName><shortdesc>
		 Node starts after and ends before the Range, i.e.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata><asCustoms><as-of>Gecko 1.9
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Node starts after and ends before the Range, i.e. the Node is completely selected by the Range. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.tr.range.xml#Range/compareNode()"><linktext>dom.tr.range.Range.compareNode()</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:START_TO_END"><apiName>START_TO_END</apiName><shortdesc>
		 Compare start boundary-point of sourceRange to end boundary-point of Range on which 
		 compareBoundaryPoints is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Compare start boundary-point of sourceRange to end boundary-point of Range on which 
		 compareBoundaryPoints is invoked.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:Range:START_TO_START"><apiName>START_TO_START</apiName><shortdesc>
		 Compare start boundary-point of sourceRange to start boundary-point of Range on which 
		 compareBoundaryPoints is invoked.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Compare start boundary-point of sourceRange to start boundary-point of Range on which 
		 compareBoundaryPoints is invoked.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.range:Range:collapsed:get"><apiName>collapsed</apiName><shortdesc>
		 Returns a boolean of true if the start and end boundary points of the Range are the same point in the DOM, false if not.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Returns a boolean of true if the start and end boundary points of the Range are the same point in the DOM, false if not.
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode, startOffset); 
		 range.setEnd(endNode, endOffset);
		 isCollapsed = range.collapsed;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.collapsed"><linktext>MDC - range.collapsed</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-collapsed"><linktext>W3C - DOM Level 2 Range: Range.collapsed</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:commonAncestorContainer:get"><apiName>commonAncestorContainer</apiName><shortdesc>
		 The deepest common ancestor container of the Range's two boundary-points.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The deepest common ancestor container of the Range's two boundary-points.
		 
		 <p><b>Note:</b> Returns the deepest, or further down the document tree, Node that contains both the startContainer and 
		 endContainer nodes. Since a Range need not be continuous, and may also partially select Nodes, this is a convenient way to find 
		 a Node which encloses a Range. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset);
		 range.setEnd(endNode,endOffset);
		 rangeAncestor = range.commonAncestorContainer;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.commonAncestorContainer"><linktext>MDC - range.commonAncestorContainer</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-commonParent"><linktext>W3C - DOM Level 2 Range: Range.commonAncestorContainer</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:endContainer:get"><apiName>endContainer</apiName><shortdesc>
		 Node within which the Range ends
		 
		 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Node within which the Range ends
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset); 
		 range.setEnd(endNode,endOffset);
		 endRangeNode = range.endContainer;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.endContainer"><linktext>MDC - range.endContainer</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-endParent"><linktext>W3C - DOM Level 2 Range: Range.endContainer</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:endOffset:get"><apiName>endOffset</apiName><shortdesc>
		 Offset within the ending node of the Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Offset within the ending node of the Range.
		 
		 <p><b>Note:</b> endOffset has two meanings. If the endContainer is a Node of type Text, Comment, or CDATASection, 
		 then the offset is the number of characters from the start of the endContainer to the boundary point of the Range. For other 
		 Node types, the endOffset is the number of child nodes between the start of the endContainer and the boundary point of the Range.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset);
		 range.setEnd(endNode,endOffset);
		 endRangeOffset = range.endOffset;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.endOffset"><linktext>MDC - range.endOffset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-endOffset"><linktext>W3C - DOM Level 2 Range: Range.endOffset</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:startContainer:get"><apiName>startContainer</apiName><shortdesc>
		 Node within which the Range begins.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Node within which the Range begins.
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset);
		 range.setEnd(endNode,endOffset);
		 startRangeNode = range.startContainer;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.startContainer"><linktext>MDC - range.startContainer</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-startParent"><linktext>W3C - DOM Level 2 Range: Range.startContainer</linktext></link></related-links></apiValue><apiValue id="dom.tr.range:Range:startOffset:get"><apiName>startOffset</apiName><shortdesc>
		 Offset within the starting node of the Range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if detach() has already been invoked on this object.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Offset within the starting node of the Range.
		 
		 </apiDesc><example>
		 <codeblock>
		 range = document.createRange();
		 range.setStart(startNode,startOffset);
		 range.setEnd(endNode,endOffset);
		 startRangeOffset = range.startOffset;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/range.startOffset"><linktext>MDC - range.startOffset</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-Range-attr-startOffset"><linktext>W3C - DOM Level 2 Range: Range.startOffset</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.tr.range:RangeException"><apiName>RangeException</apiName><shortdesc>
	 Range operations may throw a RangeException as specified in their method descriptions.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Range operations may throw a RangeException as specified in their method descriptions.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#RangeException"><linktext>W3C - DOM Level 2 Range: RangeException</linktext></link></related-links><apiValue id="dom.tr.range:RangeException:code:get"><apiName>code</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.tr.range:DocumentRange"><apiName>DocumentRange</apiName><shortdesc>
	 Contains a method to create a range object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Contains a method to create a range object.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document"><linktext>MDC - Document</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-DocumentRange-idl"><linktext>W3C - DOM Level 2 Range: DocumentRange</linktext></link></related-links><apiOperation id="dom.tr.range:DocumentRange:dom.tr.range:DocumentRange:createRange"><apiName>createRange</apiName><shortdesc>
		 This interface can be obtained from the object implementing the Document interface using binding-specific 
		 casting methods.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The initial state of the Range returned from this method is such that both of its boundary-points 
		 are positioned at the beginning of the corresponding Document, before any content. The Range returned can 
		 only be used to select content associated with this Document, or with DocumentFragments and Attrs for which 
		 this Document is the ownerDocument.
		 
		 </apiDesc><apiOperationClassifier>dom.tr.range:Range</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 This interface can be obtained from the object implementing the Document interface using binding-specific 
		 casting methods. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var range = document.createRange();
		 range.setStart(startNode, startOffset);
		 range.setEnd(endNode, endOffset);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536394%28VS.85%29.aspx"><linktext>MSDN: createRange Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.createRange"><linktext>MDC - Document: createRange Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/ranges.html#Level-2-DocumentRange-idl"><linktext>W3C - DOM Level 2 Range: DocumentRange</linktext></link></related-links></apiOperation></apiClassifier></apiPackage><apiPackage id="dom.tr.traversal"><apiName>dom.tr.traversal</apiName><apiDetail/><apiClassifier id="dom.tr.traversal:DocumentTraversal"><apiName>DocumentTraversal</apiName><shortdesc>
	 Contains methods that create iterators and tree-walkers to traverse a node and its children in document order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Contains methods that create iterators and tree-walkers to traverse a node and its children in document order.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document"><linktext>MDC - Document</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document"><linktext>W3C - DOM Level 2 Traversal: DocumentTraversal</linktext></link></related-links><apiOperation id="dom.tr.traversal:DocumentTraversal:dom.tr.traversal:DocumentTraversal:createNodeIterator"><apiName>createNodeIterator</apiName><shortdesc>
		 Create a new NodeIterator over the subtree rooted at the specified node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the specified <codeph>root</codeph> is <codeph>null</codeph>.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created NodeIterator.
		 
		 </apiDesc><apiOperationClassifier>dom.tr.traversal:NodeIterator</apiOperationClassifier></apiReturn><apiParam><apiItemName>root</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node which will be iterated together with its children. The iterator is initially positioned 
		 just before this node. The <codeph>whatToShow</codeph> flags and the filter, if any, are not considered when setting this position. The <codeph>root</codeph> must not be <codeph>null</codeph>.
		 </apiDesc></apiParam><apiParam><apiItemName>whatToShow</apiItemName><apiType value="Number"/><apiDesc>This flag specifies which node types may appear in the logical view of the tree presented 
		 by the iterator. These flags can be combined using OR.
		 </apiDesc></apiParam><apiParam><apiItemName>filter</apiItemName><apiOperationClassifier>dom.tr.traversal:NodeFilter</apiOperationClassifier><apiDesc>The <codeph>NodeFilter</codeph> to be used with this <codeph>TreeWalker</codeph>, or <codeph>null</codeph> to indicate no filter.
		 </apiDesc></apiParam><apiParam><apiItemName>entityReferenceExpansion</apiItemName><apiType value="Boolean"/><apiDesc>The value of this flag determines whether entity reference nodes are expanded.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Create a new NodeIterator over the subtree rooted at the specified node. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 var nodeList = new Array();
		 var currentNode;
		 
		 while (currentNode = nodeIterator.nextNode()) {
		 	nodeList.push(currentNode);
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document.createNodeIterator"><linktext>MDC - Document: createNodeIterator Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document"><linktext>W3C - DOM Level 2 Traversal: createNodeIterator Method</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.traversal:DocumentTraversal:dom.tr.traversal:DocumentTraversal:createTreeWalker"><apiName>createTreeWalker</apiName><shortdesc>
		 Create a new TreeWalker over the subtree rooted at the specified node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the specified <codeph>root</codeph> is <codeph>null</codeph>.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created <codeph>TreeWalker</codeph>.
		 
		 </apiDesc><apiOperationClassifier>dom.tr.traversal:TreeWalker</apiOperationClassifier></apiReturn><apiParam><apiItemName>root</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node which will serve as the <codeph>root</codeph> for the TreeWalker. The whatToShow flags and the NodeFilter 
		 are not considered when setting this value; any node type will be accepted as the <codeph>root</codeph>. The <codeph>currentNode</codeph> of the 
		 TreeWalker is initialized to this node, whether or not it is visible. The <codeph>root</codeph> functions as a stopping point for 
		 traversal methods that look upward in the document structure, such as <codeph>parentNode</codeph> and nextNode. The <codeph>root</codeph> must not 
		 be <codeph>null</codeph>.
		 </apiDesc></apiParam><apiParam><apiItemName>whatToShow</apiItemName><apiType value="Number"/><apiDesc>This flag specifies which node types may appear in the logical view of the tree presented by 
		 the tree-walker. These flags can be combined using OR.
		 </apiDesc></apiParam><apiParam><apiItemName>filter</apiItemName><apiOperationClassifier>dom.tr.traversal:NodeFilter</apiOperationClassifier><apiDesc>The <codeph>NodeFilter</codeph> to be used with this <codeph>TreeWalker</codeph>, or <codeph>null</codeph> to indicate no filter.
		 </apiDesc></apiParam><apiParam><apiItemName>entityReferenceExpansion</apiItemName><apiType value="Boolean"/><apiDesc>If this flag is false, the contents of <codeph>EntityReference</codeph> nodes are not presented in the logical view.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Create a new TreeWalker over the subtree rooted at the specified node. 
		 
		 </apiDesc><example>
		 <codeblock>
		 var treeWalker = document.createTreeWalker(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 var nodeList = new Array();
		 while(treeWalker.nextNode()) nodeList.push(treeWalker.currentNode);</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Document.createNodeIterator"><linktext>MDC - Document: createNodeIterator Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-Document"><linktext>W3C - DOM Level 2 Traversal: createNodeIterator Method</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.tr.traversal:TreeWalker"><apiName>TreeWalker</apiName><shortdesc>
	 Represents the nodes of a document subtree and a position within them.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Represents the nodes of a document subtree and a position within them.
	 
	 <p>A <codeph>TreeWalker</codeph> can be created using the createTreeWalker()<codeph/> method of the <codeph>Document</codeph> object.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker"><linktext>MDC - treeWalker</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: TreeWalker</linktext></link><link href="dom.core.xml#Document/createTreeWalker()"><linktext>dom.core.Document.createTreeWalker()</linktext></link></related-links><apiOperation id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:firstChild"><apiName>firstChild</apiName><shortdesc>
		 Moves the TreeWalker to the first visible child of the current node, and returns the new node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The new node, or <codeph>null</codeph> if the current node has no visible children in the <codeph>TreeWalker</codeph>'s logical view.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Moves the <codeph>TreeWalker</codeph> to the first visible child of the current node, and returns the new node. If the current 
		 node has no visible children, returns <codeph>null</codeph>, and retains the current node. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.firstChild"><linktext>MDC - treeWalker: firstChild Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: firstChild Method</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:lastChild"><apiName>lastChild</apiName><shortdesc>
		 Moves the TreeWalker to the last visible child of the current node, and returns the new node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The new node, or <codeph>null</codeph> if the current node has no children in the <codeph>TreeWalker</codeph>'s logical view.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Moves the <codeph>TreeWalker</codeph> to the last visible child of the current node, and returns the new node. If the current 
		 node has no visible children, returns <codeph>null</codeph>, and retains the current node. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.lastChild"><linktext>MDC - treeWalker: lastChild Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: lastChild Method</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:nextNode"><apiName>nextNode</apiName><shortdesc>
		 Moves the TreeWalker to the next visible node in document order relative to the current node, and returns the 
		 new node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The new node, or <codeph>null</codeph> if the current node has no next node in the <codeph>TreeWalker</codeph>'s logical view.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Moves the <codeph>TreeWalker</codeph> to the next visible node in document order relative to the current node, and returns the 
		 new node. If the current node has no next node, or if the search for nextNode attempts to step upward from the 
		 <codeph>TreeWalker</codeph>'s root node, returns <codeph>null</codeph>, and retains the current node. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.nextNode"><linktext>MDC - treeWalker: nextNode Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: nextNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:nextSibling"><apiName>nextSibling</apiName><shortdesc>
		 Moves the TreeWalker to the next sibling of the current node, and returns the new node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The new node, or <codeph>null</codeph> if the current node has no next sibling. in the <codeph>TreeWalker</codeph>'s logical view.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Moves the <codeph>TreeWalker</codeph> to the next sibling of the current node, and returns the new node. If the current node has 
		 no visible next sibling, returns <codeph>null</codeph>, and retains the current node. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.nextSibling"><linktext>MDC - treeWalker: nextSibling Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: nextSibling Method</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:parentNode"><apiName>parentNode</apiName><shortdesc>
		 Moves to and returns the closest visible ancestor node of the current node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The new parent node, or <codeph>null</codeph> if the current node has no parent in the <codeph>TreeWalker</codeph>'s logical view.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Moves to and returns the closest visible ancestor node of the current node. If the search for <codeph>parentNode</codeph> attempts 
		 to step upward from the <codeph>TreeWalker</codeph>'s root node, or if it fails to find a visible ancestor node, this method 
		 retains the current position and returns <codeph>null</codeph>. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.currentNode"><linktext>MDC - treeWalker: parentNode Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: parentNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:previousNode"><apiName>previousNode</apiName><shortdesc>
		 Moves the TreeWalker to the previous visible node in document order relative to the current node, and returns the 
		 new node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The new node, or <codeph>null</codeph> if the current node has no previous node in the <codeph>TreeWalker</codeph>'s logical view.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Moves the <codeph>TreeWalker</codeph> to the previous visible node in document order relative to the current node, and returns the 
		 new node. If the current node has no previous node, or if the search for previousNode attempts to step upward from 
		 the <codeph>TreeWalker</codeph>'s root node, returns <codeph>null</codeph>, and retains the current node. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.previousNode"><linktext>MDC - treeWalker: previousNode Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: previousNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:previousSibling"><apiName>previousSibling</apiName><shortdesc>
		 Moves the TreeWalker to the previous sibling of the current node, and returns the new node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The new node, or <codeph>null</codeph> if the current node has no previous sibling. in the <codeph>TreeWalker</codeph>'s logical view.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Moves the <codeph>TreeWalker</codeph> to the previous sibling of the current node, and returns the new node. If the current node has 
		 no visible previous sibling, returns <codeph>null</codeph>, and retains the current node. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.previousSibling"><linktext>MDC - treeWalker: previousSibling Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: previousSibling Method</linktext></link></related-links></apiOperation><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:currentNode:get"><apiName>currentNode</apiName><shortdesc>
		 The node at which the TreeWalker is currently positioned.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if an attempt is made to set currentNode to <codeph>null</codeph>.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The node at which the <codeph>TreeWalker</codeph> is currently positioned.
		 
		 <p>Alterations to the DOM tree may cause the current node to no longer be accepted by the <codeph>TreeWalker</codeph>'s 
		 associated filter. currentNode may also be explicitly set to any node, whether or not it is within the 
		 subtree specified by the root node or would be accepted by the filter and <codeph>whatToShow</codeph> flags. Further 
		 traversal occurs relative to currentNode even if it is not part of the current view, by applying the 
		 filters in the requested direction; if no traversal is possible, currentNode is not changed.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.currentNode"><linktext>MDC - treeWalker: currentNode Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: currentNode Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:expandEntityReferences:get"><apiName>expandEntityReferences</apiName><shortdesc>
		 The value of this flag determines whether the children of entity reference nodes are visible to the TreeWalker.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The value of this flag determines whether the children of entity reference nodes are visible to the <codeph>TreeWalker</codeph>. 
		 If false, they and their descendants will be rejected. Note that this rejection takes precedence over <codeph>whatToShow</codeph> 
		 and the filter, if any.
		 
		 <p>To produce a view of the document that has entity references expanded and does not expose the entity reference 
		 node itself, use the <codeph>whatToShow</codeph> flags to hide the entity reference node and set <codeph>expandEntityReferences</codeph> to true 
		 when creating the <codeph>TreeWalker</codeph>. To produce a view of the document that has entity reference nodes but no entity 
		 expansion, use the <codeph>whatToShow</codeph> flags to show the entity reference node and set <codeph>expandEntityReferences</codeph> to false.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.ExpandEntityReferences"><linktext>MDC - treeWalker: ExpandEntityReferences Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: ExpandEntityReferences Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:filter:get"><apiName>filter</apiName><shortdesc>
		 The filter used to screen nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.tr.traversal:NodeFilter</apiValueClassifier></apiValueDef><apiDesc>
		 The filter used to screen nodes.
		 
		 <p>Note: When creating the TreeWalker, the filter object is passed in as the third parameter, and the object 
		 method acceptNode(node) is called on every single node to determine whether or not to accept it. This function 
		 should return the constant NodeFilter.FILTER_ACCEPT for cases when the node should be accepted and 
		 NodeFilter.FILTER_REJECT for cases when the node should be rejected.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var treeWalker = document.createTreeWalker(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 nodeFilter = treeWalker.filter; // document.body in this case</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.filter"><linktext>MDC - treeWalker: filter Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: filter Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:root:get"><apiName>root</apiName><shortdesc>
		 The root node of the TreeWalker, as specified when it was created.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 The root node of the <codeph>TreeWalker</codeph>, as specified when it was created.
		 
		 </apiDesc><example>
		 <codeblock>
		 var treeWalker = document.createTreeWalker(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 root = treeWalker.root; // document.body in this case</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/treeWalker.root"><linktext>MDC - treeWalker: root Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: root Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:TreeWalker:dom.tr.traversal:TreeWalker:whatToShow:get"><apiName>whatToShow</apiName><shortdesc>
		 This attribute determines which node types are presented via the TreeWalker.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 This attribute determines which node types are presented via the <codeph>TreeWalker</codeph>. The available set of constants is 
		 defined in the NodeFilter interface. Nodes not accepted by <codeph>whatToShow</codeph> will be skipped, but their children may 
		 still be considered. Note that this skip takes precedence over the filter, if any.
		 
		 </apiDesc><example>
		 <codeblock>
		 var treeWalker = document.createTreeWalker(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 if((treeWalker.whatToShow == NodeFilter.SHOW_ALL) || 
		 	(treeWalker.whatToShow % (NodeFilter.SHOW_COMMENT)) &gt;= NodeFilter.SHOW_COMMENT) {
		 	// treeWalker will show comments
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="dom.tr.traversal.xml#NodeFilter"><linktext>NodeFilter</linktext></link><link href="http://developer.mozilla.org/en/DOM/treeWalker.whatToShow"><linktext>MDC - treeWalker: whatToShow Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: whatToShow Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.tr.traversal:NodeIterator"><apiName>NodeIterator</apiName><shortdesc>
	 Allows you to iterate over the members of a list of the nodes in a subtree of the DOM, in document order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Allows you to iterate over the members of a list of the nodes in a subtree of the DOM, in document order.
	 
	 A <codeph>NodeIterator</codeph> can be created using the createNodeIterator()<codeph/> method of the <codeph>Document</codeph> object, as follows:
	 
	 <codeblock>var nodeIterator = document.createNodeIterator();</codeblock>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator"><linktext>MDC - NodeIterator</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-TreeWalker"><linktext>W3C - DOM Level 2 Traversal: NodeIterator</linktext></link></related-links><apiOperation id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:detach"><apiName>detach</apiName><shortdesc>
		 Detaches the NodeIterator from the set over which it iterates, releasing any resources used by the set 
		 and setting the iterator's state to INVALID.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Detaches the NodeIterator from the set over which it iterates, releasing any resources used by the set 
		 and setting the iterator's state to INVALID.
		 
		 <p>Once this method has been called, calls to other methods on NodeIterator will raise the 
		 INVALID_STATE_ERR exception.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 nodeIterator.detach(); // detaches the iterator
		 
		 nodeIterator.nextNode(); // throws an INVALID_STATE_ERR exception</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.detach"><linktext>MDC - NodeIterator: detach Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: detach Method</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:nextNode"><apiName>nextNode</apiName><shortdesc>
		 Returns the next node in the set represented by the NodeIterator and advances the position of the iterator within the set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if this method is called after the detach method was invoked.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The next Node in the set being iterated over, or null if there are no more members in that set.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Returns the next node in the set represented by the NodeIterator and advances the position of the iterator within the set.  The first call to nextNode() returns the first node in the set.
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 currentNode = nodeIterator.nextNode(); // returns the next node</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.nextNode"><linktext>MDC - NodeIterator: nextNode Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: nextNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:previousNode"><apiName>previousNode</apiName><shortdesc>
		 Returns the previous node in the set and moves the position of the NodeIterator backwards in the set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_STATE_ERR: Raised if this method is called after the detach method was invoked.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The previous Node in the set being iterated over, or null if there are no more members in that set.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Returns the previous node in the set and moves the position of the NodeIterator backwards in the set.
		 
		 <p>This method returns null when the current node is the first node in the set.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 currentNode = nodeIterator.nextNode(); // returns the next node
		 previousNode = nodeIterator.previousNode(); // same result, since we backtracked to the previous node</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.previousNode"><linktext>MDC - NodeIterator: previousNode Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: previousNode Method</linktext></link></related-links></apiOperation><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:expandEntityReferences:get"><apiName>expandEntityReferences</apiName><shortdesc>
		 Returns a flag indicating whether or not the children of entity reference nodes are visible to the NodeIterator.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Returns a flag indicating whether or not the children of entity reference nodes are visible to the NodeIterator.
		 
		 <p>If this value is false, the children of entity reference nodes (as well as all of their descendants) are rejected.  
		 This takes precedence over the whatToShow value and the filter.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 expand = nodeIterator.expandEntityReferences;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.expandEntityReferences"><linktext>MDC - NodeIterator: expandEntityReferences Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: expandEntityReferences Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:filter:get"><apiName>filter</apiName><shortdesc>
		 Returns an object with a method acceptNode(node).</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.tr.traversal:NodeFilter</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an object with a method acceptNode(node). This is the NodeFilter used to screen nodes.
		 
		 <p>Note: When creating the NodeIterator, the filter object is passed in as the third parameter, and the 
		 object method acceptNode(node) is called on every single node to determine whether or not to accept it. 
		 This function should return the constant NodeFilter.FILTER_ACCEPT for cases when the node should be 
		 accepted and NodeFilter.FILTER_REJECT for cases when the node should be rejected.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 nodeFilter = nodeIterator.filter</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.filter"><linktext>MDC - NodeIterator: filter Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: filter Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:pointerBeforeReferenceNode:get"><apiName>pointerBeforeReferenceNode</apiName><shortdesc>
		 A Boolean value that indicates whether the NodeIterator is anchored before (if this value is true) or after (if this value is false) the anchor node indicated by the referenceNode property.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 A Boolean value that indicates whether the NodeIterator is anchored before (if this value is true) or after (if this value is false) the anchor node indicated by the referenceNode property.
		 
		 <p>Note: This property was introduced by WebKit and is used for testing; it can also be used by debuggers.  It is not part of the DOM specification.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 flag = nodeIterator.pointerBeforeReferenceNode;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.pointerBeforeReferenceNode"><linktext>MDC - NodeIterator: pointerBeforeReferenceNode Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:referenceNode:get"><apiName>referenceNode</apiName><shortdesc>
		 Returns the node to which the iterator is anchored; as new nodes are inserted, the iterator remains anchored to the reference node as specified by this property.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node to which the iterator is anchored; as new nodes are inserted, the iterator remains anchored to the reference node as specified by this property.
		 
		 <p>Note: This property was introduced by WebKit and is used for testing; it can also be used by debuggers.  It is not part of the DOM specification.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 node = nodeIterator.referenceNode;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.referenceNode"><linktext>MDC - NodeIterator: referenceNode Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:root:get"><apiName>root</apiName><shortdesc>
		 Returns the node that is the root of what the NodeIterator traverses.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the node that is the root of what the NodeIterator traverses.
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 root = nodeIterator.root; // document.body in this case</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.root"><linktext>MDC - NodeIterator: root Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: root Property</linktext></link></related-links></apiValue><apiValue id="dom.tr.traversal:NodeIterator:dom.tr.traversal:NodeIterator:whatToShow:get"><apiName>whatToShow</apiName><shortdesc>
		 Returns a number signifying what types of nodes should be returned by the NodeIterator.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns a number signifying what types of nodes should be returned by the NodeIterator.
		 
		 <p>The available set of constants is defined in the NodeFilter interface. Nodes not accepted 
		 by whatToShow will be skipped, but their children may still be considered. Note that this 
		 skip takes precedence over the filter, if any.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var nodeIterator = document.createNodeIterator(
		 	document.body,
		 	NodeFilter.SHOW_ELEMENT + NodeFilter.SHOW_COMMENT + NodeFilter.SHOW_TEXT,
		 	{ acceptNode: function(node) { return NodeFilter.FILTER_ACCEPT; } },
		 	false
		 	);
		 if((nodeIterator.whatToShow == NodeFilter.SHOW_ALL) || 
		 	(nodeIterator.whatToShow % (NodeFilter.SHOW_COMMENT)) &gt;= NodeFilter.SHOW_COMMENT) {
		 	// nodeIterator will show comments
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.whatToShow"><linktext>MDC - NodeIterator: whatToShow Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeIterator"><linktext>W3C - DOM Level 2 Traversal: whatToShow Property</linktext></link><link href="dom.tr.traversal.xml#NodeFilter"><linktext>NodeFilter</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.tr.traversal:NodeFilter"><apiName>NodeFilter</apiName><shortdesc>
	 Filters are objects that know how to "filter out" nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Filters are objects that know how to "filter out" nodes. 
	 
	 <p>If a <codeph>NodeIterator</codeph> or <codeph>TreeWalker</codeph> is given a <codeph>NodeFilter</codeph>, it 
	 applies the filter before it returns the next node. If the filter says to accept the node, the traversal logic 
	 returns it; otherwise, traversal looks for the next node and pretends that the node that was rejected was not there.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeFilter"><linktext>W3C - DOM Level 2 Traversal: NodeFilter</linktext></link></related-links><apiOperation id="dom.tr.traversal:NodeFilter:acceptNode"><apiName>acceptNode</apiName><shortdesc>
		 Test whether a specified node is visible in the logical view of a TreeWalker or NodeIterator.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8_unknown"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A constant to determine whether the node is accepted, rejected, or skipped.
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>n</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to check to see if it passes the filter or not.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Test whether a specified node is visible in the logical view of a TreeWalker or NodeIterator. This function will be 
		 called by the implementation of TreeWalker and NodeIterator; it is not normally called directly from user code. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/NodeIterator.filter"><linktext>MDC - NodeIterator: filter Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Traversal-Range/traversal.html#Traversal-NodeFilter"><linktext>W3C - DOM Level 2 Traversal: acceptNode Method</linktext></link></related-links></apiOperation><apiValue id="dom.tr.traversal:NodeFilter:FILTER_ACCEPT"><apiName>FILTER_ACCEPT</apiName><shortdesc>
		 Accept the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Accept the node. Navigation methods defined for NodeIterator or TreeWalker will return this node.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:FILTER_REJECT"><apiName>FILTER_REJECT</apiName><shortdesc>
		 Reject the node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Reject the node. Navigation methods defined for NodeIterator or TreeWalker will not return this node. For 
		 TreeWalker, the children of this node will also be rejected. NodeIterators treat this as a synonym for 
		 FILTER_SKIP.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:FILTER_SKIP"><apiName>FILTER_SKIP</apiName><shortdesc>
		 Skip this single node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Skip this single node. Navigation methods defined for NodeIterator or TreeWalker will not return this node. 
		 For both NodeIterator and TreeWalker, the children of this node will still be considered.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ALL"><apiName>SHOW_ALL</apiName><shortdesc>
		 Show all Nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>-1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show all <codeph>Nodes</codeph>.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ATTRIBUTE"><apiName>SHOW_ATTRIBUTE</apiName><shortdesc>
		 Show Attr nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Attr</codeph> nodes. This is meaningful only when creating an iterator or tree-walker with an attribute node as 
		 its <codeph>root</codeph>; in this case, it means that the attribute node will appear in the first position of the iteration 
		 or traversal. Since attributes are never children of other nodes, they do not appear when traversing over 
		 the document tree.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_CDATA_SECTION"><apiName>SHOW_CDATA_SECTION</apiName><shortdesc>
		 Show CDATASection nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>CDATASection</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_COMMENT"><apiName>SHOW_COMMENT</apiName><shortdesc>
		 Show Comment nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>128</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Comment</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_DOCUMENT"><apiName>SHOW_DOCUMENT</apiName><shortdesc>
		 Show Document nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>256</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Document</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_DOCUMENT_FRAGMENT"><apiName>SHOW_DOCUMENT_FRAGMENT</apiName><shortdesc>
		 Show DocumentFragment nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1024</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>DocumentFragment</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_DOCUMENT_TYPE"><apiName>SHOW_DOCUMENT_TYPE</apiName><shortdesc>
		 Show DocumentType nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>512</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>DocumentType</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ELEMENT"><apiName>SHOW_ELEMENT</apiName><shortdesc>
		 Show Element nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show Element nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ENTITY"><apiName>SHOW_ENTITY</apiName><shortdesc>
		 Show Entity nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>32</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Entity</codeph> nodes. This is meaningful only when creating an iterator or tree-walker with an <codeph>Entity</codeph> node as 
		 its <codeph>root</codeph>; in this case, it means that the <codeph>Entity</codeph> node will appear in the first position of the traversal. 
		 Since entities are not part of the document tree, they do not appear when traversing over the document tree.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_ENTITY_REFERENCE"><apiName>SHOW_ENTITY_REFERENCE</apiName><shortdesc>
		 Show EntityReference nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>16</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>EntityReference</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_NOTATION"><apiName>SHOW_NOTATION</apiName><shortdesc>
		 Show Notation nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2048</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Notation</codeph> nodes. This is meaningful only when creating an iterator or tree-walker with a <codeph>Notation</codeph> node as 
		 its <codeph>root</codeph>; in this case, it means that the <codeph>Notation</codeph> node will appear in the first position of the traversal. 
		 Since notations are not part of the document tree, they do not appear when traversing over the document tree.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_PROCESSING_INSTRUCTION"><apiName>SHOW_PROCESSING_INSTRUCTION</apiName><shortdesc>
		 Show ProcessingInstruction nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>64</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>ProcessingInstruction</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.tr.traversal:NodeFilter:SHOW_TEXT"><apiName>SHOW_TEXT</apiName><shortdesc>
		 Show Text nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMTR" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Show <codeph>Text</codeph> nodes.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="dom.validation"><apiName>dom.validation</apiName><apiDetail/><apiClassifier id="dom.validation:ExceptionVAL"><apiName>ExceptionVAL</apiName><shortdesc>
	 Some Validation operations may throw an ExceptionVAL as described in their descriptions.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Some Validation operations may throw an ExceptionVAL as described in their descriptions. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL"><linktext>W3C - ExceptionVAL</linktext></link></related-links><apiValue id="dom.validation:ExceptionVAL:dom.validation:ExceptionVAL:code:get"><apiName>code</apiName><shortdesc>
		 The specific exception code.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The specific exception code.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL"><linktext>W3C - ExceptionVAL</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:CharacterDataEditVAL"><apiName>CharacterDataEditVAL</apiName><shortdesc>
	 When validating CharacterData nodes, the NodeEditVAL.nodeValidity  operation must find the nearest parent node 
	 in order to do this; if no parent node is found, VAL_UNKNOWN  is returned.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.validation:NodeEditVAL</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 When validating CharacterData nodes, the NodeEditVAL.nodeValidity  operation must find the nearest parent node 
	 in order to do this; if no parent node is found, VAL_UNKNOWN  is returned. In addition, when VAL_INCOMPLETE  
	 is passed in as an argument to the NodeEditVAL.nodeValidity operation to operate on such nodes, the operation 
	 considers all the text and not just some of it. 
	 
	 <p>An object implementing this interface must also implement CharacterData interface.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL"><linktext>W3C - CharacterDataEditVAL</linktext></link></related-links><apiOperation id="dom.validation:CharacterDataEditVAL:dom.validation:CharacterDataEditVAL:canAppendData"><apiName>canAppendData</apiName><shortdesc>
		 Determines if character data can be appended.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Data to be appended.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if character data can be appended.
		  
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canAppendData"><linktext>W3C - CharacterDataEditVAL.canAppendData()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:CharacterDataEditVAL:dom.validation:CharacterDataEditVAL:canDeleteData"><apiName>canDeleteData</apiName><shortdesc>
		 Determines if character data can be deleted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified offset is negative or greater than the number of 16-bit units in data, or if the specified count is negative. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>Offset.
		 </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="Number"/><apiDesc>Number of 16-bit units to delete.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if character data can be deleted.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canDeleteData"><linktext>W3C - CharacterDataEditVAL.canDeleteData()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:CharacterDataEditVAL:dom.validation:CharacterDataEditVAL:canInsertData"><apiName>canInsertData</apiName><shortdesc>
		 Determines if character data can be inserted.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified offset is negative or greater than the number of 16-bit units in data. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>Offset.
		 </apiDesc></apiParam><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Argument to be set.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if character data can be inserted.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canInsertData"><linktext>W3C - CharacterDataEditVAL.canInsertData()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:CharacterDataEditVAL:dom.validation:CharacterDataEditVAL:canReplaceData"><apiName>canReplaceData</apiName><shortdesc>
		 Determines if character data can be replaced.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified offset is negative or greater than the number of 16-bit units in data, or if the specified count is negative. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>offset</apiItemName><apiType value="Number"/><apiDesc>Offset.
		 </apiDesc></apiParam><apiParam><apiItemName>count</apiItemName><apiType value="Number"/><apiDesc>Replacement.
		 </apiDesc></apiParam><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Argument to be set.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if character data can be replaced.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canReplaceData"><linktext>W3C - CharacterDataEditVAL.canReplaceData()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:CharacterDataEditVAL:dom.validation:CharacterDataEditVAL:canSetData"><apiName>canSetData</apiName><shortdesc>
		 Determines if character data can be set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>arg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Argument to be set.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if character data can be set.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-canSetData"><linktext>W3C - CharacterDataEditVAL.canSetData()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:CharacterDataEditVAL:dom.validation:CharacterDataEditVAL:isWhitespaceOnly"><apiName>isWhitespaceOnly</apiName><shortdesc>
		 Determines if character data is only whitespace.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn></apiOperationDef><apiDesc>
		 Determines if character data is only whitespace. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-CharacterDataEditVAL-isWhitespaceOnly"><linktext>W3C - CharacterDataEditVAL.isWhitespaceOnly()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.validation:ElementEditVAL"><apiName>ElementEditVAL</apiName><shortdesc>
	 This interface also has attributes that are a NameList of elements or attributes which can appear in the specified context.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.validation:NodeEditVAL</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface also has attributes that are a NameList of elements or attributes which can appear in the specified context. 
	 Some schema languages, i.e., W3C XML schema, define wildcards which provide for validation of attribute and element information 
	 items dependent on their namespace names but independent of their local names. 
	 
	 <p>To expose wildcards, the NameList returns the values that represent the  namespace constraint: 
	 <ul>
	 <li><codeph>{namespaceURI, name}</codeph> is <codeph>{null, ##any}</codeph> if any;</li>
	 <li><codeph>{namespaceURI, name}</codeph> is <codeph>{namespace_a, ##other}</codeph> if not and a namespace name (namespace_a);</li>
	 <li><codeph>{namespaceURI, name}</codeph> is <codeph>{null, ##other}</codeph> if not and absent;</li>
	 <li>Pairs of <codeph>{namespaceURI, name}</codeph> with values <codeph>{a_namespaceURI | null, null}</codeph> if a set whose members are either namespace names or absent.</li>
	 </ul>
	 </p>
	 
	 <p>An object implementing this interface must also implement the Element interface. </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL"><linktext>W3C - ElementEditVAL</linktext></link></related-links><apiOperation id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:canRemoveAttribute"><apiName>canRemoveAttribute</apiName><shortdesc>
		 Verifies if an attribute by the given name can be removed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>attrname</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of attribute.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Verifies if an attribute by the given name can be removed.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canRemoveAttribute"><linktext>W3C - ElementEditVAL.canRemoveAttribute()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:canRemoveAttributeNS"><apiName>canRemoveAttributeNS</apiName><shortdesc>
		 Verifies if an attribute by the given local name and namespace can be removed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The namespace URI of the attribute to remove.
		 </apiDesc></apiParam><apiParam><apiItemName>localName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Local name of the attribute to be removed.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Verifies if an attribute by the given local name and namespace can be removed.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canRemoveAttributeNS"><linktext>W3C - ElementEditVAL.canRemoveAttributeNS()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:canRemoveAttributeNode"><apiName>canRemoveAttributeNode</apiName><shortdesc>
		 Determines if an attribute node can be removed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant.
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>attrNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The Attr node to remove from the attribute list.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if an attribute node can be removed.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canRemoveAttributeNode"><linktext>W3C - ElementEditVAL.canRemoveAttributeNode()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:canSetAttribute"><apiName>canSetAttribute</apiName><shortdesc>
		 Determines if the value for specified attribute can be set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>attrname</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of attribute.
		 </apiDesc></apiParam><apiParam><apiItemName>attrval</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Value to be assigned to the attribute.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if the value for specified attribute can be set.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-ElementEditVAL-canSetAttribute"><linktext>W3C - ElementEditVAL.canSetAttribute()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:canSetAttributeNS"><apiName>canSetAttributeNS</apiName><shortdesc>
		 Determines if the attribute with given namespace and qualified name can be created if not already present in the attribute list 
		 of the element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>namespaceURI of namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>qualifiedName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Qualified name of attribute.
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Value to be assigned to the attribute.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if the attribute with given namespace and qualified name can be created if not already present in the attribute list 
		 of the element. If the attribute with the same qualified name and namespaceURI is already present in the element's attribute list, 
		 it tests whether the value of the attribute and its prefix can be set to the new value. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canSetAttributeNS"><linktext>W3C - ElementEditVAL.canSetAttributeNS()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:canSetAttributeNode"><apiName>canSetAttributeNode</apiName><shortdesc>
		 Determines if an attribute node can be added.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>attrNode</apiItemName><apiOperationClassifier>dom.core:Attr</apiOperationClassifier><apiDesc>Node in which the attribute can possibly be set.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if an attribute node can be added. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canSetAttributeNode"><linktext>W3C - ElementEditVAL.canSetAttributeNode()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:canSetTextContent"><apiName>canSetTextContent</apiName><shortdesc>
		 Determines if the text content of this node and its descendants can be set to the string passed in.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>possibleTextContent</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Possible text content string.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if the text content of this node and its descendants can be set to the string passed in. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-canSetTextContent"><linktext>W3C - ElementEditVAL.canSetTextContent()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:isElementDefined"><apiName>isElementDefined</apiName><shortdesc>
		 Determines if name is defined in the schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if name is defined in the schema. This only applies to global declarations. This method is for non-namespace aware schemas. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-isElementDefined"><linktext>W3C - ElementEditVAL.isElementDefined()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:isElementDefinedNS"><apiName>isElementDefinedNS</apiName><shortdesc>
		 Determines if name in this namespace is defined in the current context.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>namespaceURI of namespace.
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Name of element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if name in this namespace is defined in the current context. Thus not only does this apply to global declarations, 
		 but depending on the content, this may also apply to local definitions. This method is for namespace aware schemas. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-isElementDefinedNS"><linktext>W3C - ElementEditVAL.isElementDefinedNS()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedAttributes:get"><apiName>allowedAttributes</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible attribute information items or wildcards  that can appear as attributes 
		 of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible attribute information items or wildcards  that can appear as attributes 
		 of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedAttributes"><linktext>W3C - ElementEditVAL.allowedAttributes</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedChildren:get"><apiName>allowedChildren</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as children 
		 of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as children 
		 of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedChildren"><linktext>W3C - ElementEditVAL.allowedChildren</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedFirstChildren:get"><apiName>allowedFirstChildren</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as a first 
		 child of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items or wildcards  that can appear as a first 
		 child of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedFirstChildren"><linktext>W3C - ElementEditVAL.allowedFirstChildren</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedNextSiblings:get"><apiName>allowedNextSiblings</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a next 
		 sibling of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a next 
		 sibling of this element, or null  if this element has no context or schema. Duplicate pairs of {namespaceURI, name} are eliminated. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedNextSiblings"><linktext>W3C - ElementEditVAL.allowedNextSiblings</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedParents:get"><apiName>allowedParents</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items that can appear as a parent this 
		 element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all possible element information items that can appear as a parent this 
		 element, or null  if this element has no context or schema. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedParents"><linktext>W3C - ElementEditVAL.allowedParents</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:allowedPreviousSiblings:get"><apiName>allowedPreviousSiblings</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a previous 
		 sibling of this element, or null  if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of all element information items or wildcards  that can be inserted as a previous 
		 sibling of this element, or null  if this element has no context or schema. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-allowedNextSiblings"><linktext>W3C - ElementEditVAL.allowedNextSiblings</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:contentType:get"><apiName>contentType</apiName><shortdesc>
		 The content type of an element as defined above.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The content type of an element as defined above.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-ElementEditVAL-contentType"><linktext>W3C - ElementEditVAL.contentType</linktext></link></related-links></apiValue><apiValue id="dom.validation:ElementEditVAL:dom.validation:ElementEditVAL:requiredAttributes:get"><apiName>requiredAttributes</apiName><shortdesc>
		 A NameList, as described in [DOM Level 3 Core], of required attribute information items that must appear on this element, or null  
		 if this element has no context or schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:NameList</apiValueClassifier></apiValueDef><apiDesc>
		 A NameList, as described in [DOM Level 3 Core], of required attribute information items that must appear on this element, or null  
		 if this element has no context or schema. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ElementEditVAL-requiredAttributes"><linktext>W3C - ElementEditVAL.requiredAttributes</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:ValidationState"><apiName>ValidationState</apiName><shortdesc>
	 Validation state constants stored in NodeEditVAL.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Validation state constants stored in NodeEditVAL.
	 
	 <p><b>Note:</b> Moved to ValidationState specifically for this documentation. Constants are not allowed in an interface.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="dom.validation.xml#NodeEditVAL"><linktext>dom.validation.NodeEditVAL</linktext></link></related-links><apiValue id="dom.validation:ValidationState:VAL_FALSE"><apiName>VAL_FALSE</apiName><shortdesc>
		 False if the node is invalid with regards to the operation, or if the operation cannot be done.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 False if the node is invalid with regards to the operation, or if the operation cannot be done. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_FALSE"><linktext>W3C - NodeEditVAL.VAL_FALSE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationState:VAL_TRUE"><apiName>VAL_TRUE</apiName><shortdesc>
		 True if the node is valid with regards to the operation, or if the operation can be done.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 True if the node is valid with regards to the operation, or if the operation can be done. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_TRUE"><linktext>W3C - NodeEditVAL.VAL_TRUE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationState:VAL_UNKNOWN"><apiName>VAL_UNKNOWN</apiName><shortdesc>
		 The validity of the node is unknown.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The validity of the node is unknown. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_UNKNOWN"><linktext>W3C - NodeEditVAL.VAL_UNKNOWN</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:ValidationType"><apiName>ValidationType</apiName><shortdesc>
	 Validation type constants stored in NodeEditVAL.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Validation type constants stored in NodeEditVAL.
	 
	 <p><b>Note:</b> Moved to ValidationType specifically for this documentation. Constants are not allowed in an interface.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="dom.validation.xml#NodeEditVAL"><linktext>dom.validation.NodeEditVAL</linktext></link></related-links><apiValue id="dom.validation:ValidationType:VAL_INCOMPLETE"><apiName>VAL_INCOMPLETE</apiName><shortdesc>
		 Check if the node's immediate children are those expected by the content model.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Check if the node's immediate children are those expected by the content model. This node's trailing required 
		 children could be missing. It includes VAL_NS_WF. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_INCOMPLETE"><linktext>W3C - NodeEditVAL.VAL_INCOMPLETE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationType:VAL_NS_WF"><apiName>VAL_NS_WF</apiName><shortdesc>
		 Check if the node is namespace well-formed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Check if the node is namespace well-formed. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_NS_WF"><linktext>W3C - NodeEditVAL.VAL_NS_WF</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationType:VAL_SCHEMA"><apiName>VAL_SCHEMA</apiName><shortdesc>
		 Check if the node's entire subtree are those expected by the content model.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Check if the node's entire subtree are those expected by the content model. It includes VAL_NS_WF. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_SCHEMA"><linktext>W3C - NodeEditVAL.VAL_SCHEMA</linktext></link></related-links></apiValue><apiValue id="dom.validation:ValidationType:VAL_WF"><apiName>VAL_WF</apiName><shortdesc>
		 Check if the node is  well-formed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Check if the node is  well-formed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-VAL_WF"><linktext>W3C - NodeEditVAL.VAL_WF</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:ContentTypeVAL"><apiName>ContentTypeVAL</apiName><shortdesc>
	 Content type constants stored in ElementEditVAL.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Content type constants stored in ElementEditVAL.
	 
	 <p><b>Note:</b> Moved to ContentTypeVAL specifically for this documentation. Constants are not allowed in an interface.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="dom.validation.xml#ElementEditVAL"><linktext>dom.validation.ElementEditVAL</linktext></link></related-links><apiValue id="dom.validation:ContentTypeVAL:VAL_ANY_CONTENTTYPE"><apiName>VAL_ANY_CONTENTTYPE</apiName><shortdesc>
		 The content model contains unordered child information item(s), i.e., element, processing instruction, unexpanded entity reference, character, and 
		 comment information items as defined in the XML Information Set.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model contains unordered child information item(s), i.e., element, processing instruction, unexpanded entity reference, character, and 
		 comment information items as defined in the XML Information Set. If the schema is a DTD, this corresponds to the ANY content model. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_ANY_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_ANY_CONTENTTYPE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ContentTypeVAL:VAL_ELEMENTS_CONTENTTYPE"><apiName>VAL_ELEMENTS_CONTENTTYPE</apiName><shortdesc>
		 The content model contains a sequence of element information items  optionally separated by whitespace.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model contains a sequence of element information items  optionally separated by whitespace. If the schema is a DTD, this is the element 
		 content content model; and if the schema is a W3C XML schema, this is the element-only content type. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_ELEMENTS_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_ELEMENTS_CONTENTTYPE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ContentTypeVAL:VAL_EMPTY_CONTENTTYPE"><apiName>VAL_EMPTY_CONTENTTYPE</apiName><shortdesc>
		 The content model does not allow any content.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model does not allow any content. If the schema is a W3C XML schema, this 
		 corresponds to the empty content type; and if the schema is a DTD, this corresponds to the EMPTY content model. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_EMPTY_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_EMPTY_CONTENTTYPE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ContentTypeVAL:VAL_MIXED_CONTENTTYPE"><apiName>VAL_MIXED_CONTENTTYPE</apiName><shortdesc>
		 The content model contains a sequence of ordered element information items  optionally interspersed with character data.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model contains a sequence of ordered element information items  optionally interspersed with character data. If the schema is a W3C XML 
		 schema, this corresponds to the mixed  content type. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_MIXED_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_MIXED_CONTENTTYPE</linktext></link></related-links></apiValue><apiValue id="dom.validation:ContentTypeVAL:VAL_SIMPLE_CONTENTTYPE"><apiName>VAL_SIMPLE_CONTENTTYPE</apiName><shortdesc>
		 The content model contains  character information items.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The content model contains  character information items. If the schema is a W3C XML schema, then the element has a content type of VAL_SIMPLE_CONTENTTYPE  
		 if the type of the element is a simple type definition, or the type of the element is a complexType whose {content type} is a simple type definition. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-ElementEditVAL-VAL_SIMPLE_CONTENTTYPE"><linktext>W3C - ElementEditVAL.VAL_SIMPLE_CONTENTTYPE</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:DocumentEditVAL"><apiName>DocumentEditVAL</apiName><shortdesc>
	 An object implementing this interface must also implement the Document interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.validation:NodeEditVAL</apiBaseInterface><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 An object implementing this interface must also implement the Document interface. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-DocumentEditVAL"><linktext>W3C - DocumentEditVAL</linktext></link></related-links><apiOperation id="dom.validation:DocumentEditVAL:dom.validation:DocumentEditVAL:getDefinedElements"><apiName>getDefinedElements</apiName><shortdesc>
		 Returns list of all element information item names of global declaration, belonging to the specified namespace.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>List of all element information item names belonging to the specified namespace or null if no schema is available. 
		 
		 </apiDesc><apiOperationClassifier>dom.core:NameList</apiOperationClassifier></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>namespaceURI of namespace. For DTDs, this is null.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns list of all element information item names of global declaration, belonging to the specified namespace. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-getDefinedElements"><linktext>W3C - DocumentEditVAL.getDefinedElements()</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:DocumentEditVAL:dom.validation:DocumentEditVAL:validateDocument"><apiName>validateDocument</apiName><shortdesc>
		 Validates the document against the schema, e.g., a DTD or an W3C XML schema or another.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn></apiOperationDef><apiDesc>
		 Validates the document against the schema, e.g., a DTD or an W3C XML schema or another. Any attempt to modify any part 
		 of the document while validating results in implementation-dependent behavior. In addition, the validation operation itself 
		 cannot modify the document, e.g., for default attributes. This method makes use of the error handler, as described in the 
		 DOM Level 3 Core DOMConfiguration interface, with all errors being SEVERITY_ERROR as defined in the DOMError interface. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-validateDocument"><linktext>W3C - DocumentEditVAL.validateDocument()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiValue id="dom.validation:DocumentEditVAL:dom.validation:DocumentEditVAL:continuousValidityChecking:get"><apiName>continuousValidityChecking</apiName><shortdesc>
		 An attribute specifying whether the validity of the document is continuously enforced.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiException><apiDesc>NOT_SUPPORTED_ERR: Raised if the implementation does not support setting this attribute to true.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiException><apiDesc>NO_SCHEMA_AVAILABLE_ERR: Raised if this attribute is set to true  and a schema is unavailable. 
		 
		 </apiDesc><apiItemName>ExceptionVAL</apiItemName><apiOperationClassifier>dom.validation:ExceptionVAL</apiOperationClassifier></apiException><apiException><apiDesc>VALIDATION_ERR: Raised if an operation makes this document not compliant with the VAL_INCOMPLETE 
		 validity type or the document is invalid, and this attribute is set to true. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiDefaultValue>false
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 An attribute specifying whether the validity of the document is continuously enforced. When the attribute 
		 is set to true, the implementation may raise certain exceptions, depending on the situation (see the following).
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-continuousValidityChecking"><linktext>W3C - DocumentEditVAL.continuousValidityChecking</linktext></link></related-links></apiValue><apiValue id="dom.validation:DocumentEditVAL:dom.validation:DocumentEditVAL:domConfig:get"><apiName>domConfig</apiName><shortdesc>
		 This allows the setting of the error handler, as described in the [DOM Level 3 Core] DOMConfiguration interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMConfiguration</apiValueClassifier></apiValueDef><apiDesc>
		 This allows the setting of the error handler, as described in the [DOM Level 3 Core] DOMConfiguration interface. An object implementing 
		 this DocumentEditVAL interface and the DOM Level 3 Core Document interface, which also has a domConfig attribute, needs to only implement 
		 this attribute once. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#DocumentEditVAL-domConfig"><linktext>W3C - DocumentEditVAL.domConfig</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:NodeEditVAL"><apiName>NodeEditVAL</apiName><shortdesc>
	 This interface is similar to the DOM Level 3 Core Node interface, with methods for guided document editing.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 This interface is similar to the DOM Level 3 Core Node interface, with methods for guided document editing. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL"><linktext>W3C - NodeEditVAL</linktext></link></related-links><apiOperation id="dom.validation:NodeEditVAL:dom.validation:NodeEditVAL:canAppendChild"><apiName>canAppendChild</apiName><shortdesc>
		 Determines whether the Node.appendChild operation would make this document not compliant with the VAL_INCOMPLETE validity type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>newChild</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Node to be appended.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the Node.appendChild operation would make this document not compliant with the VAL_INCOMPLETE validity type. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-canAppendChild"><linktext>W3C - NodeEditVAL.canAppendChild()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:NodeEditVAL:dom.validation:NodeEditVAL:canInsertBefore"><apiName>canInsertBefore</apiName><shortdesc>
		 Determines whether the Node.insertBefore operation would make this document not compliant with the VAL_INCOMPLETE  validity type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>newChild</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Node to be inserted.
		 </apiDesc></apiParam><apiParam><apiItemName>refChild</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Reference Node.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the Node.insertBefore operation would make this document not compliant with the VAL_INCOMPLETE  validity type. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-canInsertBefore"><linktext>W3C - NodeEditVAL.canInsertBefore()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:NodeEditVAL:dom.validation:NodeEditVAL:canRemoveChild"><apiName>canRemoveChild</apiName><shortdesc>
		 Determines whether the Node.removeChild operation would make this document not compliant with the VAL_INCOMPLETE  validity type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>oldChild</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Node to be removed.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the Node.removeChild operation would make this document not compliant with the VAL_INCOMPLETE  validity type. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-canRemoveChild"><linktext>W3C - NodeEditVAL.canRemoveChild()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:NodeEditVAL:dom.validation:NodeEditVAL:canReplaceChild"><apiName>canReplaceChild</apiName><shortdesc>
		 Determines whether the Node.replaceChild operation would make this document not compliant with the VAL_INCOMPLETE validity type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>newChild</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>New Node.
		 </apiDesc></apiParam><apiParam><apiItemName>oldChild</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Node to be replaced.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the Node.replaceChild operation would make this document not compliant with the VAL_INCOMPLETE validity type.  
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#VAL-Interfaces-NodeEditVAL-canReplaceChild"><linktext>W3C - NodeEditVAL.canReplaceChild()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiOperation id="dom.validation:NodeEditVAL:dom.validation:NodeEditVAL:nodeValidity"><apiName>nodeValidity</apiName><shortdesc>
		 Determines if the node is valid relative to the validation type  specified in valType.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A validation state constant. 
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>valType</apiItemName><apiType value="Number"/><apiDesc>Flag to indicate the validation type  checking to be done. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines if the node is valid relative to the validation type  specified in valType. This operation doesn't normalize 
		 before checking if it is valid. To do so, one would need to explicitly call a normalize method. The difference between 
		 this method and the DocumentEditVAL.validateDocument method is that the latter method only checks to determine whether 
		 the entire document is valid. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#NodeEditVAL-nodeValidity"><linktext>W3C - NodeEditVAL.nodeValidity()</linktext></link><link href="dom.validation.xml#ValidationState"><linktext>dom.validation.ValidationState</linktext></link></related-links></apiOperation><apiValue id="dom.validation:NodeEditVAL:dom.validation:NodeEditVAL:defaultValue:get"><apiName>defaultValue</apiName><shortdesc>
		 The default value specified in an attribute or an element declaration or null if unspecified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The default value specified in an attribute or an element declaration or null if unspecified. If the schema is a 
		 W3C XML schema, this is the canonical lexical representation of the default value. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#NodeEditVAL-defaultValue"><linktext>W3C - NodeEditVAL.defaultValue</linktext></link></related-links></apiValue><apiValue id="dom.validation:NodeEditVAL:dom.validation:NodeEditVAL:enumeratedValues:get"><apiName>enumeratedValues</apiName><shortdesc>
		 A DOMStringList, as described in DOM Level 3 Core, of distinct values for an attribute or an element declaration or 
		 null  if unspecified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:DOMStringList</apiValueClassifier></apiValueDef><apiDesc>
		 A DOMStringList, as described in DOM Level 3 Core, of distinct values for an attribute or an element declaration or 
		 null  if unspecified. If the schema is a W3C XML schema, this is a list of strings which are lexical representations 
		 corresponding to the values in the [value] property of the enumeration component for the type of the attribute or element. 
		 It is recommended that the canonical lexical representations of the values be used. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#NodeEditVAL-enumeratedValues"><linktext>W3C - NodeEditVAL.enumeratedValues</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.validation:ExceptionVALCode"><apiName>ExceptionVALCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL-codes"><linktext>W3C - ExceptionVALCode</linktext></link></related-links><apiValue id="dom.validation:ExceptionVALCode:NO_SCHEMA_AVAILABLE_ERR"><apiName>NO_SCHEMA_AVAILABLE_ERR</apiName><shortdesc>
		 This error occurs when the operation cannot complete due to an unavailable schema.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMVAL" version="3"/><apiSince version="DOMVAL 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>71</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This error occurs when the operation cannot complete due to an unavailable schema. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-Val/validation.html#ExceptionVAL-NO_SCHEMA_AVAILABLE_ERR"><linktext>W3C - ExceptionVALCode.NO_SCHEMA_AVAILABLE_ERR</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="dom.views"><apiName>dom.views</apiName><apiDetail/><apiClassifier id="dom.views:DocumentView"><apiName>DocumentView</apiName><shortdesc>
	 The DocumentView interface is implemented by Document objects in DOM 
	 implementations supporting DOM Views.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DocumentView interface is implemented by Document objects in DOM 
	 implementations supporting DOM Views. It provides an attribute to 
	 retrieve the default view of a document.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-DocumentView"><linktext>W3C - DocumentView</linktext></link></related-links><apiValue id="dom.views:DocumentView:dom.views:DocumentView:defaultView:get"><apiName>defaultView</apiName><shortdesc>
		 The default AbstractView for this Document, or null if none available.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:AbstractView</apiValueClassifier></apiValueDef><apiDesc>
		 The default AbstractView for this Document, or null if none available.
		 
		 <p><b>Note:</b> document.defaultView is generally a reference to the window object 
		 for the document, however that is not defined in the specification and can't be relied upon 
		 for all host environments, particularly as not all browsers implement it.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.defaultView"><linktext>MDC - Document.defaultView</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-DocumentView-defaultView"><linktext>W3C - DocumentView.defaultView</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.views:AbstractView"><apiName>AbstractView</apiName><shortdesc>
	 A base interface that all views shall derive from.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A base interface that all views shall derive from.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-2-Views/views.html#Views-AbstractView"><linktext>W3C - DOM 2 Views: AbstractView</linktext></link></related-links><apiValue id="dom.views:AbstractView:dom.views:AbstractView:document:get"><apiName>document</apiName><shortdesc>
		 The source DocumentView of which this is an AbstractView.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMViews" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:DocumentView</apiValueClassifier></apiValueDef><apiDesc>
		 The source DocumentView of which this is an AbstractView.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="dom"><apiName>dom</apiName><apiDetail/><apiClassifier id="dom:WindowProxy"><apiName>WindowProxy</apiName><shortdesc>
	 Must proxy all operations to the Window object of the browsing context's active document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom:Window</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Must proxy all operations to the Window object of the browsing context's active document.
	 
	 It is indistinguishable from that Window object in every way, except that it is not equal to it.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/#windowproxy"><linktext>http://www.whatwg.org/specs/web-apps/current-work/#windowproxy</linktext></link></related-links></apiClassifier><apiClassifier id="dom:Window"><apiName>Window</apiName><shortdesc>
	 INCOMPLETE
	 
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>
	 
	 http://opensource.adobe.com/svn/opensource/flex/sdk/trunk/modules/compiler/src/java/flex2/compiler/asdoc/ClassTable.java
	 
	 http://www.w3.org/TR/Window/
	 
	 http://developer.mozilla.org/en/DOM/window
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.style.css:ViewCSS</apiBaseInterface><apiBaseInterface>dom.views:AbstractView</apiBaseInterface><apiBaseInterface>cssom.view:WindowView</apiBaseInterface><apiBaseInterface>dom.events:EventTarget</apiBaseInterface><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 INCOMPLETE
	 
	 </apiDesc></apiClassifierDetail><apiOperation id="dom:Window:GeckoActiveXObject"><apiName>GeckoActiveXObject</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Window.GeckoActiveXObject"><linktext>http://developer.mozilla.org/En/DOM/Window.GeckoActiveXObject</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:QueryInterface"><apiName>QueryInterface</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Window.QueryInterface"><linktext>http://developer.mozilla.org/En/DOM/Window.QueryInterface</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:XPCNativeWrapper"><apiName>XPCNativeWrapper</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Window.XPCNativeWrapper"><linktext>http://developer.mozilla.org/En/DOM/Window.XPCNativeWrapper</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:XPCSafeJSObjectWrapper"><apiName>XPCSafeJSObjectWrapper</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Window.XPCSafeJSObjectWrapper"><linktext>http://developer.mozilla.org/En/DOM/Window.XPCSafeJSObjectWrapper</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:addEventListener"><apiName>addEventListener</apiName><shortdesc>
		 
		 Associates a function with a particular event and binds the event to the current node.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The function or method to associate with the event.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 
		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Associates a function with a particular event and binds the event to the current node.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:addEventListenerNS"><apiName>addEventListenerNS</apiName><shortdesc>
		 
		 Registers an event listener, depending on the useCapture parameter, on the 
		 capture phase of the DOM event flow or its target and bubbling phases.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.namespaceURI associated with the event for which the user is registering.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string representing the event to bind, without the "on" prefix. For example, "click", "mousedown" etc.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The function or method to associate with the event.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Whether to bind the event as it is propagating towards the target node, (event Capture), or as the 
		 event bubbles upwards from the target (event bubble). Set to true or false, respectively.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Registers an event listener, depending on the useCapture parameter, on the 
		 capture phase of the DOM event flow or its target and bubbling phases.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:alert"><apiName>alert</apiName><shortdesc>
		 DOM Level 0 
		 
		 Display an alert dialog with the specified content and an OK button.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Text you want to display in the alert dialog, or, alternatively, an 
		 object that is converted into a string and displayed.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Display an alert dialog with the specified content and an OK button.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="dom.xml#Window/confirm()"><linktext>dom.Window.confirm()</linktext></link><link href="dom.xml#Window/prompt()"><linktext>dom.Window.prompt()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:atob"><apiName>atob</apiName><shortdesc>
		 DOM Level 0 
		 
		 Decodes a string of data which has been encoded using base-64 encoding.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The decoded string
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>encodedData</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The encoded string
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Decodes a string of data which has been encoded using base-64 encoding. 
		 
		 </apiDesc><example>
		 var encodedData = window.btoa("Hello, world"); // encode a string
		 var decodedData = atob(encodedData); // decode the string
		 
		 </example></apiOperationDetail><related-links><link href="dom.xml#Window/btoa()"><linktext>dom.Window.btoa()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:back"><apiName>back</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns the window to the previous item in the history.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns the window to the previous item in the history. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:blur"><apiName>blur</apiName><shortdesc>
		 DOM Level 0 
		 
		 Shifts focus away from the window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Shifts focus away from the window. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:btoa"><apiName>btoa</apiName><shortdesc>
		 DOM Level 0
		 
		 Creates a base-64 encoded ASCII string from a string of binary data.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The encoded string
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>stringToEncode</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The string to encode
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Creates a base-64 encoded ASCII string from a string of binary data. 
		 
		 </apiDesc><example>
		 var encodedData = window.btoa("Hello, world"); // encode a string
		 var decodedData = atob(encodedData); // decode the string
		 
		 </example></apiOperationDetail><related-links><link href="dom.xml#Window/atob()"><linktext>dom.Window.atob()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:captureEvents"><apiName>captureEvents</apiName><shortdesc>
		 DOM Level 0 | OBSOLETE
		 
		 Registers the window to capture all events of the specified type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>eventType</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The event type to capture.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0 | OBSOLETE</b>
		 
		 Registers the window to capture all events of the specified type. 
		 
		 Note: This method is obsolete as of Gecko 1.9, in favor of W3C DOM Events methods 
		 (see addEventListener). The support for this method has been removed from Gecko 1.9. 
		 
		 Note: Events raised in the DOM by user activity (such as clicking buttons or shifting 
		 focus away from the current document) generally pass through the high-level window and 
		 document objects first before arriving at the object that initiated the event. 
		 
		 Note: When you call the captureEvents() method on the window, events of the type you 
		 specify (for example, Event.CLICK) no longer pass through to "lower" objects in the 
		 hierarchy. In order for events to "bubble up" in the way that they normally do, you 
		 must call window.releaseEvents() (Obsolete ) on the window to keep it from trapping events. 
		 
		 Note: Note that you can pass a list of events to this method using the following syntax: 
		 window.caputureEvents(Event.KEYPRESS | Event.KEYDOWN | Event.KEYUP). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="dom.xml#Window/releaseEvents()"><linktext>dom.Window.releaseEvents()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:clearInterval"><apiName>clearInterval</apiName><shortdesc>
		 DOM Level 0 
		 
		 Cancels repeated action which was set up using setInterval().</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>timerID</apiItemName><apiType value="Number"/><apiDesc>The identifier of the repeated action you want to cancel.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Cancels repeated action which was set up using setInterval(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="dom.xml#Window/setInterval()"><linktext>setInterval()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:clearTimeout"><apiName>clearTimeout</apiName><shortdesc>
		 DOM Level 0 
		 
		 Clears the delay set by window.setTimeout().</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>timerID</apiItemName><apiType value="Number"/><apiDesc>The ID of the timeout you wish you clear
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Clears the delay set by window.setTimeout(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="dom.xml#Window/setTimeout()"><linktext>setTimeout()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:close"><apiName>close</apiName><shortdesc>
		 DOM Level 0 
		 
		 Closes the current window, or a referenced window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Closes the current window, or a referenced window. 
		 
		 <p>When this method is called, the referenced window is closed.</p>
		 
		 <p>This method is only allowed to be called for windows that were 
		 opened by a script using the window.open method. If the window 
		 was not opened by a script, the following error appears in the 
		 JavaScript Console: Scripts may not close windows that were not
		 opened by script.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536367(VS.85).aspx"><linktext>http://msdn.microsoft.com/en-us/library/ms536367(VS.85).aspx</linktext></link><link href="http://developer.mozilla.org/en/DOM/window.close"><linktext>http://developer.mozilla.org/en/DOM/window.close</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:confirm"><apiName>confirm</apiName><shortdesc>
		 DOM Level 0 
		 
		 Displays a modal dialog with a message and two buttons, OK and Cancel.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Value indicating whether OK or Cancel was selected (true means OK). 
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The string to be displayed in the dialog. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Displays a modal dialog with a message and two buttons, OK and Cancel. 
		 
		 <p>Dialog boxes are modal windows - they prevent the user from accessing the 
		 rest of the program's interface until the dialog box is closed. For this 
		 reason, you should not overuse any function that creates a dialog box (or 
		 modal window).</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="dom.xml#Window/alert()"><linktext>dom.Window.alert()</linktext></link><link href="dom.xml#Window/prompt()"><linktext>dom.Window.prompt()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:disableExternalCapture"><apiName>disableExternalCapture</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/window.disableExternalCapture"><linktext>http://developer.mozilla.org/En/DOM/window.disableExternalCapture</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:dispatchEvent"><apiName>dispatchEvent</apiName><shortdesc>
		 
		 Dispatches an event to fire on a node artificially.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Indicates whether any of the listeners which handled the 
		 event called Event.preventDefault(). If Event.preventDefault() was 
		 called the returned value is false, else it is true.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>dom.events:Event</apiOperationClassifier><apiDesc>The event to be dispatched.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Dispatches an event to fire on a node artificially.
		 
		 <p><b>Note (IE):</b> IE's equivalent of dispatchEvent() is fireEvent().</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:dump"><apiName>dump</apiName><shortdesc>
		 DOM Level 0 
		 
		 Prints messages to the console.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Message to log. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Prints messages to the console. 
		 
		 <p>Note: In Gecko dump is disabled by default – it doesn't do anything but doesn't raise 
		 an error either. To see the dump output you have to enable it by setting the preference 
		 browser.dom.window.dump.enabled to true. You can set the preference in about:config or 
		 in a user.js file. Note: this preference is not listed in about:config by default, you 
		 may need to create it (right-click the content area -&gt; New -&gt; Boolean). </p>
		 
		 <p>Note: On Windows, you will need a console to actually see anything. If you don't have one 
		 already, closing the application and re-opening it with the command line parameter -console 
		 should create the console. On other operating systems, it's enough to launch the application 
		 from a terminal. </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:enableExternalCapture"><apiName>enableExternalCapture</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/window.enableExternalCapture"><linktext>http://developer.mozilla.org/En/DOM/window.enableExternalCapture</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:escape"><apiName>escape</apiName><shortdesc>
		 DOM Level 0 
		 
		 Encodes a string, replacing certain characters with a hexadecimal escape sequence.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The encoded string. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>regular</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A regular string. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Encodes a string, replacing certain characters with a hexadecimal escape sequence. 
		 
		 <p>Note: The escape() method converts special characters (any characters that are 
		 not regular text or numbers) into hexadecimal characters, which is especially 
		 necessary for setting the values of cookies. Also useful when passing name=value 
		 pairs in the URL of a GET request, or an AJAX GET/POST request. </p>
		 
		 </apiDesc><example>alert(escape("http://www.cnn.com")); // displays: http%3A//www.cnn.com
		 </example></apiOperationDetail><related-links><link href="dom.xml#Window/unescape()"><linktext>dom.Window.unescape()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:find"><apiName>find</apiName><shortdesc>
		 DOM Level 0 
		 
		 Finds a string in a window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>true if the string is found; otherwise, false. 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>string</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The text string for which to search. 
		 </apiDesc></apiParam><apiParam><apiItemName>caseSensitive</apiItemName><apiType value="Boolean"/><apiDesc>If true, specifies a case-sensitive search. 
		 </apiDesc></apiParam><apiParam><apiItemName>backwards</apiItemName><apiType value="Boolean"/><apiDesc>If true, specifies a backward search. 
		 </apiDesc></apiParam><apiParam><apiItemName>wrapAround</apiItemName><apiType value="Boolean"/><apiDesc>If true, specifies a wrap around search. 
		 </apiDesc></apiParam><apiParam><apiItemName>wholeWord</apiItemName><apiType value="Boolean"/><apiDesc>If true, specifies a whole word search. 
		 </apiDesc></apiParam><apiParam><apiItemName>searchInFrames</apiItemName><apiType value="Boolean"/><apiDesc>If true, specifies a search in frames. 
		 </apiDesc></apiParam><apiParam><apiItemName>showDialog</apiItemName><apiType value="Boolean"/><apiDesc>If true, specifies a show Dialog. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Finds a string in a window. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:focus"><apiName>focus</apiName><shortdesc>
		 DOM Level 0 
		 
		 Sets focus on the window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Sets focus on the window. 
		 
		 </apiDesc><example>if (clicked) { window.focus(); }
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:forward"><apiName>forward</apiName><shortdesc>
		 DOM Level 0 
		 
		 Moves the window one document forward in the history.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Moves the window one document forward in the history. 
		 
		 </apiDesc><example>function goForward() { if ( canGoForward) window.forward(); }
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:getAttention"><apiName>getAttention</apiName><shortdesc>
		 DOM Level 0 
		 
		 Attempts to get the user's attention.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Attempts to get the user's attention. How this happens varies based on OS and window manager.
		 
		 <p>Note: On Windows, the taskbar button for the window flashes, if this hasn't been disabled by the user.</p>
		 
		 <p>Note: On Linux, the behaviour varies from window manager to window manager - some flash the taskbar button, 
		 others focus the window immediately. This may be configurable as well.</p>
		 
		 <p>Note: On Macintosh, the icon in the upper right corner of the desktop flashes.</p>
		 
		 <p>Note: The function is disabled for web content. Neither Gecko nor Internet Explorer supports this feature 
		 now for web content. getAttention will still work when used from chrome in a Gecko application.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:getAttentionWithCycleCount"><apiName>getAttentionWithCycleCount</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/window.getAttentionWithCycleCount"><linktext>http://developer.mozilla.org/En/DOM/window.getAttentionWithCycleCount</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:getComputedStyle"><apiName>getComputedStyle</apiName><shortdesc>
		 
		 This method is used to get the computed style as it is defined in CSS2.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The computed style. The CSSStyleDeclaration is read-only and contains only absolute values.
		 
		 </apiDesc><apiOperationClassifier>dom.style.css:CSSStyleDeclaration</apiOperationClassifier></apiReturn><apiParam><apiItemName>elt</apiItemName><apiOperationClassifier>dom.core:Element</apiOperationClassifier><apiDesc>The element whose style is to be computed. This parameter cannot be null.
		 </apiDesc></apiParam><apiParam><apiItemName>pseudoElt</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The pseudo-element or null if none.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 This method is used to get the computed style as it is defined in CSS2. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:getSelection"><apiName>getSelection</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns a selection object representing the range of text selected by the user.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A Selection object. 
		 
		 </apiDesc><apiOperationClassifier>dom.objects:Selection</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns a selection object representing the range of text selected by the user. 
		 
		 <p>In JavaScript, when a selection object is passed to a function expecting a string (like window.alert  or 
		 document.write ), a string representation of it (i.e. the selected text) is passed instead. This makes the 
		 selection object appear like a string, when it is really an object with its own properties and methods. 
		 Specifically, the return value of calling the toString() method of the Selection object is passed. </p>
		 
		 </apiDesc><example>
		 function foo() {
		    var selObj = window.getSelection();
		    alert(selObj);
		    var selRange = selObj.getRangeAt(0);
		    // do stuff with the range
		 }
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:home"><apiName>home</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns the window to the home page.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns the window to the home page. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:maximize"><apiName>maximize</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/window.maximize"><linktext>http://developer.mozilla.org/En/DOM/window.maximize</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:minimize"><apiName>minimize</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/window.minimize"><linktext>http://developer.mozilla.org/En/DOM/window.minimize</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:moveBy"><apiName>moveBy</apiName><shortdesc>
		 DOM Level 0 
		 
		 Moves the current window by a specified amount.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>deltaX</apiItemName><apiType value="Number"/><apiDesc>Amount of pixels to move the window horizontally. 
		 </apiDesc></apiParam><apiParam><apiItemName>deltaY</apiItemName><apiType value="Number"/><apiDesc>Amount of pixels to move the window vertically. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Moves the current window by a specified amount. 
		 
		 <p>Note: You can use negative numbers as parameters for this function. This function makes 
		 a relative move while window.moveTo makes an absolute move. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 function budge() {
		    moveBy(10, -10);
		 }
		 </codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:moveTo"><apiName>moveTo</apiName><shortdesc>
		 DOM Level 0 
		 
		 Moves the window to the specified coordinates.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>The horizontal coordinate to be moved to. 
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>The vertical coordinate to be moved to. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Moves the window to the specified coordinates. 
		 
		 <p>Note: This function moves the window absolutely while window.moveBy moves the window relative to its current location. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 function origin() {
		   // moves to top left corner of screen
		   window.moveTo(0, 0)
		 }
		 </codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:open"><apiName>open</apiName><shortdesc>
		 DOM Level 0 
		 
		 Creates a new secondary browser window and loads the referenced resource.</shortdesc><prolog><asCustoms><exampleText>
		 <h3>Best practices</h3>
		 <p>The above code solves a few usability problems related to links opening secondary window. The purpose of the return false in 
		 the code is to cancel default action of the link: if the onclick event handler is executed, then there is no need to execute the 
		 default action of the link. But if javascript support is disabled or non-existent on the user's browser, then the onclick event 
		 handler is ignored and the browser loads the referenced resource in the target frame or window that has the name 
		 "PromoteFirefoxWindowName". If no frame nor window has the name "PromoteFirefoxWindowName", then the browser will create a new 
		 window and will name it "PromoteFirefoxWindowName".</p>
		 
		 </exampleText></asCustoms></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>This is the reference pointing to the newly created browser window. This reference is the return value of the 
		 open() method; it will be null if for some reasons the execution did not succeed to open the window. A global variable 
		 is best used to store such reference. You can then, for example, use it to look for properties of the new window or access 
		 its methods, assuming that your main versus secondary window relationship complies with Same origin policy security requirements.
		 
		 </apiDesc><apiOperationClassifier>dom:WindowProxy</apiOperationClassifier></apiReturn><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This is the URL to be loaded in the newly opened window. It can be an HTML document on the web, 
		 it can be an image file or any type of file which is supported by the browser.
		 </apiDesc></apiParam><apiParam><apiItemName>windowName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This is the string that just names the new window. Such string can be used to be the target 
		 of links and forms when the target attribute of an &lt;a&gt; element or of a &lt;form&gt; is specified. This string parameter 
		 should not contain any blank space. strWindowName does not specify the title of the new window.
		 </apiDesc></apiParam><apiParam><apiItemName>windowFeatures</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Optional parameter. This parameter is the string which lists the requested window features 
		 (window functionalities and toolbars) of the new browser window. This string parameter must not contain any blank space. 
		 Each requested window feature must be separated by a comma inside the character string.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Creates a new secondary browser window and loads the referenced resource.
		 
		 <p>The open() method creates a new secondary browser window, similar to choosing New Window from the File menu. The strUrl 
		 parameter specifies the URL to be fetched and loaded in the new window. If strUrl is an empty string, then a new blank, empty 
		 window (URL about:blank loaded) is created with the default toolbars of the main window.</p>
		 
		 <p>Note: Note that remote URLs won't load immediately. When window.open() returns, the window always contains about:blank. The 
		 actual fetching of the URL is deferred and starts after the current script block finishes executing. The window creation and 
		 the loading of the referenced resource are done asynchronously.</p>
		 
		 <p>Note: If you use the strWindowFeatures parameter, then only list the features you want to include in the new window, that 
		 you want to be enabled or rendered; the others (except titlebar and close) will be disabled, removed.</p>
		 
		 <h3>Position and size features</h3>
		 <p>
		 	<dl>
		 		<dt>left</dt>
		 		<dd>Specifies the distance the new window is placed from the left side of the work area for applications of the user's operating system to the leftmost border (resizing handle) of the browser window. The new window can not be initially positioned offscreen.</dd>
		 		<dd> Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/>, <adobeimage alt="Opera 6+" href="images/Opera6.gif"/></dd>
		 	</dl>
		 	<dl>
		 		<dt>top</dt>
		 		<dd>Specifies the distance the new window is placed from the top side of the work area for applications of the user's operating system to the topmost border (resizing handle) of the browser window. The new window can not be initially positioned offscreen. </dd>
		 		<dd> Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/>, <adobeimage alt="Opera 6+" href="images/Opera6.gif"/></dd>
		 	</dl>
		 	<dl>
		 		<dt>height</dt>
		 		<dd>Specifies the height of the content area, viewing area of the new secondary window in pixels. The height value includes the height of the horizontal scrollbar if present. The minimum required value is 100.</dd>
		 		<dd> Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/>, <adobeimage alt="Opera 6+" href="images/Opera6.gif"/></dd>
		 	</dl>
		 	<dl>
		 		<dt>width</dt>
		 		<dd>Specifies the width of the content area, viewing area of the new secondary window in pixels. The width value includes the width of the vertical scrollbar if present. The width value does not include the sidebar if it is expanded. The minimum required value is 100. </dd>
		 		<dd> Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/>, <adobeimage alt="Opera 6+" href="images/Opera6.gif"/></dd>
		 	</dl>
		 	<dl>
		 		<dt>screenX</dt>
		 		<dd>Deprecated. Same as left but only supported by Netscape and Mozilla-based browsers. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>screenY</dt>
		 		<dd>Deprecated. Same as top but only supported by Netscape and Mozilla-based browsers. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>centerscreen</dt>
		 		<dd>Centers the window in relation to its parent's size and position. Requires chrome=yes. </dd>
		 	</dl>
		 	<dl>
		 		<dt>outerHeight</dt>
		 		<dd>Specifies the height of the whole browser window in pixels. This outerHeight value includes any/all present toolbar, window horizontal scrollbar (if present) and top and bottom window resizing borders. Minimal required value is 100. </dd>
		 		<dd><b>Note</b>: since titlebar is always rendered, then requesting outerHeight=100 will make the innerHeight of the browser window under the minimal 100 pixels. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>outerWidth</dt>
		 		<dd>Specifies the width of the whole browser window in pixels. This outerWidth value includes the window vertical scrollbar (if present) and left and right window resizing borders. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>innerHeight</dt>
		 		<dd>Same as height but only supported by Netscape and Mozilla-based browsers. Specifies the height of the content area, viewing area of the new secondary window in pixels. The <var>innerHeight</var> value includes the height of the horizontal scrollbar if present. Minimal required value is 100. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>innerWidth</dt>
		 		<dd>Same as width but only supported by Netscape and Mozilla-based browsers. Specifies the width of the content area, viewing area of the new secondary window in pixels. The innerWidth value includes the width of the vertical scrollbar if present. The innerWidth value does not include the sidebar if it is expanded. Minimal required value is 100. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 </p>
		 
		 <h3>Toolbar and chrome features</h3>
		 <p>
		 	<dl>
		 		<dt>menubar</dt>
		 		<dd>If this feature is set to yes, then the new secondary window renders the menubar. </dd>
		 		<dd>Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>toolbar</dt>
		 		<dd>If this feature is set to <var>yes</var>, then the new secondary window renders the Navigation Toolbar (Back, Forward, Reload, Stop buttons). In addition to the Navigation Toolbar, Mozilla-based browsers will render the Tab Bar if it is visible, present in the parent window. (If this feature is set to <var>no</var> all toolbars in the window will be invisible, for example extension toolbars). </dd>
		 		<dd>Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>location</dt>
		 		<dd>If this feature is set to <var>yes</var>, then the new secondary window renders the Location bar in Mozilla-based browsers. MSIE 5+ and Opera 7.x renders the Address Bar. </dd>
		 		<dd>Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/>, <adobeimage alt="Opera 6+" href="images/Opera6.gif"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>directories</dt>
		 		<dd>If this feature is set to <var>yes</var>, then the new secondary window renders the Personal Toolbar in Netscape 6.x, Netscape 7.x and Mozilla browser. It renders the Bookmarks Toolbar in Firefox 1.x and, in MSIE 5+, it renders the Links bar. In addition to the Personal Toolbar, Mozilla browser will render the Site Navigation Bar if such toolbar is visible, present in the parent window. </dd>
		 		<dd>Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>personalbar</dt>
		 		<dd>Same as <var>directories</var> but only supported by Netscape and Mozilla-based browsers. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>status</dt>
		 		<dd>If this feature is set to <var>yes</var>, then the new secondary window has a status bar. Users can force the rendering of status bar in all Mozilla-based browsers, in MSIE 6 SP2 and in Opera 6+. The default preference setting in recent Mozilla-based browser releases and in Firefox 1.0 is to force the presence of the status bar. </dd>
		 		<dd> Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 </dl>
		 </p>
		 
		 <h3>Window functionality features</h3>
		 <p>
		 	<dl>
		 		<dt>resizable</dt>
		 		<dd>If this feature is set to <var>yes</var>, the new secondary window will be resizable. </dd>
		 		<dd><b>Note</b>: Starting with version 1.4, Mozilla-based browsers have a window resizing grippy at the right end of the status bar, this ensures that users can resize the browser window even if the web author requested this secondary window to be non-resizable. In such case, the maximize/restore icon in the window's titlebar will be disabled and the window's borders won't allow resizing but the window will still be resizable via that grippy in the status bar. </dd>
		 		<dd>Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>scrollbars</dt>
		 		<dd>If this feature is set to <var>yes</var>, the new secondary window will show horizontal and/or vertical scrollbar(s) if the document doesn't fit into the window's viewport. </dd>
		 		<dd>Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>dependent</dt>
		 		<dd>If set to <var>yes</var>, the new window is said to be dependent of its parent window. A dependent window closes when its parent window closes. A dependent window is minimized on the Windows task bar only when its parent window is minimized. On Windows platforms, a dependent window does not show on the task bar. A dependent window also stays in front of the parent window. </dd>
		 		<dd>Dependent windows are not implemented on MacOS X, this option will be ignored. </dd>
		 		<dd>The dependent feature is currently under revision to be removed.</dd>
		 		<dd>In MSIE 6, the nearest equivalent to this feature is the <codeph>showModelessDialog()</codeph> method. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>dialog</dt>
		 		<dd>The <codeph>dialog</codeph> feature removes all icons (restore, minimize, maximize) from the window's titlebar, leaving only the close button. Mozilla 1.2+ and Netscape 7.1 will render the other menu system commands (in FF 1.0 and in NS 7.0x, the command system menu is not identified with the Firefox/NS 7.0x icon on the left end of the titlebar: that's probably a bug. You can access the command system menu with a right-click on the titlebar). Dialog windows are windows which have no minimize system command icon and no maximize/restore down system command icon on the titlebar nor in correspondent menu item in the command system menu. They are said to be dialog because their normal, usual purpose is to only notify info and to be dismissed, closed. On Mac systems, dialog windows have a different window border and they may get turned into a sheet. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>minimizable</dt>
		 		<dd>This setting can only apply to dialog windows; "minimizable" requires <codeph>dialog=yes</codeph>. If <codeph>minimizable</codeph> is set to <var>yes</var>, the new dialog window will have a minimize system command icon in the titlebar and it will be minimizable. Any non-dialog window is always minimizable and <codeph>minimizable=no</codeph> will be ignored. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>fullscreen</dt>
		 		<dd>Do not use. Not implemented in Mozilla. There are no plans to implement this feature in Mozilla. </dd>
		 		<dd>This feature no longer works in MSIE 6 SP2 the way it worked in MSIE 5.x. The Windows taskbar, as well as the titlebar and the status bar of the window are not visible, nor accessible when fullscreen is enabled in MSIE 5.x. </dd>
		 		<dd><codeph>fullscreen</codeph> always upsets users with large monitor screen or with dual monitor screen. Forcing <codeph>fullscreen</codeph> onto other users is also extremely unpopular and is considered an outright rude attempt to impose web author's viewing preferences onto users. </dd>
		 		<dd>Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/> </dd><dd> <codeph>fullscreen</codeph> does not really work in MSIE 6 SP2. </dd>
		 	</dl>
		 </p>
		 
		 
		 <h3>Features requiring privileges</h3>
		 <p>
		 	The following features require the UniversalBrowserWrite privilege, otherwise they will be ignored. Chrome scripts have this privilege automatically, others have to request it from the PrivilegeManager.
		 	<dl>
		 		<dt>chrome</dt>
		 		<dd><b>Note</b>: Starting with Mozilla 1.7/Firefox 0.9, this feature requires the <codeph>UniversalBrowserWrite</codeph> privilege. Without this privilege, it is ignored. </dd>
		 		<dd>If set to <var>yes</var>, the page is loaded as window's only content, without any of the browser's interface elements. There will be no context menu defined by default and none of the standard keyboard shortcuts will work. The page is supposed to provide a user interface of its own, usually this feature is used to open XUL documents (standard dialogs like the JavaScript Console are opened this way). </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>modal</dt>
		 		<dd><b>Note</b>: Starting with Mozilla 1.2.1, this feature requires the <codeph>UniversalBrowserWrite</codeph> privilege. Without this privilege, it is ignored. </dd>
		 		<dd>If set to <var>yes</var>, the new window is said to be modal. The user cannot return to the main window until the modal window is closed. A typical modal window is created by the <xref href="http://developer.mozilla.org/en/DOM/window.alert">alert() function</xref>. </dd>
		 		<dd>The exact behavior of modal windows depends on the platform and on the Mozilla release version. </dd>
		 		<dd>Note: The MSIE 6 equivalent to this feature is the showModalDialog() method. For compatibility reasons, it is now also supported in Firefox 3.</dd>
		 		<dd>Supported in: <adobeimage alt="Internet Explorer 5+" href="images/MSIE_ico.png"/>, <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/>, <adobeimage alt="Opera 6+" href="images/Opera6.gif"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>titlebar</dt>
		 		<dd>By default, all new secondary windows have a titlebar. If set to <var>no</var>, this feature removes the titlebar from the new secondary window. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>alwaysRaised</dt>
		 		<dd>If set to <var>yes</var>, the new window will always be displayed on top of other browser windows, regardless of whether it is active or not. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>alwaysLowered</dt>
		 		<dd>If set to <var>yes</var>, the new created window floats below, under its own parent when the parent window is not minimized. alwaysLowered windows are often referred as pop-under windows. The alwaysLowered window can not be on top of the parent but the parent window can be minimized. In NS 6.x, the alwaysLowered window has no minimize system command icon and no restore/maximize system command. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 	<dl>
		 		<dt>z-lock</dt>
		 		<dd>Same as <codeph>alwaysLowered</codeph>. </dd>
		 	</dl>
		 	<dl>
		 		<dt>close</dt>
		 		<dd>When set to <var>no</var>, this feature removes the system close command icon and system close menu item. It will only work for dialog windows (<codeph>dialog</codeph> feature set). <codeph>close=no</codeph> will override <codeph>minimizable=yes</codeph>. </dd>
		 		<dd>Supported in: <adobeimage alt="Netscape 6.x" href="images/Ns6.gif"/>, <adobeimage alt="Netscape 7.x" href="images/NS7_ico4.gif"/>, <adobeimage alt="Mozilla 1.x" href="images/Mozilla1_ico.png"/>, <adobeimage alt="Firefox 1.x" href="images/FF1x.png"/> </dd>
		 	</dl>
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script type="text/javascript"&gt;
		 var WindowObjectReference = null; // global variable
		 
		 function openFFPromotionPopup()	{
		 	if(WindowObjectReference == null || WindowObjectReference.closed) {
		 		//if the pointer to the window object in memory does not exist or if such pointer exists but the window was closed
		 		WindowObjectReference = window.open("http://www.spreadfirefox.com/", "PromoteFirefoxWindowName", "resizable=yes,scrollbars=yes,status=yes");
		 		// then create it. The new window will be created and will be brought on top of any other window.
		 	} else {
		 		WindowObjectReference.focus();
		 		// else the window reference must exist and the window is not closed; therefore, we can bring it back on top of any other window with the focus() method. There would be no need to re-create the window or to reload the referenced resource.
		 	};
		 }
		 &lt;/script&gt;
		 
		 (...)
		 
		 &lt;p&gt;&lt;a href="http://www.spreadfirefox.com/" target="PromoteFirefoxWindowName" onclick="openFFPromotionPopup(); return false;" title="This link will create a new window or will re-use an already opened one"&gt;Promote Firefox adoption&lt;/a&gt;&lt;/p&gt;
		 
		 </codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://www.evolt.org/article/Links_and_JavaScript_Living_Together_in_Harmony/17/20938/"><linktext>Links &amp; JavaScript Living Together in Harmony</linktext></link><link href="http://www.cs.tut.fi/~jkorpela/www/links.html"><linktext>Links Want To Be Links</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:openDialog"><apiName>openDialog</apiName><shortdesc>
		 DOM Level 0 
		 
		 window.openDialog is an extension to window.open.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The opened window 
		 
		 </apiDesc><apiOperationClassifier>dom:WindowProxy</apiOperationClassifier></apiReturn><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This is the URL to be loaded in the newly opened window. It can be an HTML document on the web, 
		 it can be an image file or any type of file which is supported by the browser.
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>This is the string that just names the new window. Such string can be used to be the target 
		 of links and forms when the target attribute of an &lt;a&gt; element or of a &lt;form&gt; is specified. This string parameter 
		 should not contain any blank space. strWindowName does not specify the title of the new window.
		 </apiDesc></apiParam><apiParam><apiItemName>features</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Optional parameter. This parameter is the string which lists the requested window features 
		 (window functionalities and toolbars) of the new browser window. This string parameter must not contain any blank space. 
		 Each requested window feature must be separated by a comma inside the character string.
		 </apiDesc></apiParam><apiParam><apiItemName>args</apiItemName><apiType value="restParam"/><apiDesc>The arguments to be passed to the new window (optional). 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 window.openDialog is an extension to window.open. It behaves the same, except that it can optionally take one or more parameters past windowFeatures, and windowFeatures itself is treated a little differently. 
		 
		 <p>The optional parameters, if present, will be bundled up in a JavaScript Array object and added to the newly created window as a property named window.arguments. They may be referenced in the JavaScript of the window at 
		 any time, including during the execution of a load handler. These parameters may be used, then, to pass arguments to and from the dialog window. </p>
		 
		 <p>Note: The call to openDialog() returns immediately. If you want the call to block until the user has closed the dialog, supply modal as a 
		 windowFeatures parameter.</p>
		 
		 <p>Note: This also means the user won't be able to interact with the opener window until he closes the modal dialog. </p>
		 
		 <h3>Passing extra parameters to the dialog</h3>
		 <p>
		 To pass extra parameters into the dialog, you can simply supply them after the windowFeatures parameter: 
		 <codeblock>openDialog("http://example.tld/zzz.xul", "dlg", "", "pizza", 6.98);</codeblock>
		 The extra parameters will then get packed into a property named arguments of type Array, and this property gets added to the newly opened dialog window. 
		 </p>
		 
		 <p>
		 To access these extra parameters from within dialog code, use the following scheme: 
		 
		 <codeblock>
		 var food  = window.arguments[0];
		 var price = window.arguments[1];</codeblock>
		 
		 Note that you can access this property from within anywhere in the dialog code. 
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var win = openDialog("http://example.tld/zzz.xul", "dlg", "", "pizza", 6.98);</codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:postMessage"><apiName>postMessage</apiName><shortdesc>
		 HTML5 | Firefox 3 
		 
		 window.postMessage is a method for safely enabling cross-origin communication.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>message</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>String data to be sent to the other window. 
		 </apiDesc></apiParam><apiParam><apiItemName>targetOrigin</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies what the origin of otherWindow must be for the event to be dispatched, either as the literal 
		 string "~~" (indicating no preference) or as a URI. If at the time the event is scheduled to be dispatched the scheme, hostname, 
		 or port of otherWindow's document does not match that provided in targetOrigin, the event will not be dispatched; only if all 
		 three match will the event be dispatched. This mechanism provides control over where messages are sent; for example, if 
		 postMessage were used to transmit a password, it would be absolutely critical that this argument be a URI whose origin is the
		 same as the intended receiver of the message containing the password, to prevent interception of the password by a malicious third party. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>HTML5 | Firefox 3</b> 
		 
		 window.postMessage is a method for safely enabling cross-origin communication.
		 
		 <p>Normally, scripts on different pages are only allowed to access each other if and only if the pages which executed them 
		 are at locations with the same protocol (usually both http), port number (80 being the default for http), and host (modulo 
		 document.domain being set by both pages to the same value). window.postMessage provides a controlled mechanism to circumvent 
		 this restriction in a way which is secure when properly used.</p>
		 
		 <p>window.postMessage, when called, causes a MessageEvent to be dispatched at the target window when any pending script that 
		 must be executed completes (e.g. remaining event handlers if window.postMessage is called from an event handler, previously-set 
		 pending timeouts, etc.). The MessageEvent has the type message, a data property which is set to the string value of the first 
		 argument provided to window.postMessage, an origin property corresponding to the origin of the main document in the window 
		 calling window.postMessage at the time window.postMessage was called, and a source property which is the window from which 
		 window.postMessage is called. (Other standard properties of events are present with their expected values.)</p>
		 
		 <p>Note: Any window may access this method on any other window, at any time, regardless of the location of the document in 
		 the window, to send it a message. Consequently, any event listener used to receive messages must first check the identity of 
		 the sender of the message, using the origin and possibly source properties. This cannot be understated: Failure to check the 
		 origin and possibly source properties enables cross-site scripting attacks.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // otherWindow: A reference to another window; such a reference may be obtained, for example, using the 
		 // contentWindow property of an iframe element, the object returned by window.open, or by named or 
		 // numeric index on window.frames. 
		 otherWindow.postMessage(message, targetOrigin);</codeblock>
		 
		 <codeblock>
		 // In window A's scripts, with A being on &lt;http://example.com:8080&gt;:
		 
		 var popup = window.open(...popup details...);
		 
		 // When the popup has fully loaded, if not blocked by a popup blocker:
		 
		 // This does nothing, assuming the window hasn't changed its location.
		 popup.postMessage("The user is 'bob' and the password is 'secret'", "http://secure.example.net");
		 
		 // This will successfully queue a message to be sent to the popup, assuming the window hasn't changed its location.
		 popup.postMessage("hello there!", "http://example.org");
		 
		 function receiveMessage(event) {
		 		// Do we trust the sender of this message?  (might be different from what we originally opened, for example).
		 		if (event.origin !== "http://example.org") return;
		 
		 		// event.source is popup
		 		// event.data is "hi there yourself!  the secret response is: rheeeeet!"
		 }
		 window.addEventListener("message", receiveMessage, false);</codeblock>
		 
		 <codeblock>
		 // In the popup's scripts, running on &lt;http://example.org&gt;:
		 
		 // Called sometime after postMessage is called
		 function receiveMessage(event) {
		 		// Do we trust the sender of this message?
		 		if (event.origin !== "http://example.com:8080") return;
		 
		 		// event.source is window.opener
		 		// event.data is "hello there!"
		 
		 		// Assuming you've verified the origin of the received message (which
		 		// you must do in any case), a convenient idiom for replying to a
		 		// message is to call postMessage on event.source and provide event.origin as the targetOrigin.
		 		event.source.postMessage("hi there yourself!  the secret response " + "is: rheeeeet!", event.origin);
		 }
		 
		 window.addEventListener("message", receiveMessage, false);</codeblock>
		 </example></apiOperationDetail><related-links><link href="dom.events.xml#MessageEvent"><linktext>dom.events.MessageEvent</linktext></link><link href="dom.core.xml#Document/domain"><linktext>dom.core.Document.domain</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:print"><apiName>print</apiName><shortdesc>
		 DOM Level 0 
		 
		 Opens the Print Dialog to print the current document.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Opens the Print Dialog to print the current document. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:prompt"><apiName>prompt</apiName><shortdesc>
		 DOM Level 0 
		 
		 Displays a dialog with a message prompting the user to input some text.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The text entered by the user, or the value null. 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>text</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Text to display to the user. 
		 </apiDesc></apiParam><apiParam><apiItemName>value</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The default value displayed in the text input field. It is an optional parameter. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Displays a dialog with a message prompting the user to input some text. 
		 
		 <p>Note: A prompt dialog contains a single-line textbox, a Cancel button, and an OK button, and returns the 
		 (possibly empty) text the user inputted into that textbox. </p>
		 
		 <p>Note: Dialog boxes are modal windows - they prevent the user from accessing the rest of the program's interface 
		 until the dialog box is closed. For this reason, you should not overuse any function that creates a dialog box 
		 (or modal window). </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:releaseEvents"><apiName>releaseEvents</apiName><shortdesc>
		 DOM Level 0 | OBSOLETE
		 
		 Releases the window from trapping events of a specific type.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>eventType</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The event type to release.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0 | OBSOLETE</b>
		 
		 Releases the window from trapping events of a specific type. 
		 
		 <p>Note: that you can pass a list of events to this method using the following syntax: 
		 window.releaseEvents(Event.KEYPRESS | Event.KEYDOWN | Event.KEYUP). </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 window.releaseEvents(Event.KEYPRESS)</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="dom.xml#Window/captureEvents()"><linktext>dom.Window.captureEvents()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:removeEventListener"><apiName>removeEventListener</apiName><shortdesc>
		 
		 Removes an event listener.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.type for which the user registered 
		 the event listener.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The EventListener to be removed.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Specifies whether the EventListener being removed 
		 was registered for the capture phase or not. If a listener was 
		 registered twice, once for the capture phase and once for the target 
		 and bubbling phases, each must be removed separately. Removal of an 
		 event listener registered for the capture phase does not affect the 
		 same event listener registered for the target and bubbling phases, 
		 and vice versa.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Removes an event listener.
		 
		 <p>Calling removeEventListener with arguments 
		 which do not identify any currently registered EventListener on the 
		 EventTarget has no effect. The Event.namespaceURI for which the user 
		 registered the event listener is implied and is null.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:removeEventListenerNS"><apiName>removeEventListenerNS</apiName><shortdesc>
		 
		 Removes an event listener.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.namespaceURI associated with the event for which the user registered the event listener.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the Event.type for which the user registered 
		 the event listener.
		 </apiDesc></apiParam><apiParam><apiItemName>listener</apiItemName><apiOperationClassifier>dom.events:EventListener</apiOperationClassifier><apiDesc>The EventListener to be removed.
		 </apiDesc></apiParam><apiParam><apiItemName>useCapture</apiItemName><apiType value="Boolean"/><apiDesc>Specifies whether the EventListener being removed 
		 was registered for the capture phase or not. If a listener was 
		 registered twice, once for the capture phase and once for the target 
		 and bubbling phases, each must be removed separately. Removal of an 
		 event listener registered for the capture phase does not affect the 
		 same event listener registered for the target and bubbling phases, 
		 and vice versa.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Removes an event listener. Calling removeEventListenerNS with arguments 
		 which do not identify any currently registered EventListener on the 
		 EventTarget has no effect. 
		  
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:resizeBy"><apiName>resizeBy</apiName><shortdesc>
		 DOM Level 0 
		 
		 Resizes the current window by a certain amount.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>xDelta</apiItemName><apiType value="Number"/><apiDesc>The number of pixels to grow the window horizontally. 
		 </apiDesc></apiParam><apiParam><apiItemName>yDelta</apiItemName><apiType value="Number"/><apiDesc>The number of pixels to grow the window vertically. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Resizes the current window by a certain amount. 
		 
		 <p>Note: This method resizes the window relative to its current size. To resize the window 
		 in absolute terms, use window.resizeTo. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // shrink the window 
		 window.resizeBy(-200, -200);</codeblock>
		 </example></apiOperationDetail><related-links><link href="dom.xml#Window/resizeTo()"><linktext>dom.Window.resizeTo()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:resizeTo"><apiName>resizeTo</apiName><shortdesc>
		 DOM Level 0 
		 
		 Dynamically resizes window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>width</apiItemName><apiType value="Number"/><apiDesc>The new width in pixels. 
		 </apiDesc></apiParam><apiParam><apiItemName>height</apiItemName><apiType value="Number"/><apiDesc>The new height in pixels. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Dynamically resizes window. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="dom.xml#Window/resizeBy()"><linktext>dom.Window.resizeBy()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:restore"><apiName>restore</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/window.restore"><linktext>http://developer.mozilla.org/En/DOM/window.restore</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:routeEvent"><apiName>routeEvent</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Window.routeEvent"><linktext>http://developer.mozilla.org/En/DOM/Window.routeEvent</linktext></link><link href="dom.xml#Window/captureEvents()"><linktext>dom.Window.captureEvents()</linktext></link><link href="dom.xml#Window/releaseEvents()"><linktext>dom.Window.releaseEvents()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:scroll"><apiName>scroll</apiName><shortdesc>
		 DOM Level 0 
		 
		 Scrolls the window to a particular place in the document.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>xCoord</apiItemName><apiType value="Number"/><apiDesc>The pixel along the horizontal axis of the document that you want displayed in the upper left. 
		 </apiDesc></apiParam><apiParam><apiItemName>yCoord</apiItemName><apiType value="Number"/><apiDesc>The pixel along the vertical axis of the document that you want displayed in the upper left. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Scrolls the window to a particular place in the document. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // put the 100th vertical pixel at the top of the window 
		 &lt;button onClick="scroll(0, 100);"&gt;click to scroll down 100 pixels&lt;/button&gt;</codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:scrollBy"><apiName>scrollBy</apiName><shortdesc>
		 DOM Level 0 
		 
		 Scrolls the document in the window by the given amount.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>x</apiItemName><apiType value="Number"/><apiDesc>the offset in pixels to scroll horizontally. 
		 </apiDesc></apiParam><apiParam><apiItemName>y</apiItemName><apiType value="Number"/><apiDesc>the offset in pixels to scroll vertically. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Scrolls the document in the window by the given amount. 
		 
		 <p>Note: Positive co-ordinates will scroll to the right and down the page. Negative values 
		 will scroll to the left and up the page. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // scroll one page 
		 window.scrollBy(0, window.innerHeight);</codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:scrollByLines"><apiName>scrollByLines</apiName><shortdesc>
		 DOM Level 0 
		 
		 Scrolls the document by the given number of lines.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>lines</apiItemName><apiType value="Number"/><apiDesc>The number of lines to scroll the document by. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Scrolls the document by the given number of lines. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // scroll down the document by 5 lines.
		 &lt;button onclick="scrollByLines(5);"&gt;down 5 lines&lt;/button&gt;</codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:scrollByPages"><apiName>scrollByPages</apiName><shortdesc>
		 DOM Level 0 
		 
		 Scrolls the current document by the specified number of pages.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>pages</apiItemName><apiType value="Number"/><apiDesc>The number of pages to scroll. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Scrolls the current document by the specified number of pages. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // scroll down the document by 1 page 
		 window.scrollByPages(1);</codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:scrollTo"><apiName>scrollTo</apiName><shortdesc>
		 DOM Level 0 
		 
		 Scrolls to a particular set of coordinates in the document.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>xCoord</apiItemName><apiType value="Number"/><apiDesc>The pixel along the horizontal axis of the document that you want displayed in the upper left. 
		 </apiDesc></apiParam><apiParam><apiItemName>yCoord</apiItemName><apiType value="Number"/><apiDesc>The pixel along the vertical axis of the document that you want displayed in the upper left. 
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Scrolls to a particular set of coordinates in the document. 
		 
		 </apiDesc><example>
		 <codeblock>window.scrollTo(0, 1000);</codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:setCursor"><apiName>setCursor</apiName><shortdesc>
		 DOM Level 0 
		 
		 Changes the cursor for the current window.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>state</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>What state to set the cursor to. Valid settings can be: "wait", "auto"...
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Changes the cursor for the current window. 
		 
		 <p>Note: The cursor isn't reset until it's set back to auto.</p>
		 
		 <p>Note: This function is unavailable to web pages, which can use CSS cursor property instead.</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:setInterval"><apiName>setInterval</apiName><shortdesc>
		 DOM Level 0 
		 
		 Calls a function repeatedly, with a fixed time delay between each call to that function.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A unique interval ID
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>func</apiItemName><apiType value="Function"/><apiDesc>The function you want to be called repeatedly.
		 </apiDesc></apiParam><apiParam><apiItemName>delay</apiItemName><apiType value="Number"/><apiDesc>The number of milliseconds (thousandths of a second) that the setInterval() function should wait before each call to func.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Calls a function repeatedly, with a fixed time delay between each call to that function.
		 
		 Note: setInterval() will pass the number of milliseconds late the callback was called into 
		 the callback function, which can confuse it if it expects something else as an argument. To 
		 sidestep that problem, use an anonymous function to call your callback.
		 
		 Note: When you pass a method to setInterval() (or any other function, for that matter), it 
		 will be invoked with a wrong <codeph>this</codeph> value.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="dom.xml#Window/clearInterval()"><linktext>clearInterval()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:setResizable"><apiName>setResizable</apiName><shortdesc>
		 Undocumented
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Undocumented
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/window.setResizable"><linktext>http://developer.mozilla.org/En/DOM/window.setResizable</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:setTimeout"><apiName>setTimeout</apiName><shortdesc>
		 DOM Level 0 
		 
		 Executes a code snippet or a function after specified delay.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The ID of the timeout
		 
		 </apiDesc><apiType value="Number"/></apiReturn><apiParam><apiItemName>func</apiItemName><apiType value="Function"/><apiDesc>The function you want to execute after delay milliseconds. 
		 </apiDesc></apiParam><apiParam><apiItemName>delay</apiItemName><apiType value="Number"/><apiDesc>The number of milliseconds (thousandths of a second) that the function call should be delayed by. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Executes a code snippet or a function after specified delay. 
		 
		 Note: Code executed by setTimeout() is run in a separate execution context to the function from 
		 which it was called. As a consequence, the <codeph>this</codeph> keyword for the called function will be set to 
		 the window (or global) object, it will not be the same as the <codeph>this</codeph> value for the function that 
		 called setTimeout.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="dom.xml#Window/clearTimeout()"><linktext>clearTimeout()</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:showModalDialog"><apiName>showModalDialog</apiName><shortdesc>
		 Non-Standard | IE4 Firefox3 
		 
		 Creates and displays a modal dialog box containing a specified HTML document.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The returnValue property as set by the window of the document specified by uri. 
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>uri</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The URI of the document to display in the dialog box. 
		 </apiDesc></apiParam><apiParam><apiItemName>arguments</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiData>null</apiData><apiDesc>An optional variant that contains values that should be passed to the dialog box; these are made available in the window object's window.dialogArguments property. 
		 </apiDesc></apiParam><apiParam><apiItemName>options</apiItemName><apiType value=""/><apiData>null</apiData><apiDesc>An optional string that specifies window ornamentation for the dialog box, using one or more semicolon delimited values: 
		 <dl><dt>center: {on | off | yes | no | 1 | 0 }</dt><dd>If this argument's value is on, yes, or 1, the dialog window is centered on the desktop; otherwise it's hidden. The default value is yes. </dd></dl>
		 <dl>dialogheight: <i>height</i><dt/><dd>	Specifies the height of the dialog box; by default, the size is specified in pixels. </dd></dl>
		 <dl><dt>dialogleft: <i>left</i></dt><dd>	Specifies the horizontal position of the dialog box in relation to the upper-left corner of the desktop. </dd></dl>
		 <dl><dt>dialogwidth: <i>width</i></dt><dd>Specifies the width of the dialog box; by default, the size is specified in pixels. </dd></dl>
		 <dl><dt>dialogtop: <i>top</i></dt><dd>Specifies the vertical position of the dialog box in relation to the upper-left corner of the desktop. </dd></dl>
		 <dl><dt>resizable: {on | off | yes | no | 1 | 0 }</dt><dd>If this argument's value is on, yes, or 1, the dialog window can be resized by the user; otherwise its size is fixed. The default value is no. </dd></dl>
		 <dl><dt>scroll: {on | off | yes | no | 1 | 0 }</dt><dd>If this argument's value is on, yes, or 1, the dialog window has scroll bars; otherwise its size is fixed. The default value is no. </dd></dl>
		 <dl><dt>dialogHide:{ yes | no | 1 | 0 | on | off }</dt><dd>Specifies whether the dialog window is hidden when printing or using print preview. This feature is only available when a dialog box is opened from a trusted application. The default is no.</dd></dl>
		 <dl><dt>edge:{ sunken | raised }</dt><dd>Specifies the edge style of the dialog window. The default is raised.</dd></dl>
		 <dl><dt>status:{ yes | no | 1 | 0 | on | off }</dt><dd>Specifies whether the dialog window displays a status bar. The default is yes for untrusted dialog windows and no for trusted dialog windows.</dd></dl>
		 <dl><dt>unadorned:{ yes | no | 1 | 0 | on | off }</dt><dd>Specifies whether the dialog window displays the border window chrome. This feature is only available when a dialog box is opened from a trusted application. The default is no.</dd></dl>
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>Non-Standard | IE4 Firefox3</b> 
		 
		 Creates and displays a modal dialog box containing a specified HTML document. 
		 
		 <p>Note: Firefox does not implement the dialogHide, edge, status, or unadorned arguments.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536759(VS.85).aspx"><linktext>MSDN: showModalDialog Method</linktext></link></related-links></apiOperation><apiOperation id="dom:Window:sizeToContent"><apiName>sizeToContent</apiName><shortdesc>
		 DOM Level 0 
		 
		 Sizes the window according to its content.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Sizes the window according to its content. 
		 
		 <p>The DOM content should be loaded when this function is called, for example after the DOMContentLoaded event. </p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:stop"><apiName>stop</apiName><shortdesc>
		 DOM Level 0 
		 
		 This method stops window loading.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 This method stops window loading. 
		 
		 <p>Note: The stop() method is exactly equivalent to clicking the stop button in the browser. Because of the order 
		 in which scripts are loaded, the stop() method cannot stop the document in which it is contained from loading, but
		 it will stop the loading of large images, new windows, and other objects whose loading is deferred.</p>
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom:Window:unescape"><apiName>unescape</apiName><shortdesc>
		 DOM Level 0 
		 
		 Decodes a value that has been encoded in hexadecimal (e.g., a cookie).</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The decoded string. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>escaped</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The encoded string. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Decodes a value that has been encoded in hexadecimal (e.g., a cookie). 
		 
		 </apiDesc><example>
		 <codeblock>
		 alert(unescape("%5C")); // displays "\"</codeblock>
		 </example></apiOperationDetail></apiOperation><apiOperation id="dom:Window:updateCommands"><apiName>updateCommands</apiName><shortdesc>
		 DOM Level 0 
		 
		 Updates the state of commands of the current chrome window (UI).</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>commandName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A particular string which describes what kind of update event this is (e.g. whether we are in bold right now). 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Updates the state of commands of the current chrome window (UI). 
		 
		 <p>Note: This enables or disables items (setting or clearing the "disabled" attribute on the command 
		 node as appropriate), or ensures that the command state reflects the state of the selection by setting 
		 current state information in the "state" attribute of the XUL command nodes. </p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom:Window:Components:get"><apiName>Components</apiName><shortdesc>
		 Non-Standard | Firefox 
		 
		 The Components object is the object through which XPConnect functionality is reflected into JavaScript.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIXPCComponents</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox</b> 
		 
		 The Components object is the object through which XPConnect functionality is reflected into JavaScript.
		 
		 Some properties of Components require advanced privileges and may not work in web pages. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:applicationCache:get"><apiName>applicationCache</apiName><shortdesc>
		 Non-Standard | Firefox 3+ 
		 
		 Returns a reference to the application cache object for the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIDOMOfflineResourceList</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b> 
		 
		 Returns a reference to the application cache object for the window. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.whatwg.org/specs/web-apps/current-work/#applicationcache"><linktext>http://www.whatwg.org/specs/web-apps/current-work/#applicationcache</linktext></link></related-links></apiValue><apiValue id="dom:Window:closed:get"><apiName>closed</apiName><shortdesc>
		 DOM Level 0 
		 
		 This property indicates whether the referenced window is closed or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 This property indicates whether the referenced window is closed or not. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:content:get"><apiName>content</apiName><shortdesc>
		 Non-Standard | Firefox 
		 
		 Returns a Window object for the primary content window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:Window</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox</b> 
		 
		 Returns a Window object for the primary content window.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:crypto:get"><apiName>crypto</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the browser crypto object, which can then be used to manipulate various 
		 browser security features.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Crypto</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the browser crypto object, which can then be used to manipulate various 
		 browser security features. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:defaultStatus:get"><apiName>defaultStatus</apiName><shortdesc>
		 DOM Level 0
		 
		 Gets/sets the status bar text for the given window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Gets/sets the status bar text for the given window.
		 
		 Note: To set the status once the window has been opened, use window.status.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:directories:get"><apiName>directories</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the window directories toolbar object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the window directories toolbar object. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:document:get"><apiName>document</apiName><shortdesc>
		 
		 The source DocumentView of which this is an AbstractView.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.views:DocumentView</apiValueClassifier></apiValueDef><apiDesc>
		 
		 The source DocumentView of which this is an AbstractView.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:frameElement:get"><apiName>frameElement</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns the element (such as &amp;lt;iframe&amp;gt; or &amp;lt;object&amp;gt;) in which the window is embedded, 
		 or null if the window is top-level.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns the element (such as &lt;iframe&gt; or &lt;object&gt;) in which the window is embedded, 
		 or null if the window is top-level.
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/parent"><linktext>parent</linktext></link><link href="dom.xml#Window/frames"><linktext>frames</linktext></link></related-links></apiValue><apiValue id="dom:Window:frames:get"><apiName>frames</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns an array-like object, listing the direct sub-frames of the current window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Array"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns an array-like object, listing the direct sub-frames of the current window.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:fullScreen:get"><apiName>fullScreen</apiName><shortdesc>
		 DOM Level 0 | Firefox 3+
		 
		 This property indicates whether the window is displayed in full screen mode or not.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 <b>DOM Level 0 | Firefox 3+</b>
		 
		 This property indicates whether the window is displayed in full screen mode or not.
		 
		 Note: This property is only reliable in Mozilla 1.9 (Firefox 3) and later. Mozilla 1.8 
		 and earlier do have this property, but it always returns false, even when the window 
		 is in full screen mode.
		 
		 Note: Switching between regular window and full screen will fire the "resize" event 
		 on the corresponding window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:globalStorage:get"><apiName>globalStorage</apiName><shortdesc>
		 Non-Standard | Firefox 2 
		 
		 This is a global object (globalStorage) that maintains multiple private storage areas 
		 that can be used to hold data over a long period of time (e.g.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Object"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 2</b> 
		 
		 This is a global object (globalStorage) that maintains multiple private storage areas 
		 that can be used to hold data over a long period of time (e.g. over multiple pages 
		 and browser sessions).
		 
		 Note: Firefox 2 permitted access to storage objects higher in the domain hierarchy 
		 than the current document. This is no longer allowed in Firefox 3, for security 
		 reasons. In addition, this proposed addition to HTML 5 has been removed from the 
		 HTML 5 specification in favor of localStorage, which is implemented in Firefox 3.5.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:history:get"><apiName>history</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns a reference to the History object, which provides an interface for manipulating 
		 the browser session history (pages visited in the tab or frame that the current page is loaded in).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:History</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns a reference to the History object, which provides an interface for manipulating 
		 the browser session history (pages visited in the tab or frame that the current page is loaded in).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:innerHeight:get"><apiName>innerHeight</apiName><shortdesc>
		 
		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Height of the browser window viewport including, if rendered, the horizontal scrollbar.
		 
		 <p><b>Note:</b> The innerHeight property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>
		 
		 </apiDesc><example>
		 Assuming a frameset
		 <codeblock>
		 var intFrameHeight = window.innerHeight; // or
		 var intFrameHeight = self.innerHeight; // will return the height of the frame viewport within the frameset
		 var intFramesetHeight = parent.innerHeight; // will return the height of the viewport of the closest frameset
		 var intOuterFramesetHeight = top.innerHeight; // will return the height of the viewport of the outermost frameset</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.innerHeight"><linktext>MDC - Window: innerHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: innerHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/outerWidth"><linktext>outerWidth</linktext></link><link href="dom.xml#Window/innerWidth"><linktext>innerWidth</linktext></link><link href="dom.xml#Window/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="dom:Window:innerWidth:get"><apiName>innerWidth</apiName><shortdesc>
		 
		 Width of the browser window viewport including, if rendered, the vertical scrollbar.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Width of the browser window viewport including, if rendered, the vertical scrollbar.
		 
		 <p><b>Note:</b> The innerWidth property does not include the sidebar. So when the sidebar is expanded, the innerWidth property value diminishes.</p>
		 
		 <p><b>Note:</b> The innerWidth property will be supported in any window object like a window, a frame, a frameset or a secondary window.</p>
		 
		 </apiDesc><example>
		 Assuming a frameset
		 <codeblock>
		 var intFrameWidth = window.innerWidth; // or
		 var intFrameWidth = self.innerWidth; // will return the width of the frame viewport within the frameset
		 var intFramesetWidth = parent.innerWidth; // will return the width of the viewport of the closest frameset
		 var intOuterFramesetWidth = top.innerWidth; // will return the width of the viewport of the outermost frameset</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.innerWidth"><linktext>MDC - Window: innerWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: innerWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/outerWidth"><linktext>outerWidth</linktext></link><link href="dom.xml#Window/innerHeight"><linktext>innerHeight</linktext></link><link href="dom.xml#Window/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="dom:Window:length:get"><apiName>length</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the number of frames (either frame or iframe elements) in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the number of frames (either frame or iframe elements) in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:localStorage:get"><apiName>localStorage</apiName><shortdesc>
		 Web Storage
		 
		 This is a global object that maintains multiple private storage areas 
		 that can be used to hold data over a long period of time (e.g.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>webstorage:Storage</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Web Storage</b>
		 
		 This is a global object that maintains multiple private storage areas 
		 that can be used to hold data over a long period of time (e.g. over multiple pages 
		 and browser sessions).
		 
		 Note Firefox 3.5: When the browser goes into private browsing mode, a new, temporary database 
		 is created to store local storage data; this database is empty, and is thrown away 
		 when private browsing mode is turned off.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/"><linktext>http://www.w3.org/TR/webstorage/</linktext></link></related-links></apiValue><apiValue id="dom:Window:location:get"><apiName>location</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns a  Location object, which contains information about the URL 
		 of the document and provides methods for changing that URL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Location</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns a  Location object, which contains information about the URL 
		 of the document and provides methods for changing that URL.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:locationbar:get"><apiName>locationbar</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the locationbar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the locationbar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:media:get"><apiName>media</apiName><shortdesc>
		 
		 Returns an Media object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.1b_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0b_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0a_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>cssom.view:Media</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns an Media object.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: media Property</linktext></link></related-links></apiValue><apiValue id="dom:Window:menubar:get"><apiName>menubar</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the menubar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the menubar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:name:get"><apiName>name</apiName><shortdesc>
		 DOM Level 0
		 
		 Gets/sets the name of the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Gets/sets the name of the window.
		 
		 Note: The name of the window is used primarily for setting targets for hyperlinks 
		 and forms. Windows do not need to have names.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:navigator:get"><apiName>navigator</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns a reference to the navigator object, which can be queried for information 
		 about the application running the script.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Navigator</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns a reference to the navigator object, which can be queried for information 
		 about the application running the script. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onabort:get"><apiName>onabort</apiName><shortdesc>
		 An event handler for abort events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for abort events sent to the window. (Not available with Firefox 2 or Safari) 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onbeforeunload:get"><apiName>onbeforeunload</apiName><shortdesc>
		 An event that fires before the unload event when the page is unloaded.</shortdesc><prolog><asCustoms><exampleText>The function should assign a string value to the returnValue property of the Event object and return the same string/
		 </exampleText></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event that fires before the unload event when the page is unloaded. 
		 
		 <p>Note: There is no public specification. onbeforeunload was introduced by Microsoft IE 4 and has subsequently been copied by other browsers. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 window.onbeforeunload = function (e) {
		 		var e = e || window.event;
		 
		 		// For IE and Firefox
		 		if (e) {
		 			e.returnValue = 'Any string';
		 		}
		 
		 		// For Safari
		 		return 'Any string';
		 };</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536907(VS.85).aspx"><linktext>MSDN—onbeforeunload Event</linktext></link></related-links></apiValue><apiValue id="dom:Window:onblur:get"><apiName>onblur</apiName><shortdesc>
		 DOM Level 0
		 
		 The onblur property can be used to set the blur handler on the window, which is triggered when the window loses focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 The onblur property can be used to set the blur handler on the window, which is triggered when the window loses focus. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onchange:get"><apiName>onchange</apiName><shortdesc>
		 An event handler for change events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for change events sent to the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onclick:get"><apiName>onclick</apiName><shortdesc>
		 Called when the user clicks the mouse button while the cursor is in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 Called when the user clicks the mouse button while the cursor is in the window. This event is fired for any mouse button 
		 pressed; you can look at the event properties to find out which button was pressed and where. 
		 
		 <p>Note: The click event is raised when the user clicks on the window.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onclose:get"><apiName>onclose</apiName><shortdesc>
		 An event handler for close events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for close events sent to the window. (Not available with Firefox 2 or Safari) 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:oncontextmenu:get"><apiName>oncontextmenu</apiName><shortdesc>
		 An event handler property for right-click events on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler property for right-click events on the window. 
		 
		 </apiDesc><example>
		 <codeblock>
		 window.oncontextmenu = function () {
		 		return false;
		 }
		 //this will disable right click on the page</codeblock>
		 </example></apiValueDetail></apiValue><apiValue id="dom:Window:ondragdrop:get"><apiName>ondragdrop</apiName><shortdesc>
		 An event handler for drag and drop events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for drag and drop events sent to the window. 
		 
		 <p>Note: The window.ondragdrop property and the ondragdrop attribute are not implemented in Gecko, 
		 you have to use addEventListener.</p>
		 
		 <p>Note: The event.data array available in NN4 seems to be unavailable in Gecko [1].</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/addEventListener()"><linktext>addEventListener()</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=112288"><linktext>bug 112288</linktext></link><link href="http://forums.mozillazine.org/viewtopic.php?p=863806"><linktext>[1]</linktext></link></related-links></apiValue><apiValue id="dom:Window:onerror:get"><apiName>onerror</apiName><shortdesc>
		 An event handler for error events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for error events sent to the window. 
		 
		 <p>Note: When the function returns true, this prevents the firing of the default event handler. Function parameters: 
		 <ul>
		 <li>Error message (string) </li>
		 <li>Url where error was raised (string) </li>
		 <li>Error code (number) </li>
		 </ul>
		 </p>
		 
		 <p>Note: The error event is raised when an error occurs in the script. The example above prevents error 
		 dialogs from displaying-which is the window's normal behavior-by overriding the default event handler for error events that go to the window. </p>
		 
		 <p>Note: When using the inline html markup (&lt;body onerror="alert('an error occurred')&gt;...), the arguments 
		 are not named. They can be referenced by arguments[0] through arguments[2]. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 An event handler for focus events sent to the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for focus events sent to the window. 
		 
		 <p>Note: The focus event is raised when the user sets focus on the current window. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onkeydown:get"><apiName>onkeydown</apiName><shortdesc>
		 An event handler for the keydown event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the keydown event on the window. 
		 
		 <p>Note: The keydown event is raised when the user presses any key. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onkeypress:get"><apiName>onkeypress</apiName><shortdesc>
		 An event handler for the keypress event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the keypress event on the window. 
		 
		 <p>Note: The keypress event is raised when the user presses and releases any key on the keyboard. </p>
		 
		 <p>Note: Under FF 1.0.5.4 this event fires before the keyup event is detected, i.e. it appears to work exactly like onkeydown. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onkeyup:get"><apiName>onkeyup</apiName><shortdesc>
		 An event handler for the keyup event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the keyup event on the window. 
		 
		 <p>Note: The keyup event is raised when a key that has been pressed is released. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onload:get"><apiName>onload</apiName><shortdesc>
		 DOM Level 0
		 
		 An event handler for the load event of a window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 An event handler for the load event of a window. 
		 
		 <p>Note: The load event fires at the end of the document loading process. At this point, all of the objects in the document 
		 are in the DOM, and all the images and sub-frames have finished loading. </p>
		 
		 <p>Note: There is also Gecko-Specific DOM Events like DOMContentLoaded and DOMFrameContentLoaded events (which can be handled 
		 using addEventListener) which are fired after the DOM for the page has been constructed, but don't wait for other resources 
		 to finish loading. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmousedown:get"><apiName>onmousedown</apiName><shortdesc>
		 An event handler for the mousedown event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mousedown event on the window.
		 
		 <p>Note: The mousedown event is raised when the user clicks the mouse button anywhere in the document.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmousemove:get"><apiName>onmousemove</apiName><shortdesc>
		 An event handler for the mousemove event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mousemove event on the window. 
		 
		 <p>Note: The mousemove event fires when the user moves the mouse pointer by 1 pixel or more in any direction in the browser window. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmouseout:get"><apiName>onmouseout</apiName><shortdesc>
		 An event handler for the mouseout event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mouseout event on the window. 
		 
		 <p>Note: The mouseout event is raised when the mouse leaves the area of the specified element (in this case the window itself). </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmouseover:get"><apiName>onmouseover</apiName><shortdesc>
		 An event handler for the mouseover event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mouseover event on the window. 
		 
		 <p>Note: The mouseover event is raised when the mouse pointer moves over the current element (in this case the window itself). </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onmouseup:get"><apiName>onmouseup</apiName><shortdesc>
		 An event handler for the mouseup event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the mouseup event on the window.
		 
		 <p>Note: The mouseup event is raised when the user unclicks the mouse button anywhere in the document.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onpaint:get"><apiName>onpaint</apiName><shortdesc>
		 DOM Level 0
		 
		 An event handler for the paint event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 An event handler for the paint event on the window.
		 
		 <p>Note: <codeph>onpaint</codeph> doesn't work currently, and it is questionable whether this event is going to work at all.</p>
		 
		 <p>Note: The paint event is raised when the window is rendered. This event occurs after the load event for a window, and 
		 reoccurs each time the window needs to be re-rendered, as when another window obscures it and is then cleared away. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=239074"><linktext>bug 239074</linktext></link></related-links></apiValue><apiValue id="dom:Window:onreset:get"><apiName>onreset</apiName><shortdesc>
		 An event handler for the reset event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the reset event on the window. 
		 
		 <p>Note: The reset event is raised when the user clicks a reset button in a form (<input type="reset"/>). </p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onresize:get"><apiName>onresize</apiName><shortdesc>
		 An event handler for the resize event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the resize event on the window. 
		 
		 <p>Note: The resize event is fired after the window has been resized. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onscroll:get"><apiName>onscroll</apiName><shortdesc>
		 Specifies the function to be called when the window is scrolled.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 Specifies the function to be called when the window is scrolled. 
		 
		 <p>Note: When the window.scrollX/scrollY isn't 0 -- meaning that some scrolling occurred by either script or 
		 manual action -- reloading the current page will trigger the onscroll event immediately. </p>
		 
		 <p>Note: In older versions of Gecko caused onscroll to be fired only when dragging the scroll bar, not when 
		 using cursor keys or mousewheel. This was fixed in Gecko 1.8/Firefox 1.5.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onselect:get"><apiName>onselect</apiName><shortdesc>
		 An event handler for the select event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the select event on the window. 
		 
		 <p>Note: The select event only fires when text inside a text input or textarea is selected. The event is fired after the text has been selected. </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onsubmit:get"><apiName>onsubmit</apiName><shortdesc>
		 An event handler for the submit event on the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 An event handler for the submit event on the window. 
		 
		 <p>Note: The submit event is raised when the user clicks a submit button in a form (<input type="submit"/>). </p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:onunload:get"><apiName>onunload</apiName><shortdesc>
		 DOM Level 0
		 
		 The unload event is raised when the document is unloaded.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 The unload event is raised when the document is unloaded. 
		 
		 <p>Note: Using this event handler in your page prevents Firefox 1.5 from caching the page in the in-memory bfcache.</p>
		 
		 <p>Note: Browsers equipped with pop-up window blockers will ignore all window.open() method calls in onunload event handler functions.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:opener:get"><apiName>opener</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns a reference to the window that opened this current window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns a reference to the window that opened this current window. 
		 
		 Note: When a window is opened from another window, it maintains a reference to that first window 
		 as window.opener. If the current window has no opener, this method returns NULL. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:outerHeight:get"><apiName>outerHeight</apiName><shortdesc>
		 
		 Gets the height of the outside of the browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Gets the height of the outside of the browser window. window.outerHeight represents the height of 
		 the whole browser window including toolbars and window chrome.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.outerHeight"><linktext>MDC - Window: outerHeight Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: outerHeight Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/innerWidth"><linktext>innerWidth</linktext></link><link href="dom.xml#Window/innerHeight"><linktext>innerHeight</linktext></link><link href="dom.xml#Window/outerWidth"><linktext>outerWidth</linktext></link></related-links></apiValue><apiValue id="dom:Window:outerWidth:get"><apiName>outerWidth</apiName><shortdesc>
		 
		 Gets the width of the outside of the browser window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Gets the width of the outside of the browser window. window.outerWidth represents the width of 
		 the whole browser window including sidebar (if expanded), window chrome and window [re-]sizing borders/handles.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.outerWidth"><linktext>MDC - Window: outerWidth Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: outerWidth Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/innerWidth"><linktext>innerWidth</linktext></link><link href="dom.xml#Window/innerHeight"><linktext>innerHeight</linktext></link><link href="dom.xml#Window/outerHeight"><linktext>outerHeight</linktext></link></related-links></apiValue><apiValue id="dom:Window:pageXOffset:get"><apiName>pageXOffset</apiName><shortdesc>
		 
		 Returns the number of pixels that the document has already been scrolled horizontally.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the number of pixels that the document has already been scrolled horizontally. 
		 
		 <p><b>Note:</b> <codeph>window.pageXOffset == window.scrollX; // always true</codeph></p>
		 
		  </apiDesc><example>
		 <codeblock>
		 // make sure and go over to the second horizontal page
		 if (window.scrollX) {
		 	scroll(0,0);
		 }
		 scrollBy(400, 0);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.pageXOffset"><linktext>MDC - Window: pageXOffset Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: pageXOffset Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/pageYOffset"><linktext>pageYOffset</linktext></link></related-links></apiValue><apiValue id="dom:Window:pageYOffset:get"><apiName>pageYOffset</apiName><shortdesc>
		 
		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the number of CSS pixels the user has scrolled towards the bottom within the viewport. 
		 
		 <p><b>Note:</b> <codeph>window.pageYOffset == window.scrollY; // always true</codeph></p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // make sure and go over to the second horizontal page
		 if (window.scrollY) {
		 	scroll(0,0);
		 }
		 scrollByPages(1);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.pageYOffset"><linktext>MDC - Window: pageYOffset Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: pageYOffset Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="" invalidHref="dom.pageXOffset.xml"><linktext>pageXOffset</linktext></link></related-links></apiValue><apiValue id="dom:Window:parent:get"><apiName>parent</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns a reference to the parent of the current window or subframe.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:Window</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns a reference to the parent of the current window or subframe.
		 
		 If a window does not have a parent, its parent property is a reference to itself.
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/top"><linktext>top</linktext></link><link href="dom.xml#Window/frameElement"><linktext>frameElement</linktext></link></related-links></apiValue><apiValue id="dom:Window:personalbar:get"><apiName>personalbar</apiName><shortdesc>
		 Returns the personalbar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the personalbar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:pkcs11:get"><apiName>pkcs11</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the pkcs11 object , which can be used to install drivers and other software 
		 associated with the pkcs11 protocol.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Pkcs11</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the pkcs11 object , which can be used to install drivers and other software 
		 associated with the pkcs11 protocol. 
		 
		 <p><b>Note (Mozilla):</b> The window.pkcs11 property has been removed in newer 
		 versions of Firefox (3.5+) for security reasons. For more information on installing PKCS11 
		 modules, see <xref href="http://developer.mozilla.org/en/PKCS11_Jar_Install" rel="external nofollow" scope="external">installing PKCS11 modules</xref>. See 
		 <xref href="http://bugzilla.mozilla.org/show_bug.cgi?id=326628" rel="external nofollow" scope="external">bug 
		 326628</xref> for details on why the property was removed.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:returnValue:get"><apiName>returnValue</apiName><shortdesc>
		 Non-Standard? | Firefox 3+
		 
		 The return value to be returned to the function that called window.showModalDialog() 
		 to display the window as a modal dialog.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="any"/></apiValueDef><apiDesc>
		 <b>Non-Standard? | Firefox 3+</b>
		 
		 The return value to be returned to the function that called window.showModalDialog() 
		 to display the window as a modal dialog. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:screen:get"><apiName>screen</apiName><shortdesc>
		 
		 Returns a reference to the screen object associated with the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0a"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>cssom.view:Screen</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns a reference to the screen object associated with the window. 
		 
		 </apiDesc><example>
		 <codeblock>
		 if (screen.pixelDepth &lt; 8) {
		 	// use low-color version of page
		 } else { 
		 	// use regular, colorful page
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screen"><linktext>MDC - Window: screen Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screen Property</linktext></link><link href="http://www.aptana.com/reference/html/api/Window.html#Window.screen"><linktext>Aptana: Window.screen Property</linktext></link></related-links></apiValue><apiValue id="dom:Window:screenX:get"><apiName>screenX</apiName><shortdesc>
		 
		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the horizontal distance of the left border of the user's browser from the left side of the screen. 
		 
		 <p><b>Note (Opera):</b> Opera calculates the coordinates of the specific tab window relative to 
		 the encompassing browser window. This is understandable given its way of working with 
		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 
		 browser window relative to the screen.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screenX"><linktext>MDC - Window: screenX Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screenX Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/screenY"><linktext>screenY</linktext></link></related-links></apiValue><apiValue id="dom:Window:screenY:get"><apiName>screenY</apiName><shortdesc>
		 
		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0"/><apiTool name="Firefox" version="3.0"/><apiTool name="Firefox" version="3.1b"/><apiTool name="Safari" version="3.0"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0b"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_incorrect"/><apiTool name="Opera" version="10.0a_incorrect"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 
		 Returns the vertical distance of the top border of the user's browser from the top edge of the screen. 
		 
		 <p><b>Note (Opera):</b> Opera calculates the coordinates of the specific tab window relative to 
		 the encompassing browser window. This is understandable given its way of working with 
		 windows, but strictly speaking it's a bug. It should give the coordinates of the encompassing 
		 browser window relative to the screen.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/window.screenY"><linktext>MDC - Window: screenY Property</linktext></link><link href="http://www.w3.org/TR/cssom-view/#the-windowview-interface"><linktext>W3C - CSSOM View: screenY Property</linktext></link><link href="http://www.quirksmode.org/dom/w3c_cssom.html#windowview"><linktext>Quirksmode: WindowView properties</linktext></link><link href="dom.xml#Window/screenX"><linktext>screenX</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollMaxX:get"><apiName>scrollMaxX</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the maximum number of pixels that the document can be scrolled horizontally.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the maximum number of pixels that the document can be scrolled horizontally. 
		 
		 Note: Use this property to get the total document width, which is equivalent to 
		 window.innerWidth + window.scrollMaxX. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/scrollMaxY"><linktext>dom.Window.scrollMaxY</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollMaxY:get"><apiName>scrollMaxY</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the maximum number of pixels that the document can be scrolled vertically.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the maximum number of pixels that the document can be scrolled vertically. 
		 
		 Note: Use this property to get the total document height, which is equivalent to 
		 window.innerHeight + window.scrollMaxY. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.xml#Window/scrollMaxX"><linktext>dom.Window.scrollMaxX</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollX:get"><apiName>scrollX</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the number of pixels that the document has already been scrolled horizontally.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the number of pixels that the document has already been scrolled horizontally. 
		 
		 Note: Use this property to check that the document hasn't already been scrolled some if 
		 you are using relative scroll functions such as window.scrollBy, window.scrollByLines, 
		 or window.scrollByPages. 
		 
		 Note: The pageXOffset property is an alias for the scrollX property.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="dom.xml#window/pageXOffset"><linktext>dom.window.pageXOffset</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollY:get"><apiName>scrollY</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the number of pixels that the document has already been scrolled vertically.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the number of pixels that the document has already been scrolled vertically. 
		 
		 Note: Use this property to check that the document hasn't already been scrolled some if 
		 you are using relative scroll functions such as window.scrollBy, window.scrollByLines, 
		 or window.scrollByPages. 
		 
		 Note: The pageYOffset property is an alias for the scrollY property.
		 
		 </apiDesc></apiValueDetail><related-links><link href="" invalidHref="dom.xml#window/pageYOffset"><linktext>dom.window.pageYOffset</linktext></link></related-links></apiValue><apiValue id="dom:Window:scrollbars:get"><apiName>scrollbars</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the scrollbars object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the scrollbars object, whose visibility can be toggled in the window. 
		 
		 Note: Note that scrollbars is not an array of the scrollbars. The visibility of these 
		 objects can only be controlled as a group. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:self:get"><apiName>self</apiName><shortdesc>
		 Returns a self-reference.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a self-reference.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:sessionStorage:get"><apiName>sessionStorage</apiName><shortdesc>
		 HTML5 | Firefox 3+
		 
		 This is a global object (sessionStorage) that maintains a storage area that's available 
		 for the duration of the page session.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>webstorage:Storage</apiValueClassifier></apiValueDef><apiDesc>
		 <b>HTML5 | Firefox 3+</b>
		 
		 This is a global object (sessionStorage) that maintains a storage area that's available 
		 for the duration of the page session. A page session lasts for as long as the browser is 
		 open and survives over page reloads and restores. Opening a page in a new tab or window 
		 will cause a new session to be initiated.
		 
		 The sessionStorage object is most useful for hanging on to temporary data that should be
		 saved and restored if the browser is accidentally refreshed.
		 
		 Note: Prior to Firefox 3.5, sessionStorage data was not restored automatically after 
		 recovering from a browser crash. Starting in Firefox 3.5, this works as per the specification.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:sidebar:get"><apiName>sidebar</apiName><shortdesc>
		 Non-Standard | Firefox
		 
		 Returns a reference to the window object of the sidebar.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko.dom.objects:Sidebar</apiValueClassifier></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox</b>
		 
		 Returns a reference to the window object of the sidebar. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:status:get"><apiName>status</apiName><shortdesc>
		 DOM Level 0
		 
		 Sets the text in the status bar at the bottom of the browser or returns the previously set text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Sets the text in the status bar at the bottom of the browser or returns the previously set text. 
		 
		 Note Firefox: This property does not work in default configuration of Firefox and some 
		 other browsers: setting window.status has no effect on the text displayed in the status 
		 bar. To allow scripts change the the status bar text, the user must set the 
		 dom.disable_window_status_change preference to false in the about:config screen. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:statusbar:get"><apiName>statusbar</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the statusbar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the statusbar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:toolbar:get"><apiName>toolbar</apiName><shortdesc>
		 DOM Level 0
		 
		 Returns the toolbar object, whose visibility can be toggled in the window.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:BarProp</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b>
		 
		 Returns the toolbar object, whose visibility can be toggled in the window. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:top:get"><apiName>top</apiName><shortdesc>
		 DOM Level 0 
		 
		 Returns a reference to the topmost window in the window hierarchy.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 <b>DOM Level 0</b> 
		 
		 Returns a reference to the topmost window in the window hierarchy. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom:Window:window:get"><apiName>window</apiName><shortdesc>
		 Returns a self-reference.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a self-reference.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="dom.xpath"><apiName>dom.xpath</apiName><apiDetail/><apiClassifier id="dom.xpath:XPathEvaluator"><apiName>XPathEvaluator</apiName><shortdesc>
	 The evaluation of XPath expressions is provided by XPathEvaluator.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The evaluation of XPath expressions is provided by XPathEvaluator. In a DOM implementation 
	 which supports the XPath 3.0 feature, as described above, the XPathEvaluator interface will 
	 be implemented on the same object which implements the Document interface permitting it to 
	 be obtained by the usual binding-specific method such as casting or by using the DOM Level 3 
	 getInterface method. In this case the implementation obtained from the Document supports the 
	 XPath DOM module and is compatible with the XPath 1.0 specification.
	 
	 <p>Evaluation of expressions with specialized extension functions or variables may not work 
	 in all implementations and is, therefore, not portable. XPathEvaluator implementations may be 
	 available from other sources that could provide specific support for specialized extension 
	 functions or variables as would be defined by other specifications. </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator"><linktext>W3C - XPathEvaluator</linktext></link></related-links><apiOperation id="dom.xpath:XPathEvaluator:dom.xpath:XPathEvaluator:createExpression"><apiName>createExpression</apiName><shortdesc>
		 Creates a parsed XPath expression with resolved namespaces.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_EXPRESSION_ERR: Raised if the expression is 
		 not legal according to the rules of the XPathEvaluator.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the expression contains 
		 namespace prefixes  which cannot be resolved by the specified XPathNSResolver.
		 
		 </apiDesc><apiItemName>EventException</apiItemName><apiOperationClassifier>dom.events:EventException</apiOperationClassifier></apiException><apiReturn><apiDesc>The compiled form of the XPath expression.
		 
		 </apiDesc><apiOperationClassifier>dom.xpath:XPathExpression</apiOperationClassifier></apiReturn><apiParam><apiItemName>expression</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The XPath expression string to be parsed.
		 </apiDesc></apiParam><apiParam><apiItemName>resolver</apiItemName><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier><apiDesc>The resolver permits translation of all prefixes, including the xml 
		 namespace prefix, within the XPath expression into appropriate namespace URIs. If this 
		 is specified as null, any namespace prefix within the expression will result in 
		 DOMException being thrown with the code NAMESPACE_ERR.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Creates a parsed XPath expression with resolved namespaces. This is useful when an 
		 expression will be reused in an application since it makes it possible to compile the 
		 expression string into a more efficient internal form and preresolve all namespace 
		 prefixes which occur within the expression.
		 
		 <p><b>Note (Mozilla):</b> Prior to Firefox 3, you could call this method on documents other 
		 than the one you planned to run the XPath against. Under Firefox 3, you must call it on the 
		 same document.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createExpression"><linktext>MDC - Document.createExpression()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createExpression"><linktext>W3C - XPathEvaluator.createExpression()</linktext></link></related-links></apiOperation><apiOperation id="dom.xpath:XPathEvaluator:dom.xpath:XPathEvaluator:createNSResolver"><apiName>createNSResolver</apiName><shortdesc>
		 Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated 
		 relative to the context of the node where it appeared within the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>XPathNSResolver which resolves namespaces with respect to the definitions in scope for a specified node.
		 
		 </apiDesc><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier></apiReturn><apiParam><apiItemName>nodeResolver</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to be used as a context for namespace resolution.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated 
		 relative to the context of the node where it appeared within the document. This adapter works 
		 like the DOM Level 3 method lookupNamespaceURI  on nodes in resolving the namespaceURI from a 
		 given prefix using the current information available in the node's hierarchy at the time 
		 lookupNamespaceURI is called. also correctly resolving the implicit xml prefix.
		 
		 <p><b>Note:</b> XPath defines QNames without prefix to match only elements in the 
		 null namespace. There is no way in XPath to pick up the default namespace as applied to a regular 
		 element reference (e.g., <codeph>p[&amp;64;id='_myid']</codeph> for <codeph>xmlns='http://www.w3.org/1999/xhtml'</codeph>). 
		 To match default elements in a non-null namespace, you either have to refer to a particular element using 
		 a form such as <codeph>~~</codeph></p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createNSResolver"><linktext>MDC - Document.createNSResolver()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createNSResolver"><linktext>W3C - XPathEvaluator.createNSResolver()</linktext></link></related-links></apiOperation><apiOperation id="dom.xpath:XPathEvaluator:dom.xpath:XPathEvaluator:evaluate"><apiName>evaluate</apiName><shortdesc>
		 Evaluates an XPath expression string and returns a result of the specified type if possible.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INVALID_EXPRESSION_ERR: Raised if the expression is not legal according to the rules of the XPathEvaluator.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException><apiException><apiDesc>TYPE_ERR: Raised if the result cannot be converted to return the specified type.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException><apiException><apiDesc>NAMESPACE_ERR: Raised if the expression contains namespace prefixes  which cannot be resolved by the specified XPathNSResolver.
		 
		 </apiDesc><apiItemName>EventException</apiItemName><apiOperationClassifier>dom.events:EventException</apiOperationClassifier></apiException><apiException><apiDesc>WRONG_DOCUMENT_ERR: The Node is from a document that is not supported by the XPathEvaluator that created this XPathExpression.
		 
		 </apiDesc><apiItemName>EventException</apiItemName><apiOperationClassifier>dom.events:EventException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath context node or the request type is not permitted by this XPathExpression.
		 
		 </apiDesc><apiItemName>EventException</apiItemName><apiOperationClassifier>dom.events:EventException</apiOperationClassifier></apiException><apiReturn><apiDesc>The result of the evaluation of the XPath expression. For XPath 1.0 results, this object 
		 will be of type XPathResult.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>expression</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The XPath expression string to be parsed and evaluated.
		 </apiDesc></apiParam><apiParam><apiItemName>contextNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The context is context node for the evaluation of this XPath expression. 
		 If the XPathEvaluator was obtained by casting the Document then this must be owned by the same 
		 document and must be a Document, Element, Attribute, Text, CDATASection, Comment, 
		 ProcessingInstruction, or XPathNamespace  node. If the context node is a Text or a CDATASection, 
		 then the context is interpreted as the whole logical text node as seen by XPath, unless the node 
		 is empty in which case it may not serve as the XPath context.
		 </apiDesc></apiParam><apiParam><apiItemName>resolver</apiItemName><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier><apiDesc>The resolver permits translation of all prefixes, including the xml namespace 
		 prefix, within the XPath expression into appropriate namespace URIs. If this is specified as null, 
		 any namespace prefix within the expression will result in DOMException being thrown with the 
		 code NAMESPACE_ERR.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="Number"/><apiDesc>If a specific type is specified, then the result will be returned as the 
		 corresponding type. For XPath 1.0 results, this must be one of the codes of the XPathResult interface.
		 </apiDesc></apiParam><apiParam><apiItemName>result</apiItemName><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier><apiDesc>The result specifies a specific result object which may be reused and returned by 
		 this method. If this is specified as nullor the implementation does not reuse the specified result, 
		 a new result object will be constructed and returned. For XPath 1.0 results, this object will be 
		 of type XPathResult.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Evaluates an XPath expression string and returns a result of the specified type if possible.
		 
		 </apiDesc><example>
		 <codeblock>
		 var headings = document.evaluate("//h2", document, null, XPathResult.ANY_TYPE, null); 
		 /~~ Search the document for all h2 elements.  
		  ~~ The result will likely be an unordered node iterator. ~~/
		 var thisHeading = headings.iterateNext(); 
		 var alertText = "Level 2 headings in this document are:\n";
		 while (thisHeading) {
		 	alertText += thisHeading.textContent + "\n";
		 	thisHeading = headings.iterateNext();
		 }
		 alert(alertText); // Alerts the text of all h2 elements</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.evaluate"><linktext>MDC - Document.evaluate()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-evaluate"><linktext>W3C - XPathEvaluator.evaluate()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.xpath:XPathResult"><apiName>XPathResult</apiName><shortdesc>
	 The XPathResult interface represents the result of the evaluation of an XPath 1.0 expression 
	 within the context of a particular node.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The XPathResult interface represents the result of the evaluation of an XPath 1.0 expression 
	 within the context of a particular node. Since evaluation of an XPath expression can result in 
	 various result types, this object makes it possible to discover and manipulate the type and 
	 value of the result. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult"><linktext>W3C - XPathResult</linktext></link></related-links><apiOperation id="dom.xpath:XPathResult:iterateNext"><apiName>iterateNext</apiName><shortdesc>
		 Iterates and returns the next node from the node set or nullif there are no more nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>TYPE_ERR: Raised if resultType is not UNORDERED_NODE_ITERATOR_TYPE or ORDERED_NODE_ITERATOR_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException><apiException><apiDesc>INVALID_STATE_ERR: The document has been mutated since the result was returned.
		 
		 </apiDesc><apiItemName>EventException</apiItemName><apiOperationClassifier>dom.events:EventException</apiOperationClassifier></apiException><apiReturn><apiDesc>Returns the next node.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Iterates and returns the next node from the node set or nullif there are no more nodes. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-iterateNext"><linktext>W3C - XPathResult.iterateNext()</linktext></link></related-links></apiOperation><apiOperation id="dom.xpath:XPathResult:snapshotItem"><apiName>snapshotItem</apiName><shortdesc>
		 Returns the indexth item in the snapshot collection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>TYPE_ERR: Raised if resultType is not UNORDERED_NODE_SNAPSHOT_TYPE or ORDERED_NODE_SNAPSHOT_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException><apiReturn><apiDesc>The node at the indexth position in the NodeList, or null if that is not a valid index.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>Index into the snapshot collection.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the indexth item in the snapshot collection. If index is greater than or equal to the number of nodes in the list, 
		 this method returns null. Unlike the iterator result, the snapshot does not become invalid, but may not correspond to the 
		 current document if it is mutated.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-snapshotItem"><linktext>W3C - XPathResult.snapshotItem()</linktext></link></related-links></apiOperation><apiValue id="dom.xpath:XPathResult:ANY_TYPE"><apiName>ANY_TYPE</apiName><shortdesc>
		 This code does not represent a specific type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 This code does not represent a specific type. An evaluation of an XPath expression will never 
		 produce this type. If this type is requested, then the evaluation returns whatever type naturally 
		 results from evaluation of the expression. If the natural result is a node set when ANY_TYPE was 
		 requested, then UNORDERED_NODE_ITERATOR_TYPE is always the resulting type. Any other representation 
		 of a node set must be explicitly requested.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ANY-TYPE"><linktext>W3C - XPathResult.ANY_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:ANY_UNORDERED_NODE_TYPE"><apiName>ANY_UNORDERED_NODE_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be 
		 null if the node set is empty.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>8</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be 
		 null if the node set is empty. Document modification does not invalidate the node, but may mean that the 
		 result node no longer corresponds to the current document. This is a convenience that permits optimization 
		 since the implementation can stop once any node in the resulting set has been found. If there is more than 
		 one node in the actual result, the single node returned might not be the first in document order.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ANY-UNORDERED-NODE-TYPE"><linktext>W3C - XPathResult.ANY_UNORDERED_NODE_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:BOOLEAN_TYPE"><apiName>BOOLEAN_TYPE</apiName><shortdesc>
		 The result is a boolean as defined by [XPath 1.0].</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>3</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a boolean as defined by [XPath 1.0]. Document modification does not invalidate the boolean, 
		 but may mean that reevaluation would not yield the same boolean.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-BOOLEAN-TYPE"><linktext>W3C - XPathResult.BOOLEAN_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:FIRST_ORDERED_NODE_TYPE"><apiName>FIRST_ORDERED_NODE_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be null if the 
		 node set is empty.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>9</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] and will be accessed as a single node, which may be null if the 
		 node set is empty. Document modification does not invalidate the node, but may mean that the result node no longer 
		 corresponds to the current document. This is a convenience that permits optimization since the implementation can 
		 stop once the first node in document order of the resulting set has been found. If there are more than one node in
		 the actual result, the single node returned will be the first in document order.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-FIRST-ORDERED-NODE-TYPE"><linktext>W3C - XPathResult.FIRST_ORDERED_NODE_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:NUMBER_TYPE"><apiName>NUMBER_TYPE</apiName><shortdesc>
		 The result is a number as defined by [XPath 1.0].</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>1</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a number as defined by [XPath 1.0]. Document modification does not invalidate the number, 
		 but may mean that reevaluation would not yield the same number.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-NUMBER-TYPE"><linktext>W3C - XPathResult.NUMBER_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:ORDERED_NODE_ITERATOR_TYPE"><apiName>ORDERED_NODE_ITERATOR_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which will produce 
		 document-ordered nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>5</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which will produce 
		 document-ordered nodes. Document modification invalidates the iteration.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ORDERED-NODE-ITERATOR-TYPE"><linktext>W3C - XPathResult.ORDERED_NODE_ITERATOR_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:ORDERED_NODE_SNAPSHOT_TYPE"><apiName>ORDERED_NODE_SNAPSHOT_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that will be 
		 in original document order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>7</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that will be 
		 in original document order. Document modification does not invalidate the snapshot but may mean that reevaluation 
		 would not yield the same snapshot and nodes in the snapshot may have been altered, moved, or removed from the document.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-ORDERED-NODE-SNAPSHOT-TYPE"><linktext>W3C - XPathResult.ORDERED_NODE_SNAPSHOT_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:STRING_TYPE"><apiName>STRING_TYPE</apiName><shortdesc>
		 The result is a string as defined by [XPath 1.0].</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>2</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a string as defined by [XPath 1.0]. Document modification does not invalidate the string, but 
		 may mean that the string no longer corresponds to the current document.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-STRING-TYPE"><linktext>W3C - XPathResult.STRING_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:UNORDERED_NODE_ITERATOR_TYPE"><apiName>UNORDERED_NODE_ITERATOR_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which may not produce nodes 
		 in a particular order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>4</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed iteratively, which may not produce nodes 
		 in a particular order. Document modification invalidates the iteration. This is the default type returned if the 
		 result is a node set and ANY_TYPE is requested.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-UNORDERED-NODE-ITERATOR-TYPE"><linktext>W3C - XPathResult.UNORDERED_NODE_ITERATOR_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:UNORDERED_NODE_SNAPSHOT_TYPE"><apiName>UNORDERED_NODE_SNAPSHOT_TYPE</apiName><shortdesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that may 
		 not be in a particular order.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>6</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 The result is a node set as defined by [XPath 1.0] that will be accessed as a snapshot list of nodes that may 
		 not be in a particular order. Document modification does not invalidate the snapshot but may mean that reevaluation 
		 would not yield the same snapshot and nodes in the snapshot may have been altered, moved, or removed from the document.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-UNORDERED-NODE-SNAPSHOT-TYPE"><linktext>W3C - XPathResult.UNORDERED_NODE_SNAPSHOT_TYPE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:booleanValue:get"><apiName>booleanValue</apiName><shortdesc>
		 The value of this boolean result.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/><apiException><apiDesc>TYPE_ERR: Raised if resultType is not BOOLEAN_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The value of this boolean result.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-booleanValue"><linktext>W3C - XPathResult.booleanValue</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:invalideIteratorState:get"><apiName>invalideIteratorState</apiName><shortdesc>
		 Signifies that the iterator has become invalid.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Signifies that the iterator has become invalid. True if resultType is UNORDERED_NODE_ITERATOR_TYPE or ORDERED_NODE_ITERATOR_TYPE 
		 and the document has been modified since this result was returned.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-invalid-iterator-state"><linktext>W3C - XPathResult.invalideIteratorState</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:numberValue:get"><apiName>numberValue</apiName><shortdesc>
		 The value of this number result.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiException><apiDesc>TYPE_ERR: Raised if resultType is not NUMBER_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The value of this number result. If the native double type of the DOM binding does not directly support the exact IEEE 754 result 
		 of the XPath expression, then it is up to the definition of the binding to specify how the XPath number is converted to the native binding number.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-numberValue"><linktext>W3C - XPathResult.numberValue</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:resultType:get"><apiName>resultType</apiName><shortdesc>
		 A code representing the type of this result, as defined by the type constants.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 A code representing the type of this result, as defined by the type constants.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-resultType"><linktext>W3C - XPathResult.resultType</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:singleNodeValue:get"><apiName>singleNodeValue</apiName><shortdesc>
		 The value of this single node result, which may be null.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Node</apiValueClassifier><apiException><apiDesc>TYPE_ERR: Raised if resultType is not ANY_UNORDERED_NODE_TYPE or FIRST_ORDERED_NODE_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The value of this single node result, which may be null.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-singleNodeValue"><linktext>W3C - XPathResult.singleNodeValue</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:snapshotLength:get"><apiName>snapshotLength</apiName><shortdesc>
		 The number of nodes in the result snapshot.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/><apiException><apiDesc>TYPE_ERR: Raised if resultType is not UNORDERED_NODE_SNAPSHOT_TYPE or ORDERED_NODE_SNAPSHOT_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The number of nodes in the result snapshot. Valid values for snapshotItem indices are 0 to snapshotLength-1 inclusive.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-snapshot-length"><linktext>W3C - XPathResult.snapshotLength</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathResult:stringValue:get"><apiName>stringValue</apiName><shortdesc>
		 The value of this string result.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>TYPE_ERR: Raised if resultType is not STRING_TYPE.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 The value of this string result.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathResult-stringValue"><linktext>W3C - XPathResult.stringValue</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.xpath:XPathException"><apiName>XPathException</apiName><shortdesc>
	 A new exception has been created for exceptions specific to these XPath interfaces.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 A new exception has been created for exceptions specific to these XPath interfaces. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathException"><linktext>W3C - XPathException</linktext></link></related-links><apiValue id="dom.xpath:XPathException:dom.xpath:XPathException:code:get"><apiName>code</apiName><shortdesc>
		 The specific exception code.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The specific exception code.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathException"><linktext>W3C - XPathException</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.xpath:XPathExpression"><apiName>XPathExpression</apiName><shortdesc>
	 The XPathExpression interface represents a parsed and resolved XPath expression.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The XPathExpression interface represents a parsed and resolved XPath expression. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathExpression"><linktext>W3C - XPathExpression</linktext></link></related-links><apiOperation id="dom.xpath:XPathExpression:dom.xpath:XPathExpression:evaluate"><apiName>evaluate</apiName><shortdesc>
		 Evaluates this XPath expression and returns a result.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>TYPE_ERR: Raised if the result cannot be converted to return the specified type.
		 
		 </apiDesc><apiItemName>XPathException</apiItemName><apiOperationClassifier>dom.xpath:XPathException</apiOperationClassifier></apiException><apiException><apiDesc>WRONG_DOCUMENT_ERR: The Node is from a document that is not supported by the XPathEvaluator that created this XPathExpression.
		 
		 </apiDesc><apiItemName>EventException</apiItemName><apiOperationClassifier>dom.events:EventException</apiOperationClassifier></apiException><apiException><apiDesc>NOT_SUPPORTED_ERR: The Node is not a type permitted as an XPath context node or the request type is not permitted by this XPathExpression.
		 
		 </apiDesc><apiItemName>EventException</apiItemName><apiOperationClassifier>dom.events:EventException</apiOperationClassifier></apiException><apiReturn><apiDesc>The result of the evaluation of the XPath expression. For XPath 1.0 results, this object will 
		 be of type XPathResult.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>expression</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The context is context node for the evaluation of this XPath expression. 
		 If the XPathEvaluator was obtained by casting the Document then this must be owned by the same 
		 document and must be a Document, Element, Attribute, Text, CDATASection, Comment, ProcessingInstruction, 
		 or XPathNamespace node. If the context node is a Text or a CDATASection, then the context is 
		 interpreted as the whole logical text node as seen by XPath, unless the node is empty in which 
		 case it may not serve as the XPath context.
		 </apiDesc></apiParam><apiParam><apiItemName>contextNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>If a specific type is specified, then the result will be coerced to return the specified 
		 type relying on XPath conversions and fail if the desired coercion is not possible. This must be one of 
		 the type codes of XPathResult.
		 </apiDesc></apiParam><apiParam><apiItemName>resolver</apiItemName><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier><apiDesc>The result specifies a specific result object which may be reused and returned by this 
		 method. If this is specified as nullor the implementation does not reuse the specified result, a new 
		 result object will be constructed and returned. For XPath 1.0 results, this object will be of type XPathResult.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="Number"/></apiParam><apiParam><apiItemName>result</apiItemName><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 Evaluates this XPath expression and returns a result.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathExpression-evaluate"><linktext>W3C - XPathExpression.evaluate()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.xpath:XPathNSResolver"><apiName>XPathNSResolver</apiName><shortdesc>
	 The XPathNSResolver interface permit prefix strings in the expression to be properly bound to 
	 namespaceURI strings.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The XPathNSResolver interface permit prefix strings in the expression to be properly bound to 
	 namespaceURI strings. XPathEvaluator can construct an implementation of XPathNSResolver from a 
	 node, or the interface may be implemented by any application. 
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNSResolver"><linktext>W3C - XPathNSResolver</linktext></link></related-links><apiOperation id="dom.xpath:XPathNSResolver:dom.xpath:XPathNSResolver:lookupNamespaceURI"><apiName>lookupNamespaceURI</apiName><shortdesc>
		 Look up the namespace URI associated to the given namespace prefix.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns the associated namespace URI or null if none is found.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>prefix</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The prefix to look for.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Look up the namespace URI associated to the given namespace prefix. The XPath evaluator must 
		 never call this with a null or empty argument, because the result of doing this is undefined.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNSResolver-lookupNamespaceURI"><linktext>W3C - XPathNSResolver.lookupNamespaceURI()</linktext></link></related-links></apiOperation></apiClassifier><apiClassifier id="dom.xpath:XPathNamespace"><apiName>XPathNamespace</apiName><shortdesc>
	 The XPathNamespace interface is returned by XPathResult interfaces to represent the XPath namespace node type 
	 that DOM lacks.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.core:Node</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The XPathNamespace interface is returned by XPathResult interfaces to represent the XPath namespace node type 
	 that DOM lacks. There is no public constructor for this node type. Attempts to place it into a hierarchy or a 
	 NamedNodeMap result in a DOMException with the code HIERARCHY_REQUEST_ERR. This node is read only, so methods 
	 or setting of attributes that would mutate the node result in a DOMException with the code NO_MODIFICATION_ALLOWED_ERR.
	 
	 <p>The core specification describes attributes of the Node interface that are different for different node 
	 types but does not describe XPATH_NAMESPACE_NODE, so here is a description of those attributes for this node 
	 type. All attributes of Node not described in this section have a null or false value.</p>
	 
	 <p>ownerDocument matches the ownerDocument of the ownerElement even if the element is later adopted.</p>
	 
	 <p>nodeName is always the string "#namespace".</p>
	 
	 <p>prefix is the prefix of the namespace represented by the node.</p>
	 
	 <p>localName is the same as prefix.</p>
	 
	 <p>nodeType is equal to XPATH_NAMESPACE_NODE.</p>
	 
	 <p>namespaceURI is the namespace URI of the namespace represented by the node.</p>
	 
	 <p>nodeValue is the same as namespaceURI.</p>
	 
	 <p>adoptNode, cloneNode, and importNode fail on this node type by raising a DOMException with the code NOT_SUPPORTED_ERR.</p>
	 
	 <p><b>Note:</b> In future versions of the XPath specification, the definition of a namespace node may be changed 
	 incomatibly, in which case incompatible changes to field values may be required to implement versions beyond XPath 1.0.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNamespace"><linktext>W3C - XPathNamespace</linktext></link></related-links><apiValue id="dom.xpath:XPathNamespace:XPATH_NAMESPACE_NODE"><apiName>XPATH_NAMESPACE_NODE</apiName><shortdesc>
		 An integer indicating which type of node this is.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>13</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 An integer indicating which type of node this is.
		 
		 <p><b>Note:</b> There is currently only one type of node which is specific to XPath. The numbers 
		 in this list must not collide with the values assigned to core node types.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPATH_NAMESPACE_NODE"><linktext>W3C - XPathNamespace.XPATH_NAMESPACE_NODE</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathNamespace:ownerElement:get"><apiName>ownerElement</apiName><shortdesc>
		 The Element on which the namespace was in scope when it was requested.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 The Element on which the namespace was in scope when it was requested. This does not change 
		 on a returned namespace node even if the document changes such that the namespace goes out of 
		 scope on that element and this node is no longer found there by XPath.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathNamespace-ownerElement"><linktext>W3C - XPathNamespace.ownerElement()</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.xpath:XPathExceptionCode"><apiName>XPathExceptionCode</apiName><shortdesc>
	 An integer indicating the type of error generated.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An integer indicating the type of error generated.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathExceptionCode"><linktext>W3C - XPathExceptionCode</linktext></link></related-links><apiValue id="dom.xpath:XPathExceptionCode:INVALID_EXPRESSION_ERR"><apiName>INVALID_EXPRESSION_ERR</apiName><shortdesc>
		 If the expression has a syntax error or otherwise is not a legal expression according to the rules 
		 of the specific XPathEvaluator or contains specialized extension functions or variables not 
		 supported by this implementation.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>51</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the expression has a syntax error or otherwise is not a legal expression according to the rules 
		 of the specific XPathEvaluator or contains specialized extension functions or variables not 
		 supported by this implementation.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#INVALID_EXPRESSION_ERR"><linktext>W3C - XPathExceptionCode.INVALID_EXPRESSION_ERR</linktext></link></related-links></apiValue><apiValue id="dom.xpath:XPathExceptionCode:TYPE_ERR"><apiName>TYPE_ERR</apiName><shortdesc>
		 If the expression cannot be converted to return the specified type.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>52</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 If the expression cannot be converted to return the specified type.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#TYPE_ERR"><linktext>W3C - XPathExceptionCode.TYPE_ERR</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="elementtraversal"><apiName>elementtraversal</apiName><apiDetail/><apiClassifier id="elementtraversal:ElementTraversal"><apiName>ElementTraversal</apiName><shortdesc>
	 Allows script navigation of the elements of a DOM tree, excluding all other nodes in the DOM, such 
	 as text nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Allows script navigation of the elements of a DOM tree, excluding all other nodes in the DOM, such 
	 as text nodes. It also provides an attribute to expose the number of child elements of an element. 
	 It is intended to provide a more convenient alternative to existing DOM navigation interfaces, with 
	 a low implementation footprint.
	 
	 <p>All browser compatibility information was obtained via Quirksmode.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element"><linktext>MDC - Element</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#interface-elementTraversal"><linktext>W3C Element Traversal Specification</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link></related-links><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:childElementCount:get"><apiName>childElementCount</apiName><shortdesc>
		 Returns the current number of element nodes that are children of this 
		 element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the current number of element nodes that are children of this 
		 element. 0 if this element has no child nodes that are of nodeType 1.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.childElementCount"><linktext>MDC - Element: childElementCount Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-childElementCount"><linktext>W3C - Element Traversel: childElementCount Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/firstElementChild"><linktext>firstElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/lastElementChild"><linktext>lastElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="elementtraversal.xml#ElementTraversal/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:firstElementChild:get"><apiName>firstElementChild</apiName><shortdesc>
		 Returns the first child element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the first child element node of this element. null if this 
		 element has no child elements.
		 
		 </apiDesc><example>
		 In this example, the alert shows "SPAN", which is the name of the 
		 first child node of the paragraph element.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.firstElementChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.firstElementChild"><linktext>MDC - Element: firstElementChild Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-firstElementChild"><linktext>W3C - Element Traversel: firstElementChild Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/childElementCount"><linktext>childElementCount</linktext></link><link href="elementtraversal.xml#ElementTraversal/lastElementChild"><linktext>lastElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="elementtraversal.xml#ElementTraversal/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:lastElementChild:get"><apiName>lastElementChild</apiName><shortdesc>
		 Returns the last child element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the last child element node of this element. null if this 
		 element has no child elements.
		 
		 </apiDesc><example>
		 In this example, the alert shows "B", which is the name of the 
		 last child node of the paragraph element.
		 <codeblock>
		 &lt;p id="para-01"&gt;
		 	&lt;span&gt;First span&lt;/span&gt;
		 	&lt;b&gt;bold&lt;/b&gt;
		 &lt;/p&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var p01 = document.getElementById('para-01');
		 	alert(p01.lastElementChild.nodeName);
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.lastElementChild"><linktext>MDC - Element: lastElementChild Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-lastElementChild"><linktext>W3C - Element Traversel: lastElementChild Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/childElementCount"><linktext>childElementCount</linktext></link><link href="elementtraversal.xml#ElementTraversal/firstElementChild"><linktext>firstElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/nextElementSibling"><linktext>nextElementSibling</linktext></link><link href="elementtraversal.xml#ElementTraversal/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:nextElementSibling:get"><apiName>nextElementSibling</apiName><shortdesc>
		 Returns the next sibling element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the next sibling element node of this element. null if this 
		 element has no element sibling nodes that come after this one in the 
		 document tree.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-01').nextElementSibling;
		 	document.write('&lt;p&gt;Siblings of div-01&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.nextElementSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;</codeblock>
		 
		 <p>This example outputs the following into the page when it loads:</p>
		 
		 <p>Siblings of div-01</p>
		 <ol>
		 	<li>DIV</li>
		 	<li>SCRIPT</li>
		 	<li>P</li>
		 	<li>OL</li>
		 </ol>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.nextElementSibling"><linktext>MDC - Element: nextElementSibling Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-nextElementSibling"><linktext>W3C - Element Traversel: nextElementSibling Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/childElementCount"><linktext>childElementCount</linktext></link><link href="elementtraversal.xml#ElementTraversal/firstElementChild"><linktext>firstElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/lastElementChild"><linktext>lastElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/previousElementSibling"><linktext>previousElementSibling</linktext></link></related-links></apiValue><apiValue id="elementtraversal:ElementTraversal:elementtraversal:ElementTraversal:previousElementSibling:get"><apiName>previousElementSibling</apiName><shortdesc>
		 Returns the previous sibling element node of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="ElemTrav" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62"/><apiTool name="Opera" version="10.0b"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the previous sibling element node of this element. null if 
		 this element has no element sibling nodes that come before this one 
		 in the document tree.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;div id="div-01"&gt;Here is div-01&lt;/div&gt;
		 &lt;div id="div-02"&gt;Here is div-02&lt;/div&gt;
		 &lt;li&gt;This is a list item&lt;/li&gt;
		 &lt;li&gt;This is another list item&lt;/li&gt;
		 &lt;div id="div-03"&gt;Here is div-03&lt;/div&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 	var el = document.getElementById('div-03').previousElementSibling;
		 	document.write('&lt;p&gt;Siblings of div-03&lt;/p&gt;&lt;ol&gt;');
		 	while (el) {
		 		document.write('&lt;li&gt;' + el.nodeName + '&lt;/li&gt;');
		 		el = el.previousElementSibling;
		 	}
		 	document.write('&lt;/ol&gt;');
		 &lt;/script&gt;</codeblock>
		 
		 <p>This example outputs the following into the page when it loads:</p>
		 
		 <p>Siblings of div-03</p>
		 <ol>
		 	<li>LI</li>
		 	<li>LI</li>
		 	<li>DIV</li>
		 	<li>DIV</li>
		 </ol>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/Element.previousElementSibling"><linktext>MDC - Element: previousElementSibling Property</linktext></link><link href="http://www.w3.org/TR/ElementTraversal/#attribute-previousElementSibling"><linktext>W3C - Element Traversel: previousElementSibling Property</linktext></link><link href="http://quirksmode.org/dom/w3c_traversal.html"><linktext>Quirksmode: W3C DOM Compatibility - Traversal</linktext></link><link href="elementtraversal.xml#ElementTraversal/childElementCount"><linktext>childElementCount</linktext></link><link href="elementtraversal.xml#ElementTraversal/firstElementChild"><linktext>firstElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/lastElementChild"><linktext>lastElementChild</linktext></link><link href="elementtraversal.xml#ElementTraversal/nextElementSibling"><linktext>nextElementSibling</linktext></link></related-links></apiValue></apiClassifier></apiPackage><apiPackage id="gecko.dom.objects"><apiName>gecko.dom.objects</apiName><apiDetail/><apiClassifier id="gecko.dom.objects:Sidebar"><apiName>Sidebar</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>http://developer.mozilla.org/en/DOM/window.sidebar
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail><apiOperation id="gecko.dom.objects:Sidebar:addMicrosummaryGenerator"><apiName>addMicrosummaryGenerator</apiName><shortdesc>
		 Firefox 2+
		 
		 Installs a microsummary generator.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>generatorURL</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 <b>Firefox 2+</b>
		 
		 Installs a microsummary generator.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="gecko.dom.objects:Sidebar:addPanel"><apiName>addPanel</apiName><shortdesc>
		 Note: the third empty parameter is required! 
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>title</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>contentURL</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>customizeURL</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Note: the third empty parameter is required! 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="gecko.dom.objects:Sidebar:addPersistentPanel"><apiName>addPersistentPanel</apiName><shortdesc>
		 
		 </shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>title</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>contentURL</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>customizeURL</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="gecko.dom.objects:Sidebar:addSearchEngine"><apiName>addSearchEngine</apiName><shortdesc>
		 Installs a search engine.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>engineURL</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>iconURL</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>suggestedTitle</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam><apiParam><apiItemName>suggestedCategory</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Installs a search engine.
		 
		 </apiDesc></apiOperationDetail></apiOperation></apiClassifier></apiPackage><apiPackage id="gecko.events"><apiName>gecko.events</apiName><apiDetail/><apiClassifier id="gecko.events:nsIDOMEventTarget"><apiName>nsIDOMEventTarget</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>http://mxr.mozilla.org/mozilla-central/source/dom/interfaces/events/nsIDOMEventTarget.idl
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="gecko.events:MouseEvent"><apiName>MouseEvent</apiName><shortdesc>
	 The DOMMouseScroll event is sent when the mouse wheel is moved.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:MouseEvent</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The DOMMouseScroll event is sent when the mouse wheel is moved. The target of 
	 this event is the element that was under the mouse pointer when the mouse wheel 
	 was scrolled, similar to the click event.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/Gecko-Specific_DOM_Events"><linktext>http://developer.mozilla.org/en/Gecko-Specific_DOM_Events</linktext></link></related-links><apiValue id="gecko.events:MouseEvent:HORIZONTAL_AXIS"><apiName>HORIZONTAL_AXIS</apiName><shortdesc>
		 Unknown value
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Unknown value
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko.events:MouseEvent:VERTICAL_AXIS"><apiName>VERTICAL_AXIS</apiName><shortdesc>
		 Unknown value
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiAccess value="public"/><apiStatic/><apiData>0</apiData><apiType value="Number"/></apiValueDef><apiDesc>
		 Unknown value
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko.events:MouseEvent:axis:get"><apiName>axis</apiName><shortdesc>
		 Specifies the axis of the scroll gesture (horizontal or vertical).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Specifies the axis of the scroll gesture (horizontal or vertical). 
		 This attribute was added in Firefox 3.5
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=378028"><linktext>bug 378028</linktext></link></related-links></apiValue><apiValue id="gecko.events:MouseEvent:detail:get"><apiName>detail</apiName><shortdesc>
		 Specifies the number of “ticks” that the mouse wheel moved.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Specifies the number of “ticks” that the mouse wheel moved. 
		 Positive values mean “down” / “right”, negative “up” / “left”.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage><apiPackage id="gecko"><apiName>gecko</apiName><apiDetail/><apiClassifier id="gecko:nsIBoxObject"><apiName>nsIBoxObject</apiName><shortdesc>
	 Where possible, element.getClientRects and element.getBoundingClientRect should 
	 be used instead.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Where possible, element.getClientRects and element.getBoundingClientRect should 
	 be used instead.  nsIBoxObject is subject to change.
	 
	 INCOMPLETE
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/nsIBoxObject"><linktext>MDC - nsIBoxObject</linktext></link></related-links></apiClassifier><apiClassifier id="gecko:nsIURI"><apiName>nsIURI</apiName><shortdesc>
	 nsIURI is an interface for an uniform resource identifier with 
	 internationalization support, offering attributes that allow setting 
	 and querying the basic components of a URI, and methods for 
	 performing basic operations on URIs.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 nsIURI is an interface for an uniform resource identifier with 
	 internationalization support, offering attributes that allow setting 
	 and querying the basic components of a URI, and methods for 
	 performing basic operations on URIs.
	 </apiDesc></apiClassifierDetail><apiOperation id="gecko:nsIURI:clone"><apiName>clone</apiName><shortdesc>
		 Clones the URI, returning a new nsIURI object.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>An nsIURI object that represents the same URI as the current 
		 nsIURI.
		 </apiDesc><apiOperationClassifier>gecko:nsIURI</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Clones the URI, returning a new nsIURI object.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="gecko:nsIURI:equals"><apiName>equals</apiName><shortdesc>
		 Compares the current URI with another URI, returning true if the two 
		 represent the same location.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the two URIs represent the same location
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>other</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Another nsIURI to compare to. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Compares the current URI with another URI, returning true if the two 
		 represent the same location.
		 
		 Note: This is more than a string comparison, as two different URI 
		 strings can represent the same location.  For example, comparing 
		 "http://foo.com:80/" and "http://foo.com/" will return true.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="gecko:nsIURI:resolve"><apiName>resolve</apiName><shortdesc>
		 Resolves a relative URI string, using this URI as the base.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The resolved absolute URI string.
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>relativePath</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The relative path to resolve. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Resolves a relative URI string, using this URI as the base.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="gecko:nsIURI:schemeIs"><apiName>schemeIs</apiName><shortdesc>
		 Quickly reports whether the nsIURI represents a URI with the specified 
		 scheme.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>If the URI is for the specified scheme
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>scheme</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A string representing the scheme to compare to. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Quickly reports whether the nsIURI represents a URI with the specified 
		 scheme.  This comparison is case-insensitive.
		 
		 Note: This is an optimization, allowing you to check the scheme of the 
		 URI without having to get the scheme and do the comparison yourself; 
		 this saves memory allocations.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="gecko:nsIURI:asciiHost:get"><apiName>asciiHost</apiName><shortdesc>
		 The URI host with an ASCII compatible encoding.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI host with an ASCII compatible encoding. Follows the IDNA 
		 draft spec for converting internationalized domain names (UTF-8) 
		 to ASCII for compatibility with existing Internet infrasture.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:asciiSpec:get"><apiName>asciiSpec</apiName><shortdesc>
		 The URI spec with an ASCII compatible encoding.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI spec with an ASCII compatible encoding. The host portion 
		 follows the IDNA draft spec. Other parts are URL-escaped per the 
		 rules of RFC2396. The result is strictly ASCII.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:host:get"><apiName>host</apiName><shortdesc>
		 The host is the Internet domain name to which this URI refers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The host is the Internet domain name to which this URI refers. It 
		 could be an IPv4 (or IPv6) address literal. If supported, it could 
		 be a non-ASCII internationalized domain name.
		 
		 Note: Characters are not escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:hostPort:get"><apiName>hostPort</apiName><shortdesc>
		 The "host : port" part of the URI (or simply the host, if port is -1).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The "host : port" part of the URI (or simply the host, if port is -1).
		 
		 Note: Characters are not escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:originCharset:get"><apiName>originCharset</apiName><shortdesc>
		 The charset of the document from which this URI originated.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The charset of the document from which this URI originated. An 
		 empty value implies UTF-8.
		 
		 If this value is something other than UTF-8 then the URI components 
		 (e.g., spec, prePath, username, etc.) are all fully URL-escaped. 
		 Otherwise, the URI components may contain unescaped multibyte 
		 UTF-8 characters.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:password:get"><apiName>password</apiName><shortdesc>
		 The optional password, assuming the preHost consists of 
		 "username:password".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The optional password, assuming the preHost consists of 
		 "username:password".
		 
		 Note: Some characters may be escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:path:get"><apiName>path</apiName><shortdesc>
		 The path, typically including at least a leading '/' (but may also 
		 be empty, depending on the protocol).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The path, typically including at least a leading '/' (but may also 
		 be empty, depending on the protocol).
		 
		 Note: Some characters may be escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:port:get"><apiName>port</apiName><shortdesc>
		 The URI's port.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The URI's port. A port value of -1 corresponds to the protocol's 
		 default port (eg. -1 implies port 80 for HTTP URIs).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:prePath:get"><apiName>prePath</apiName><shortdesc>
		 The prePath returns the string before the path (such as 
		 "scheme://user:password</shortdesc><prolog><asCustoms><host>: port"). This is useful for authentication 
		 or managing sessions.
		 
		 Note: Some characters may be escaped.
		 </host></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The prePath returns the string before the path (such as 
		 "scheme://user:password</apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:scheme:get"><apiName>scheme</apiName><shortdesc>
		 The scheme is the protocol to which this URI refers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The scheme is the protocol to which this URI refers. The scheme is 
		 restricted to the US-ASCII charset per RFC2396.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:spec:get"><apiName>spec</apiName><shortdesc>
		 Returns a string representation of the URI.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string representation of the URI. Setting the spec causes 
		 the new spec to be parsed using the rules for the scheme the URI 
		 currently has. If the string cannot be parsed as a URI, 
		 NS_ERROR_MALFORMED_URI thrown.
		 
		 If the URI stores information from the nsIIOService  interface's 
		 newURI()  call that created it, other than just the parsed string, 
		 the behavior of this information when setting the spec attribute 
		 is undefined.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:userPass:get"><apiName>userPass</apiName><shortdesc>
		 The "username:password" (or username only if the value doesn't 
		 contain a ':').</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The "username:password" (or username only if the value doesn't 
		 contain a ':').
		 
		 Note: Some characters may be escaped.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="gecko:nsIURI:username:get"><apiName>username</apiName><shortdesc>
		 The optional username, assuming the preHost consists of 
		 "username:password".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The optional username, assuming the preHost consists of 
		 "username:password".
		 
		 Note: Some characters may be escaped.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="gecko:nsIDOMOfflineResourceList"><apiName>nsIDOMOfflineResourceList</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>http://developer.mozilla.org/en/nsIDOMOfflineResourceList
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="gecko:nsIPrincipal"><apiName>nsIPrincipal</apiName><shortdesc>
	 http://developer.mozilla.org/en/nsIPrincipal
	 </shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 http://developer.mozilla.org/en/nsIPrincipal
	 </apiDesc></apiClassifierDetail></apiClassifier><apiClassifier id="gecko:nsIXPCComponents"><apiName>nsIXPCComponents</apiName><shortdesc>
	 </shortdesc><prolog><asMetadata/><asCustoms><internal>
	 
	 http://mxr.mozilla.org/mozilla-central/source/js/src/xpconnect/idl/xpccomponents.idl
	 
	 http://developer.mozilla.org/en/Components_object
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 </apiDesc></apiClassifierDetail></apiClassifier></apiPackage><apiPackage id="selectors"><apiName>selectors</apiName><apiDetail/><apiClassifier id="selectors:NodeSelector"><apiName>NodeSelector</apiName><shortdesc>
	 Objects implementing any of the Document, DocumentFragment or Element interfaces, as defined in DOM Level 3 Core, must also implement the NodeSelector interface.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 Objects implementing any of the Document, DocumentFragment or Element interfaces, as defined in DOM Level 3 Core, must also implement the NodeSelector interface.
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/selectors-api/#nodeselector"><linktext>W3C Selectors API</linktext></link></related-links><apiOperation id="selectors:NodeSelector:selectors:NodeSelector:querySelector"><apiName>querySelector</apiName><shortdesc>
		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NAMESPACE_ERR: May be raised if the group of selectors include namespace prefixes that need to be resolved.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The first matching Element node within the node’s subtree. If there is no such node, returns null. 
		 
		 </apiDesc><apiOperationClassifier>dom.core:Element</apiOperationClassifier></apiReturn><apiParam><apiItemName>selectors</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>One or more selectors
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns the first element that is a descendent of the element on which it is invoked that matches the specified group of selectors.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Selectors API Example&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;div id="foo"&gt;
		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;
		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;
		 		&lt;/div&gt;
		 		&lt;div id="bar"&gt;
		 			&lt;p&gt;...&lt;/p&gt;
		 		&lt;/div&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 x would contain the first element in the document with an ID of either foo or bar (or both). In the sample document above, it would select the div element with the ID of foo because it is first in document order.
		 <codeblock>var x = document.querySelector("#foo, #bar");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc288169%28VS.85%29.aspx"><linktext>MSDN - querySelector Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Document.querySelector"><linktext>MDC - Document.querySelector()</linktext></link><link href="http://www.w3.org/TR/selectors-api/#nodeselector"><linktext>W3C - NodeSelector.querySelector()</linktext></link></related-links></apiOperation><apiOperation id="selectors:NodeSelector:selectors:NodeSelector:querySelectorAll"><apiName>querySelectorAll</apiName><shortdesc>
		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Selectors" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0"/><apiTool name="Chrome" version="2.0"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b"/><apiSince version="DOMCore 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NAMESPACE_ERR: May be raised if the group of selectors include namespace prefixes that need to be resolved.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>A NodeList containing all of the matching Element nodes within the node’s subtree, in document order. If there are no such nodes, returns an empty NodeList.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>selectors</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>One or more selectors
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a list of all elements descended from the element on which it is invoked that match the specified group of selectors.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html xmlns="http://www.w3.org/1999/xhtml"&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Selectors API Example&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;div id="foo"&gt;
		 			&lt;p class="warning"&gt;This is a sample warning&lt;/p&gt;
		 			&lt;p class="error"&gt;This is a sample error&lt;/p&gt;
		 		&lt;/div&gt;
		 		&lt;div id="bar"&gt;
		 			&lt;p&gt;...&lt;/p&gt;
		 		&lt;/div&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 The following example would select all p elements in the document that have a class of either "error" or "warning".
		 <codeblock>var alerts = document.querySelectorAll("p.warning, p.error");</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc304115%28VS.85%29.aspx"><linktext>MSDN - querySelectorAll Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/Document.querySelectorAll"><linktext>MDC - Document.querySelectorAll()</linktext></link><link href="http://www.w3.org/TR/selectors-api/#nodeselector"><linktext>W3C - NodeSelector.querySelectorAll()</linktext></link><link href="http://www.quirksmode.org/dom/w3c_core.html#gettingelements"><linktext>Quirksmode: Getting elements</linktext></link></related-links></apiOperation></apiClassifier></apiPackage><apiPackage id="webstorage"><apiName>webstorage</apiName><apiDetail/><apiClassifier id="webstorage:Storage"><apiName>Storage</apiName><shortdesc>
	 The DOM Storage mechanism is a means through which string key/value pairs can be securely stored and later 
	 retrieved for use.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiInterface/><apiAccess value="public"/><apiStatic/><apiBaseClassifier/></apiClassifierDef><apiDesc>
	 The DOM Storage mechanism is a means through which string key/value pairs can be securely stored and later 
	 retrieved for use. The goal of this addition is to provide a comprehensive means through which interactive 
	 applications can be built (including advanced abilities, such as being able to work "offline" for extended 
	 periods of time).
	 
	 <p><codeph>sessionStorage</codeph> sets fields on the window. When the window is closed, the session fields 
	 are lost, even if the site remains open in another window.</p>
	 
	 <p><codeph>localStorage</codeph> sets fields on the domain. Even when you close the browser, reopen it, and 
	 go back to the site, it remembers all fields in localStorage.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-interface"><linktext>W3C Web Storage Specification</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: HTML5 compatibility - Local storage and session storage</linktext></link></related-links><apiOperation id="webstorage:Storage:webstorage:Storage:clear"><apiName>clear</apiName><shortdesc>
		 Empties the object of all key/value pairs, if there are any.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_incomplete"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Empties the object of all key/value pairs, if there are any.
		 
		 </apiDesc><example>
		 <codeblock>&lt;button onclick="localStorage.clear()"&gt;Clear Stored Values&lt;/button&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc288131%28VS.85%29.aspx"><linktext>MSDN: clear Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/Storage"><linktext>MDC - DOM Storage</linktext></link><link href="http://www.w3.org/TR/webstorage/#the-storage-interface"><linktext>W3C - Web Storage: clear Method</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link><link href="webstorage.xml#Storage/removeItem()"><linktext>removeItem()</linktext></link></related-links></apiOperation><apiOperation id="webstorage:Storage:webstorage:Storage:getItem"><apiName>getItem</apiName><shortdesc>
		 NameGetter
		 
		 The getItem(key) method must return the current value associated with the given key.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>key</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 NameGetter
		 
		 The getItem(key) method must return the current value associated with the given key.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc197039%28VS.85%29.aspx"><linktext>MSDN: getItem Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/Storage"><linktext>MDC - DOM Storage</linktext></link><link href="http://www.w3.org/TR/webstorage/#the-storage-interface"><linktext>W3C - Web Storage: getItem Method</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link><link href="webstorage.xml#Storage/setItem()"><linktext>setItem()</linktext></link></related-links></apiOperation><apiOperation id="webstorage:Storage:webstorage:Storage:key"><apiName>key</apiName><shortdesc>
		 IndexGetter
		 
		 Returns the value at the specified index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: May be raised if <codeph>index</codeph> is greater than or 
		 equal to the number of key/value pairs in the object. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/></apiParam></apiOperationDef><apiDesc>
		 IndexGetter
		 
		 Returns the value at the specified index.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc197042%28VS.85%29.aspx"><linktext>MSDN: key Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/Storage"><linktext>MDC - DOM Storage</linktext></link><link href="http://www.w3.org/TR/webstorage/#the-storage-interface"><linktext>W3C - Web Storage: key Method</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link><link href="webstorage.xml#Storage/getItem()"><linktext>getItem()</linktext></link></related-links></apiOperation><apiOperation id="webstorage:Storage:webstorage:Storage:removeItem"><apiName>removeItem</apiName><shortdesc>
		 NameDeleter
		 
		 The removeItem(key) method must cause the key/value pair with the given 
		 key to be removed from the list associated with the object, if it exists.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>key</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the key, or the empty string.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 NameDeleter
		 
		 The removeItem(key) method must cause the key/value pair with the given 
		 key to be removed from the list associated with the object, if it exists.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc197047%28VS.85%29.aspx"><linktext>MSDN: removeItem Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/Storage"><linktext>MDC - DOM Storage</linktext></link><link href="http://www.w3.org/TR/webstorage/#the-storage-interface"><linktext>W3C - Web Storage: removeItem Method</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link><link href="webstorage.xml#Storage/clear()"><linktext>clear()</linktext></link></related-links></apiOperation><apiOperation id="webstorage:Storage:webstorage:Storage:setItem"><apiName>setItem</apiName><shortdesc>
		 NameSetter
		 
		 Adds the data based on the key name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>QUOTA_EXCEEDED_ERR: May be raised if setting fails. 
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>key</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiParam><apiParam><apiItemName>data</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 NameSetter
		 
		 Adds the data based on the key name. If the key already exists, that data is updated
		 with the new data.
		 
		 </apiDesc><example>
		 <codeblock>
		 sessionStorage.setItem('myKey', '...');
		 sessionStorage['myKey'] = '...'; 
		 sessionStorage.myKey = '...';</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc197050%28VS.85%29.aspx"><linktext>MSDN: setItem Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/Storage"><linktext>MDC - DOM Storage</linktext></link><link href="http://www.w3.org/TR/webstorage/#the-storage-interface"><linktext>W3C - Web Storage: setItem Method</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link><link href="webstorage.xml#Storage/getItem()"><linktext>getItem()</linktext></link><link href="webstorage.xml#Storage/remainingSpace"><linktext>remainingSpace</linktext></link></related-links></apiOperation><apiValue id="webstorage:Storage:webstorage:Storage:length:get"><apiName>length</apiName><shortdesc>
		 Returns the number of key/value pairs currently present in the list associated with the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the number of key/value pairs currently present in the list associated with the object.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc304101%28VS.85%29.aspx"><linktext>MSDN: length Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/Storage"><linktext>MDC - DOM Storage</linktext></link><link href="http://www.w3.org/TR/webstorage/#the-storage-interface"><linktext>W3C - Web Storage: length Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:Storage:webstorage:Storage:remainingSpace:get"><apiName>remainingSpace</apiName><shortdesc>
		 Retrieves the remaining memory space, in bytes, for the storage object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Retrieves the remaining memory space, in bytes, for the storage object.
		 
		 <p>The current size of the storage area is calculated as the sum of the length of all key names and values.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc197016%28VS.85%29.aspx"><linktext>MSDN: remainingSpace Property</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="webstorage:StorageEvent"><apiName>StorageEvent</apiName><shortdesc>
	 Is fired when a storage area changes
	 
	 </shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.events:Event</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Is fired when a storage area changes
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C Web Storage Specification</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: HTML5 compatibility - Local storage and session storage</linktext></link></related-links><apiOperation id="webstorage:StorageEvent:initStorageEvent"><apiName>initStorageEvent</apiName><shortdesc>
		 Initializes attributes of an Event created through the 
		 DocumentEvent.createEvent method.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Event.type, the local name of the 
		 event type.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.bubbles. This parameter overrides 
		 the intrinsic bubbling behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Specifies Event.cancelable. This parameter 
		 overrides the intrinsic cancelable behavior of the event.
		 </apiDesc></apiParam><apiParam><apiItemName>keyArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The key being changed.
		 </apiDesc></apiParam><apiParam><apiItemName>oldValueArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The old value of the key being changed.
		 </apiDesc></apiParam><apiParam><apiItemName>newValueArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The new value of the key being changed.
		 </apiDesc></apiParam><apiParam><apiItemName>urlArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The address of the document whose key changed.
		 </apiDesc></apiParam><apiParam><apiItemName>sourceArg</apiItemName><apiOperationClassifier>dom:WindowProxy</apiOperationClassifier><apiDesc>The WindowProxy object of the browsing context of the document whose key changed.
		 </apiDesc></apiParam><apiParam><apiItemName>storageAreaArg</apiItemName><apiOperationClassifier>webstorage:Storage</apiOperationClassifier><apiDesc>The Storage object that was affected.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of an Event created through the 
		 DocumentEvent.createEvent method.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: initStorageEvent Method</linktext></link></related-links></apiOperation><apiOperation id="webstorage:StorageEvent:initStorageEventNS"><apiName>initStorageEventNS</apiName><shortdesc>
		 Initializes attributes of a StorageEvent object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiSince version="DOMEvents 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>namespaceURI</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Refer to the Event.initEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>typeArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Refer to the Event.initEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>canBubbleArg</apiItemName><apiType value="Boolean"/><apiDesc>Refer to the Event.initEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>cancelableArg</apiItemName><apiType value="Boolean"/><apiDesc>Refer to the Event.initEventNS() method for a description of this parameter.
		 </apiDesc></apiParam><apiParam><apiItemName>keyArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies StorageEvent.key.
		 </apiDesc></apiParam><apiParam><apiItemName>oldValueArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies StorageEvent.oldValue.
		 </apiDesc></apiParam><apiParam><apiItemName>newValueArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies StorageEvent.newValue.
		 </apiDesc></apiParam><apiParam><apiItemName>urlArg</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies StorageEvent.url.
		 </apiDesc></apiParam><apiParam><apiItemName>sourceArg</apiItemName><apiOperationClassifier>dom:WindowProxy</apiOperationClassifier><apiDesc>Specifies StorageEvent.source.
		 </apiDesc></apiParam><apiParam><apiItemName>storageAreaArg</apiItemName><apiOperationClassifier>webstorage:Storage</apiOperationClassifier><apiDesc>Specifies StorageEvent.storageArea.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Initializes attributes of a StorageEvent object. This method has 
		 the same behavior as Event.initEventNS(). 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: initStorageEvent Method</linktext></link><link href="dom.events.xml#Event/initEventNS()"><linktext>dom.events.Event.initEventNS()</linktext></link></related-links></apiOperation><apiValue id="webstorage:StorageEvent:domain:get"><apiName>domain</apiName><shortdesc>
		 The domain the field is stored in.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The domain the field is stored in.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:key:get"><apiName>key</apiName><shortdesc>
		 The key being changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The key being changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: key Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:newValue:get"><apiName>newValue</apiName><shortdesc>
		 The new value of the key being changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The new value of the key being changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: newValue Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:oldValue:get"><apiName>oldValue</apiName><shortdesc>
		 The old value of the key being changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The old value of the key being changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: oldValue Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:source:get"><apiName>source</apiName><shortdesc>
		 The WindowProxy object of the browsing context of the document whose key changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:WindowProxy</apiValueClassifier></apiValueDef><apiDesc>
		 The WindowProxy object of the browsing context of the document whose key changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: source Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:storageArea:get"><apiName>storageArea</apiName><shortdesc>
		 The Storage object that was affected.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>webstorage:Storage</apiValueClassifier></apiValueDef><apiDesc>
		 The Storage object that was affected.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: storageArea Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:uri:get"><apiName>uri</apiName><shortdesc>
		 The URL of the page that changed the field.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Apple"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4_no"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URL of the page that changed the field.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue><apiValue id="webstorage:StorageEvent:url:get"><apiName>url</apiName><shortdesc>
		 The address of the document whose key changed.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="WebStorage" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5b4"/><apiTool name="Safari" version="3.0_no"/><apiTool name="Safari" version="3.1_no"/><apiTool name="Safari" version="4.0_no"/><apiTool name="Chrome" version="1.0_no"/><apiTool name="Chrome" version="2.0_no"/><apiTool name="Opera" version="9.62_no"/><apiTool name="Opera" version="10.0b_no"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The address of the document whose key changed.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://www.w3.org/TR/webstorage/#the-storage-event"><linktext>W3C - Web Storage: url Property</linktext></link><link href="http://quirksmode.org/dom/html5.html#localstorage"><linktext>Quirksmode: Local storage and session storage</linktext></link></related-links></apiValue></apiClassifier></apiPackage></allClasses>