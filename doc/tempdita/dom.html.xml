<apiPackage id="dom.html"><apiName>dom.html</apiName><apiDetail/><apiClassifier id="dom.html:HTMLDirectoryElement"><apiName>HTMLDirectoryElement</apiName><shortdesc>
	 Directory list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Directory list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDirectoryElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLScriptElement"><apiName>HTMLScriptElement</apiName><shortdesc>
	 Script statements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Script statements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLScriptElement:charset:get"><apiName>charset</apiName><shortdesc>
		 The character encoding of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The character encoding of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:defer:get"><apiName>defer</apiName><shortdesc>
		 Indicates that the user agent can defer processing of the script.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates that the user agent can defer processing of the script.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:event:get"><apiName>event</apiName><shortdesc>
		 Reserved for future use.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reserved for future use.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:htmlFor:get"><apiName>htmlFor</apiName><shortdesc>
		 Reserved for future use.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reserved for future use.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:src:get"><apiName>src</apiName><shortdesc>
		 URI designating an external script.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating an external script.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:text:get"><apiName>text</apiName><shortdesc>
		 The script content of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The script content of the element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLScriptElement:type:get"><apiName>type</apiName><shortdesc>
		 The content type of the script language.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The content type of the script language.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHtmlElement"><apiName>HTMLHtmlElement</apiName><shortdesc>
	 Root of an HTML document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Root of an HTML document. See the HTML element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHtmlElement:version:get"><apiName>version</apiName><shortdesc>
		 Version information about the document's DTD.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Version information about the document's DTD. This attribute is deprecated 
		 in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHeadElement"><apiName>HTMLHeadElement</apiName><shortdesc>
	 Document head information.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Document head information. See the HEAD element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHeadElement:profile:get"><apiName>profile</apiName><shortdesc>
		 URI designating a metadata profile.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a metadata profile. See the profile 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTitleElement"><apiName>HTMLTitleElement</apiName><shortdesc>
	 The document title.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The document title. See the TITLE element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTitleElement:text:get"><apiName>text</apiName><shortdesc>
		 The specified title as a string.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The specified title as a string.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFieldSetElement"><apiName>HTMLFieldSetElement</apiName><shortdesc>
	 Organizes form controls into logical groups.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Organizes form controls into logical groups.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFieldSetElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLButtonElement"><apiName>HTMLButtonElement</apiName><shortdesc>
	 Push button.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Push button.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLButtonElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of button (all lower case).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of button (all lower case).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLButtonElement:value:get"><apiName>value</apiName><shortdesc>
		 The current form control value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The current form control value.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLParamElement"><apiName>HTMLParamElement</apiName><shortdesc>
	 Parameters fed to the OBJECT element.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Parameters fed to the OBJECT element.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLParamElement:name:get"><apiName>name</apiName><shortdesc>
		 The name of a run-time parameter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of a run-time parameter.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLParamElement:type:get"><apiName>type</apiName><shortdesc>
		 Content type for the value attribute when valuetype has the value "ref".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Content type for the value attribute when valuetype has the value "ref".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLParamElement:value:get"><apiName>value</apiName><shortdesc>
		 The value of a run-time parameter.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The value of a run-time parameter.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLParamElement:valueType:get"><apiName>valueType</apiName><shortdesc>
		 Information about the meaning of the value attribute value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Information about the meaning of the value attribute value.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBaseElement"><apiName>HTMLBaseElement</apiName><shortdesc>
	 Document base URI [IETF RFC 2396].</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Document base URI [IETF RFC 2396]. See the BASE element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBaseElement:href:get"><apiName>href</apiName><shortdesc>
		 The base URI [IETF RFC 2396].</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The base URI [IETF RFC 2396]. See the href attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBaseElement:target:get"><apiName>target</apiName><shortdesc>
		 The default target frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The default target frame. See the target attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableSectionElement"><apiName>HTMLTableSectionElement</apiName><shortdesc>
	 The THEAD, TFOOT, and TBODY elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The THEAD, TFOOT, and TBODY elements.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLTableSectionElement:deleteRow"><apiName>deleteRow</apiName><shortdesc>
		 Delete a row from this section.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the row to be deleted, or -1 to delete the last row. This index starts from 0 
		 and is relative only to the rows contained inside this section, not all the rows in the table.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Delete a row from this section. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableSectionElement:insertRow"><apiName>insertRow</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Insert a row into this section.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created row.
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The row number where to insert a new row. This index starts from 0 and is relative only 
		 to the rows contained inside this section, not all the rows in the table.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Insert a row into this section. The new row is inserted immediately before the current indexth row in 
		 this section. If index is -1 or equal to the number of rows in this section, the new row is appended.  
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLTableSectionElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of data in cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of data in cells. See the align attribute for HTMLTheadElement for details.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:rows:get"><apiName>rows</apiName><shortdesc>
		 The collection of rows in this table section.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 The collection of rows in this table section.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableSectionElement:vAlign:get"><apiName>vAlign</apiName><shortdesc>
		 Vertical alignment of data in cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Vertical alignment of data in cells. See the valign attribute for HTMLTheadElement for details.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLParagraphElement"><apiName>HTMLParagraphElement</apiName><shortdesc>
	 Paragraphs.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Paragraphs.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLParagraphElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal text alignment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLSelectElement"><apiName>HTMLSelectElement</apiName><shortdesc>
	 The select element allows the selection of an option.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The select element allows the selection of an option. The contained options 
	 can be directly accessed through the select element as a collection. See 
	 the SELECT element definition in HTML 4.01.
	 
	 http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-40676705
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLSelectElement:add"><apiName>add</apiName><shortdesc>
		 Add a new element to the collection of OPTION elements for this SELECT.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>NOT_FOUND_ERR: Raised if before is not a 
		 descendant of the SELECT element.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier><apiDesc>The element to add.
		 </apiDesc></apiParam><apiParam><apiItemName>before</apiItemName><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier><apiDesc>The element to insert before, or null for the tail 
		 of the list.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Add a new element to the collection of OPTION elements for this SELECT. 
		 This method is the equivalent of the appendChild method of the Node 
		 interface if the before parameter is null. It is equivalent to the 
		 insertBefore method on the parent of before in all other cases. This 
		 method may have no effect if the new element is not an OPTION or 
		 an OPTGROUP. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLSelectElement:blur"><apiName>blur</apiName><shortdesc>
		 Causes the element to lose focus and fires the onblur event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Causes the element to lose focus and fires the onblur event.
		 
		 This method shifts focus away from the element it is applied 
		 to but does not set focus on the next element in the tab order.
		 
		 <b>IE</b>
		 In Microsoft Internet Explorer 5 and greater, elements that expose 
		 the blur method must have the TABINDEX attribute set.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLSelectElement:focus"><apiName>focus</apiName><shortdesc>
		 Causes the element to receive the focus and executes the code specified 
		 by the onfocus event.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Causes the element to receive the focus and executes the code specified 
		 by the onfocus event.
		 
		 This method fires the onfocus event.
		 
		 As of Microsoft Internet Explorer 5, elements that expose the focus method 
		 must have the TABINDEX attribute set.
		 
		 Elements cannot receive focus until the document finishes loading.
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLSelectElement:remove"><apiName>remove</apiName><shortdesc>
		 Remove an element from the collection of OPTION elements for this 
		 SELECT.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the item to remove, starting from 0.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Remove an element from the collection of OPTION elements for this 
		 SELECT. Does nothing if no element has the given index. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLSelectElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context. See the disabled attribute 
		 definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this 
		 control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:length:get"><apiName>length</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The number of options in this SELECT.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiException><apiDesc>NOT_SUPPORTED_ERR: if setting the length 
		 is not allowed by the implementation.
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The number of options in this SELECT.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:multiple:get"><apiName>multiple</apiName><shortdesc>
		 If true, multiple OPTION elements may be selected in this SELECT.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 If true, multiple OPTION elements may be selected in this SELECT. See 
		 the multiple attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form. See the name 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:onchange:get"><apiName>onchange</apiName><shortdesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:options:get"><apiName>options</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The collection of OPTION elements contained by this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLOptionsCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The collection of OPTION elements contained by this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:selectedIndex:get"><apiName>selectedIndex</apiName><shortdesc>
		 The ordinal index of the selected option, starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The ordinal index of the selected option, starting from 0. The value 
		 -1 is returned if no element is selected. If multiple options are 
		 selected, the index of the first selected option is returned.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:size:get"><apiName>size</apiName><shortdesc>
		 Number of visible rows.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Number of visible rows. See the size attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Gets/sets the tab order of the current element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Gets/sets the tab order of the current element. 
		 
		 </apiDesc><example>
		 b1 = document.getElementById("button1"); 
		 b1.tabIndex = 1;
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of this form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of this form control. This is the string "select-multiple" when 
		 the multiple attribute is true and the string "select-one" when false.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLSelectElement:value:get"><apiName>value</apiName><shortdesc>
		 The current form control value (i.e.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The current form control value (i.e. the value of the currently selected 
		 option), if multiple options are selected this is the value of the first 
		 selected option.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLOListElement"><apiName>HTMLOListElement</apiName><shortdesc>
	 Ordered list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Ordered list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLOListElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOListElement:start:get"><apiName>start</apiName><shortdesc>
		 Starting sequence number.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Starting sequence number. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOListElement:type:get"><apiName>type</apiName><shortdesc>
		 Bullet style.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Bullet style. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLAnchorElement"><apiName>HTMLAnchorElement</apiName><shortdesc>
	 The anchor element.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The anchor element.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLAnchorElement:blur"><apiName>blur</apiName><shortdesc>
		 Removes keyboard focus from this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes keyboard focus from this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLAnchorElement:focus"><apiName>focus</apiName><shortdesc>
		 Gives keyboard focus to this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Gives keyboard focus to this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLAnchorElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:charset:get"><apiName>charset</apiName><shortdesc>
		 The character encoding of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The character encoding of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:coords:get"><apiName>coords</apiName><shortdesc>
		 Comma-separated list of lengths, defining an active region geometry.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Comma-separated list of lengths, defining an active region geometry.
		 
		 <p>This attribute specifies the position and shape on the screen. The 
		 number and order of values depends on the shape being defined. Possible combinations:
		 
		 <adobetable class="innertable">
		 
		 <tgroup cols="4"><thead><row><row>
		 		<entry><p>Shape</p></entry>
		 		<entry><p>Values</p></entry>
		 	</row><row>
		 		<entry><codeph>rect</codeph></entry>
		 		<entry>left-x, top-y, right-x, bottom-y.</entry>
		 	</row><row>
		 		<entry><codeph>circle</codeph></entry>
		 		<entry>center-x, center-y, radius. <b>Note:</b> When the radius value is a percentage value, 
		 user agents should calculate the final radius value based on the associated object's width 
		 and height. The radius should be the smaller value of the two.</entry>
		 	</row><row>
		 		<entry><codeph>poly</codeph></entry>
		 		<entry>x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should 
		 be the same to close the polygon. When these coordinate values are not the same, user agents 
		 should infer an additional coordinate pair to close the polygon.</entry>
		 	</row></row></thead><tbody/></tgroup></adobetable>
		 </p>
		 
		 <p>Coordinates are relative to the top, left corner of the object. All values are lengths. 
		 All values are separated by commas.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:href:get"><apiName>href</apiName><shortdesc>
		 The absolute URI of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The absolute URI of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:hreflang:get"><apiName>hreflang</apiName><shortdesc>
		 Language code of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Language code of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:name:get"><apiName>name</apiName><shortdesc>
		 Anchor name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Anchor name.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:rel:get"><apiName>rel</apiName><shortdesc>
		 Forward link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Forward link type.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:rev:get"><apiName>rev</apiName><shortdesc>
		 Reverse link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reverse link type.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:shape:get"><apiName>shape</apiName><shortdesc>
		 The shape of the active area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The shape of the active area. The coordinates are given by coords. 
		 
		 <p>Possible values can be:
		 <ul>
		 <li>default: Specifies the entire region</li>
		 <li>rect: Define a rectangular region</li>
		 <li>circle: Define a circular region</li>
		 <li>poly: Define a polygonal region</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAnchorElement:type:get"><apiName>type</apiName><shortdesc>
		 Advisory content type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Advisory content type.
		 
		 <p>This attribute gives an advisory hint as to the content type of 
		 the content available at the link target address. It allows user agents 
		 to opt to use a fallback mechanism rather than fetch the content if 
		 they are advised that they will get content in a content type they do 
		 not support.</p>
		 
		 <p>Authors who use this attribute take responsibility to manage the risk 
		 that it may become inconsistent with the content available at the link 
		 target address.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHeadingElement"><apiName>HTMLHeadingElement</apiName><shortdesc>
	 For the H1 to H6 elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 For the H1 to H6 elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHeadingElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal text alignment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTextAreaElement"><apiName>HTMLTextAreaElement</apiName><shortdesc>
	 Multi-line text field.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Multi-line text field.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLTextAreaElement:blur"><apiName>blur</apiName><shortdesc>
		 Removes keyboard focus from this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes keyboard focus from this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTextAreaElement:focus"><apiName>focus</apiName><shortdesc>
		 Gives keyboard focus to this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Gives keyboard focus to this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTextAreaElement:select"><apiName>select</apiName><shortdesc>
		 Select the contents of the TEXTAREA.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Select the contents of the TEXTAREA. 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLTextAreaElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:cols:get"><apiName>cols</apiName><shortdesc>
		 Width of control (in characters).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Width of control (in characters).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:defaultValue:get"><apiName>defaultValue</apiName><shortdesc>
		 Represents the contents of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the contents of the element. The value of this attribute does 
		 not change if the contents of the corresponding form control, in an 
		 interactive user agent, changes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this 
		 control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onchange:get"><apiName>onchange</apiName><shortdesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:onselect:get"><apiName>onselect</apiName><shortdesc>
		 The onselect event occurs when a user selects some text in a text field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onselect event occurs when a user selects some text in a text field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:readOnly:get"><apiName>readOnly</apiName><shortdesc>
		 This control is read-only.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 This control is read-only.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:rows:get"><apiName>rows</apiName><shortdesc>
		 Number of text rows.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Number of text rows.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of this form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of this form control. This the string "textarea".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTextAreaElement:value:get"><apiName>value</apiName><shortdesc>
		 Represents the current contents of the corresponding form control, in an 
		 interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the current contents of the corresponding form control, in an 
		 interactive user agent. Changing this attribute changes the contents of the 
		 form control, but does not change the contents of the element. If the entirety 
		 of the data can not fit into a single DOMString, the implementation may 
		 truncate the data.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLModElement"><apiName>HTMLModElement</apiName><shortdesc>
	 Notice of modification to part of a document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Notice of modification to part of a document.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLModElement:cite:get"><apiName>cite</apiName><shortdesc>
		 A URI designating a document that describes the reason for the change.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating a document that describes the reason for the change.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLModElement:dateTime:get"><apiName>dateTime</apiName><shortdesc>
		 The date and time of the change.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The date and time of the change.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBaseFontElement"><apiName>HTMLBaseFontElement</apiName><shortdesc>
	 Base font.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Base font. This element is deprecated in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBaseFontElement:color:get"><apiName>color</apiName><shortdesc>
		 Font color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBaseFontElement:face:get"><apiName>face</apiName><shortdesc>
		 Font face identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font face identifier. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBaseFontElement:size:get"><apiName>size</apiName><shortdesc>
		 Computed font size.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Computed font size. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLIElement"><apiName>HTMLLIElement</apiName><shortdesc>
	 List item.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 List item.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLIElement:type:get"><apiName>type</apiName><shortdesc>
		 List item bullet style.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 List item bullet style. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLIElement:value:get"><apiName>value</apiName><shortdesc>
		 Reset sequence number when used in OL.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Reset sequence number when used in OL. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLElement"><apiName>HTMLElement</apiName><shortdesc>
	 All HTML element interfaces derive from this class.</shortdesc><prolog><asMetadata/><asCustoms><internal>http://www.whatwg.org/specs/web-apps/current-work/#htmlelement
	 </internal></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.style.css:ElementCSSInlineStyle</apiBaseInterface><apiBaseClassifier>dom.core:Element</apiBaseClassifier></apiClassifierDef><apiDesc>
	 All HTML element interfaces derive from this class. Elements that only 
	 expose the HTML core attributes are represented by the base 
	 HTMLElement interface. These elements are as follows:
	 
	 <ul>
	 <li>special: SUB, SUP, SPAN, BDO</li>
	 <li>font: TT, I, B, U, S, STRIKE, BIG, SMALL</li>
	 <li>phrase: EM, STRONG, DFN, CODE, SAMP, KBD, VAR, CITE, ACRONYM, ABBR</li>
	 <li>list: DD, DT</li>
	 <li>NOFRAMES, NOSCRIPT</li>
	 <li>ADDRESS, CENTER</li>
	 </ul>
	 
	 DOM Level 2
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLElement:className:get"><apiName>className</apiName><shortdesc>
		 The class attribute of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The class attribute of the element. This attribute has been renamed 
		 due to conflicts with the "class" keyword exposed by many languages. 
		 See the class attribute definition in HTML 4.01.
		 
		 </apiDesc><example>
		 var elementNodeReference = document.getElementById("div1");
		 if (elementNodeReference.className == "fixed") {
		 // skip a particular class of element
		 goNextElement();
		 };
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:dir:get"><apiName>dir</apiName><shortdesc>
		 The dir attribute gets or sets the text writing directionality of 
		 the content of the current element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The dir attribute gets or sets the text writing directionality of 
		 the content of the current element. 
		 
		 Possible values for dir are ltr, for Left-to-right, and rtl, for Right-to-left. 
		 
		 Note: The text writing directionality of an element is which direction 
		 that text goes (for support of different language systems). Arabic 
		 languages and Hebrew are typical languages using the rtl directionality.
		 
		 Note: An image can have its dir attribute set to rtl in which case the 
		 HTML attributes title and alt will be formatted and defined as rtl.
		 
		 Note: When a table has its dir set to rtl, the column order are arranged 
		 from right to left. 
		 
		 </apiDesc><example>
		 var parg = document.getElementById("para1");
		 parg.dir = "rtl"; 
		 // change the text direction on a paragraph identified as "para1"
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:id:get"><apiName>id</apiName><shortdesc>
		 Gets or sets the element's identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets or sets the element's identifier. 
		 
		 Note: The ID must be unique in a document, and is often used to 
		 retrieve the element using document.getElementById. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:lang:get"><apiName>lang</apiName><shortdesc>
		 This property gets or sets the base language of an element's attribute 
		 values and text content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This property gets or sets the base language of an element's attribute 
		 values and text content. 
		 
		 Note: The language code returned by this property is defined in 
		 RFC 1766. Common examples include "en" for English, "ja" for 
		 Japanese, "es" for Spanish and so on. The default value of this 
		 attribute is unknown. Note that this attribute, though valid at the 
		 individual element level described here, is most often specified for 
		 the root element of the document.
		 
		 Note: This also only works with the deprecated lang attribute and not 
		 with xml:lang.
		 
		 </apiDesc><example>
		 // this snippet compares the base language and 
		 // redirects to another url based on language
		 if (document.documentElement.lang == "en") {
		 window.location.href = "Some_document.html.en";
		 } else if(document.documentElement.lang == "ru") {
		 window.location.href = "Some_document.html.ru";
		 };
		 </example></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onclick:get"><apiName>onclick</apiName><shortdesc>
		 a pointer button was clicked
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was clicked
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:oncopy:get"><apiName>oncopy</apiName><shortdesc>
		 Non-Standard | Firefox 3+
		 
		 This event is sent when the user attempts to copy text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b>
		 
		 This event is sent when the user attempts to copy text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:oncut:get"><apiName>oncut</apiName><shortdesc>
		 Non-Standard | Firefox 3+
		 
		 This event is sent when the user attempts to cut text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b>
		 
		 This event is sent when the user attempts to cut text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:ondblclick:get"><apiName>ondblclick</apiName><shortdesc>
		 a pointer button was double clicked
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was double clicked
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onkeydown:get"><apiName>onkeydown</apiName><shortdesc>
		 a key was pressed down
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a key was pressed down
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onkeypress:get"><apiName>onkeypress</apiName><shortdesc>
		 a key was pressed and released
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a key was pressed and released
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onkeyup:get"><apiName>onkeyup</apiName><shortdesc>
		 a key was released
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a key was released
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmousedown:get"><apiName>onmousedown</apiName><shortdesc>
		 a pointer button was pressed down
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was pressed down
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmousemove:get"><apiName>onmousemove</apiName><shortdesc>
		 a pointer was moved within
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer was moved within
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmouseout:get"><apiName>onmouseout</apiName><shortdesc>
		 a pointer was moved away
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer was moved away
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmouseover:get"><apiName>onmouseover</apiName><shortdesc>
		 a pointer was moved onto
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer was moved onto
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onmouseup:get"><apiName>onmouseup</apiName><shortdesc>
		 a pointer button was released
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 a pointer button was released
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:onpaste:get"><apiName>onpaste</apiName><shortdesc>
		 Non-Standard | Firefox 3+
		 
		 This event is sent when the user attempts to paste text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>Non-Standard | Firefox 3+</b>
		 
		 This event is sent when the user attempts to paste text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:style:get"><apiName>style</apiName><shortdesc>
		 
		 Returns an object that represents the element's style attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.style.css:CSSStyleDeclaration</apiValueClassifier></apiValueDef><apiDesc>
		 
		 Returns an object that represents the element's style attribute.
		 
		 <p>Note: Since the style property has the same (and highest) priority 
		 in the CSS cascade as an inline style declaration via the style 
		 attribute, it is useful for setting style on one specific element.</p>
		 
		 <p>Note: However, it is not useful for learning about the element's 
		 style in general, since it represents only the CSS declarations set 
		 in the element's inline style attribute, not those that come from 
		 style rules elsewhere, such as style rules in the &lt;head&gt; section, or
		 external style sheets.</p>
		 
		 <p><b>Note:</b> To get the values of all CSS properties for an element you 
		 should use window.getComputedStyle instead.</p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLElement:title:get"><apiName>title</apiName><shortdesc>
		 Establishes the text to be displayed in a 'tool tip' popup when the 
		 mouse is over the displayed node.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Establishes the text to be displayed in a 'tool tip' popup when the 
		 mouse is over the displayed node.
		 
		 If a node does not have a title attribute, then the default action 
		 is to inherit it from its parent node, which in turn may inherit it 
		 from its parent node, etc. 
		 
		 </apiDesc><example>
		 button1.title = "click to refresh";
		 </example></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLMapElement"><apiName>HTMLMapElement</apiName><shortdesc>
	 Client-side image map.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Client-side image map.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLMapElement:areas:get"><apiName>areas</apiName><shortdesc>
		 The list of areas defined for the image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 The list of areas defined for the image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMapElement:name:get"><apiName>name</apiName><shortdesc>
		 Names the map (for use with usemap).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Names the map (for use with usemap).
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLOptGroupElement"><apiName>HTMLOptGroupElement</apiName><shortdesc>
	 Group options together in logical subdivisions.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Group options together in logical subdivisions. See the OPTGROUP element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLOptGroupElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptGroupElement:label:get"><apiName>label</apiName><shortdesc>
		 Assigns a label to this option group.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Assigns a label to this option group. See the label attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLDivElement"><apiName>HTMLDivElement</apiName><shortdesc>
	 Generic block container.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Generic block container.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDivElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal text alignment.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal text alignment. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLHRElement"><apiName>HTMLHRElement</apiName><shortdesc>
	 Create a horizontal rule.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Create a horizontal rule.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLHRElement:align:get"><apiName>align</apiName><shortdesc>
		 Align the rule on the page.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Align the rule on the page. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>left</li>
		 <li>center</li>
		 <li>right</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLHRElement:noShade:get"><apiName>noShade</apiName><shortdesc>
		 Indicates to the user agent that there should be no shading in the rendering of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Indicates to the user agent that there should be no shading in the rendering of this element. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLHRElement:size:get"><apiName>size</apiName><shortdesc>
		 The height of the rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The height of the rule. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLHRElement:width:get"><apiName>width</apiName><shortdesc>
		 The width of the rule.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The width of the rule. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableColElement"><apiName>HTMLTableColElement</apiName><shortdesc>
	 Regroups the COL and COLGROUP elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Regroups the COL and COLGROUP elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableColElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of cell data in column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of cell data in column.
		 <p>Valid values are: 
		 <ul>
		 <li>left: Left-flush data/Left-justify text. This is the default value for table data.</li>
		 <li>center: Center data/Center-justify text. This is the default value for table headers.</li>
		 <li>right: Right-flush data/Right-justify text.</li>
		 <li>justify: Double-justify text.</li>
		 <li>char: Align text around a specific character. If a user agent doesn't support character alignment, behavior in the presence of this value is unspecified.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:span:get"><apiName>span</apiName><shortdesc>
		 Indicates the number of columns in a group or affected by a grouping.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Indicates the number of columns in a group or affected by a grouping.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:vAlign:get"><apiName>vAlign</apiName><shortdesc>
		 Vertical alignment of cell data in column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Vertical alignment of cell data in column.
		 <p>Valid values are: 
		 <ul>
		 <li>top: Cell data is flush with the top of the cell.</li>
		 <li>middle: Cell data is centered vertically within the cell. This is the default value.</li>
		 <li>bottom: Cell data is flush with the bottom of the cell.</li>
		 <li>baseline: All cells in the same row as a cell whose valign attribute has this value should have their textual data positioned so that the first text line occurs on a baseline common to all cells in the row. This constraint does not apply to subsequent text lines in these cells.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableColElement:width:get"><apiName>width</apiName><shortdesc>
		 Default column width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Default column width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLDocument"><apiName>HTMLDocument</apiName><shortdesc>
	 An HTMLDocument is the root of the HTML hierarchy and holds the entire content.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
	 </modified></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseInterface>dom.xpath:XPathEvaluator</apiBaseInterface><apiBaseClassifier>dom.core:Document</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An HTMLDocument is the root of the HTML hierarchy and holds the entire content.
	 
	 <p>Besides providing access to the hierarchy, it also provides some convenience 
	 methods for accessing certain sets of information from the document.</p>
	 
	 <p>The following properties have been deprecated in favor of the 
	 corresponding ones for the BODY element:
	 <ul>
	 <li>alinkColor</li>
	 <li>background</li>
	 <li>bgColor</li>
	 <li>fgColor</li>
	 <li>linkColor</li>
	 <li>vlinkColor</li>
	 </ul>
	 </p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms531073%28VS.85%29.aspx"><linktext>MSDN - document Object</linktext></link><link href="http://msdn.microsoft.com/en-us/library/dd347078%28VS.85%29.aspx"><linktext>MSDN - HTMLDocument Prototype</linktext></link><link href="http://developer.mozilla.org/en/DOM/document"><linktext>MDC - Document</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-26809268"><linktext>W3C - HTMLDocument</linktext></link></related-links><apiOperation id="dom.html:HTMLDocument:captureEvents"><apiName>captureEvents</apiName><shortdesc>
		 Instructs the browser to grab events of a specific type before they reach their intended target document objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>eventTypeList</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A comma-separated list of case-sensitive event types as derived from the available 
		 Event object constants, such as Event.CLICK or Event.MOUSEMOVE.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Instructs the browser to grab events of a specific type before they reach their intended target document objects. 
		 The object invoking this method must then have event handlers defined for the given event types to process the event. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.captureEvents"><linktext>MDC - Document.captureEvents()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:clear"><apiName>clear</apiName><shortdesc>
		 This method used to clear the whole specified document in early (pre-1.0) 
		 versions of Mozilla.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8_no"/><apiTool name="Firefox" version="2.0_no"/><apiTool name="Firefox" version="3.0_no"/><apiTool name="Firefox" version="3.5_no"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 This method used to clear the whole specified document in early (pre-1.0) 
		 versions of Mozilla.
		 
		 <p>In recent versions of Mozilla-based applications as well as in Internet 
		 Explorer and Netscape 4 this method does nothing. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536361%28VS.85%29.aspx"><linktext>MSDN - clear Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.clear"><linktext>MDC - Document.clear()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:close"><apiName>close</apiName><shortdesc>
		 Closes a document stream opened by open() and forces rendering.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Closes a document stream opened by open() and forces rendering. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // open a document to write to it.
		 // write the content of the document.
		 // close the document.
		 document.open();
		 document.write("&lt;p&gt;The one and only content.&lt;/p&gt;");
		 document.close();</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536369%28VS.85%29.aspx"><linktext>MSDN - close Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.close"><linktext>MDC - Document.close()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-98948567"><linktext>W3C - HTMLDocument.close()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:createExpression"><apiName>createExpression</apiName><shortdesc>
		 
		 Creates a parsed XPath expression with resolved namespaces.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The compiled form of the XPath expression.
		 
		 </apiDesc><apiOperationClassifier>dom.xpath:XPathExpression</apiOperationClassifier></apiReturn><apiParam><apiItemName>expression</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The XPath expression string to be parsed.
		 </apiDesc></apiParam><apiParam><apiItemName>resolver</apiItemName><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier><apiDesc>The resolver permits translation of all prefixes, including the xml 
		 namespace prefix, within the XPath expression into appropriate namespace URIs. If this 
		 is specified as null, any namespace prefix within the expression will result in 
		 DOMException being thrown with the code NAMESPACE_ERR.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Creates a parsed XPath expression with resolved namespaces. This is useful when an 
		 expression will be reused in an application since it makes it possible to compile the 
		 expression string into a more efficient internal form and preresolve all namespace 
		 prefixes which occur within the expression.
		 
		 <p><b>Note (Mozilla):</b> Prior to Firefox 3, you could call this method on documents other 
		 than the one you planned to run the XPath against. Under Firefox 3, you must call it on the 
		 same document.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createExpression"><linktext>MDC - Document.createExpression()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createExpression"><linktext>W3C - XPathEvaluator.createExpression()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:createNSResolver"><apiName>createNSResolver</apiName><shortdesc>
		 
		 Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated 
		 relative to the context of the node where it appeared within the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>XPathNSResolver which resolves namespaces with respect to the definitions in scope for a specified node.
		 
		 </apiDesc><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier></apiReturn><apiParam><apiItemName>nodeResolver</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The node to be used as a context for namespace resolution.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Adapts any DOM node to resolve namespaces so that an XPath expression can be easily evaluated 
		 relative to the context of the node where it appeared within the document. This adapter works 
		 like the DOM Level 3 method lookupNamespaceURI  on nodes in resolving the namespaceURI from a 
		 given prefix using the current information available in the node's hierarchy at the time 
		 lookupNamespaceURI is called. also correctly resolving the implicit xml prefix.
		 
		 <p><b>Note:</b> XPath defines QNames without prefix to match only elements in the 
		 null namespace. There is no way in XPath to pick up the default namespace as applied to a regular 
		 element reference (e.g., <codeph>p[&amp;64;id='_myid']</codeph> for <codeph>xmlns='http://www.w3.org/1999/xhtml'</codeph>). 
		 To match default elements in a non-null namespace, you either have to refer to a particular element using 
		 a form such as <codeph>~~</codeph></p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.createNSResolver"><linktext>MDC - Document.createNSResolver()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-createNSResolver"><linktext>W3C - XPathEvaluator.createNSResolver()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:evaluate"><apiName>evaluate</apiName><shortdesc>
		 
		 Evaluates an XPath expression string and returns a result of the specified type if possible.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMXPath" version="3"/><apiSince version="DOMXPath 3"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The result of the evaluation of the XPath expression. For XPath 1.0 results, this object 
		 will be of type XPathResult.
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>expression</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The XPath expression string to be parsed and evaluated.
		 </apiDesc></apiParam><apiParam><apiItemName>contextNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>The context is context node for the evaluation of this XPath expression. 
		 If the XPathEvaluator was obtained by casting the Document then this must be owned by the same 
		 document and must be a Document, Element, Attribute, Text, CDATASection, Comment, 
		 ProcessingInstruction, or XPathNamespace  node. If the context node is a Text or a CDATASection, 
		 then the context is interpreted as the whole logical text node as seen by XPath, unless the node 
		 is empty in which case it may not serve as the XPath context.
		 </apiDesc></apiParam><apiParam><apiItemName>resolver</apiItemName><apiOperationClassifier>dom.xpath:XPathNSResolver</apiOperationClassifier><apiDesc>The resolver permits translation of all prefixes, including the xml namespace 
		 prefix, within the XPath expression into appropriate namespace URIs. If this is specified as null, 
		 any namespace prefix within the expression will result in DOMException being thrown with the 
		 code NAMESPACE_ERR.
		 </apiDesc></apiParam><apiParam><apiItemName>type</apiItemName><apiType value="Number"/><apiDesc>If a specific type is specified, then the result will be returned as the 
		 corresponding type. For XPath 1.0 results, this must be one of the codes of the XPathResult interface.
		 </apiDesc></apiParam><apiParam><apiItemName>result</apiItemName><apiOperationClassifier>dom.core.types:DOMObject</apiOperationClassifier><apiDesc>The result specifies a specific result object which may be reused and returned by 
		 this method. If this is specified as nullor the implementation does not reuse the specified result, 
		 a new result object will be constructed and returned. For XPath 1.0 results, this object will be 
		 of type XPathResult.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 
		 Evaluates an XPath expression string and returns a result of the specified type if possible.
		 
		 </apiDesc><example>
		 <codeblock>
		 var headings = document.evaluate("//h2", document, null, XPathResult.ANY_TYPE, null); 
		 /~~ Search the document for all h2 elements.  
		  ~~ The result will likely be an unordered node iterator. ~~/
		 var thisHeading = headings.iterateNext(); 
		 var alertText = "Level 2 headings in this document are:\n";
		 while (thisHeading) {
		 	alertText += thisHeading.textContent + "\n";
		 	thisHeading = headings.iterateNext();
		 }
		 alert(alertText); // Alerts the text of all h2 elements</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.evaluate"><linktext>MDC - Document.evaluate()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-3-XPath/xpath.html#XPathEvaluator-evaluate"><linktext>W3C - XPathEvaluator.evaluate()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:execCommand"><apiName>execCommand</apiName><shortdesc>
		 When an HTML document has been switched to designMode, the document object exposes the execCommand 
		 method which allows one to run commands to manipulate the contents of the editable region.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>aCommandName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the command 
		 </apiDesc></apiParam><apiParam><apiItemName>aShowDefaultUI</apiItemName><apiType value="Boolean"/><apiDesc>Whether the default user interface should be shown. This is not implemented in Mozilla.
		 </apiDesc></apiParam><apiParam><apiItemName>aValueArgument</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Some commands (such as insertimage) require an extra value argument (the image's url). 
		 Pass an argument of null if no argument is needed.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 When an HTML document has been switched to designMode, the document object exposes the execCommand 
		 method which allows one to run commands to manipulate the contents of the editable region. Most 
		 commands affect the document's selection (bold, italics, etc), while others insert new elements 
		 (adding a link) or affect an entire line (indenting). When using contentEditable, calling execCommand 
		 will affect the currently active editable element.
		 
		 </apiDesc><example>
		 <codeblock>
		 //HTML:
		 &lt;button onclick="doRichEditCommand('bold')" style="font-weight:bold;"&gt;B&lt;/button&gt;
		 
		 //JavaScript:
		 function doRichEditCommand(aName, aArg){
		 	getIFrameDocument('editorWindow').execCommand(aName,false, aArg);
		 	document.getElementById('editorWindow').contentWindow.focus()
		 }</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752577%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::execCommand Method</linktext></link><link href="http://developer.mozilla.org/En/Document.execCommand"><linktext>MDC - Document.execCommand()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:execCommandShowHelp"><apiName>execCommandShowHelp</apiName><shortdesc>
		 Displays help information for the given command identifier.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>aCommandName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Contains an identifier of a command. It can be any command identifier given in the list of  Command Identifiers.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Displays help information for the given command identifier.
		  
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752578%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::execCommandShowHelp Method</linktext></link><link href="http://developer.mozilla.org/En/DOM/document.execCommandShowHelp"><linktext>MDC - Document.execCommandShowHelp()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:fireEvent"><apiName>fireEvent</apiName><shortdesc>
		 Fires a specified event on the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Event fired successfully
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>type</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>String that specifies the name of the event to fire.
		 </apiDesc></apiParam><apiParam><apiItemName>event</apiItemName><apiType value="Object"/><apiData>null</apiData><apiDesc>Object that specifies the event object from which to obtain event object properties.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Fires a specified event on the object.
		 
		 <p>If the event being fired cannot be cancelled, fireEvent always returns true.</p>
		 
		 <p>Regardless of their values specified in the event object, the values of the 
		 four event properties—cancelBubble, returnValue, srcElement, and type—are 
		 automatically initialized to the values shown in the following table.</p> 
		 
		 <ul>
		 <li>cancelBubble : false</li>
		 <li>returnValue : true</li>
		 <li>srcElement : element on which the event is fired</li>
		 <li>type : name of the event that is fired</li>
		 </ul>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536423%28VS.85%29.aspx"><linktext>MSDN - fireEvent Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:focus"><apiName>focus</apiName><shortdesc>
		 Causes the element to receive the focus and executes the code specified by the  onfocus event.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Causes the element to receive the focus and executes the code specified by the  onfocus event. 
		 
		 <p><b>Note (IE):</b> This method raises the onfocus event. The effect depends on the object calling 
		 the method. When called for child windows (such as those created with the  open method of a  window object), 
		 focus brings the target window to the foreground.</p>
		 
		 <p><b>Note (IE):</b> Windows Internet Explorer 8 and later. The focus method no longer brings child windows 
		 (such as those created with the open method) to the foreground. Child windows now request focus from the user, 
		 usually by flashing the title bar. To directly bring the window to the foreground, add script to the child window 
		 that calls the focus method of its window object.</p>
		 
		 <p><b>Note:</b> Internet Explorer 7 and later. For security reasons, child windows will only respond to 
		 the focus method when the following conditions are true:
		 <ul>
		 <li>The child window does not have multiple tabs open.</li>
		 <li>The focus method was not triggered by a double-click action.</li>
		 </ul>
		 If any of these conditions are true, the child window ignores the focus event.
		 </p>
		 
		 <p><b>Note:</b> As of Microsoft Internet Explorer 5, elements that expose the focus method must have the TABINDEX attribute set.</p>
		 
		 <p><b>Note:</b> Elements cannot receive focus until the document finishes loading.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536425%28VS.85%29.aspx"><linktext>MSDN - focus Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:getBoxObjectFor"><apiName>getBoxObjectFor</apiName><shortdesc>
		 This particular method was a way for XUL elements to efficiently determine their position, amongst other things.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The dimensions of the element
		 
		 </apiDesc><apiOperationClassifier>gecko:nsIBoxObject</apiOperationClassifier></apiReturn><apiParam><apiItemName>element</apiItemName><apiOperationClassifier>dom.core:Element</apiOperationClassifier><apiDesc>Target element
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This particular method was a way for XUL elements to efficiently determine their position, amongst other things. 
		 A couple of years ago this feature started to be used by the general web-developer world. This was quickly 
		 realized to be a major mistake.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.getBoxObjectFor"><linktext>MDC - Document.getBoxObjectFor()</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=340571"><linktext>Bug 340571</linktext></link><link href="http://ejohn.org/blog/the-getboxobjectfor-apocalypse/"><linktext>John Resig - The getBoxObjectFor Apocalypse</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:getElementsByClassName"><apiName>getElementsByClassName</apiName><shortdesc>
		 Returns a set of elements with the given class name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A live NodeList object containing all the elements in the document, in tree order, that have 
		 all the classes specified in that argument, having obtained the classes by splitting a string on spaces. 
		 If there are no tokens specified in the argument, then returns an empty NodeList.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>classNames</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>An unordered set of unique space-separated tokens representing classes.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a set of elements with the given class name. When called on the document object, the 
		 complete document is searched, including the root node. You may also call getElementsByClassName 
		 on any element; it will return only elements under the specified root element with the given class name. 
		 
		 </apiDesc><example>
		 <p>Get all elements that have a class of 'test'</p>
		 
		 <codeblock>document.getElementsByClassName('test')</codeblock>
		 
		 <p>Get all elements that have a class of 'red' and 'test'</p>
		 
		 <codeblock>document.getElementsByClassName('red test')</codeblock>
		 
		 <p>Get all elements that have a class of 'test', inside of an element that has the ID of 'main'</p>
		 
		 <codeblock>document.getElementById('main').getElementsByClassName('test')</codeblock>
		 
		 <p>And if we go ahead and add in <xref href="http://developer.mozilla.org/en/New_in_JavaScript_1.6" rel="internal">JavaScript 1.6</xref>'s Array extras, we can do some really-cool matches.</p>
		 
		 <p>Find all div elements that have a class of 'test'</p>
		 
		 <codeblock>
		 Array.filter( document.getElementsByClassName('test'), function(elem) {
		 	return elem.nodeName == 'DIV';
		 });</codeblock>
		 
		 <p>Find all elements that have a class of 'test' (as do their parent element)</p>
		 
		 <codeblock>
		 var test = document.getElementsByClassName('test');
		 Array.filter( test, function(elem){
		 	return Array.indexOf( test, elem.parentNode ) &gt; -1;
		 });</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.getElementsByClassName"><linktext>MDC - Document.getElementsByClassName()</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-getelementsbyclassname"><linktext>WHATWG - HTMLDocument.getElementsByClassName()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:getElementsByName"><apiName>getElementsByName</apiName><shortdesc>
		 Returns a list of elements with a given name in the (X)HTML document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The matching elements.
		 
		 </apiDesc><apiOperationClassifier>dom.core:NodeList</apiOperationClassifier></apiReturn><apiParam><apiItemName>elementName</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name attribute value for an element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a list of elements with a given name in the (X)HTML document. 
		 
		 </apiDesc><example>
		 <codeblock>// return some of the forms 
		 //&lt;form name="up"&gt;&lt;input type="text"/&gt;&lt;/form&gt; 
		 //&lt;form name="up"&gt;&lt;input type="text"/&gt;&lt;/form&gt; 
		 //&lt;form name="down"&gt;&lt;input type="text"/&gt;&lt;/div&gt; 
		 //&lt;form name="down"&gt;&lt;input type="text"/&gt;&lt;/div&gt; 
		 
		 up_forms = document.getElementsByName("up"); 
		 dump(up_forms.item(0).tagName); // returns "div"</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536438%28VS.85%29.aspx"><linktext>MSDN - getElementsByName Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.getElementsByName"><linktext>MDC - Document.getElementsByName()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-71555259"><linktext>W3C - HTMLDocument.getElementsByName()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:getSelection"><apiName>getSelection</apiName><shortdesc>
		 Return the contents of selected text in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The selected text
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Return the contents of selected text in the current document.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;INPUT TYPE="BUTTON" NAME="selectString" VALUE="Show 
		 any highlighted text" onClick="alert('The following text is 
		 selected:\n'+document.getSelection());"&gt; </codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.getSelection"><linktext>MDC - Document.getSelection()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:hasFocus"><apiName>hasFocus</apiName><shortdesc>
		 The hasFocus method returns true if the focus is currently located anywhere inside the specified document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns true if the document has focus; otherwise, returns false.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn></apiOperationDef><apiDesc>
		 The hasFocus method returns true if the focus is currently located anywhere inside the specified document.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536447%28VS.85%29.aspx"><linktext>MSDN - hasFocus Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.hasFocus"><linktext>MDC - Document.hasFocus()</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-hasfocus"><linktext>WHATWG - HTMLDocument.hasFocus()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:open"><apiName>open</apiName><shortdesc>
		 Open a document stream for writing.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the new  document object or the  window object. Use this reference to access properties and methods of the new document or window.
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiDefaultValue>text/html (Currently the only MIME type supported for this method.)
		 </apiDefaultValue><apiParam><apiItemName>url</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>When a new document is opened, <codeph>url</codeph> is a String that specifies a MIME type for the document. 
		 When a new window is opened, <codeph>url</codeph> is a String that specifies the URL to render in the new window. If a <codeph>url</codeph> 
		 is not specified, a new window with about:blank is displayed.
		 </apiDesc></apiParam><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	Optional. When a new document is opened, specify the String replace for <codeph>name</codeph> to specify 
		 that the new document replaces the current document in the history list. If the replace value is not specified 
		 when you open a document, a new entry is added to the history list. When a window is opened, this is a String 
		 that specifies the name of the window. The value of this parameter can be specified as the value of the  TARGET 
		 attribute for a  form or an  a element. This value defines this new window as the location to load a document. 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>replace</entry><entry>This value is only used to open a new document, and specifies that the new document replaces the current entry in the history list. </entry>
		 	</row><row>
		 		<entry>_blank</entry><entry>When a window is opened, the <codeph>url</codeph> is loaded into a new, unnamed window.</entry>
		 	</row><row>
		 		<entry>_parent</entry><entry>When a new window is opened, the <codeph>url</codeph> is loaded into the current frame's parent. If the frame has no parent, this value acts as the value _self. </entry>
		 	</row><row>
		 		<entry>_search</entry><entry>Disabled in Windows Internet Explorer 7, see  Security and Compatibility in Internet Explorer 7 for details. Otherwise, when a window is opened, the <codeph>url</codeph> is opened in the browser's search pane in Microsoft Internet Explorer 5 or later. </entry>
		 	</row><row>
		 		<entry>_self</entry><entry>When a window id opened, the current document is replaced with the specified <codeph>url</codeph>.</entry>
		 	</row><row>
		 		<entry>_top</entry><entry><codeph>url</codeph> replaces any framesets that are loaded. If there are no framesets defined, this value acts as the _self value.</entry>
		 	</row><row>
		 		<entry>_media</entry><entry>The <codeph>url</codeph> is loaded in the Media Bar in Internet Explorer 6. Windows XP Service Pack 2 (SP2) and later. This feature is no longer supported. By default the <codeph>url</codeph> is loaded into a new browser window or tab.</entry>
		 	</row></tbody></tgroup></adobetable>
		 </apiDesc></apiParam><apiParam><apiItemName>features</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>	Optional. A list of comma-separated items. Each item consists of an option and a value, separated 
		 by an equals sign (=), for example, "fullscreen=yes, toolbar=yes". The following features are supported.
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 
		 
		 
		 
		 
		 
		 
		 
		 
		 <tgroup cols="2"><thead><row><entry>Value</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>channelmode = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display the window in theater mode. The default is no. Internet Explorer 7. channelmode = { yes | 1 } overrides the height value, the width value, the top value, and the left value. When active, the Navigation Bar is hidden, and the Title Bar is visible. The Channel Band is no longer supported in Internet Explorer 7. Prior to Internet Explorer 7 channelmode = { yes | 1 } displays the Channel Band in theatre mode. </entry>
		 	</row><row>
		 		<entry>directories = { yes | no | 1 | 0 }</entry><entry>Specifies whether to add directory buttons. The default is yes. Internet Explorer 7. This feature is no longer supported. </entry>
		 	</row><row>
		 		<entry>fullscreen = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display the browser in full-screen mode. The default is no. Use full-screen mode carefully. Because this mode hides the browser's title bar and menus, you should always provide a button or other visual clue to help the user close the window. ALT+F4 closes the new window. Internet Explorer 7. A window in full-screen mode does not have to be in theatre mode. Prior to Internet Explorer 7, a window in full-screen mode must in theater mode (channelmode).</entry>
		 	</row><row>
		 		<entry>height = number</entry><entry>Internet Explorer 7. Sets the height of the window in pixels. The minimum value is 150, and specifies the minimum height of the browser content area. Prior to Internet Explorer 7, the minimum height value is 100. </entry>
		 	</row><row>
		 		<entry>left = number</entry><entry>Specifies the left position, in pixels. This value is relative to the upper-left corner of the screen. The value must be greater than or equal to zero.</entry>
		 	</row><row>
		 		<entry>location = { yes | no | 1 | 0 }</entry><entry>Internet Explorer 7. Specifies whether to display the navigation bar. The default is yes. Prior to Internet Explorer 7, this feature specifies whether to display the address bar. The Back command, the Forward command, and the Stop command are now located in the Navigation bar. Prior to Internet Explorer 7, navigation commands were located in the toolbar.</entry>
		 	</row><row>
		 		<entry>menubar = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display the menu bar. The default is yes. Internet Explorer 7. By default the menu bar is hidden, unless it is revealed by the ALT key. menubar = { no | 0 } prohibits the menubar from appearing even when the ALT key is pressed. The combination of menubar = { no | 0 } and toolbar = { no | 0 } hides the toolbar and disables any additional third-party user interfaces. </entry>
		 	</row><row>
		 		<entry>resizable = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display resize handles at the corners of the window. The default is yes. Internet Explorer 7. resizable = { no | 0 } disables tabs in a new window.</entry>
		 	</row><row>
		 		<entry>scrollbars = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display horizontal and vertical scroll bars. The default is yes.</entry>
		 	</row><row>
		 		<entry>status = { yes | no | 1 | 0 }</entry><entry>Specifies whether to add a Status Bar at the bottom of the window. The default is yes.</entry>
		 	</row><row>
		 		<entry>titlebar = { yes | no | 1 | 0 }</entry><entry>Specifies whether to display a Title Bar for the window. The default is yes. Internet Explorer 5.5 and later. This feature is no longer supported. The Title Bar remains visible unless the fullscreen sFeature is active. This parameter is ignored prior to Internet Explorer 5.5. It applies only if the calling application is an HTML Application or a trusted dialog box.</entry>
		 	</row><row>
		 		<entry>toolbar = { yes | no | 1 | 0 }</entry><entry>Internet Explorer 7. Specifies whether to display the browser command bar, making buttons such as Favorites Center, Add to Favorites, and Tools available. The default is yes. The combination of menubar = { no | 0 } and toolbar = { no | 0 } turns off the Toolbar and any additional third-party user interfaces. Prior to Internet Explorer 7, the toolbar sFeature specifies whether to display the browser toolbar, making buttons such as Back, Forward, and Stop available. </entry>
		 	</row><row>
		 		<entry>top = number</entry><entry>Specifies the top position, in pixels. This value is relative to the upper-left corner of the screen. The value must be greater than or equal to zero.</entry>
		 	</row><row>
		 		<entry>width = number</entry><entry>Internet Explorer 7. Sets the width of the window in pixels. The minimum value is 250, and specifies the minimum width of the browser content area. Prior to Internet Explorer 7, the minimum height value is 100. </entry>
		 	</row></tbody></tgroup></adobetable>
		 </apiDesc></apiParam><apiParam><apiItemName>replace</apiItemName><apiType value="Boolean"/><apiDesc>Optional. When the <codeph>url</codeph> is loaded into the same window, this Boolean parameter specifies whether the <codeph>url</codeph> creates a new entry or replaces the current entry in the window's history list. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Open a document stream for writing. If a document exists in the target, 
		 this method clears it.
		 
		 <p><b>Note (IE):</b> All params are for IE only</p>
		 
		 <p><b>Note:</b> This method and the ones following allow a user to add to or 
		 replace the structure model of a document using strings of unparsed 
		 HTML. At the time of writing alternate methods for providing similar 
		 functionality for both HTML and XML documents were being considered.</p>
		 
		 <p><b>Note (Mozilla):</b> Also, an automatic document.open() call happens when 
		 document.write() is called after the page has loaded, but that's not defined in the W3C specification. </p>
		 
		 <p><b>IE Style</b></p>
		 
		 <p>Opens a new window and loads a document specified by a given URL. Also, opens a new window that uses the 
		 <codeph>url</codeph> parameter and the <codeph>name</codeph> parameter to collect the output of the  write method and the  writeln method.</p>
		 
		 </apiDesc><example>
		 W3C / Mozilla Example
		 <codeblock>
		 // In this example, the document contents are 
		 // overwritten as the document 
		 // is reinitialized on open(). 
		 document.write("&lt;html&gt;&lt;p&gt;remove me&lt;/p&gt;&lt;/html&gt;"); 
		 document.open(); 
		 // document is empty.</codeblock>
		 
		 <p><b>IE Style</b></p>
		 <p>The following example shows how to use the open method to replace the current document with a new document and display the HTML markup contained in the variable sMarkup. </p>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 &lt;title&gt;First Document&lt;/title&gt;
		 &lt;script&gt;
		 function replace(){
		 	var oNewDoc = document.open("text/html", "replace");
		 	var sMarkup = "&lt;html&gt;&lt;head&gt;&lt;title&gt;New Document&lt;/title&gt;&lt;/head&gt;&lt;body&gt;Hello, world&lt;/body&gt;&lt;/html&gt;";
		 	oNewDoc.write(sMarkup);
		 	oNewDoc.close();
		 }
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 &lt;body&gt;
		 &lt;h1&gt;I just want to say&lt;/h1&gt;&lt;br&gt;
		 &lt;!--Button will call the replace function and replace the current page with a new one--&gt;
		 &lt;input type ="button" value = "Finish Sentence" onclick="replace();"&gt;
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536652%28VS.85%29.aspx"><linktext>MSDN - open Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.open"><linktext>MDC - Document.open()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-72161170"><linktext>W3C - HTMLDocument.open()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandEnabled"><apiName>queryCommandEnabled</apiName><shortdesc>
		 Determines whether the given command can be executed on the document in its current state.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the given command can be executed on the document in its current state. 
		 
		 <p><b>Note (IE):</b> Using  queryCommandEnabled ("delete") on a  TextRange object returns true, while  
		 queryCommandEnabled ("delete") on a  document object returns false. However,  execCommand ("delete") can still 
		 be used to delete the selected text. </p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536676%28VS.85%29.aspx"><linktext>MSDN - queryCommandEnabled Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandEnabled()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandIndeterm"><apiName>queryCommandIndeterm</apiName><shortdesc>
		 Determines whether the current selection is in an indetermined state.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the current selection is in an indetermined state. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752630%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandIndeterm Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandIndeterm()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandState"><apiName>queryCommandState</apiName><shortdesc>
		 Determines whether the given command has been executed on the current selection.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if the command has been completed; false if the command has not completed; null if the state cannot be accurately determined.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines whether the given command has been executed on the current selection. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752631%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandState Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandState()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandSupported"><apiName>queryCommandSupported</apiName><shortdesc>
		 Returns a Boolean value that indicates whether the current command is supported on the current range.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="Boolean"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Returns a Boolean value that indicates whether the current command is supported on the current range.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752632%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandSupported Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandSupported()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandText"><apiName>queryCommandText</apiName><shortdesc>
		 Retrieves the string associated with a command.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The text associated with the command will be stored. 
		 
		 </apiDesc><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves the string associated with a command.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752633%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandText Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandText()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:queryCommandValue"><apiName>queryCommandValue</apiName><shortdesc>
		 Determines the current value of the document, range, or current selection for the given command.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>True if successful, or an error value otherwise.
		 
		 </apiDesc><apiType value="any"/></apiReturn><apiParam><apiItemName>cmdId</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies a command identifier.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Determines the current value of the document, range, or current selection for the given command. 
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/aa752634%28VS.85%29.aspx"><linktext>MSDN - IHTMLDocument2::queryCommandValue Method</linktext></link><link href="http://developer.mozilla.org/en/Document.queryCommandEnabled"><linktext>MDC - Document.queryCommandValue()</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms533049%28VS.85%29.aspx"><linktext>MSDN - Command Identifiers</linktext></link><link href="http://developer.mozilla.org/en/Rich-Text_Editing_in_Mozilla#Executing_Commands"><linktext>MDC - Executing Commands</linktext></link><link href="http://developer.mozilla.org/en/Midas#Supported_Commands"><linktext>MDC - Supported Commands</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:recalc"><apiName>recalc</apiName><shortdesc>
		 Recalculates all dynamic properties in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiDefaultValue>false
		 
		 </apiDefaultValue><apiParam><apiItemName>forceAll</apiItemName><apiType value="Boolean"/><apiDesc>Optional. A Boolean that specifies one of the following values. 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Recalculates all dynamic properties in the current document.
		 
		 <p><b>Note:</b> Implicit dependencies, internal property changes, and related properties can cause 
		 some expressions not to recalculate, even though the referenced properties might have changed. For example, 
		 resizing the main window changes the  clientWidth property. Expressions that reference  clientWidth might not 
		 be recalculated, because the change might not be recognized.</p>
		 
		 <p><b>Note:</b> Implicit dependencies refer to properties that can be modified by changes in other 
		 properties. For example, the  height property of a  div object implicitly depends on the  innerHTML property of 
		 the div object. However, if an expression references the height property, a change in the innerHTML property, 
		 which might modify the height, does not cause a recalculation of the expression on a subsequent call to recalc.</p>
		 
		 <p><b>Note:</b> Related properties can access or manipulate data or behaviors through one or more other 
		 properties. For example,  pixelLeft and  posLeft can set or get the left position of the element. However, if an 
		 expression that references pixelLeft and posLeft is modified, the expression might not be recalculated on subsequent 
		 calls to recalc.</p>
		 
		 <p><b>Note:</b> Related properties that can cause this behavior include the following:  clientHeight,  
		 clientLeft,  clientTop, clientWidth, height,  left,  offsetHeight,  offsetLeft,  offsetTop,  offsetWidth,  
		 pixelHeight, pixelLeft,  pixelTop,  pixelWidth,  posHeight, posLeft,  posTop,  posWidth, and  top.</p>
		 
		 <p><b>Note:</b> To force the recalculation of all expressions, refer to the same property name or manually 
		 call recalc(true).</p>
		 
		 </apiDesc><example>
		 The following example uses the recalc method in HTML and script to help create a timer. If the calls to recalc are commented out, the timer does not work correctly.
		 <codeblock>
		 &lt;HTML&gt;
		 &lt;HEAD&gt; 
		 &lt;TITLE&gt;Recalc Example&lt;/TITLE&gt;
		 &lt;STYLE&gt;
		 BUTTON {font-size:14;width:150}
		 &lt;/STYLE&gt;
		 &lt;SCRIPT&gt;
		 
		 
		 var timerID = null;
		 var seconds = 0;
		 
		 //
		 // This function is called when the page loads. 
		 // It sets up a couple of expressions.
		 //
		 function init() {
		 	A.style.setExpression("width","seconds0");
		 	B.setExpression("innerText","seconds.toString()");
		 }
		 
		 //
		 // This function gets calls once a second and updates the seconds
		 // variable. Notice that without recalc, the expressions aren't
		 // updated until the mouse is moved.
		 //
		 function timer() {
		 	seconds++;
		 	document.recalc();
		 }
		 
		 //
		 // starts the timer
		 //
		 function starttimer() {
		 	if (timerID == null) {
		 		timerID = setInterval("timer()", 1000);
		 		startButton.disabled = true;
		 		stopButton.disabled = false;
		 	}
		 }
		 
		 //
		 // stops the timer
		 //
		 function stoptimer() {
		 	if (timerID != null) {
		 		clearInterval(timerID);
		 		timerID = null;
		 		startButton.disabled = false;
		 		stopButton.disabled = true;
		 	}
		 }
		 
		 //
		 //  resets the timer
		 //
		 function resettimer() {
		 	seconds = 0;
		 }
		 
		 &lt;/SCRIPT&gt;
		 &lt;/HEAD&gt;
		 &lt;BODY onload="init()"&gt;
		 
		 &lt;DIV id=A style="background-color:lightblue" &gt;&lt;/DIV&gt;
		 &lt;DIV id=B style="color:hotpink;font-weight:bold"&gt;&lt;/DIV&gt;
		 
		 &lt;BR&gt;
		 
		 &lt;BUTTON id="startButton" onclick="starttimer()"&gt;Start the Timer&lt;/BUTTON&gt;&lt;/BR&gt;
		 &lt;BUTTON id="stopButton" DISABLED="true" onclick="stoptimer()"&gt;Stop the Timer&lt;/BUTTON&gt;&lt;BR&gt;
		 &lt;BUTTON id="resetButton" onclick="resettimer()"&gt;Reset the Timer&lt;/BUTTON&gt;&lt;BR&gt;
		 
		 &lt;P style="width:320;color:peru;background-color:wheat"&gt;
		 
		 This example illustrates the use of document.recalc().  If the calls
		 to recalc are omitted in this example, expressions will not be updated 
		 until the mouse is moved.
		 &lt;/P&gt;
		 
		 &lt;/BODY&gt;
		 &lt;/HTML&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536689%28VS.85%29.aspx"><linktext>MSDN - releaseCapture Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:releaseCapture"><apiName>releaseCapture</apiName><shortdesc>
		 Removes mouse capture from the object in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0b_unknown"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes mouse capture from the object in the current document.
		 
		 <p>For releaseCapture to have an effect, you must set mouse capture through 
		 the setCapture method.</p>
		 
		 <p>You can invoke the releaseCapture method on the document object. The 
		 releaseCapture method makes it unnecessary to determine which element 
		 has capture to programmatically release it. Other actions that release 
		 document capture include displaying a modal dialog box and switching 
		 focus to another application or browser window.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;BODY onload="oOwnCapture.setCapture();" onclick="document.releaseCapture();"&gt;
		 &lt;DIV ID=oOwnCapture onmousemove="oWriteLocation.value = event.clientX + event.clientY"; onlosecapture="alert(event.srcElement.id + ' has lost mouse capture.')"&gt;
		 &lt;TEXTAREA ID=oWriteLocation COLS=2&gt;&lt;/TEXTAREA&gt;
		 &lt;/DIV&gt;
		 &lt;HR&gt;
		 &lt;DIV ID=oNoCapture&gt;
		 &lt;P&gt;Click the document to invoke the releaseCapture method.&lt;/P&gt;
		 &lt;/DIV&gt;
		 &lt;/BODY&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536689%28VS.85%29.aspx"><linktext>MSDN - releaseCapture Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:releaseEvents"><apiName>releaseEvents</apiName><shortdesc>
		 The opposite of document.captureEvents( ), this method turns off event capture at the document level for 
		 one or more specific events named in the parameter list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>eventTypeList</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>A comma-separated list of case-sensitive event types as derived from the available 
		 Event object constants, such as Event.CLICK or Event.MOUSEMOVE.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 The opposite of document.captureEvents( ), this method turns off event capture at the document level for 
		 one or more specific events named in the parameter list.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.releaseEvents"><linktext>MDC - Document.releaseEvents()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:removeNode"><apiName>removeNode</apiName><shortdesc>
		 Removes the object from the document hierarchy.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the object that is removed.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>removeChildren</apiItemName><apiType value="Boolean"/><apiData>false</apiData><apiDesc>If the childNodes collection of the object is removed
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Removes the object from the document hierarchy.
		 
		 <p>This property is accessible at run time. If elements are removed at 
		 run time, before the closing tag is parsed, areas of the document 
		 might not render.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536708%28VS.85%29.aspx"><linktext>MSDN - removeNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:replaceNode"><apiName>replaceNode</apiName><shortdesc>
		 Replaces the object with another element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the object that is replaced.
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>newNode</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the new element to replace the object.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Replaces the object with another element.
		 
		 <p>When a node is replaced, all values that are associated with the 
		 replaced object are removed. For example, if a b object is replaced 
		 with an i object, any attributes and text between the opening and 
		 closing tags are also replaced. To preserve these values, copy them 
		 to the new element before the original object is replaced.</p>
		 
		 <p>This method is accessible at run time. If elements are removed at run 
		 time before the closing tag is parsed, areas of the document might 
		 not render.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;SCRIPT&gt;
		 function fnReplace() {
		 var sPreserve = oList.innerHTML;
		 var oNewNode = document.createElement("OL");
		 oList.replaceNode(oNewNode);
		 oNewNode.innerHTML = sPreserve;
		 }
		 &lt;/SCRIPT&gt;
		 
		 &lt;UL ID = oList&gt;
		 &lt;LI&gt;List Item 1
		 &lt;LI&gt;List Item 2
		 &lt;LI&gt;List Item 3
		 &lt;LI&gt;List Item 4
		 &lt;/UL&gt;
		 &lt;INPUT TYPE = button VALUE = "Replace List" onclick = "fnReplace()"&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536719%28VS.85%29.aspx"><linktext>MSDN - replaceNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:routeEvent"><apiName>routeEvent</apiName><shortdesc>
		 Used inside an event handler function, this method lets the event pass to its intended target object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/><apiPlatform description="" name="Obsolete" version="0"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>event</apiItemName><apiOperationClassifier>dom.events:Event</apiOperationClassifier></apiParam></apiOperationDef><apiDesc>
		 Used inside an event handler function, this method lets the event pass to its intended target object.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/document.routeEvent"><linktext>MDC - Document.routeEvent()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:swapNode"><apiName>swapNode</apiName><shortdesc>
		 Exchanges the location of two objects in the document hierarchy.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a reference to the object that invoked the method.
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>node</apiItemName><apiOperationClassifier>dom.core:Node</apiOperationClassifier><apiDesc>Specifies the existing element.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Exchanges the location of two objects in the document hierarchy.
		 
		 <p>This method is accessible at run time. If elements are removed at 
		 run time, before the closing tag is parsed, areas of the document 
		 might not render.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;script&gt;
		 		function fnSwap() {
		 			oList.children(0).swapNode(oList.children(1));
		 		}
		 &lt;/script&gt;
		 
		 &lt;ul ID = oList&gt;
		 		&lt;li&gt;List Item 1&lt;/li&gt;
		 		&lt;li&gt;List Item 2&lt;/li&gt;
		 		&lt;li&gt;List Item 3&lt;/li&gt;
		 		&lt;li&gt;List Item 4&lt;/li&gt;
		 &lt;/ul&gt;
		 &lt;input type=button value="Swap List" onclick="fnSwap()"&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536774%28VS.85%29.aspx"><linktext>MSDN - swapNode Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:write"><apiName>write</apiName><shortdesc>
		 Write a string of text to a document stream opened by open().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>text</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The string to be parsed into some structure in the 
		 document structure model.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Write a string of text to a document stream opened by open(). Note that 
		 the function will produce a document which is not necessarily driven by 
		 a DTD and therefore might be produce an invalid result in the context 
		 of the document.
		 
		 <p><b>Note (Mozilla):</b> Writing to a document that has already loaded without calling 
		 document.open() will automatically perform a document.open call. Once you have finished 
		 writing, it is recommended to call document.close(), to tell the browser to finish loading 
		 the page. The text you write is parsed into the document's structure model. In the example 
		 above, the h1 element becomes a node in the document.</p>
		 
		 <p><b>Note (Mozilla):</b> If the document.write() call is embedded directly in the HTML code, 
		 then it will not call document.open(). For example:
		 <codeblock>
		 &lt;div&gt; 
		 	&lt;script type="text/javascript"&gt; 
		 		document.write("&lt;h1&gt;Main title&lt;/h1&gt;") 
		 	&lt;/script&gt; 
		 &lt;/div&gt;</codeblock>
		 </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 &lt;title&gt;write example&lt;/title&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 
		 function newContent() {
		 	alert("load new content");
		 	document.open();
		 	document.write("&lt;h1&gt;Out with the old - in with the new!&lt;/h1&gt;");
		 	document.close();
		 }
		 
		 
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body onload="newContent();"&gt;
		 	&lt;p&gt;Some original document content.&lt;/p&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536782%28VS.85%29.aspx"><linktext>MSDN - write Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.write"><linktext>MDC - Document.write()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-75233634"><linktext>W3C - HTMLDocument.write()</linktext></link></related-links></apiOperation><apiOperation id="dom.html:HTMLDocument:writeln"><apiName>writeln</apiName><shortdesc>
		 Write a string of text followed by a newline character to a document 
		 stream opened by open().</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>text</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The string to be parsed into some structure in the 
		 document structure model.
		 
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Write a string of text followed by a newline character to a document 
		 stream opened by open(). Note that the function will produce a 
		 document which is not necessarily driven by a DTD and therefore 
		 might be produce an invalid result in the context of the document.
		 
		 <p><b>Note:</b> document.writeln is the same as document.write but adds a newline. </p>
		 
		 </apiDesc><example>
		 <codeblock>document.writeln("&lt;p&gt;enter password:&lt;/p&gt;"); </codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536783%28VS.85%29.aspx"><linktext>MSDN - writeln Method</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.writeln"><linktext>MDC - Document.writeln()</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-35318390"><linktext>W3C - HTMLDocument.writeln()</linktext></link></related-links></apiOperation><apiValue id="dom.html:HTMLDocument:URL:get"><apiName>URL</apiName><shortdesc>
		 Returns the URL of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URL of the current document. 
		 
		 <p><b>Note:</b> URL is a replacement for the DOM Level 0 document.location.href property. 
		 However document.URL is not settable, unlike document.location.href. </p>
		 
		 </apiDesc><example>
		 <codeblock>var currentURL = document.URL; alert(currentURL);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534708%28VS.85%29.aspx"><linktext>MSDN - URL Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.URL"><linktext>MDC - Document.URL</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-46183437"><linktext>W3C - HTMLDocument.URL</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:URLUnencoded:get"><apiName>URLUnencoded</apiName><shortdesc>
		 Gets the URL for the  document, stripped of any character encoding.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets the URL for the  document, stripped of any character encoding.
		 
		 </apiDesc><example>
		 The following illustrates the difference between the value returned by the URLUnencoded property and the value returned by the  URL property of the document.
		 <codeblock>
		 &lt;script&gt;
		 function window.onload() {
		 	oURL.innerText = document.URL;
		 	oURL2.innerText = document.URLUnencoded;
		 }			
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534709%28VS.85%29.aspx"><linktext>MSDN - URLUnencoded Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:XSLDocument:get"><apiName>XSLDocument</apiName><shortdesc>
		 Retrieves a reference to the top-level node of the Extensible Stylesheet Language (XSL) document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMObject</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a reference to the top-level node of the Extensible Stylesheet Language (XSL) document.
		 
		 <p><b>Note (IE):</b> You can use the XSLDocument property to access the Document Object Model (DOM) for the 
		 XSL style sheet. For more information, refer to the  XML DOM overview. </p>
		 
		 </apiDesc><example>
		 This example uses the XSLDocument property to access the DOM for the XSL and change attributes representing sort keys.
		 <codeblock>
		 function sort(key) {
		 	// Find the "order-by" attributes in the style sheet.
		 	var s = document.XSLDocument.selectNodes("~~/xsl:template[&amp;64;match='menu']
		 	                                          //xsl:apply-templates/&amp;64;order-by");
		 
		 	// Replace the values with the new sort key.
		 	for (var i = s.nextNode(); i != null; i = s.nextNode()) {
		 		i.value = key;
		 	}
		 
		 	// Find the subset of the document we need to update.
		 	var d = document.XMLDocument.selectSingleNode("story/menu");
		 
		 	// Apply the style sheet to the subset, and update the display.
		 	menu.innerHTML = d.transformNode(document.XSLDocument);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535163%28VS.85%29.aspx"><linktext>MSDN - XSLDocument Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:activeElement:get"><apiName>activeElement</apiName><shortdesc>
		 Returns the currently focused element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="HTML 5"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Element</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the currently focused element.
		 
		 <p>If no element in the Document is focused, this will return the body element.</p>
		 
		 <p><b>Note:</b> This attribute is part of the in-development HTML 5 specification.</p>
		 
		 <p><b>Note (IE):</b> For versions of Microsoft Internet Explorer 5 and later, the activeElement 
		 property is not defined until a document is loaded. A value of null is given for this property, if it 
		 is accessed inline during the loading of a document. This property can be accessed in the  onload event 
		 handler function. </p>
		 
		 <p><b>Note (IE):</b> Internet Explorer 4.0 returns  body as the activeElement when it is accessed 
		 inline during the loading of a document.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533065%28VS.85%29.aspx"><linktext>MSDN - activeElement Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.activeElement"><linktext>MDC - Document.activeElement</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-activeelement"><linktext>WHATWG - HTMLDocument.activeElement</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:alinkColor:get"><apiName>alinkColor</apiName><shortdesc>
		 Returns or sets the color of an active link in the document body.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#0000FF" for IE / "#EE0000" for Mozilla
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Returns or sets the color of an active link in the document body. A link is active during 
		 the time between mousedown and mouseup events. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 <p><b>Note:</b> Gecko supports both alinkColor/:active and :focus . Internet Explorer 6 
		 and 7 support alinkColor/:active only for  HTML anchor (&lt;a&gt;) links and the behavior is the same as 
		 :focus under Gecko. There is no support for :focus in IE. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533071(VS.85).aspx"><linktext>MSDN - alinkColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.alinkColor"><linktext>MDC - Document.alinkColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:all:get"><apiName>all</apiName><shortdesc>
		 Returns a reference to the collection of elements contained by the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a reference to the collection of elements contained by the object.
		 
		 <p><b>Note:</b> The all collection includes one element object for each valid HTML tag. If a valid tag has a 
		 matching end tag, both tags are represented by the same element object.</p>
		 
		 <p><b>Note:</b> The collection returned by the document's all collection always includes a reference to 
		 the  HTML,  HEAD, and  TITLE objects regardless of whether the tags are present in the document. If the  BODY tag 
		 is not present, but other HTML tags are, a BODY object is added to the all collection.</p>
		 
		 <p><b>Note:</b> If the document contains invalid or unknown tags, the collection includes one element object 
		 for each. Unlike valid end tags, unknown end tags are represented by their own element objects. The order of the element 
		 objects is the HTML source order. Although the collection indicates the order of tags, it does not indicate hierarchy.</p>
		 
		 <p><b>Note:</b> The  name property only applies to some elements such as  form elements. If the vIndex is set to 
		 a string matching the value of a name property in an element that the name property does not apply, then that element will 
		 not be added to the collection.</p>
		 
		 </apiDesc><example>
		 This example, in Microsoft JScript (compatible with ECMA 262 language specification), shows how to display the names of all tags in the document in the order the tags appear in the document.
		 <codeblock>
		 for(i = 0; i &lt; document.all.length; i++) {
		 	alert(document.all(i).tagName);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537434%28VS.85%29.aspx"><linktext>MSDN - all Collection</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:anchors:get"><apiName>anchors</apiName><shortdesc>
		 A collection of all the anchor (A) elements in a document with a 
		 value for the name attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the anchor (A) elements in a document with a 
		 value for the name attribute.
		 
		 <p><b>Note:</b> For reasons of backwards compatibility, the returned 
		 set of anchors only contains those anchors created with the name attribute, not 
		 those created with the id attribute. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if ( document.anchors.length &gt;= 5 ) {
		 	dump("dump found too many anchors");
		 	window.location = "http://www.google.com";
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537435%28VS.85%29.aspx"><linktext>MSDN - anchors Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.anchors"><linktext>MDC - Document.anchors</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7577272"><linktext>W3C - HTMLDocument.anchors</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:applets:get"><apiName>applets</apiName><shortdesc>
		 A collection of all the OBJECT elements that include applets and 
		 APPLET (deprecated) elements in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the OBJECT elements that include applets and 
		 APPLET (deprecated) elements in a document.
		 
		 </apiDesc><example>
		 <codeblock>
		 // ( When you know the second applet is the one you want ) 
		 my_java_app = document.applets[1];</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537436%28VS.85%29.aspx"><linktext>MSDN - applets Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.appletsMDC"><linktext>- Document.applets</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-85113862"><linktext>W3C - HTMLDocument.applets</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:background:get"><apiName>background</apiName><shortdesc>
		 URI of the background texture tile image.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI of the background texture tile image.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLDocument:baseURIObject:get"><apiName>baseURIObject</apiName><shortdesc>
		 baseURIObject returns the nsIURI object representing the document's URI.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIURI</apiValueClassifier></apiValueDef><apiDesc>
		 baseURIObject returns the nsIURI object representing the document's URI. 
		 
		 <p><b>Note (Mozilla):</b> This property exists on all nodes (HTML, XUL, SVG, MathML, etc.), 
		 but only if the script trying to use it has UniversalXPConnect privileges.</p>
		 
		 <p><b>Note (Mozilla):</b> This property may only be accessed from privileged code. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.baseURIObject"><linktext>MDC - Document.baseURIObject</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Gets/sets the background color of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#ffffff"
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the background color of the current document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533506%28VS.85%29.aspx"><linktext>MSDN - bgColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.bgColor"><linktext>MDC - Document.bgColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:body:get"><apiName>body</apiName><shortdesc>
		 The element that contains the content for the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLElement</apiValueClassifier></apiValueDef><apiDesc>
		 The element that contains the content for the document. In documents 
		 with BODY contents, returns the BODY element. In frameset documents, 
		 this returns the outermost FRAMESET element.
		 
		 <p><b>Note:</b> Though body is settable, setting a new body on a document 
		 will effectively remove all the current children of the existing &lt;/body&gt; element. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // in HTML: &lt;body id="oldBodyElement"&gt;&lt;/body&gt;
		 alert(document.body.id); // "oldBodyElement"
		 var aNewBodyElement = document.createElement("body");
		 aNewBodyElement.id = "newBodyElement";
		 document.body = aNewBodyElement;
		 alert(document.body.id); // "newBodyElement"</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.body"><linktext>MDC - Document.body</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-56360201"><linktext>W3C - HTMLDocument.body</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:characterSet:get"><apiName>characterSet</apiName><shortdesc>
		 Returns the character encoding of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the character encoding of the current document. 
		 
		 <p><b>Note:</b> The character encoding is the character set used for rendering the document, which may be different 
		 from the encoding specified by the page (the user can override the encoding). </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.characterSet"><linktext>MDC - Document.characterSet</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:charset:get"><apiName>charset</apiName><shortdesc>
		 Sets or retrieves the character set used to encode the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves the character set used to encode the object.
		 
		 <p><b>Note (IE):</b> In Microsoft Internet Explorer 6, This property now applies to the  
		 a,  link, and  script objects. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533553%28VS.85%29.aspx"><linktext>MSDN - charset Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:compatMode:get"><apiName>compatMode</apiName><shortdesc>
		 Indicates whether the document is rendered in Quirks mode or Strict mode.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft/Mozilla"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Indicates whether the document is rendered in Quirks mode or Strict mode. 
		 
		 <p><b>Note:</b> Can either be "BackCompat" for Quirks mode or "CSS1Compat" for Strict mode.</p>
		 
		 <p><b>Note:</b> There is a third mode, Gecko's "Almost_Standards" Mode, which only differs from 
		 Strict mode in the layout of images inside table cells. This third mode is reported the same way as 
		 Strict mode: "CSS1Compat". </p>
		 
		 <p><b>Note (IE):</b> The compatMode property is deprecated in Internet Explorer 8 in favor of the  documentMode property.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 if (document.compatMode == "BackCompat") {
		 	// use some quirky stuff
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533687%28VS.85%29.aspx"><linktext>MSDN - compatMode Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.compatMode"><linktext>MDC - Document.compatMode</linktext></link><link href="http://developer.mozilla.org/en/Gecko%27s_%22Almost_Standards%22_Mode"><linktext>MDC - Gecko's "Almost Standards" Mode</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:compatible:get"><apiName>compatible</apiName><shortdesc>
		 Retrieves the collection of user agents and versions declared in the X-UA-Compatible  meta tag.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_unknown"/><apiTool name="IE" version="6.0_unknown"/><apiTool name="IE" version="7.0_unknown"/><apiTool name="IE" version="8.0_as_IE7_unknown"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the collection of user agents and versions declared in the X-UA-Compatible  meta tag. 
		 
		 <p><b>Note (IE):</b> This method is available in all compatibility modes. </p>
		 
		 </apiDesc><example>
		 The following script iterates through the collection of compatible user agents, and displays each on a separate line. 
		 <codeblock>
		 &lt;meta http-equiv="X-UA-Compatible" content="IE=8;FF=3;OtherUA=4" /&gt;
		 
		 &lt;script type="text/javascript"&gt;
		 window.attachEvent('onload',function(e) {
		 var a = [];
		 var compat = document.compatible;
		 for (var i=0; i&lt;compat.length; i++) {
		 a.push(compat[i].userAgent + '=' + compat[i].version);
		 }
		 var o = document.getElementById('output');
		 o.innerHTML = a.join('&lt;br/&gt;');
		 });
		 &lt;/script&gt;
		 
		 &lt;div id="output"&gt;&lt;/div&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc196984%28VS.85%29.aspx"><linktext>MSDN - compatible Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:contentType:get"><apiName>contentType</apiName><shortdesc>
		 Returns the Content-Type from the HTTP headers of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the Content-Type from the HTTP headers of the document. 
		 
		 <p><b>Note (Mozilla):</b> The property returns the MIME property "Content-Type" set in the HTTP Header and not 
		 the META property set in the HEAD section of the document. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.contentType"><linktext>MDC - Document.contentType</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:cookie:get"><apiName>cookie</apiName><shortdesc>
		 Get and set the cookies associated with the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><modified>DOMHTML 1
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiException><apiDesc>SYNTAX_ERR: If the new value does not adhere to the cookie syntax.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Get and set the cookies associated with the current document. 
		 
		 <codeblock>allCookies = document.cookie;</codeblock>
		 
		 <p><codeph>allCookies</codeph> is a string containing a semicolon-separated list of cookies (i.e. key=value pairs)</p>
		 
		 <codeblock>document.cookie = updatedCookie;</codeblock>
		 
		 <p><codeph>updatedCookie</codeph> is a string of form key=value. Note that you can only set/update a single cookie at a time using this method.</p>
		 
		 <p>Any of the following cookie attribute values can optionally follow the key-value pair, specifying 
		 the cookie to set/update, and preceded by a semi-colon separator: 
		 <ul>
		 	<li><codeph>;path=<i>path</i></codeph> (e.g., '/', '/mydir') If not specified, defaults to the current path of the current document location.</li>
		 	<li><codeph>;domain=<i>domain</i></codeph> (e.g., 'example.com', '.example.com' (includes all subdomains), 'subdomain.example.com') If not specified, defaults to the host portion of the current document location.</li>
		 	<li><codeph>;max-age=<i>max-age-in-seconds</i></codeph> (e.g., 600465 for a year)</li>
		 	<li><codeph>;expires=<i>date-in-GMTString-format</i></codeph> (could use Date.toGMTString; now obsolete) If not specified it wil expire at the end of session.</li>
		 	<li><codeph>;secure</codeph> (cookie to only be transmitted over secure protocol as http)</li>
		 </ul>
		 </p>
		 
		 <p><b>Note:</b> The cookie value string can use encodeURIComponent() to ensure that the string 
		 does not contain any commas, semicolons, or whitespace (which are disallowed in cookie values).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 document.cookie = "name=oeschger";
		 document.cookie = "favorite_food=tripe";
		 alert(document.cookie);
		 // displays: name=oeschger;favorite_food=tripe</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533693%28VS.85%29.aspx"><linktext>MSDN - cookie Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.cookie"><linktext>MDC - Document.cookie</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-8747038"><linktext>W3C - HTMLDocument.cookie</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:defaultCharset:get"><apiName>defaultCharset</apiName><shortdesc>
		 Gets the default character set from the current regional language settings.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets the default character set from the current regional language settings.
		 
		 <p><b>Note (Microsoft):</b> The value depends on the current regional language settings. 
		 For typical settings in North America, the value is windows-1252.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533553%28VS.85%29.aspx"><linktext>MSDN - defaultCharset Property</linktext></link><link href="http://msdn.microsoft.com/en-us/library/aa752010(VS.85).aspx"><linktext>MSDN - Charsets in Microsoft Internet Explorer 5</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:designMode:get"><apiName>designMode</apiName><shortdesc>
		 Sets or gets a value that indicates whether the document can be edited.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or gets a value that indicates whether the document can be edited.
		 
		 <p>Values can be:
		 <ul>
		 <li>On : Document can be edited. </li>
		 <li>Off|Inherit : Default. Document cannot be edited. </li>
		 </ul>
		 </p>
		 
		 <p><b>Note (Mozilla):</b> Gets/sets WYSYWIG editing capability of Midas. It can only be used for HTML documents.</p>
		 
		 <p><b>Note (Mozilla):</b> Midas is the code name for Gecko's built-in rich text editor. Midas can be enabled via 
		 JavaScript on an HTML document. When Midas is enabled, the document becomes editable by the user. Scripting for Midas is based 
		 on the DHTML commands supported by Internet Explorer.</p>
		 
		 <p><b>Note (Microsoft):</b> You can use the designMode property to put Windows Internet 
		 Explorer into a mode so that you can edit the current document.</p>
		 
		 <p><b>Note (Microsoft):</b> While the browser is in design mode, objects enter a UI-activated state when 
		 the user presses ENTER, clicks an object that has focus, or double-clicks the object. Objects that are
		 UI-activated have their own window in the document. You can modify the UI only when the object is in a 
		 UI-activated state.</p>
		 
		 <p><b>Note (Microsoft):</b> You cannot execute script when the value of the designMode property is set to On.</p>
		 
		 <p><b>Note:</b> Since an entire document becomes editable, authors often load the editable document into an 
		 IFRAME and do the bulk of the scripting in the parent document.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 	&lt;head&gt;
		 		&lt;title&gt;Simple Edit Box&lt;/title&gt;
		 	&lt;/head&gt;
		 	&lt;body&gt;
		 
		 		&lt;iframe
		 			id="MidasForm"
		 			src="about:blank"
		 			onload="this.contentDocument.designMode='on';"
		 		&gt;&lt;/iframe&gt;
		 	&lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533720%28VS.85%29.aspx"><linktext>MSDN - designMode Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.designMode"><linktext>MDC - Document.designMode</linktext></link><link href="http://developer.mozilla.org/en/Midas"><linktext>MDC - Midas</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:dir:get"><apiName>dir</apiName><shortdesc>
		 Sets or retrieves a value that indicates the reading order of the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft/Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves a value that indicates the reading order of the object. 
		 
		 <p>Values can be:
		 <ul>
		 <li>ltr : Default. Content flows from left to right.</li>
		 <li>rtl : Content flows from right to left.</li>
		 </ul>
		 </p>
		 
		 <p><b>Note:</b> The dir property does not affect alphanumeric characters in Latin documents. 
		 These characters always render ltr. However, the property does affect punctuation characters in Latin 
		 documents. For example, punctuation marks such as periods and question marks will render to the left 
		 of a sentence when the dir property is set to rtl.</p>
		 
		 <p><b>Note:</b> The value of dir property has no effect on the orientation of coordinates for 
		 an object's positioning properties. For example, the  left property and the  right property perform the 
		 same placement in both cases. However, when both the left and right properties are specified, the left 
		 property takes precedence when the dir property is set to ltr. Likewise, the right property takes precedence 
		 when the dir property is set to rtl.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533731%28VS.85%29.aspx"><linktext>MSDN - dir Property</linktext></link><link href="http://developer.mozilla.org/En/DOM/Document.dir"><linktext>MDC - Document.dir</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:documentMode:get"><apiName>documentMode</apiName><shortdesc>
		 Retrieves the document compatibility mode of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5_no"/><apiTool name="IE" version="6.0_no"/><apiTool name="IE" version="7.0_no"/><apiTool name="IE" version="8.0_as_IE7_no"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Retrieves the document compatibility mode of the document.
		 
		 <p>Possible Values:
		 <ul>
		 	<li>5 - Microsoft Internet Explorer 5 mode (also known as "quirks mode").</li>
		 	<li>7 - Internet Explorer 7 Standards mode.</li>
		 	<li>8 - Internet Explorer 8 Standards mode.</li>
		 </ul>
		 </p>
		 
		 <p><b>Note (IE):</b> The document compatibility mode of a Web page determines how Internet Explorer 8 
		 interprets and renders the page. Page authors generally use  meta elements to specify X-UA-Compatible  
		 HTTP-EQUIV headers that specify the document compatibility mode. For more information, see  Defining Document 
		 Compatibility. In versions of Internet Explorer previous to Internet Explorer 8,  compatMode was solely 
		 determined by  DOCTYPE. </p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/cc196988%28VS.85%29.aspx"><linktext>MSDN - documentMode Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:documentURIObject:get"><apiName>documentURIObject</apiName><shortdesc>
		 Returns an nsIURI object representing the URI of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Mozilla"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>gecko:nsIURI</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an nsIURI object representing the URI of the document. 
		 
		 <p>This only works for privileged (UniversalXPConnect) scripts, including extension code. For web content this 
		 property doesn't have any special meaning and can be used just like any other custom property. </p>
		 
		 <p>Privileged code must be careful not to try getting or setting this property on a non-wrapped content object 
		 (e.g. on a wrappedJSObject of an XPCNativeWrapper). See bug 324464's comments for details. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // Check that the URI scheme of the current tab in Firefox is 'http',
		 // assuming this code runs in context of browser.xul
		 var uriObj = content.document.documentURIObject;
		 var uriPort = uriObj.port;
		 
		 if (uriObj.schemeIs('http')) {
		 	...
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.documentURIObject"><linktext>MDC - Document.documentURIObject</linktext></link><link href="http://bugzilla.mozilla.org/show_bug.cgi?id=324464"><linktext>bug 324464</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:domain:get"><apiName>domain</apiName><shortdesc>
		 Gets/sets the domain of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets/sets the domain of the current document.
		 
		 <p><b>Note:</b> This property returns null if the domain of the document cannot be identified.</p>
		 
		 <p><b>Note:</b> In the DOM HTML specification, this property is listed as being read-only. However, 
		 all common browsers including Mozilla will let you set it to a superdomain of the current value. For example, 
		 on developer.mozilla.org it is possible to set it to "mozilla.org" but not "mozilla.com".</p>
		 
		 <p><b>Note:</b> It is not universally possible in all browsers to set document.domain to a top-level 
		 domain (such as "com" or "org") or to a subdomain of a domain on which registrations are restricted (e.g. "co.uk", 
		 as registrations on the "uk" domain are restricted).</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 // for document www.love.com/good.html,
		 // this script closes the window
		 var badDomain = "www.love.com";
		 if (document.domain == badDomain) {
		 	window.close();
		 }</codeblock>
		 
		 <codeblock>
		 // For the URI http://developer.mozilla.org/en/docs/DOM the
		 // following sets domain to the string "developer.mozilla.org"
		 var domain = document.domain;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533740%28VS.85%29.aspx"><linktext>MSDN - domain Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.domain"><linktext>MDC - Document.domain</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-2250147"><linktext>W3C - HTMLDocument.domain</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:embeds:get"><apiName>embeds</apiName><shortdesc>
		 Retrieves a collection of all  embed objects in the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of all  embed objects in the document.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537450(VS.85).aspx"><linktext>MSDN - embeds Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.embeds"><linktext>MDC - Document.embeds</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:expando:get"><apiName>expando</apiName><shortdesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/><apiTool name="IE" version="5.5"/><apiTool name="IE" version="6.0"/><apiTool name="IE" version="7.0"/><apiTool name="IE" version="8.0_as_IE7"/><apiTool name="IE" version="8.0_as_IE8"/><apiTool name="Firefox" version="2.0_unknown"/><apiTool name="Firefox" version="3.0_unknown"/><apiTool name="Firefox" version="3.5_unknown"/><apiTool name="Safari" version="3.0_unknown"/><apiTool name="Safari" version="3.1_unknown"/><apiTool name="Safari" version="4.0b_unknown"/><apiTool name="Chrome" version="1.0_unknown"/><apiTool name="Chrome" version="2.0_unknown"/><apiTool name="Opera" version="9.62_unknown"/><apiTool name="Opera" version="10.0a_unknown"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/><apiDefaultValue>true
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Sets or retrieves a value indicating whether arbitrary variables can be created within the object.
		 
		 <p><b>Note:</b> You can extend the properties on an object by creating arbitrary properties 
		 with values. You should be careful, however, because you can unintentionally set a property value when 
		 scripting in a case-sensitive language such as Microsoft JScript. For example, if the property value 
		 is borderColor and you type the value "bordercolor = 'blue'", you have, in fact, created another property 
		 on the style object called bordercolor with the value 'blue'. If you query the value of the property, 
		 the value "blue" is returned. However, the borders for the element do not turn blue.</p>
		 
		 <p><b>Note:</b> Setting the  expando property of the  document object to false precludes the 
		 functionality of all expandos within the document.</p>
		 
		 </apiDesc><example>
		 The following example demonstrates that, by setting the expando property of the document object to false, 
		 the document ignores the  UNSELECTABLE expando on the  span and allows you to select the text.
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 &lt;script type="text/javascript"&gt;
		 	//Set the expando property to false.
		 	document.expando = false;
		 &lt;/script&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 
		 &lt;div&gt;
		 &lt;span id="oSpan" unselectable="on"&gt;This text should be selectable.&lt;/span&gt;
		 &lt;/div&gt;
		 
		 &lt;/body&gt;
		 
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533747%28VS.85%29.aspx"><linktext>MSDN - expando Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fgColor:get"><apiName>fgColor</apiName><shortdesc>
		 Gets/sets the foreground color, or text color, of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#000000"
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the foreground color, or text color, of the current document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533749%28VS.85%29.aspx"><linktext>MSDN - fgColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.fgColor"><linktext>MDC - Document.fgColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fileCreatedDate:get"><apiName>fileCreatedDate</apiName><shortdesc>
		 Retrieves the date the file was created.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the date the file was created. For example, Monday, December 08, 1997.
		 
		 </apiDesc><example>
		 This example implements the fileCreatedDate property to count the number of days since the document was created.
		 <codeblock>
		 // Date document was created
		 var oCreated=new Date(document.fileCreatedDate);
		 
		 // Today's Date
		 var oToday=new Date();
		 
		 //There are 86400000 milliseconds in a day
		 var iMilliSeconds=86400000;
		 var iDaysBetween=(oToday.getTime() - oCreated.getTime()) / iMilliSeconds;	
		 
		 alert("Created: " + oCreated + "\nDays since created: " + parseInt(iDaysBetween));</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533750%28VS.85%29.aspx"><linktext>MSDN - fileCreatedDate Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fileModifiedDate:get"><apiName>fileModifiedDate</apiName><shortdesc>
		 Retrieves the date the file was last modified.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the date the file was last modified. For example, Monday, December 08, 1997.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533751%28VS.85%29.aspx"><linktext>MSDN - fileModifiedDate Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:fileSize:get"><apiName>fileSize</apiName><shortdesc>
		 Retrieves the file size.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves the file size. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533752%28VS.85%29.aspx"><linktext>MSDN - fileSize Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:forms:get"><apiName>forms</apiName><shortdesc>
		 A collection of all the forms of a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the forms of a document.
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 
		 &lt;head&gt;
		 	&lt;title&gt; document.forms example&lt;/title&gt;
		 &lt;/head&gt;
		 
		 &lt;body&gt;
		 &lt;form id="robby"&gt;
		 	&lt;input type="button" onclick="alert(document.forms[0].id);" value="robby's form" /&gt;
		 &lt;/form&gt;
		 
		 &lt;form id="dave"&gt;
		 	&lt;input type="button" onclick="alert(document.forms[1].id);" value="dave's form" /&gt;
		 &lt;/form&gt;
		 
		 &lt;form id="paul"&gt;
		 	&lt;input type="button" onclick="alert(document.forms[2].id);" value="paul's form" /&gt;
		 &lt;/form&gt;
		 
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537457%28VS.85%29.aspx"><linktext>MSDN - forms Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.forms"><linktext>MDC - Document.forms</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-1689064"><linktext>W3C - HTMLDocument.forms</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:frames:get"><apiName>frames</apiName><shortdesc>
		 Retrieves a collection of all  window objects defined by the given document or defined by 
		 the document associated with the given window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of all  window objects defined by the given document or defined by 
		 the document associated with the given window.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537459%28VS.85%29.aspx"><linktext>MSDN - frames Collection</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:height:get"><apiName>height</apiName><shortdesc>
		 Returns the height of the body element of the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the height of the body element of the current document. 
		 
		 </apiDesc><example>
		 <codeblock>
		 // alert document height
		 alert(document.height);</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.height"><linktext>MDC - Document.height</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:images:get"><apiName>images</apiName><shortdesc>
		 A collection of all the IMG elements in a document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all the IMG elements in a document. The behavior is 
		 limited to IMG elements for backwards compatibility.
		 
		 <p><b>Note:</b> As suggested by HTML 4.01, to include images, authors may use 
		 the OBJECT element or the IMG element. Therefore, it is recommended 
		 not to use this attribute to find the images in the document but 
		 getElementsByTagName with HTML 4.01 or getElementsByTagNameNS with 
		 XHTML 1.0.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 var ilist = document.images;
		 for(var i = 0; i &lt; ilist.length; i++) {
		 	if(ilist[i] == "banner.gif") {
         		// found the banner
		 	}
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537461%28VS.85%29.aspx"><linktext>MSDN - images Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.images"><linktext>MDC - Document.images</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-90379117"><linktext>W3C - HTMLDocument.images</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:lastModified:get"><apiName>lastModified</apiName><shortdesc>
		 Returns a string containing the date and time on which the current document was last modified, in the form "MM/DD/YY hh:mm:ss".</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a string containing the date and time on which the current document was last modified, in the form "MM/DD/YY hh:mm:ss".
		 
		 <p><b>Note:</b> As a string, lastModified cannot easily be used for comparisions between the modified dates of documents. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(document.lastModified); 
		 // returns: Tuesday, July 10, 2001 10:19:42</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms533946%28VS.85%29.aspx"><linktext>MSDN - lastModified Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.lastModified"><linktext>MDC - Document.lastModified</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:linkColor:get"><apiName>linkColor</apiName><shortdesc>
		 Gets/sets the color of links within the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#0000FF" for IE / "#0000EE" for Mozilla
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the color of links within the document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534117%28VS.85%29.aspx"><linktext>MSDN - linkColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.linkColor"><linktext>MDC - Document.linkColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:links:get"><apiName>links</apiName><shortdesc>
		 A collection of all AREA elements and anchor (A) elements in a document 
		 with a value for the href attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 A collection of all AREA elements and anchor (A) elements in a document 
		 with a value for the href attribute.
		 
		 </apiDesc><example>
		 <codeblock>
		 var links = document.links;
		 for(var i = 0; i &lt; links.length; i++) {
		 	var linkHref = document.createTextNode(links[i].href);
		 	var lineBreak = document.createElement("br");
		 	document.body.appendChild(linkHref);
		 	document.body.appendChild(lineBreak);
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537465%28VS.85%29.aspx"><linktext>MSDN - links Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.links"><linktext>MDC - Document.links</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-7068919"><linktext>W3C - HTMLDocument.links</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:location:get"><apiName>location</apiName><shortdesc>
		 Returns a Location object, which contains information about the URL of the document and provides 
		 methods for changing that URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Location</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a Location object, which contains information about the URL of the document and provides 
		 methods for changing that URL. In Gecko browsers you can also assign to this property to load another URL. 
		 
		 <p><b>Note:</b> Location objects have a toString method returning the current URL. You can also 
		 assign a string to document.location. This means that you can work with document.location as if it were a 
		 string in most cases. Sometimes, for example when you need to call a String method on it, you have to 
		 explicitly call toString: 
		 
		 <codeblock>alert(document.location.toString().charAt(17))</codeblock>
		 </p>
		 
		 <p><b>Note:</b> document.location was originally a read-only property, although Gecko browsers allow 
		 you to assign to it as well. For cross-browser safety, use window.location instead. </p>
		 
		 <p><b>Note:</b> To retrieve just the URL as a string, the read-only document.URL property can be used. </p>
		 
		 </apiDesc><example>
		 <codeblock>
		 dump(document.location); 
		 // Prints a string like
		 // "http://www.example.com/juicybits.html" to the console</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535866%28VS.85%29.aspx"><linktext>MSDN - location Object</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.location"><linktext>MDC - Document.location</linktext></link><link href="dom.html.Window#location()"><linktext>dom.html.Window#location()</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:namespaces:get"><apiName>namespaces</apiName><shortdesc>
		 Retrieves a collection of namespace objects.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a collection of namespace objects.
		 
		 INCOMPLETE
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537470%28VS.85%29.aspx"><linktext>MSDN - namespaces Collection</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:parentWindow:get"><apiName>parentWindow</apiName><shortdesc>
		 Gets a reference to the container object of the window.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom:Window</apiValueClassifier></apiValueDef><apiDesc>
		 Gets a reference to the container object of the window.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534331%28VS.85%29.aspx"><linktext>MSDN - parentWindow Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:plugins:get"><apiName>plugins</apiName><shortdesc>
		 Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the &amp;lt;embed&amp;gt; elements in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an HTMLCollection object containing one or more HTMLEmbedElements or null which represent the &lt;embed&gt; elements in the current document. 
		 
		 <p><b>Note:</b> For a list of installed plugins, use navigator.plugins instead.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537477%28VS.85%29.aspx"><linktext>MSDN - plugins Collection</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.plugins"><linktext>MDC - Document.plugins</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:protocol:get"><apiName>protocol</apiName><shortdesc>
		 Sets or retrieves the protocol portion of a URL.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Sets or retrieves the protocol portion of a URL. 
		 
		 <p><b>Note:</b> The protocol property specifies how to transfer information from the host to the 
		 client. Windows Internet Explorer supports several  predefined protocols, including  http and  ftp.</p>
		 
		 <p><b>Note:</b> The  document,  img, and  location objects expose the protocol property as read-only. 
		 location.protocol property returns the initial substring of a URL, including the first colon (for example, 
		 http:). However, document.protocol returns the expanded text of the protocol acronym. For example, it returns 
		 the http protocol as Hypertext Transfer Protocol.</p>
		 
		 </apiDesc><example>
		 This example function returns the protocol property of the current page location.
		 <codeblock>
		 function getProtocol() {
		 	return document.location.protocol;
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534353%28VS.85%29.aspx"><linktext>MSDN - protocol Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:readyState:get"><apiName>readyState</apiName><shortdesc>
		 Retrieves a value that indicates the current state of the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves a value that indicates the current state of the object.
		 
		 <adobetable class="innertable">
		 	
		 	
		 	
		 	
		 	
		 	
		 <tgroup cols="2"><thead><row><entry>State</entry><entry>Description</entry></row></thead><tbody><row>
		 		<entry>uninitialized</entry><entry>Object is not initialized with data.</entry>
		 	</row><row>
		 		<entry>loading</entry><entry>Object is loading its data.</entry>
		 	</row><row>
		 		<entry>loaded</entry><entry>Object has finished loading its data.</entry>
		 	</row><row>
		 		<entry>interactive</entry><entry>User can interact with the object even though it is not fully loaded.</entry>
		 	</row><row>
		 		<entry>complete</entry><entry>Object is completely initialized.</entry>
		 	</row></tbody></tgroup></adobetable>
		 
		 <p><b>Note:</b> An object's state is initially set to uninitialized, and then to loading. When data 
		 loading is complete, the state of the link object passes through the loaded and interactive states to reach the 
		 complete state. </p>
		 
		 <p><b>Note:</b> The states through which an object passes are determined by that object; an object 
		 can skip certain states (for example, interactive) if the state does not apply to that object.</p>
		 
		 <p><b>Note:</b> Data source objects and databound elements are normally populated asynchronously, and 
		 certain programmatic operations can only be performed reliably on databound objects when they are ready for use.
		 Therefore, the appropriate code should be written to confirm the readyState of objects prior to performing 
		 certain operations on them. For example, walking the rows of a  table should not be attempted until after the 
		 table has reached the complete state.</p>
		 
		 <p><b>Note:</b> The readyState property enables the status of an object to be tested. The correct place 
		 to test the readyState property is in the event handler for  onreadystatechange. Similarly, a data source object 
		 (DSO) fires the  ondatasetcomplete event to notify the Web page that the dataset is ready for programmatic operation.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534359%28VS.85%29.aspx"><linktext>MSDN - readyState Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.readyState"><linktext>MDC - Document.readyState</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-readystate"><linktext>WHATWG - HTMLDocument.readyState</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:referrer:get"><apiName>referrer</apiName><shortdesc>
		 Returns the URI of the page that linked to this page.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the URI of the page that linked to this page. 
		 The value is an empty string if the user navigated to the page directly 
		 (not through a link, but, for example, via a bookmark).
		 
		 <p><b>Note:</b> This property returns a value only when the user reaches the current page through a 
		 link from the previous page. Otherwise, document. referrer returns an empty string; it also returns an empty 
		 string when the link is from a secure site.</p>
		 
		 <p><b>Note:</b> For example, if PageA.htm includes a link to PageB.htm, and the user clicks that 
		 link, the document.referrer on PageB.htm returns "PageA.htm." However, if the user is on PageA.htm and types 
		 PageB.htm into the address line or chooses the Open command from the File menu to get to PageB.htm, the 
		 document.referrer returns an empty string.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534365%28VS.85%29.aspx"><linktext>MSDN - referrer Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.referrer"><linktext>MDC - Document.referrer</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-95229140"><linktext>W3C - HTMLDocument.referrer</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:scripts:get"><apiName>scripts</apiName><shortdesc>
		 Returns an HTMLCollection object containing one or more HTMLScriptElements or null which represent the &amp;lt;script&amp;gt; elements in the current document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="HTML" version="5"/><apiSince version="Non-Standard Microsoft"/></apiVersion></asMetadata><asCustoms><modified>HTML 5
		 </modified></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns an HTMLCollection object containing one or more HTMLScriptElements or null which represent the &lt;script&gt; elements in the current document. 
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms537487%28VS.85%29.aspx"><linktext>MSDN - scripts Collection</linktext></link><link href="http://www.whatwg.org/specs/web-apps/current-work/#dom-document-scripts"><linktext>WHATWG - HTMLDocument.scripts</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:selection:get"><apiName>selection</apiName><shortdesc>
		 Represents the active selection, which is a highlighted block of text or other elements in the document 
		 that a user or a script can carry out some action on.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.objects:Selection</apiValueClassifier></apiValueDef><apiDesc>
		 Represents the active selection, which is a highlighted block of text or other elements in the document 
		 that a user or a script can carry out some action on.
		 
		 <p><b>Note (IE):</b> You can use the selection object as input from the user to identify which portion 
		 of the document to act on, or as output to the user to show the results of an action.</p>
		 
		 <p><b>Note (IE):</b> Users and scripts can create selections. Users create selections by dragging the 
		 mouse over a portion of the document. Scripts create selections by calling the  select method on a text range 
		 or similar object. To get the active selection, apply the selection keyword to the document object. To carry 
		 out work on a selection, create a text range object from the selection using the  createRange method. </p>
		 
		 <p><b>Note:</b> A document can have only one selection at a time. The selection has a type that 
		 determines whether it is empty or contains a block of text or elements. Although an empty selection contains 
		 nothing, you can use it to mark a position in the document.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535869%28VS.85%29.aspx"><linktext>MSDN - selection Object</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:title:get"><apiName>title</apiName><shortdesc>
		 Gets or sets the title of the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Gets or sets the title of the document. 
		 
		 <p><b>Note:</b> The initial value of document.title is the text content of the &lt;title&gt; element.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 &lt;html&gt;
		 &lt;head&gt;
		 	&lt;title&gt;Hello World!&lt;/title&gt; 
		 &lt;/head&gt;
		 &lt;body&gt;
		 	&lt;script&gt;
		 		alert(document.title); // displays "Hello World!"
		 		document.title = "Goodbye World!";
		 		alert(document.title); // displays "Goodbye World!"
		 	&lt;/script&gt;
		 &lt;/body&gt;
		 &lt;/html&gt;</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.title"><linktext>MDC - Document.title</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-18446827"><linktext>W3C - HTMLDocument.title</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:uniqueID:get"><apiName>uniqueID</apiName><shortdesc>
		 Retrieves an autogenerated, unique identifier for the object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Retrieves an autogenerated, unique identifier for the object. 
		 
		 <p><b>Note (IE):</b> When you apply this property to the  document object, the browser automatically 
		 generates a new ID that you can assign to an element's  id property.</p>
		 
		 <p><b>Note (IE):</b> A new ID is generated and assigned to the element the first time the property is retrieved. 
		 Every subsequent access to the property on the same element returns the same ID.</p>
		 
		 <p><b>Note (IE):</b> The unique ID generated is not guaranteed to be the same every time the page is loaded.</p>
		 
		 </apiDesc><example>
		 This example uses the uniqueID property to show how the browser can autogenerate a unique ID for an element inserted into the page by a behavior.
		 <codeblock>
		 // Specifying an ID=document.uniqueID ensures that a unique identifier
		 // will be assigned to the element being inserted into the page by
		 // the behavior.
		 newTextAreaID = element.document.uniqueID;
		 element.document.body.insertAdjacentHTML ("beforeEnd",
		 "<P><TEXTAREA ID=" + newTextAreaID + " STYLE="height: 200 ;&quot;+     &quot;width: 350"/></P>");</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms534704%28VS.85%29.aspx"><linktext>MSDN - uniqueID Property</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:vlinkColor:get"><apiName>vlinkColor</apiName><shortdesc>
		 Gets/sets the color of links that the user has visited in the document.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata><asCustoms><as-of>DOM Level 2 HTML
		 
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier><apiDefaultValue>"#800080" for IE / "#551A8B" for Mozilla
		 
		 </apiDefaultValue></apiValueDef><apiDesc>
		 Gets/sets the color of links that the user has visited in the document. 
		 
		 <p><b>Note:</b> The color is a string representing the color as a word (e.g., "red") or hexadecimal value (e.g., "#ff0000").</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms535139%28VS.85%29.aspx"><linktext>MSDN - vlinkColor Property</linktext></link><link href="http://developer.mozilla.org/en/DOM/document.vlinkColor"><linktext>MDC - Document.vlinkColor</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLDocument:width:get"><apiName>width</apiName><shortdesc>
		 Returns the width of the body element of the current document in pixels.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMCore" version="0"/><apiSince version="DOMCore 0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Returns the width of the body element of the current document in pixels. 
		 
		 <p><b>Note:</b> Not supported by IE.</p>
		 
		 </apiDesc><example>
		 <codeblock>
		 function init() {
		 	alert("The width of the document is " + document.width + " pixels.");
		 }</codeblock>
		 
		 </example></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/document.width"><linktext>MDC - Document.width</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLabelElement"><apiName>HTMLLabelElement</apiName><shortdesc>
	 Form field label text.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Form field label text.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLabelElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:htmlFor:get"><apiName>htmlFor</apiName><shortdesc>
		 This attribute links this label with another form control by id attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 This attribute links this label with another form control by id attribute. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLabelElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLOptionElement"><apiName>HTMLOptionElement</apiName><shortdesc>
	 A selectable choice.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A selectable choice. See the OPTION element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLOptionElement:defaultSelected:get"><apiName>defaultSelected</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Represents the value of the HTML selected attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Represents the value of the HTML selected attribute. The value of this attribute 
		 does not change if the state of the corresponding form control, in an interactive 
		 user agent, changes. See the selected attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context. See the disabled attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:index:get"><apiName>index</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The index of this OPTION in its parent SELECT, starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The index of this OPTION in its parent SELECT, starting from 0.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:label:get"><apiName>label</apiName><shortdesc>
		 Option label for use in hierarchical menus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Option label for use in hierarchical menus. See the label attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:selected:get"><apiName>selected</apiName><shortdesc>
		 Represents the current state of the corresponding form control, in an interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Represents the current state of the corresponding form control, in an interactive user agent. 
		 Changing this attribute changes the state of the form control, but does not change the value 
		 of the HTML selected attribute of the element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:text:get"><apiName>text</apiName><shortdesc>
		 The text contained within the option element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The text contained within the option element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLOptionElement:value:get"><apiName>value</apiName><shortdesc>
		 The current form control value.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The current form control value. See the value attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLMenuElement"><apiName>HTMLMenuElement</apiName><shortdesc>
	 Menu list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Menu list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLMenuElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBRElement"><apiName>HTMLBRElement</apiName><shortdesc>
	 Force a line break.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Force a line break.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBRElement:clear:get"><apiName>clear</apiName><shortdesc>
		 Control flow of text around floats.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Control flow of text around floats. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>none</li>
		 <li>left</li>
		 <li>right</li>
		 <li>all</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLegendElement"><apiName>HTMLLegendElement</apiName><shortdesc>
	 Provides a caption for a FIELDSET grouping.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Provides a caption for a FIELDSET grouping.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLegendElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLegendElement:align:get"><apiName>align</apiName><shortdesc>
		 Text alignment relative to FIELDSET.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Text alignment relative to FIELDSET. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLegendElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLImageElement"><apiName>HTMLImageElement</apiName><shortdesc>
	 Embedded image.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Embedded image.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLImageElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:border:get"><apiName>border</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Width of border around image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Width of border around image. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:height:get"><apiName>height</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The height of the image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The height of the image in pixels. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:hspace:get"><apiName>hspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Horizontal space to the left and right of this image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Horizontal space to the left and right of this image in pixels. This attribute is deprecated in HTML 4.01. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:isMap:get"><apiName>isMap</apiName><shortdesc>
		 Use server-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Use server-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:longDesc:get"><apiName>longDesc</apiName><shortdesc>
		 URI designating a long description of this image or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a long description of this image or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:name:get"><apiName>name</apiName><shortdesc>
		 The name of the element (for backwards compatibility).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the element (for backwards compatibility).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:src:get"><apiName>src</apiName><shortdesc>
		 URI designating the source of this image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating the source of this image.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:useMap:get"><apiName>useMap</apiName><shortdesc>
		 Use client-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Use client-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:vspace:get"><apiName>vspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Vertical space above and below this image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Vertical space above and below this image in pixels. This attribute is deprecated in HTML 4.01. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLImageElement:width:get"><apiName>width</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The width of the image in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The width of the image in pixels. <b>Note:</b> The type of this attribute was "DOMString" in DOM Level 1 HTML.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableCellElement"><apiName>HTMLTableCellElement</apiName><shortdesc>
	 The object used to represent the TH and TD elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The object used to represent the TH and TD elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableCellElement:abbr:get"><apiName>abbr</apiName><shortdesc>
		 Abbreviation for header cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Abbreviation for header cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of data in cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of data in cell.
		 <p>Valid values are: 
		 <ul>
		 <li>left: Left-flush data/Left-justify text. This is the default value for table data.</li>
		 <li>center: Center data/Center-justify text. This is the default value for table headers.</li>
		 <li>right: Right-flush data/Right-justify text.</li>
		 <li>justify: Double-justify text.</li>
		 <li>char: Align text around a specific character. If a user agent doesn't support character alignment, behavior in the presence of this value is unspecified.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:axis:get"><apiName>axis</apiName><shortdesc>
		 Names group of related headers.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Names group of related headers.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Cell background color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell background color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:cellIndex:get"><apiName>cellIndex</apiName><shortdesc>
		 The index of this cell in the row, starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The index of this cell in the row, starting from 0. This index is in document tree order and not display order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:colSpan:get"><apiName>colSpan</apiName><shortdesc>
		 Number of columns spanned by cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Number of columns spanned by cell.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:headers:get"><apiName>headers</apiName><shortdesc>
		 List of id attribute values for header cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 List of id attribute values for header cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:height:get"><apiName>height</apiName><shortdesc>
		 Cell height.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell height. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:noWrap:get"><apiName>noWrap</apiName><shortdesc>
		 Suppress word wrapping.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Suppress word wrapping. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:rowSpan:get"><apiName>rowSpan</apiName><shortdesc>
		 Number of rows spanned by cell.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Number of rows spanned by cell.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:scope:get"><apiName>scope</apiName><shortdesc>
		 Scope covered by header cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Scope covered by header cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:vAlign:get"><apiName>vAlign</apiName><shortdesc/><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableCellElement:width:get"><apiName>width</apiName><shortdesc>
		 Cell width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell width. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLQuoteElement"><apiName>HTMLQuoteElement</apiName><shortdesc>
	 For the Q and BLOCKQUOTE elements.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 For the Q and BLOCKQUOTE elements.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLQuoteElement:cite:get"><apiName>cite</apiName><shortdesc>
		 A URI designating a source document or message.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating a source document or message.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLAreaElement"><apiName>HTMLAreaElement</apiName><shortdesc>
	 Client-side image map area definition.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Client-side image map area definition.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLAreaElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:coords:get"><apiName>coords</apiName><shortdesc>
		 Comma-separated list of lengths, defining an active region geometry.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Comma-separated list of lengths, defining an active region geometry.
		 
		 <p>This attribute specifies the position and shape on the screen. The 
		 number and order of values depends on the shape being defined. Possible combinations:
		 
		 <adobetable class="innertable">
		 
		 <tgroup cols="4"><thead><row><row>
		 		<entry><p>Shape</p></entry>
		 		<entry><p>Values</p></entry>
		 	</row><row>
		 		<entry><codeph>rect</codeph></entry>
		 		<entry>left-x, top-y, right-x, bottom-y.</entry>
		 	</row><row>
		 		<entry><codeph>circle</codeph></entry>
		 		<entry>center-x, center-y, radius. <b>Note:</b> When the radius value is a percentage value, 
		 user agents should calculate the final radius value based on the associated object's width 
		 and height. The radius should be the smaller value of the two.</entry>
		 	</row><row>
		 		<entry><codeph>poly</codeph></entry>
		 		<entry>x1, y1, x2, y2, ..., xN, yN. The first x and y coordinate pair and the last should 
		 be the same to close the polygon. When these coordinate values are not the same, user agents 
		 should infer an additional coordinate pair to close the polygon.</entry>
		 	</row></row></thead><tbody/></tgroup></adobetable>
		 </p>
		 
		 <p>Coordinates are relative to the top, left corner of the object. All values 
		 are lengths. All values are separated by commas.</p>
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.html.xml#HTMLAreaElement/shape"><linktext>shape</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLAreaElement:href:get"><apiName>href</apiName><shortdesc>
		 The URI of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI of the linked resource.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:noHref:get"><apiName>noHref</apiName><shortdesc>
		 Specifies that this area is inactive, i.e., has no associated action.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Specifies that this area is inactive, i.e., has no associated action.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:shape:get"><apiName>shape</apiName><shortdesc>
		 The shape of the active area.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The shape of the active area. The coordinates are given by coords.
		 
		 <p>Possible values can be:
		 <ul>
		 <li>default: Specifies the entire region</li>
		 <li>rect: Define a rectangular region</li>
		 <li>circle: Define a circular region</li>
		 <li>poly: Define a polygonal region</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAreaElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLLinkElement"><apiName>HTMLLinkElement</apiName><shortdesc>
	 The LINK element specifies a link to an external resource, and defines this 
	 document's relationship to that resource (or vice versa).</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The LINK element specifies a link to an external resource, and defines this 
	 document's relationship to that resource (or vice versa). See the LINK 
	 element definition in HTML 4.01 (see also the LinkStyle interface in the 
	 StyleSheet module [DOM Level 2 Style Sheets and CSS]).
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLLinkElement:charset:get"><apiName>charset</apiName><shortdesc>
		 The character encoding of the resource being linked to.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The character encoding of the resource being linked to. See the 
		 charset attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 Enables/disables the link.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Enables/disables the link. This is currently only used for style 
		 sheet links, and may be used to activate or deactivate style sheets.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:href:get"><apiName>href</apiName><shortdesc>
		 The URI of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The URI of the linked resource. See the href 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:hreflang:get"><apiName>hreflang</apiName><shortdesc>
		 Language code of the linked resource.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Language code of the linked resource. See the hreflang attribute 
		 definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:media:get"><apiName>media</apiName><shortdesc>
		 Designed for use with one or more target media.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Designed for use with one or more target media. See the media 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:rel:get"><apiName>rel</apiName><shortdesc>
		 Forward link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Forward link type. See the rel attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:rev:get"><apiName>rev</apiName><shortdesc>
		 Reverse link type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Reverse link type. See the rev attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in. See the target attribute definition 
		 in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLLinkElement:type:get"><apiName>type</apiName><shortdesc>
		 Advisory content type.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Advisory content type. See the type attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFormElement"><apiName>HTMLFormElement</apiName><shortdesc>
	 The FORM element encompasses behavior similar to a collection and an 
	 element.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The FORM element encompasses behavior similar to a collection and an 
	 element. It provides direct access to the contained form controls as well 
	 as the attributes of the form element.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLFormElement:reset"><apiName>reset</apiName><shortdesc>
		 Restores a form element's default values.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Restores a form element's default values. It performs the same action 
		 as a reset button. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLFormElement:submit"><apiName>submit</apiName><shortdesc>
		 Submits the form.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Submits the form. It performs the same action as a submit button. 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLFormElement:acceptCharset:get"><apiName>acceptCharset</apiName><shortdesc>
		 List of character sets supported by the server.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 List of character sets supported by the server. See the accept-charset 
		 attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:action:get"><apiName>action</apiName><shortdesc>
		 Server-side form handler.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Server-side form handler. See the action attribute definition in 
		 HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:elements:get"><apiName>elements</apiName><shortdesc>
		 Returns a collection of all form control elements in the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a collection of all form control elements in the form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:enctype:get"><apiName>enctype</apiName><shortdesc>
		 The content type of the submitted form, generally 
		 "application/x-www-form-urlencoded".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The content type of the submitted form, generally 
		 "application/x-www-form-urlencoded". See the enctype attribute 
		 definition in HTML 4.01.
		 
		 Note: The onsubmit even handler is not guaranteed to be triggered when 
		 invoking this method. The behavior is inconsistent for historical 
		 reasons and authors should not rely on a particular one.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:length:get"><apiName>length</apiName><shortdesc>
		 The number of form controls in the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 The number of form controls in the form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:method:get"><apiName>method</apiName><shortdesc>
		 HTTP method [IETF RFC 2616] used to submit form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 HTTP method [IETF RFC 2616] used to submit form. See the method attribute 
		 definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:name:get"><apiName>name</apiName><shortdesc>
		 Names the form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Names the form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:onreset:get"><apiName>onreset</apiName><shortdesc>
		 The onreset event occurs when a form is reset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onreset event occurs when a form is reset.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:onsubmit:get"><apiName>onsubmit</apiName><shortdesc>
		 The onsubmit event occurs when a form is submitted.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onsubmit event occurs when a form is submitted.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFormElement:target:get"><apiName>target</apiName><shortdesc>
		 Frame to render the resource in.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame to render the resource in. See the target attribute definition 
		 in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFrameElement"><apiName>HTMLFrameElement</apiName><shortdesc>
	 Create a frame.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Create a frame.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFrameElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:frameBorder:get"><apiName>frameBorder</apiName><shortdesc>
		 Request frame borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Request frame borders.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:longDesc:get"><apiName>longDesc</apiName><shortdesc>
		 URI designating a long description of this image or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a long description of this image or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:marginHeight:get"><apiName>marginHeight</apiName><shortdesc>
		 Frame margin height, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin height, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:marginWidth:get"><apiName>marginWidth</apiName><shortdesc>
		 Frame margin width, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin width, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:name:get"><apiName>name</apiName><shortdesc>
		 The frame name (object of the target attribute).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The frame name (object of the target attribute).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:noResize:get"><apiName>noResize</apiName><shortdesc>
		 When true, forbid user from resizing frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When true, forbid user from resizing frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:scrolling:get"><apiName>scrolling</apiName><shortdesc>
		 Specify whether or not the frame should have scrollbars.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specify whether or not the frame should have scrollbars. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameElement:src:get"><apiName>src</apiName><shortdesc>
		 A URI designating the initial frame contents.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating the initial frame contents.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLIsIndexElement"><apiName>HTMLIsIndexElement</apiName><shortdesc>
	 This element is used for single-line text input.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This element is used for single-line text input. See the ISINDEX element 
	 definition in HTML 4.01. This element is deprecated in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLIsIndexElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this 
		 control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIsIndexElement:prompt:get"><apiName>prompt</apiName><shortdesc>
		 The prompt message.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The prompt message. See the prompt attribute definition in HTML 4.01. 
		 This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLInputElement"><apiName>HTMLInputElement</apiName><shortdesc>
	 Form control.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Form control.
	 
	 <p>Note: Depending upon the environment in which the page is being viewed, the value 
	 property may be read-only for the file upload input type. For the "password" input 
	 type, the actual value returned may be masked to prevent unauthorized use. See the 
	 INPUT element definition in [HTML 4.01].</p>
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLInputElement:blur"><apiName>blur</apiName><shortdesc>
		 Removes keyboard focus from this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Removes keyboard focus from this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLInputElement:click"><apiName>click</apiName><shortdesc>
		 Simulate a mouse-click.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Simulate a mouse-click. For INPUT elements whose type attribute has one of 
		 the following values: "button", "checkbox", "radio", "reset", or "submit". 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLInputElement:focus"><apiName>focus</apiName><shortdesc>
		 Gives keyboard focus to this element.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Gives keyboard focus to this element. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLInputElement:select"><apiName>select</apiName><shortdesc>
		 Select the contents of the text area.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Select the contents of the text area. For INPUT elements whose type 
		 attribute has one of the following values: "text", "file", or "password". 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLInputElement:accept:get"><apiName>accept</apiName><shortdesc>
		 A comma-separated list of content types that a server processing this form will handle correctly.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A comma-separated list of content types that a server processing this form will handle correctly.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:accessKey:get"><apiName>accessKey</apiName><shortdesc>
		 A single character access key to give access to the form control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A single character access key to give access to the form control.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:checked:get"><apiName>checked</apiName><shortdesc>
		 When the type attribute of the element has the value "radio" or "checkbox", this represents 
		 the current state of the form control, in an interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When the type attribute of the element has the value "radio" or "checkbox", this represents 
		 the current state of the form control, in an interactive user agent. Changes to this attribute 
		 change the state of the form control, but do not change the value of the HTML checked 
		 attribute of the INPUT element.
		 
		 <p>Note: During the handling of a click event on an input element with a type attribute that 
		 has the value "radio" or "checkbox", some implementations may change the value of this property 
		 before the event is being dispatched in the document. If the default action of the event is 
		 canceled, the value of the property may be changed back to its original value. This means that 
		 the value of this property during the handling of click events is implementation dependent.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:defaultChecked:get"><apiName>defaultChecked</apiName><shortdesc>
		 When type has the value "radio" or "checkbox", this represents the HTML checked attribute 
		 of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 When type has the value "radio" or "checkbox", this represents the HTML checked attribute 
		 of the element. The value of this attribute does not change if the state of the 
		 corresponding form control, in an interactive user agent, changes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:defaultValue:get"><apiName>defaultValue</apiName><shortdesc>
		 When the type attribute of the element has the value "text", "file" or "password", this 
		 represents the HTML value attribute of the element.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 When the type attribute of the element has the value "text", "file" or "password", this 
		 represents the HTML value attribute of the element. The value of this attribute does not 
		 change if the contents of the corresponding form control, in an interactive user 
		 agent, changes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 The control is unavailable in this context.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 The control is unavailable in this context.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not 
		 within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:maxLength:get"><apiName>maxLength</apiName><shortdesc>
		 Maximum number of characters for text fields, when type has the value "text" or "password".</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Maximum number of characters for text fields, when type has the value "text" or "password".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form
		 </shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onblur:get"><apiName>onblur</apiName><shortdesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onblur event occurs when an element loses focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onchange:get"><apiName>onchange</apiName><shortdesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onchange event occurs when a control loses the input focus and its value has been modified since gaining focus.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onfocus:get"><apiName>onfocus</apiName><shortdesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onfocus event occurs when an element receives focus either by the pointing device or by tabbing navigation.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:onselect:get"><apiName>onselect</apiName><shortdesc>
		 The onselect event occurs when a user selects some text in a text field.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onselect event occurs when a user selects some text in a text field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:readOnly:get"><apiName>readOnly</apiName><shortdesc>
		 This control is read-only.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 This control is read-only. Relevant only when type has the value "text" or "password".
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:size:get"><apiName>size</apiName><shortdesc>
		 Size information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Size information. The precise meaning is specific to each type of field.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:src:get"><apiName>src</apiName><shortdesc>
		 When the type attribute has the value "image", this attribute specifies the 
		 location of the image to be used to decorate the graphical submit button.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 When the type attribute has the value "image", this attribute specifies the 
		 location of the image to be used to decorate the graphical submit button.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:type:get"><apiName>type</apiName><shortdesc>
		 The type of control created (all lower case).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The type of control created (all lower case).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:useMap:get"><apiName>useMap</apiName><shortdesc>
		 Use client-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Use client-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLInputElement:value:get"><apiName>value</apiName><shortdesc>
		 When the type attribute of the element has the value "text", "file" or 
		 "password", this represents the current contents of the corresponding form 
		 control, in an interactive user agent.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 When the type attribute of the element has the value "text", "file" or 
		 "password", this represents the current contents of the corresponding form 
		 control, in an interactive user agent. Changing this attribute changes the 
		 contents of the form control, but does not change the value of the HTML 
		 value attribute of the element. When the type attribute of the element has 
		 the value "button", "hidden", "submit", "reset", "image", "checkbox" or 
		 "radio", this represents the HTML value attribute of the element.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLBodyElement"><apiName>HTMLBodyElement</apiName><shortdesc>
	 The HTML document body.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The HTML document body. This element is always present in the DOM 
	 API, even if the tags are not present in the source document.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLBodyElement:aLink:get"><apiName>aLink</apiName><shortdesc>
		 Color of active links (after mouse-button down, but before 
		 mouse-button up).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Color of active links (after mouse-button down, but before 
		 mouse-button up). This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:background:get"><apiName>background</apiName><shortdesc>
		 URI of the background texture tile image.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI of the background texture tile image. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Document background color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Document background color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:link:get"><apiName>link</apiName><shortdesc>
		 Color of links that are not active and unvisited.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Color of links that are not active and unvisited. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:onload:get"><apiName>onload</apiName><shortdesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:onoffline:get"><apiName>onoffline</apiName><shortdesc>
		 WHATWG Web Applications 1.0 specification | Firefox 3+ 
		 
		 Returns the event handling code for the offline event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>WHATWG Web Applications 1.0 specification | Firefox 3+</b> 
		 
		 Returns the event handling code for the offline event.
		 
		 <p>Note: The events bubble up from document.body, to document, ending at window. Both events are 
		 non-cancellable (you can't prevent the user from coming online, or going offline).</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:ononline:get"><apiName>ononline</apiName><shortdesc>
		 WHATWG Web Applications 1.0 specification | Firefox 3+ 
		 
		 Returns the event handling code for the online event.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 <b>WHATWG Web Applications 1.0 specification | Firefox 3+</b> 
		 
		 Returns the event handling code for the online event.
		 
		 <p>Note: The events bubble up from document.body, to document, ending at window. Both events are 
		 non-cancellable (you can't prevent the user from coming online, or going offline).</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:onunload:get"><apiName>onunload</apiName><shortdesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:text:get"><apiName>text</apiName><shortdesc>
		 Document text color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiIsOverride/><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Document text color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLBodyElement:vLink:get"><apiName>vLink</apiName><shortdesc>
		 Color of links that have been visited by the user.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Color of links that have been visited by the user. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFontElement"><apiName>HTMLFontElement</apiName><shortdesc>
	 Local change to font.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Local change to font. This element is deprecated in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFontElement:color:get"><apiName>color</apiName><shortdesc>
		 Font color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFontElement:face:get"><apiName>face</apiName><shortdesc>
		 Font face identifier.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Font face identifier. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFontElement:size:get"><apiName>size</apiName><shortdesc>
		 Computed font size.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Computed font size. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLIFrameElement"><apiName>HTMLIFrameElement</apiName><shortdesc>
	 Inline subwindows.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Inline subwindows.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLIFrameElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 DOM Level 2
		 
		 The document this frame contains, if there is any and it is available, or null otherwise.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:frameBorder:get"><apiName>frameBorder</apiName><shortdesc>
		 Request frame borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Request frame borders.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:height:get"><apiName>height</apiName><shortdesc>
		 Frame height.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame height.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:longDesc:get"><apiName>longDesc</apiName><shortdesc>
		 URI designating a long description of this image or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 URI designating a long description of this image or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:marginHeight:get"><apiName>marginHeight</apiName><shortdesc>
		 Frame margin height, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin height, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:marginWidth:get"><apiName>marginWidth</apiName><shortdesc>
		 Frame margin width, in pixels.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame margin width, in pixels.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:name:get"><apiName>name</apiName><shortdesc>
		 The frame name (object of the target attribute).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The frame name (object of the target attribute).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:scrolling:get"><apiName>scrolling</apiName><shortdesc>
		 Specify whether or not the frame should have scrollbars.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specify whether or not the frame should have scrollbars. 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:src:get"><apiName>src</apiName><shortdesc>
		 A URI designating the initial frame contents.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI designating the initial frame contents.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLIFrameElement:width:get"><apiName>width</apiName><shortdesc>
		 Frame width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Frame width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLObjectElement"><apiName>HTMLObjectElement</apiName><shortdesc>
	 Generic embedded object.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Generic embedded object.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLObjectElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:archive:get"><apiName>archive</apiName><shortdesc>
		 Space-separated list of archives.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Space-separated list of archives.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:border:get"><apiName>border</apiName><shortdesc>
		 Width of border around the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Width of border around the object. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:code:get"><apiName>code</apiName><shortdesc>
		 Applet class file.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Applet class file.
		 
		 </apiDesc></apiValueDetail><related-links><link href="dom.html.xml#HTMLAppletElement/code"><linktext>HTMLAppletElement.code</linktext></link></related-links></apiValue><apiValue id="dom.html:HTMLObjectElement:codeBase:get"><apiName>codeBase</apiName><shortdesc>
		 Base URI for classid, data, and archive attributes.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Base URI for classid, data, and archive attributes.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:codeType:get"><apiName>codeType</apiName><shortdesc>
		 Content type for data downloaded via classid attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Content type for data downloaded via classid attribute.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:contentDocument:get"><apiName>contentDocument</apiName><shortdesc>
		 DOM Level 2
		 
		 The document this object contains, if there is any and it is available, or null otherwise.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.core:Document</apiValueClassifier></apiValueDef><apiDesc>
		 DOM Level 2
		 
		 The document this object contains, if there is any and it is available, or null otherwise.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:data:get"><apiName>data</apiName><shortdesc>
		 A URI [IETF RFC 2396] specifying the location of the object's data.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 A URI [IETF RFC 2396] specifying the location of the object's data.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:declare:get"><apiName>declare</apiName><shortdesc>
		 Declare (for future reference), but do not instantiate, this object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Declare (for future reference), but do not instantiate, this object.
		 
		 <p>When present, this boolean attribute makes the current OBJECT definition 
		 a declaration only. The object must be instantiated by a subsequent OBJECT 
		 definition referring to this declaration.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:form:get"><apiName>form</apiName><shortdesc>
		 Returns the FORM element containing this control.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html:HTMLFormElement</apiValueClassifier></apiValueDef><apiDesc>
		 Returns the FORM element containing this control. Returns null if this control is not within the context of a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:height:get"><apiName>height</apiName><shortdesc>
		 Override height.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override height.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:hspace:get"><apiName>hspace</apiName><shortdesc>
		 Horizontal space, in pixels, to the left and right of this image, applet, or object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Horizontal space, in pixels, to the left and right of this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:name:get"><apiName>name</apiName><shortdesc>
		 Form control or object name when submitted with a form.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Form control or object name when submitted with a form.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:standby:get"><apiName>standby</apiName><shortdesc>
		 Message to render while loading the object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Message to render while loading the object.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:tabIndex:get"><apiName>tabIndex</apiName><shortdesc>
		 Index that represents the element's position in the tabbing order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Index that represents the element's position in the tabbing order.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:type:get"><apiName>type</apiName><shortdesc>
		 Content type for data downloaded via data attribute.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Content type for data downloaded via data attribute.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:useMap:get"><apiName>useMap</apiName><shortdesc>
		 Use client-side image map.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Use client-side image map.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:vspace:get"><apiName>vspace</apiName><shortdesc>
		 Vertical space, in pixels, above and below this image, applet, or object.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Vertical space, in pixels, above and below this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLObjectElement:width:get"><apiName>width</apiName><shortdesc>
		 Override width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLMetaElement"><apiName>HTMLMetaElement</apiName><shortdesc>
	 This contains generic meta-information about the document.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 This contains generic meta-information about the document. See the META element definition in HTML 4.01.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLMetaElement:content:get"><apiName>content</apiName><shortdesc>
		 Associated information.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Associated information. See the content attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMetaElement:httpEquiv:get"><apiName>httpEquiv</apiName><shortdesc>
		 HTTP response header name [IETF RFC 2616].</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 HTTP response header name [IETF RFC 2616]. See the http-equiv attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMetaElement:name:get"><apiName>name</apiName><shortdesc>
		 Meta information name.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Meta information name. See the name attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLMetaElement:scheme:get"><apiName>scheme</apiName><shortdesc>
		 Select form of content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Select form of content. See the scheme attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLAppletElement"><apiName>HTMLAppletElement</apiName><shortdesc>
	 An embedded Java applet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
	 </as-of></asCustoms></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An embedded Java applet. This element is deprecated in HTML 4.01.
	 
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLAppletElement:align:get"><apiName>align</apiName><shortdesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Aligns this object (vertically or horizontally) with respect to its surrounding text. This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>bottom</li>
		 <li>middle</li>
		 <li>top</li>
		 </ul></p>
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:alt:get"><apiName>alt</apiName><shortdesc>
		 Alternate text for user agents not rendering the normal content of this element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alternate text for user agents not rendering the normal content of this element. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:archive:get"><apiName>archive</apiName><shortdesc>
		 Comma-separated archive list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Comma-separated archive list. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:code:get"><apiName>code</apiName><shortdesc>
		 Applet class file.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Applet class file. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:codeBase:get"><apiName>codeBase</apiName><shortdesc>
		 Optional base URI for applet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Optional base URI for applet. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:height:get"><apiName>height</apiName><shortdesc>
		 Override height.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override height. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:hspace:get"><apiName>hspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Horizontal space, in pixels, to the left and right of this image, applet, or object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Horizontal space, in pixels, to the left and right of this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:name:get"><apiName>name</apiName><shortdesc>
		 The name of the applet.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The name of the applet. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:object:get"><apiName>object</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The value of the "object" attribute.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The value of the "object" attribute. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:vspace:get"><apiName>vspace</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Vertical space, in pixels, above and below this image, applet, or object.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Vertical space, in pixels, above and below this image, applet, or object. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLAppletElement:width:get"><apiName>width</apiName><shortdesc>
		 Override width.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Deprecated" version="0"/></apiVersion></asMetadata><asCustoms><as-of>HTML 4.01
		 </as-of></asCustoms></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Override width. This attribute is deprecated in HTML 4.01.
		 
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableElement"><apiName>HTMLTableElement</apiName><shortdesc>
	 The createand deletemethods on the table allow authors to construct 
	 and modify tables.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 The createand deletemethods on the table allow authors to construct 
	 and modify tables. [HTML 4.01] specifies that only one of each of the 
	 CAPTION, THEAD, and TFOOT elements may exist in a table. Therefore, if 
	 one exists, and the createTHead() or createTFoot() method is called, 
	 the method returns the existing THead or TFoot element.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLTableElement:createCaption"><apiName>createCaption</apiName><shortdesc>
		 Create a new table caption object or return an existing one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A CAPTION element.
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create a new table caption object or return an existing one.
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:createTFoot"><apiName>createTFoot</apiName><shortdesc>
		 Create a table footer row or return an existing one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A footer element (TFOOT).
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create a table footer row or return an existing one. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:createTHead"><apiName>createTHead</apiName><shortdesc>
		 Create a table header row or return an existing one.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>A new table header element (THEAD).
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn></apiOperationDef><apiDesc>
		 Create a table header row or return an existing one. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:deleteCaption"><apiName>deleteCaption</apiName><shortdesc>
		 Delete the table caption, if one exists.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Delete the table caption, if one exists. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:deleteRow"><apiName>deleteRow</apiName><shortdesc>
		 Delete a table row.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is greater 
		 than or equal to the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the row to be deleted. This index starts from 
		 0 and is relative to the logical order (not document order) of all the 
		 rows contained inside the table. If the index is -1 the last row in the 
		 table is deleted.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Delete a table row. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:deleteTFoot"><apiName>deleteTFoot</apiName><shortdesc>
		 Delete the footer from the table, if one exists.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Delete the footer from the table, if one exists. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:deleteTHead"><apiName>deleteTHead</apiName><shortdesc>
		 Delete the header from the table, if one exists.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiType value="void"/></apiReturn></apiOperationDef><apiDesc>
		 Delete the header from the table, if one exists. 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableElement:insertRow"><apiName>insertRow</apiName><shortdesc>
		 Insert a new empty row in the table.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created row.
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The row number where to insert a new row. This index starts from 0 and 
		 is relative to the logical order (not document order) of all the rows contained inside the table.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Insert a new empty row in the table. The new row is inserted immediately before 
		 and in the same section as the current indexth row in the table. If index is -1 
		 or equal to the number of rows, the new row is appended. In addition, when the 
		 table is empty the row is inserted into a TBODY which is created and inserted 
		 into the table. 
		 
		 <p><b>Note:</b> A table row cannot be empty according to [HTML 4.01].</p>
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLTableElement:align:get"><apiName>align</apiName><shortdesc>
		 Specifies the table's position with respect to the rest of the document.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the table's position with respect to the rest of the document. 
		 This attribute is deprecated in HTML 4.01.
		 <p>Valid values are: 
		 <ul>
		 <li>left: The table is to the left of the document.</li>
		 <li>center: The table is to the center of the document.</li>
		 <li>right: The table is to the right of the document.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Cell background color.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Cell background color. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:border:get"><apiName>border</apiName><shortdesc>
		 The width of the border around the table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The width of the border around the table.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:caption:get"><apiName>caption</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Returns the table's CAPTION, or void if none exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLTableCaptionElement</apiValueClassifier><apiException><apiDesc>HIERARCHY_REQUEST_ERR: if the element is not a CAPTION. 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Returns the table's CAPTION, or void if none exists.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:cellPadding:get"><apiName>cellPadding</apiName><shortdesc>
		 Specifies the horizontal and vertical space between cell content and cell borders.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the horizontal and vertical space between cell content and cell borders.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:cellSpacing:get"><apiName>cellSpacing</apiName><shortdesc>
		 Specifies the horizontal and vertical separation between cells.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the horizontal and vertical separation between cells.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:frame:get"><apiName>frame</apiName><shortdesc>
		 Specifies which external table borders to render.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies which external table borders to render.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:rows:get"><apiName>rows</apiName><shortdesc>
		 Returns a collection of all the rows in the table, including all in THEAD, TFOOT, all TBODY elements.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a collection of all the rows in the table, including all in THEAD, TFOOT, all TBODY elements.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:rules:get"><apiName>rules</apiName><shortdesc>
		 Specifies which internal table borders to render.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies which internal table borders to render.
		 <p>Valid values are: 
		 <ul>
		 <li>none: No rules. This is the default value.</li>
		 <li>groups: Rules will appear between row groups (see THEAD, TFOOT, and TBODY) and column groups (see COLGROUP and COL) only.</li>
		 <li>rows: Rules will appear between rows only.</li>
		 <li>cols: Rules will appear between columns only.</li>
		 <li>all: Rules will appear between all rows and columns.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:summary:get"><apiName>summary</apiName><shortdesc>
		 Description about the purpose or structure of a table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Description about the purpose or structure of a table.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:tBodies:get"><apiName>tBodies</apiName><shortdesc>
		 Returns a collection of the table bodies (including implicit ones).</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		 Returns a collection of the table bodies (including implicit ones).
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:tFoot:get"><apiName>tFoot</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Returns the table's TFOOT, or null if none exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLTableSectionElement</apiValueClassifier><apiException><apiDesc>HIERARCHY_REQUEST_ERR: if the element is not a TFOOT. 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Returns the table's TFOOT, or null if none exists.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:tHead:get"><apiName>tHead</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Returns the table's THEAD, or null if none exists.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.html:HTMLTableSectionElement</apiValueClassifier><apiException><apiDesc>HIERARCHY_REQUEST_ERR: if the element is not a THEAD. 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Returns the table's THEAD, or null if none exists.
		 
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableElement:width:get"><apiName>width</apiName><shortdesc>
		 Specifies the desired table width.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Specifies the desired table width.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLPreElement"><apiName>HTMLPreElement</apiName><shortdesc>
	 Preformatted text.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Preformatted text.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLPreElement:width:get"><apiName>width</apiName><shortdesc>
		 Fixed width for content.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Fixed width for content. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableCaptionElement"><apiName>HTMLTableCaptionElement</apiName><shortdesc>
	 Table caption.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Table caption.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLTableCaptionElement:align:get"><apiName>align</apiName><shortdesc>
		 Caption alignment with respect to the table.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Caption alignment with respect to the table.
		 
		 <p>Valid values are: 
		 <ul>
		 <li>top: The caption is at the top of the table. This is the default value.</li>
		 <li>bottom: The caption is at the bottom of the table.</li>
		 <li>left: The caption is at the left of the table.</li>
		 <li>right: The caption is at the right of the table.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLFrameSetElement"><apiName>HTMLFrameSetElement</apiName><shortdesc>
	 Create a grid of frames.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Create a grid of frames.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLFrameSetElement:cols:get"><apiName>cols</apiName><shortdesc>
		 The number of columns of frames in the frameset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The number of columns of frames in the frameset.
		 
		 <p>It is a comma-separated list of pixels, percentages, and 
		 relative lengths. The default value is 100%, meaning one column.</p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameSetElement:onload:get"><apiName>onload</apiName><shortdesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onload event occurs when the user agent finishes loading a window or all frames within a FRAMESET.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameSetElement:onunload:get"><apiName>onunload</apiName><shortdesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Function"/></apiValueDef><apiDesc>
		 The onunload event occurs when the user agent removes a document from a window or frame.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLFrameSetElement:rows:get"><apiName>rows</apiName><shortdesc>
		 The number of rows of frames in the frameset.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The number of rows of frames in the frameset.
		 
		 <p>It is a comma-separated list of pixels, percentages, and 
		 relative lengths. The default value is 100%, meaning one column.</p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLTableRowElement"><apiName>HTMLTableRowElement</apiName><shortdesc>
	 A row in a table.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 A row in a table.
	 </apiDesc></apiClassifierDetail><apiOperation id="dom.html:HTMLTableRowElement:deleteCell"><apiName>deleteCell</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Delete a cell from the current row.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiType value="void"/></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the cell to delete, starting from 0. If the index is -1 the last cell in the row is deleted.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Delete a cell from the current row. 
		 
		 </apiDesc></apiOperationDetail></apiOperation><apiOperation id="dom.html:HTMLTableRowElement:insertCell"><apiName>insertCell</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 Insert an empty TD cell into this row.</shortdesc><prolog/><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiException><apiDesc>INDEX_SIZE_ERR: Raised if the specified index is 
		 greater than the number of rows or if the index is a negative number other than -1.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException><apiReturn><apiDesc>The newly created cell.
		 </apiDesc><apiOperationClassifier>dom.html:HTMLElement</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The place to insert the cell, starting from 0.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Modified in DOM Level 2
		 
		 Insert an empty TD cell into this row. If index is -1 or equal to the number of cells, 
		 the new cell is appended. 
		 
		  </apiDesc></apiOperationDetail></apiOperation><apiValue id="dom.html:HTMLTableRowElement:align:get"><apiName>align</apiName><shortdesc>
		 Horizontal alignment of data within cells of this row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Horizontal alignment of data within cells of this row.
		 <p>Valid values are: 
		 <ul>
		 <li>left: The table is to the left of the document.</li>
		 <li>center: The table is to the center of the document.</li>
		 <li>right: The table is to the right of the document.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:bgColor:get"><apiName>bgColor</apiName><shortdesc>
		 Background color for rows.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Background color for rows. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:cells:get"><apiName>cells</apiName><shortdesc>
		  Modified in DOM Level 2
		 
		 The collection of cells in this row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiValueClassifier>dom.html.objects:HTMLCollection</apiValueClassifier></apiValueDef><apiDesc>
		  Modified in DOM Level 2
		 
		 The collection of cells in this row.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:ch:get"><apiName>ch</apiName><shortdesc>
		 Alignment character for cells in a column.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Alignment character for cells in a column.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:chOff:get"><apiName>chOff</apiName><shortdesc>
		 Offset of alignment character.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Offset of alignment character.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:rowIndex:get"><apiName>rowIndex</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 This is in logical order and not in document order.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 This is in logical order and not in document order. The rowIndex does take into 
		 account sections (THEAD, TFOOT, or TBODY) within the table, placing THEAD rows 
		 first in the index, followed by TBODY rows, followed by TFOOT rows.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:sectionRowIndex:get"><apiName>sectionRowIndex</apiName><shortdesc>
		 Modified in DOM Level 2
		 
		 The index of this row, relative to the current section (THEAD, TFOOT, or TBODY), starting from 0.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 Modified in DOM Level 2
		 
		 The index of this row, relative to the current section (THEAD, TFOOT, or TBODY), starting from 0.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLTableRowElement:vAlign:get"><apiName>vAlign</apiName><shortdesc>
		 Vertical alignment of data within cells of this row.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Vertical alignment of data within cells of this row.
		 <p>Valid values are: 
		 <ul>
		 <li>top: Cell data is flush with the top of the cell.</li>
		 <li>middle: Cell data is centered vertically within the cell. This is the default value.</li>
		 <li>bottom: Cell data is flush with the bottom of the cell.</li>
		 <li>baseline: All cells in the same row as a cell whose valign attribute has this value should have their textual data positioned so that the first text line occurs on a baseline common to all cells in the row. This constraint does not apply to subsequent text lines in these cells.</li>
		 </ul></p>
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLDListElement"><apiName>HTMLDListElement</apiName><shortdesc>
	 Definition list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Definition list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLDListElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLUListElement"><apiName>HTMLUListElement</apiName><shortdesc>
	 Unordered list.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Unordered list.
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLUListElement:compact:get"><apiName>compact</apiName><shortdesc>
		 Reduce spacing between list items.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Reduce spacing between list items. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLUListElement:type:get"><apiName>type</apiName><shortdesc>
		 Bullet style.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Bullet style. This attribute is deprecated in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier><apiClassifier id="dom.html:HTMLStyleElement"><apiName>HTMLStyleElement</apiName><shortdesc>
	 Style information.</shortdesc><prolog><asMetadata/></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>dom.html:HTMLElement</apiBaseClassifier></apiClassifierDef><apiDesc>
	 Style information. See the STYLE element definition in HTML 4.01, the CSS 
	 module [DOM Level 2 Style Sheets and CSS] and the LinkStyle interface in 
	 the StyleSheets module [DOM Level 2 Style Sheets and CSS].
	 </apiDesc></apiClassifierDetail><apiValue id="dom.html:HTMLStyleElement:disabled:get"><apiName>disabled</apiName><shortdesc>
		 Enables/disables the style sheet.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Boolean"/></apiValueDef><apiDesc>
		 Enables/disables the style sheet.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLStyleElement:media:get"><apiName>media</apiName><shortdesc>
		 Designed for use with one or more target media.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 Designed for use with one or more target media. See the media attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue><apiValue id="dom.html:HTMLStyleElement:type:get"><apiName>type</apiName><shortdesc>
		 The content type of the style sheet language.</shortdesc><prolog/><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiValueClassifier>dom.core.types:DOMString</apiValueClassifier></apiValueDef><apiDesc>
		 The content type of the style sheet language. See the type attribute definition in HTML 4.01.
		 </apiDesc></apiValueDetail></apiValue></apiClassifier></apiPackage>