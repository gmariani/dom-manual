<apiPackage id="dom.html.objects"><apiName>dom.html.objects</apiName><apiDetail/><apiClassifier id="dom.html.objects:HTMLCollection"><apiName>HTMLCollection</apiName><shortdesc>
	 An HTMLCollection is a list of nodes.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An HTMLCollection is a list of nodes. 
	 
	 <p>An individual node may be accessed by either ordinal index or the node's name or id attributes.</p>
	 
	 <p><b>Note:</b> Collections in the HTML DOM are assumed to be live meaning that they 
	 are automatically updated when the underlying document is changed.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/en/DOM/HTMLCollection"><linktext>MDC: HTMLCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-75708506"><linktext>W3C DOM HTML Specification</linktext></link><link href="http://msdn.microsoft.com/en-us/library/dd347073%28VS.85%29.aspx"><linktext>MSDN: HTMLCollection</linktext></link></related-links><apiOperation id="dom.html.objects:HTMLCollection:item"><apiName>item</apiName><shortdesc>
		 This method retrieves a node specified by ordinal index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The Node at the corresponding position upon success. A value 
		 of null is returned if the index is out of range.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the node to be fetched. The index 
		 origin is 0
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method retrieves a node specified by ordinal index. Nodes are
		 numbered in tree order (depth-first traversal order). 
		 
		 <p><b>Note (IE):</b> IE7 and earlier. item() has a second and optional param called 'iSubindex'. This param specifies the
		 zero-based index of the object to retrieve when a collection is returned.</p>
		 
		 <p><b>Note (IE):</b>  Internet Explorer 8 and later. In IE8 mode, the iSubindex parameter is not used.</p>
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/HTMLCollection"><linktext>MDC: HTMLCollection</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms536460%28VS.85%29.aspx"><linktext>MSDN: item Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-33262535"><linktext>W3C - DOM HTML: HTMLCollection.item()</linktext></link></related-links></apiOperation><apiOperation id="dom.html.objects:HTMLCollection:namedItem"><apiName>namedItem</apiName><shortdesc>
		 This method retrieves a Node using a name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The Node with a name or id attribute whose value corresponds 
		 to the specified string. Upon failure (e.g., no node with this name 
		 exists), returns null.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the Node to be fetched.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method retrieves a Node using a name. With [HTML 4.01] documents, 
		 it first searches for a Node with a matching id attribute. If it 
		 doesn't find one, it then searches for a Node with a matching name 
		 attribute, but only on those elements that are allowed a name attribute. 
		 With [XHTML 1.0] documents, this method only searches for Nodes with a 
		 matching id attribute. This method is case insensitive in HTML documents 
		 and case sensitive in XHTML documents. 
		 
		 <p><b>Note (IE):</b> Internet Explorer 8 and later. In IE8 mode, the namedItem method does not return collections if more than one named item is found; instead, it returns the first case-insensitive matched element.</p>
		 
		 <p><b>Note (IE):</b> The namedItem method was introduced in Microsoft Internet Explorer 6.</p>
		 
		 </apiDesc><example>
		 The following example shows how to use the namedItem method to retrieve a div and change its innerText property.
		 <codeblock>
		 &lt;div id="oDIV1"&gt;This text will not change.&lt;/div&gt;
		 &lt;div id="oDIV2"&gt;This text will change.&lt;/div&gt;
		 &lt;button onclick="document.all.namedItem('oDIV2').innerHTML='Changed!';"&gt;
		 Change Option
		 &lt;/button&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://developer.mozilla.org/en/DOM/HTMLCollection"><linktext>MDC: HTMLCollection</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms536634%28VS.85%29.aspx"><linktext>MSDN: namedItem Method</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-21069976"><linktext>W3C - DOM HTML: HTMLCollection.namedItem()</linktext></link></related-links></apiOperation><apiOperation id="dom.html.objects:HTMLCollection:tags"><apiName>tags</apiName><shortdesc>
		 Retrieves a collection of objects that have the specified HTML tag name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a collection of element objects if successful, or null otherwise. 
		 
		 </apiDesc><apiOperationClassifier>dom.html.objects:HTMLCollection</apiOperationClassifier></apiReturn><apiParam><apiItemName>tag</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies an HTML tag. It can be any one of the objects exposed by the DHTML Object Model.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a collection of objects that have the specified HTML tag name. 
		 
		 <p><b>Note:</b> Successful execution includes the case where no elements having the given name are found. In this case, a collection containing zero elements is returned.</p>
		 
		 <p><b>Note:</b> NULL may be returned in cases where the collection cannot be constructed, such as inability to allocate memory for even a zero-length collection.</p>
		 
		 </apiDesc><example>
		 This example uses the tags method to retrieve a collection of all p elements in the document, and all body 
		 elements in the document. It displays some of the properties of the collections that are returned. It then 
		 displays selected elements of the collection.
		 
		 <p>There are no p elements in the document, and there is one body element in the document. So, this example 
		 illustrates both the cases where the collection is empty and where the collection is populated.</p>
		 <codeblock>
		 &lt;html&gt;
&lt;head&gt;
&lt;title&gt;document.all.tags example &lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;script type="text/jscript" language="jscript"&gt;

document.write("Here is how document.all.tags behaves when no tags are found.&lt;br&gt;");
var coll = document.all.tags("p");
document.write("list 'p' tags" + "&lt;br&gt;");
document.write("coll= " + coll + "&lt;br&gt;");
document.write("coll.length= " + coll.length + "&lt;br&gt;");
if (coll==null){
    document.write( "coll= is null &lt;br&gt;" );
} else {
    document.write( "coll= is not null &lt;br&gt;" );
}


if ( coll[0] != null ){
    document.write( "coll[0].attributes length " + coll[0].attributes.length  + "&lt;br&gt;");

    for ( i = 0; i&lt;coll[0].attributes.length ; i++ ){
        if (( coll[0].attributes[i].value       != "null"  )
           &amp;( coll[0].attributes[i].value.length &gt; 0       ))
        {
            document.write( "coll[0].attributes "        + i + ":"   );
            document.write(  coll[0].attributes[i].name      + ":            "   );
            document.write(  coll[0].attributes[i].value     + "&lt;br&gt;");
        }
    }
}

document.write( "&lt;br&gt;&lt;br&gt;" );
document.write( "Here is how document.all.tags behaves when at least 1 tag is found.&lt;br&gt;" );
var coll = document.all.tags( "body" );
document.write( "list 'body' tags"            + "&lt;br&gt;" );
document.write( "coll= "        + coll        + "&lt;br&gt;" );
document.write( "coll.length= " + coll.length + "&lt;br&gt;" );
if ( coll == null ){
    document.write( "coll= is null &lt;br&gt;" );
} else {
    document.write( "coll= is not null &lt;br&gt;" );
}

if ( coll[0] != null ){
    document.write( "coll[0].attributes length " + coll[0].attributes.length  + "&lt;br&gt;");

    for ( i = 0; i&lt;coll[0].attributes.length ; i++ ){
        if (( coll[0].attributes[i].value       != "null"  )
           &amp;( coll[0].attributes[i].value.length &gt; 0       ))
        {
            document.write( "coll[0].attributes "        + i + ":"   );
            document.write(  coll[0].attributes[i].name      + ":            "   );
            document.write(  coll[0].attributes[i].value     + "&lt;br&gt;");
        }
    }
}

&lt;/script&gt;

&lt;pre&gt;
=================================
== Here is what the above example should display in your browser
=================================
Here is how document.all.tags behaves when no tags are found.
list 'p' tags
coll= [object]
coll.length= 0
coll= is not null


Here is how document.all.tags behaves when at least 1 tag is found.
list 'body' tags
coll= [object]
coll.length= 1
coll= is not null
coll[0].attributes length 98
coll[0].attributes 21:hideFocus: false
coll[0].attributes 45:contentEditable: inherit
coll[0].attributes 59:disabled: false
coll[0].attributes 69:tabIndex: 0
coll[0].attributes 80:bottomMargin: 15
coll[0].attributes 81:noWrap: false
coll[0].attributes 90:leftMargin: 10
coll[0].attributes 92:topMargin: 15
coll[0].attributes 95:rightMargin: 10

&lt;/pre&gt;
&lt;/body&gt;
&lt;/html&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536776%28VS.85%29.aspx"><linktext>MSDN: tags Method</linktext></link></related-links></apiOperation><apiOperation id="dom.html.objects:HTMLCollection:urns"><apiName>urns</apiName><shortdesc>
		 Retrieves a collection of all objects to which a specified behavior is attached.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="Non-Standard" version="Microsoft"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>Returns a collection of objects if successful, or null otherwise.
		 
		 </apiDesc><apiOperationClassifier>dom.html.objects:HTMLCollection</apiOperationClassifier></apiReturn><apiParam><apiItemName>urn</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>Specifies the behavior's Uniform Resource Name (URN).
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 Retrieves a collection of all objects to which a specified behavior is attached.
		 
		 </apiDesc><example>
		 The following example shows how to use the urns method to retrieve a collection of all 
		 elements currently attached to the specified behavior and then display a comma-delimited 
		 list of these element IDs in a message box.
		 <codeblock>
		 &lt;script language="JScript"&gt;
		 	var coll  = document.all.urns("URN1");
		 	var sText = '';
		 
		 	if (coll != null) {
		 		for (i=0; i&lt;coll.length; i++) {
		 			sText += coll.item(i).id + ', ';
		 		}
		 
		 		window.alert(sText);
		 	}
		 &lt;/script&gt;</codeblock>
		 
		 </example></apiOperationDetail><related-links><link href="http://msdn.microsoft.com/en-us/library/ms536780%28VS.85%29.aspx"><linktext>MSDN: urns Method</linktext></link></related-links></apiOperation><apiValue id="dom.html.objects:HTMLCollection:length:get"><apiName>length</apiName><shortdesc>
		 This attribute specifies the length or size of the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="1"/><apiSince version="DOMHTML 1"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="read"/><apiType value="Number"/></apiValueDef><apiDesc>
		 This attribute specifies the length or size of the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/en/DOM/HTMLCollection"><linktext>MDC: HTMLCollection</linktext></link><link href="http://msdn.microsoft.com/en-us/library/ms534101%28VS.85%29.aspx"><linktext>MSDN: length Property</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#ID-40057551"><linktext>W3C - DOM HTML: HTMLCollection.length</linktext></link></related-links></apiValue></apiClassifier><apiClassifier id="dom.html.objects:HTMLOptionsCollection"><apiName>HTMLOptionsCollection</apiName><shortdesc>
	 An HTMLOptionsCollection is a list of nodes representing HTML option element.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiClassifierDetail><apiClassifierDef><apiAccess value="public"/><apiStatic/><apiBaseClassifier>Object</apiBaseClassifier></apiClassifierDef><apiDesc>
	 An HTMLOptionsCollection is a list of nodes representing HTML option element. 
	 An individual node may be accessed by either ordinal index or the node's 
	 name or id attributes.
	 
	 <p><b>Note:</b> Collections in the HTML DOM are assumed to be live meaning that they 
	 are automatically updated when the underlying document is changed.</p>
	 
	 </apiDesc></apiClassifierDetail><related-links><link href="http://developer.mozilla.org/En/DOM/HTMLOptionsCollection"><linktext>MDC: HTMLOptionsCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection"><linktext>W3C DOM HTML Specification: HTMLOptionsCollection</linktext></link></related-links><apiOperation id="dom.html.objects:HTMLOptionsCollection:item"><apiName>item</apiName><shortdesc>
		 This method retrieves a node specified by ordinal index.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The Node at the corresponding position upon success. A value 
		 of null is returned if the index is out of range.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>index</apiItemName><apiType value="Number"/><apiDesc>The index of the node to be fetched. The index 
		 origin is 0
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method retrieves a node specified by ordinal index. Nodes are 
		 numbered in tree order (depth-first traversal order).
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/HTMLOptionsCollection"><linktext>MDC: HTMLOptionsCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-item"><linktext>W3C DOM HTML Specification: HTMLOptionsCollection.item()</linktext></link></related-links></apiOperation><apiOperation id="dom.html.objects:HTMLOptionsCollection:namedItem"><apiName>namedItem</apiName><shortdesc>
		 This method retrieves a Node using a name.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiOperationDetail><apiOperationDef><apiAccess value="public"/><apiReturn><apiDesc>The Node with a name or id attribute whose value corresponds 
		 to the specified string. Upon failure (e.g., no node with this name 
		 exists), returns null.
		 
		 </apiDesc><apiOperationClassifier>dom.core:Node</apiOperationClassifier></apiReturn><apiParam><apiItemName>name</apiItemName><apiOperationClassifier>dom.core.types:DOMString</apiOperationClassifier><apiDesc>The name of the Node to be fetched.
		 </apiDesc></apiParam></apiOperationDef><apiDesc>
		 This method retrieves a Node using a name. It first searches for a 
		 Node with a matching id attribute. If it doesn't find one, it then 
		 searches for a Node with a matching name attribute, but only on those 
		 elements that are allowed a name attribute. This method is case 
		 insensitive in HTML documents and case sensitive in XHTML documents.
		 
		 </apiDesc></apiOperationDetail><related-links><link href="http://developer.mozilla.org/En/DOM/HTMLOptionsCollection"><linktext>MDC: HTMLOptionsCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-namedItem"><linktext>W3C DOM HTML Specification: HTMLOptionsCollection.namedItem()</linktext></link></related-links></apiOperation><apiValue id="dom.html.objects:HTMLOptionsCollection:length:get"><apiName>length</apiName><shortdesc>
		 This attribute specifies the length or size of the list.</shortdesc><prolog><asMetadata><apiVersion><apiPlatform description="" name="DOMHTML" version="2"/><apiSince version="DOMCore 2"/></apiVersion></asMetadata></prolog><apiValueDetail><apiValueDef><apiProperty/><apiAccess value="public"/><apiDynamic/><apiValueAccess value="readwrite"/><apiType value="Number"/><apiException><apiDesc>NOT_SUPPORTED_ERR: if setting the length 
		 is not allowed by the implementation.
		 
		 </apiDesc><apiItemName>DOMException</apiItemName><apiOperationClassifier>dom.core:DOMException</apiOperationClassifier></apiException></apiValueDef><apiDesc>
		 This attribute specifies the length or size of the list.
		 
		 </apiDesc></apiValueDetail><related-links><link href="http://developer.mozilla.org/En/DOM/HTMLOptionsCollection"><linktext>MDC: HTMLOptionsCollection</linktext></link><link href="http://www.w3.org/TR/DOM-Level-2-HTML/html.html#HTMLOptionsCollection-length"><linktext>W3C DOM HTML Specification: HTMLOptionsCollection.length</linktext></link></related-links></apiValue></apiClassifier></apiPackage>