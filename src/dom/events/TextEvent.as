package dom.events {
	
	import dom.core.types.DOMString;
	import dom.events.UIEvent;
	import dom.views.AbstractView;
	
	/**
	 * The TextEvent interface provides specific contextual information 
	 * associated with Text Events.
	 * 
	 * <p>To create an instance of the TextEvent interface, use the 
	 * DocumentEvent.createEvent("TextEvent") method call.</p>
	 * 
	 * @see http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-TextEvent W3C - DOM 3 Events: TextEvent
	 * 
	 * @playerversion DOMEvents 3
	 * @since DOMEvents 3
	 */
	public class TextEvent extends UIEvent {
		
		// Types
		/**
		 * One or more characters have been entered. 
		 * 
		 * <p>The characters can originate from a variety of sources. For example, it could be characters resulting 
		 * from a key being pressed or released on a keyboard device, characters resulting from the processing of an 
		 * input method editor, or resulting from a voice command. Where a "paste" operation generates a simple 
		 * sequence of characters, i.e. a text without any structure or style information, this event type should 
		 * be generated as well.</p>
		 * 
		 * <table class="innertable">
		 * <tr><th>Title</th><th>Value</th></tr>
		 * <tr>
		 * <td>Cancelable</td>
		 * <td>Yes</td>
		 * </tr>
		 * <tr>
		 * <td>Bubbles</td>
		 * <td>Yes</td>
		 * </tr>
		 * <tr>
		 * <td>Target</td>
		 * <td><code>Element</code></td>
		 * </tr>
		 * <tr>
		 * <td>Context info</td>
		 * <td>UIEvent.view and TextEvent.data are in use.</td>
		 * </tr>
		 * </table>
		 * 
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/events.html#event-textInput W3C - TextEvent.textInput
		 * 
		 * @playerversion DOMEvents 3
		 * @since DOMEvents 3
		 */
		public static const textInput:String ="textInput";
		
		/**
		 * Holds the value of the characters generated by the character device. 
		 * This may be a single Unicode character or a non-empty sequence of 
		 * Unicode characters [Unicode]. Characters should be normalized as 
		 * defined by the Unicode normalization form NFC, defined in [UAX #15]. 
		 * This attribute cannot be null or contain the empty string.
		 * 
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-UIEvent-data W3C - TextEvent.data
		 * @see http://www.unicode.org/versions/Unicode5.0.0/ Unicode
		 * @see http://www.unicode.org/reports/tr15/ UAX #15
		 * 
		 * @playerversion DOMEvents 3
		 * @since DOMEvents 3
		 */
		public function get data():DOMString { return null; };
		
		/**
		 * Initializes attributes of a TextEvent object. This method has the 
		 * same behavior as UIEvent.initUIEvent(). The value of UIEvent.detail remains undefined. 
		 * 
		 * @param	typeArg Specifies Event.type, the local name of the event type.
		 * @param	canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 * @param	cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 * @param	viewArg Specifies UIEvent.view. This value may be null.
		 * @param	dataArg Specifies TextEvent.data.
		 * 
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initTextEvent W3C - TextEvent.initTextEvent()
		 * @see dom.events.UIEvent#initUIEvent()
		 * 
		 * @playerversion DOMEvents 3
		 * @since DOMEvents 3
		 */
		public function initTextEvent(typeArg:DOMString, canBubbleArg:Boolean, cancelableArg:Boolean, viewArg:AbstractView, dataArg:DOMString):void { };
		
		/**
		 * Initializes attributes of a TextEvent object. This method has the same 
		 * behavior as UIEvent.initUIEventNS(). The value of UIEvent.detail remains undefined. 
		 * 
		 * @param	namespaceURIArg Specifies Event.namespaceURI, the namespace URI associated with this event, or null if no namespace.
		 * @param	typeArg Specifies Event.type, the local name of the event type.
		 * @param	canBubbleArg Specifies Event.bubbles. This parameter overrides the intrinsic bubbling behavior of the event.
		 * @param	cancelableArg Specifies Event.cancelable. This parameter overrides the intrinsic cancelable behavior of the event.
		 * @param	viewArg Specifies UIEvent.view. This value may be null.
		 * @param	dataArg Specifies TextEvent.data.
		 * 
		 * @see http://www.w3.org/TR/DOM-Level-3-Events/events.html#Events-Event-initTextEventNS W3C - TextEvent.initTextEventNS()
		 * @see dom.events.UIEvent#initUIEventNS()
		 * 
		 * @playerversion DOMEvents 3
		 * @since DOMEvents 3
		 */
		public function initTextEventNS(namespaceURIArg:DOMString, typeArg:DOMString, canBubbleArg:Boolean, cancelableArg:Boolean, viewArg:AbstractView, dataArg:DOMString):void { };
	}
}